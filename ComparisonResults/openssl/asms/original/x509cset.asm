; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509cset.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_X509_CRL_set_version
PUBLIC	_X509_CRL_set_issuer_name
PUBLIC	_X509_CRL_set_lastUpdate
PUBLIC	_X509_CRL_set_nextUpdate
PUBLIC	_X509_CRL_sort
PUBLIC	_X509_REVOKED_set_serialNumber
PUBLIC	_X509_REVOKED_set_revocationDate
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_sort:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_dup:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_INTEGER_set:PROC
EXTRN	_X509_NAME_set:PROC
; Function compile flags: /Ogtpy
;	COMDAT _X509_REVOKED_set_revocationDate
_TEXT	SEGMENT
_x$ = 8							; size = 4
_tm$ = 12						; size = 4
_X509_REVOKED_set_revocationDate PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509cset.c
; Line 136
	push	esi
; Line 139
	mov	esi, DWORD PTR _x$[esp]
	test	esi, esi
	jne	SHORT $LN2@X509_REVOK
; Line 140
	xor	eax, eax
	pop	esi
; Line 150
	ret	0
$LN2@X509_REVOK:
; Line 142
	mov	eax, DWORD PTR _tm$[esp]
	push	edi
	mov	edi, DWORD PTR [esi+4]
	cmp	edi, eax
	je	SHORT $LN4@X509_REVOK
; Line 143
	push	eax
	call	_ASN1_STRING_dup
	mov	edi, eax
	add	esp, 4
; Line 144
	test	edi, edi
	je	SHORT $LN4@X509_REVOK
; Line 145
	push	DWORD PTR [esi+4]
	call	_ASN1_STRING_free
	add	esp, 4
; Line 146
	mov	DWORD PTR [esi+4], edi
$LN4@X509_REVOK:
; Line 149
	xor	eax, eax
	test	edi, edi
	pop	edi
	setne	al
	pop	esi
; Line 150
	ret	0
_X509_REVOKED_set_revocationDate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_REVOKED_set_serialNumber
_TEXT	SEGMENT
_x$ = 8							; size = 4
_serial$ = 12						; size = 4
_X509_REVOKED_set_serialNumber PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509cset.c
; Line 153
	push	esi
; Line 156
	mov	esi, DWORD PTR _x$[esp]
	test	esi, esi
	jne	SHORT $LN2@X509_REVOK
; Line 157
	xor	eax, eax
	pop	esi
; Line 167
	ret	0
$LN2@X509_REVOK:
; Line 159
	mov	eax, DWORD PTR _serial$[esp]
	push	edi
	mov	edi, DWORD PTR [esi]
	cmp	edi, eax
	je	SHORT $LN4@X509_REVOK
; Line 160
	push	eax
	call	_ASN1_STRING_dup
	mov	edi, eax
	add	esp, 4
; Line 161
	test	edi, edi
	je	SHORT $LN4@X509_REVOK
; Line 162
	push	DWORD PTR [esi]
	call	_ASN1_STRING_free
	add	esp, 4
; Line 163
	mov	DWORD PTR [esi], edi
$LN4@X509_REVOK:
; Line 166
	xor	eax, eax
	test	edi, edi
	pop	edi
	setne	al
	pop	esi
; Line 167
	ret	0
_X509_REVOKED_set_serialNumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_sort
_TEXT	SEGMENT
_c$ = 8							; size = 4
_X509_CRL_sort PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509cset.c
; Line 120
	push	esi
	push	edi
; Line 126
	mov	edi, DWORD PTR _c$[esp+4]
	mov	eax, DWORD PTR [edi]
	push	DWORD PTR [eax+20]
	call	_sk_sort
; Line 127
	mov	eax, DWORD PTR [edi]
	xor	esi, esi
	push	DWORD PTR [eax+20]
	call	_sk_num
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN3@X509_CRL_s
$LL4@X509_CRL_s:
; Line 128
	mov	eax, DWORD PTR [edi]
	push	esi
	push	DWORD PTR [eax+20]
	call	_sk_value
; Line 129
	mov	DWORD PTR [eax+20], esi
	inc	esi
	mov	eax, DWORD PTR [edi]
	push	DWORD PTR [eax+20]
	call	_sk_num
	add	esp, 12					; 0000000cH
	cmp	esi, eax
	jl	SHORT $LL4@X509_CRL_s
$LN3@X509_CRL_s:
; Line 131
	mov	eax, DWORD PTR [edi]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax+36], 1
; Line 132
	mov	eax, 1
; Line 133
	ret	0
_X509_CRL_sort ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_set_nextUpdate
_TEXT	SEGMENT
_x$ = 8							; size = 4
_tm$ = 12						; size = 4
_X509_CRL_set_nextUpdate PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509cset.c
; Line 103
	push	edi
; Line 106
	mov	edi, DWORD PTR _x$[esp]
	test	edi, edi
	jne	SHORT $LN2@X509_CRL_s
; Line 107
	xor	eax, eax
	pop	edi
; Line 117
	ret	0
$LN2@X509_CRL_s:
; Line 108
	mov	eax, DWORD PTR [edi]
	push	esi
	mov	esi, DWORD PTR [eax+16]
; Line 109
	mov	eax, DWORD PTR _tm$[esp+4]
	cmp	esi, eax
	je	SHORT $LN4@X509_CRL_s
; Line 110
	push	eax
	call	_ASN1_STRING_dup
	mov	esi, eax
	add	esp, 4
; Line 111
	test	esi, esi
	je	SHORT $LN4@X509_CRL_s
; Line 112
	mov	ecx, DWORD PTR [edi]
	push	DWORD PTR [ecx+16]
	call	_ASN1_STRING_free
; Line 113
	mov	ecx, DWORD PTR [edi]
	add	esp, 4
	mov	DWORD PTR [ecx+16], esi
$LN4@X509_CRL_s:
; Line 116
	xor	eax, eax
	test	esi, esi
	pop	esi
	setne	al
	pop	edi
; Line 117
	ret	0
_X509_CRL_set_nextUpdate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_set_lastUpdate
_TEXT	SEGMENT
_x$ = 8							; size = 4
_tm$ = 12						; size = 4
_X509_CRL_set_lastUpdate PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509cset.c
; Line 86
	push	edi
; Line 89
	mov	edi, DWORD PTR _x$[esp]
	test	edi, edi
	jne	SHORT $LN2@X509_CRL_s
; Line 90
	xor	eax, eax
	pop	edi
; Line 100
	ret	0
$LN2@X509_CRL_s:
; Line 91
	mov	eax, DWORD PTR [edi]
	push	esi
	mov	esi, DWORD PTR [eax+12]
; Line 92
	mov	eax, DWORD PTR _tm$[esp+4]
	cmp	esi, eax
	je	SHORT $LN4@X509_CRL_s
; Line 93
	push	eax
	call	_ASN1_STRING_dup
	mov	esi, eax
	add	esp, 4
; Line 94
	test	esi, esi
	je	SHORT $LN4@X509_CRL_s
; Line 95
	mov	ecx, DWORD PTR [edi]
	push	DWORD PTR [ecx+12]
	call	_ASN1_STRING_free
; Line 96
	mov	ecx, DWORD PTR [edi]
	add	esp, 4
	mov	DWORD PTR [ecx+12], esi
$LN4@X509_CRL_s:
; Line 99
	xor	eax, eax
	test	esi, esi
	pop	esi
	setne	al
	pop	edi
; Line 100
	ret	0
_X509_CRL_set_lastUpdate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_set_issuer_name
_TEXT	SEGMENT
_x$ = 8							; size = 4
_name$ = 12						; size = 4
_X509_CRL_set_issuer_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509cset.c
; Line 80
	mov	eax, DWORD PTR _x$[esp-4]
	test	eax, eax
	je	SHORT $LN3@X509_CRL_s
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@X509_CRL_s
; Line 82
	add	eax, 8
	mov	DWORD PTR _x$[esp-4], eax
	jmp	_X509_NAME_set
$LN3@X509_CRL_s:
; Line 81
	xor	eax, eax
; Line 83
	ret	0
_X509_CRL_set_issuer_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_set_version
_TEXT	SEGMENT
_x$ = 8							; size = 4
_version$ = 12						; size = 4
_X509_CRL_set_version PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509cset.c
; Line 68
	push	esi
; Line 69
	mov	esi, DWORD PTR _x$[esp]
	test	esi, esi
	jne	SHORT $LN2@X509_CRL_s
$LN6@X509_CRL_s:
; Line 70
	xor	eax, eax
	pop	esi
; Line 76
	ret	0
$LN2@X509_CRL_s:
; Line 71
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@X509_CRL_s
; Line 72
	push	2
	call	_ASN1_STRING_type_new
	mov	ecx, DWORD PTR [esi]
	add	esp, 4
	mov	DWORD PTR [ecx], eax
	test	eax, eax
	je	SHORT $LN6@X509_CRL_s
$LN4@X509_CRL_s:
; Line 75
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR _version$[esp]
	push	DWORD PTR [eax]
	call	_ASN1_INTEGER_set
	add	esp, 8
	pop	esi
; Line 76
	ret	0
_X509_CRL_set_version ENDP
_TEXT	ENDS
END

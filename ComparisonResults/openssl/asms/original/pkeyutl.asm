; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\pkeyutl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_pkeyutl_main
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_08EKFDLJMA@?9sigfile?$AA@			; `string'
PUBLIC	??_C@_06JJMGFEBF@?9inkey?$AA@			; `string'
PUBLIC	??_C@_08JIHLOKEH@?9peerkey?$AA@			; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_09KDALHBAH@?9peerform?$AA@		; `string'
PUBLIC	??_C@_08OAHLMBGP@?9keyform?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_0N@FEJBABNG@?9engine_impl?$AA@		; `string'
PUBLIC	??_C@_06NLLOJDKN@?9pubin?$AA@			; `string'
PUBLIC	??_C@_07MBPOKNGC@?9certin?$AA@			; `string'
PUBLIC	??_C@_0L@MFHFHCDC@?9asn1parse?$AA@		; `string'
PUBLIC	??_C@_08INKHJOD@?9hexdump?$AA@			; `string'
PUBLIC	??_C@_05LLLFPBKO@?9sign?$AA@			; `string'
PUBLIC	??_C@_07FILEFCOC@?9verify?$AA@			; `string'
PUBLIC	??_C@_0P@IBDPBCGD@?9verifyrecover?$AA@		; `string'
PUBLIC	??_C@_08CNCNOCCN@?9encrypt?$AA@			; `string'
PUBLIC	??_C@_08ODIALGEJ@?9decrypt?$AA@			; `string'
PUBLIC	??_C@_07FCKECBCI@?9derive?$AA@			; `string'
PUBLIC	??_C@_04PGMDFMPL@?9rev?$AA@			; `string'
PUBLIC	??_C@_08JPLFCIIK@?9pkeyopt?$AA@			; `string'
PUBLIC	??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_0BM@IFBMKPJK@Error?5initializing?5context?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@HOAAAFHC@Error?5setting?5up?5peer?5key?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@ONFLDBED@parameter?5setting?5error?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@OJALFBNN@Signature?5file?5specified?5for?5non@ ; `string'
PUBLIC	??_C@_0CI@PCEHBCPB@No?5signature?5file?5specified?5for?5@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_0BK@FKCLKLJA@Error?5Opening?5Input?5File?6?$AA@ ; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_0BM@PIIFBFAM@Error?5Creating?5Output?5File?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@DBNEBIJA@Can?8t?5open?5signature?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@NOBLKHIO@Error?5reading?5signature?5data?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@OFLOPPEO@Signature?5Verification?5Failure?6?$AA@ ; `string'
PUBLIC	??_C@_0CB@PGCOBJH@Signature?5Verified?5Successfully?6@ ; `string'
PUBLIC	??_C@_0BB@CPAIPCCB@?4?2apps?2pkeyutl?4c?$AA@	; `string'
PUBLIC	??_C@_0BM@LDAIMLLF@Public?5Key?5operation?5error?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@JLENEOBM@Usage?3?5pkeyutl?5?$FLoptions?$FN?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0DG@IBCACDJH@?9sigfile?5file?5signature?5file?5?$CIve@ ; `string'
PUBLIC	??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@ ; `string'
PUBLIC	??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@ ; `string'
PUBLIC	??_C@_0CH@FAADBJPA@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5a?5publi@ ; `string'
PUBLIC	??_C@_0DO@JAPLMBFL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@ ; `string'
PUBLIC	??_C@_0CE@GFHHCJKD@?9pkeyopt?5X?3Y?5?5?5?5public?5key?5optio@ ; `string'
PUBLIC	??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@ ; `string'
PUBLIC	??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@ ; `string'
PUBLIC	??_C@_0DP@KIFIENFO@?9verifyrecover?5?5verify?5with?5publ@ ; `string'
PUBLIC	??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@ ; `string'
PUBLIC	??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@ ; `string'
PUBLIC	??_C@_0CG@FCOAPHMM@?9derive?5?5?5?5?5?5?5?5?5derive?5shared?5se@ ; `string'
PUBLIC	??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@ ; `string'
PUBLIC	??_C@_0EK@JMGPNOKO@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5ma@ ; `string'
PUBLIC	??_C@_0EI@LEJFGIFF@?9engine_impl?5?5?5?5also?5use?5engine?5@ ; `string'
PUBLIC	??_C@_0CE@LMDNEPBO@?9passin?5arg?5?5?5?5?5pass?5phrase?5sour@ ; `string'
PUBLIC	??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@ ; `string'
PUBLIC	??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; `string'
PUBLIC	??_C@_0M@NBDOOMPD@Private?5Key?$AA@		; `string'
PUBLIC	??_C@_0L@KEAMIOLD@Public?5Key?$AA@		; `string'
PUBLIC	??_C@_0M@KDOEPPNO@Certificate?$AA@		; `string'
PUBLIC	??_C@_08FBPOPADM@Peer?5Key?$AA@			; `string'
PUBLIC	??_C@_0BL@HJBIDLJN@Error?5reading?5peer?5key?5?$CFs?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__exit:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_dump:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ASN1_parse_dump:PROC
EXTRN	_OPENSSL_add_all_algorithms_noconf:PROC
EXTRN	_EVP_PKEY_size:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_PKEY_CTX_new:PROC
EXTRN	_EVP_PKEY_CTX_free:PROC
EXTRN	_EVP_PKEY_sign_init:PROC
EXTRN	_EVP_PKEY_sign:PROC
EXTRN	_EVP_PKEY_verify_init:PROC
EXTRN	_EVP_PKEY_verify:PROC
EXTRN	_EVP_PKEY_verify_recover_init:PROC
EXTRN	_EVP_PKEY_verify_recover:PROC
EXTRN	_EVP_PKEY_encrypt_init:PROC
EXTRN	_EVP_PKEY_encrypt:PROC
EXTRN	_EVP_PKEY_decrypt_init:PROC
EXTRN	_EVP_PKEY_decrypt:PROC
EXTRN	_EVP_PKEY_derive_init:PROC
EXTRN	_EVP_PKEY_derive_set_peer:PROC
EXTRN	_EVP_PKEY_derive:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_str2fmt:PROC
EXTRN	_app_passwd:PROC
EXTRN	_load_cert:PROC
EXTRN	_load_key:PROC
EXTRN	_load_pubkey:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_bio_to_mem:PROC
EXTRN	_pkey_ctrl_string:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
;	COMDAT ??_C@_0BL@HJBIDLJN@Error?5reading?5peer?5key?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BL@HJBIDLJN@Error?5reading?5peer?5key?5?$CFs?6?$AA@ DB 'Error read'
	DB	'ing peer key %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08FBPOPADM@Peer?5Key?$AA@
CONST	SEGMENT
??_C@_08FBPOPADM@Peer?5Key?$AA@ DB 'Peer Key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KDOEPPNO@Certificate?$AA@
CONST	SEGMENT
??_C@_0M@KDOEPPNO@Certificate?$AA@ DB 'Certificate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
CONST	SEGMENT
??_C@_0L@KEAMIOLD@Public?5Key?$AA@ DB 'Public Key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
CONST	SEGMENT
??_C@_0M@NBDOOMPD@Private?5Key?$AA@ DB 'Private Key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
CONST	SEGMENT
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ DB 'Error getting pass'
	DB	'word', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@
CONST	SEGMENT
??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@ DB 'A private '
	DB	'key is needed for this operation', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LMDNEPBO@?9passin?5arg?5?5?5?5?5pass?5phrase?5sour@
CONST	SEGMENT
??_C@_0CE@LMDNEPBO@?9passin?5arg?5?5?5?5?5pass?5phrase?5sour@ DB '-passin'
	DB	' arg     pass phrase source', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@LEJFGIFF@?9engine_impl?5?5?5?5also?5use?5engine?5@
CONST	SEGMENT
??_C@_0EI@LEJFGIFF@?9engine_impl?5?5?5?5also?5use?5engine?5@ DB '-engine_'
	DB	'impl    also use engine given by -engine for crypto operation'
	DB	's', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@JMGPNOKO@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5ma@
CONST	SEGMENT
??_C@_0EK@JMGPNOKO@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5ma@ DB '-en'
	DB	'gine e       use engine e, maybe a hardware device, for loadi'
	DB	'ng keys.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@
CONST	SEGMENT
??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@ DB '-hex'
	DB	'dump        hex dump output', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FCOAPHMM@?9derive?5?5?5?5?5?5?5?5?5derive?5shared?5se@
CONST	SEGMENT
??_C@_0CG@FCOAPHMM@?9derive?5?5?5?5?5?5?5?5?5derive?5shared?5se@ DB '-der'
	DB	'ive         derive shared secret', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@
CONST	SEGMENT
??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@ DB '-decr'
	DB	'ypt        decrypt with private key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@
CONST	SEGMENT
??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@ DB '-encr'
	DB	'ypt        encrypt with public key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KIFIENFO@?9verifyrecover?5?5verify?5with?5publ@
CONST	SEGMENT
??_C@_0DP@KIFIENFO@?9verifyrecover?5?5verify?5with?5publ@ DB '-verifyreco'
	DB	'ver  verify with public key, recover original data', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@
CONST	SEGMENT
??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@ DB '-ver'
	DB	'ify         verify with public key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@
CONST	SEGMENT
??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@ DB '-s'
	DB	'ign           sign with private key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GFHHCJKD@?9pkeyopt?5X?3Y?5?5?5?5public?5key?5optio@
CONST	SEGMENT
??_C@_0CE@GFHHCJKD@?9pkeyopt?5X?3Y?5?5?5?5public?5key?5optio@ DB '-pkeyop'
	DB	't X:Y    public key options', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@JAPLMBFL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@
CONST	SEGMENT
??_C@_0DO@JAPLMBFL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@ DB '-ce'
	DB	'rtin         input is a certificate carrying a public key', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@FAADBJPA@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5a?5publi@
CONST	SEGMENT
??_C@_0CH@FAADBJPA@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5a?5publi@ DB '-p'
	DB	'ubin          input is a public key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@
CONST	SEGMENT
??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@ DB '-keyform'
	DB	' arg    private key format - default PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@
CONST	SEGMENT
??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@ DB '-inkey fil'
	DB	'e     input key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@IBCACDJH@?9sigfile?5file?5signature?5file?5?$CIve@
CONST	SEGMENT
??_C@_0DG@IBCACDJH@?9sigfile?5file?5signature?5file?5?$CIve@ DB '-sigfile'
	DB	' file signature file (verify operation only)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@
CONST	SEGMENT
??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@ DB '-out '
	DB	'file       output file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@
CONST	SEGMENT
??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@ DB '-in f'
	DB	'ile        input file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JLENEOBM@Usage?3?5pkeyutl?5?$FLoptions?$FN?6?$AA@
CONST	SEGMENT
??_C@_0BK@JLENEOBM@Usage?3?5pkeyutl?5?$FLoptions?$FN?6?$AA@ DB 'Usage: pk'
	DB	'eyutl [options]', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LDAIMLLF@Public?5Key?5operation?5error?6?$AA@
CONST	SEGMENT
??_C@_0BM@LDAIMLLF@Public?5Key?5operation?5error?6?$AA@ DB 'Public Key op'
	DB	'eration error', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CPAIPCCB@?4?2apps?2pkeyutl?4c?$AA@
CONST	SEGMENT
??_C@_0BB@CPAIPCCB@?4?2apps?2pkeyutl?4c?$AA@ DB '.\apps\pkeyutl.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PGCOBJH@Signature?5Verified?5Successfully?6@
CONST	SEGMENT
??_C@_0CB@PGCOBJH@Signature?5Verified?5Successfully?6@ DB 'Signature Veri'
	DB	'fied Successfully', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OFLOPPEO@Signature?5Verification?5Failure?6?$AA@
CONST	SEGMENT
??_C@_0CA@OFLOPPEO@Signature?5Verification?5Failure?6?$AA@ DB 'Signature '
	DB	'Verification Failure', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@
CONST	SEGMENT
??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@ DB 'Error reading i'
	DB	'nput Data', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NOBLKHIO@Error?5reading?5signature?5data?6?$AA@
CONST	SEGMENT
??_C@_0BO@NOBLKHIO@Error?5reading?5signature?5data?6?$AA@ DB 'Error readi'
	DB	'ng signature data', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DBNEBIJA@Can?8t?5open?5signature?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BO@DBNEBIJA@Can?8t?5open?5signature?5file?5?$CFs?6?$AA@ DB 'Can''t'
	DB	' open signature file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PIIFBFAM@Error?5Creating?5Output?5File?6?$AA@
CONST	SEGMENT
??_C@_0BM@PIIFBFAM@Error?5Creating?5Output?5File?6?$AA@ DB 'Error Creatin'
	DB	'g Output File', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FKCLKLJA@Error?5Opening?5Input?5File?6?$AA@
CONST	SEGMENT
??_C@_0BK@FKCLKLJA@Error?5Opening?5Input?5File?6?$AA@ DB 'Error Opening I'
	DB	'nput File', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PCEHBCPB@No?5signature?5file?5specified?5for?5@
CONST	SEGMENT
??_C@_0CI@PCEHBCPB@No?5signature?5file?5specified?5for?5@ DB 'No signatur'
	DB	'e file specified for verify', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OJALFBNN@Signature?5file?5specified?5for?5non@
CONST	SEGMENT
??_C@_0CJ@OJALFBNN@Signature?5file?5specified?5for?5non@ DB 'Signature fi'
	DB	'le specified for non verify', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ONFLDBED@parameter?5setting?5error?6?$AA@
CONST	SEGMENT
??_C@_0BJ@ONFLDBED@parameter?5setting?5error?6?$AA@ DB 'parameter setting'
	DB	' error', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HOAAAFHC@Error?5setting?5up?5peer?5key?6?$AA@
CONST	SEGMENT
??_C@_0BL@HOAAAFHC@Error?5setting?5up?5peer?5key?6?$AA@ DB 'Error setting'
	DB	' up peer key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IFBMKPJK@Error?5initializing?5context?6?$AA@
CONST	SEGMENT
??_C@_0BM@IFBMKPJK@Error?5initializing?5context?6?$AA@ DB 'Error initiali'
	DB	'zing context', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@ DB 'out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JPLFCIIK@?9pkeyopt?$AA@
CONST	SEGMENT
??_C@_08JPLFCIIK@?9pkeyopt?$AA@ DB '-pkeyopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PGMDFMPL@?9rev?$AA@
CONST	SEGMENT
??_C@_04PGMDFMPL@?9rev?$AA@ DB '-rev', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FCKECBCI@?9derive?$AA@
CONST	SEGMENT
??_C@_07FCKECBCI@?9derive?$AA@ DB '-derive', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ODIALGEJ@?9decrypt?$AA@
CONST	SEGMENT
??_C@_08ODIALGEJ@?9decrypt?$AA@ DB '-decrypt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CNCNOCCN@?9encrypt?$AA@
CONST	SEGMENT
??_C@_08CNCNOCCN@?9encrypt?$AA@ DB '-encrypt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IBDPBCGD@?9verifyrecover?$AA@
CONST	SEGMENT
??_C@_0P@IBDPBCGD@?9verifyrecover?$AA@ DB '-verifyrecover', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FILEFCOC@?9verify?$AA@
CONST	SEGMENT
??_C@_07FILEFCOC@?9verify?$AA@ DB '-verify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LLLFPBKO@?9sign?$AA@
CONST	SEGMENT
??_C@_05LLLFPBKO@?9sign?$AA@ DB '-sign', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08INKHJOD@?9hexdump?$AA@
CONST	SEGMENT
??_C@_08INKHJOD@?9hexdump?$AA@ DB '-hexdump', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MFHFHCDC@?9asn1parse?$AA@
CONST	SEGMENT
??_C@_0L@MFHFHCDC@?9asn1parse?$AA@ DB '-asn1parse', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MBPOKNGC@?9certin?$AA@
CONST	SEGMENT
??_C@_07MBPOKNGC@?9certin?$AA@ DB '-certin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NLLOJDKN@?9pubin?$AA@
CONST	SEGMENT
??_C@_06NLLOJDKN@?9pubin?$AA@ DB '-pubin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FEJBABNG@?9engine_impl?$AA@
CONST	SEGMENT
??_C@_0N@FEJBABNG@?9engine_impl?$AA@ DB '-engine_impl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAHLMBGP@?9keyform?$AA@
CONST	SEGMENT
??_C@_08OAHLMBGP@?9keyform?$AA@ DB '-keyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KDALHBAH@?9peerform?$AA@
CONST	SEGMENT
??_C@_09KDALHBAH@?9peerform?$AA@ DB '-peerform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JIHLOKEH@?9peerkey?$AA@
CONST	SEGMENT
??_C@_08JIHLOKEH@?9peerkey?$AA@ DB '-peerkey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JJMGFEBF@?9inkey?$AA@
CONST	SEGMENT
??_C@_06JJMGFEBF@?9inkey?$AA@ DB '-inkey', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EKFDLJMA@?9sigfile?$AA@
CONST	SEGMENT
??_C@_08EKFDLJMA@?9sigfile?$AA@ DB '-sigfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkeyutl_main
_TEXT	SEGMENT
_rev$1$ = -87						; size = 1
_asn1parse$1$ = -86					; size = 1
_hexdump$1$ = -85					; size = 1
_pkey_op$1$ = -84					; size = 4
_peerkey$1$ = -80					; size = 4
_key_type$1$ = -76					; size = 4
_inkey$1$ = -72						; size = 4
_buf_in$ = -68						; size = 4
_buf_outlen$ = -64					; size = 4
_pkeyopts$1$ = -60					; size = 4
_in$1$ = -56						; size = 4
_buf_inlen$1$ = -52					; size = 4
_sig$ = -48						; size = 4
_engine_impl$1$ = -44					; size = 4
_e$1$ = -40						; size = 4
_passargin$1$ = -36					; size = 4
_keyform$1$ = -32					; size = 4
_peerform$1$ = -28					; size = 4
_sigfile$1$ = -24					; size = 4
_infile$1$ = -20					; size = 4
_outfile$1$ = -16					; size = 4
_keysize$ = -12						; size = 4
_siglen$1$ = -8						; size = 4
_buf_out$1$ = -4					; size = 4
_out$1$ = 8						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_pkeyutl_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\pkeyutl.c
; Line 90
	mov	eax, 88					; 00000058H
	call	__chkstk
	push	ebx
; Line 92
	xor	eax, eax
	mov	DWORD PTR _in$1$[esp+92], 0
	push	ebp
	push	esi
	push	edi
	xor	ebx, ebx
	mov	DWORD PTR _infile$1$[esp+104], eax
; Line 93
	xor	edi, edi
	mov	DWORD PTR _sigfile$1$[esp+104], ebx
; Line 112
	mov	ebx, DWORD PTR _argv$[esp+100]
	xor	cl, cl
	mov	DWORD PTR _e$1$[esp+104], edi
	xor	ebp, ebp
	mov	edi, DWORD PTR _argc$[esp+100]
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+104], eax
	dec	edi
	mov	BYTE PTR _rev$1$[esp+104], cl
	mov	BYTE PTR _hexdump$1$[esp+104], cl
	mov	BYTE PTR _asn1parse$1$[esp+104], cl
	xor	ecx, ecx
	mov	DWORD PTR _buf_in$[esp+104], eax
	mov	DWORD PTR _buf_out$1$[esp+104], eax
	mov	DWORD PTR _sig$[esp+104], eax
	mov	DWORD PTR _buf_outlen$[esp+104], eax
	mov	DWORD PTR _buf_inlen$1$[esp+104], eax
	mov	DWORD PTR _inkey$1$[esp+104], eax
	mov	DWORD PTR _peerkey$1$[esp+104], eax
; Line 114
	mov	eax, DWORD PTR _bio_err
	mov	DWORD PTR _pkey_op$1$[esp+104], 8
	mov	DWORD PTR _key_type$1$[esp+104], 1
	mov	DWORD PTR _keyform$1$[esp+104], 3
	mov	DWORD PTR _peerform$1$[esp+104], 3
	mov	DWORD PTR _passargin$1$[esp+104], ecx
	mov	DWORD PTR _keysize$[esp+104], -1
	mov	DWORD PTR _engine_impl$1$[esp+104], ecx
	mov	DWORD PTR _siglen$1$[esp+104], -1
	mov	DWORD PTR _pkeyopts$1$[esp+104], ebp
	test	eax, eax
	jne	SHORT $LN10@pkeyutl_ma
; Line 115
	push	eax
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _bio_err, eax
$LN10@pkeyutl_ma:
; Line 117
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN239@pkeyutl_ma
; Line 119
	call	_ERR_load_crypto_strings
; Line 120
	call	_OPENSSL_add_all_algorithms_noconf
; Line 122
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
	npad	5
$LL2@pkeyutl_ma:
; Line 123
	mov	esi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, esi
	npad	7
$LL150@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN151@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN152@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN151@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL150@pkeyutl_ma
$LN152@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN153@pkeyutl_ma
$LN151@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN153@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN12@pkeyutl_ma
; Line 124
	dec	edi
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
; Line 127
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _infile$1$[esp+104], eax
; Line 128
	jmp	$LN246@pkeyutl_ma
$LN12@pkeyutl_ma:
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, esi
	npad	7
$LL154@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN155@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN156@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN155@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL154@pkeyutl_ma
$LN156@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN157@pkeyutl_ma
$LN155@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN157@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN16@pkeyutl_ma
; Line 129
	dec	edi
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
; Line 132
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+104], eax
; Line 133
	jmp	$LN246@pkeyutl_ma
$LN16@pkeyutl_ma:
	mov	ecx, OFFSET ??_C@_08EKFDLJMA@?9sigfile?$AA@
	mov	eax, esi
	npad	7
$LL158@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN159@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN160@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN159@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL158@pkeyutl_ma
$LN160@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN161@pkeyutl_ma
$LN159@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN161@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN20@pkeyutl_ma
; Line 134
	dec	edi
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
; Line 137
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _sigfile$1$[esp+104], eax
; Line 138
	jmp	$LN246@pkeyutl_ma
$LN20@pkeyutl_ma:
	mov	ecx, OFFSET ??_C@_06JJMGFEBF@?9inkey?$AA@
	mov	eax, esi
	npad	7
$LL162@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN163@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN164@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN163@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL162@pkeyutl_ma
$LN164@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN165@pkeyutl_ma
$LN163@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN165@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN24@pkeyutl_ma
; Line 139
	dec	edi
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
; Line 142
	mov	edx, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _inkey$1$[esp+104], edx
; Line 143
	jmp	$LN247@pkeyutl_ma
$LN24@pkeyutl_ma:
	mov	ecx, OFFSET ??_C@_08JIHLOKEH@?9peerkey?$AA@
	mov	eax, esi
	npad	7
$LL166@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN167@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN168@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN167@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL166@pkeyutl_ma
$LN168@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN169@pkeyutl_ma
$LN167@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN169@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN28@pkeyutl_ma
; Line 144
	dec	edi
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
; Line 147
	mov	ecx, DWORD PTR [ebx+4]
	add	ebx, 4
; Line 148
	mov	edx, DWORD PTR _inkey$1$[esp+104]
	mov	DWORD PTR _peerkey$1$[esp+104], ecx
	jmp	$LN248@pkeyutl_ma
$LN28@pkeyutl_ma:
	mov	ecx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	eax, esi
	npad	3
$LL170@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN171@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN172@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN171@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL170@pkeyutl_ma
$LN172@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN173@pkeyutl_ma
$LN171@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN173@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN32@pkeyutl_ma
; Line 149
	dec	edi
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
; Line 152
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _passargin$1$[esp+104], eax
; Line 153
	jmp	$LN246@pkeyutl_ma
$LN32@pkeyutl_ma:
	mov	ecx, OFFSET ??_C@_09KDALHBAH@?9peerform?$AA@
	mov	eax, esi
	npad	7
$LL174@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN175@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN176@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN175@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL174@pkeyutl_ma
$LN176@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN177@pkeyutl_ma
$LN175@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN177@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN36@pkeyutl_ma
; Line 154
	dec	edi
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
; Line 157
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _peerform$1$[esp+104], eax
; Line 158
	jmp	$LN246@pkeyutl_ma
$LN36@pkeyutl_ma:
	mov	ecx, OFFSET ??_C@_08OAHLMBGP@?9keyform?$AA@
	mov	eax, esi
$LL178@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN179@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN180@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN179@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL178@pkeyutl_ma
$LN180@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN181@pkeyutl_ma
$LN179@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN181@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN40@pkeyutl_ma
; Line 159
	dec	edi
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
; Line 162
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _keyform$1$[esp+104], eax
; Line 163
	jmp	$LN246@pkeyutl_ma
$LN40@pkeyutl_ma:
; Line 165
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, esi
$LL182@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN183@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN184@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN183@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL182@pkeyutl_ma
$LN184@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN185@pkeyutl_ma
$LN183@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN185@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN44@pkeyutl_ma
; Line 166
	dec	edi
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
; Line 169
	add	ebx, 4
	push	eax
	push	DWORD PTR [ebx]
	push	DWORD PTR _bio_err
	call	_setup_engine
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _e$1$[esp+104], eax
; Line 170
	jmp	$LN246@pkeyutl_ma
$LN44@pkeyutl_ma:
	mov	ecx, OFFSET ??_C@_0N@FEJBABNG@?9engine_impl?$AA@
	mov	eax, esi
	npad	7
$LL186@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN187@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN188@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN187@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL186@pkeyutl_ma
$LN188@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN189@pkeyutl_ma
$LN187@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN189@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN48@pkeyutl_ma
; Line 171
	mov	DWORD PTR _engine_impl$1$[esp+104], 1
; Line 172
	jmp	$LN246@pkeyutl_ma
$LN48@pkeyutl_ma:
; Line 174
	mov	ecx, OFFSET ??_C@_06NLLOJDKN@?9pubin?$AA@
	mov	eax, esi
	npad	3
$LL190@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN191@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN192@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN191@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL190@pkeyutl_ma
$LN192@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN193@pkeyutl_ma
$LN191@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN193@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN50@pkeyutl_ma
; Line 175
	mov	ecx, DWORD PTR _peerkey$1$[esp+104]
	mov	eax, 2
	mov	edx, DWORD PTR _inkey$1$[esp+104]
	mov	DWORD PTR _key_type$1$[esp+104], eax
	jmp	$LN249@pkeyutl_ma
$LN50@pkeyutl_ma:
; Line 176
	mov	ecx, OFFSET ??_C@_07MBPOKNGC@?9certin?$AA@
	mov	eax, esi
$LL194@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN195@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN196@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN195@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL194@pkeyutl_ma
$LN196@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN197@pkeyutl_ma
$LN195@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN197@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN52@pkeyutl_ma
; Line 177
	mov	ecx, DWORD PTR _peerkey$1$[esp+104]
	mov	eax, 3
	mov	edx, DWORD PTR _inkey$1$[esp+104]
	mov	DWORD PTR _key_type$1$[esp+104], eax
	jmp	$LN249@pkeyutl_ma
$LN52@pkeyutl_ma:
; Line 178
	mov	ecx, OFFSET ??_C@_0L@MFHFHCDC@?9asn1parse?$AA@
	mov	eax, esi
	npad	4
$LL198@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN199@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN200@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN199@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL198@pkeyutl_ma
$LN200@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN201@pkeyutl_ma
$LN199@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN201@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN54@pkeyutl_ma
; Line 179
	mov	BYTE PTR _asn1parse$1$[esp+104], 1
	jmp	$LN246@pkeyutl_ma
$LN54@pkeyutl_ma:
; Line 180
	mov	ecx, OFFSET ??_C@_08INKHJOD@?9hexdump?$AA@
	mov	eax, esi
	npad	6
$LL202@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN203@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN204@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN203@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL202@pkeyutl_ma
$LN204@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN205@pkeyutl_ma
$LN203@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN205@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN56@pkeyutl_ma
; Line 181
	mov	BYTE PTR _hexdump$1$[esp+104], 1
	jmp	$LN246@pkeyutl_ma
$LN56@pkeyutl_ma:
; Line 182
	mov	ecx, OFFSET ??_C@_05LLLFPBKO@?9sign?$AA@
	mov	eax, esi
	npad	6
$LL206@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN207@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN208@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN207@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL206@pkeyutl_ma
$LN208@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN209@pkeyutl_ma
$LN207@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN209@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN58@pkeyutl_ma
; Line 183
	mov	eax, DWORD PTR _key_type$1$[esp+104]
	mov	esi, 8
	mov	ecx, DWORD PTR _peerkey$1$[esp+104]
	mov	edx, DWORD PTR _inkey$1$[esp+104]
	mov	DWORD PTR _pkey_op$1$[esp+104], esi
	jmp	$LN138@pkeyutl_ma
$LN58@pkeyutl_ma:
; Line 184
	mov	ecx, OFFSET ??_C@_07FILEFCOC@?9verify?$AA@
	mov	eax, esi
	npad	6
$LL210@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN211@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN212@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN211@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL210@pkeyutl_ma
$LN212@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN213@pkeyutl_ma
$LN211@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN213@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN60@pkeyutl_ma
; Line 185
	mov	eax, DWORD PTR _key_type$1$[esp+104]
	mov	esi, 16					; 00000010H
	mov	ecx, DWORD PTR _peerkey$1$[esp+104]
	mov	edx, DWORD PTR _inkey$1$[esp+104]
	mov	DWORD PTR _pkey_op$1$[esp+104], esi
	jmp	$LN138@pkeyutl_ma
$LN60@pkeyutl_ma:
; Line 186
	mov	ecx, OFFSET ??_C@_0P@IBDPBCGD@?9verifyrecover?$AA@
	mov	eax, esi
	npad	6
$LL214@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN215@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN216@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN215@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL214@pkeyutl_ma
$LN216@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN217@pkeyutl_ma
$LN215@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN217@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN62@pkeyutl_ma
; Line 187
	mov	eax, DWORD PTR _key_type$1$[esp+104]
	mov	esi, 32					; 00000020H
	mov	ecx, DWORD PTR _peerkey$1$[esp+104]
	mov	edx, DWORD PTR _inkey$1$[esp+104]
	mov	DWORD PTR _pkey_op$1$[esp+104], esi
	jmp	$LN138@pkeyutl_ma
$LN62@pkeyutl_ma:
; Line 188
	mov	ecx, OFFSET ??_C@_08CNCNOCCN@?9encrypt?$AA@
	mov	eax, esi
	npad	6
$LL218@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN219@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN220@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN219@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL218@pkeyutl_ma
$LN220@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN221@pkeyutl_ma
$LN219@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN221@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN64@pkeyutl_ma
; Line 189
	mov	eax, DWORD PTR _key_type$1$[esp+104]
	mov	esi, 256				; 00000100H
	mov	ecx, DWORD PTR _peerkey$1$[esp+104]
	mov	edx, DWORD PTR _inkey$1$[esp+104]
	mov	DWORD PTR _pkey_op$1$[esp+104], esi
	jmp	$LN138@pkeyutl_ma
$LN64@pkeyutl_ma:
; Line 190
	mov	ecx, OFFSET ??_C@_08ODIALGEJ@?9decrypt?$AA@
	mov	eax, esi
	npad	6
$LL222@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN223@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN224@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN223@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL222@pkeyutl_ma
$LN224@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN225@pkeyutl_ma
$LN223@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN225@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN66@pkeyutl_ma
; Line 191
	mov	eax, DWORD PTR _key_type$1$[esp+104]
	mov	esi, 512				; 00000200H
	mov	ecx, DWORD PTR _peerkey$1$[esp+104]
	mov	edx, DWORD PTR _inkey$1$[esp+104]
	mov	DWORD PTR _pkey_op$1$[esp+104], esi
	jmp	$LN138@pkeyutl_ma
$LN66@pkeyutl_ma:
; Line 192
	mov	ecx, OFFSET ??_C@_07FCKECBCI@?9derive?$AA@
	mov	eax, esi
	npad	6
$LL226@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN227@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN228@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN227@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL226@pkeyutl_ma
$LN228@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN229@pkeyutl_ma
$LN227@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN229@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN68@pkeyutl_ma
; Line 193
	mov	eax, DWORD PTR _key_type$1$[esp+104]
	mov	esi, 1024				; 00000400H
	mov	ecx, DWORD PTR _peerkey$1$[esp+104]
	mov	edx, DWORD PTR _inkey$1$[esp+104]
	mov	DWORD PTR _pkey_op$1$[esp+104], esi
	jmp	$LN138@pkeyutl_ma
$LN68@pkeyutl_ma:
; Line 194
	mov	ecx, OFFSET ??_C@_04PGMDFMPL@?9rev?$AA@
	mov	eax, esi
	npad	6
$LL230@pkeyutl_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN231@pkeyutl_ma
	test	dl, dl
	je	SHORT $LN232@pkeyutl_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN231@pkeyutl_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL230@pkeyutl_ma
$LN232@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN233@pkeyutl_ma
$LN231@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN233@pkeyutl_ma:
	test	eax, eax
	jne	SHORT $LN70@pkeyutl_ma
; Line 195
	mov	BYTE PTR _rev$1$[esp+104], 1
	jmp	SHORT $LN246@pkeyutl_ma
$LN70@pkeyutl_ma:
; Line 196
	mov	eax, OFFSET ??_C@_08JPLFCIIK@?9pkeyopt?$AA@
$LL234@pkeyutl_ma:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN235@pkeyutl_ma
	test	cl, cl
	je	SHORT $LN236@pkeyutl_ma
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN235@pkeyutl_ma
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL234@pkeyutl_ma
$LN236@pkeyutl_ma:
	xor	eax, eax
	jmp	SHORT $LN237@pkeyutl_ma
$LN235@pkeyutl_ma:
	sbb	eax, eax
	or	eax, 1
$LN237@pkeyutl_ma:
	test	eax, eax
	jne	$LN81@pkeyutl_ma
; Line 197
	dec	edi
	cmp	edi, 1
	jl	$LN81@pkeyutl_ma
; Line 200
	test	ebp, ebp
	jne	SHORT $LN78@pkeyutl_ma
	call	_sk_new_null
	mov	ebp, eax
	mov	DWORD PTR _pkeyopts$1$[esp+104], ebp
	test	ebp, ebp
	je	$LN77@pkeyutl_ma
$LN78@pkeyutl_ma:
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	push	ebp
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN77@pkeyutl_ma
$LN246@pkeyutl_ma:
	mov	edx, DWORD PTR _inkey$1$[esp+104]
$LN247@pkeyutl_ma:
	mov	ecx, DWORD PTR _peerkey$1$[esp+104]
$LN248@pkeyutl_ma:
	mov	eax, DWORD PTR _key_type$1$[esp+104]
$LN249@pkeyutl_ma:
	mov	esi, DWORD PTR _pkey_op$1$[esp+104]
$LN138@pkeyutl_ma:
; Line 211
	dec	edi
; Line 212
	add	ebx, 4
	cmp	edi, 1
	jge	$LL2@pkeyutl_ma
; Line 215
	test	edx, edx
	je	$LN81@pkeyutl_ma
	test	ecx, ecx
	je	SHORT $LN80@pkeyutl_ma
	cmp	esi, 1024				; 00000400H
	jne	$LN81@pkeyutl_ma
$LN80@pkeyutl_ma:
; Line 220
	mov	ecx, DWORD PTR _engine_impl$1$[esp+104]
	mov	edi, DWORD PTR _e$1$[esp+104]
	push	ecx
	mov	ecx, DWORD PTR _passargin$1$[esp+108]
	push	edi
	push	esi
	push	ecx
	push	eax
	mov	eax, DWORD PTR _keyform$1$[esp+124]
	push	eax
	push	edx
	lea	eax, DWORD PTR _keysize$[esp+132]
	push	eax
	call	_init_ctx
	mov	ebp, eax
	add	esp, 32					; 00000020H
; Line 222
	test	ebp, ebp
	jne	SHORT $LN82@pkeyutl_ma
; Line 223
	push	OFFSET ??_C@_0BM@IFBMKPJK@Error?5initializing?5context?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 224
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 225
	mov	ebp, DWORD PTR _pkeyopts$1$[esp+116]
	add	esp, 12					; 0000000cH
	jmp	$LN239@pkeyutl_ma
$LN82@pkeyutl_ma:
; Line 227
	mov	eax, DWORD PTR _peerkey$1$[esp+104]
	test	eax, eax
	je	SHORT $LN83@pkeyutl_ma
	push	edi
	push	eax
	mov	eax, DWORD PTR _peerform$1$[esp+112]
	push	eax
	push	ebp
	push	DWORD PTR _bio_err
	call	_setup_peer
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN83@pkeyutl_ma
; Line 228
	push	OFFSET ??_C@_0BL@HOAAAFHC@Error?5setting?5up?5peer?5key?6?$AA@
$LN251@pkeyutl_ma:
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 229
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 230
	xor	esi, esi
	jmp	$LN250@pkeyutl_ma
$LN83@pkeyutl_ma:
; Line 232
	mov	ebx, DWORD PTR _pkeyopts$1$[esp+104]
	test	ebx, ebx
	je	SHORT $LN5@pkeyutl_ma
; Line 233
	push	ebx
	call	_sk_num
	mov	edi, eax
	add	esp, 4
; Line 236
	xor	esi, esi
	test	edi, edi
	jle	SHORT $LN238@pkeyutl_ma
$LL6@pkeyutl_ma:
; Line 237
	push	esi
	push	ebx
	call	_sk_value
; Line 239
	push	eax
	push	ebp
	call	_pkey_ctrl_string
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $LN126@pkeyutl_ma
; Line 236
	inc	esi
	cmp	esi, edi
	jl	SHORT $LL6@pkeyutl_ma
$LN238@pkeyutl_ma:
	mov	esi, DWORD PTR _pkey_op$1$[esp+104]
$LN5@pkeyutl_ma:
; Line 247
	mov	ebx, DWORD PTR _sigfile$1$[esp+104]
	test	ebx, ebx
	je	SHORT $LN137@pkeyutl_ma
	cmp	esi, 16					; 00000010H
	je	SHORT $LN87@pkeyutl_ma
; Line 248
	push	OFFSET ??_C@_0CJ@OJALFBNN@Signature?5file?5specified?5for?5non@
	push	DWORD PTR _bio_err
	call	_BIO_puts
	add	esp, 8
	xor	esi, esi
	jmp	$LN250@pkeyutl_ma
$LN126@pkeyutl_ma:
; Line 240
	push	OFFSET ??_C@_0BJ@ONFLDBED@parameter?5setting?5error?6?$AA@
; Line 242
	jmp	$LN251@pkeyutl_ma
$LN137@pkeyutl_ma:
; Line 252
	cmp	esi, 16					; 00000010H
	jne	SHORT $LN87@pkeyutl_ma
; Line 253
	push	OFFSET ??_C@_0CI@PCEHBCPB@No?5signature?5file?5specified?5for?5@
	push	DWORD PTR _bio_err
	call	_BIO_puts
	add	esp, 8
	xor	esi, esi
	jmp	$LN250@pkeyutl_ma
$LN87@pkeyutl_ma:
; Line 258
	push	0
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_load_file
	add	esp, 12					; 0000000cH
; Line 260
	cmp	esi, 1024				; 00000400H
	je	SHORT $LN244@pkeyutl_ma
; Line 261
	mov	eax, DWORD PTR _infile$1$[esp+104]
	test	eax, eax
	je	SHORT $LN89@pkeyutl_ma
; Line 262
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	eax
	call	_BIO_new_file
	mov	ecx, eax
	add	esp, 8
	mov	DWORD PTR _in$1$[esp+104], ecx
	test	ecx, ecx
	jne	SHORT $LN244@pkeyutl_ma
; Line 263
	push	OFFSET ??_C@_0BK@FKCLKLJA@Error?5Opening?5Input?5File?6?$AA@
; Line 265
	jmp	$LN251@pkeyutl_ma
$LN89@pkeyutl_ma:
; Line 268
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	0
	push	0
	call	esi
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _in$1$[esp+104], eax
	jmp	SHORT $LN90@pkeyutl_ma
$LN244@pkeyutl_ma:
	mov	esi, DWORD PTR __imp____acrt_iob_func
$LN90@pkeyutl_ma:
; Line 271
	mov	eax, DWORD PTR _outfile$1$[esp+104]
	test	eax, eax
	je	SHORT $LN92@pkeyutl_ma
; Line 272
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	eax
	call	_BIO_new_file
	add	esp, 8
	mov	DWORD PTR _out$1$[esp+100], eax
	test	eax, eax
	jne	SHORT $LN93@pkeyutl_ma
; Line 273
	push	OFFSET ??_C@_0BM@PIIFBFAM@Error?5Creating?5Output?5File?6?$AA@
; Line 275
	jmp	$LN253@pkeyutl_ma
$LN92@pkeyutl_ma:
; Line 278
	push	0
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _out$1$[esp+100], eax
$LN93@pkeyutl_ma:
; Line 287
	mov	esi, DWORD PTR _keysize$[esp+104]
	test	ebx, ebx
	je	SHORT $LN97@pkeyutl_ma
; Line 288
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	ebx
	call	_BIO_new_file
	mov	edi, eax
	add	esp, 8
; Line 289
	test	edi, edi
	jne	SHORT $LN96@pkeyutl_ma
; Line 290
	push	ebx
	push	OFFSET ??_C@_0BO@DBNEBIJA@Can?8t?5open?5signature?5file?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 291
	jmp	$LN254@pkeyutl_ma
$LN96@pkeyutl_ma:
; Line 293
	lea	eax, DWORD PTR [esi+esi*4]
	add	eax, eax
	push	edi
	push	eax
	lea	eax, DWORD PTR _sig$[esp+112]
	push	eax
	call	_bio_to_mem
	mov	ebx, eax
; Line 294
	push	edi
	mov	DWORD PTR _siglen$1$[esp+120], ebx
	call	_BIO_free
	add	esp, 16					; 00000010H
; Line 295
	test	ebx, ebx
	jns	SHORT $LN97@pkeyutl_ma
; Line 296
	push	OFFSET ??_C@_0BO@NOBLKHIO@Error?5reading?5signature?5data?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 297
	jmp	$LN240@pkeyutl_ma
$LN97@pkeyutl_ma:
; Line 301
	mov	eax, DWORD PTR _in$1$[esp+104]
	test	eax, eax
	je	SHORT $LN242@pkeyutl_ma
; Line 303
	push	eax
	lea	eax, DWORD PTR [esi+esi*4]
	add	eax, eax
	push	eax
	lea	eax, DWORD PTR _buf_in$[esp+112]
	push	eax
	call	_bio_to_mem
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf_inlen$1$[esp+104], eax
; Line 304
	test	eax, eax
	jns	SHORT $LN99@pkeyutl_ma
; Line 305
	push	OFFSET ??_C@_0BK@PFCBAOGC@Error?5reading?5input?5Data?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 306
	push	1
	call	DWORD PTR __imp__exit
$LN256@pkeyutl_ma:
$LN99@pkeyutl_ma:
; Line 308
	mov	cl, BYTE PTR _rev$1$[esp+104]
	test	cl, cl
	je	SHORT $LN8@pkeyutl_ma
; Line 312
	mov	ebx, eax
	mov	edi, 0
	shr	ebx, 1
	je	SHORT $LN8@pkeyutl_ma
	mov	esi, eax
$LL9@pkeyutl_ma:
; Line 313
	mov	eax, DWORD PTR _buf_in$[esp+104]
	lea	esi, DWORD PTR [esi-1]
	mov	dl, BYTE PTR [edi+eax]
	lea	ecx, DWORD PTR [edi+eax]
	inc	edi
; Line 314
	mov	al, BYTE PTR [esi+eax]
	mov	BYTE PTR [ecx], al
; Line 315
	mov	eax, DWORD PTR _buf_in$[esp+104]
	mov	BYTE PTR [esi+eax], dl
	cmp	edi, ebx
	jb	SHORT $LL9@pkeyutl_ma
	mov	eax, DWORD PTR _buf_inlen$1$[esp+104]
	jmp	SHORT $LN8@pkeyutl_ma
$LN242@pkeyutl_ma:
	xor	eax, eax
$LN8@pkeyutl_ma:
; Line 320
	mov	esi, DWORD PTR _pkey_op$1$[esp+104]
; Line 321
	push	eax
	push	DWORD PTR _buf_in$[esp+108]
	cmp	esi, 16					; 00000010H
	jne	$LN101@pkeyutl_ma
	push	DWORD PTR _siglen$1$[esp+112]
	push	DWORD PTR _sig$[esp+116]
	push	ebp
	call	_EVP_PKEY_verify
	mov	ecx, eax
	add	esp, 20					; 00000014H
; Line 323
	test	ecx, ecx
	jne	SHORT $LN103@pkeyutl_ma
; Line 324
	mov	esi, DWORD PTR _out$1$[esp+100]
	push	OFFSET ??_C@_0CA@OFLOPPEO@Signature?5Verification?5Failure?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
	jmp	$LN250@pkeyutl_ma
$LN103@pkeyutl_ma:
; Line 325
	cmp	ecx, 1
	jne	SHORT $LN105@pkeyutl_ma
; Line 326
	mov	esi, DWORD PTR _out$1$[esp+100]
	push	OFFSET ??_C@_0CB@PGCOBJH@Signature?5Verified?5Successfully?6@
	push	esi
	call	_BIO_puts
	add	esp, 8
; Line 327
	jmp	$LN250@pkeyutl_ma
$LN105@pkeyutl_ma:
	test	ecx, ecx
	jns	$LN240@pkeyutl_ma
; Line 329
	mov	eax, DWORD PTR _buf_outlen$[esp+104]
$LN241@pkeyutl_ma:
	xor	ebx, ebx
$LN109@pkeyutl_ma:
; Line 343
	test	ecx, ecx
	jle	$LN136@pkeyutl_ma
; Line 349
	mov	cl, BYTE PTR _asn1parse$1$[esp+104]
	xor	edi, edi
; Line 350
	mov	esi, DWORD PTR _out$1$[esp+100]
	test	cl, cl
	je	$LN111@pkeyutl_ma
	push	-1
	push	1
	push	eax
	push	ebx
	push	esi
	call	_ASN1_parse_dump
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$end$257
; Line 351
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 359
	push	ebp
	call	_EVP_PKEY_CTX_free
	mov	ebp, DWORD PTR _pkeyopts$1$[esp+108]
	add	esp, 4
	jmp	$LN116@pkeyutl_ma
$LN101@pkeyutl_ma:
; Line 330
	lea	eax, DWORD PTR _buf_outlen$[esp+112]
	push	eax
	push	0
	push	esi
	push	ebp
	call	_do_keyop
	mov	ecx, eax
	add	esp, 24					; 00000018H
; Line 332
	test	ecx, ecx
	jle	$LN136@pkeyutl_ma
	mov	eax, DWORD PTR _buf_outlen$[esp+104]
	test	eax, eax
	je	SHORT $LN241@pkeyutl_ma
; Line 333
	push	333					; 0000014dH
	push	OFFSET ??_C@_0BB@CPAIPCCB@?4?2apps?2pkeyutl?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf_out$1$[esp+104], ebx
; Line 334
	test	ebx, ebx
	je	SHORT $LN136@pkeyutl_ma
; Line 337
	mov	eax, DWORD PTR _buf_inlen$1$[esp+104]
	push	eax
	push	DWORD PTR _buf_in$[esp+108]
	lea	eax, DWORD PTR _buf_outlen$[esp+112]
	push	eax
	push	ebx
	push	esi
	push	ebp
	call	_do_keyop
	mov	ecx, eax
	add	esp, 24					; 00000018H
	mov	eax, DWORD PTR _buf_outlen$[esp+104]
	jmp	$LN109@pkeyutl_ma
$LN111@pkeyutl_ma:
; Line 352
	mov	cl, BYTE PTR _hexdump$1$[esp+104]
; Line 353
	push	eax
	push	ebx
	push	esi
	test	cl, cl
	je	SHORT $LN114@pkeyutl_ma
	call	_BIO_dump
	add	esp, 12					; 0000000cH
; Line 359
	push	ebp
	call	_EVP_PKEY_CTX_free
	mov	ebp, DWORD PTR _pkeyopts$1$[esp+108]
	add	esp, 4
	jmp	SHORT $LN116@pkeyutl_ma
$LN114@pkeyutl_ma:
; Line 355
	call	_BIO_write
	add	esp, 12					; 0000000cH
; Line 359
	push	ebp
	call	_EVP_PKEY_CTX_free
	mov	ebp, DWORD PTR _pkeyopts$1$[esp+108]
	add	esp, 4
	jmp	SHORT $LN116@pkeyutl_ma
$LN136@pkeyutl_ma:
; Line 344
	push	OFFSET ??_C@_0BM@LDAIMLLF@Public?5Key?5operation?5error?6?$AA@
$LN253@pkeyutl_ma:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 345
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
$LN254@pkeyutl_ma:
	add	esp, 12					; 0000000cH
$LN240@pkeyutl_ma:
	mov	esi, DWORD PTR _out$1$[esp+100]
$LN250@pkeyutl_ma:
	mov	edi, 1
$end$257:
; Line 359
	push	ebp
	call	_EVP_PKEY_CTX_free
	mov	ebp, DWORD PTR _pkeyopts$1$[esp+108]
	add	esp, 4
	jmp	SHORT $LN116@pkeyutl_ma
$LN77@pkeyutl_ma:
; Line 202
	push	OFFSET ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
	add	esp, 8
; Line 203
	jmp	SHORT $LN239@pkeyutl_ma
$LN81@pkeyutl_ma:
; Line 217
	call	_usage
$LN239@pkeyutl_ma:
	xor	esi, esi
	lea	edi, DWORD PTR [esi+1]
$LN116@pkeyutl_ma:
; Line 360
	push	DWORD PTR _in$1$[esp+104]
	call	_BIO_free
; Line 361
	push	esi
	call	_BIO_free_all
; Line 362
	mov	eax, DWORD PTR _buf_in$[esp+112]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN117@pkeyutl_ma
; Line 363
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN117@pkeyutl_ma:
; Line 364
	mov	eax, DWORD PTR _buf_out$1$[esp+104]
	test	eax, eax
	je	SHORT $LN118@pkeyutl_ma
; Line 365
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN118@pkeyutl_ma:
; Line 366
	mov	eax, DWORD PTR _sig$[esp+104]
	test	eax, eax
	je	SHORT $LN119@pkeyutl_ma
; Line 367
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN119@pkeyutl_ma:
; Line 368
	test	ebp, ebp
	je	SHORT $LN120@pkeyutl_ma
; Line 369
	push	ebp
	call	_sk_free
	add	esp, 4
$LN120@pkeyutl_ma:
; Line 370
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 371
	add	esp, 88					; 00000058H
	ret	0
$LN255@pkeyutl_ma:
_pkeyutl_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_keyop
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey_op$ = 12						; size = 4
_out$ = 16						; size = 4
_poutlen$ = 20						; size = 4
_in$ = 24						; size = 4
_inlen$ = 28						; size = 4
_do_keyop PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\pkeyutl.c
; Line 532
	mov	eax, DWORD PTR _pkey_op$[esp-4]
	cmp	eax, 256				; 00000100H
	jg	SHORT $LN10@do_keyop
	je	SHORT $LN6@do_keyop
	cmp	eax, 8
	je	SHORT $LN5@do_keyop
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN11@do_keyop
; Line 534
	push	DWORD PTR _inlen$[esp-4]
	push	DWORD PTR _in$[esp]
	push	DWORD PTR _poutlen$[esp+4]
	push	DWORD PTR _out$[esp+8]
	push	DWORD PTR _ctx$[esp+12]
	call	_EVP_PKEY_verify_recover
; Line 546
	add	esp, 20					; 00000014H
; Line 555
	ret	0
$LN11@do_keyop:
; Line 554
	xor	eax, eax
; Line 555
	ret	0
$LN5@do_keyop:
; Line 538
	push	DWORD PTR _inlen$[esp-4]
	push	DWORD PTR _in$[esp]
	push	DWORD PTR _poutlen$[esp+4]
	push	DWORD PTR _out$[esp+8]
	push	DWORD PTR _ctx$[esp+12]
	call	_EVP_PKEY_sign
; Line 546
	add	esp, 20					; 00000014H
; Line 555
	ret	0
$LN6@do_keyop:
; Line 542
	push	DWORD PTR _inlen$[esp-4]
	push	DWORD PTR _in$[esp]
	push	DWORD PTR _poutlen$[esp+4]
	push	DWORD PTR _out$[esp+8]
	push	DWORD PTR _ctx$[esp+12]
	call	_EVP_PKEY_encrypt
; Line 546
	add	esp, 20					; 00000014H
; Line 555
	ret	0
$LN10@do_keyop:
; Line 532
	cmp	eax, 512				; 00000200H
	je	SHORT $LN7@do_keyop
	cmp	eax, 1024				; 00000400H
	jne	SHORT $LN11@do_keyop
; Line 550
	push	DWORD PTR _poutlen$[esp-4]
	push	DWORD PTR _out$[esp]
	push	DWORD PTR _ctx$[esp+4]
	call	_EVP_PKEY_derive
	add	esp, 12					; 0000000cH
; Line 555
	ret	0
$LN7@do_keyop:
; Line 546
	push	DWORD PTR _inlen$[esp-4]
	push	DWORD PTR _in$[esp]
	push	DWORD PTR _poutlen$[esp+4]
	push	DWORD PTR _out$[esp+8]
	push	DWORD PTR _ctx$[esp+12]
	call	_EVP_PKEY_decrypt
	add	esp, 20					; 00000014H
; Line 555
	ret	0
_do_keyop ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _setup_peer
_TEXT	SEGMENT
_err$ = 8						; size = 4
_ctx$ = 12						; size = 4
_peerform$ = 16						; size = 4
_file$ = 20						; size = 4
_e$ = 24						; size = 4
_setup_peer PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\pkeyutl.c
; Line 509
	mov	ecx, DWORD PTR _peerform$[esp-4]
	xor	eax, eax
	push	esi
; Line 511
	mov	esi, DWORD PTR _file$[esp]
	cmp	ecx, 7
	push	edi
	cmove	eax, DWORD PTR _e$[esp+4]
	push	OFFSET ??_C@_08FBPOPADM@Peer?5Key?$AA@
	push	eax
	push	0
	push	0
	push	ecx
	push	esi
	push	DWORD PTR _bio_err
	call	_load_pubkey
	mov	edi, eax
	add	esp, 28					; 0000001cH
; Line 513
	test	edi, edi
	jne	SHORT $LN3@setup_peer
; Line 514
	push	esi
	push	OFFSET ??_C@_0BL@HJBIDLJN@Error?5reading?5peer?5key?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 515
	push	DWORD PTR _err$[esp+16]
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 516
	xor	eax, eax
	pop	edi
	pop	esi
; Line 525
	ret	0
$LN3@setup_peer:
; Line 519
	push	edi
	push	DWORD PTR _ctx$[esp+8]
	call	_EVP_PKEY_derive_set_peer
; Line 521
	push	edi
	mov	esi, eax
	call	_EVP_PKEY_free
	add	esp, 12					; 0000000cH
; Line 522
	test	esi, esi
	jg	SHORT $LN4@setup_peer
; Line 523
	push	DWORD PTR _err$[esp+4]
	call	_ERR_print_errors
	add	esp, 4
$LN4@setup_peer:
; Line 524
	pop	edi
	mov	eax, esi
	pop	esi
; Line 525
	ret	0
_setup_peer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _init_ctx
_TEXT	SEGMENT
_passin$ = -4						; size = 4
_pkeysize$ = 8						; size = 4
_keyfile$ = 12						; size = 4
_keyform$ = 16						; size = 4
_key_type$ = 20						; size = 4
_passargin$ = 24					; size = 4
_pkey_op$ = 28						; size = 4
_e$ = 32						; size = 4
_engine_impl$ = 36					; size = 4
_init_ctx PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\pkeyutl.c
; Line 407
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 416
	mov	ebx, DWORD PTR _key_type$[esp+4]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR _pkey_op$[esp+16]
	xor	esi, esi
	xor	ebp, ebp
	mov	DWORD PTR _passin$[esp+20], esi
	cmp	edi, 8
	je	SHORT $LN7@init_ctx
	cmp	edi, 512				; 00000200H
	je	SHORT $LN7@init_ctx
	cmp	edi, 1024				; 00000400H
	jne	SHORT $LN6@init_ctx
$LN7@init_ctx:
	cmp	ebx, 1
	je	SHORT $LN6@init_ctx
; Line 417
	push	OFFSET ??_C@_0CM@PJGLHDCL@A?5private?5key?5is?5needed?5for?5this@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 418
	jmp	$end$31
$LN6@init_ctx:
; Line 420
	push	0
	lea	eax, DWORD PTR _passin$[esp+24]
	push	eax
	push	0
	push	DWORD PTR _passargin$[esp+28]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN8@init_ctx
; Line 421
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 422
	jmp	$end$31
$LN8@init_ctx:
; Line 424
	mov	eax, DWORD PTR _e$[esp+16]
	sub	ebx, 1
	je	SHORT $LN9@init_ctx
	sub	ebx, 1
	je	SHORT $LN10@init_ctx
	sub	ebx, 1
	jne	SHORT $LN12@init_ctx
; Line 436
	push	OFFSET ??_C@_0M@KDOEPPNO@Certificate?$AA@
	push	eax
	push	ebx
	push	DWORD PTR _keyform$[esp+28]
	push	DWORD PTR _keyfile$[esp+32]
	push	DWORD PTR _bio_err
	call	_load_cert
	mov	ebx, eax
	add	esp, 24					; 00000018H
; Line 437
	test	ebx, ebx
	je	SHORT $LN12@init_ctx
; Line 438
	push	ebx
	call	_X509_get_pubkey
; Line 439
	push	ebx
	mov	ebp, eax
	call	_X509_free
	add	esp, 8
	jmp	SHORT $LN12@init_ctx
$LN10@init_ctx:
; Line 431
	push	OFFSET ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
	push	eax
	push	0
	push	0
	push	DWORD PTR _keyform$[esp+32]
	push	DWORD PTR _keyfile$[esp+36]
	push	DWORD PTR _bio_err
	call	_load_pubkey
; Line 433
	jmp	SHORT $LN28@init_ctx
$LN9@init_ctx:
; Line 426
	push	OFFSET ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
	push	eax
	push	DWORD PTR _passin$[esp+28]
	push	0
	push	DWORD PTR _keyform$[esp+32]
	push	DWORD PTR _keyfile$[esp+36]
	push	DWORD PTR _bio_err
	call	_load_key
$LN28@init_ctx:
	mov	ebp, eax
	add	esp, 28					; 0000001cH
$LN12@init_ctx:
; Line 445
	push	ebp
	call	_EVP_PKEY_size
	mov	ecx, DWORD PTR _pkeysize$[esp+20]
	add	esp, 4
	mov	DWORD PTR [ecx], eax
; Line 447
	test	ebp, ebp
	je	$end$31
; Line 451
	cmp	DWORD PTR _engine_impl$[esp+16], esi
	mov	eax, esi
	cmovne	eax, DWORD PTR _e$[esp+16]
; Line 455
	push	eax
	push	ebp
	call	_EVP_PKEY_CTX_new
; Line 457
	push	ebp
	mov	esi, eax
	call	_EVP_PKEY_free
	add	esp, 12					; 0000000cH
; Line 459
	test	esi, esi
	je	SHORT $end$31
; Line 462
	cmp	edi, 256				; 00000100H
	jg	SHORT $LN25@init_ctx
	je	SHORT $LN19@init_ctx
	cmp	edi, 8
	je	SHORT $LN16@init_ctx
	cmp	edi, 16					; 00000010H
	je	SHORT $LN17@init_ctx
	cmp	edi, 32					; 00000020H
	jne	SHORT $LN26@init_ctx
; Line 472
	push	esi
	call	_EVP_PKEY_verify_recover_init
; Line 473
	jmp	SHORT $LN29@init_ctx
$LN17@init_ctx:
; Line 468
	push	esi
	call	_EVP_PKEY_verify_init
; Line 469
	jmp	SHORT $LN29@init_ctx
$LN16@init_ctx:
; Line 464
	push	esi
	call	_EVP_PKEY_sign_init
; Line 465
	jmp	SHORT $LN29@init_ctx
$LN19@init_ctx:
; Line 476
	push	esi
	call	_EVP_PKEY_encrypt_init
; Line 477
	jmp	SHORT $LN29@init_ctx
$LN25@init_ctx:
; Line 462
	cmp	edi, 512				; 00000200H
	je	SHORT $LN20@init_ctx
	cmp	edi, 1024				; 00000400H
	jne	SHORT $LN26@init_ctx
; Line 484
	push	esi
	call	_EVP_PKEY_derive_init
	jmp	SHORT $LN29@init_ctx
$LN20@init_ctx:
; Line 480
	push	esi
	call	_EVP_PKEY_decrypt_init
$LN29@init_ctx:
	add	esp, 4
; Line 488
	test	eax, eax
	jg	SHORT $end$31
$LN26@init_ctx:
; Line 489
	push	esi
	call	_EVP_PKEY_CTX_free
	add	esp, 4
; Line 490
	xor	esi, esi
$end$31:
; Line 495
	mov	eax, DWORD PTR _passin$[esp+20]
	test	eax, eax
	je	SHORT $LN27@init_ctx
; Line 496
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN27@init_ctx:
; Line 498
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 500
	pop	ecx
	ret	0
_init_ctx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _usage
_TEXT	SEGMENT
_usage	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\pkeyutl.c
; Line 375
	push	OFFSET ??_C@_0BK@JLENEOBM@Usage?3?5pkeyutl?5?$FLoptions?$FN?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 376
	push	OFFSET ??_C@_0BM@OAPGFGAE@?9in?5file?5?5?5?5?5?5?5?5input?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 377
	push	OFFSET ??_C@_0BN@IBKDGIDA@?9out?5file?5?5?5?5?5?5?5output?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 378
	push	OFFSET ??_C@_0DG@IBCACDJH@?9sigfile?5file?5signature?5file?5?$CIve@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 380
	push	OFFSET ??_C@_0BL@KONHOKA@?9inkey?5file?5?5?5?5?5input?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 381
	push	OFFSET ??_C@_0DC@OHMIALFN@?9keyform?5arg?5?5?5?5private?5key?5form@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 382
	push	OFFSET ??_C@_0CH@FAADBJPA@?9pubin?5?5?5?5?5?5?5?5?5?5input?5is?5a?5publi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 383
	push	OFFSET ??_C@_0DO@JAPLMBFL@?9certin?5?5?5?5?5?5?5?5?5input?5is?5a?5certi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 385
	push	OFFSET ??_C@_0CE@GFHHCJKD@?9pkeyopt?5X?3Y?5?5?5?5public?5key?5optio@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 386
	push	OFFSET ??_C@_0CH@FEOIFBIC@?9sign?5?5?5?5?5?5?5?5?5?5?5sign?5with?5privat@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 387
	push	OFFSET ??_C@_0CI@KLFFFEGB@?9verify?5?5?5?5?5?5?5?5?5verify?5with?5publ@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 388
	push	OFFSET ??_C@_0DP@KIFIENFO@?9verifyrecover?5?5verify?5with?5publ@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 390
	push	OFFSET ??_C@_0CJ@HCKMKDJK@?9encrypt?5?5?5?5?5?5?5?5encrypt?5with?5pub@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 391
	push	OFFSET ??_C@_0CK@IGBDNJCI@?9decrypt?5?5?5?5?5?5?5?5decrypt?5with?5pri@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 392
	push	OFFSET ??_C@_0CG@FCOAPHMM@?9derive?5?5?5?5?5?5?5?5?5derive?5shared?5se@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 393
	push	OFFSET ??_C@_0CB@JIPABPNP@?9hexdump?5?5?5?5?5?5?5?5hex?5dump?5output?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 395
	push	OFFSET ??_C@_0EK@JMGPNOKO@?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5ma@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 397
	push	OFFSET ??_C@_0EI@LEJFGIFF@?9engine_impl?5?5?5?5also?5use?5engine?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 399
	push	OFFSET ??_C@_0CE@LMDNEPBO@?9passin?5arg?5?5?5?5?5pass?5phrase?5sour@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 401
	ret	0
_usage	ENDP
_TEXT	ENDS
END

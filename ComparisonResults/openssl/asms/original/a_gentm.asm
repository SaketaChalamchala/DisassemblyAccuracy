; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_gentm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?min@?1??asn1_generalizedtime_to_tm@@9@9 DD 00H		; `asn1_generalizedtime_to_tm'::`2'::min
	DD	00H
	DD	01H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
?max@?1??asn1_generalizedtime_to_tm@@9@9 DD 063H	; `asn1_generalizedtime_to_tm'::`2'::max
	DD	063H
	DD	0cH
	DD	01fH
	DD	017H
	DD	03bH
	DD	03bH
	DD	0cH
	DD	03bH
CONST	ENDS
PUBLIC	_ASN1_GENERALIZEDTIME_check
PUBLIC	_ASN1_GENERALIZEDTIME_set
PUBLIC	_ASN1_GENERALIZEDTIME_adj
PUBLIC	_ASN1_GENERALIZEDTIME_set_string
PUBLIC	_asn1_generalizedtime_to_tm
PUBLIC	??_C@_0BI@FLDCAADC@?4?2crypto?2asn1?2a_gentm?4c?$AA@ ; `string'
PUBLIC	??_C@_0BK@EMDNDBLP@?$CF04d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02dZ?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_OPENSSL_gmtime:PROC
EXTRN	_OPENSSL_gmtime_adj:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_STRING_set:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BK@EMDNDBLP@?$CF04d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02dZ?$AA@
CONST	SEGMENT
??_C@_0BK@EMDNDBLP@?$CF04d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02dZ?$AA@ DB '%'
	DB	'04d%02d%02d%02d%02d%02dZ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FLDCAADC@?4?2crypto?2asn1?2a_gentm?4c?$AA@
CONST	SEGMENT
??_C@_0BI@FLDCAADC@?4?2crypto?2asn1?2a_gentm?4c?$AA@ DB '.\crypto\asn1\a_'
	DB	'gentm.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_generalizedtime_to_tm
_TEXT	SEGMENT
_l$1$ = -8						; size = 4
_offsign$1$ = -4					; size = 4
_tm$ = 8						; size = 4
tv438 = 12						; size = 1
_d$ = 12						; size = 4
_asn1_generalizedtime_to_tm PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_gentm.c
; Line 122
	mov	eax, 8
	call	__chkstk
	push	edi
; Line 128
	mov	edi, DWORD PTR _d$[esp+8]
	cmp	DWORD PTR [edi+4], 24			; 00000018H
	je	SHORT $LN12@asn1_gener
; Line 129
	xor	eax, eax
	pop	edi
; Line 236
	add	esp, 8
	ret	0
$LN12@asn1_gener:
; Line 130
	mov	ecx, DWORD PTR [edi]
; Line 131
	mov	edi, DWORD PTR [edi+8]
	push	ebx
	push	ebp
	push	esi
; Line 132
	xor	esi, esi
	mov	DWORD PTR _l$1$[esp+24], ecx
; Line 138
	cmp	ecx, 13					; 0000000dH
	jl	$err$81
; Line 140
	mov	ebp, DWORD PTR _tm$[esp+20]
	xor	edx, edx
	npad	7
$LL4@asn1_gener:
; Line 141
	cmp	edx, 6
	jne	SHORT $LN14@asn1_gener
	mov	al, BYTE PTR [esi+edi]
	cmp	al, 90					; 0000005aH
	je	$LN15@asn1_gener
	cmp	al, 43					; 0000002bH
	je	$LN15@asn1_gener
	cmp	al, 45					; 0000002dH
	je	$LN15@asn1_gener
$LN14@asn1_gener:
; Line 147
	mov	al, BYTE PTR [esi+edi]
	cmp	al, 48					; 00000030H
	jl	$err$81
	cmp	al, 57					; 00000039H
	jg	$err$81
; Line 149
	movsx	eax, al
; Line 150
	inc	esi
	sub	eax, 48					; 00000030H
	cmp	esi, ecx
	jg	$err$81
; Line 153
	mov	bl, BYTE PTR [esi+edi]
	cmp	bl, 48					; 00000030H
	jl	$err$81
	cmp	bl, 57					; 00000039H
	jg	$err$81
; Line 155
	lea	ecx, DWORD PTR [eax+eax*4]
; Line 156
	inc	esi
	movsx	eax, bl
	lea	eax, DWORD PTR [eax+ecx*2]
	mov	ecx, DWORD PTR _l$1$[esp+24]
	add	eax, -48				; ffffffd0H
	cmp	esi, ecx
	jg	$err$81
; Line 159
	cmp	eax, DWORD PTR ?min@?1??asn1_generalizedtime_to_tm@@9@9[edx*4]
	jl	$err$81
	cmp	eax, DWORD PTR ?max@?1??asn1_generalizedtime_to_tm@@9@9[edx*4]
	jg	$err$81
; Line 161
	test	ebp, ebp
	je	SHORT $LN2@asn1_gener
; Line 162
	cmp	edx, 6
	ja	SHORT $LN2@asn1_gener
	jmp	DWORD PTR $LN80@asn1_gener[edx*4]
$LN26@asn1_gener:
; Line 164
	add	eax, -19				; ffffffedH
	imul	eax, eax, 100
	mov	DWORD PTR [ebp+20], eax
; Line 165
	jmp	SHORT $LN2@asn1_gener
$LN27@asn1_gener:
; Line 167
	add	DWORD PTR [ebp+20], eax
; Line 168
	jmp	SHORT $LN2@asn1_gener
$LN28@asn1_gener:
; Line 170
	dec	eax
	mov	DWORD PTR [ebp+16], eax
; Line 171
	jmp	SHORT $LN2@asn1_gener
$LN29@asn1_gener:
; Line 173
	mov	DWORD PTR [ebp+12], eax
; Line 174
	jmp	SHORT $LN2@asn1_gener
$LN30@asn1_gener:
; Line 176
	mov	DWORD PTR [ebp+8], eax
; Line 177
	jmp	SHORT $LN2@asn1_gener
$LN31@asn1_gener:
; Line 179
	mov	DWORD PTR [ebp+4], eax
; Line 180
	jmp	SHORT $LN2@asn1_gener
$LN32@asn1_gener:
; Line 182
	mov	DWORD PTR [ebp], eax
$LN2@asn1_gener:
; Line 140
	inc	edx
	cmp	edx, 7
	jl	$LL4@asn1_gener
	jmp	SHORT $LN75@asn1_gener
$LN15@asn1_gener:
; Line 143
	test	ebp, ebp
	je	SHORT $LN75@asn1_gener
; Line 144
	mov	DWORD PTR [ebp], 0
$LN75@asn1_gener:
; Line 191
	cmp	BYTE PTR [esi+edi], 46			; 0000002eH
	jne	SHORT $LN35@asn1_gener
; Line 192
	inc	esi
	cmp	esi, ecx
	jg	SHORT $err$81
; Line 195
	mov	al, BYTE PTR [esi+edi]
	mov	edx, esi
	cmp	al, 48					; 00000030H
	jl	SHORT $err$81
	npad	3
$LL7@asn1_gener:
	cmp	al, 57					; 00000039H
	jg	SHORT $LN8@asn1_gener
	cmp	esi, ecx
	jg	SHORT $LN8@asn1_gener
	mov	al, BYTE PTR [esi+edi+1]
; Line 196
	inc	esi
	cmp	al, 48					; 00000030H
	jge	SHORT $LL7@asn1_gener
$LN8@asn1_gener:
; Line 198
	cmp	edx, esi
	je	SHORT $err$81
$LN35@asn1_gener:
; Line 202
	mov	al, BYTE PTR [esi+edi]
	cmp	al, 90					; 0000005aH
	jne	SHORT $LN36@asn1_gener
; Line 203
	inc	esi
; Line 233
	xor	eax, eax
	cmp	esi, DWORD PTR _l$1$[esp+24]
	pop	esi
	pop	ebp
	pop	ebx
	sete	al
	pop	edi
; Line 236
	add	esp, 8
	ret	0
$LN36@asn1_gener:
; Line 204
	cmp	al, 43					; 0000002bH
	je	SHORT $LN40@asn1_gener
	cmp	al, 45					; 0000002dH
	je	SHORT $LN40@asn1_gener
; Line 229
	test	al, al
	je	$LN52@asn1_gener
$err$81:
	pop	esi
	pop	ebp
	pop	ebx
; Line 235
	xor	eax, eax
	pop	edi
; Line 236
	add	esp, 8
	ret	0
$LN40@asn1_gener:
; Line 205
	xor	edx, edx
	cmp	al, 45					; 0000002dH
	setne	dl
; Line 206
	inc	esi
	xor	ebx, ebx
; Line 207
	lea	eax, DWORD PTR [esi+4]
	lea	edx, DWORD PTR [edx*2-1]
	mov	DWORD PTR _offsign$1$[esp+24], edx
	cmp	eax, ecx
	jg	SHORT $err$81
; Line 209
	lea	edx, DWORD PTR [ebx+7]
$LL11@asn1_gener:
; Line 210
	mov	al, BYTE PTR [esi+edi]
	cmp	al, 48					; 00000030H
	jl	SHORT $err$81
	cmp	al, 57					; 00000039H
	jg	SHORT $err$81
; Line 214
	mov	cl, BYTE PTR [esi+edi+1]
	movsx	eax, al
	sub	eax, 48					; 00000030H
	mov	BYTE PTR tv438[esp+20], cl
	cmp	cl, 48					; 00000030H
	jl	SHORT $err$81
	cmp	cl, 57					; 00000039H
	jg	SHORT $err$81
; Line 216
	lea	ecx, DWORD PTR [eax+eax*4]
	movsx	eax, BYTE PTR tv438[esp+20]
	lea	ecx, DWORD PTR [ecx-24]
	lea	ecx, DWORD PTR [eax+ecx*2]
; Line 217
	cmp	ecx, DWORD PTR ?min@?1??asn1_generalizedtime_to_tm@@9@9[edx*4]
	jl	SHORT $err$81
	cmp	ecx, DWORD PTR ?max@?1??asn1_generalizedtime_to_tm@@9@9[edx*4]
	jg	SHORT $err$81
; Line 219
	test	ebp, ebp
	je	SHORT $LN51@asn1_gener
; Line 220
	cmp	edx, 7
	jne	SHORT $LN49@asn1_gener
; Line 221
	imul	ebx, ecx, 3600
	jmp	SHORT $LN51@asn1_gener
$LN49@asn1_gener:
; Line 222
	cmp	edx, 8
	jne	SHORT $LN51@asn1_gener
; Line 223
	mov	eax, ecx
	shl	eax, 4
	sub	eax, ecx
	lea	ebx, DWORD PTR [ebx+eax*4]
$LN51@asn1_gener:
; Line 225
	inc	edx
	add	esi, 2
	cmp	edx, 9
	jl	SHORT $LL11@asn1_gener
; Line 227
	test	ebx, ebx
	je	SHORT $LN52@asn1_gener
	imul	ebx, DWORD PTR _offsign$1$[esp+24]
	push	ebx
	push	0
	push	ebp
	call	_OPENSSL_gmtime_adj
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$81
$LN52@asn1_gener:
; Line 233
	xor	eax, eax
	cmp	esi, DWORD PTR _l$1$[esp+24]
	pop	esi
	pop	ebp
	pop	ebx
	sete	al
	pop	edi
; Line 236
	add	esp, 8
	ret	0
	npad	3
$LN80@asn1_gener:
	DD	$LN26@asn1_gener
	DD	$LN27@asn1_gener
	DD	$LN28@asn1_gener
	DD	$LN29@asn1_gener
	DD	$LN30@asn1_gener
	DD	$LN31@asn1_gener
	DD	$LN32@asn1_gener
_asn1_generalizedtime_to_tm ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_GENERALIZEDTIME_set_string
_TEXT	SEGMENT
_t$ = -16						; size = 16
_s$ = 8							; size = 4
_str$ = 12						; size = 4
_ASN1_GENERALIZEDTIME_set_string PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_gentm.c
; Line 244
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
; Line 248
	mov	ebx, DWORD PTR _str$[esp+16]
	push	esi
	mov	esi, ebx
	mov	DWORD PTR _t$[esp+28], 24		; 00000018H
	lea	ecx, DWORD PTR [esi+1]
	npad	3
$LL9@ASN1_GENER:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL9@ASN1_GENER
; Line 240
	lea	eax, DWORD PTR _t$[esp+24]
; Line 249
	mov	DWORD PTR _t$[esp+32], ebx
; Line 240
	push	eax
; Line 248
	sub	esi, ecx
; Line 240
	push	0
; Line 248
	mov	DWORD PTR _t$[esp+32], esi
; Line 240
	call	_asn1_generalizedtime_to_tm
	add	esp, 8
; Line 250
	test	eax, eax
	je	SHORT $LN2@ASN1_GENER
; Line 251
	push	edi
	mov	edi, DWORD PTR _s$[esp+24]
	test	edi, edi
	je	SHORT $LN4@ASN1_GENER
; Line 252
	push	esi
	push	ebx
	push	edi
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@ASN1_GENER
	pop	edi
	pop	esi
	pop	ebx
; Line 260
	add	esp, 16					; 00000010H
	ret	0
$LN5@ASN1_GENER:
; Line 255
	mov	DWORD PTR [edi+4], 24			; 00000018H
$LN4@ASN1_GENER:
	pop	edi
	pop	esi
; Line 257
	mov	eax, 1
	pop	ebx
; Line 260
	add	esp, 16					; 00000010H
	ret	0
$LN2@ASN1_GENER:
	pop	esi
; Line 259
	xor	eax, eax
	pop	ebx
; Line 260
	add	esp, 16					; 00000010H
	ret	0
_ASN1_GENERALIZEDTIME_set_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_GENERALIZEDTIME_adj
_TEXT	SEGMENT
_data$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_t$ = 12						; size = 8
_offset_day$ = 20					; size = 4
_offset_sec$ = 24					; size = 4
_ASN1_GENERALIZEDTIME_adj PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_gentm.c
; Line 271
	mov	eax, 40					; 00000028H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+40], eax
	push	edi
	mov	edi, DWORD PTR _s$[esp+40]
; Line 277
	test	edi, edi
	jne	SHORT $LN3@ASN1_GENER
; Line 278
	push	24					; 00000018H
	call	_ASN1_STRING_type_new
	mov	edi, eax
	add	esp, 4
; Line 279
	test	edi, edi
	jne	SHORT $LN3@ASN1_GENER
	pop	edi
; Line 312
	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	ret	0
$LN3@ASN1_GENER:
	push	ebx
; Line 282
	lea	eax, DWORD PTR _data$[esp+48]
	push	eax
	lea	eax, DWORD PTR _t$[esp+48]
	push	eax
	call	_OPENSSL_gmtime
	mov	ebx, eax
	add	esp, 8
; Line 283
	test	ebx, ebx
	je	SHORT $LN16@ASN1_GENER
; Line 286
	mov	ecx, DWORD PTR _offset_day$[esp+44]
	mov	eax, DWORD PTR _offset_sec$[esp+44]
	test	ecx, ecx
	jne	SHORT $LN6@ASN1_GENER
	test	eax, eax
	je	SHORT $LN7@ASN1_GENER
$LN6@ASN1_GENER:
; Line 287
	push	eax
	push	ecx
	push	ebx
	call	_OPENSSL_gmtime_adj
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@ASN1_GENER
$LN16@ASN1_GENER:
	pop	ebx
; Line 288
	xor	eax, eax
	pop	edi
; Line 312
	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	ret	0
$LN7@ASN1_GENER:
	push	esi
; Line 291
	mov	esi, DWORD PTR [edi+8]
; Line 292
	test	esi, esi
	je	SHORT $LN9@ASN1_GENER
	cmp	DWORD PTR [edi], 20			; 00000014H
	jae	SHORT $LN8@ASN1_GENER
$LN9@ASN1_GENER:
; Line 293
	push	293					; 00000125H
	push	OFFSET ??_C@_0BI@FLDCAADC@?4?2crypto?2asn1?2a_gentm?4c?$AA@
	push	20					; 00000014H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 294
	test	esi, esi
	jne	SHORT $LN10@ASN1_GENER
; Line 295
	push	295					; 00000127H
	push	OFFSET ??_C@_0BI@FLDCAADC@?4?2crypto?2asn1?2a_gentm?4c?$AA@
	push	65					; 00000041H
	push	216					; 000000d8H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 296
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 312
	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	ret	0
$LN10@ASN1_GENER:
; Line 298
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN11@ASN1_GENER
; Line 299
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN11@ASN1_GENER:
; Line 300
	mov	DWORD PTR [edi+8], esi
$LN8@ASN1_GENER:
; Line 303
	push	DWORD PTR [ebx]
	mov	eax, DWORD PTR [ebx+16]
	push	DWORD PTR [ebx+4]
	inc	eax
	push	DWORD PTR [ebx+8]
	push	DWORD PTR [ebx+12]
	push	eax
	mov	eax, DWORD PTR [ebx+20]
	add	eax, 1900				; 0000076cH
	push	eax
	push	OFFSET ??_C@_0BK@EMDNDBLP@?$CF04d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02dZ?$AA@
	push	20					; 00000014H
	push	esi
	call	_BIO_snprintf
	add	esp, 36					; 00000024H
; Line 306
	lea	ecx, DWORD PTR [esi+1]
	npad	2
$LL13@ASN1_GENER:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL13@ASN1_GENER
	sub	esi, ecx
; Line 307
	mov	DWORD PTR [edi+4], 24			; 00000018H
; Line 312
	mov	ecx, DWORD PTR __$ArrayPad$[esp+52]
	mov	eax, edi
	mov	DWORD PTR [edi], esi
	pop	esi
	pop	ebx
	pop	edi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	ret	0
_ASN1_GENERALIZEDTIME_adj ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_GENERALIZEDTIME_set
_TEXT	SEGMENT
_s$ = 8							; size = 4
_t$ = 12						; size = 8
_ASN1_GENERALIZEDTIME_set PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_gentm.c
; Line 265
	push	0
	push	0
	push	DWORD PTR _t$[esp+8]
	push	DWORD PTR _t$[esp+8]
	push	DWORD PTR _s$[esp+12]
	call	_ASN1_GENERALIZEDTIME_adj
	add	esp, 20					; 00000014H
; Line 266
	ret	0
_ASN1_GENERALIZEDTIME_set ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_GENERALIZEDTIME_check
_TEXT	SEGMENT
_d$ = 8							; size = 4
_ASN1_GENERALIZEDTIME_check PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_gentm.c
; Line 240
	push	DWORD PTR _d$[esp-4]
	push	0
	call	_asn1_generalizedtime_to_tm
	add	esp, 8
; Line 241
	ret	0
_ASN1_GENERALIZEDTIME_check ENDP
_TEXT	ENDS
END

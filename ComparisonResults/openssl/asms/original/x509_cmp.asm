; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_X509_get_serialNumber
PUBLIC	_X509_get_issuer_name
PUBLIC	_X509_get_subject_name
PUBLIC	_X509_get_pubkey
PUBLIC	_X509_get0_pubkey_bitstr
PUBLIC	_X509_check_private_key
PUBLIC	_X509_chain_check_suiteb
PUBLIC	_X509_CRL_check_suiteb
PUBLIC	_X509_chain_up_ref
PUBLIC	_X509_issuer_and_serial_cmp
PUBLIC	_X509_issuer_and_serial_hash
PUBLIC	_X509_issuer_name_cmp
PUBLIC	_X509_issuer_name_hash
PUBLIC	_X509_subject_name_cmp
PUBLIC	_X509_subject_name_hash
PUBLIC	_X509_issuer_name_hash_old
PUBLIC	_X509_subject_name_hash_old
PUBLIC	_X509_cmp
PUBLIC	_X509_NAME_cmp
PUBLIC	_X509_NAME_hash
PUBLIC	_X509_NAME_hash_old
PUBLIC	_X509_CRL_cmp
PUBLIC	_X509_CRL_match
PUBLIC	_X509_find_by_issuer_and_serial
PUBLIC	_X509_find_by_subject
PUBLIC	??_C@_0BJ@KHABNHFN@?4?2crypto?2x509?2x509_cmp?4c?$AA@ ; `string'
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_dup:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_STRING_cmp:PROC
EXTRN	_ASN1_INTEGER_get:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_MD_CTX_set_flags:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_Digest:PROC
EXTRN	_EVP_md5:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_PKEY_cmp:PROC
EXTRN	_EC_GROUP_get_curve_name:PROC
EXTRN	_EC_KEY_get0_group:PROC
EXTRN	_X509_PUBKEY_get:PROC
EXTRN	_i2d_X509_NAME:PROC
EXTRN	_X509_get_signature_nid:PROC
EXTRN	_X509_NAME_oneline:PROC
EXTRN	_X509_check_purpose:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BJ@KHABNHFN@?4?2crypto?2x509?2x509_cmp?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@KHABNHFN@?4?2crypto?2x509?2x509_cmp?4c?$AA@ DB '.\crypto\x509\x'
	DB	'509_cmp.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _check_suite_b
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_sign_nid$ = 12						; size = 4
_pflags$ = 16						; size = 4
_check_suite_b PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 367
	mov	eax, DWORD PTR _pkey$[esp-4]
	test	eax, eax
	je	$LN13@check_suit
	cmp	DWORD PTR [eax], 408			; 00000198H
	jne	SHORT $LN13@check_suit
; Line 368
	push	DWORD PTR [eax+20]
	call	_EC_KEY_get0_group
	add	esp, 4
; Line 369
	test	eax, eax
	je	SHORT $LN13@check_suit
; Line 371
	push	eax
	call	_EC_GROUP_get_curve_name
	add	esp, 4
; Line 373
	cmp	eax, 715				; 000002cbH
	jne	SHORT $LN4@check_suit
; Line 377
	mov	eax, DWORD PTR _sign_nid$[esp-4]
	cmp	eax, -1
	je	SHORT $LN6@check_suit
	cmp	eax, 795				; 0000031bH
	je	SHORT $LN6@check_suit
$LN14@check_suit:
; Line 378
	mov	eax, 59					; 0000003bH
; Line 392
	ret	0
$LN6@check_suit:
; Line 379
	mov	ecx, DWORD PTR _pflags$[esp-4]
	mov	eax, DWORD PTR [ecx]
	test	eax, 131072				; 00020000H
	jne	SHORT $LN7@check_suit
$LN15@check_suit:
; Line 380
	mov	eax, 60					; 0000003cH
; Line 392
	ret	0
$LN7@check_suit:
; Line 382
	and	eax, -65537				; fffeffffH
	mov	DWORD PTR [ecx], eax
; Line 391
	xor	eax, eax
; Line 392
	ret	0
$LN4@check_suit:
; Line 383
	cmp	eax, 415				; 0000019fH
	jne	SHORT $LN8@check_suit
; Line 384
	mov	eax, DWORD PTR _sign_nid$[esp-4]
	cmp	eax, -1
	je	SHORT $LN10@check_suit
	cmp	eax, 794				; 0000031aH
	jne	SHORT $LN14@check_suit
$LN10@check_suit:
; Line 386
	mov	eax, DWORD PTR _pflags$[esp-4]
	test	DWORD PTR [eax], 65536			; 00010000H
	je	SHORT $LN15@check_suit
; Line 391
	xor	eax, eax
; Line 392
	ret	0
$LN8@check_suit:
; Line 389
	mov	eax, 58					; 0000003aH
; Line 392
	ret	0
$LN13@check_suit:
; Line 370
	mov	eax, 57					; 00000039H
; Line 392
	ret	0
_check_suite_b ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_find_by_subject
_TEXT	SEGMENT
_x509$1$ = -4						; size = 4
_sk$ = 8						; size = 4
_name$ = 12						; size = 4
_X509_find_by_subject PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 298
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 302
	mov	esi, DWORD PTR _sk$[esp+12]
	xor	ebx, ebx
	push	edi
	push	esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN24@X509_find_
	mov	ebp, DWORD PTR _name$[esp+16]
	npad	7
$LL4@X509_find_:
; Line 303
	push	ebx
	push	esi
	call	_sk_value
	add	esp, 8
	mov	DWORD PTR _x509$1$[esp+20], eax
; Line 151
	mov	ecx, DWORD PTR [eax]
	mov	edi, DWORD PTR [ecx+20]
; Line 208
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN11@X509_find_
	cmp	DWORD PTR [edi+4], 0
	je	SHORT $LN12@X509_find_
$LN11@X509_find_:
; Line 209
	push	0
	push	edi
	call	_i2d_X509_NAME
	add	esp, 8
; Line 210
	test	eax, eax
	js	$LN23@X509_find_
$LN12@X509_find_:
; Line 214
	cmp	DWORD PTR [ebp+12], 0
	je	SHORT $LN14@X509_find_
	cmp	DWORD PTR [ebp+4], 0
	je	SHORT $LN15@X509_find_
$LN14@X509_find_:
; Line 215
	push	0
	push	ebp
	call	_i2d_X509_NAME
	add	esp, 8
; Line 216
	test	eax, eax
	js	SHORT $LN23@X509_find_
$LN15@X509_find_:
; Line 220
	mov	esi, DWORD PTR [edi+16]
	mov	eax, esi
	sub	eax, DWORD PTR [ebp+16]
; Line 222
	jne	SHORT $LN30@X509_find_
; Line 225
	mov	edx, DWORD PTR [edi+12]
	mov	eax, DWORD PTR [ebp+12]
	sub	esi, 4
	jb	SHORT $LN27@X509_find_
$LL28@X509_find_:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN26@X509_find_
	add	edx, 4
	add	eax, 4
	sub	esi, 4
	jae	SHORT $LL28@X509_find_
$LN27@X509_find_:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN25@X509_find_
$LN26@X509_find_:
	mov	cl, BYTE PTR [edx]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN29@X509_find_
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN25@X509_find_
	mov	cl, BYTE PTR [edx+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN29@X509_find_
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN25@X509_find_
	mov	cl, BYTE PTR [edx+2]
	cmp	cl, BYTE PTR [eax+2]
	jne	SHORT $LN29@X509_find_
	cmp	esi, -1
	je	SHORT $LN25@X509_find_
	mov	cl, BYTE PTR [edx+3]
	cmp	cl, BYTE PTR [eax+3]
	je	SHORT $LN25@X509_find_
$LN29@X509_find_:
	sbb	eax, eax
	or	eax, 1
	jmp	SHORT $LN30@X509_find_
$LN25@X509_find_:
	xor	eax, eax
$LN30@X509_find_:
; Line 304
	test	eax, eax
	je	SHORT $LN19@X509_find_
	mov	esi, DWORD PTR _sk$[esp+16]
$LN23@X509_find_:
; Line 302
	push	esi
	inc	ebx
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL4@X509_find_
$LN24@X509_find_:
	pop	edi
	pop	esi
	pop	ebp
; Line 307
	xor	eax, eax
	pop	ebx
; Line 308
	pop	ecx
	ret	0
$LN19@X509_find_:
; Line 305
	mov	eax, DWORD PTR _x509$1$[esp+20]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 308
	pop	ecx
	ret	0
_X509_find_by_subject ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_find_by_issuer_and_serial
_TEXT	SEGMENT
_sk$ = 8						; size = 4
_name$ = 12						; size = 4
_serial$ = 16						; size = 4
_X509_find_by_issuer_and_serial PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 277
	push	edi
; Line 282
	mov	edi, DWORD PTR _sk$[esp]
	test	edi, edi
	jne	SHORT $LN5@X509_find_
; Line 283
	xor	eax, eax
	pop	edi
; Line 295
	ret	0
$LN5@X509_find_:
	push	ebx
	push	ebp
	push	esi
; Line 289
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@X509_find_
	npad	1
$LL4@X509_find_:
; Line 290
	push	esi
	push	edi
	call	_sk_value
; Line 74
	push	DWORD PTR _serial$[esp+20]
; Line 290
	mov	ebp, eax
; Line 72
	mov	ebx, DWORD PTR [ebp]
; Line 74
	push	DWORD PTR [ebx+4]
	call	_ASN1_STRING_cmp
	add	esp, 16					; 00000010H
; Line 75
	test	eax, eax
	jne	SHORT $LN20@X509_find_
; Line 77
	push	DWORD PTR _name$[esp+12]
	push	DWORD PTR [ebx+12]
	call	_X509_NAME_cmp
	add	esp, 8
; Line 291
	test	eax, eax
	je	SHORT $LN12@X509_find_
$LN20@X509_find_:
; Line 289
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@X509_find_
$LN3@X509_find_:
	pop	esi
	pop	ebp
	pop	ebx
; Line 294
	xor	eax, eax
	pop	edi
; Line 295
	ret	0
$LN12@X509_find_:
	pop	esi
; Line 292
	mov	eax, ebp
	pop	ebp
	pop	ebx
	pop	edi
; Line 295
	ret	0
_X509_find_by_issuer_and_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_match
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_X509_CRL_match PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 128
	mov	edx, DWORD PTR _b$[esp-4]
	mov	ecx, DWORD PTR _a$[esp-4]
	add	edx, 44					; 0000002cH
	push	esi
	add	ecx, 44					; 0000002cH
	mov	esi, 16					; 00000010H
$LL5@X509_CRL_m:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN4@X509_CRL_m
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL5@X509_CRL_m
	xor	eax, eax
	pop	esi
; Line 129
	ret	0
$LN4@X509_CRL_m:
; Line 128
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN6@X509_CRL_m
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN6@X509_CRL_m
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN6@X509_CRL_m
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	jne	SHORT $LN6@X509_CRL_m
	xor	eax, eax
	pop	esi
; Line 129
	ret	0
$LN6@X509_CRL_m:
; Line 128
	sbb	eax, eax
	or	eax, 1
	pop	esi
; Line 129
	ret	0
_X509_CRL_match ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_X509_CRL_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 122
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	mov	eax, DWORD PTR _a$[esp]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	call	_X509_NAME_cmp
	add	esp, 8
; Line 123
	ret	0
_X509_CRL_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_hash_old
_TEXT	SEGMENT
_md_ctx$ = -44						; size = 24
_md$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_x$ = 8							; size = 4
_X509_NAME_hash_old PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 253
	mov	eax, 44					; 0000002cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+44], eax
	push	esi
	push	edi
	mov	edi, DWORD PTR _x$[esp+48]
; Line 255
	xor	esi, esi
; Line 259
	push	esi
	push	edi
	call	_i2d_X509_NAME
; Line 260
	lea	eax, DWORD PTR _md_ctx$[esp+60]
	push	eax
	call	_EVP_MD_CTX_init
; Line 261
	lea	eax, DWORD PTR _md_ctx$[esp+64]
	push	8
	push	eax
	call	_EVP_MD_CTX_set_flags
	add	esp, 20					; 00000014H
; Line 264
	push	esi
	call	_EVP_md5
	push	eax
	lea	eax, DWORD PTR _md_ctx$[esp+60]
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN2@X509_NAME_
	mov	eax, DWORD PTR [edi+8]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	lea	eax, DWORD PTR _md_ctx$[esp+60]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN2@X509_NAME_
	push	esi
	lea	eax, DWORD PTR _md$[esp+56]
	push	eax
	lea	eax, DWORD PTR _md_ctx$[esp+60]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN2@X509_NAME_
; Line 265
	movzx	esi, BYTE PTR _md$[esp+55]
	movzx	eax, BYTE PTR _md$[esp+54]
	movzx	ecx, BYTE PTR _md$[esp+52]
	shl	esi, 8
	or	esi, eax
	movzx	eax, BYTE PTR _md$[esp+53]
	shl	esi, 8
	or	esi, eax
	shl	esi, 8
	or	esi, ecx
$LN2@X509_NAME_:
; Line 268
	lea	eax, DWORD PTR _md_ctx$[esp+52]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 271
	mov	ecx, DWORD PTR __$ArrayPad$[esp+56]
	add	esp, 4
	mov	eax, esi
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 44					; 0000002cH
	ret	0
_X509_NAME_hash_old ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_hash
_TEXT	SEGMENT
_md$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_x$ = 8							; size = 4
_X509_NAME_hash PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 230
	mov	eax, 24					; 00000018H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+24], eax
	push	esi
	mov	esi, DWORD PTR _x$[esp+24]
; Line 235
	push	0
	push	esi
	call	_i2d_X509_NAME
	add	esp, 8
; Line 236
	push	0
	call	_EVP_sha1
	push	eax
	push	0
	lea	eax, DWORD PTR _md$[esp+40]
	push	eax
	push	DWORD PTR [esi+16]
	push	DWORD PTR [esi+12]
	call	_EVP_Digest
	add	esp, 24					; 00000018H
	pop	esi
	test	eax, eax
	jne	SHORT $LN2@X509_NAME_
; Line 244
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
$LN2@X509_NAME_:
; Line 240
	movzx	eax, BYTE PTR _md$[esp+27]
	movzx	ecx, BYTE PTR _md$[esp+26]
; Line 243
	shl	eax, 8
	or	eax, ecx
	movzx	ecx, BYTE PTR _md$[esp+25]
	shl	eax, 8
	or	eax, ecx
	movzx	ecx, BYTE PTR _md$[esp+24]
	shl	eax, 8
	or	eax, ecx
; Line 244
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
_X509_NAME_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_X509_NAME_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 203
	push	edi
; Line 208
	mov	edi, DWORD PTR _a$[esp]
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN3@X509_NAME_
	cmp	DWORD PTR [edi+4], 0
	je	SHORT $LN4@X509_NAME_
$LN3@X509_NAME_:
; Line 209
	push	0
	push	edi
	call	_i2d_X509_NAME
	add	esp, 8
; Line 210
	test	eax, eax
	jns	SHORT $LN4@X509_NAME_
; Line 211
	mov	eax, -2					; fffffffeH
	pop	edi
; Line 227
	ret	0
$LN4@X509_NAME_:
	push	ebx
; Line 214
	mov	ebx, DWORD PTR _b$[esp+4]
	cmp	DWORD PTR [ebx+12], 0
	je	SHORT $LN6@X509_NAME_
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN7@X509_NAME_
$LN6@X509_NAME_:
; Line 215
	push	0
	push	ebx
	call	_i2d_X509_NAME
	add	esp, 8
; Line 216
	test	eax, eax
	jns	SHORT $LN7@X509_NAME_
; Line 217
	pop	ebx
	mov	eax, -2					; fffffffeH
	pop	edi
; Line 227
	ret	0
$LN7@X509_NAME_:
	push	esi
; Line 220
	mov	esi, DWORD PTR [edi+16]
	mov	eax, esi
	sub	eax, DWORD PTR [ebx+16]
; Line 222
	jne	SHORT $LN17@X509_NAME_
; Line 225
	mov	ecx, DWORD PTR [edi+12]
	mov	edx, DWORD PTR [ebx+12]
	sub	esi, 4
	jb	SHORT $LN12@X509_NAME_
$LL13@X509_NAME_:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN11@X509_NAME_
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL13@X509_NAME_
$LN12@X509_NAME_:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN10@X509_NAME_
$LN11@X509_NAME_:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN14@X509_NAME_
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN10@X509_NAME_
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN14@X509_NAME_
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN10@X509_NAME_
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN14@X509_NAME_
	cmp	esi, -1
	je	SHORT $LN10@X509_NAME_
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	je	SHORT $LN10@X509_NAME_
$LN14@X509_NAME_:
	pop	esi
	sbb	eax, eax
	pop	ebx
	or	eax, 1
	pop	edi
; Line 227
	ret	0
$LN10@X509_NAME_:
; Line 225
	xor	eax, eax
$LN17@X509_NAME_:
	pop	esi
	pop	ebx
	pop	edi
; Line 227
	ret	0
_X509_NAME_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_X509_cmp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 181
	push	ebx
	push	esi
	push	edi
; Line 184
	mov	edi, DWORD PTR _a$[esp+8]
	push	0
	push	-1
	push	edi
	call	_X509_check_purpose
; Line 185
	mov	ebx, DWORD PTR _b$[esp+20]
	push	0
	push	-1
	push	ebx
	call	_X509_check_purpose
	add	esp, 24					; 00000018H
; Line 187
	lea	edx, DWORD PTR [ebx+80]
	lea	ecx, DWORD PTR [edi+80]
	mov	esi, 16					; 00000010H
	npad	3
$LL8@X509_cmp:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN7@X509_cmp
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL8@X509_cmp
	xor	eax, eax
	jmp	SHORT $LN10@X509_cmp
$LN7@X509_cmp:
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN9@X509_cmp
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN9@X509_cmp
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN9@X509_cmp
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	jne	SHORT $LN9@X509_cmp
	xor	eax, eax
	jmp	SHORT $LN10@X509_cmp
$LN9@X509_cmp:
	sbb	eax, eax
	or	eax, 1
$LN10@X509_cmp:
; Line 188
	test	eax, eax
	jne	SHORT $LN1@X509_cmp
; Line 191
	mov	edx, DWORD PTR [edi]
	cmp	DWORD PTR [edx+48], eax
	jne	SHORT $LN3@X509_cmp
	mov	esi, DWORD PTR [ebx]
	cmp	DWORD PTR [esi+48], eax
	jne	SHORT $LN3@X509_cmp
; Line 192
	mov	ecx, DWORD PTR [edx+44]
	mov	eax, ecx
	sub	eax, DWORD PTR [esi+44]
; Line 193
	jne	SHORT $LN1@X509_cmp
; Line 195
	mov	edx, DWORD PTR [edx+40]
	mov	esi, DWORD PTR [esi+40]
	sub	ecx, 4
	jb	SHORT $LN13@X509_cmp
$LL14@X509_cmp:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [esi]
	jne	SHORT $LN12@X509_cmp
	add	edx, 4
	add	esi, 4
	sub	ecx, 4
	jae	SHORT $LL14@X509_cmp
$LN13@X509_cmp:
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN3@X509_cmp
$LN12@X509_cmp:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [esi]
	jne	SHORT $LN15@X509_cmp
	cmp	ecx, -3					; fffffffdH
	je	SHORT $LN3@X509_cmp
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [esi+1]
	jne	SHORT $LN15@X509_cmp
	cmp	ecx, -2					; fffffffeH
	je	SHORT $LN3@X509_cmp
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [esi+2]
	jne	SHORT $LN15@X509_cmp
	cmp	ecx, -1
	je	SHORT $LN3@X509_cmp
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [esi+3]
	je	SHORT $LN3@X509_cmp
$LN15@X509_cmp:
	pop	edi
	sbb	eax, eax
	pop	esi
	or	eax, 1
	pop	ebx
; Line 199
	ret	0
$LN3@X509_cmp:
; Line 198
	xor	eax, eax
$LN1@X509_cmp:
	pop	edi
	pop	esi
	pop	ebx
; Line 199
	ret	0
_X509_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_subject_name_hash_old
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_subject_name_hash_old PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 167
	mov	eax, DWORD PTR _x$[esp-4]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+20]
	call	_X509_NAME_hash_old
	add	esp, 4
; Line 168
	ret	0
_X509_subject_name_hash_old ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_issuer_name_hash_old
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_issuer_name_hash_old PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 145
	mov	eax, DWORD PTR _x$[esp-4]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+12]
	call	_X509_NAME_hash_old
	add	esp, 4
; Line 146
	ret	0
_X509_issuer_name_hash_old ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_subject_name_hash
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_subject_name_hash PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 161
	mov	eax, DWORD PTR _x$[esp-4]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+20]
	call	_X509_NAME_hash
	add	esp, 4
; Line 162
	ret	0
_X509_subject_name_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_subject_name_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_X509_subject_name_cmp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 117
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+20]
	mov	eax, DWORD PTR _a$[esp]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+20]
	call	_X509_NAME_cmp
	add	esp, 8
; Line 118
	ret	0
_X509_subject_name_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_issuer_name_hash
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_issuer_name_hash PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 139
	mov	eax, DWORD PTR _x$[esp-4]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+12]
	call	_X509_NAME_hash
	add	esp, 4
; Line 140
	ret	0
_X509_issuer_name_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_issuer_name_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_X509_issuer_name_cmp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 112
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+12]
	mov	eax, DWORD PTR _a$[esp]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+12]
	call	_X509_NAME_cmp
	add	esp, 8
; Line 113
	ret	0
_X509_issuer_name_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_issuer_and_serial_hash
_TEXT	SEGMENT
_ctx$ = -44						; size = 24
_md$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_a$ = 8							; size = 4
_X509_issuer_and_serial_hash PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 82
	mov	eax, 44					; 0000002cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+44], eax
	push	ebx
	mov	ebx, DWORD PTR _a$[esp+44]
; Line 88
	lea	eax, DWORD PTR _ctx$[esp+48]
	push	esi
	push	edi
	push	eax
	xor	esi, esi
	call	_EVP_MD_CTX_init
; Line 89
	mov	eax, DWORD PTR [ebx]
	push	esi
	push	esi
	push	DWORD PTR [eax+12]
	call	_X509_NAME_oneline
	add	esp, 16					; 00000010H
	mov	edi, eax
; Line 90
	push	esi
	call	_EVP_md5
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+64]
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$9
; Line 92
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL7@X509_issue:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL7@X509_issue
	sub	ecx, edx
	lea	eax, DWORD PTR _ctx$[esp+56]
	push	ecx
	push	edi
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$9
; Line 94
	push	edi
	call	_CRYPTO_free
; Line 95
	mov	eax, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	lea	eax, DWORD PTR _ctx$[esp+68]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$9
; Line 99
	push	0
	lea	eax, DWORD PTR _md$[esp+60]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+64]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$9
; Line 101
	movzx	esi, BYTE PTR _md$[esp+59]
	movzx	eax, BYTE PTR _md$[esp+58]
	movzx	ecx, BYTE PTR _md$[esp+56]
	shl	esi, 8
	or	esi, eax
	movzx	eax, BYTE PTR _md$[esp+57]
	shl	esi, 8
	or	esi, eax
	shl	esi, 8
	or	esi, ecx
$err$9:
; Line 105
	lea	eax, DWORD PTR _ctx$[esp+56]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 107
	mov	ecx, DWORD PTR __$ArrayPad$[esp+60]
	add	esp, 4
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 44					; 0000002cH
	ret	0
_X509_issuer_and_serial_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_issuer_and_serial_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_X509_issuer_and_serial_cmp PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 72
	mov	eax, DWORD PTR _a$[esp-4]
	push	esi
	push	edi
	mov	esi, DWORD PTR [eax]
; Line 73
	mov	eax, DWORD PTR _b$[esp+4]
	mov	edi, DWORD PTR [eax]
; Line 74
	push	DWORD PTR [edi+4]
	push	DWORD PTR [esi+4]
	call	_ASN1_STRING_cmp
	add	esp, 8
; Line 75
	test	eax, eax
	jne	SHORT $LN1@X509_issue
; Line 77
	push	DWORD PTR [edi+12]
	push	DWORD PTR [esi+12]
	call	_X509_NAME_cmp
	add	esp, 8
$LN1@X509_issue:
; Line 78
	pop	edi
	pop	esi
	ret	0
_X509_issuer_and_serial_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_chain_up_ref
_TEXT	SEGMENT
_chain$ = 8						; size = 4
_X509_chain_up_ref PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 489
	push	esi
	push	edi
; Line 492
	push	DWORD PTR _chain$[esp+4]
	call	_sk_dup
	mov	edi, eax
; Line 493
	xor	esi, esi
	push	edi
	call	_sk_num
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN10@X509_chain
	npad	4
$LL4@X509_chain:
; Line 494
	push	esi
	push	edi
	call	_sk_value
; Line 495
	push	495					; 000001efH
	push	OFFSET ??_C@_0BJ@KHABNHFN@?4?2crypto?2x509?2x509_cmp?4c?$AA@
	push	3
	add	eax, 16					; 00000010H
	push	1
	push	eax
	call	_CRYPTO_add_lock
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 32					; 00000020H
	cmp	esi, eax
	jl	SHORT $LL4@X509_chain
$LN10@X509_chain:
; Line 497
	mov	eax, edi
	pop	edi
	pop	esi
; Line 498
	ret	0
_X509_chain_up_ref ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_CRL_check_suiteb
_TEXT	SEGMENT
_crl$ = 8						; size = 4
_pk$ = 12						; size = 4
_flags$ = 16						; size = 4
_X509_CRL_check_suiteb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 464
	test	DWORD PTR _flags$[esp-4], 196608	; 00030000H
	jne	SHORT $LN2@X509_CRL_c
; Line 465
	xor	eax, eax
; Line 468
	ret	0
$LN2@X509_CRL_c:
; Line 466
	mov	eax, DWORD PTR _crl$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
; Line 467
	lea	ecx, DWORD PTR _flags$[esp]
	push	ecx
	push	eax
	push	DWORD PTR _pk$[esp+8]
	call	_check_suite_b
	add	esp, 16					; 00000010H
; Line 468
	ret	0
_X509_CRL_check_suiteb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_chain_check_suiteb
_TEXT	SEGMENT
_tflags$ = -8						; size = 4
_sign_nid$1$ = -4					; size = 4
_perror_depth$ = 8					; size = 4
_x$ = 12						; size = 4
_chain$ = 16						; size = 4
_flags$ = 20						; size = 4
_X509_chain_check_suiteb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 396
	mov	eax, 8
	call	__chkstk
; Line 400
	mov	eax, DWORD PTR _flags$[esp+4]
	test	eax, 196608				; 00030000H
	jne	SHORT $LN5@X509_chain
; Line 401
	xor	eax, eax
; Line 459
	add	esp, 8
	ret	0
$LN5@X509_chain:
	push	ebp
; Line 404
	mov	ebp, DWORD PTR _x$[esp+8]
	mov	DWORD PTR _tflags$[esp+12], eax
	push	esi
	mov	esi, DWORD PTR _chain$[esp+12]
	push	edi
	test	ebp, ebp
	jne	SHORT $LN6@X509_chain
; Line 405
	push	0
	push	esi
	call	_sk_value
	add	esp, 8
	mov	ebp, eax
; Line 406
	mov	edi, 1
; Line 407
	jmp	SHORT $LN7@X509_chain
$LN6@X509_chain:
; Line 408
	xor	edi, edi
$LN7@X509_chain:
; Line 410
	mov	eax, DWORD PTR [ebp]
	push	DWORD PTR [eax]
	call	_ASN1_INTEGER_get
	add	esp, 4
	cmp	eax, 2
	je	SHORT $LN8@X509_chain
; Line 411
	mov	esi, 56					; 00000038H
; Line 413
	xor	edi, edi
; Line 414
	jmp	$LN16@X509_chain
$LN8@X509_chain:
; Line 312
	mov	eax, DWORD PTR [ebp]
	push	ebx
	test	eax, eax
	je	$LN21@X509_chain
; Line 314
	push	DWORD PTR [eax+24]
	call	_X509_PUBKEY_get
	mov	ebx, eax
	add	esp, 4
; Line 367
	test	ebx, ebx
	je	$LN47@X509_chain
	cmp	DWORD PTR [ebx], 408			; 00000198H
	jne	$LN47@X509_chain
; Line 368
	push	DWORD PTR [ebx+20]
	call	_EC_KEY_get0_group
	add	esp, 4
; Line 369
	test	eax, eax
	je	$LN47@X509_chain
; Line 371
	push	eax
	call	_EC_GROUP_get_curve_name
	add	esp, 4
; Line 373
	cmp	eax, 715				; 000002cbH
	jne	SHORT $LN26@X509_chain
; Line 379
	mov	eax, DWORD PTR _flags$[esp+20]
	test	eax, 131072				; 00020000H
	jne	SHORT $LN29@X509_chain
; Line 380
	mov	esi, 60					; 0000003cH
	jmp	$LN48@X509_chain
$LN29@X509_chain:
; Line 382
	and	eax, -65537				; fffeffffH
	mov	DWORD PTR _tflags$[esp+24], eax
$LN9@X509_chain:
; Line 425
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jge	$LN3@X509_chain
$LL4@X509_chain:
; Line 426
	push	ebp
	call	_X509_get_signature_nid
; Line 427
	push	edi
	push	esi
	mov	DWORD PTR _sign_nid$1$[esp+36], eax
	call	_sk_value
	mov	ebp, eax
; Line 428
	mov	ecx, DWORD PTR [ebp]
	push	DWORD PTR [ecx]
	call	_ASN1_INTEGER_get
	add	esp, 16					; 00000010H
	cmp	eax, 2
	jne	$LN40@X509_chain
; Line 432
	push	ebx
	call	_EVP_PKEY_free
; Line 312
	mov	eax, DWORD PTR [ebp]
; Line 432
	add	esp, 4
; Line 312
	test	eax, eax
	je	SHORT $LN37@X509_chain
; Line 314
	push	DWORD PTR [eax+24]
	call	_X509_PUBKEY_get
	add	esp, 4
	mov	ebx, eax
	jmp	SHORT $LN35@X509_chain
$LN26@X509_chain:
; Line 383
	cmp	eax, 415				; 0000019fH
	jne	SHORT $LN30@X509_chain
; Line 386
	test	DWORD PTR _flags$[esp+20], 65536	; 00010000H
	jne	SHORT $LN9@X509_chain
; Line 387
	mov	esi, 60					; 0000003cH
	jmp	SHORT $LN48@X509_chain
$LN37@X509_chain:
; Line 313
	xor	ebx, ebx
$LN35@X509_chain:
; Line 434
	lea	eax, DWORD PTR _tflags$[esp+24]
	push	eax
	push	DWORD PTR _sign_nid$1$[esp+28]
	push	ebx
	call	_check_suite_b
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 435
	test	esi, esi
	jne	SHORT $end$51
; Line 425
	mov	esi, DWORD PTR _chain$[esp+20]
	inc	edi
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	$LL4@X509_chain
$LN3@X509_chain:
; Line 440
	lea	eax, DWORD PTR _tflags$[esp+24]
	push	eax
	push	ebp
	call	_X509_get_signature_nid
	add	esp, 4
	push	eax
	push	ebx
	call	_check_suite_b
	add	esp, 12					; 0000000cH
	mov	esi, eax
	jmp	SHORT $end$51
$LN40@X509_chain:
; Line 429
	mov	esi, 56					; 00000038H
; Line 430
	jmp	SHORT $end$51
$LN30@X509_chain:
; Line 389
	mov	esi, 58					; 0000003aH
	jmp	SHORT $LN48@X509_chain
$LN21@X509_chain:
; Line 313
	xor	ebx, ebx
$LN47@X509_chain:
; Line 370
	mov	esi, 57					; 00000039H
$LN48@X509_chain:
; Line 422
	xor	edi, edi
$end$51:
; Line 442
	test	ebx, ebx
	je	SHORT $LN12@X509_chain
; Line 443
	push	ebx
	call	_EVP_PKEY_free
	add	esp, 4
$LN12@X509_chain:
; Line 444
	pop	ebx
	test	esi, esi
	je	SHORT $LN17@X509_chain
; Line 447
	cmp	esi, 59					; 0000003bH
	je	SHORT $LN15@X509_chain
	cmp	esi, 60					; 0000003cH
	jne	SHORT $LN16@X509_chain
$LN15@X509_chain:
	test	edi, edi
	je	SHORT $LN14@X509_chain
; Line 448
	dec	edi
$LN14@X509_chain:
; Line 453
	cmp	esi, 60					; 0000003cH
	jne	SHORT $LN16@X509_chain
	mov	eax, DWORD PTR _flags$[esp+16]
	mov	ecx, 61					; 0000003dH
	cmp	eax, DWORD PTR _tflags$[esp+20]
	cmovne	esi, ecx
$LN16@X509_chain:
; Line 455
	mov	eax, DWORD PTR _perror_depth$[esp+16]
	test	eax, eax
	je	SHORT $LN17@X509_chain
; Line 456
	mov	DWORD PTR [eax], edi
$LN17@X509_chain:
	pop	edi
; Line 458
	mov	eax, esi
	pop	esi
	pop	ebp
; Line 459
	add	esp, 8
	ret	0
_X509_chain_check_suiteb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_check_private_key
_TEXT	SEGMENT
_x$ = 8							; size = 4
_k$ = 12						; size = 4
_X509_check_private_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 312
	mov	eax, DWORD PTR _x$[esp-4]
	push	esi
	push	edi
	test	eax, eax
	je	SHORT $LN15@X509_check
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN15@X509_check
; Line 314
	push	DWORD PTR [eax+24]
	call	_X509_PUBKEY_get
	mov	edi, eax
	add	esp, 4
; Line 331
	test	edi, edi
	je	SHORT $LN4@X509_check
; Line 332
	push	DWORD PTR _k$[esp+4]
	push	edi
	call	_EVP_PKEY_cmp
	mov	esi, eax
	add	esp, 8
; Line 336
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN9@X509_check
	cmp	esi, -1
	je	SHORT $LN8@X509_check
	test	esi, esi
	jne	SHORT $LN2@X509_check
; Line 340
	push	340					; 00000154H
	push	OFFSET ??_C@_0BJ@KHABNHFN@?4?2crypto?2x509?2x509_cmp?4c?$AA@
	push	116					; 00000074H
; Line 341
	jmp	SHORT $LN17@X509_check
$LN8@X509_check:
; Line 343
	push	343					; 00000157H
	push	OFFSET ??_C@_0BJ@KHABNHFN@?4?2crypto?2x509?2x509_cmp?4c?$AA@
	push	115					; 00000073H
; Line 344
	jmp	SHORT $LN17@X509_check
$LN15@X509_check:
; Line 313
	xor	edi, edi
$LN4@X509_check:
; Line 334
	mov	esi, -2					; fffffffeH
$LN9@X509_check:
; Line 346
	push	346					; 0000015aH
	push	OFFSET ??_C@_0BJ@KHABNHFN@?4?2crypto?2x509?2x509_cmp?4c?$AA@
	push	117					; 00000075H
$LN17@X509_check:
	push	128					; 00000080H
	push	11					; 0000000bH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN2@X509_check:
; Line 348
	test	edi, edi
	je	SHORT $LN10@X509_check
; Line 349
	push	edi
	call	_EVP_PKEY_free
	add	esp, 4
$LN10@X509_check:
; Line 350
	xor	eax, eax
	test	esi, esi
	pop	edi
	setg	al
	pop	esi
; Line 353
	ret	0
_X509_check_private_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_get0_pubkey_bitstr
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_get0_pubkey_bitstr PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 319
	mov	eax, DWORD PTR _x$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@X509_get0_
; Line 322
	ret	0
$LN2@X509_get0_:
; Line 321
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+24]
	mov	eax, DWORD PTR [eax+4]
; Line 322
	ret	0
_X509_get0_pubkey_bitstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_get_pubkey
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_get_pubkey PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 312
	mov	eax, DWORD PTR _x$[esp-4]
	test	eax, eax
	je	SHORT $LN3@X509_get_p
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@X509_get_p
; Line 314
	push	DWORD PTR [eax+24]
	call	_X509_PUBKEY_get
	add	esp, 4
; Line 315
	ret	0
$LN3@X509_get_p:
; Line 313
	xor	eax, eax
; Line 315
	ret	0
_X509_get_pubkey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_get_subject_name
_TEXT	SEGMENT
_a$ = 8							; size = 4
_X509_get_subject_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 151
	mov	eax, DWORD PTR _a$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+20]
; Line 152
	ret	0
_X509_get_subject_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_get_issuer_name
_TEXT	SEGMENT
_a$ = 8							; size = 4
_X509_get_issuer_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 134
	mov	eax, DWORD PTR _a$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+12]
; Line 135
	ret	0
_X509_get_issuer_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_get_serialNumber
_TEXT	SEGMENT
_a$ = 8							; size = 4
_X509_get_serialNumber PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_cmp.c
; Line 156
	mov	eax, DWORD PTR _a$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
; Line 157
	ret	0
_X509_get_serialNumber ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_EVP_PKEY_type
PUBLIC	_EVP_PKEY_id
PUBLIC	_EVP_PKEY_base_id
PUBLIC	_EVP_PKEY_bits
PUBLIC	_EVP_PKEY_size
PUBLIC	_EVP_PKEY_set_type
PUBLIC	_EVP_PKEY_set_type_str
PUBLIC	_EVP_PKEY_assign
PUBLIC	_EVP_PKEY_get0
PUBLIC	_EVP_PKEY_set1_RSA
PUBLIC	_EVP_PKEY_get1_RSA
PUBLIC	_EVP_PKEY_set1_DSA
PUBLIC	_EVP_PKEY_get1_DSA
PUBLIC	_EVP_PKEY_set1_DH
PUBLIC	_EVP_PKEY_get1_DH
PUBLIC	_EVP_PKEY_set1_EC_KEY
PUBLIC	_EVP_PKEY_get1_EC_KEY
PUBLIC	_EVP_PKEY_new
PUBLIC	_EVP_PKEY_free
PUBLIC	_EVP_PKEY_copy_parameters
PUBLIC	_EVP_PKEY_missing_parameters
PUBLIC	_EVP_PKEY_save_parameters
PUBLIC	_EVP_PKEY_cmp_parameters
PUBLIC	_EVP_PKEY_cmp
PUBLIC	_EVP_PKEY_print_public
PUBLIC	_EVP_PKEY_print_private
PUBLIC	_EVP_PKEY_print_params
PUBLIC	_EVP_PKEY_get_default_digest_nid
PUBLIC	??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@ ; `string'
PUBLIC	??_C@_0BP@NEJOLNCA@?$CFs?5algorithm?5?$CC?$CFs?$CC?5unsupported?6?$AA@ ; `string'
PUBLIC	??_C@_0L@KEAMIOLD@Public?5Key?$AA@		; `string'
PUBLIC	??_C@_0M@NBDOOMPD@Private?5Key?$AA@		; `string'
PUBLIC	??_C@_0L@PBGCNDPG@Parameters?$AA@		; `string'
EXTRN	_sk_pop_free:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_indent:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_OBJ_nid2ln:PROC
EXTRN	_EVP_PKEY_asn1_find:PROC
EXTRN	_EVP_PKEY_asn1_find_str:PROC
EXTRN	_EC_KEY_up_ref:PROC
EXTRN	_RSA_up_ref:PROC
EXTRN	_DH_up_ref:PROC
EXTRN	_DSA_up_ref:PROC
EXTRN	_X509_ATTRIBUTE_free:PROC
EXTRN	_ENGINE_finish:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0L@PBGCNDPG@Parameters?$AA@
CONST	SEGMENT
??_C@_0L@PBGCNDPG@Parameters?$AA@ DB 'Parameters', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
CONST	SEGMENT
??_C@_0M@NBDOOMPD@Private?5Key?$AA@ DB 'Private Key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
CONST	SEGMENT
??_C@_0L@KEAMIOLD@Public?5Key?$AA@ DB 'Public Key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NEJOLNCA@?$CFs?5algorithm?5?$CC?$CFs?$CC?5unsupported?6?$AA@
CONST	SEGMENT
??_C@_0BP@NEJOLNCA@?$CFs?5algorithm?5?$CC?$CFs?$CC?5unsupported?6?$AA@ DB '%'
	DB	's algorithm "%s" unsupported', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
CONST	SEGMENT
??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@ DB '.\crypto\evp\p_lib.'
	DB	'c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _unsup_alg
_TEXT	SEGMENT
_out$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_kstr$ = 20						; size = 4
_unsup_alg PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 418
	push	128					; 00000080H
	push	DWORD PTR _indent$[esp]
	push	DWORD PTR _out$[esp+4]
	call	_BIO_indent
; Line 419
	mov	eax, DWORD PTR _pkey$[esp+8]
	push	DWORD PTR [eax]
	call	_OBJ_nid2ln
	push	eax
	push	DWORD PTR _kstr$[esp+16]
	push	OFFSET ??_C@_0BP@NEJOLNCA@?$CFs?5algorithm?5?$CC?$CFs?$CC?5unsupported?6?$AA@
	push	DWORD PTR _out$[esp+24]
	call	_BIO_printf
	add	esp, 32					; 00000020H
; Line 421
	mov	eax, 1
; Line 422
	ret	0
_unsup_alg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_set_type
_TEXT	SEGMENT
_e$ = -4						; size = 4
_pkey$ = 8						; size = 4
_type$ = 12						; size = 4
_str$ = 16						; size = 4
_len$ = 20						; size = 4
_pkey_set_type PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 202
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 205
	mov	ebx, DWORD PTR _type$[esp+4]
	push	esi
	mov	esi, DWORD PTR _pkey$[esp+8]
	mov	DWORD PTR _e$[esp+12], 0
	test	esi, esi
	je	SHORT $LN5@pkey_set_t
; Line 206
	cmp	DWORD PTR [esi+20], 0
	je	SHORT $LN14@pkey_set_t
; Line 403
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN13@pkey_set_t
	mov	eax, DWORD PTR [eax+84]
	test	eax, eax
	je	SHORT $LN13@pkey_set_t
; Line 404
	push	esi
	call	eax
	add	esp, 4
; Line 405
	mov	DWORD PTR [esi+20], 0
$LN13@pkey_set_t:
; Line 408
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN14@pkey_set_t
; Line 409
	push	eax
	call	_ENGINE_finish
	add	esp, 4
; Line 410
	mov	DWORD PTR [esi+16], 0
$LN14@pkey_set_t:
; Line 212
	cmp	ebx, DWORD PTR [esi+4]
	jne	SHORT $LN4@pkey_set_t
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN4@pkey_set_t
; Line 213
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 242
	pop	ecx
	ret	0
$LN4@pkey_set_t:
; Line 216
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN5@pkey_set_t
; Line 217
	push	eax
	call	_ENGINE_finish
	add	esp, 4
; Line 218
	mov	DWORD PTR [esi+16], 0
$LN5@pkey_set_t:
; Line 222
	mov	eax, DWORD PTR _str$[esp+8]
	push	edi
	test	eax, eax
	je	SHORT $LN6@pkey_set_t
; Line 223
	push	DWORD PTR _len$[esp+12]
	push	eax
	lea	eax, DWORD PTR _e$[esp+24]
	push	eax
	call	_EVP_PKEY_asn1_find_str
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN18@pkey_set_t
$LN6@pkey_set_t:
; Line 225
	lea	eax, DWORD PTR _e$[esp+16]
	push	ebx
	push	eax
	call	_EVP_PKEY_asn1_find
	add	esp, 8
$LN18@pkey_set_t:
	mov	edi, eax
; Line 227
	mov	eax, DWORD PTR _e$[esp+16]
	test	esi, esi
	jne	SHORT $LN8@pkey_set_t
	test	eax, eax
	je	SHORT $LN8@pkey_set_t
; Line 228
	push	eax
	call	_ENGINE_finish
	mov	eax, DWORD PTR _e$[esp+20]
	add	esp, 4
$LN8@pkey_set_t:
; Line 230
	test	edi, edi
	jne	SHORT $LN9@pkey_set_t
; Line 231
	push	231					; 000000e7H
	push	OFFSET ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
	push	156					; 0000009cH
	push	158					; 0000009eH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 232
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 242
	pop	ecx
	ret	0
$LN9@pkey_set_t:
; Line 234
	test	esi, esi
	je	SHORT $LN10@pkey_set_t
; Line 235
	mov	DWORD PTR [esi+12], edi
; Line 236
	mov	DWORD PTR [esi+16], eax
; Line 238
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
; Line 239
	mov	DWORD PTR [esi+4], ebx
$LN10@pkey_set_t:
; Line 241
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 242
	pop	ecx
	ret	0
_pkey_set_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_free_it
_TEXT	SEGMENT
_x$ = 8							; size = 4
_EVP_PKEY_free_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 402
	push	esi
; Line 403
	mov	esi, DWORD PTR _x$[esp]
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_f
	mov	eax, DWORD PTR [eax+84]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_f
; Line 404
	push	esi
	call	eax
	add	esp, 4
; Line 405
	mov	DWORD PTR [esi+20], 0
$LN2@EVP_PKEY_f:
; Line 408
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_f
; Line 409
	push	eax
	call	_ENGINE_finish
	add	esp, 4
; Line 410
	mov	DWORD PTR [esi+16], 0
$LN3@EVP_PKEY_f:
	pop	esi
; Line 413
	ret	0
_EVP_PKEY_free_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_get_default_digest_nid
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pnid$ = 12						; size = 4
_EVP_PKEY_get_default_digest_nid PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 452
	mov	ecx, DWORD PTR _pkey$[esp-4]
	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_g
	mov	eax, DWORD PTR [eax+88]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_g
; Line 454
	push	DWORD PTR _pnid$[esp-4]
	push	0
	push	3
	push	ecx
	call	eax
	add	esp, 16					; 00000010H
; Line 456
	ret	0
$LN3@EVP_PKEY_g:
; Line 453
	mov	eax, -2					; fffffffeH
; Line 456
	ret	0
_EVP_PKEY_get_default_digest_nid ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_print_params
_TEXT	SEGMENT
_out$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_pctx$ = 20						; size = 4
_EVP_PKEY_print_params PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 444
	push	edi
; Line 445
	mov	edi, DWORD PTR _pkey$[esp]
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_p
	mov	eax, DWORD PTR [eax+76]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_p
; Line 446
	push	DWORD PTR _pctx$[esp]
	push	DWORD PTR _indent$[esp+4]
	push	edi
	push	DWORD PTR _out$[esp+12]
	call	eax
	add	esp, 16					; 00000010H
	pop	edi
; Line 448
	ret	0
$LN2@EVP_PKEY_p:
; Line 418
	push	128					; 00000080H
	push	DWORD PTR _indent$[esp+4]
	push	DWORD PTR _out$[esp+8]
	call	_BIO_indent
; Line 419
	push	DWORD PTR [edi]
	call	_OBJ_nid2ln
	push	eax
	push	OFFSET ??_C@_0L@PBGCNDPG@Parameters?$AA@
	push	OFFSET ??_C@_0BP@NEJOLNCA@?$CFs?5algorithm?5?$CC?$CFs?$CC?5unsupported?6?$AA@
	push	DWORD PTR _out$[esp+28]
	call	_BIO_printf
	add	esp, 32					; 00000020H
; Line 447
	mov	eax, 1
	pop	edi
; Line 448
	ret	0
_EVP_PKEY_print_params ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_print_private
_TEXT	SEGMENT
_out$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_pctx$ = 20						; size = 4
_EVP_PKEY_print_private PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 435
	push	edi
; Line 436
	mov	edi, DWORD PTR _pkey$[esp]
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_p
	mov	eax, DWORD PTR [eax+44]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_p
; Line 437
	push	DWORD PTR _pctx$[esp]
	push	DWORD PTR _indent$[esp+4]
	push	edi
	push	DWORD PTR _out$[esp+12]
	call	eax
	add	esp, 16					; 00000010H
	pop	edi
; Line 440
	ret	0
$LN2@EVP_PKEY_p:
; Line 418
	push	128					; 00000080H
	push	DWORD PTR _indent$[esp+4]
	push	DWORD PTR _out$[esp+8]
	call	_BIO_indent
; Line 419
	push	DWORD PTR [edi]
	call	_OBJ_nid2ln
	push	eax
	push	OFFSET ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
	push	OFFSET ??_C@_0BP@NEJOLNCA@?$CFs?5algorithm?5?$CC?$CFs?$CC?5unsupported?6?$AA@
	push	DWORD PTR _out$[esp+28]
	call	_BIO_printf
	add	esp, 32					; 00000020H
; Line 439
	mov	eax, 1
	pop	edi
; Line 440
	ret	0
_EVP_PKEY_print_private ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_print_public
_TEXT	SEGMENT
_out$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_pctx$ = 20						; size = 4
_EVP_PKEY_print_public PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 426
	push	edi
; Line 427
	mov	edi, DWORD PTR _pkey$[esp]
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_p
	mov	eax, DWORD PTR [eax+32]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_p
; Line 428
	push	DWORD PTR _pctx$[esp]
	push	DWORD PTR _indent$[esp+4]
	push	edi
	push	DWORD PTR _out$[esp+12]
	call	eax
	add	esp, 16					; 00000010H
	pop	edi
; Line 431
	ret	0
$LN2@EVP_PKEY_p:
; Line 418
	push	128					; 00000080H
	push	DWORD PTR _indent$[esp+4]
	push	DWORD PTR _out$[esp+8]
	call	_BIO_indent
; Line 419
	push	DWORD PTR [edi]
	call	_OBJ_nid2ln
	push	eax
	push	OFFSET ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
	push	OFFSET ??_C@_0BP@NEJOLNCA@?$CFs?5algorithm?5?$CC?$CFs?$CC?5unsupported?6?$AA@
	push	DWORD PTR _out$[esp+28]
	call	_BIO_printf
	add	esp, 32					; 00000020H
; Line 430
	mov	eax, 1
	pop	edi
; Line 431
	ret	0
_EVP_PKEY_print_public ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_EVP_PKEY_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 156
	push	esi
; Line 157
	mov	esi, DWORD PTR _a$[esp]
	push	edi
	mov	edi, DWORD PTR _b$[esp+4]
	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN2@EVP_PKEY_c
; Line 158
	pop	edi
	or	eax, -1
	pop	esi
; Line 174
	ret	0
$LN2@EVP_PKEY_c:
; Line 160
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN6@EVP_PKEY_c
; Line 163
	mov	eax, DWORD PTR [eax+72]
	test	eax, eax
	je	SHORT $LN5@EVP_PKEY_c
; Line 164
	push	edi
	push	esi
	call	eax
	add	esp, 8
; Line 165
	test	eax, eax
	jle	SHORT $LN1@EVP_PKEY_c
$LN5@EVP_PKEY_c:
; Line 169
	mov	eax, DWORD PTR [esi+12]
	mov	eax, DWORD PTR [eax+28]
	test	eax, eax
	je	SHORT $LN6@EVP_PKEY_c
; Line 170
	push	edi
	push	esi
	call	eax
	add	esp, 8
	pop	edi
	pop	esi
; Line 174
	ret	0
$LN6@EVP_PKEY_c:
; Line 173
	mov	eax, -2					; fffffffeH
$LN1@EVP_PKEY_c:
	pop	edi
	pop	esi
; Line 174
	ret	0
_EVP_PKEY_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_cmp_parameters
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_EVP_PKEY_cmp_parameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 148
	mov	ecx, DWORD PTR _a$[esp-4]
	mov	edx, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	je	SHORT $LN2@EVP_PKEY_c
; Line 149
	or	eax, -1
; Line 153
	ret	0
$LN2@EVP_PKEY_c:
; Line 150
	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_c
	mov	eax, DWORD PTR [eax+72]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_c
; Line 151
	mov	DWORD PTR _b$[esp-4], edx
	mov	DWORD PTR _a$[esp-4], ecx
	jmp	eax
$LN3@EVP_PKEY_c:
; Line 152
	mov	eax, -2					; fffffffeH
; Line 153
	ret	0
_EVP_PKEY_cmp_parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_save_parameters
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_mode$ = 12						; size = 4
_EVP_PKEY_save_parameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 102
	mov	ecx, DWORD PTR _pkey$[esp-4]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN2@EVP_PKEY_s
$LN7@EVP_PKEY_s:
; Line 105
	mov	edx, DWORD PTR _mode$[esp-4]
	mov	eax, DWORD PTR [ecx+24]
	test	edx, edx
	js	SHORT $LN1@EVP_PKEY_s
; Line 106
	mov	DWORD PTR [ecx+24], edx
; Line 120
	ret	0
$LN2@EVP_PKEY_s:
; Line 111
	cmp	eax, 408				; 00000198H
	je	SHORT $LN7@EVP_PKEY_s
; Line 119
	xor	eax, eax
$LN1@EVP_PKEY_s:
; Line 120
	ret	0
_EVP_PKEY_save_parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_missing_parameters
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_EVP_PKEY_missing_parameters PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 141
	mov	ecx, DWORD PTR _pkey$[esp-4]
	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_m
	mov	eax, DWORD PTR [eax+64]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_m
; Line 142
	mov	DWORD PTR _pkey$[esp-4], ecx
	jmp	eax
$LN2@EVP_PKEY_m:
; Line 143
	xor	eax, eax
; Line 144
	ret	0
_EVP_PKEY_missing_parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_copy_parameters
_TEXT	SEGMENT
_to$ = 8						; size = 4
_from$ = 12						; size = 4
_EVP_PKEY_copy_parameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 123
	push	esi
; Line 124
	mov	esi, DWORD PTR _from$[esp]
	push	edi
	mov	edi, DWORD PTR _to$[esp+4]
	mov	eax, DWORD PTR [edi]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN2@EVP_PKEY_c
; Line 125
	push	125					; 0000007dH
	push	OFFSET ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
	push	101					; 00000065H
; Line 130
	push	103					; 00000067H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$11:
; Line 136
	pop	edi
	xor	eax, eax
	pop	esi
; Line 137
	ret	0
$LN2@EVP_PKEY_c:
; Line 141
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_c
	mov	eax, DWORD PTR [eax+64]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_c
; Line 142
	push	esi
	call	eax
	add	esp, 4
; Line 129
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_c
; Line 130
	push	130					; 00000082H
	push	OFFSET ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
	push	103					; 00000067H
	push	103					; 00000067H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 136
	xor	eax, eax
	pop	edi
	pop	esi
; Line 137
	ret	0
$LN3@EVP_PKEY_c:
; Line 133
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $err$11
	mov	eax, DWORD PTR [eax+68]
	test	eax, eax
	je	SHORT $err$11
; Line 134
	push	esi
	push	edi
	call	eax
	add	esp, 8
	pop	edi
	pop	esi
; Line 137
	ret	0
_EVP_PKEY_copy_parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_free
_TEXT	SEGMENT
_x$ = 8							; size = 4
_EVP_PKEY_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 377
	push	esi
; Line 380
	mov	esi, DWORD PTR _x$[esp]
	test	esi, esi
	je	SHORT $LN1@EVP_PKEY_f
; Line 383
	push	383					; 0000017fH
	push	OFFSET ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
	push	10					; 0000000aH
	lea	eax, DWORD PTR [esi+8]
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 387
	test	eax, eax
	jg	SHORT $LN1@EVP_PKEY_f
; Line 403
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN7@EVP_PKEY_f
	mov	eax, DWORD PTR [eax+84]
	test	eax, eax
	je	SHORT $LN7@EVP_PKEY_f
; Line 404
	push	esi
	call	eax
	add	esp, 4
; Line 405
	mov	DWORD PTR [esi+20], 0
$LN7@EVP_PKEY_f:
; Line 408
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN8@EVP_PKEY_f
; Line 409
	push	eax
	call	_ENGINE_finish
	add	esp, 4
; Line 410
	mov	DWORD PTR [esi+16], 0
$LN8@EVP_PKEY_f:
; Line 396
	mov	eax, DWORD PTR [esi+28]
	test	eax, eax
	je	SHORT $LN4@EVP_PKEY_f
; Line 397
	push	OFFSET _X509_ATTRIBUTE_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN4@EVP_PKEY_f:
; Line 398
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@EVP_PKEY_f:
	pop	esi
; Line 399
	ret	0
_EVP_PKEY_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_new
_TEXT	SEGMENT
_EVP_PKEY_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 180
	push	180					; 000000b4H
	push	OFFSET ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
	push	32					; 00000020H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 181
	test	eax, eax
	jne	SHORT $LN2@EVP_PKEY_n
; Line 182
	push	182					; 000000b6H
	push	OFFSET ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
	push	65					; 00000041H
	push	106					; 0000006aH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 183
	xor	eax, eax
; Line 194
	ret	0
$LN2@EVP_PKEY_n:
; Line 185
	mov	DWORD PTR [eax], 0
; Line 186
	mov	DWORD PTR [eax+4], 0
; Line 187
	mov	DWORD PTR [eax+8], 1
; Line 188
	mov	DWORD PTR [eax+12], 0
; Line 189
	mov	DWORD PTR [eax+16], 0
; Line 190
	mov	DWORD PTR [eax+20], 0
; Line 191
	mov	DWORD PTR [eax+28], 0
; Line 192
	mov	DWORD PTR [eax+24], 1
; Line 194
	ret	0
_EVP_PKEY_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_get1_EC_KEY
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_EVP_PKEY_get1_EC_KEY PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 318
	push	esi
; Line 319
	mov	esi, DWORD PTR _pkey$[esp]
	cmp	DWORD PTR [esi], 408			; 00000198H
	je	SHORT $LN2@EVP_PKEY_g
; Line 320
	push	320					; 00000140H
	push	OFFSET ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
	push	142					; 0000008eH
	push	131					; 00000083H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 321
	xor	eax, eax
	pop	esi
; Line 325
	ret	0
$LN2@EVP_PKEY_g:
; Line 323
	push	DWORD PTR [esi+20]
	call	_EC_KEY_up_ref
; Line 324
	mov	eax, DWORD PTR [esi+20]
	add	esp, 4
	pop	esi
; Line 325
	ret	0
_EVP_PKEY_get1_EC_KEY ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_set1_EC_KEY
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_key$ = 12						; size = 4
_EVP_PKEY_set1_EC_KEY PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 310
	push	esi
; Line 256
	mov	esi, DWORD PTR _pkey$[esp]
	test	esi, esi
	je	SHORT $LN6@EVP_PKEY_s
; Line 246
	push	-1
	push	0
	push	408					; 00000198H
	push	esi
	call	_pkey_set_type
	add	esp, 16					; 00000010H
; Line 256
	test	eax, eax
	je	SHORT $LN6@EVP_PKEY_s
; Line 258
	mov	eax, DWORD PTR _key$[esp]
	push	ebx
; Line 259
	xor	ebx, ebx
	mov	DWORD PTR [esi+20], eax
	test	eax, eax
	setne	bl
; Line 312
	test	ebx, ebx
	je	SHORT $LN10@EVP_PKEY_s
; Line 313
	push	eax
	call	_EC_KEY_up_ref
	add	esp, 4
$LN10@EVP_PKEY_s:
; Line 314
	mov	eax, ebx
	pop	ebx
	pop	esi
; Line 315
	ret	0
$LN6@EVP_PKEY_s:
; Line 314
	xor	eax, eax
	pop	esi
; Line 315
	ret	0
_EVP_PKEY_set1_EC_KEY ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_get1_DH
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_EVP_PKEY_get1_DH PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 339
	push	esi
; Line 340
	mov	esi, DWORD PTR _pkey$[esp]
	mov	eax, DWORD PTR [esi]
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN2@EVP_PKEY_g
	cmp	eax, 920				; 00000398H
	je	SHORT $LN2@EVP_PKEY_g
; Line 341
	push	341					; 00000155H
	push	OFFSET ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
	push	128					; 00000080H
	push	119					; 00000077H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 342
	xor	eax, eax
	pop	esi
; Line 346
	ret	0
$LN2@EVP_PKEY_g:
; Line 344
	push	DWORD PTR [esi+20]
	call	_DH_up_ref
; Line 345
	mov	eax, DWORD PTR [esi+20]
	add	esp, 4
	pop	esi
; Line 346
	ret	0
_EVP_PKEY_get1_DH ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_set1_DH
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_key$ = 12						; size = 4
_EVP_PKEY_set1_DH PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 331
	push	esi
; Line 256
	mov	esi, DWORD PTR _pkey$[esp]
	test	esi, esi
	je	SHORT $LN6@EVP_PKEY_s
; Line 246
	push	-1
	push	0
	push	28					; 0000001cH
	push	esi
	call	_pkey_set_type
	add	esp, 16					; 00000010H
; Line 256
	test	eax, eax
	je	SHORT $LN6@EVP_PKEY_s
; Line 258
	mov	eax, DWORD PTR _key$[esp]
	push	ebx
; Line 259
	xor	ebx, ebx
	mov	DWORD PTR [esi+20], eax
	test	eax, eax
	setne	bl
; Line 333
	test	ebx, ebx
	je	SHORT $LN10@EVP_PKEY_s
; Line 334
	push	eax
	call	_DH_up_ref
	add	esp, 4
$LN10@EVP_PKEY_s:
; Line 335
	mov	eax, ebx
	pop	ebx
	pop	esi
; Line 336
	ret	0
$LN6@EVP_PKEY_s:
; Line 335
	xor	eax, eax
	pop	esi
; Line 336
	ret	0
_EVP_PKEY_set1_DH ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_get1_DSA
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_EVP_PKEY_get1_DSA PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 297
	push	esi
; Line 298
	mov	esi, DWORD PTR _pkey$[esp]
	cmp	DWORD PTR [esi], 116			; 00000074H
	je	SHORT $LN2@EVP_PKEY_g
; Line 299
	push	299					; 0000012bH
	push	OFFSET ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
	push	129					; 00000081H
	push	120					; 00000078H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 300
	xor	eax, eax
	pop	esi
; Line 304
	ret	0
$LN2@EVP_PKEY_g:
; Line 302
	push	DWORD PTR [esi+20]
	call	_DSA_up_ref
; Line 303
	mov	eax, DWORD PTR [esi+20]
	add	esp, 4
	pop	esi
; Line 304
	ret	0
_EVP_PKEY_get1_DSA ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_set1_DSA
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_key$ = 12						; size = 4
_EVP_PKEY_set1_DSA PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 289
	push	esi
; Line 256
	mov	esi, DWORD PTR _pkey$[esp]
	test	esi, esi
	je	SHORT $LN6@EVP_PKEY_s
; Line 246
	push	-1
	push	0
	push	116					; 00000074H
	push	esi
	call	_pkey_set_type
	add	esp, 16					; 00000010H
; Line 256
	test	eax, eax
	je	SHORT $LN6@EVP_PKEY_s
; Line 258
	mov	eax, DWORD PTR _key$[esp]
	push	ebx
; Line 259
	xor	ebx, ebx
	mov	DWORD PTR [esi+20], eax
	test	eax, eax
	setne	bl
; Line 291
	test	ebx, ebx
	je	SHORT $LN10@EVP_PKEY_s
; Line 292
	push	eax
	call	_DSA_up_ref
	add	esp, 4
$LN10@EVP_PKEY_s:
; Line 293
	mov	eax, ebx
	pop	ebx
	pop	esi
; Line 294
	ret	0
$LN6@EVP_PKEY_s:
; Line 293
	xor	eax, eax
	pop	esi
; Line 294
	ret	0
_EVP_PKEY_set1_DSA ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_get1_RSA
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_EVP_PKEY_get1_RSA PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 277
	push	esi
; Line 278
	mov	esi, DWORD PTR _pkey$[esp]
	cmp	DWORD PTR [esi], 6
	je	SHORT $LN2@EVP_PKEY_g
; Line 279
	push	279					; 00000117H
	push	OFFSET ??_C@_0BF@FMBDDPDA@?4?2crypto?2evp?2p_lib?4c?$AA@
	push	127					; 0000007fH
	push	121					; 00000079H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 280
	xor	eax, eax
	pop	esi
; Line 284
	ret	0
$LN2@EVP_PKEY_g:
; Line 282
	push	DWORD PTR [esi+20]
	call	_RSA_up_ref
; Line 283
	mov	eax, DWORD PTR [esi+20]
	add	esp, 4
	pop	esi
; Line 284
	ret	0
_EVP_PKEY_get1_RSA ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_set1_RSA
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_key$ = 12						; size = 4
_EVP_PKEY_set1_RSA PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 269
	push	esi
; Line 256
	mov	esi, DWORD PTR _pkey$[esp]
	test	esi, esi
	je	SHORT $LN6@EVP_PKEY_s
; Line 246
	push	-1
	push	0
	push	6
	push	esi
	call	_pkey_set_type
	add	esp, 16					; 00000010H
; Line 256
	test	eax, eax
	je	SHORT $LN6@EVP_PKEY_s
; Line 258
	mov	eax, DWORD PTR _key$[esp]
	push	ebx
; Line 259
	xor	ebx, ebx
	mov	DWORD PTR [esi+20], eax
	test	eax, eax
	setne	bl
; Line 271
	test	ebx, ebx
	je	SHORT $LN10@EVP_PKEY_s
; Line 272
	push	eax
	call	_RSA_up_ref
	add	esp, 4
$LN10@EVP_PKEY_s:
; Line 273
	mov	eax, ebx
	pop	ebx
	pop	esi
; Line 274
	ret	0
$LN6@EVP_PKEY_s:
; Line 273
	xor	eax, eax
	pop	esi
; Line 274
	ret	0
_EVP_PKEY_set1_RSA ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_get0
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_EVP_PKEY_get0 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 264
	mov	eax, DWORD PTR _pkey$[esp-4]
	mov	eax, DWORD PTR [eax+20]
; Line 265
	ret	0
_EVP_PKEY_get0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_assign
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_type$ = 12						; size = 4
_key$ = 16						; size = 4
_EVP_PKEY_assign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 255
	push	esi
; Line 256
	mov	esi, DWORD PTR _pkey$[esp]
	test	esi, esi
	je	SHORT $LN3@EVP_PKEY_a
; Line 246
	push	-1
	push	0
	push	DWORD PTR _type$[esp+8]
	push	esi
	call	_pkey_set_type
	add	esp, 16					; 00000010H
; Line 256
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_a
; Line 258
	mov	ecx, DWORD PTR _key$[esp]
; Line 259
	xor	eax, eax
	test	ecx, ecx
	mov	DWORD PTR [esi+20], ecx
	pop	esi
	setne	al
; Line 260
	ret	0
$LN3@EVP_PKEY_a:
; Line 257
	xor	eax, eax
	pop	esi
; Line 260
	ret	0
_EVP_PKEY_assign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_set_type_str
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_str$ = 12						; size = 4
_len$ = 16						; size = 4
_EVP_PKEY_set_type_str PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 251
	push	DWORD PTR _len$[esp-4]
	push	DWORD PTR _str$[esp]
	push	0
	push	DWORD PTR _pkey$[esp+8]
	call	_pkey_set_type
	add	esp, 16					; 00000010H
; Line 252
	ret	0
_EVP_PKEY_set_type_str ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_set_type
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_type$ = 12						; size = 4
_EVP_PKEY_set_type PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 246
	push	-1
	push	0
	push	DWORD PTR _type$[esp+4]
	push	DWORD PTR _pkey$[esp+8]
	call	_pkey_set_type
	add	esp, 16					; 00000010H
; Line 247
	ret	0
_EVP_PKEY_set_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_size
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_EVP_PKEY_size PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 94
	mov	eax, DWORD PTR _pkey$[esp-4]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_s
	mov	ecx, DWORD PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN2@EVP_PKEY_s
	mov	ecx, DWORD PTR [ecx+48]
	test	ecx, ecx
	je	SHORT $LN2@EVP_PKEY_s
; Line 95
	mov	DWORD PTR _pkey$[esp-4], eax
	jmp	ecx
$LN2@EVP_PKEY_s:
; Line 96
	xor	eax, eax
; Line 97
	ret	0
_EVP_PKEY_size ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_bits
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_EVP_PKEY_bits PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 87
	mov	eax, DWORD PTR _pkey$[esp-4]
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_b
	mov	ecx, DWORD PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN2@EVP_PKEY_b
	mov	ecx, DWORD PTR [ecx+52]
	test	ecx, ecx
	je	SHORT $LN2@EVP_PKEY_b
; Line 88
	mov	DWORD PTR _pkey$[esp-4], eax
	jmp	ecx
$LN2@EVP_PKEY_b:
; Line 89
	xor	eax, eax
; Line 90
	ret	0
_EVP_PKEY_bits ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_base_id
_TEXT	SEGMENT
_e$1 = 8						; size = 4
_pkey$ = 8						; size = 4
_EVP_PKEY_base_id PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 373
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	esi
; Line 354
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR _e$1[esp+4]
	push	eax
	call	_EVP_PKEY_asn1_find
	add	esp, 8
; Line 355
	test	eax, eax
	je	SHORT $LN4@EVP_PKEY_b
; Line 356
	mov	esi, DWORD PTR [eax]
	jmp	SHORT $LN5@EVP_PKEY_b
$LN4@EVP_PKEY_b:
; Line 358
	xor	esi, esi
$LN5@EVP_PKEY_b:
; Line 360
	mov	eax, DWORD PTR _e$1[esp]
	test	eax, eax
	je	SHORT $LN8@EVP_PKEY_b
; Line 361
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN8@EVP_PKEY_b:
; Line 373
	mov	eax, esi
	pop	esi
; Line 374
	ret	0
_EVP_PKEY_base_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_id
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_EVP_PKEY_id PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 368
	mov	eax, DWORD PTR _pkey$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 369
	ret	0
_EVP_PKEY_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_type
_TEXT	SEGMENT
_e$ = -4						; size = 4
_type$ = 8						; size = 4
_EVP_PKEY_type PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_lib.c
; Line 350
	mov	eax, 4
	call	__chkstk
	push	esi
; Line 354
	push	DWORD PTR _type$[esp+4]
	lea	eax, DWORD PTR _e$[esp+12]
	push	eax
	call	_EVP_PKEY_asn1_find
	add	esp, 8
; Line 355
	test	eax, eax
	je	SHORT $LN2@EVP_PKEY_t
; Line 356
	mov	esi, DWORD PTR [eax]
	jmp	SHORT $LN3@EVP_PKEY_t
$LN2@EVP_PKEY_t:
; Line 358
	xor	esi, esi
$LN3@EVP_PKEY_t:
; Line 360
	mov	eax, DWORD PTR _e$[esp+8]
	test	eax, eax
	je	SHORT $LN6@EVP_PKEY_t
; Line 361
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN6@EVP_PKEY_t:
; Line 363
	mov	eax, esi
	pop	esi
; Line 364
	pop	ecx
	ret	0
_EVP_PKEY_type ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_sign.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_EVP_SignFinal
PUBLIC	??_C@_0BG@NCHFDOAO@?4?2crypto?2evp?2p_sign?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_MD_CTX_copy_ex:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_PKEY_size:PROC
EXTRN	_EVP_PKEY_CTX_new:PROC
EXTRN	_EVP_PKEY_CTX_free:PROC
EXTRN	_EVP_PKEY_CTX_ctrl:PROC
EXTRN	_EVP_PKEY_sign_init:PROC
EXTRN	_EVP_PKEY_sign:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BG@NCHFDOAO@?4?2crypto?2evp?2p_sign?4c?$AA@
CONST	SEGMENT
??_C@_0BG@NCHFDOAO@?4?2crypto?2evp?2p_sign?4c?$AA@ DB '.\crypto\evp\p_sig'
	DB	'n.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_SignFinal
_TEXT	SEGMENT
_sltmp$1 = -108						; size = 4
_siglen$GSCopy$1$ = -104				; size = 4
_sigret$GSCopy$1$ = -100				; size = 4
_m_len$ = -96						; size = 4
_tmp_ctx$ = -92						; size = 24
_m$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_sigret$ = 12						; size = 4
_siglen$ = 16						; size = 4
_pkey$ = 20						; size = 4
_EVP_SignFinal PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\p_sign.c
; Line 79
	mov	eax, 108				; 0000006cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+108], eax
	mov	eax, DWORD PTR _sigret$[esp+104]
	push	ebx
	mov	DWORD PTR _sigret$GSCopy$1$[esp+112], eax
; Line 82
	xor	ebx, ebx
	mov	eax, DWORD PTR _siglen$[esp+108]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+112]
	push	esi
	mov	DWORD PTR _siglen$GSCopy$1$[esp+120], eax
; Line 84
	xor	esi, esi
; Line 86
	mov	DWORD PTR [eax], ebx
; Line 87
	lea	eax, DWORD PTR _tmp_ctx$[esp+120]
	push	edi
	mov	edi, DWORD PTR _pkey$[esp+120]
	push	eax
	call	_EVP_MD_CTX_init
; Line 88
	lea	eax, DWORD PTR _tmp_ctx$[esp+128]
	push	ebp
	push	eax
	call	_EVP_MD_CTX_copy_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$25
; Line 90
	lea	eax, DWORD PTR _m_len$[esp+124]
	push	eax
	lea	eax, DWORD PTR _m$[esp+128]
	push	eax
	lea	eax, DWORD PTR _tmp_ctx$[esp+132]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$25
; Line 92
	lea	eax, DWORD PTR _tmp_ctx$[esp+124]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 94
	mov	esi, DWORD PTR [ebp]
	add	esp, 4
	test	BYTE PTR [esi+12], 4
	je	$LN7@EVP_SignFi
; Line 95
	push	edi
	call	_EVP_PKEY_size
; Line 97
	push	ebx
	push	edi
	mov	DWORD PTR _sltmp$1[esp+136], eax
	call	_EVP_PKEY_CTX_new
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 98
	test	esi, esi
	je	SHORT $err$25
; Line 100
	push	esi
	call	_EVP_PKEY_sign_init
	add	esp, 4
	test	eax, eax
	jle	SHORT $err$25
; Line 102
	push	DWORD PTR [ebp]
	push	ebx
	push	1
	push	248					; 000000f8H
	push	-1
	push	esi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $err$25
; Line 104
	push	DWORD PTR _m_len$[esp+124]
	lea	eax, DWORD PTR _m$[esp+128]
	push	eax
	lea	eax, DWORD PTR _sltmp$1[esp+132]
	push	eax
	push	DWORD PTR _sigret$GSCopy$1$[esp+136]
	push	esi
	call	_EVP_PKEY_sign
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $err$25
; Line 106
	mov	ecx, DWORD PTR _siglen$GSCopy$1$[esp+124]
; Line 107
	mov	ebx, 1
	mov	eax, DWORD PTR _sltmp$1[esp+124]
	mov	DWORD PTR [ecx], eax
$err$25:
; Line 109
	push	esi
	call	_EVP_PKEY_CTX_free
	add	esp, 4
; Line 110
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 133
	mov	ecx, DWORD PTR __$ArrayPad$[esp+108]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 108				; 0000006cH
	ret	0
$LN7@EVP_SignFi:
; Line 113
	xor	eax, eax
	lea	ecx, DWORD PTR [esi+44]
$LL4@EVP_SignFi:
; Line 114
	mov	edx, DWORD PTR [ecx]
; Line 115
	test	edx, edx
	je	SHORT $LN23@EVP_SignFi
; Line 117
	cmp	DWORD PTR [edi], edx
	je	SHORT $LN14@EVP_SignFi
; Line 113
	inc	eax
	add	ecx, 4
	cmp	eax, 4
	jl	SHORT $LL4@EVP_SignFi
$LN23@EVP_SignFi:
; Line 123
	push	123					; 0000007bH
	push	OFFSET ??_C@_0BG@NCHFDOAO@?4?2crypto?2evp?2p_sign?4c?$AA@
	push	110					; 0000006eH
	push	107					; 0000006bH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 124
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 133
	mov	ecx, DWORD PTR __$ArrayPad$[esp+108]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 108				; 0000006cH
	ret	0
$LN14@EVP_SignFi:
; Line 127
	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	jne	SHORT $LN15@EVP_SignFi
; Line 128
	push	128					; 00000080H
	push	OFFSET ??_C@_0BG@NCHFDOAO@?4?2crypto?2evp?2p_sign?4c?$AA@
	push	104					; 00000068H
	push	107					; 0000006bH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 129
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 133
	mov	ecx, DWORD PTR __$ArrayPad$[esp+108]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 108				; 0000006cH
	ret	0
$LN15@EVP_SignFi:
; Line 131
	push	DWORD PTR [edi+20]
	mov	ecx, DWORD PTR _siglen$GSCopy$1$[esp+128]
	push	ecx
	push	DWORD PTR _sigret$GSCopy$1$[esp+132]
	lea	ecx, DWORD PTR _m$[esp+136]
	push	DWORD PTR _m_len$[esp+136]
	push	ecx
	push	DWORD PTR [esi]
	call	eax
; Line 133
	mov	ecx, DWORD PTR __$ArrayPad$[esp+148]
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 108				; 0000006cH
	ret	0
_EVP_SignFinal ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_rc2_cbc DD	025H
	DD	08H
	DD	010H
	DD	08H
	DD	04aH
	DD	FLAT:_rc2_init_key
	DD	FLAT:_rc2_cbc_cipher
	DD	00H
	DD	0104H
	DD	FLAT:_rc2_set_asn1_type_and_iv
	DD	FLAT:_rc2_get_asn1_type_and_iv
	DD	FLAT:_rc2_ctrl
	DD	00H
_rc2_cfb64 DD	027H
	DD	01H
	DD	010H
	DD	08H
	DD	04bH
	DD	FLAT:_rc2_init_key
	DD	FLAT:_rc2_cfb64_cipher
	DD	00H
	DD	0104H
	DD	FLAT:_rc2_set_asn1_type_and_iv
	DD	FLAT:_rc2_get_asn1_type_and_iv
	DD	FLAT:_rc2_ctrl
	DD	00H
_rc2_ofb DD	028H
	DD	01H
	DD	010H
	DD	08H
	DD	04cH
	DD	FLAT:_rc2_init_key
	DD	FLAT:_rc2_ofb_cipher
	DD	00H
	DD	0104H
	DD	FLAT:_rc2_set_asn1_type_and_iv
	DD	FLAT:_rc2_get_asn1_type_and_iv
	DD	FLAT:_rc2_ctrl
	DD	00H
_rc2_ecb DD	026H
	DD	08H
	DD	010H
	DD	00H
	DD	049H
	DD	FLAT:_rc2_init_key
	DD	FLAT:_rc2_ecb_cipher
	DD	00H
	DD	0104H
	DD	FLAT:_rc2_set_asn1_type_and_iv
	DD	FLAT:_rc2_get_asn1_type_and_iv
	DD	FLAT:_rc2_ctrl
	DD	00H
_r2_64_cbc_cipher DD 0a6H
	DD	08H
	DD	08H
	DD	08H
	DD	04aH
	DD	FLAT:_rc2_init_key
	DD	FLAT:_rc2_cbc_cipher
	DD	00H
	DD	0104H
	DD	FLAT:_rc2_set_asn1_type_and_iv
	DD	FLAT:_rc2_get_asn1_type_and_iv
	DD	FLAT:_rc2_ctrl
	DD	00H
_r2_40_cbc_cipher DD 062H
	DD	08H
	DD	05H
	DD	08H
	DD	04aH
	DD	FLAT:_rc2_init_key
	DD	FLAT:_rc2_cbc_cipher
	DD	00H
	DD	0104H
	DD	FLAT:_rc2_set_asn1_type_and_iv
	DD	FLAT:_rc2_get_asn1_type_and_iv
	DD	FLAT:_rc2_ctrl
	DD	00H
CONST	ENDS
PUBLIC	_EVP_rc2_ecb
PUBLIC	_EVP_rc2_cbc
PUBLIC	_EVP_rc2_40_cbc
PUBLIC	_EVP_rc2_64_cbc
PUBLIC	_EVP_rc2_cfb64
PUBLIC	_EVP_rc2_ofb
PUBLIC	??_C@_0BF@NACJHEJH@?4?2crypto?2evp?2e_rc2?4c?$AA@ ; `string'
PUBLIC	??_C@_0BA@GLOHCMJJ@l?5?$DM?$DN?5sizeof?$CIiv?$CJ?$AA@ ; `string'
EXTRN	_OpenSSLDie:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_TYPE_set_int_octetstring:PROC
EXTRN	_ASN1_TYPE_get_int_octetstring:PROC
EXTRN	_EVP_CIPHER_CTX_key_length:PROC
EXTRN	_EVP_CIPHER_CTX_iv_length:PROC
EXTRN	_EVP_CipherInit_ex:PROC
EXTRN	_EVP_CIPHER_CTX_set_key_length:PROC
EXTRN	_EVP_CIPHER_CTX_ctrl:PROC
EXTRN	_RC2_set_key:PROC
EXTRN	_RC2_ecb_encrypt:PROC
EXTRN	_RC2_cbc_encrypt:PROC
EXTRN	_RC2_cfb64_encrypt:PROC
EXTRN	_RC2_ofb64_encrypt:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BA@GLOHCMJJ@l?5?$DM?$DN?5sizeof?$CIiv?$CJ?$AA@
CONST	SEGMENT
??_C@_0BA@GLOHCMJJ@l?5?$DM?$DN?5sizeof?$CIiv?$CJ?$AA@ DB 'l <= sizeof(iv)'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NACJHEJH@?4?2crypto?2evp?2e_rc2?4c?$AA@
CONST	SEGMENT
??_C@_0BF@NACJHEJH@?4?2crypto?2evp?2e_rc2?4c?$AA@ DB '.\crypto\evp\e_rc2.'
	DB	'c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc2_ofb_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
tv146 = 20						; size = 4
_inl$ = 20						; size = 4
_rc2_ofb_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 90
	push	ebx
; Line 84
	mov	ebx, DWORD PTR _out$[esp]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+4]
	push	esi
	mov	esi, DWORD PTR _inl$[esp+8]
	push	edi
	mov	edi, DWORD PTR _in$[esp+12]
	cmp	esi, 1073741824				; 40000000H
	jb	SHORT $LN3@rc2_ofb_ci
	mov	eax, esi
	lea	ecx, DWORD PTR [ebp+80]
	shr	eax, 30					; 0000001eH
	lea	edx, DWORD PTR [ebp+32]
	mov	DWORD PTR tv146[esp+12], eax
	npad	5
$LL2@rc2_ofb_ci:
	mov	eax, DWORD PTR [ebp+96]
	push	ecx
	push	edx
	add	eax, 4
	push	eax
	push	1073741824				; 40000000H
	push	ebx
	push	edi
	call	_RC2_ofb64_encrypt
	add	esp, 24					; 00000018H
	lea	ecx, DWORD PTR [ebp+80]
	sub	esi, 1073741824				; 40000000H
	lea	edx, DWORD PTR [ebp+32]
	add	edi, 1073741824				; 40000000H
	add	ebx, 1073741824				; 40000000H
	sub	DWORD PTR tv146[esp+12], 1
	jne	SHORT $LL2@rc2_ofb_ci
$LN3@rc2_ofb_ci:
	test	esi, esi
	je	SHORT $LN10@rc2_ofb_ci
	lea	eax, DWORD PTR [ebp+80]
	push	eax
	lea	eax, DWORD PTR [ebp+32]
	push	eax
	mov	eax, DWORD PTR [ebp+96]
	add	eax, 4
	push	eax
	push	esi
	push	ebx
	push	edi
	call	_RC2_ofb64_encrypt
	add	esp, 24					; 00000018H
$LN10@rc2_ofb_ci:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 90
	ret	0
_rc2_ofb_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc2_ecb_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
_inl$ = 20						; size = 4
_rc2_ecb_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 90
	push	ebp
; Line 84
	mov	ebp, DWORD PTR _ctx$[esp]
	push	edi
	mov	eax, DWORD PTR [ebp]
	mov	edi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _inl$[esp+4]
	cmp	eax, edi
	jb	SHORT $LN11@rc2_ecb_ci
	mov	ecx, DWORD PTR _out$[esp+4]
	sub	eax, edi
	push	ebx
	push	esi
	mov	esi, DWORD PTR _in$[esp+12]
	xor	ebx, ebx
	sub	ecx, esi
	mov	DWORD PTR _inl$[esp+12], eax
	mov	DWORD PTR _out$[esp+12], ecx
	npad	4
$LL4@rc2_ecb_ci:
	push	DWORD PTR [ebp+8]
	mov	eax, DWORD PTR [ebp+96]
	add	eax, 4
	push	eax
	lea	eax, DWORD PTR [ecx+esi]
	push	eax
	push	esi
	call	_RC2_ecb_encrypt
	mov	ecx, DWORD PTR _out$[esp+28]
	add	ebx, edi
	add	esp, 16					; 00000010H
	add	esi, edi
	cmp	ebx, DWORD PTR _inl$[esp+12]
	jbe	SHORT $LL4@rc2_ecb_ci
	pop	esi
	pop	ebx
$LN11@rc2_ecb_ci:
	pop	edi
	mov	eax, 1
	pop	ebp
; Line 90
	ret	0
_rc2_ecb_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc2_cfb64_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
_inl$ = 20						; size = 4
_rc2_cfb64_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 90
	push	esi
; Line 84
	mov	esi, 1073741824				; 40000000H
	push	edi
	mov	edi, DWORD PTR _inl$[esp+4]
	cmp	edi, esi
	cmovb	esi, edi
	test	edi, edi
	je	SHORT $LN11@rc2_cfb64_
	push	ebx
	mov	ebx, DWORD PTR _ctx$[esp+8]
	push	ebp
	mov	ebp, DWORD PTR _in$[esp+12]
	npad	2
$LL2@rc2_cfb64_:
	cmp	edi, esi
	jb	SHORT $LN12@rc2_cfb64_
	push	DWORD PTR [ebx+8]
	lea	eax, DWORD PTR [ebx+80]
	push	eax
	lea	eax, DWORD PTR [ebx+32]
	push	eax
	mov	eax, DWORD PTR [ebx+96]
	add	eax, 4
	push	eax
	push	edi
	push	DWORD PTR _out$[esp+32]
	push	ebp
	call	_RC2_cfb64_encrypt
	add	DWORD PTR _out$[esp+40], esi
	sub	edi, esi
	add	ebp, esi
	add	esp, 28					; 0000001cH
	cmp	edi, esi
	cmovb	esi, edi
	test	edi, edi
	jne	SHORT $LL2@rc2_cfb64_
$LN12@rc2_cfb64_:
	pop	ebp
	pop	ebx
	pop	edi
	mov	eax, 1
	pop	esi
; Line 90
	ret	0
$LN11@rc2_cfb64_:
	pop	edi
; Line 84
	mov	eax, 1
	pop	esi
; Line 90
	ret	0
_rc2_cfb64_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc2_cbc_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
tv174 = 20						; size = 4
_inl$ = 20						; size = 4
_rc2_cbc_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 90
	push	ebx
; Line 84
	mov	ebx, DWORD PTR _out$[esp]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+4]
	push	esi
	mov	esi, DWORD PTR _inl$[esp+8]
	push	edi
	mov	edi, DWORD PTR _in$[esp+12]
	cmp	esi, 1073741824				; 40000000H
	jb	SHORT $LN3@rc2_cbc_ci
	mov	eax, esi
	lea	ecx, DWORD PTR [ebp+32]
	shr	eax, 30					; 0000001eH
	mov	DWORD PTR tv174[esp+12], eax
$LL2@rc2_cbc_ci:
	push	DWORD PTR [ebp+8]
	mov	eax, DWORD PTR [ebp+96]
	push	ecx
	add	eax, 4
	push	eax
	push	1073741824				; 40000000H
	push	ebx
	push	edi
	call	_RC2_cbc_encrypt
	add	esp, 24					; 00000018H
	lea	ecx, DWORD PTR [ebp+32]
	sub	esi, 1073741824				; 40000000H
	add	edi, 1073741824				; 40000000H
	add	ebx, 1073741824				; 40000000H
	sub	DWORD PTR tv174[esp+12], 1
	jne	SHORT $LL2@rc2_cbc_ci
$LN3@rc2_cbc_ci:
	test	esi, esi
	je	SHORT $LN10@rc2_cbc_ci
	push	DWORD PTR [ebp+8]
	lea	eax, DWORD PTR [ebp+32]
	push	eax
	mov	eax, DWORD PTR [ebp+96]
	add	eax, 4
	push	eax
	push	esi
	push	ebx
	push	edi
	call	_RC2_cbc_encrypt
	add	esp, 24					; 00000018H
$LN10@rc2_cbc_ci:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 90
	ret	0
_rc2_cbc_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc2_ctrl
_TEXT	SEGMENT
_c$ = 8							; size = 4
_type$ = 12						; size = 4
_arg$ = 16						; size = 4
_ptr$ = 20						; size = 4
_rc2_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 209
	mov	eax, DWORD PTR _type$[esp-4]
	sub	eax, 0
	je	SHORT $LN4@rc2_ctrl
	sub	eax, 2
	je	SHORT $LN5@rc2_ctrl
	sub	eax, 1
	je	SHORT $LN6@rc2_ctrl
; Line 231
	or	eax, -1
; Line 233
	ret	0
$LN6@rc2_ctrl:
; Line 219
	mov	ecx, DWORD PTR _arg$[esp-4]
	test	ecx, ecx
	jle	SHORT $LN7@rc2_ctrl
; Line 220
	mov	eax, DWORD PTR _c$[esp-4]
	mov	eax, DWORD PTR [eax+96]
	mov	DWORD PTR [eax], ecx
	mov	eax, 1
; Line 233
	ret	0
$LN7@rc2_ctrl:
; Line 223
	xor	eax, eax
; Line 233
	ret	0
$LN5@rc2_ctrl:
; Line 215
	mov	eax, DWORD PTR _c$[esp-4]
	mov	eax, DWORD PTR [eax+96]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _ptr$[esp-4]
	mov	DWORD PTR [eax], ecx
	mov	eax, 1
; Line 233
	ret	0
$LN4@rc2_ctrl:
	push	esi
; Line 211
	mov	esi, DWORD PTR _c$[esp]
	push	esi
	call	_EVP_CIPHER_CTX_key_length
	mov	ecx, DWORD PTR [esi+96]
	add	esp, 4
	shl	eax, 3
	mov	DWORD PTR [ecx], eax
; Line 212
	mov	eax, 1
	pop	esi
; Line 233
	ret	0
_rc2_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc2_get_asn1_type_and_iv
_TEXT	SEGMENT
_num$ = -24						; size = 4
_iv$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_c$ = 8							; size = 4
_type$ = 12						; size = 4
_rc2_get_asn1_type_and_iv PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 170
	mov	eax, 24					; 00000018H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+24], eax
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _type$[esp+28]
	push	esi
; Line 172
	xor	esi, esi
	mov	DWORD PTR _num$[esp+36], 0
	push	edi
	mov	edi, DWORD PTR _c$[esp+36]
; Line 177
	test	ebp, ebp
	je	$LN2@rc2_get_as
; Line 178
	push	edi
	call	_EVP_CIPHER_CTX_iv_length
	mov	ebx, eax
	add	esp, 4
; Line 179
	cmp	ebx, 16					; 00000010H
	jbe	SHORT $LN8@rc2_get_as
	push	OFFSET ??_C@_0BA@GLOHCMJJ@l?5?$DM?$DN?5sizeof?$CIiv?$CJ?$AA@
	push	179					; 000000b3H
	push	OFFSET ??_C@_0BF@NACJHEJH@?4?2crypto?2evp?2e_rc2?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN8@rc2_get_as:
; Line 180
	push	ebx
	lea	eax, DWORD PTR _iv$[esp+44]
	push	eax
	lea	eax, DWORD PTR _num$[esp+48]
	push	eax
	push	ebp
	call	_ASN1_TYPE_get_int_octetstring
	mov	esi, eax
	add	esp, 16					; 00000010H
; Line 181
	cmp	esi, ebx
	je	SHORT $LN3@rc2_get_as
$LN9@rc2_get_as:
	pop	edi
	pop	esi
	pop	ebp
; Line 182
	or	eax, -1
	pop	ebx
; Line 192
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
$LN3@rc2_get_as:
; Line 183
	push	DWORD PTR _num$[esp+40]
	call	_rc2_magic_to_meth
	mov	ebx, eax
	add	esp, 4
; Line 184
	test	ebx, ebx
	je	SHORT $LN9@rc2_get_as
; Line 186
	test	esi, esi
	jle	SHORT $LN5@rc2_get_as
	push	-1
	lea	eax, DWORD PTR _iv$[esp+44]
	push	eax
	push	0
	push	0
	push	0
	push	edi
	call	_EVP_CipherInit_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN9@rc2_get_as
$LN5@rc2_get_as:
; Line 188
	push	0
	push	ebx
	push	3
	push	edi
	call	_EVP_CIPHER_CTX_ctrl
; Line 189
	mov	eax, ebx
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	push	eax
	push	edi
	call	_EVP_CIPHER_CTX_set_key_length
	add	esp, 24					; 00000018H
$LN2@rc2_get_as:
; Line 192
	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
_rc2_get_asn1_type_and_iv ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc2_set_asn1_type_and_iv
_TEXT	SEGMENT
_i$1 = -4						; size = 4
_c$ = 8							; size = 4
_type$ = 12						; size = 4
_rc2_set_asn1_type_and_iv PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 195
	mov	eax, 4
	call	__chkstk
; Line 199
	cmp	DWORD PTR _type$[esp], 0
	je	SHORT $LN12@rc2_set_as
	push	esi
	push	edi
; Line 144
	mov	edi, DWORD PTR _c$[esp+8]
	lea	eax, DWORD PTR _i$1[esp+12]
	push	eax
	push	0
	push	2
	push	edi
	call	_EVP_CIPHER_CTX_ctrl
; Line 145
	mov	eax, DWORD PTR _i$1[esp+28]
	add	esp, 16					; 00000010H
	cmp	eax, 128				; 00000080H
	jne	SHORT $LN5@rc2_set_as
; Line 146
	lea	esi, DWORD PTR [eax-70]
	jmp	SHORT $LN9@rc2_set_as
$LN5@rc2_set_as:
; Line 147
	cmp	eax, 64					; 00000040H
	jne	SHORT $LN7@rc2_set_as
; Line 148
	lea	esi, DWORD PTR [eax+56]
	jmp	SHORT $LN9@rc2_set_as
$LN7@rc2_set_as:
; Line 149
	xor	esi, esi
	mov	ecx, 160				; 000000a0H
	cmp	eax, 40					; 00000028H
	cmove	esi, ecx
$LN9@rc2_set_as:
; Line 201
	push	edi
	call	_EVP_CIPHER_CTX_iv_length
; Line 202
	push	eax
	lea	eax, DWORD PTR [edi+16]
	push	eax
	push	esi
	push	DWORD PTR _type$[esp+24]
	call	_ASN1_TYPE_set_int_octetstring
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
; Line 205
	pop	ecx
	ret	0
$LN12@rc2_set_as:
; Line 204
	xor	eax, eax
; Line 205
	pop	ecx
	ret	0
_rc2_set_asn1_type_and_iv ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc2_magic_to_meth
_TEXT	SEGMENT
_i$ = 8							; size = 4
_rc2_magic_to_meth PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 157
	mov	eax, DWORD PTR _i$[esp-4]
	cmp	eax, 58					; 0000003aH
	jne	SHORT $LN2@rc2_magic_
; Line 158
	mov	eax, 128				; 00000080H
; Line 167
	ret	0
$LN2@rc2_magic_:
; Line 159
	cmp	eax, 120				; 00000078H
	jne	SHORT $LN4@rc2_magic_
; Line 160
	mov	eax, 64					; 00000040H
; Line 167
	ret	0
$LN4@rc2_magic_:
; Line 161
	cmp	eax, 160				; 000000a0H
	jne	SHORT $LN6@rc2_magic_
; Line 162
	mov	eax, 40					; 00000028H
; Line 167
	ret	0
$LN6@rc2_magic_:
; Line 164
	push	164					; 000000a4H
	push	OFFSET ??_C@_0BF@NACJHEJH@?4?2crypto?2evp?2e_rc2?4c?$AA@
	push	108					; 0000006cH
	push	109					; 0000006dH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 165
	xor	eax, eax
; Line 167
	ret	0
_rc2_magic_to_meth ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc2_meth_to_magic
_TEXT	SEGMENT
_i$ = -4						; size = 4
_e$ = 8							; size = 4
_rc2_meth_to_magic PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 141
	mov	eax, 4
	call	__chkstk
; Line 144
	lea	eax, DWORD PTR _i$[esp+4]
	push	eax
	push	0
	push	2
	push	DWORD PTR _e$[esp+12]
	call	_EVP_CIPHER_CTX_ctrl
; Line 145
	mov	ecx, DWORD PTR _i$[esp+20]
	add	esp, 16					; 00000010H
	cmp	ecx, 128				; 00000080H
	jne	SHORT $LN2@rc2_meth_t
; Line 146
	lea	eax, DWORD PTR [ecx-70]
; Line 153
	pop	ecx
	ret	0
$LN2@rc2_meth_t:
; Line 147
	cmp	ecx, 64					; 00000040H
	jne	SHORT $LN4@rc2_meth_t
; Line 148
	mov	eax, 120				; 00000078H
; Line 153
	pop	ecx
	ret	0
$LN4@rc2_meth_t:
; Line 149
	xor	eax, eax
	mov	edx, 160				; 000000a0H
	cmp	ecx, 40					; 00000028H
	cmove	eax, edx
; Line 153
	pop	ecx
	ret	0
_rc2_meth_to_magic ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc2_init_key
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_key$ = 12						; size = 4
_iv$ = 16						; size = 4
_enc$ = 20						; size = 4
_rc2_init_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 134
	push	esi
; Line 135
	mov	esi, DWORD PTR _ctx$[esp]
	mov	eax, DWORD PTR [esi+96]
	push	DWORD PTR [eax]
	push	DWORD PTR _key$[esp+4]
	push	esi
	call	_EVP_CIPHER_CTX_key_length
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR [esi+96]
	add	eax, 4
	push	eax
	call	_RC2_set_key
	add	esp, 16					; 00000010H
; Line 137
	mov	eax, 1
	pop	esi
; Line 138
	ret	0
_rc2_init_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_rc2_ofb
_TEXT	SEGMENT
_EVP_rc2_ofb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 84
	mov	eax, OFFSET _rc2_ofb
; Line 90
	ret	0
_EVP_rc2_ofb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_rc2_cfb64
_TEXT	SEGMENT
_EVP_rc2_cfb64 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 84
	mov	eax, OFFSET _rc2_cfb64
; Line 90
	ret	0
_EVP_rc2_cfb64 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_rc2_64_cbc
_TEXT	SEGMENT
_EVP_rc2_64_cbc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 124
	mov	eax, OFFSET _r2_64_cbc_cipher
; Line 125
	ret	0
_EVP_rc2_64_cbc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_rc2_40_cbc
_TEXT	SEGMENT
_EVP_rc2_40_cbc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 129
	mov	eax, OFFSET _r2_40_cbc_cipher
; Line 130
	ret	0
_EVP_rc2_40_cbc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_rc2_cbc
_TEXT	SEGMENT
_EVP_rc2_cbc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 84
	mov	eax, OFFSET _rc2_cbc
; Line 90
	ret	0
_EVP_rc2_cbc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_rc2_ecb
_TEXT	SEGMENT
_EVP_rc2_ecb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc2.c
; Line 84
	mov	eax, OFFSET _rc2_ecb
; Line 90
	ret	0
_EVP_rc2_ecb ENDP
_TEXT	ENDS
END

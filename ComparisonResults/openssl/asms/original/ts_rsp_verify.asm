; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_07HFHOMNEG@granted?$AA@			; `string'
PUBLIC	??_C@_0BA@OPNPOKGL@grantedWithMods?$AA@		; `string'
PUBLIC	??_C@_09BMHBJALA@rejection?$AA@			; `string'
PUBLIC	??_C@_07BMPLEEBA@waiting?$AA@			; `string'
PUBLIC	??_C@_0BC@OOACONAH@revocationWarning?$AA@	; `string'
PUBLIC	??_C@_0BH@JFJEOLHJ@revocationNotification?$AA@	; `string'
PUBLIC	??_C@_06JJHJIAED@badAlg?$AA@			; `string'
PUBLIC	??_C@_0L@INLHJFOE@badRequest?$AA@		; `string'
PUBLIC	??_C@_0O@MEBNNCJH@badDataFormat?$AA@		; `string'
PUBLIC	??_C@_0BB@MDCMIBDP@timeNotAvailable?$AA@	; `string'
PUBLIC	??_C@_0BB@IAFKBCGA@unacceptedPolicy?$AA@	; `string'
PUBLIC	??_C@_0BE@NCLAFPKF@unacceptedExtension?$AA@	; `string'
PUBLIC	??_C@_0BE@PLIECEFJ@addInfoNotAvailable?$AA@	; `string'
PUBLIC	??_C@_0O@KAPCIGOP@systemFailure?$AA@		; `string'
;	COMDAT ??_C@_0O@KAPCIGOP@systemFailure?$AA@
CONST	SEGMENT
??_C@_0O@KAPCIGOP@systemFailure?$AA@ DB 'systemFailure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PLIECEFJ@addInfoNotAvailable?$AA@
CONST	SEGMENT
??_C@_0BE@PLIECEFJ@addInfoNotAvailable?$AA@ DB 'addInfoNotAvailable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NCLAFPKF@unacceptedExtension?$AA@
CONST	SEGMENT
??_C@_0BE@NCLAFPKF@unacceptedExtension?$AA@ DB 'unacceptedExtension', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IAFKBCGA@unacceptedPolicy?$AA@
CONST	SEGMENT
??_C@_0BB@IAFKBCGA@unacceptedPolicy?$AA@ DB 'unacceptedPolicy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MDCMIBDP@timeNotAvailable?$AA@
CONST	SEGMENT
??_C@_0BB@MDCMIBDP@timeNotAvailable?$AA@ DB 'timeNotAvailable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MEBNNCJH@badDataFormat?$AA@
CONST	SEGMENT
??_C@_0O@MEBNNCJH@badDataFormat?$AA@ DB 'badDataFormat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@INLHJFOE@badRequest?$AA@
CONST	SEGMENT
??_C@_0L@INLHJFOE@badRequest?$AA@ DB 'badRequest', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JJHJIAED@badAlg?$AA@
CONST	SEGMENT
??_C@_06JJHJIAED@badAlg?$AA@ DB 'badAlg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JFJEOLHJ@revocationNotification?$AA@
CONST	SEGMENT
??_C@_0BH@JFJEOLHJ@revocationNotification?$AA@ DB 'revocationNotification'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OOACONAH@revocationWarning?$AA@
CONST	SEGMENT
??_C@_0BC@OOACONAH@revocationWarning?$AA@ DB 'revocationWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BMPLEEBA@waiting?$AA@
CONST	SEGMENT
??_C@_07BMPLEEBA@waiting?$AA@ DB 'waiting', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BMHBJALA@rejection?$AA@
CONST	SEGMENT
??_C@_09BMHBJALA@rejection?$AA@ DB 'rejection', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OPNPOKGL@grantedWithMods?$AA@
CONST	SEGMENT
??_C@_0BA@OPNPOKGL@grantedWithMods?$AA@ DB 'grantedWithMods', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HFHOMNEG@granted?$AA@
CONST	SEGMENT
??_C@_07HFHOMNEG@granted?$AA@ DB 'granted', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_TS_status_text DD FLAT:??_C@_07HFHOMNEG@granted?$AA@
	DD	FLAT:??_C@_0BA@OPNPOKGL@grantedWithMods?$AA@
	DD	FLAT:??_C@_09BMHBJALA@rejection?$AA@
	DD	FLAT:??_C@_07BMPLEEBA@waiting?$AA@
	DD	FLAT:??_C@_0BC@OOACONAH@revocationWarning?$AA@
	DD	FLAT:??_C@_0BH@JFJEOLHJ@revocationNotification?$AA@
_TS_failure_info DD 00H
	DD	FLAT:??_C@_06JJHJIAED@badAlg?$AA@
	DD	02H
	DD	FLAT:??_C@_0L@INLHJFOE@badRequest?$AA@
	DD	05H
	DD	FLAT:??_C@_0O@MEBNNCJH@badDataFormat?$AA@
	DD	0eH
	DD	FLAT:??_C@_0BB@MDCMIBDP@timeNotAvailable?$AA@
	DD	0fH
	DD	FLAT:??_C@_0BB@IAFKBCGA@unacceptedPolicy?$AA@
	DD	010H
	DD	FLAT:??_C@_0BE@NCLAFPKF@unacceptedExtension?$AA@
	DD	011H
	DD	FLAT:??_C@_0BE@PLIECEFJ@addInfoNotAvailable?$AA@
	DD	019H
	DD	FLAT:??_C@_0O@KAPCIGOP@systemFailure?$AA@
_DATA	ENDS
PUBLIC	_TS_RESP_verify_signature
PUBLIC	_TS_RESP_verify_response
PUBLIC	_TS_RESP_verify_token
PUBLIC	??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@ ; `string'
PUBLIC	??_C@_0O@HFNJECFC@Verify?5error?3?$AA@		; `string'
PUBLIC	??_C@_0N@DJABBOOH@unknown?5code?$AA@		; `string'
PUBLIC	??_C@_01IHBHIGKO@?0?$AA@			; `string'
PUBLIC	??_C@_0M@MFMDLEDN@unspecified?$AA@		; `string'
PUBLIC	??_C@_0BC@FLGIJPCE@?0?5failure?5codes?3?5?$AA@	; `string'
PUBLIC	??_C@_0BA@MLHCMCHB@?0?5status?5text?3?5?$AA@	; `string'
PUBLIC	??_C@_0O@IAPNKNJH@status?5code?3?5?$AA@		; `string'
EXTRN	__imp__strncpy:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_ASN1_TYPE_get:PROC
EXTRN	_ASN1_STRING_length:PROC
EXTRN	_ASN1_STRING_data:PROC
EXTRN	_ASN1_BIT_STRING_get_bit:PROC
EXTRN	_ASN1_INTEGER_cmp:PROC
EXTRN	_ASN1_INTEGER_get:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_cmp:PROC
EXTRN	_EVP_MD_size:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestInit:PROC
EXTRN	_EVP_DigestFinal:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_X509_STORE_CTX_init:PROC
EXTRN	_X509_STORE_CTX_cleanup:PROC
EXTRN	_X509_STORE_CTX_get_error:PROC
EXTRN	_X509_STORE_CTX_get1_chain:PROC
EXTRN	_X509_STORE_CTX_set_purpose:PROC
EXTRN	_PKCS7_ctrl:PROC
EXTRN	_PKCS7_signatureVerify:PROC
EXTRN	_PKCS7_dataInit:PROC
EXTRN	_PKCS7_get_signer_info:PROC
EXTRN	_PKCS7_get_signed_attribute:PROC
EXTRN	_PKCS7_get0_signers:PROC
EXTRN	_X509_verify_cert_error_string:PROC
EXTRN	_X509_ALGOR_dup:PROC
EXTRN	_X509_ALGOR_free:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_NAME_cmp:PROC
EXTRN	_X509_get_ext_d2i:PROC
EXTRN	_X509_verify_cert:PROC
EXTRN	_GENERAL_NAME_cmp:PROC
EXTRN	_GENERAL_NAMES_free:PROC
EXTRN	_X509_check_purpose:PROC
EXTRN	_PKCS7_to_TS_TST_INFO:PROC
EXTRN	_TS_TST_INFO_free:PROC
EXTRN	_ESS_SIGNING_CERT_free:PROC
EXTRN	_d2i_ESS_SIGNING_CERT:PROC
EXTRN	_TS_MSG_IMPRINT_get_algo:PROC
EXTRN	_TS_RESP_get_status_info:PROC
EXTRN	_TS_RESP_get_token:PROC
EXTRN	_TS_RESP_get_tst_info:PROC
EXTRN	_TS_TST_INFO_get_version:PROC
EXTRN	_TS_TST_INFO_get_policy_id:PROC
EXTRN	_TS_TST_INFO_get_msg_imprint:PROC
EXTRN	_TS_TST_INFO_get_nonce:PROC
EXTRN	_TS_TST_INFO_get_tsa:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0O@IAPNKNJH@status?5code?3?5?$AA@
CONST	SEGMENT
??_C@_0O@IAPNKNJH@status?5code?3?5?$AA@ DB 'status code: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MLHCMCHB@?0?5status?5text?3?5?$AA@
CONST	SEGMENT
??_C@_0BA@MLHCMCHB@?0?5status?5text?3?5?$AA@ DB ', status text: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FLGIJPCE@?0?5failure?5codes?3?5?$AA@
CONST	SEGMENT
??_C@_0BC@FLGIJPCE@?0?5failure?5codes?3?5?$AA@ DB ', failure codes: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MFMDLEDN@unspecified?$AA@
CONST	SEGMENT
??_C@_0M@MFMDLEDN@unspecified?$AA@ DB 'unspecified', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0?$AA@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0?$AA@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DJABBOOH@unknown?5code?$AA@
CONST	SEGMENT
??_C@_0N@DJABBOOH@unknown?5code?$AA@ DB 'unknown code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HFNJECFC@Verify?5error?3?$AA@
CONST	SEGMENT
??_C@_0O@HFNJECFC@Verify?5error?3?$AA@ DB 'Verify error:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
CONST	SEGMENT
??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@ DB '.\crypto\ts\t'
	DB	's_rsp_verify.c', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_find_name
_TEXT	SEGMENT
_gen_names$ = 8						; size = 4
_name$ = 12						; size = 4
_TS_find_name PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 730
	push	ebx
; Line 732
	mov	ebx, DWORD PTR _gen_names$[esp]
	push	ebp
	mov	ebp, DWORD PTR _name$[esp+4]
	push	esi
	push	edi
	xor	edi, edi
	xor	esi, esi
$LL4@TS_find_na:
	push	ebx
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jge	SHORT $LN3@TS_find_na
; Line 733
	push	edi
	push	ebx
	call	_sk_value
; Line 734
	push	ebp
	push	eax
	call	_GENERAL_NAME_cmp
	add	esp, 16					; 00000010H
	mov	esi, eax
	neg	esi
	sbb	esi, esi
	inc	edi
	add	esi, 1
	je	SHORT $LL4@TS_find_na
; Line 736
	lea	eax, DWORD PTR [edi-1]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 737
	ret	0
$LN3@TS_find_na:
; Line 736
	test	esi, esi
	je	SHORT $LN6@TS_find_na
	lea	eax, DWORD PTR [edi-1]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 737
	ret	0
$LN6@TS_find_na:
	pop	edi
	pop	esi
	pop	ebp
; Line 736
	or	eax, -1
	pop	ebx
; Line 737
	ret	0
_TS_find_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_check_signer_name
_TEXT	SEGMENT
_idx$ = -4						; size = 4
_found$1$ = 8						; size = 4
_tsa_name$ = 8						; size = 4
_signer$ = 12						; size = 4
_TS_check_signer_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 700
	mov	eax, 4
	call	__chkstk
	push	ebp
; Line 707
	mov	ebp, DWORD PTR _tsa_name$[esp+4]
	push	esi
	mov	esi, DWORD PTR _signer$[esp+8]
	mov	DWORD PTR _idx$[esp+12], -1
	cmp	DWORD PTR [ebp], 4
	jne	SHORT $LN4@TS_check_s
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR [eax+20]
	push	DWORD PTR [ebp+4]
	call	_X509_NAME_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@TS_check_s
; Line 708
	pop	esi
	mov	eax, 1
	pop	ebp
; Line 726
	pop	ecx
	ret	0
$LN4@TS_check_s:
	push	ebx
	push	edi
; Line 711
	lea	eax, DWORD PTR _idx$[esp+20]
	push	eax
	push	0
	push	85					; 00000055H
	push	esi
	call	_X509_get_ext_d2i
	mov	ebx, eax
	add	esp, 16					; 00000010H
; Line 713
	test	ebx, ebx
	je	$LN23@TS_check_s
	npad	3
$LL2@TS_check_s:
; Line 732
	xor	edi, edi
	xor	esi, esi
$LL10@TS_check_s:
	push	ebx
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jge	SHORT $LN9@TS_check_s
; Line 733
	push	edi
	push	ebx
	call	_sk_value
; Line 734
	push	ebp
	push	eax
	call	_GENERAL_NAME_cmp
	add	esp, 16					; 00000010H
	mov	esi, eax
	neg	esi
	sbb	esi, esi
	inc	edi
	add	esi, 1
	je	SHORT $LL10@TS_check_s
; Line 736
	dec	edi
	jmp	SHORT $LN13@TS_check_s
$LN9@TS_check_s:
	test	esi, esi
	je	SHORT $LN12@TS_check_s
	dec	edi
	jmp	SHORT $LN13@TS_check_s
$LN12@TS_check_s:
	or	edi, -1
$LN13@TS_check_s:
; Line 713
	xor	eax, eax
	test	edi, edi
	setns	al
	mov	DWORD PTR _found$1$[esp+16], eax
	test	eax, eax
	jne	SHORT $LN3@TS_check_s
; Line 718
	push	ebx
	call	_GENERAL_NAMES_free
; Line 719
	lea	eax, DWORD PTR _idx$[esp+24]
	push	eax
	push	0
	push	85					; 00000055H
	push	DWORD PTR _signer$[esp+32]
	call	_X509_get_ext_d2i
	mov	ebx, eax
	add	esp, 20					; 00000014H
	test	ebx, ebx
	jne	SHORT $LL2@TS_check_s
; Line 722
	mov	eax, DWORD PTR _found$1$[esp+16]
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp
; Line 726
	pop	ecx
	ret	0
$LN3@TS_check_s:
; Line 722
	test	ebx, ebx
	je	SHORT $LN5@TS_check_s
; Line 723
	push	ebx
	call	_GENERAL_NAMES_free
	mov	eax, DWORD PTR _found$1$[esp+20]
	add	esp, 4
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp
; Line 726
	pop	ecx
	ret	0
$LN23@TS_check_s:
	xor	eax, eax
$LN5@TS_check_s:
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp
	pop	ecx
	ret	0
_TS_check_signer_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_check_nonces
_TEXT	SEGMENT
_a$ = 8							; size = 4
_tst_info$ = 12						; size = 4
_TS_check_nonces PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 678
	push	DWORD PTR _tst_info$[esp-4]
	call	_TS_TST_INFO_get_nonce
	add	esp, 4
; Line 681
	test	eax, eax
	jne	SHORT $LN2@TS_check_n
; Line 682
	push	682					; 000002aaH
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	105					; 00000069H
	push	101					; 00000065H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 683
	xor	eax, eax
; Line 693
	ret	0
$LN2@TS_check_n:
; Line 687
	push	eax
	push	DWORD PTR _a$[esp]
	call	_ASN1_INTEGER_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@TS_check_n
; Line 688
	push	688					; 000002b0H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	104					; 00000068H
	push	101					; 00000065H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 689
	xor	eax, eax
; Line 693
	ret	0
$LN3@TS_check_n:
; Line 692
	mov	eax, 1
; Line 693
	ret	0
_TS_check_nonces ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_check_imprints
_TEXT	SEGMENT
_algor_a$ = 8						; size = 4
_imprint_a$ = 12					; size = 4
_len_a$ = 16						; size = 4
_tst_info$ = 20						; size = 4
_TS_check_imprints PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 648
	push	ebx
	push	esi
	push	edi
; Line 649
	push	DWORD PTR _tst_info$[esp+8]
	call	_TS_TST_INFO_get_msg_imprint
	mov	edi, eax
; Line 650
	push	edi
	call	_TS_MSG_IMPRINT_get_algo
; Line 654
	mov	esi, DWORD PTR _algor_a$[esp+16]
	add	esp, 8
	mov	ebx, eax
	test	esi, esi
	je	SHORT $LN4@TS_check_i
; Line 656
	push	DWORD PTR [ebx]
	push	DWORD PTR [esi]
	call	_OBJ_cmp
	add	esp, 8
	test	eax, eax
	jne	$LN9@TS_check_i
; Line 662
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN6@TS_check_i
	push	eax
	call	_ASN1_TYPE_get
	add	esp, 4
	cmp	eax, 5
	jne	$LN9@TS_check_i
$LN6@TS_check_i:
	mov	eax, DWORD PTR [ebx+4]
	test	eax, eax
	je	SHORT $LN4@TS_check_i
	push	eax
	call	_ASN1_TYPE_get
	add	esp, 4
	cmp	eax, 5
	jne	SHORT $LN9@TS_check_i
$LN4@TS_check_i:
; Line 668
	push	DWORD PTR [edi+4]
	call	_ASN1_STRING_length
	mov	esi, DWORD PTR _len_a$[esp+12]
	add	esp, 4
	cmp	esi, eax
	jne	SHORT $LN9@TS_check_i
	push	DWORD PTR [edi+4]
	call	_ASN1_STRING_data
	mov	edx, DWORD PTR _imprint_a$[esp+12]
	add	esp, 4
	mov	edi, eax
	sub	esi, 4
	jb	SHORT $LN14@TS_check_i
	npad	4
$LL15@TS_check_i:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [edi]
	jne	SHORT $LN13@TS_check_i
	add	edx, 4
	add	edi, 4
	sub	esi, 4
	jae	SHORT $LL15@TS_check_i
$LN14@TS_check_i:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN12@TS_check_i
$LN13@TS_check_i:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [edi]
	jne	SHORT $LN9@TS_check_i
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN12@TS_check_i
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [edi+1]
	jne	SHORT $LN9@TS_check_i
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN12@TS_check_i
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [edi+2]
	jne	SHORT $LN9@TS_check_i
	cmp	esi, -1
	je	SHORT $LN12@TS_check_i
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [edi+3]
	jne	SHORT $LN9@TS_check_i
$LN12@TS_check_i:
	pop	edi
	pop	esi
; Line 673
	mov	eax, 1
	pop	ebx
; Line 674
	ret	0
$LN9@TS_check_i:
; Line 672
	push	672					; 000002a0H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	103					; 00000067H
	push	100					; 00000064H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 673
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 674
	ret	0
_TS_check_imprints ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_compute_imprint
_TEXT	SEGMENT
_imprint_len$GSCopy$1$ = -4128				; size = 4
_md_ctx$ = -4124					; size = 24
_buffer$ = -4100					; size = 4096
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_tst_info$ = 12						; size = 4
_md_alg$ = 16						; size = 4
_imprint$ = 20						; size = 4
_imprint_len$ = 24					; size = 4
_TS_compute_imprint PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 596
	mov	eax, 4128				; 00001020H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+4128], eax
	mov	eax, DWORD PTR _tst_info$[esp+4124]
	mov	ecx, DWORD PTR _imprint_len$[esp+4124]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _md_alg$[esp+4132]
	push	esi
	mov	esi, DWORD PTR _data$[esp+4136]
	push	edi
	mov	edi, DWORD PTR _imprint$[esp+4140]
; Line 597
	push	eax
	mov	DWORD PTR _imprint_len$GSCopy$1$[esp+4148], ecx
	call	_TS_TST_INFO_get_msg_imprint
; Line 598
	push	eax
	call	_TS_MSG_IMPRINT_get_algo
; Line 604
	mov	DWORD PTR [ebp], 0
; Line 608
	push	eax
	mov	DWORD PTR [edi], 0
	call	_X509_ALGOR_dup
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp], eax
	test	eax, eax
	je	SHORT $err$18
; Line 612
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jne	SHORT $LN5@TS_compute
; Line 613
	push	613					; 00000265H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	126					; 0000007eH
$LN16@TS_compute:
; Line 623
	push	145					; 00000091H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$18:
; Line 638
	push	DWORD PTR [ebp]
	call	_X509_ALGOR_free
; Line 639
	push	DWORD PTR [edi]
	call	_CRYPTO_free
; Line 640
	mov	eax, DWORD PTR _imprint_len$GSCopy$1$[esp+4152]
	add	esp, 8
	mov	DWORD PTR [eax], 0
; Line 642
	xor	eax, eax
	mov	DWORD PTR [edi], 0
$LN1@TS_compute:
; Line 643
	mov	ecx, DWORD PTR __$ArrayPad$[esp+4144]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 4128				; 00001020H
	ret	0
$LN5@TS_compute:
; Line 618
	push	ebx
	call	_EVP_MD_size
	add	esp, 4
; Line 619
	test	eax, eax
	js	SHORT $err$18
; Line 621
	mov	ecx, DWORD PTR _imprint_len$GSCopy$1$[esp+4144]
; Line 622
	push	622					; 0000026eH
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	eax
	mov	DWORD PTR [ecx], eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi], eax
	test	eax, eax
	jne	SHORT $LN7@TS_compute
; Line 623
	push	623					; 0000026fH
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	65					; 00000041H
; Line 624
	jmp	$LN16@TS_compute
$LN7@TS_compute:
; Line 627
	lea	eax, DWORD PTR _md_ctx$[esp+4144]
	push	ebx
	push	eax
	call	_EVP_DigestInit
	add	esp, 8
	test	eax, eax
	je	$err$18
; Line 629
	push	4096					; 00001000H
	lea	eax, DWORD PTR _buffer$[esp+4148]
	push	eax
	push	esi
	call	_BIO_read
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN3@TS_compute
	npad	6
$LL2@TS_compute:
; Line 630
	push	eax
	lea	eax, DWORD PTR _buffer$[esp+4148]
	push	eax
	lea	eax, DWORD PTR _md_ctx$[esp+4152]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$18
; Line 629
	push	4096					; 00001000H
	lea	eax, DWORD PTR _buffer$[esp+4148]
	push	eax
	push	esi
	call	_BIO_read
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LL2@TS_compute
$LN3@TS_compute:
; Line 633
	push	0
	push	DWORD PTR [edi]
	lea	eax, DWORD PTR _md_ctx$[esp+4152]
	push	eax
	call	_EVP_DigestFinal
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$18
; Line 636
	mov	eax, 1
	jmp	$LN1@TS_compute
_TS_compute_imprint ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_check_policy
_TEXT	SEGMENT
_req_oid$ = 8						; size = 4
_tst_info$ = 12						; size = 4
_TS_check_policy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 583
	push	DWORD PTR _tst_info$[esp-4]
	call	_TS_TST_INFO_get_policy_id
; Line 585
	push	eax
	push	DWORD PTR _req_oid$[esp+4]
	call	_OBJ_cmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN2@TS_check_p
; Line 586
	push	586					; 0000024aH
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	108					; 0000006cH
	push	102					; 00000066H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 587
	xor	eax, eax
; Line 591
	ret	0
$LN2@TS_check_p:
; Line 590
	mov	eax, 1
; Line 591
	ret	0
_TS_check_policy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_get_status_text
_TEXT	SEGMENT
_length$2$ = -8						; size = 4
_result$1$ = -4						; size = 4
_text$ = 8						; size = 4
_TS_get_status_text PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 549
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 556
	mov	edi, DWORD PTR _text$[esp+16]
	xor	ebx, ebx
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@TS_get_sta
$LL4@TS_get_sta:
; Line 557
	push	esi
	push	edi
	call	_sk_value
; Line 558
	push	eax
	call	_ASN1_STRING_length
; Line 559
	inc	eax
	inc	esi
	push	edi
	add	ebx, eax
	call	_sk_num
	add	esp, 16					; 00000010H
	cmp	esi, eax
	jl	SHORT $LL4@TS_get_sta
$LN3@TS_get_sta:
; Line 562
	push	562					; 00000232H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	ebx
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _result$1$[esp+20], eax
	test	eax, eax
	jne	SHORT $LN8@TS_get_sta
; Line 563
	push	563					; 00000233H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	65					; 00000041H
	push	105					; 00000069H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 564
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 579
	add	esp, 8
	ret	0
$LN8@TS_get_sta:
; Line 567
	push	edi
	xor	ebx, ebx
	mov	esi, eax
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN6@TS_get_sta
	push	ebp
	npad	2
$LL7@TS_get_sta:
; Line 568
	push	ebx
	push	edi
	call	_sk_value
	mov	ebp, eax
; Line 569
	push	ebp
	call	_ASN1_STRING_length
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _length$2$[esp+24], eax
; Line 570
	test	ebx, ebx
	jle	SHORT $LN9@TS_get_sta
; Line 571
	mov	BYTE PTR [esi], 47			; 0000002fH
	inc	esi
$LN9@TS_get_sta:
; Line 572
	push	eax
	push	ebp
	call	_ASN1_STRING_data
	add	esp, 4
	push	eax
	push	esi
	call	DWORD PTR __imp__strncpy
; Line 573
	add	esi, DWORD PTR _length$2$[esp+36]
	inc	ebx
	push	edi
	call	_sk_num
	add	esp, 16					; 00000010H
	cmp	ebx, eax
	jl	SHORT $LL7@TS_get_sta
	pop	ebp
$LN6@TS_get_sta:
; Line 578
	mov	eax, DWORD PTR _result$1$[esp+20]
	pop	edi
	mov	BYTE PTR [esi], 0
	pop	esi
	pop	ebx
; Line 579
	add	esp, 8
	ret	0
_TS_get_status_text ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_check_status_info
_TEXT	SEGMENT
_embedded_status_text$1$ = -272				; size = 4
_status_text$1$ = -268					; size = 4
_info$1$ = -264						; size = 4
_failure_text$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_response$ = 8						; size = 4
_TS_check_status_info PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 496
	mov	eax, 272				; 00000110H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+272], eax
	mov	eax, DWORD PTR _response$[esp+268]
	push	esi
	push	edi
; Line 497
	push	eax
	call	_TS_RESP_get_status_info
	mov	edi, eax
	mov	DWORD PTR _info$1$[esp+284], edi
; Line 498
	push	DWORD PTR [edi]
	call	_ASN1_INTEGER_get
	push	256					; 00000100H
	mov	esi, eax
; Line 500
	mov	DWORD PTR _embedded_status_text$1$[esp+292], 0
	lea	eax, DWORD PTR _failure_text$[esp+292]
	push	0
	push	eax
	call	_memset
	add	esp, 20					; 00000014H
; Line 504
	test	esi, esi
	je	$LN6@TS_check_s
	cmp	esi, 1
	je	$LN6@TS_check_s
; Line 508
	push	ebx
	cmp	esi, 5
	ja	SHORT $LN7@TS_check_s
; Line 509
	mov	ebx, DWORD PTR _TS_status_text[esi*4]
	mov	DWORD PTR _status_text$1$[esp+284], ebx
	jmp	SHORT $LN8@TS_check_s
$LN7@TS_check_s:
; Line 511
	mov	DWORD PTR _status_text$1$[esp+284], OFFSET ??_C@_0N@DJABBOOH@unknown?5code?$AA@
$LN8@TS_check_s:
; Line 515
	push	DWORD PTR [edi+4]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN9@TS_check_s
	push	DWORD PTR [edi+4]
	call	_TS_get_status_text
	mov	ebx, eax
	add	esp, 4
	mov	DWORD PTR _embedded_status_text$1$[esp+284], ebx
	test	ebx, ebx
	je	$LN24@TS_check_s
$LN9@TS_check_s:
; Line 519
	cmp	DWORD PTR [edi+8], 0
	je	$LN3@TS_check_s
; Line 521
	push	ebp
	mov	ebp, 1
	mov	ebx, OFFSET _TS_failure_info+4
	npad	5
$LL4@TS_check_s:
; Line 523
	push	DWORD PTR [ebx-4]
	push	DWORD PTR [edi+8]
	call	_ASN1_BIT_STRING_get_bit
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@TS_check_s
; Line 525
	test	ebp, ebp
	jne	SHORT $LN12@TS_check_s
; Line 526
	lea	edi, DWORD PTR _failure_text$[esp+288]
	dec	edi
	npad	5
$LL20@TS_check_s:
	mov	al, BYTE PTR [edi+1]
	lea	edi, DWORD PTR [edi+1]
	test	al, al
	jne	SHORT $LL20@TS_check_s
	mov	ax, WORD PTR ??_C@_01IHBHIGKO@?0?$AA@
	mov	WORD PTR [edi], ax
	jmp	SHORT $LN13@TS_check_s
$LN12@TS_check_s:
; Line 528
	xor	ebp, ebp
$LN13@TS_check_s:
; Line 529
	mov	edx, DWORD PTR [ebx]
	mov	esi, edx
	npad	5
$LL21@TS_check_s:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL21@TS_check_s
	lea	edi, DWORD PTR _failure_text$[esp+288]
	sub	edx, esi
	dec	edi
	npad	2
$LL22@TS_check_s:
	mov	al, BYTE PTR [edi+1]
	inc	edi
	test	al, al
	jne	SHORT $LL22@TS_check_s
	mov	ecx, edx
	shr	ecx, 2
	rep movsd
	mov	ecx, edx
	and	ecx, 3
	rep movsb
	mov	edi, DWORD PTR _info$1$[esp+288]
$LN2@TS_check_s:
; Line 522
	add	ebx, 8
	cmp	ebx, OFFSET _TS_failure_info+68
	jl	SHORT $LL4@TS_check_s
	pop	ebp
$LN3@TS_check_s:
; Line 533
	cmp	BYTE PTR _failure_text$[esp+284], 0
	jne	SHORT $LN14@TS_check_s
; Line 534
	movq	xmm0, QWORD PTR ??_C@_0M@MFMDLEDN@unspecified?$AA@
	mov	eax, DWORD PTR ??_C@_0M@MFMDLEDN@unspecified?$AA@+8
	movq	QWORD PTR _failure_text$[esp+284], xmm0
	mov	DWORD PTR _failure_text$[esp+292], eax
$LN14@TS_check_s:
; Line 537
	push	537					; 00000219H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	107					; 0000006bH
	push	104					; 00000068H
	push	47					; 0000002fH
	call	_ERR_put_error
; Line 538
	mov	ebx, DWORD PTR _embedded_status_text$1$[esp+304]
	lea	eax, DWORD PTR _failure_text$[esp+304]
	push	eax
	push	OFFSET ??_C@_0BC@FLGIJPCE@?0?5failure?5codes?3?5?$AA@
	test	ebx, ebx
	mov	eax, OFFSET ??_C@_0M@MFMDLEDN@unspecified?$AA@
	cmovne	eax, ebx
	push	eax
	push	OFFSET ??_C@_0BA@MLHCMCHB@?0?5status?5text?3?5?$AA@
	push	DWORD PTR _status_text$1$[esp+320]
	push	OFFSET ??_C@_0O@IAPNKNJH@status?5code?3?5?$AA@
	push	6
	call	_ERR_add_error_data
; Line 543
	push	ebx
	call	_CRYPTO_free
	add	esp, 52					; 00000034H
$LN24@TS_check_s:
; Line 545
	pop	ebx
	pop	edi
	xor	eax, eax
	pop	esi
; Line 546
	mov	ecx, DWORD PTR __$ArrayPad$[esp+272]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	ret	0
$LN6@TS_check_s:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+280]
	mov	eax, 1
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	ret	0
_TS_check_status_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_TS_RESP_verify_token
_TEXT	SEGMENT
_md_alg$ = -24						; size = 4
_signer$ = -20						; size = 4
_imprint$ = -16						; size = 4
_imprint_len$ = -12					; size = 4
_ret$1$ = -8						; size = 4
_tsa_name$1$ = -4					; size = 4
_ctx$ = 8						; size = 4
_token$ = 12						; size = 4
_tst_info$ = 16						; size = 4
_int_TS_RESP_verify_token PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 430
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	ebx
	push	ebp
; Line 432
	mov	ebp, DWORD PTR _tst_info$[esp+28]
	xor	ebx, ebx
	push	esi
	push	edi
	push	ebp
	mov	DWORD PTR _signer$[esp+44], ebx
	call	_TS_TST_INFO_get_tsa
; Line 440
	mov	edi, DWORD PTR _ctx$[esp+40]
	add	esp, 4
	mov	DWORD PTR _tsa_name$1$[esp+40], eax
	mov	DWORD PTR _md_alg$[esp+40], ebx
	mov	DWORD PTR _imprint$[esp+40], ebx
	test	BYTE PTR [edi], 1
	mov	DWORD PTR _imprint_len$[esp+40], ebx
	mov	DWORD PTR _ret$1$[esp+40], ebx
	je	SHORT $LN2@int_TS_RES
	lea	eax, DWORD PTR _signer$[esp+40]
	push	eax
	push	DWORD PTR [edi+4]
	push	DWORD PTR [edi+8]
	push	DWORD PTR _token$[esp+48]
	call	_TS_RESP_verify_signature
	mov	ebx, DWORD PTR _signer$[esp+56]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN17@int_TS_RES
$LN2@int_TS_RES:
; Line 445
	test	BYTE PTR [edi], 2
	je	SHORT $LN3@int_TS_RES
	push	ebp
	call	_TS_TST_INFO_get_version
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN3@int_TS_RES
; Line 446
	push	446					; 000001beH
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	113					; 00000071H
	push	149					; 00000095H
$LN19@int_TS_RES:
; Line 586
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN17@int_TS_RES:
	mov	esi, DWORD PTR _md_alg$[esp+40]
$err$21:
; Line 489
	push	ebx
	call	_X509_free
; Line 490
	push	esi
	call	_X509_ALGOR_free
; Line 491
	push	DWORD PTR _imprint$[esp+48]
	call	_CRYPTO_free
; Line 492
	mov	eax, DWORD PTR _ret$1$[esp+52]
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 493
	add	esp, 24					; 00000018H
	ret	0
$LN3@int_TS_RES:
; Line 452
	test	BYTE PTR [edi], 4
	je	SHORT $LN13@int_TS_RES
	mov	esi, DWORD PTR [edi+12]
; Line 583
	push	ebp
	call	_TS_TST_INFO_get_policy_id
; Line 585
	push	eax
	push	esi
	call	_OBJ_cmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN13@int_TS_RES
; Line 586
	push	586					; 0000024aH
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	108					; 0000006cH
	push	102					; 00000066H
; Line 587
	jmp	SHORT $LN19@int_TS_RES
$LN13@int_TS_RES:
; Line 457
	test	BYTE PTR [edi], 8
	je	SHORT $LN5@int_TS_RES
	push	ebp
	push	DWORD PTR [edi+24]
	push	DWORD PTR [edi+20]
	push	DWORD PTR [edi+16]
	call	_TS_check_imprints
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN17@int_TS_RES
$LN5@int_TS_RES:
; Line 463
	test	BYTE PTR [edi], 16			; 00000010H
	je	SHORT $LN18@int_TS_RES
	lea	eax, DWORD PTR _imprint_len$[esp+40]
	push	eax
	lea	eax, DWORD PTR _imprint$[esp+44]
	push	eax
	lea	eax, DWORD PTR _md_alg$[esp+48]
	push	eax
	push	ebp
	push	DWORD PTR [edi+28]
	call	_TS_compute_imprint
	mov	esi, DWORD PTR _md_alg$[esp+60]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$21
	push	ebp
	push	DWORD PTR _imprint_len$[esp+44]
	push	DWORD PTR _imprint$[esp+48]
	push	esi
	call	_TS_check_imprints
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$21
	jmp	SHORT $LN6@int_TS_RES
$LN18@int_TS_RES:
	mov	esi, DWORD PTR _md_alg$[esp+40]
$LN6@int_TS_RES:
; Line 470
	test	BYTE PTR [edi], 32			; 00000020H
	je	SHORT $LN8@int_TS_RES
	push	ebp
	push	DWORD PTR [edi+32]
	call	_TS_check_nonces
	add	esp, 8
	test	eax, eax
	je	$err$21
$LN8@int_TS_RES:
; Line 475
	test	BYTE PTR [edi], 64			; 00000040H
	je	SHORT $LN9@int_TS_RES
	mov	eax, DWORD PTR _tsa_name$1$[esp+40]
	test	eax, eax
	je	SHORT $LN9@int_TS_RES
	push	ebx
	push	eax
	call	_TS_check_signer_name
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@int_TS_RES
; Line 476
	push	476					; 000001dcH
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	111					; 0000006fH
	push	149					; 00000095H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 477
	jmp	$err$21
$LN9@int_TS_RES:
; Line 482
	test	BYTE PTR [edi], 128			; 00000080H
	je	SHORT $LN10@int_TS_RES
	push	ebx
	push	DWORD PTR [edi+36]
	call	_TS_check_signer_name
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@int_TS_RES
; Line 483
	push	483					; 000001e3H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	112					; 00000070H
	push	149					; 00000095H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 484
	jmp	$err$21
$LN10@int_TS_RES:
; Line 487
	mov	DWORD PTR _ret$1$[esp+40], 1
	jmp	$err$21
_int_TS_RESP_verify_token ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_issuer_serial_cmp
_TEXT	SEGMENT
_is$ = 8						; size = 4
_cinfo$ = 12						; size = 4
_TS_issuer_serial_cmp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 357
	push	esi
; Line 360
	mov	esi, DWORD PTR _is$[esp]
	push	edi
	test	esi, esi
	je	SHORT $LN3@TS_issuer_
	mov	edi, DWORD PTR _cinfo$[esp+4]
	test	edi, edi
	je	SHORT $LN3@TS_issuer_
	push	DWORD PTR [esi]
	call	_sk_num
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN3@TS_issuer_
; Line 364
	push	0
	push	DWORD PTR [esi]
	call	_sk_value
	add	esp, 8
; Line 366
	cmp	DWORD PTR [eax], 4
	jne	SHORT $LN3@TS_issuer_
	push	DWORD PTR [edi+12]
	push	DWORD PTR [eax+4]
	call	_X509_NAME_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@TS_issuer_
; Line 370
	push	DWORD PTR [edi+4]
	push	DWORD PTR [esi+4]
	call	_ASN1_INTEGER_cmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	pop	edi
	pop	esi
; Line 374
	ret	0
$LN3@TS_issuer_:
	pop	edi
; Line 361
	or	eax, -1
	pop	esi
; Line 374
	ret	0
_TS_issuer_serial_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_find_cert
_TEXT	SEGMENT
_cert_ids$ = 8						; size = 4
_cert$ = 12						; size = 4
_TS_find_cert PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 329
	push	ebx
; Line 332
	mov	ebx, DWORD PTR _cert_ids$[esp]
	push	esi
	test	ebx, ebx
	je	$LN6@TS_find_ce
	mov	esi, DWORD PTR _cert$[esp+4]
	test	esi, esi
	je	$LN6@TS_find_ce
; Line 336
	push	ebp
	push	edi
	push	0
	push	-1
	push	esi
	call	_X509_check_purpose
; Line 339
	push	ebx
	xor	edi, edi
	call	_sk_num
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $LN15@TS_find_ce
$LL4@TS_find_ce:
; Line 340
	push	edi
	push	ebx
	call	_sk_value
	mov	ebp, eax
	add	esp, 8
; Line 344
	mov	edx, DWORD PTR [ebp]
	cmp	DWORD PTR [edx], 20			; 00000014H
	jne	SHORT $LN2@TS_find_ce
	mov	edx, DWORD PTR [edx+8]
	lea	eax, DWORD PTR [esi+80]
	mov	esi, 16					; 00000010H
$LL17@TS_find_ce:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN18@TS_find_ce
	add	edx, 4
	add	eax, 4
	sub	esi, 4
	jae	SHORT $LL17@TS_find_ce
; Line 347
	mov	eax, DWORD PTR [ebp+4]
; Line 348
	test	eax, eax
	je	SHORT $LN9@TS_find_ce
	mov	esi, DWORD PTR _cert$[esp+12]
	push	DWORD PTR [esi]
	push	eax
	call	_TS_issuer_serial_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@TS_find_ce
$LN9@TS_find_ce:
; Line 349
	mov	eax, edi
	pop	edi
	pop	ebp
	pop	esi
	pop	ebx
; Line 354
	ret	0
$LN18@TS_find_ce:
	mov	esi, DWORD PTR _cert$[esp+12]
$LN2@TS_find_ce:
; Line 339
	push	ebx
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL4@TS_find_ce
$LN15@TS_find_ce:
	pop	edi
	pop	ebp
	pop	esi
; Line 353
	or	eax, -1
	pop	ebx
; Line 354
	ret	0
$LN6@TS_find_ce:
	pop	esi
; Line 333
	or	eax, -1
	pop	ebx
; Line 354
	ret	0
_TS_find_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ESS_get_signing_cert
_TEXT	SEGMENT
_p$ = -4						; size = 4
_si$ = 8						; size = 4
_ESS_get_signing_cert PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 317
	mov	eax, 4
	call	__chkstk
; Line 320
	push	223					; 000000dfH
	push	DWORD PTR _si$[esp+4]
	call	_PKCS7_get_signed_attribute
	mov	ecx, eax
	add	esp, 8
; Line 321
	test	ecx, ecx
	jne	SHORT $LN2@ESS_get_si
; Line 325
	pop	ecx
	ret	0
$LN2@ESS_get_si:
; Line 323
	mov	eax, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _p$[esp+4], eax
; Line 324
	mov	eax, DWORD PTR [ecx+4]
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR _p$[esp+8]
	push	eax
	push	0
	call	_d2i_ESS_SIGNING_CERT
	add	esp, 12					; 0000000cH
; Line 325
	pop	ecx
	ret	0
_ESS_get_signing_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_check_signing_certs
_TEXT	SEGMENT
_ss$1$ = -8						; size = 4
_p$1 = -4						; size = 4
_si$ = 8						; size = 4
_chain$ = 12						; size = 4
_TS_check_signing_certs PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 280
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 320
	push	223					; 000000dfH
	push	DWORD PTR _si$[esp+24]
	call	_PKCS7_get_signed_attribute
	mov	ecx, eax
	add	esp, 8
; Line 321
	test	ecx, ecx
	jne	SHORT $LN12@TS_check_s
; Line 322
	xor	esi, esi
; Line 285
	xor	ebp, ebp
; Line 322
	jmp	$LN19@TS_check_s
$LN12@TS_check_s:
; Line 323
	mov	eax, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _p$1[esp+24], eax
; Line 324
	mov	eax, DWORD PTR [ecx+4]
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR _p$1[esp+28]
	push	eax
	push	0
	call	_d2i_ESS_SIGNING_CERT
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 285
	xor	ebp, ebp
; Line 324
	mov	DWORD PTR _ss$1$[esp+24], esi
; Line 287
	test	esi, esi
	je	SHORT $LN19@TS_check_s
; Line 291
	mov	edi, DWORD PTR _chain$[esp+20]
	mov	ebx, DWORD PTR [esi]
	push	ebp
	push	edi
	call	_sk_value
; Line 292
	push	eax
	push	ebx
	call	_TS_find_cert
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN19@TS_check_s
; Line 299
	push	ebx
	call	_sk_num
	add	esp, 4
	cmp	eax, 1
	jle	SHORT $LN3@TS_check_s
; Line 301
	push	edi
	lea	esi, DWORD PTR [ebp+1]
	call	_sk_num
	add	esp, 4
	cmp	eax, esi
	jle	SHORT $LN21@TS_check_s
$LL4@TS_check_s:
; Line 302
	push	esi
	push	edi
	call	_sk_value
; Line 303
	push	eax
	push	ebx
	call	_TS_find_cert
	add	esp, 16					; 00000010H
	test	eax, eax
	js	SHORT $LN20@TS_check_s
; Line 301
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@TS_check_s
$LN21@TS_check_s:
	mov	esi, DWORD PTR _ss$1$[esp+24]
$LN3@TS_check_s:
; Line 312
	push	esi
	mov	ebp, 1
	call	_ESS_SIGNING_CERT_free
	add	esp, 4
; Line 313
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 314
	add	esp, 8
	ret	0
$LN20@TS_check_s:
	mov	esi, DWORD PTR _ss$1$[esp+24]
$LN19@TS_check_s:
; Line 310
	push	311					; 00000137H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	101					; 00000065H
	push	103					; 00000067H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 312
	push	esi
	call	_ESS_SIGNING_CERT_free
	add	esp, 4
; Line 313
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 314
	add	esp, 8
	ret	0
_TS_check_signing_certs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_verify_cert
_TEXT	SEGMENT
_cert_ctx$ = -136					; size = 136
_store$ = 8						; size = 4
_untrusted$ = 12					; size = 4
_signer$ = 16						; size = 4
_chain$ = 20						; size = 4
_TS_verify_cert PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 251
	mov	eax, 136				; 00000088H
	call	__chkstk
	push	esi
	push	edi
; Line 258
	push	DWORD PTR _untrusted$[esp+140]
	mov	edi, DWORD PTR _chain$[esp+144]
	lea	eax, DWORD PTR _cert_ctx$[esp+148]
	push	DWORD PTR _signer$[esp+144]
	mov	esi, 1
	push	DWORD PTR _store$[esp+148]
	mov	DWORD PTR [edi], 0
	push	eax
	call	_X509_STORE_CTX_init
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN2@TS_verify_
	pop	edi
	pop	esi
; Line 276
	add	esp, 136				; 00000088H
	ret	0
$LN2@TS_verify_:
; Line 260
	lea	eax, DWORD PTR _cert_ctx$[esp+144]
	push	9
	push	eax
	call	_X509_STORE_CTX_set_purpose
; Line 261
	lea	eax, DWORD PTR _cert_ctx$[esp+152]
	push	eax
	call	_X509_verify_cert
	add	esp, 12					; 0000000cH
; Line 262
	test	eax, eax
; Line 263
	lea	eax, DWORD PTR _cert_ctx$[esp+144]
	push	eax
	jg	SHORT $LN3@TS_verify_
	call	_X509_STORE_CTX_get_error
; Line 264
	push	264					; 00000108H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	100					; 00000064H
	push	109					; 0000006dH
	push	47					; 0000002fH
	mov	esi, eax
	call	_ERR_put_error
; Line 265
	push	esi
	call	_X509_verify_cert_error_string
	push	eax
	push	OFFSET ??_C@_0O@HFNJECFC@Verify?5error?3?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 40					; 00000028H
; Line 267
	xor	esi, esi
; Line 268
	jmp	SHORT $LN4@TS_verify_
$LN3@TS_verify_:
; Line 270
	call	_X509_STORE_CTX_get1_chain
	add	esp, 4
	mov	DWORD PTR [edi], eax
$LN4@TS_verify_:
; Line 273
	lea	eax, DWORD PTR _cert_ctx$[esp+144]
	push	eax
	call	_X509_STORE_CTX_cleanup
	add	esp, 4
; Line 275
	mov	eax, esi
	pop	edi
	pop	esi
; Line 276
	add	esp, 136				; 00000088H
	ret	0
_TS_verify_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_verify_token
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_token$ = 12						; size = 4
_TS_RESP_verify_token PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 406
	push	esi
; Line 407
	mov	esi, DWORD PTR _token$[esp]
	push	edi
	push	esi
	call	_PKCS7_to_TS_TST_INFO
	mov	edi, eax
	add	esp, 4
; Line 409
	test	edi, edi
	je	SHORT $LN4@TS_RESP_ve
; Line 410
	push	edi
	push	esi
	push	DWORD PTR _ctx$[esp+12]
	call	_int_TS_RESP_verify_token
; Line 411
	push	edi
	mov	esi, eax
	call	_TS_TST_INFO_free
	add	esp, 16					; 00000010H
; Line 413
	mov	eax, esi
	pop	edi
	pop	esi
; Line 414
	ret	0
$LN4@TS_RESP_ve:
	pop	edi
; Line 413
	xor	eax, eax
	pop	esi
; Line 414
	ret	0
_TS_RESP_verify_token ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_verify_response
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_response$ = 12						; size = 4
_TS_RESP_verify_response PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 383
	push	ebx
	push	ebp
	push	esi
; Line 384
	mov	esi, DWORD PTR _response$[esp+8]
	push	edi
	push	esi
	call	_TS_RESP_get_token
; Line 385
	push	esi
	mov	ebx, eax
	call	_TS_RESP_get_tst_info
; Line 389
	push	esi
	mov	ebp, eax
	xor	edi, edi
	call	_TS_check_status_info
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@TS_RESP_ve
; Line 393
	push	ebp
	push	ebx
	push	DWORD PTR _ctx$[esp+20]
	call	_int_TS_RESP_verify_token
	add	esp, 12					; 0000000cH
	mov	ecx, 1
	test	eax, eax
	cmovne	edi, ecx
$LN5@TS_RESP_ve:
; Line 398
	mov	eax, edi
$err$7:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 399
	ret	0
_TS_RESP_verify_response ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_verify_signature
_TEXT	SEGMENT
_chain$ = -4128						; size = 4
_signers$1$ = -4124					; size = 4
_certs$GSCopy$1$ = -4120				; size = 4
_si$1$ = -4116						; size = 4
_ret$1$ = -4112						; size = 4
_store$GSCopy$1$ = -4108				; size = 4
_signer_out$GSCopy$1$ = -4104				; size = 4
_buf$ = -4100						; size = 4096
__$ArrayPad$ = -4					; size = 4
_token$ = 8						; size = 4
_certs$ = 12						; size = 4
_store$ = 16						; size = 4
_signer_out$ = 20					; size = 4
_TS_RESP_verify_signature PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_verify.c
; Line 161
	mov	eax, 4128				; 00001020H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+4128], eax
	mov	eax, DWORD PTR _certs$[esp+4124]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _token$[esp+4132]
; Line 166
	xor	ebx, ebx
	mov	DWORD PTR _certs$GSCopy$1$[esp+4136], eax
	mov	eax, DWORD PTR _store$[esp+4132]
	push	edi
	mov	DWORD PTR _store$GSCopy$1$[esp+4140], eax
; Line 169
	xor	edi, edi
	mov	eax, DWORD PTR _signer_out$[esp+4136]
	mov	DWORD PTR _signer_out$GSCopy$1$[esp+4140], eax
	mov	DWORD PTR _signers$1$[esp+4140], 0
	mov	DWORD PTR _chain$[esp+4140], ebx
	mov	DWORD PTR _ret$1$[esp+4140], ebx
; Line 172
	test	esi, esi
	jne	SHORT $LN4@TS_RESP_ve
; Line 173
	push	173					; 000000adH
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	102					; 00000066H
	push	106					; 0000006aH
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 174
	jmp	$err$23
$LN4@TS_RESP_ve:
; Line 178
	push	DWORD PTR [esi+16]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 22					; 00000016H
	je	SHORT $LN5@TS_RESP_ve
; Line 179
	push	179					; 000000b3H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	114					; 00000072H
	push	106					; 0000006aH
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 180
	jmp	$err$23
$LN5@TS_RESP_ve:
	push	ebp
; Line 184
	push	esi
	call	_PKCS7_get_signer_info
	mov	ebp, eax
	add	esp, 4
; Line 185
	test	ebp, ebp
	je	$LN7@TS_RESP_ve
	push	ebp
	call	_sk_num
	add	esp, 4
	cmp	eax, 1
	jne	$LN7@TS_RESP_ve
; Line 189
	push	0
	push	ebp
	call	_sk_value
; Line 192
	push	0
	push	0
	push	2
	push	esi
	mov	DWORD PTR _si$1$[esp+4168], eax
	call	_PKCS7_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN8@TS_RESP_ve
; Line 193
	push	193					; 000000c1H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	106					; 0000006aH
; Line 194
	jmp	$LN21@TS_RESP_ve
$LN8@TS_RESP_ve:
; Line 201
	push	0
	push	DWORD PTR _certs$GSCopy$1$[esp+4148]
	push	esi
	call	_PKCS7_get0_signers
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _signers$1$[esp+4144], eax
; Line 202
	test	eax, eax
	je	$LN20@TS_RESP_ve
	push	eax
	call	_sk_num
	add	esp, 4
	cmp	eax, 1
	jne	$LN20@TS_RESP_ve
; Line 204
	push	0
	push	DWORD PTR _signers$1$[esp+4148]
	call	_sk_value
	mov	ebp, eax
; Line 207
	lea	eax, DWORD PTR _chain$[esp+4152]
	push	eax
	push	ebp
	push	DWORD PTR _certs$GSCopy$1$[esp+4160]
	push	DWORD PTR _store$GSCopy$1$[esp+4164]
	call	_TS_verify_cert
; Line 213
	mov	ebx, DWORD PTR _chain$[esp+4168]
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN20@TS_RESP_ve
	push	ebx
	push	DWORD PTR _si$1$[esp+4148]
	call	_TS_check_signing_certs
	add	esp, 8
	test	eax, eax
	je	$LN20@TS_RESP_ve
; Line 217
	push	0
	push	esi
	call	_PKCS7_dataInit
	add	esp, 8
	mov	edi, eax
	npad	7
$LL2@TS_RESP_ve:
; Line 220
	push	4096					; 00001000H
	lea	eax, DWORD PTR _buf$[esp+4148]
	push	eax
	push	edi
	call	_BIO_read
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LL2@TS_RESP_ve
; Line 223
	push	ebp
	push	DWORD PTR _si$1$[esp+4148]
	push	esi
	push	edi
	call	_PKCS7_signatureVerify
	add	esp, 16					; 00000010H
; Line 224
	test	eax, eax
	jg	SHORT $LN13@TS_RESP_ve
; Line 225
	push	225					; 000000e1H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	109					; 0000006dH
; Line 226
	jmp	SHORT $LN21@TS_RESP_ve
$LN13@TS_RESP_ve:
; Line 230
	mov	eax, DWORD PTR _signer_out$GSCopy$1$[esp+4144]
	test	eax, eax
	je	SHORT $LN14@TS_RESP_ve
; Line 232
	push	232					; 000000e8H
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	3
	mov	DWORD PTR [eax], ebp
	lea	eax, DWORD PTR [ebp+16]
	push	1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
$LN14@TS_RESP_ve:
; Line 235
	mov	DWORD PTR _ret$1$[esp+4144], 1
	jmp	SHORT $LN20@TS_RESP_ve
$LN7@TS_RESP_ve:
; Line 186
	push	186					; 000000baH
	push	OFFSET ??_C@_0BM@EKNHHGI@?4?2crypto?2ts?2ts_rsp_verify?4c?$AA@
	push	110					; 0000006eH
$LN21@TS_RESP_ve:
	push	106					; 0000006aH
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN20@TS_RESP_ve:
	pop	ebp
$err$23:
; Line 238
	push	edi
	call	_BIO_free_all
; Line 239
	push	OFFSET _X509_free
	push	ebx
	call	_sk_pop_free
; Line 240
	push	DWORD PTR _signers$1$[esp+4152]
	call	_sk_free
; Line 243
	mov	ecx, DWORD PTR __$ArrayPad$[esp+4156]
	add	esp, 16					; 00000010H
	mov	eax, DWORD PTR _ret$1$[esp+4140]
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 4128				; 00001020H
	ret	0
_TS_RESP_verify_signature ENDP
_TEXT	ENDS
END

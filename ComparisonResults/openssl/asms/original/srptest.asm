; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\srp\srptest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_main
PUBLIC	??_C@_03MHLONNLM@?5?$DN?5?$AA@			; `string'
PUBLIC	??_C@_04MJHCKDHM@1024?$AA@			; `string'
PUBLIC	??_C@_0BO@NGBEKJID@Failed?5to?5get?5SRP?5parameters?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@FCJLBNGB@Failed?5to?5create?5SRP?5verifier?6?$AA@ ; `string'
PUBLIC	??_C@_01NANMIPIL@N?$AA@				; `string'
PUBLIC	??_C@_01JEJKBAGA@g?$AA@				; `string'
PUBLIC	??_C@_04MPGKKDCJ@Salt?$AA@			; `string'
PUBLIC	??_C@_08NHPAMKDJ@Verifier?$AA@			; `string'
PUBLIC	??_C@_01OJONOECF@b?$AA@				; `string'
PUBLIC	??_C@_01HMGJMAIH@B?$AA@				; `string'
PUBLIC	??_C@_0L@EPDHPAFE@Invalid?5B?6?$AA@		; `string'
PUBLIC	??_C@_01MCMALHOG@a?$AA@				; `string'
PUBLIC	??_C@_01FHEEJDEE@A?$AA@				; `string'
PUBLIC	??_C@_0L@ENHBEOAN@Invalid?5A?6?$AA@		; `string'
PUBLIC	??_C@_0N@GHNDCLEL@Client?8s?5key?$AA@		; `string'
PUBLIC	??_C@_0N@ELAJFJDO@Server?8s?5key?$AA@		; `string'
PUBLIC	??_C@_0P@JKFBNJAG@Keys?5mismatch?6?$AA@		; `string'
PUBLIC	??_C@_09DAKGFJEM@password2?$AA@			; `string'
PUBLIC	??_C@_09BLILAKIP@password1?$AA@			; `string'
PUBLIC	??_C@_05MFGCEKPN@alice?$AA@			; `string'
PUBLIC	??_C@_0BL@EJOPECBK@Mismatched?5SRP?5run?5failed?6?$AA@ ; `string'
PUBLIC	??_C@_08NLHBPEGP@password?$AA@			; `string'
PUBLIC	??_C@_0BG@OHDBDOPH@Plain?5SRP?5run?5failed?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fputs:PROC
EXTRN	__imp__putc:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	_CRYPTO_mem_ctrl:PROC
EXTRN	_CRYPTO_cleanup_all_ex_data:PROC
EXTRN	_CRYPTO_set_mem_debug_functions:PROC
EXTRN	_CRYPTO_dbg_malloc:PROC
EXTRN	_CRYPTO_dbg_realloc:PROC
EXTRN	_CRYPTO_dbg_free:PROC
EXTRN	_CRYPTO_dbg_set_options:PROC
EXTRN	_CRYPTO_dbg_get_options:PROC
EXTRN	_CRYPTO_mem_leaks:PROC
EXTRN	_BN_clear_free:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_print_fp:PROC
EXTRN	_SRP_create_verifier_BN:PROC
EXTRN	_SRP_get_default_gN:PROC
EXTRN	_SRP_Calc_server_key:PROC
EXTRN	_SRP_Calc_B:PROC
EXTRN	_SRP_Verify_A_mod_N:PROC
EXTRN	_SRP_Calc_u:PROC
EXTRN	_SRP_Calc_x:PROC
EXTRN	_SRP_Calc_A:PROC
EXTRN	_SRP_Calc_client_key:PROC
EXTRN	_SRP_Verify_B_mod_N:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_free:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_ERR_free_strings:PROC
EXTRN	_ERR_remove_thread_state:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0BG@OHDBDOPH@Plain?5SRP?5run?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BG@OHDBDOPH@Plain?5SRP?5run?5failed?6?$AA@ DB 'Plain SRP run faile'
	DB	'd', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08NLHBPEGP@password?$AA@
CONST	SEGMENT
??_C@_08NLHBPEGP@password?$AA@ DB 'password', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EJOPECBK@Mismatched?5SRP?5run?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BL@EJOPECBK@Mismatched?5SRP?5run?5failed?6?$AA@ DB 'Mismatched SRP'
	DB	' run failed', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MFGCEKPN@alice?$AA@
CONST	SEGMENT
??_C@_05MFGCEKPN@alice?$AA@ DB 'alice', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BLILAKIP@password1?$AA@
CONST	SEGMENT
??_C@_09BLILAKIP@password1?$AA@ DB 'password1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DAKGFJEM@password2?$AA@
CONST	SEGMENT
??_C@_09DAKGFJEM@password2?$AA@ DB 'password2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JKFBNJAG@Keys?5mismatch?6?$AA@
CONST	SEGMENT
??_C@_0P@JKFBNJAG@Keys?5mismatch?6?$AA@ DB 'Keys mismatch', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ELAJFJDO@Server?8s?5key?$AA@
CONST	SEGMENT
??_C@_0N@ELAJFJDO@Server?8s?5key?$AA@ DB 'Server''s key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GHNDCLEL@Client?8s?5key?$AA@
CONST	SEGMENT
??_C@_0N@GHNDCLEL@Client?8s?5key?$AA@ DB 'Client''s key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ENHBEOAN@Invalid?5A?6?$AA@
CONST	SEGMENT
??_C@_0L@ENHBEOAN@Invalid?5A?6?$AA@ DB 'Invalid A', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01FHEEJDEE@A?$AA@
CONST	SEGMENT
??_C@_01FHEEJDEE@A?$AA@ DB 'A', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01MCMALHOG@a?$AA@
CONST	SEGMENT
??_C@_01MCMALHOG@a?$AA@ DB 'a', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EPDHPAFE@Invalid?5B?6?$AA@
CONST	SEGMENT
??_C@_0L@EPDHPAFE@Invalid?5B?6?$AA@ DB 'Invalid B', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT
??_C@_01HMGJMAIH@B?$AA@ DB 'B', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OJONOECF@b?$AA@
CONST	SEGMENT
??_C@_01OJONOECF@b?$AA@ DB 'b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NHPAMKDJ@Verifier?$AA@
CONST	SEGMENT
??_C@_08NHPAMKDJ@Verifier?$AA@ DB 'Verifier', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MPGKKDCJ@Salt?$AA@
CONST	SEGMENT
??_C@_04MPGKKDCJ@Salt?$AA@ DB 'Salt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01JEJKBAGA@g?$AA@
CONST	SEGMENT
??_C@_01JEJKBAGA@g?$AA@ DB 'g', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NANMIPIL@N?$AA@
CONST	SEGMENT
??_C@_01NANMIPIL@N?$AA@ DB 'N', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FCJLBNGB@Failed?5to?5create?5SRP?5verifier?6?$AA@
CONST	SEGMENT
??_C@_0BP@FCJLBNGB@Failed?5to?5create?5SRP?5verifier?6?$AA@ DB 'Failed to'
	DB	' create SRP verifier', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NGBEKJID@Failed?5to?5get?5SRP?5parameters?6?$AA@
CONST	SEGMENT
??_C@_0BO@NGBEKJID@Failed?5to?5get?5SRP?5parameters?6?$AA@ DB 'Failed to '
	DB	'get SRP parameters', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MJHCKDHM@1024?$AA@
CONST	SEGMENT
??_C@_04MJHCKDHM@1024?$AA@ DB '1024', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MHLONNLM@?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_03MHLONNLM@?5?$DN?5?$AA@ DB ' = ', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\srp\srptest.c
; Line 125
	push	esi
; Line 127
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	edi
	push	0
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_BIO_new_fp
; Line 129
	push	OFFSET _CRYPTO_dbg_get_options
	push	OFFSET _CRYPTO_dbg_set_options
	push	OFFSET _CRYPTO_dbg_free
	push	OFFSET _CRYPTO_dbg_realloc
	push	OFFSET _CRYPTO_dbg_malloc
	mov	edi, eax
	call	_CRYPTO_set_mem_debug_functions
; Line 130
	push	3
	call	_CRYPTO_dbg_set_options
; Line 131
	push	1
	call	_CRYPTO_mem_ctrl
; Line 133
	call	_ERR_load_crypto_strings
; Line 136
	push	OFFSET ??_C@_09DAKGFJEM@password2?$AA@
	push	OFFSET ??_C@_09BLILAKIP@password1?$AA@
	push	OFFSET ??_C@_05MFGCEKPN@alice?$AA@
	call	_run_srp
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN5@main
; Line 137
	push	OFFSET ??_C@_0BL@EJOPECBK@Mismatched?5SRP?5run?5failed?6?$AA@
$LN8@main:
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 138
	mov	eax, 1
	pop	edi
	pop	esi
; Line 154
	ret	0
$LN5@main:
; Line 142
	push	OFFSET ??_C@_08NLHBPEGP@password?$AA@
	push	OFFSET ??_C@_08NLHBPEGP@password?$AA@
	push	OFFSET ??_C@_05MFGCEKPN@alice?$AA@
	call	_run_srp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN6@main
; Line 143
	push	OFFSET ??_C@_0BG@OHDBDOPH@Plain?5SRP?5run?5failed?6?$AA@
; Line 144
	jmp	SHORT $LN8@main
$LN6@main:
; Line 147
	call	_CRYPTO_cleanup_all_ex_data
; Line 148
	push	0
	call	_ERR_remove_thread_state
; Line 149
	call	_ERR_free_strings
; Line 150
	push	edi
	call	_CRYPTO_mem_leaks
; Line 151
	push	edi
	call	_BIO_free
	add	esp, 12					; 0000000cH
; Line 153
	xor	eax, eax
	pop	edi
	pop	esi
; Line 154
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _run_srp
_TEXT	SEGMENT
_v$ = -64						; size = 4
_s$ = -60						; size = 4
_client_pass$GSCopy$1$ = -56				; size = 4
_Kclient$1$ = -56					; size = 4
_u$1$ = -52						; size = 4
_username$GSCopy$1$ = -48				; size = 4
_Kserver$1$ = -48					; size = 4
_b$1$ = -44						; size = 4
_x$1$ = -40						; size = 4
_rand_tmp$ = -36					; size = 32
__$ArrayPad$ = -4					; size = 4
_username$ = 8						; size = 4
_client_pass$ = 12					; size = 4
_server_pass$ = 16					; size = 4
_run_srp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\srp\srptest.c
; Line 30
	mov	eax, 64					; 00000040H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+64], eax
	mov	eax, DWORD PTR _client_pass$[esp+60]
	push	ebx
	mov	ebx, DWORD PTR _username$[esp+64]
	push	esi
	push	edi
	mov	edi, DWORD PTR _server_pass$[esp+72]
; Line 44
	push	OFFSET ??_C@_04MJHCKDHM@1024?$AA@
	mov	DWORD PTR _username$GSCopy$1$[esp+80], ebx
	mov	DWORD PTR _client_pass$GSCopy$1$[esp+80], eax
	mov	DWORD PTR _s$[esp+80], 0
	mov	DWORD PTR _v$[esp+80], 0
	call	_SRP_get_default_gN
	mov	esi, eax
	add	esp, 4
; Line 46
	test	esi, esi
	jne	SHORT $LN2@run_srp
; Line 47
	push	OFFSET ??_C@_0BO@NGBEKJID@Failed?5to?5get?5SRP?5parameters?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 48
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebx
; Line 122
	mov	ecx, DWORD PTR __$ArrayPad$[esp+64]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
$LN2@run_srp:
; Line 51
	push	DWORD PTR [esi+4]
	lea	eax, DWORD PTR _v$[esp+80]
	push	DWORD PTR [esi+8]
	push	eax
	lea	eax, DWORD PTR _s$[esp+88]
	push	eax
	push	edi
	push	ebx
	call	_SRP_create_verifier_BN
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN3@run_srp
; Line 52
	push	OFFSET ??_C@_0BP@FCJLBNGB@Failed?5to?5create?5SRP?5verifier?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 53
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebx
; Line 122
	mov	ecx, DWORD PTR __$ArrayPad$[esp+64]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
$LN3@run_srp:
	push	ebp
; Line 56
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_01NANMIPIL@N?$AA@
	call	_showbn
; Line 57
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_01JEJKBAGA@g?$AA@
	call	_showbn
; Line 58
	push	DWORD PTR _s$[esp+96]
	push	OFFSET ??_C@_04MPGKKDCJ@Salt?$AA@
	call	_showbn
; Line 59
	push	DWORD PTR _v$[esp+104]
	push	OFFSET ??_C@_08NHPAMKDJ@Verifier?$AA@
	call	_showbn
; Line 62
	lea	eax, DWORD PTR _rand_tmp$[esp+112]
	push	32					; 00000020H
	push	eax
	call	_RAND_pseudo_bytes
; Line 63
	push	0
	lea	eax, DWORD PTR _rand_tmp$[esp+124]
	push	32					; 00000020H
	push	eax
	call	_BN_bin2bn
	mov	ebx, eax
; Line 65
	push	ebx
	push	OFFSET ??_C@_01OJONOECF@b?$AA@
	mov	DWORD PTR _b$1$[esp+140], ebx
	call	_showbn
; Line 68
	push	DWORD PTR _v$[esp+140]
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi+8]
	push	ebx
	call	_SRP_Calc_B
	add	esp, 76					; 0000004cH
	mov	ebp, eax
; Line 69
	push	ebp
	push	OFFSET ??_C@_01HMGJMAIH@B?$AA@
	call	_showbn
; Line 71
	push	DWORD PTR [esi+8]
	push	ebp
	call	_SRP_Verify_B_mod_N
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN4@run_srp
; Line 72
	push	OFFSET ??_C@_0L@EPDHPAFE@Invalid?5B?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 73
	or	eax, -1
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 122
	mov	ecx, DWORD PTR __$ArrayPad$[esp+64]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
$LN4@run_srp:
; Line 77
	lea	eax, DWORD PTR _rand_tmp$[esp+80]
	push	32					; 00000020H
	push	eax
	call	_RAND_pseudo_bytes
; Line 78
	push	0
	lea	eax, DWORD PTR _rand_tmp$[esp+92]
	push	32					; 00000020H
	push	eax
	call	_BN_bin2bn
	mov	ebx, eax
; Line 80
	push	ebx
	push	OFFSET ??_C@_01MCMALHOG@a?$AA@
	call	_showbn
; Line 83
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi+8]
	push	ebx
	call	_SRP_Calc_A
	mov	edi, eax
; Line 84
	push	edi
	push	OFFSET ??_C@_01FHEEJDEE@A?$AA@
	call	_showbn
; Line 86
	push	DWORD PTR [esi+8]
	push	edi
	call	_SRP_Verify_A_mod_N
	add	esp, 56					; 00000038H
	test	eax, eax
	jne	SHORT $LN5@run_srp
; Line 87
	push	OFFSET ??_C@_0L@ENHBEOAN@Invalid?5A?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 88
	or	eax, -1
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 122
	mov	ecx, DWORD PTR __$ArrayPad$[esp+64]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
$LN5@run_srp:
; Line 92
	push	DWORD PTR [esi+8]
	push	ebp
	push	edi
	call	_SRP_Calc_u
; Line 95
	push	DWORD PTR _client_pass$GSCopy$1$[esp+92]
	mov	DWORD PTR _u$1$[esp+96], eax
	push	DWORD PTR _username$GSCopy$1$[esp+96]
	push	DWORD PTR _s$[esp+100]
	call	_SRP_Calc_x
; Line 96
	push	DWORD PTR _u$1$[esp+104]
	mov	DWORD PTR _x$1$[esp+108], eax
	push	ebx
	push	eax
	push	DWORD PTR [esi+4]
	push	ebp
	push	DWORD PTR [esi+8]
	call	_SRP_Calc_client_key
; Line 97
	push	eax
	push	OFFSET ??_C@_0N@GHNDCLEL@Client?8s?5key?$AA@
	mov	DWORD PTR _Kclient$1$[esp+136], eax
	call	_showbn
; Line 100
	push	DWORD PTR [esi+8]
	push	DWORD PTR _b$1$[esp+140]
	push	DWORD PTR _u$1$[esp+144]
	push	DWORD PTR _v$[esp+148]
	push	edi
	call	_SRP_Calc_server_key
	add	esp, 76					; 0000004cH
	mov	esi, eax
	mov	DWORD PTR _Kserver$1$[esp+80], esi
; Line 101
	push	esi
	push	OFFSET ??_C@_0N@ELAJFJDO@Server?8s?5key?$AA@
	call	_showbn
; Line 103
	push	esi
	push	DWORD PTR _Kclient$1$[esp+92]
	call	_BN_cmp
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN6@run_srp
; Line 104
	xor	esi, esi
; Line 105
	jmp	SHORT $LN7@run_srp
$LN6@run_srp:
; Line 106
	push	OFFSET ??_C@_0P@JKFBNJAG@Keys?5mismatch?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 107
	mov	esi, 1
$LN7@run_srp:
; Line 110
	push	DWORD PTR _Kclient$1$[esp+80]
	call	_BN_clear_free
; Line 111
	push	DWORD PTR _Kserver$1$[esp+84]
	call	_BN_clear_free
; Line 112
	push	DWORD PTR _x$1$[esp+88]
	call	_BN_clear_free
; Line 113
	push	DWORD PTR _u$1$[esp+92]
	call	_BN_free
; Line 114
	push	edi
	call	_BN_free
; Line 115
	push	ebx
	call	_BN_clear_free
; Line 116
	push	ebp
	call	_BN_free
; Line 117
	push	DWORD PTR _b$1$[esp+108]
	call	_BN_clear_free
; Line 118
	push	DWORD PTR _s$[esp+112]
	call	_BN_free
; Line 119
	push	DWORD PTR _v$[esp+116]
	call	_BN_clear_free
; Line 122
	mov	ecx, DWORD PTR __$ArrayPad$[esp+120]
	add	esp, 40					; 00000028H
	mov	eax, esi
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
_run_srp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _showbn
_TEXT	SEGMENT
_name$ = 8						; size = 4
_bn$ = 12						; size = 4
_showbn	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\srp\srptest.c
; Line 19
	push	edi
; Line 20
	mov	edi, DWORD PTR __imp____acrt_iob_func
	push	1
	call	edi
	push	eax
	push	DWORD PTR _name$[esp+8]
	call	DWORD PTR __imp__fputs
; Line 21
	push	1
	call	edi
	push	eax
	push	OFFSET ??_C@_03MHLONNLM@?5?$DN?5?$AA@
	call	DWORD PTR __imp__fputs
	add	esp, 24					; 00000018H
; Line 22
	push	DWORD PTR _bn$[esp]
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_BN_print_fp
; Line 23
	push	1
	call	edi
	add	esp, 12					; 0000000cH
	pop	edi
	mov	DWORD PTR _bn$[esp-4], eax
	mov	DWORD PTR _name$[esp-4], 10		; 0000000aH
	jmp	DWORD PTR __imp__putc
_showbn	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

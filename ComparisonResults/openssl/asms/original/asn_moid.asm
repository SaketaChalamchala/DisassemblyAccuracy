; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_moid.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_add_oid_module
PUBLIC	??_C@_0BJ@EKABKJJL@?4?2crypto?2asn1?2asn_moid?4c?$AA@ ; `string'
PUBLIC	??_C@_0M@HCKPEIO@oid_section?$AA@		; `string'
EXTRN	__imp__isspace:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	__imp__strrchr:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_NCONF_get_section:PROC
EXTRN	_CONF_module_add:PROC
EXTRN	_CONF_imodule_get_value:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_create:PROC
EXTRN	_OBJ_cleanup:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0M@HCKPEIO@oid_section?$AA@
CONST	SEGMENT
??_C@_0M@HCKPEIO@oid_section?$AA@ DB 'oid_section', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EKABKJJL@?4?2crypto?2asn1?2asn_moid?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@EKABKJJL@?4?2crypto?2asn1?2asn_moid?4c?$AA@ DB '.\crypto\asn1\a'
	DB	'sn_moid.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _oid_module_finish
_TEXT	SEGMENT
_md$ = 8						; size = 4
_oid_module_finish PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_moid.c
; Line 95
	jmp	_OBJ_cleanup
_oid_module_finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _oid_module_init
_TEXT	SEGMENT
_nid$1$ = -16						; size = 4
_ln$1$ = -16						; size = 4
_i$1$ = -12						; size = 4
_lntmp$1$ = -8						; size = 4
_name$1$ = -8						; size = 4
_sktmp$1$ = -4						; size = 4
_md$ = 8						; size = 4
_cnf$ = 12						; size = 4
_oid_module_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_moid.c
; Line 73
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	esi
; Line 78
	push	DWORD PTR _md$[esp+16]
	call	_CONF_imodule_get_value
; Line 79
	push	eax
	push	DWORD PTR _cnf$[esp+24]
	call	_NCONF_get_section
	mov	esi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _sktmp$1$[esp+20], esi
	test	esi, esi
	jne	SHORT $LN5@oid_module
; Line 80
	push	80					; 00000050H
	push	OFFSET ??_C@_0BJ@EKABKJJL@?4?2crypto?2asn1?2asn_moid?4c?$AA@
	push	172					; 000000acH
	push	174					; 000000aeH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 81
	xor	eax, eax
	pop	esi
; Line 91
	add	esp, 16					; 00000010H
	ret	0
$LN5@oid_module:
	push	ebx
	push	ebp
	push	edi
; Line 83
	xor	ebx, ebx
	push	esi
	mov	DWORD PTR _i$1$[esp+36], ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN3@oid_module
	mov	ebp, DWORD PTR __imp__isspace
	npad	3
$LL4@oid_module:
; Line 84
	push	ebx
	push	esi
	call	_sk_value
; Line 114
	push	44					; 0000002cH
; Line 85
	mov	edi, DWORD PTR [eax+8]
	mov	ebx, DWORD PTR [eax+4]
; Line 114
	push	edi
; Line 85
	mov	DWORD PTR _name$1$[esp+48], ebx
; Line 114
	call	DWORD PTR __imp__strrchr
	mov	esi, eax
	add	esp, 16					; 00000010H
; Line 115
	test	esi, esi
	jne	SHORT $LN15@oid_module
; Line 116
	mov	eax, ebx
; Line 117
	mov	ebx, edi
; Line 118
	jmp	SHORT $LN10@oid_module
$LN15@oid_module:
; Line 121
	mov	al, BYTE PTR [esi+1]
	lea	ebx, DWORD PTR [esi+1]
	mov	DWORD PTR _ln$1$[esp+32], 0
	test	al, al
	je	$LN28@oid_module
; Line 123
	movzx	eax, al
	push	eax
	call	ebp
	add	esp, 4
	test	eax, eax
	je	SHORT $LN46@oid_module
	npad	4
$LL9@oid_module:
	movzx	eax, BYTE PTR [ebx+1]
; Line 124
	inc	ebx
	push	eax
	call	ebp
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL9@oid_module
$LN46@oid_module:
	mov	eax, DWORD PTR _ln$1$[esp+32]
$LN10@oid_module:
; Line 127
	push	eax
	push	DWORD PTR _name$1$[esp+36]
	push	ebx
	call	_OBJ_create
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _nid$1$[esp+32], eax
; Line 129
	test	eax, eax
	je	$LN28@oid_module
; Line 132
	test	esi, esi
	je	$LN19@oid_module
; Line 134
	movzx	ecx, BYTE PTR [edi]
	push	ecx
	call	ebp
	add	esp, 4
	test	eax, eax
	je	SHORT $LN12@oid_module
$LL11@oid_module:
	movzx	eax, BYTE PTR [edi+1]
; Line 135
	inc	edi
	push	eax
	call	ebp
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL11@oid_module
$LN12@oid_module:
; Line 137
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	push	eax
	call	ebp
	add	esp, 4
	test	eax, eax
	je	SHORT $LN14@oid_module
$LL13@oid_module:
; Line 138
	cmp	esi, edi
	je	$LN28@oid_module
; Line 140
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	push	eax
	call	ebp
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL13@oid_module
$LN14@oid_module:
; Line 143
	lea	ebx, DWORD PTR [esi+1]
	sub	ebx, edi
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BJ@EKABKJJL@?4?2crypto?2asn1?2asn_moid?4c?$AA@
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _lntmp$1$[esp+32], eax
; Line 144
	test	eax, eax
	je	SHORT $LN28@oid_module
; Line 146
	push	ebx
	push	edi
	push	eax
	call	_memcpy
; Line 147
	mov	ebx, DWORD PTR _lntmp$1$[esp+44]
	mov	ecx, ebx
; Line 148
	push	DWORD PTR _nid$1$[esp+44]
	sub	ecx, edi
	mov	BYTE PTR [ecx+esi+1], 0
	call	_OBJ_nid2obj
	add	esp, 16					; 00000010H
; Line 149
	mov	DWORD PTR [eax+4], ebx
$LN19@oid_module:
; Line 83
	mov	ebx, DWORD PTR _i$1$[esp+32]
	mov	esi, DWORD PTR _sktmp$1$[esp+32]
	inc	ebx
	push	esi
	mov	DWORD PTR _i$1$[esp+36], ebx
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL4@oid_module
$LN3@oid_module:
	pop	edi
	pop	ebp
	pop	ebx
; Line 90
	mov	eax, 1
	pop	esi
; Line 91
	add	esp, 16					; 00000010H
	ret	0
$LN28@oid_module:
; Line 86
	push	86					; 00000056H
	push	OFFSET ??_C@_0BJ@EKABKJJL@?4?2crypto?2asn1?2asn_moid?4c?$AA@
	push	171					; 000000abH
	push	174					; 000000aeH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 87
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 91
	add	esp, 16					; 00000010H
	ret	0
_oid_module_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_create
_TEXT	SEGMENT
_nid$1$ = -4						; size = 4
_value$ = 8						; size = 4
_name$ = 12						; size = 4
_do_create PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_moid.c
; Line 110
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 114
	mov	edi, DWORD PTR _value$[esp+16]
	push	44					; 0000002cH
	push	edi
	call	DWORD PTR __imp__strrchr
; Line 115
	mov	ebx, DWORD PTR __imp__isspace
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	jne	SHORT $LN8@do_create
; Line 116
	mov	eax, DWORD PTR _name$[esp+16]
; Line 117
	mov	ebp, edi
; Line 118
	jmp	SHORT $LN3@do_create
$LN8@do_create:
; Line 121
	mov	al, BYTE PTR [esi+1]
	lea	ebp, DWORD PTR [esi+1]
	test	al, al
	jne	SHORT $LN16@do_create
$LN30@do_create:
	pop	edi
	pop	esi
	pop	ebp
; Line 122
	xor	eax, eax
	pop	ebx
; Line 153
	pop	ecx
	ret	0
$LN16@do_create:
; Line 123
	movzx	eax, al
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN29@do_create
$LL2@do_create:
	movzx	eax, BYTE PTR [ebp+1]
; Line 124
	inc	ebp
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL2@do_create
$LN29@do_create:
	xor	eax, eax
$LN3@do_create:
; Line 127
	push	eax
	push	DWORD PTR _name$[esp+20]
	push	ebp
	call	_OBJ_create
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _nid$1$[esp+20], eax
; Line 129
	test	eax, eax
	je	SHORT $LN30@do_create
; Line 132
	test	esi, esi
	je	$LN12@do_create
; Line 134
	movzx	eax, BYTE PTR [edi]
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@do_create
	npad	3
$LL4@do_create:
	movzx	eax, BYTE PTR [edi+1]
; Line 135
	inc	edi
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL4@do_create
$LN5@do_create:
; Line 137
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN7@do_create
	npad	2
$LL6@do_create:
; Line 138
	cmp	esi, edi
	je	SHORT $LN30@do_create
; Line 140
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL6@do_create
$LN7@do_create:
; Line 143
	lea	ebx, DWORD PTR [esi+1]
	sub	ebx, edi
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BJ@EKABKJJL@?4?2crypto?2asn1?2asn_moid?4c?$AA@
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 144
	test	ebp, ebp
	je	$LN30@do_create
; Line 146
	push	ebx
	push	edi
	push	ebp
	call	_memcpy
; Line 148
	push	DWORD PTR _nid$1$[esp+32]
	mov	eax, ebp
	sub	eax, edi
	mov	BYTE PTR [eax+esi+1], 0
	call	_OBJ_nid2obj
	add	esp, 16					; 00000010H
; Line 149
	mov	DWORD PTR [eax+4], ebp
$LN12@do_create:
; Line 152
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 153
	pop	ecx
	ret	0
_do_create ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_add_oid_module
_TEXT	SEGMENT
_ASN1_add_oid_module PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_moid.c
; Line 100
	push	OFFSET _oid_module_finish
	push	OFFSET _oid_module_init
	push	OFFSET ??_C@_0M@HCKPEIO@oid_section?$AA@
	call	_CONF_module_add
	add	esp, 12					; 0000000cH
; Line 101
	ret	0
_ASN1_add_oid_module ENDP
_TEXT	ENDS
END

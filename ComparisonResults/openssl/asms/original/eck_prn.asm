; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ec\eck_prn.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BI@DFFFIKFB@Generator?5?$CIcompressed?$CJ?3?$AA@ ; `string'
PUBLIC	??_C@_0BK@DOCPEENO@Generator?5?$CIuncompressed?$CJ?3?$AA@ ; `string'
PUBLIC	??_C@_0BE@FPCNHCIJ@Generator?5?$CIhybrid?$CJ?3?$AA@ ; `string'
;	COMDAT ??_C@_0BE@FPCNHCIJ@Generator?5?$CIhybrid?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0BE@FPCNHCIJ@Generator?5?$CIhybrid?$CJ?3?$AA@ DB 'Generator (hybrid'
	DB	'):', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DOCPEENO@Generator?5?$CIuncompressed?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0BK@DOCPEENO@Generator?5?$CIuncompressed?$CJ?3?$AA@ DB 'Generator ('
	DB	'uncompressed):', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DFFFIKFB@Generator?5?$CIcompressed?$CJ?3?$AA@
CONST	SEGMENT
??_C@_0BI@DFFFIKFB@Generator?5?$CIcompressed?$CJ?3?$AA@ DB 'Generator (co'
	DB	'mpressed):', 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?gen_compressed@?1??ECPKParameters_print@@9@9 DD FLAT:??_C@_0BI@DFFFIKFB@Generator?5?$CIcompressed?$CJ?3?$AA@ ; `ECPKParameters_print'::`2'::gen_compressed
?gen_uncompressed@?1??ECPKParameters_print@@9@9 DD FLAT:??_C@_0BK@DOCPEENO@Generator?5?$CIuncompressed?$CJ?3?$AA@ ; `ECPKParameters_print'::`2'::gen_uncompressed
?gen_hybrid@?1??ECPKParameters_print@@9@9 DD FLAT:??_C@_0BE@FPCNHCIJ@Generator?5?$CIhybrid?$CJ?3?$AA@ ; `ECPKParameters_print'::`2'::gen_hybrid
_DATA	ENDS
PUBLIC	_ECPKParameters_print
PUBLIC	_ECPKParameters_print_fp
PUBLIC	_ECParameters_print
PUBLIC	_EC_KEY_print
PUBLIC	_ECParameters_print_fp
PUBLIC	_EC_KEY_print_fp
PUBLIC	??_C@_0BG@EOKACLHK@?4?2crypto?2ec?2eck_prn?4c?$AA@ ; `string'
PUBLIC	??_C@_0N@JOFLCJFF@ASN1?5OID?3?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BA@LNIECBHN@NIST?5CURVE?3?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BA@KNKNOIFH@Field?5Type?3?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BA@ENMKKION@Basis?5Type?3?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0M@JDIPGLHE@Polynomial?3?$AA@		; `string'
PUBLIC	??_C@_06DBHHIIKM@Prime?3?$AA@			; `string'
PUBLIC	??_C@_05GMFDOKMO@A?3?5?5?5?$AA@			; `string'
PUBLIC	??_C@_05OKMHJIGA@B?3?5?5?5?$AA@			; `string'
PUBLIC	??_C@_07KOGOKIFH@Order?3?5?$AA@			; `string'
PUBLIC	??_C@_0L@IEMHODML@Cofactor?3?5?$AA@		; `string'
PUBLIC	??_C@_05PDHKGGIM@Seed?3?$AA@			; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3?$AA@			; `string'
PUBLIC	??_C@_06LEJCPMLM@?$CF02x?$CFs?$AA@		; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_indent:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_free:PROC
EXTRN	_ASN1_bn_print:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_EVP_PKEY_set1_EC_KEY:PROC
EXTRN	_EVP_PKEY_new:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_PKEY_print_private:PROC
EXTRN	_EVP_PKEY_print_params:PROC
EXTRN	_EC_GROUP_method_of:PROC
EXTRN	_EC_METHOD_get_field_type:PROC
EXTRN	_EC_GROUP_get0_generator:PROC
EXTRN	_EC_GROUP_get_order:PROC
EXTRN	_EC_GROUP_get_cofactor:PROC
EXTRN	_EC_GROUP_get_curve_name:PROC
EXTRN	_EC_GROUP_get_asn1_flag:PROC
EXTRN	_EC_GROUP_get_point_conversion_form:PROC
EXTRN	_EC_GROUP_get0_seed:PROC
EXTRN	_EC_GROUP_get_seed_len:PROC
EXTRN	_EC_GROUP_get_curve_GFp:PROC
EXTRN	_EC_GROUP_get_curve_GF2m:PROC
EXTRN	_EC_curve_nid2nist:PROC
EXTRN	_EC_POINT_point2bn:PROC
EXTRN	_EC_GROUP_get_basis_type:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_06LEJCPMLM@?$CF02x?$CFs?$AA@
CONST	SEGMENT
??_C@_06LEJCPMLM@?$CF02x?$CFs?$AA@ DB '%02x%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3?$AA@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PDHKGGIM@Seed?3?$AA@
CONST	SEGMENT
??_C@_05PDHKGGIM@Seed?3?$AA@ DB 'Seed:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IEMHODML@Cofactor?3?5?$AA@
CONST	SEGMENT
??_C@_0L@IEMHODML@Cofactor?3?5?$AA@ DB 'Cofactor: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KOGOKIFH@Order?3?5?$AA@
CONST	SEGMENT
??_C@_07KOGOKIFH@Order?3?5?$AA@ DB 'Order: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OKMHJIGA@B?3?5?5?5?$AA@
CONST	SEGMENT
??_C@_05OKMHJIGA@B?3?5?5?5?$AA@ DB 'B:   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GMFDOKMO@A?3?5?5?5?$AA@
CONST	SEGMENT
??_C@_05GMFDOKMO@A?3?5?5?5?$AA@ DB 'A:   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DBHHIIKM@Prime?3?$AA@
CONST	SEGMENT
??_C@_06DBHHIIKM@Prime?3?$AA@ DB 'Prime:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JDIPGLHE@Polynomial?3?$AA@
CONST	SEGMENT
??_C@_0M@JDIPGLHE@Polynomial?3?$AA@ DB 'Polynomial:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ENMKKION@Basis?5Type?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BA@ENMKKION@Basis?5Type?3?5?$CFs?6?$AA@ DB 'Basis Type: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KNKNOIFH@Field?5Type?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BA@KNKNOIFH@Field?5Type?3?5?$CFs?6?$AA@ DB 'Field Type: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LNIECBHN@NIST?5CURVE?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BA@LNIECBHN@NIST?5CURVE?3?5?$CFs?6?$AA@ DB 'NIST CURVE: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JOFLCJFF@ASN1?5OID?3?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0N@JOFLCJFF@ASN1?5OID?3?5?$CFs?$AA@ DB 'ASN1 OID: %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EOKACLHK@?4?2crypto?2ec?2eck_prn?4c?$AA@
CONST	SEGMENT
??_C@_0BG@EOKACLHK@?4?2crypto?2ec?2eck_prn?4c?$AA@ DB '.\crypto\ec\eck_pr'
	DB	'n.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_bin
_TEXT	SEGMENT
_buf$GSCopy$1$ = -140					; size = 4
tv183 = -136						; size = 4
_str$ = -132						; size = 128
__$ArrayPad$ = -4					; size = 4
_fp$ = 8						; size = 4
_name$ = 12						; size = 4
_buf$ = 16						; size = 4
_len$ = 20						; size = 4
_off$ = 24						; size = 4
_print_bin PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\eck_prn.c
; Line 343
	mov	eax, 140				; 0000008cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+140], eax
	mov	eax, DWORD PTR _buf$[esp+136]
	mov	DWORD PTR _buf$GSCopy$1$[esp+140], eax
	push	ebx
	mov	ebx, DWORD PTR _fp$[esp+140]
	push	ebp
	mov	ebp, DWORD PTR _len$[esp+144]
	push	esi
	mov	esi, DWORD PTR _name$[esp+148]
; Line 347
	test	eax, eax
	jne	SHORT $LN5@print_bin
; Line 348
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 377
	mov	ecx, DWORD PTR __$ArrayPad$[esp+140]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 140				; 0000008cH
	ret	0
$LN5@print_bin:
	push	edi
; Line 349
	mov	edi, DWORD PTR _off$[esp+152]
	test	edi, edi
	jle	SHORT $LN6@print_bin
; Line 350
	mov	eax, 128				; 00000080H
	cmp	edi, eax
	cmovg	edi, eax
; Line 352
	lea	eax, DWORD PTR _str$[esp+156]
	push	edi
	push	32					; 00000020H
	push	eax
	call	_memset
; Line 353
	push	edi
	lea	eax, DWORD PTR _str$[esp+172]
	push	eax
	push	ebx
	call	_BIO_write
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN7@print_bin
$LN18@print_bin:
; Line 354
	xor	eax, eax
	jmp	$LN23@print_bin
$LN6@print_bin:
; Line 356
	xor	edi, edi
$LN7@print_bin:
; Line 359
	push	esi
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	ebx
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN18@print_bin
; Line 362
	xor	esi, esi
	test	ebp, ebp
	je	$LN3@print_bin
	mov	eax, 1
	sub	eax, DWORD PTR _buf$GSCopy$1$[esp+156]
	mov	DWORD PTR tv183[esp+156], eax
$LL4@print_bin:
; Line 363
	mov	eax, -2004318071			; 88888889H
	mul	esi
	mov	eax, esi
	shr	edx, 3
	mov	ecx, edx
	shl	ecx, 4
	sub	ecx, edx
	sub	eax, ecx
	jne	SHORT $LN12@print_bin
; Line 365
	lea	eax, DWORD PTR [edi+4]
	mov	BYTE PTR _str$[esp+156], 10		; 0000000aH
	push	eax
	lea	eax, DWORD PTR _str$[esp+161]
	push	32					; 00000020H
	push	eax
	call	_memset
; Line 366
	lea	eax, DWORD PTR [edi+5]
	push	eax
	lea	eax, DWORD PTR _str$[esp+172]
	push	eax
	push	ebx
	call	_BIO_write
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN18@print_bin
$LN12@print_bin:
; Line 369
	mov	edx, DWORD PTR _buf$GSCopy$1$[esp+156]
	mov	ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR tv183[esp+156]
	add	edx, esi
	add	eax, edx
	cmp	eax, ebp
	mov	eax, OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	cmovne	ecx, eax
	movzx	eax, BYTE PTR [edx]
	push	ecx
	push	eax
	push	OFFSET ??_C@_06LEJCPMLM@?$CF02x?$CFs?$AA@
	push	ebx
	call	_BIO_printf
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	$LN18@print_bin
; Line 362
	inc	esi
	cmp	esi, ebp
	jb	SHORT $LL4@print_bin
$LN3@print_bin:
; Line 373
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	ebx
	call	_BIO_write
	xor	ecx, ecx
	add	esp, 12					; 0000000cH
	test	eax, eax
	setg	cl
	mov	eax, ecx
$LN23@print_bin:
; Line 377
	mov	ecx, DWORD PTR __$ArrayPad$[esp+156]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 140				; 0000008cH
	ret	0
_print_bin ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_print_fp
_TEXT	SEGMENT
_fp$ = 8						; size = 4
_x$ = 12						; size = 4
_off$ = 16						; size = 4
_EC_KEY_print_fp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\eck_prn.c
; Line 87
	push	esi
; Line 91
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN2@EC_KEY_pri
; Line 92
	push	92					; 0000005cH
	push	OFFSET ??_C@_0BG@EOKACLHK@?4?2crypto?2ec?2eck_prn?4c?$AA@
	push	32					; 00000020H
	push	181					; 000000b5H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 93
	xor	eax, eax
	pop	esi
; Line 99
	ret	0
$LN2@EC_KEY_pri:
	push	ebx
	push	edi
; Line 95
	push	DWORD PTR _fp$[esp+8]
	push	0
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 121
	call	_EVP_PKEY_new
	mov	edi, eax
; Line 122
	test	edi, edi
	je	SHORT $LN6@EC_KEY_pri
	push	DWORD PTR _x$[esp+8]
	push	edi
	call	_EVP_PKEY_set1_EC_KEY
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@EC_KEY_pri
; Line 124
	push	0
	push	DWORD PTR _off$[esp+12]
	push	edi
	push	esi
	call	_EVP_PKEY_print_private
; Line 125
	push	edi
	mov	ebx, eax
	call	_EVP_PKEY_free
	add	esp, 20					; 00000014H
; Line 97
	push	esi
	call	_BIO_free
	add	esp, 4
; Line 98
	mov	eax, ebx
	pop	edi
	pop	ebx
	pop	esi
; Line 99
	ret	0
$LN6@EC_KEY_pri:
; Line 97
	push	esi
; Line 123
	xor	ebx, ebx
; Line 97
	call	_BIO_free
	add	esp, 4
; Line 98
	mov	eax, ebx
	pop	edi
	pop	ebx
	pop	esi
; Line 99
	ret	0
_EC_KEY_print_fp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECParameters_print_fp
_TEXT	SEGMENT
_fp$ = 8						; size = 4
_x$ = 12						; size = 4
_ECParameters_print_fp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\eck_prn.c
; Line 102
	push	esi
; Line 106
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN2@ECParamete
; Line 107
	push	107					; 0000006bH
	push	OFFSET ??_C@_0BG@EOKACLHK@?4?2crypto?2ec?2eck_prn?4c?$AA@
	push	32					; 00000020H
	push	148					; 00000094H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 108
	xor	eax, eax
	pop	esi
; Line 114
	ret	0
$LN2@ECParamete:
	push	ebx
	push	edi
; Line 110
	push	DWORD PTR _fp$[esp+8]
	push	0
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 133
	call	_EVP_PKEY_new
	mov	edi, eax
; Line 134
	test	edi, edi
	je	SHORT $LN6@ECParamete
	push	DWORD PTR _x$[esp+8]
	push	edi
	call	_EVP_PKEY_set1_EC_KEY
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@ECParamete
; Line 136
	push	0
	push	4
	push	edi
	push	esi
	call	_EVP_PKEY_print_params
; Line 137
	push	edi
	mov	ebx, eax
	call	_EVP_PKEY_free
	add	esp, 20					; 00000014H
; Line 112
	push	esi
	call	_BIO_free
	add	esp, 4
; Line 113
	mov	eax, ebx
	pop	edi
	pop	ebx
	pop	esi
; Line 114
	ret	0
$LN6@ECParamete:
; Line 112
	push	esi
; Line 135
	xor	ebx, ebx
; Line 112
	call	_BIO_free
	add	esp, 4
; Line 113
	mov	eax, ebx
	pop	edi
	pop	ebx
	pop	esi
; Line 114
	ret	0
_ECParameters_print_fp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_KEY_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_x$ = 12						; size = 4
_off$ = 16						; size = 4
_EC_KEY_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\eck_prn.c
; Line 118
	push	edi
; Line 121
	call	_EVP_PKEY_new
	mov	edi, eax
; Line 122
	test	edi, edi
	je	SHORT $LN3@EC_KEY_pri
	push	DWORD PTR _x$[esp]
	push	edi
	call	_EVP_PKEY_set1_EC_KEY
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@EC_KEY_pri
; Line 124
	push	esi
	push	0
	push	DWORD PTR _off$[esp+8]
	push	edi
	push	DWORD PTR _bp$[esp+16]
	call	_EVP_PKEY_print_private
; Line 125
	push	edi
	mov	esi, eax
	call	_EVP_PKEY_free
	add	esp, 20					; 00000014H
; Line 126
	mov	eax, esi
	pop	esi
	pop	edi
; Line 127
	ret	0
$LN3@EC_KEY_pri:
; Line 123
	xor	eax, eax
	pop	edi
; Line 127
	ret	0
_EC_KEY_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECParameters_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_x$ = 12						; size = 4
_ECParameters_print PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\eck_prn.c
; Line 130
	push	edi
; Line 133
	call	_EVP_PKEY_new
	mov	edi, eax
; Line 134
	test	edi, edi
	je	SHORT $LN3@ECParamete
	push	DWORD PTR _x$[esp]
	push	edi
	call	_EVP_PKEY_set1_EC_KEY
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@ECParamete
; Line 136
	push	esi
	push	0
	push	4
	push	edi
	push	DWORD PTR _bp$[esp+16]
	call	_EVP_PKEY_print_params
; Line 137
	push	edi
	mov	esi, eax
	call	_EVP_PKEY_free
	add	esp, 20					; 00000014H
; Line 138
	mov	eax, esi
	pop	esi
	pop	edi
; Line 139
	ret	0
$LN3@ECParamete:
; Line 135
	xor	eax, eax
	pop	edi
; Line 139
	ret	0
_ECParameters_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECPKParameters_print_fp
_TEXT	SEGMENT
_fp$ = 8						; size = 4
_x$ = 12						; size = 4
_off$ = 16						; size = 4
_ECPKParameters_print_fp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\eck_prn.c
; Line 72
	push	edi
; Line 76
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN2@ECPKParame
; Line 77
	push	77					; 0000004dH
	push	OFFSET ??_C@_0BG@EOKACLHK@?4?2crypto?2ec?2eck_prn?4c?$AA@
	push	7
	push	150					; 00000096H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 78
	xor	eax, eax
	pop	edi
; Line 84
	ret	0
$LN2@ECPKParame:
	push	esi
; Line 80
	push	DWORD PTR _fp$[esp+4]
	push	0
	push	106					; 0000006aH
	push	edi
	call	_BIO_ctrl
; Line 81
	push	DWORD PTR _off$[esp+20]
	push	DWORD PTR _x$[esp+24]
	push	edi
	call	_ECPKParameters_print
; Line 82
	push	edi
	mov	esi, eax
	call	_BIO_free
	add	esp, 32					; 00000020H
; Line 83
	mov	eax, esi
	pop	esi
	pop	edi
; Line 84
	ret	0
_ECPKParameters_print_fp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECPKParameters_print
_TEXT	SEGMENT
_p$1$ = -48						; size = 4
_a$1$ = -44						; size = 4
_b$1$ = -40						; size = 4
_gen$1$ = -36						; size = 4
_order$1$ = -32						; size = 4
_cofactor$1$ = -28					; size = 4
_ret$1$ = -24						; size = 4
_is_char_two$2$ = -20					; size = 4
_seed_len$1$ = -16					; size = 4
_seed$1$ = -12						; size = 4
_point$1$ = -12						; size = 4
_tmp_nid$1$ = -8					; size = 4
_form$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_nname$1$ = 12						; size = 4
_nid$1$ = 12						; size = 4
_ctx$1$ = 12						; size = 4
_x$ = 12						; size = 4
_off$ = 16						; size = 4
_ECPKParameters_print PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\eck_prn.c
; Line 145
	mov	eax, 48					; 00000030H
	call	__chkstk
	push	ebx
	push	ebp
; Line 146
	xor	ebx, ebx
; Line 151
	xor	ebp, ebp
	push	esi
	push	edi
; Line 160
	mov	edi, DWORD PTR _x$[esp+60]
	xor	esi, esi
	mov	DWORD PTR _ret$1$[esp+64], ebx
	mov	DWORD PTR _a$1$[esp+64], ebx
	mov	DWORD PTR _b$1$[esp+64], ebx
	mov	DWORD PTR _gen$1$[esp+64], ebx
	mov	DWORD PTR _order$1$[esp+64], ebx
	mov	DWORD PTR _cofactor$1$[esp+64], ebx
	mov	DWORD PTR _seed_len$1$[esp+64], ebx
	test	edi, edi
	jne	SHORT $LN2@ECPKParame
; Line 161
	lea	eax, DWORD PTR [ebx+67]
; Line 162
	jmp	$LN91@ECPKParame
$LN2@ECPKParame:
; Line 165
	call	_BN_CTX_new
	mov	esi, eax
	mov	DWORD PTR _ctx$1$[esp+60], esi
; Line 166
	test	esi, esi
	jne	SHORT $LN3@ECPKParame
; Line 167
	lea	eax, DWORD PTR [esi+65]
; Line 168
	jmp	$LN91@ECPKParame
$LN3@ECPKParame:
; Line 171
	push	edi
	call	_EC_GROUP_get_asn1_flag
	add	esp, 4
	test	eax, eax
	je	$LN4@ECPKParame
; Line 176
	push	128					; 00000080H
	push	DWORD PTR _off$[esp+64]
	push	DWORD PTR _bp$[esp+68]
	call	_BIO_indent
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN84@ECPKParame
; Line 179
	push	edi
	call	_EC_GROUP_get_curve_name
	add	esp, 4
	mov	DWORD PTR _nid$1$[esp+60], eax
; Line 180
	test	eax, eax
	je	$LN83@ECPKParame
; Line 183
	push	eax
	call	_OBJ_nid2sn
	mov	edi, DWORD PTR _bp$[esp+64]
	push	eax
	push	OFFSET ??_C@_0N@JOFLCJFF@ASN1?5OID?3?5?$CFs?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	$LN84@ECPKParame
; Line 185
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
	test	eax, eax
	jle	$LN84@ECPKParame
; Line 187
	push	DWORD PTR _nid$1$[esp+60]
	call	_EC_curve_nid2nist
	add	esp, 4
	mov	DWORD PTR _nname$1$[esp+60], eax
; Line 188
	test	eax, eax
	je	$LN86@ECPKParame
; Line 189
	push	128					; 00000080H
	push	DWORD PTR _off$[esp+64]
	push	edi
	call	_BIO_indent
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN84@ECPKParame
; Line 191
	push	DWORD PTR _nname$1$[esp+60]
	push	OFFSET ??_C@_0BA@LNIECBHN@NIST?5CURVE?3?5?$CFs?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 194
	xor	edi, edi
	test	eax, eax
	jle	$LN79@ECPKParame
; Line 318
	mov	DWORD PTR _ret$1$[esp+64], 1
	jmp	$LN52@ECPKParame
$LN4@ECPKParame:
; Line 198
	push	edi
	xor	ebp, ebp
	call	_EC_GROUP_method_of
	push	eax
	call	_EC_METHOD_get_field_type
	add	esp, 8
	mov	DWORD PTR _tmp_nid$1$[esp+64], eax
; Line 200
	cmp	eax, 407				; 00000197H
	mov	ecx, 1
	cmove	ebp, ecx
	mov	DWORD PTR _is_char_two$2$[esp+64], ebp
; Line 204
	call	_BN_new
	mov	ebp, eax
	mov	DWORD PTR _p$1$[esp+64], ebp
	test	ebp, ebp
	je	$LN15@ECPKParame
	call	_BN_new
	mov	esi, eax
	mov	DWORD PTR _a$1$[esp+64], esi
	test	esi, esi
	je	$LN90@ECPKParame
	call	_BN_new
	mov	DWORD PTR _b$1$[esp+64], eax
	test	eax, eax
	je	$LN90@ECPKParame
	call	_BN_new
	mov	DWORD PTR _order$1$[esp+64], eax
	test	eax, eax
	je	$LN90@ECPKParame
	call	_BN_new
	mov	DWORD PTR _cofactor$1$[esp+64], eax
	test	eax, eax
	je	$LN90@ECPKParame
; Line 211
	push	DWORD PTR _ctx$1$[esp+60]
	push	DWORD PTR _b$1$[esp+68]
	push	esi
	push	ebp
	push	edi
	cmp	DWORD PTR _is_char_two$2$[esp+84], ebx
	je	SHORT $LN16@ECPKParame
	call	_EC_GROUP_get_curve_GF2m
$LN92@ECPKParame:
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN19@ECPKParame
$LN93@ECPKParame:
; Line 213
	mov	edi, esi
	mov	eax, 16					; 00000010H
	mov	esi, DWORD PTR _ctx$1$[esp+60]
	jmp	$LN62@ECPKParame
$LN16@ECPKParame:
; Line 218
	call	_EC_GROUP_get_curve_GFp
; Line 220
	jmp	SHORT $LN92@ECPKParame
$LN19@ECPKParame:
; Line 224
	push	edi
	call	_EC_GROUP_get0_generator
	add	esp, 4
	mov	DWORD PTR _point$1$[esp+64], eax
	test	eax, eax
	je	SHORT $LN93@ECPKParame
; Line 228
	push	0
	push	DWORD PTR _order$1$[esp+68]
	push	edi
	call	_EC_GROUP_get_order
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN93@ECPKParame
	push	0
	push	DWORD PTR _cofactor$1$[esp+68]
	push	edi
	call	_EC_GROUP_get_cofactor
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN93@ECPKParame
; Line 234
	push	edi
	call	_EC_GROUP_get_point_conversion_form
; Line 236
	push	DWORD PTR _ctx$1$[esp+64]
	mov	DWORD PTR _form$1$[esp+72], eax
	push	0
	push	eax
	push	DWORD PTR _point$1$[esp+80]
	push	edi
	call	_EC_POINT_point2bn
	add	esp, 24					; 00000018H
	mov	DWORD PTR _gen$1$[esp+64], eax
	test	eax, eax
	je	SHORT $LN93@ECPKParame
; Line 241
	push	ebp
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
; Line 242
	push	esi
	lea	ebx, DWORD PTR [edx+eax]
	sar	ebx, 3
	call	_BN_num_bits
; Line 244
	push	DWORD PTR _b$1$[esp+72]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	ebx, eax
	cmovb	ebx, eax
	call	_BN_num_bits
; Line 246
	push	DWORD PTR _gen$1$[esp+76]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	ebx, eax
	cmovb	ebx, eax
	call	_BN_num_bits
; Line 248
	push	DWORD PTR _order$1$[esp+80]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	ebx, eax
	cmovb	ebx, eax
	call	_BN_num_bits
; Line 250
	push	DWORD PTR _cofactor$1$[esp+84]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	ebx, eax
	cmovb	ebx, eax
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	ebx, eax
; Line 253
	push	edi
	cmovb	ebx, eax
	call	_EC_GROUP_get0_seed
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _seed$1$[esp+64], eax
	test	eax, eax
	je	SHORT $LN29@ECPKParame
; Line 254
	push	edi
	call	_EC_GROUP_get_seed_len
	add	esp, 4
	mov	DWORD PTR _seed_len$1$[esp+64], eax
$LN29@ECPKParame:
; Line 257
	push	257					; 00000101H
	lea	eax, DWORD PTR [ebx+10]
	push	OFFSET ??_C@_0BG@EOKACLHK@?4?2crypto?2ec?2eck_prn?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jne	SHORT $LN30@ECPKParame
; Line 258
	mov	edi, esi
	lea	eax, DWORD PTR [ebx+65]
	mov	esi, DWORD PTR _ctx$1$[esp+60]
	jmp	$LN62@ECPKParame
$LN30@ECPKParame:
; Line 262
	mov	ebp, DWORD PTR _off$[esp+60]
	mov	esi, DWORD PTR _bp$[esp+60]
	push	128					; 00000080H
	push	ebp
	push	esi
	call	_BIO_indent
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN78@ECPKParame
; Line 267
	push	DWORD PTR _tmp_nid$1$[esp+64]
	call	_OBJ_nid2sn
	push	eax
	push	OFFSET ??_C@_0BA@KNKNOIFH@Field?5Type?3?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	$LN72@ECPKParame
; Line 270
	cmp	DWORD PTR _is_char_two$2$[esp+64], 0
	je	SHORT $LN33@ECPKParame
; Line 272
	push	edi
	call	_EC_GROUP_get_basis_type
	mov	edi, eax
	add	esp, 4
; Line 273
	test	edi, edi
	je	$LN72@ECPKParame
; Line 276
	push	128					; 00000080H
	push	ebp
	push	esi
	call	_BIO_indent
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN72@ECPKParame
; Line 280
	push	edi
	call	_OBJ_nid2sn
	push	eax
	push	OFFSET ??_C@_0BA@ENMKKION@Basis?5Type?3?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	$LN72@ECPKParame
; Line 284
	push	ebp
	push	ebx
	push	DWORD PTR _p$1$[esp+72]
	push	OFFSET ??_C@_0M@JDIPGLHE@Polynomial?3?$AA@
; Line 287
	jmp	SHORT $LN97@ECPKParame
$LN33@ECPKParame:
; Line 288
	push	ebp
	push	ebx
	push	DWORD PTR _p$1$[esp+72]
	push	OFFSET ??_C@_06DBHHIIKM@Prime?3?$AA@
$LN97@ECPKParame:
	push	esi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN72@ECPKParame
; Line 291
	mov	edi, DWORD PTR _a$1$[esp+64]
	push	ebp
	push	ebx
	push	edi
	push	OFFSET ??_C@_05GMFDOKMO@A?3?5?5?5?$AA@
	push	esi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN65@ECPKParame
; Line 293
	push	ebp
	push	ebx
	push	DWORD PTR _b$1$[esp+72]
	push	OFFSET ??_C@_05OKMHJIGA@B?3?5?5?5?$AA@
	push	esi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN65@ECPKParame
; Line 295
	mov	eax, DWORD PTR _form$1$[esp+64]
; Line 296
	push	ebp
	push	ebx
	push	DWORD PTR _gen$1$[esp+72]
	cmp	eax, 2
	jne	SHORT $LN42@ECPKParame
	push	DWORD PTR ?gen_compressed@?1??ECPKParameters_print@@9@9
; Line 299
	jmp	SHORT $LN99@ECPKParame
$LN42@ECPKParame:
	cmp	eax, 4
	jne	SHORT $LN45@ECPKParame
; Line 300
	push	DWORD PTR ?gen_uncompressed@?1??ECPKParameters_print@@9@9
; Line 303
	jmp	SHORT $LN99@ECPKParame
$LN45@ECPKParame:
; Line 305
	push	DWORD PTR ?gen_hybrid@?1??ECPKParameters_print@@9@9
$LN99@ECPKParame:
	push	esi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN65@ECPKParame
; Line 309
	push	ebp
	push	ebx
	push	DWORD PTR _order$1$[esp+72]
	push	OFFSET ??_C@_07KOGOKIFH@Order?3?5?$AA@
	push	esi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN65@ECPKParame
; Line 312
	push	ebp
	push	ebx
	push	DWORD PTR _cofactor$1$[esp+72]
	push	OFFSET ??_C@_0L@IEMHODML@Cofactor?3?5?$AA@
	push	esi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN65@ECPKParame
; Line 315
	mov	eax, DWORD PTR _seed$1$[esp+64]
	test	eax, eax
	je	SHORT $LN85@ECPKParame
	push	ebp
	push	DWORD PTR _seed_len$1$[esp+68]
	push	eax
	push	OFFSET ??_C@_05PDHKGGIM@Seed?3?$AA@
	push	esi
	call	_print_bin
	mov	ebp, DWORD PTR _p$1$[esp+84]
	add	esp, 20					; 00000014H
	mov	esi, DWORD PTR _ctx$1$[esp+60]
	test	eax, eax
	je	SHORT $LN79@ECPKParame
; Line 318
	mov	DWORD PTR _ret$1$[esp+64], 1
	jmp	$LN52@ECPKParame
$LN85@ECPKParame:
	mov	ebp, DWORD PTR _p$1$[esp+64]
	mov	esi, DWORD PTR _ctx$1$[esp+60]
	mov	DWORD PTR _ret$1$[esp+64], 1
	jmp	SHORT $LN52@ECPKParame
$LN86@ECPKParame:
	xor	edi, edi
	mov	DWORD PTR _ret$1$[esp+64], 1
	jmp	SHORT $LN52@ECPKParame
$LN90@ECPKParame:
	mov	esi, DWORD PTR _ctx$1$[esp+60]
$LN15@ECPKParame:
; Line 206
	mov	edi, DWORD PTR _a$1$[esp+64]
	mov	eax, 65					; 00000041H
	jmp	SHORT $LN62@ECPKParame
$LN65@ECPKParame:
	mov	ebp, DWORD PTR _p$1$[esp+64]
	mov	eax, 32					; 00000020H
; Line 213
	mov	esi, DWORD PTR _ctx$1$[esp+60]
	jmp	SHORT $LN62@ECPKParame
$LN72@ECPKParame:
	mov	ebp, DWORD PTR _p$1$[esp+64]
	mov	eax, 32					; 00000020H
	mov	edi, DWORD PTR _a$1$[esp+64]
	mov	esi, DWORD PTR _ctx$1$[esp+60]
	jmp	SHORT $LN62@ECPKParame
$LN78@ECPKParame:
	mov	ebp, DWORD PTR _p$1$[esp+64]
	mov	eax, 32					; 00000020H
	mov	edi, DWORD PTR _a$1$[esp+64]
	mov	esi, DWORD PTR _ctx$1$[esp+60]
	jmp	SHORT $LN62@ECPKParame
$LN83@ECPKParame:
	xor	edi, edi
$LN79@ECPKParame:
	mov	eax, 32					; 00000020H
	jmp	SHORT $LN62@ECPKParame
$LN84@ECPKParame:
	mov	eax, 32					; 00000020H
$LN91@ECPKParame:
	xor	edi, edi
$LN62@ECPKParame:
; Line 321
	push	321					; 00000141H
	push	OFFSET ??_C@_0BG@EOKACLHK@?4?2crypto?2ec?2eck_prn?4c?$AA@
	push	eax
	push	149					; 00000095H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN52@ECPKParame:
; Line 322
	test	ebp, ebp
	je	SHORT $LN53@ECPKParame
; Line 323
	push	ebp
	call	_BN_free
	add	esp, 4
$LN53@ECPKParame:
; Line 324
	test	edi, edi
	je	SHORT $LN54@ECPKParame
; Line 325
	push	edi
	call	_BN_free
	add	esp, 4
$LN54@ECPKParame:
; Line 326
	mov	eax, DWORD PTR _b$1$[esp+64]
	test	eax, eax
	je	SHORT $LN55@ECPKParame
; Line 327
	push	eax
	call	_BN_free
	add	esp, 4
$LN55@ECPKParame:
; Line 328
	mov	eax, DWORD PTR _gen$1$[esp+64]
	test	eax, eax
	je	SHORT $LN56@ECPKParame
; Line 329
	push	eax
	call	_BN_free
	add	esp, 4
$LN56@ECPKParame:
; Line 330
	mov	eax, DWORD PTR _order$1$[esp+64]
	test	eax, eax
	je	SHORT $LN57@ECPKParame
; Line 331
	push	eax
	call	_BN_free
	add	esp, 4
$LN57@ECPKParame:
; Line 332
	mov	eax, DWORD PTR _cofactor$1$[esp+64]
	test	eax, eax
	je	SHORT $LN58@ECPKParame
; Line 333
	push	eax
	call	_BN_free
	add	esp, 4
$LN58@ECPKParame:
; Line 334
	test	esi, esi
	je	SHORT $LN59@ECPKParame
; Line 335
	push	esi
	call	_BN_CTX_free
	add	esp, 4
$LN59@ECPKParame:
; Line 336
	test	ebx, ebx
	je	SHORT $LN63@ECPKParame
; Line 337
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
$LN63@ECPKParame:
; Line 338
	mov	eax, DWORD PTR _ret$1$[esp+64]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 339
	add	esp, 48					; 00000030H
	ret	0
_ECPKParameters_print ENDP
_TEXT	ENDS
END

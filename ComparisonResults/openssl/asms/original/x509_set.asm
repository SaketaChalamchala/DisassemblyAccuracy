; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_set.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_X509_set_version
PUBLIC	_X509_set_serialNumber
PUBLIC	_X509_set_issuer_name
PUBLIC	_X509_set_subject_name
PUBLIC	_X509_set_notBefore
PUBLIC	_X509_set_notAfter
PUBLIC	_X509_set_pubkey
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_dup:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_INTEGER_set:PROC
EXTRN	_X509_PUBKEY_set:PROC
EXTRN	_X509_NAME_set:PROC
; Function compile flags: /Ogtpy
;	COMDAT _X509_set_pubkey
_TEXT	SEGMENT
_x$ = 8							; size = 4
_pkey$ = 12						; size = 4
_X509_set_pubkey PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_set.c
; Line 149
	mov	eax, DWORD PTR _x$[esp-4]
	test	eax, eax
	je	SHORT $LN3@X509_set_p
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@X509_set_p
; Line 151
	add	eax, 24					; 00000018H
	mov	DWORD PTR _x$[esp-4], eax
	jmp	_X509_PUBKEY_set
$LN3@X509_set_p:
; Line 150
	xor	eax, eax
; Line 152
	ret	0
_X509_set_pubkey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_set_notAfter
_TEXT	SEGMENT
_x$ = 8							; size = 4
_tm$ = 12						; size = 4
_X509_set_notAfter PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_set.c
; Line 131
	push	esi
	push	edi
; Line 134
	mov	edi, DWORD PTR _x$[esp+4]
	test	edi, edi
	je	SHORT $LN3@X509_set_n
	mov	eax, DWORD PTR [edi]
	mov	esi, DWORD PTR [eax+16]
	test	esi, esi
	je	SHORT $LN3@X509_set_n
; Line 136
	mov	esi, DWORD PTR [esi+4]
; Line 137
	mov	eax, DWORD PTR _tm$[esp+4]
	cmp	esi, eax
	je	SHORT $LN5@X509_set_n
; Line 138
	push	eax
	call	_ASN1_STRING_dup
	mov	esi, eax
	add	esp, 4
; Line 139
	test	esi, esi
	je	SHORT $LN5@X509_set_n
; Line 140
	mov	ecx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+16]
	push	DWORD PTR [ecx+4]
	call	_ASN1_STRING_free
; Line 141
	mov	eax, DWORD PTR [edi]
	add	esp, 4
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR [eax+4], esi
$LN5@X509_set_n:
; Line 144
	xor	eax, eax
	test	esi, esi
	pop	edi
	setne	al
	pop	esi
; Line 145
	ret	0
$LN3@X509_set_n:
	pop	edi
; Line 135
	xor	eax, eax
	pop	esi
; Line 145
	ret	0
_X509_set_notAfter ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_set_notBefore
_TEXT	SEGMENT
_x$ = 8							; size = 4
_tm$ = 12						; size = 4
_X509_set_notBefore PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_set.c
; Line 114
	push	esi
	push	edi
; Line 117
	mov	edi, DWORD PTR _x$[esp+4]
	test	edi, edi
	je	SHORT $LN3@X509_set_n
	mov	eax, DWORD PTR [edi]
	mov	esi, DWORD PTR [eax+16]
	test	esi, esi
	je	SHORT $LN3@X509_set_n
; Line 119
	mov	esi, DWORD PTR [esi]
; Line 120
	mov	eax, DWORD PTR _tm$[esp+4]
	cmp	esi, eax
	je	SHORT $LN5@X509_set_n
; Line 121
	push	eax
	call	_ASN1_STRING_dup
	mov	esi, eax
	add	esp, 4
; Line 122
	test	esi, esi
	je	SHORT $LN5@X509_set_n
; Line 123
	mov	ecx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+16]
	push	DWORD PTR [ecx]
	call	_ASN1_STRING_free
; Line 124
	mov	eax, DWORD PTR [edi]
	add	esp, 4
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR [eax], esi
$LN5@X509_set_n:
; Line 127
	xor	eax, eax
	test	esi, esi
	pop	edi
	setne	al
	pop	esi
; Line 128
	ret	0
$LN3@X509_set_n:
	pop	edi
; Line 118
	xor	eax, eax
	pop	esi
; Line 128
	ret	0
_X509_set_notBefore ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_set_subject_name
_TEXT	SEGMENT
_x$ = 8							; size = 4
_name$ = 12						; size = 4
_X509_set_subject_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_set.c
; Line 108
	mov	eax, DWORD PTR _x$[esp-4]
	test	eax, eax
	je	SHORT $LN3@X509_set_s
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@X509_set_s
; Line 110
	add	eax, 20					; 00000014H
	mov	DWORD PTR _x$[esp-4], eax
	jmp	_X509_NAME_set
$LN3@X509_set_s:
; Line 109
	xor	eax, eax
; Line 111
	ret	0
_X509_set_subject_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_set_issuer_name
_TEXT	SEGMENT
_x$ = 8							; size = 4
_name$ = 12						; size = 4
_X509_set_issuer_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_set.c
; Line 101
	mov	eax, DWORD PTR _x$[esp-4]
	test	eax, eax
	je	SHORT $LN3@X509_set_i
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@X509_set_i
; Line 103
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _x$[esp-4], eax
	jmp	_X509_NAME_set
$LN3@X509_set_i:
; Line 102
	xor	eax, eax
; Line 104
	ret	0
_X509_set_issuer_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_set_serialNumber
_TEXT	SEGMENT
_x$ = 8							; size = 4
_serial$ = 12						; size = 4
_X509_set_serialNumber PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_set.c
; Line 83
	push	edi
; Line 86
	mov	edi, DWORD PTR _x$[esp]
	test	edi, edi
	jne	SHORT $LN2@X509_set_s
; Line 87
	xor	eax, eax
	pop	edi
; Line 97
	ret	0
$LN2@X509_set_s:
; Line 88
	mov	eax, DWORD PTR [edi]
	push	esi
	mov	esi, DWORD PTR [eax+4]
; Line 89
	mov	eax, DWORD PTR _serial$[esp+4]
	cmp	esi, eax
	je	SHORT $LN4@X509_set_s
; Line 90
	push	eax
	call	_ASN1_STRING_dup
	mov	esi, eax
	add	esp, 4
; Line 91
	test	esi, esi
	je	SHORT $LN4@X509_set_s
; Line 92
	mov	ecx, DWORD PTR [edi]
	push	DWORD PTR [ecx+4]
	call	_ASN1_STRING_free
; Line 93
	mov	ecx, DWORD PTR [edi]
	add	esp, 4
	mov	DWORD PTR [ecx+4], esi
$LN4@X509_set_s:
; Line 96
	xor	eax, eax
	test	esi, esi
	pop	esi
	setne	al
	pop	edi
; Line 97
	ret	0
_X509_set_serialNumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_set_version
_TEXT	SEGMENT
_x$ = 8							; size = 4
_version$ = 12						; size = 4
_X509_set_version PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_set.c
; Line 67
	push	esi
; Line 68
	mov	esi, DWORD PTR _x$[esp]
	test	esi, esi
	jne	SHORT $LN2@X509_set_v
$LN7@X509_set_v:
; Line 69
	xor	eax, eax
	pop	esi
; Line 80
	ret	0
$LN2@X509_set_v:
; Line 70
	cmp	DWORD PTR _version$[esp], 0
; Line 71
	mov	eax, DWORD PTR [esi]
	jne	SHORT $LN3@X509_set_v
	push	DWORD PTR [eax]
	call	_ASN1_STRING_free
; Line 72
	mov	eax, DWORD PTR [esi]
	add	esp, 4
	mov	DWORD PTR [eax], 0
; Line 73
	mov	eax, 1
	pop	esi
; Line 80
	ret	0
$LN3@X509_set_v:
; Line 75
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@X509_set_v
; Line 76
	push	2
	call	_ASN1_STRING_type_new
	mov	ecx, DWORD PTR [esi]
	add	esp, 4
	mov	DWORD PTR [ecx], eax
	test	eax, eax
	je	SHORT $LN7@X509_set_v
$LN5@X509_set_v:
; Line 79
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR _version$[esp]
	push	DWORD PTR [eax]
	call	_ASN1_INTEGER_set
	add	esp, 8
	pop	esi
; Line 80
	ret	0
_X509_set_version ENDP
_TEXT	ENDS
END

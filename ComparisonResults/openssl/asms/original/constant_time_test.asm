; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_test_values DD	00H
	DD	01H
	DD	0400H
	DD	03039H
	DD	07d00H
	DD	07ffffffeH
	DD	07fffffffH
	DD	080000000H
	DD	0fffffffeH
	DD	0ffffffffH
_test_values_8 DB 00H
	DB	01H
	DB	02H
	DB	014H
	DB	020H
	DB	07fH
	DB	080H
	DB	081H
	DB	0ffH
	ORG $+3
_signed_test_values DD 00H
	DD	01H
	DD	0ffffffffH
	DD	0400H
	DD	0fffffc00H
	DD	03039H
	DD	0ffffcfc7H
	DD	07d00H
	DD	0ffff8300H
	DD	07fffffffH
	DD	080000000H
	DD	07ffffffeH
	DD	080000001H
_DATA	ENDS
CONST	SEGMENT
_CONSTTIME_TRUE DD 0ffffffffH
_CONSTTIME_FALSE DD 00H
_CONSTTIME_TRUE_8 DB 0ffH
_CONSTTIME_FALSE_8 DB 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_main
PUBLIC	??_C@_0DM@JGGCJLD@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@ ; `string'
PUBLIC	??_C@_0DO@BMJBPPAM@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@ ; `string'
PUBLIC	??_C@_0DK@KNEAHCHB@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@ ; `string'
PUBLIC	??_C@_0DM@IFAMJCKK@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@ ; `string'
PUBLIC	??_C@_0EK@LLHFDNMM@Test?5failed?5for?5constant_time_is@ ; `string'
PUBLIC	??_C@_0EL@HNDHEILH@Test?5failed?5for?5constant_time_is@ ; `string'
PUBLIC	??_C@_0EI@GDHNIBJJ@Test?5failed?5for?5constant_time_is@ ; `string'
PUBLIC	??_C@_0EJ@BKGCNPFP@Test?5failed?5for?5constant_time_is@ ; `string'
PUBLIC	??_C@_0EL@JPMNEGLD@Test?5failed?5for?5constant_time_eq@ ; `string'
PUBLIC	??_C@_0EM@LNKJJMGB@Test?5failed?5for?5constant_time_eq@ ; `string'
PUBLIC	??_C@_0EL@ODMBCLDF@Test?5failed?5for?5constant_time_eq@ ; `string'
PUBLIC	??_C@_0EM@MFICIMDG@Test?5failed?5for?5constant_time_eq@ ; `string'
PUBLIC	??_C@_0CF@KOKPAAHL@Testing?5constant?5time?5operations@ ; `string'
PUBLIC	??_C@_0BB@ELKKOANE@constant_time_lt?$AA@	; `string'
PUBLIC	??_C@_0BD@DFCBHMLP@constant_time_lt_8?$AA@	; `string'
PUBLIC	??_C@_0BB@BECGCMCF@constant_time_ge?$AA@	; `string'
PUBLIC	??_C@_0BD@KKFEHNFE@constant_time_ge_8?$AA@	; `string'
PUBLIC	??_C@_0BB@DJAMCPBO@constant_time_eq?$AA@	; `string'
PUBLIC	??_C@_0BD@POPOOPM@constant_time_eq_8?$AA@	; `string'
PUBLIC	??_C@_0BD@GHOEAFAD@ok?5?$CIran?5?$CFd?5tests?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@DBLBDJNF@?$CFd?5of?5?$CFd?5tests?5failed?$CB?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__chkstk:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0BI@DBLBDJNF@?$CFd?5of?5?$CFd?5tests?5failed?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BI@DBLBDJNF@?$CFd?5of?5?$CFd?5tests?5failed?$CB?6?$AA@ DB '%d of %'
	DB	'd tests failed!', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GHOEAFAD@ok?5?$CIran?5?$CFd?5tests?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BD@GHOEAFAD@ok?5?$CIran?5?$CFd?5tests?$CJ?6?$AA@ DB 'ok (ran %d te'
	DB	'sts)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@POPOOPM@constant_time_eq_8?$AA@
CONST	SEGMENT
??_C@_0BD@POPOOPM@constant_time_eq_8?$AA@ DB 'constant_time_eq_8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DJAMCPBO@constant_time_eq?$AA@
CONST	SEGMENT
??_C@_0BB@DJAMCPBO@constant_time_eq?$AA@ DB 'constant_time_eq', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KKFEHNFE@constant_time_ge_8?$AA@
CONST	SEGMENT
??_C@_0BD@KKFEHNFE@constant_time_ge_8?$AA@ DB 'constant_time_ge_8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BECGCMCF@constant_time_ge?$AA@
CONST	SEGMENT
??_C@_0BB@BECGCMCF@constant_time_ge?$AA@ DB 'constant_time_ge', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DFCBHMLP@constant_time_lt_8?$AA@
CONST	SEGMENT
??_C@_0BD@DFCBHMLP@constant_time_lt_8?$AA@ DB 'constant_time_lt_8', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ELKKOANE@constant_time_lt?$AA@
CONST	SEGMENT
??_C@_0BB@ELKKOANE@constant_time_lt?$AA@ DB 'constant_time_lt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KOKPAAHL@Testing?5constant?5time?5operations@
CONST	SEGMENT
??_C@_0CF@KOKPAAHL@Testing?5constant?5time?5operations@ DB 'Testing const'
	DB	'ant time operations...', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@MFICIMDG@Test?5failed?5for?5constant_time_eq@
CONST	SEGMENT
??_C@_0EM@MFICIMDG@Test?5failed?5for?5constant_time_eq@ DB 'Test failed f'
	DB	'or constant_time_eq_int_8(%d, %d): expected %u(FALSE), got %u'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@ODMBCLDF@Test?5failed?5for?5constant_time_eq@
CONST	SEGMENT
??_C@_0EL@ODMBCLDF@Test?5failed?5for?5constant_time_eq@ DB 'Test failed f'
	DB	'or constant_time_eq_int_8(%d, %d): expected %u(TRUE), got %u', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@LNKJJMGB@Test?5failed?5for?5constant_time_eq@
CONST	SEGMENT
??_C@_0EM@LNKJJMGB@Test?5failed?5for?5constant_time_eq@ DB 'Test failed f'
	DB	'or constant_time_eq_int(%d, %d): expected %du(FALSE), got %du'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@JPMNEGLD@Test?5failed?5for?5constant_time_eq@
CONST	SEGMENT
??_C@_0EL@JPMNEGLD@Test?5failed?5for?5constant_time_eq@ DB 'Test failed f'
	DB	'or constant_time_eq_int(%d, %d): expected %du(TRUE), got %du', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@BKGCNPFP@Test?5failed?5for?5constant_time_is@
CONST	SEGMENT
??_C@_0EJ@BKGCNPFP@Test?5failed?5for?5constant_time_is@ DB 'Test failed f'
	DB	'or constant_time_is_zero(%du): expected %u (FALSE), got %u', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@GDHNIBJJ@Test?5failed?5for?5constant_time_is@
CONST	SEGMENT
??_C@_0EI@GDHNIBJJ@Test?5failed?5for?5constant_time_is@ DB 'Test failed f'
	DB	'or constant_time_is_zero(%du): expected %u (TRUE), got %u', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@HNDHEILH@Test?5failed?5for?5constant_time_is@
CONST	SEGMENT
??_C@_0EL@HNDHEILH@Test?5failed?5for?5constant_time_is@ DB 'Test failed f'
	DB	'or constant_time_is_zero(%du): expected %du (FALSE), got %du', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@LLHFDNMM@Test?5failed?5for?5constant_time_is@
CONST	SEGMENT
??_C@_0EK@LLHFDNMM@Test?5failed?5for?5constant_time_is@ DB 'Test failed f'
	DB	'or constant_time_is_zero(%du): expected %du (TRUE), got %du', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@IFAMJCKK@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
CONST	SEGMENT
??_C@_0DM@IFAMJCKK@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@ DB 'T'
	DB	'est failed for  %s(%du, %du): expected %u (FALSE), got %u', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KNEAHCHB@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
CONST	SEGMENT
??_C@_0DK@KNEAHCHB@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@ DB 'T'
	DB	'est failed for %s(%du, %du): expected %u (TRUE), got %u', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@BMJBPPAM@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
CONST	SEGMENT
??_C@_0DO@BMJBPPAM@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@ DB 'T'
	DB	'est failed for  %s(%du, %du): expected %du (FALSE), got %du', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@JGGCJLD@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
CONST	SEGMENT
??_C@_0DM@JGGCJLD@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@ DB 'T'
	DB	'est failed for %s(%du, %du): expected %du (TRUE), got %du', 0aH
	DB	00H						; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
tv1608 = -45						; size = 1
_num_all$1$ = -44					; size = 4
_a$1$ = -40						; size = 4
tv1535 = -36						; size = 4
tv1544 = -32						; size = 4
tv1609 = -28						; size = 4
_is_true$1$ = -24					; size = 4
_is_true$1$ = -24					; size = 4
_is_true$1$ = -24					; size = 4
_is_true$1$ = -24					; size = 4
tv1592 = -24						; size = 4
_is_true$1$ = -24					; size = 4
_is_true$1$ = -24					; size = 4
tv1595 = -20						; size = 4
tv1593 = -20						; size = 4
_a$1$ = -16						; size = 4
tv1594 = -16						; size = 4
tv1611 = -12						; size = 4
tv1612 = -8						; size = 4
tv1604 = -4						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 227
	mov	eax, 48					; 00000030H
	call	__chkstk
	push	ebx
; Line 232
	mov	ebx, DWORD PTR __imp____acrt_iob_func
	xor	ecx, ecx
	push	ebp
	push	OFFSET ??_C@_0CF@KOKPAAHL@Testing?5constant?5time?5operations@
	push	1
	xor	ebp, ebp
	mov	DWORD PTR _num_all$1$[esp+64], ecx
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 234
	xor	eax, eax
	mov	DWORD PTR tv1594[esp+56], eax
	push	esi
	push	edi
	npad	9
$LL4@main:
; Line 235
	mov	esi, DWORD PTR _test_values[eax]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	mov	eax, esi
	not	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 95
	shr	eax, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	lea	ecx, DWORD PTR [esi-1]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 95
	shr	ecx, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	ecx, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 95
	neg	ecx
; Line 96
	test	esi, esi
	jne	SHORT $LN266@main
	cmp	ecx, -1
	je	SHORT $LN26@main
; Line 97
	push	ecx
	push	-1
	push	esi
	push	OFFSET ??_C@_0EK@LLHFDNMM@Test?5failed?5for?5constant_time_is@
$LN267@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 20					; 00000014H
; Line 99
	mov	edi, 1
	jmp	SHORT $LN23@main
$LN266@main:
; Line 100
	test	ecx, ecx
	je	SHORT $LN26@main
; Line 101
	push	ecx
	push	0
	push	esi
	push	OFFSET ??_C@_0EL@HNDHEILH@Test?5failed?5for?5constant_time_is@
; Line 103
	jmp	SHORT $LN267@main
$LN26@main:
; Line 105
	xor	edi, edi
$LN23@main:
; Line 237
	push	esi
	call	_test_is_zero_8
	add	eax, edi
	add	esp, 4
	add	ebp, eax
	mov	eax, esi
	shr	eax, 31					; 0000001fH
	mov	DWORD PTR tv1609[esp+64], eax
; Line 239
	xor	eax, eax
	add	DWORD PTR _num_all$1$[esp+64], 132	; 00000084H
	mov	DWORD PTR tv1595[esp+64], eax
$LL7@main:
; Line 240
	mov	edi, DWORD PTR _test_values[eax]
; Line 241
	cmp	esi, edi
; Line 62
	mov	edx, edi
; Line 241
	sbb	eax, eax
; Line 62
	xor	edx, esi
; Line 241
	neg	eax
; Line 62
	mov	DWORD PTR _a$1$[esp+64], edx
; Line 241
	mov	DWORD PTR _is_true$1$[esp+64], eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 140
	mov	eax, esi
	sub	eax, edi
; Line 135
	mov	ecx, eax
; Line 140
	mov	DWORD PTR tv1535[esp+64], eax
; Line 135
	xor	ecx, edi
	or	ecx, edx
	xor	ecx, esi
	shr	ecx, 31					; 0000001fH
	mov	DWORD PTR tv1612[esp+64], ecx
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 62
	neg	ecx
; Line 63
	cmp	DWORD PTR _is_true$1$[esp+64], 0
	je	SHORT $LN265@main
	cmp	ecx, -1
	je	SHORT $LN35@main
; Line 64
	push	ecx
	push	-1
	push	edi
	push	esi
	push	OFFSET ??_C@_0BB@ELKKOANE@constant_time_lt?$AA@
	push	OFFSET ??_C@_0DM@JGGCJLD@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN268@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
; Line 66
	mov	eax, DWORD PTR tv1535[esp+92]
	add	esp, 28					; 0000001cH
	mov	ecx, 1
	jmp	SHORT $LN32@main
$LN265@main:
; Line 67
	test	ecx, ecx
	je	SHORT $LN35@main
; Line 68
	push	ecx
	push	0
	push	edi
	push	esi
	push	OFFSET ??_C@_0BB@ELKKOANE@constant_time_lt?$AA@
	push	OFFSET ??_C@_0DO@BMJBPPAM@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 70
	jmp	SHORT $LN268@main
$LN35@main:
; Line 72
	xor	ecx, ecx
$LN32@main:
; Line 241
	add	ebp, ecx
; Line 80
	shr	eax, 31					; 0000001fH
	mov	ecx, edi
	shr	ecx, 31					; 0000001fH
	xor	al, cl
	mov	DWORD PTR tv1611[esp+64], ecx
	mov	dl, cl
	xor	dl, BYTE PTR tv1609[esp+64]
	or	al, dl
	mov	BYTE PTR tv1608[esp+64], dl
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	xor	al, BYTE PTR tv1609[esp+64]
	mov	DWORD PTR tv1535[esp+64], eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 80
	neg	al
; Line 81
	cmp	DWORD PTR _is_true$1$[esp+64], 0
	je	SHORT $LN264@main
	cmp	al, 255					; 000000ffH
	je	SHORT $LN44@main
; Line 82
	movzx	eax, al
	push	eax
	push	255					; 000000ffH
	push	edi
	push	esi
	push	OFFSET ??_C@_0BD@DFCBHMLP@constant_time_lt_8?$AA@
	push	OFFSET ??_C@_0DK@KNEAHCHB@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN269@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 84
	mov	eax, 1
	jmp	SHORT $LN41@main
$LN264@main:
; Line 85
	test	al, al
	je	SHORT $LN44@main
; Line 86
	movzx	eax, al
	push	eax
	push	0
	push	edi
	push	esi
	push	OFFSET ??_C@_0BD@DFCBHMLP@constant_time_lt_8?$AA@
	push	OFFSET ??_C@_0DM@IFAMJCKK@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 88
	jmp	SHORT $LN269@main
$LN44@main:
; Line 90
	xor	eax, eax
$LN41@main:
; Line 243
	add	ebp, eax
; Line 245
	cmp	edi, esi
	sbb	eax, eax
	neg	eax
	mov	DWORD PTR _is_true$1$[esp+64], eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 140
	mov	eax, edi
	sub	eax, esi
; Line 135
	mov	ecx, eax
; Line 140
	mov	DWORD PTR tv1544[esp+64], eax
; Line 135
	xor	ecx, esi
	or	ecx, DWORD PTR _a$1$[esp+64]
	xor	ecx, edi
	shr	ecx, 31					; 0000001fH
	mov	DWORD PTR tv1604[esp+64], ecx
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 62
	neg	ecx
; Line 63
	cmp	DWORD PTR _is_true$1$[esp+64], 0
	je	SHORT $LN263@main
	cmp	ecx, -1
	je	SHORT $LN55@main
; Line 64
	push	ecx
	push	-1
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@DFCBHMLP@constant_time_lt_8?$AA@
	push	OFFSET ??_C@_0DM@JGGCJLD@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN270@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
; Line 66
	mov	eax, DWORD PTR tv1544[esp+92]
	add	esp, 28					; 0000001cH
	mov	ecx, 1
	jmp	SHORT $LN52@main
$LN263@main:
; Line 67
	test	ecx, ecx
	je	SHORT $LN55@main
; Line 68
	push	ecx
	push	0
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@DFCBHMLP@constant_time_lt_8?$AA@
	push	OFFSET ??_C@_0DO@BMJBPPAM@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 70
	jmp	SHORT $LN270@main
$LN55@main:
; Line 72
	xor	ecx, ecx
$LN52@main:
; Line 80
	shr	eax, 31					; 0000001fH
; Line 245
	add	ebp, ecx
; Line 80
	xor	al, BYTE PTR tv1609[esp+64]
	or	al, BYTE PTR tv1608[esp+64]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	xor	al, BYTE PTR tv1611[esp+64]
	mov	DWORD PTR tv1544[esp+64], eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 80
	neg	al
; Line 81
	cmp	DWORD PTR _is_true$1$[esp+64], 0
	je	SHORT $LN262@main
	cmp	al, 255					; 000000ffH
	je	SHORT $LN64@main
; Line 82
	movzx	eax, al
	push	eax
	push	255					; 000000ffH
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@DFCBHMLP@constant_time_lt_8?$AA@
	push	OFFSET ??_C@_0DK@KNEAHCHB@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN271@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 84
	mov	eax, 1
	jmp	SHORT $LN61@main
$LN262@main:
; Line 85
	test	al, al
	je	SHORT $LN64@main
; Line 86
	movzx	eax, al
	push	eax
	push	0
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@DFCBHMLP@constant_time_lt_8?$AA@
	push	OFFSET ??_C@_0DM@IFAMJCKK@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 88
	jmp	SHORT $LN271@main
$LN64@main:
; Line 90
	xor	eax, eax
$LN61@main:
; Line 247
	add	ebp, eax
; Line 249
	cmp	esi, edi
	sbb	eax, eax
	inc	eax
	mov	DWORD PTR _is_true$1$[esp+64], eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 150
	mov	eax, DWORD PTR tv1612[esp+64]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 63
	mov	ecx, DWORD PTR _is_true$1$[esp+64]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 150
	dec	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 63
	test	ecx, ecx
	je	SHORT $LN261@main
	cmp	eax, -1
	je	SHORT $LN75@main
; Line 64
	push	eax
	push	-1
	push	edi
	push	esi
	push	OFFSET ??_C@_0BB@BECGCMCF@constant_time_ge?$AA@
	push	OFFSET ??_C@_0DM@JGGCJLD@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN272@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
; Line 66
	mov	ecx, DWORD PTR _is_true$1$[esp+92]
	add	esp, 28					; 0000001cH
	mov	eax, 1
	jmp	SHORT $LN72@main
$LN261@main:
; Line 67
	test	eax, eax
	je	SHORT $LN75@main
; Line 68
	push	eax
	push	0
	push	edi
	push	esi
	push	OFFSET ??_C@_0BB@BECGCMCF@constant_time_ge?$AA@
	push	OFFSET ??_C@_0DO@BMJBPPAM@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 70
	jmp	SHORT $LN272@main
$LN75@main:
; Line 72
	xor	eax, eax
$LN72@main:
; Line 249
	add	ebp, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 150
	mov	eax, DWORD PTR tv1535[esp+64]
	dec	al
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 81
	test	ecx, ecx
	je	SHORT $LN260@main
	cmp	al, 255					; 000000ffH
	je	SHORT $LN86@main
; Line 82
	movzx	eax, al
	push	eax
	push	255					; 000000ffH
	push	edi
	push	esi
	push	OFFSET ??_C@_0BD@KKFEHNFE@constant_time_ge_8?$AA@
	push	OFFSET ??_C@_0DK@KNEAHCHB@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN273@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 84
	mov	eax, 1
	jmp	SHORT $LN83@main
$LN260@main:
; Line 85
	test	al, al
	je	SHORT $LN86@main
; Line 86
	movzx	eax, al
	push	eax
	push	0
	push	edi
	push	esi
	push	OFFSET ??_C@_0BD@KKFEHNFE@constant_time_ge_8?$AA@
	push	OFFSET ??_C@_0DM@IFAMJCKK@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 88
	jmp	SHORT $LN273@main
$LN86@main:
; Line 90
	xor	eax, eax
$LN83@main:
; Line 251
	add	ebp, eax
; Line 254
	cmp	edi, esi
	sbb	eax, eax
	inc	eax
	mov	DWORD PTR _is_true$1$[esp+64], eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 150
	mov	eax, DWORD PTR tv1604[esp+64]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 63
	mov	ecx, DWORD PTR _is_true$1$[esp+64]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 150
	dec	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 63
	test	ecx, ecx
	je	SHORT $LN259@main
	cmp	eax, -1
	je	SHORT $LN99@main
; Line 64
	push	eax
	push	-1
	push	esi
	push	edi
	push	OFFSET ??_C@_0BB@BECGCMCF@constant_time_ge?$AA@
	push	OFFSET ??_C@_0DM@JGGCJLD@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN274@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
; Line 66
	mov	ecx, DWORD PTR _is_true$1$[esp+92]
	add	esp, 28					; 0000001cH
	mov	eax, 1
	jmp	SHORT $LN96@main
$LN259@main:
; Line 67
	test	eax, eax
	je	SHORT $LN99@main
; Line 68
	push	eax
	push	0
	push	esi
	push	edi
	push	OFFSET ??_C@_0BB@BECGCMCF@constant_time_ge?$AA@
	push	OFFSET ??_C@_0DO@BMJBPPAM@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 70
	jmp	SHORT $LN274@main
$LN99@main:
; Line 72
	xor	eax, eax
$LN96@main:
; Line 254
	add	ebp, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 150
	mov	eax, DWORD PTR tv1544[esp+64]
	dec	al
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 81
	test	ecx, ecx
	je	SHORT $LN258@main
	cmp	al, 255					; 000000ffH
	je	SHORT $LN110@main
; Line 82
	movzx	eax, al
	push	eax
	push	255					; 000000ffH
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@KKFEHNFE@constant_time_ge_8?$AA@
	push	OFFSET ??_C@_0DK@KNEAHCHB@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN275@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 84
	mov	eax, 1
	jmp	SHORT $LN107@main
$LN258@main:
; Line 85
	test	al, al
	je	SHORT $LN110@main
; Line 86
	movzx	eax, al
	push	eax
	push	0
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@KKFEHNFE@constant_time_ge_8?$AA@
	push	OFFSET ??_C@_0DM@IFAMJCKK@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 88
	jmp	SHORT $LN275@main
$LN110@main:
; Line 90
	xor	eax, eax
$LN107@main:
; Line 257
	add	ebp, eax
; Line 260
	xor	eax, eax
	cmp	esi, edi
	sete	al
	mov	DWORD PTR _is_true$1$[esp+64], eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	mov	eax, DWORD PTR _a$1$[esp+64]
	lea	ecx, DWORD PTR [eax-1]
	not	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 62
	shr	ecx, 31					; 0000001fH
	shr	eax, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	ecx, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 62
	neg	ecx
; Line 63
	cmp	DWORD PTR _is_true$1$[esp+64], 0
	je	SHORT $LN257@main
	cmp	ecx, -1
	je	SHORT $LN123@main
; Line 64
	push	ecx
	push	-1
	push	edi
	push	esi
	push	OFFSET ??_C@_0BB@DJAMCPBO@constant_time_eq?$AA@
	push	OFFSET ??_C@_0DM@JGGCJLD@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN276@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 66
	mov	eax, 1
	jmp	SHORT $LN120@main
$LN257@main:
; Line 67
	test	ecx, ecx
	je	SHORT $LN123@main
; Line 68
	push	ecx
	push	0
	push	edi
	push	esi
	push	OFFSET ??_C@_0BB@DJAMCPBO@constant_time_eq?$AA@
	push	OFFSET ??_C@_0DO@BMJBPPAM@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 70
	jmp	SHORT $LN276@main
$LN123@main:
; Line 72
	xor	eax, eax
$LN120@main:
; Line 260
	add	ebp, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	mov	eax, DWORD PTR _a$1$[esp+64]
	lea	ecx, DWORD PTR [eax-1]
	not	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 80
	shr	ecx, 31					; 0000001fH
	shr	eax, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	cl, al
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 80
	neg	cl
; Line 81
	cmp	DWORD PTR _is_true$1$[esp+64], 0
	je	SHORT $LN256@main
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN134@main
; Line 82
	movzx	eax, cl
	push	eax
	push	255					; 000000ffH
	push	edi
	push	esi
	push	OFFSET ??_C@_0BD@POPOOPM@constant_time_eq_8?$AA@
	push	OFFSET ??_C@_0DK@KNEAHCHB@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN277@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 84
	mov	eax, 1
	jmp	SHORT $LN131@main
$LN256@main:
; Line 85
	test	cl, cl
	je	SHORT $LN134@main
; Line 86
	movzx	eax, cl
	push	eax
	push	0
	push	edi
	push	esi
	push	OFFSET ??_C@_0BD@POPOOPM@constant_time_eq_8?$AA@
	push	OFFSET ??_C@_0DM@IFAMJCKK@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 88
	jmp	SHORT $LN277@main
$LN134@main:
; Line 90
	xor	eax, eax
$LN131@main:
; Line 263
	add	ebp, eax
; Line 266
	xor	eax, eax
	cmp	edi, esi
	sete	al
	mov	DWORD PTR _is_true$1$[esp+64], eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	mov	eax, DWORD PTR _a$1$[esp+64]
	lea	ecx, DWORD PTR [eax-1]
	not	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 62
	shr	ecx, 31					; 0000001fH
	shr	eax, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	ecx, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 62
	neg	ecx
; Line 63
	cmp	DWORD PTR _is_true$1$[esp+64], 0
	je	SHORT $LN255@main
	cmp	ecx, -1
	je	SHORT $LN147@main
; Line 64
	push	ecx
	push	-1
	push	esi
	push	edi
	push	OFFSET ??_C@_0BB@DJAMCPBO@constant_time_eq?$AA@
	push	OFFSET ??_C@_0DM@JGGCJLD@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN278@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 66
	mov	eax, 1
	jmp	SHORT $LN144@main
$LN255@main:
; Line 67
	test	ecx, ecx
	je	SHORT $LN147@main
; Line 68
	push	ecx
	push	0
	push	esi
	push	edi
	push	OFFSET ??_C@_0BB@DJAMCPBO@constant_time_eq?$AA@
	push	OFFSET ??_C@_0DO@BMJBPPAM@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 70
	jmp	SHORT $LN278@main
$LN147@main:
; Line 72
	xor	eax, eax
$LN144@main:
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	mov	ecx, DWORD PTR _a$1$[esp+64]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 266
	add	ebp, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	lea	eax, DWORD PTR [ecx-1]
	not	ecx
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 80
	shr	eax, 31					; 0000001fH
	shr	ecx, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	al, cl
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 80
	neg	al
; Line 81
	cmp	DWORD PTR _is_true$1$[esp+64], 0
	je	SHORT $LN254@main
	cmp	al, 255					; 000000ffH
	je	SHORT $LN158@main
; Line 82
	movzx	eax, al
	push	eax
	push	255					; 000000ffH
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@POPOOPM@constant_time_eq_8?$AA@
	push	OFFSET ??_C@_0DK@KNEAHCHB@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
$LN279@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 84
	mov	eax, 1
	jmp	SHORT $LN155@main
$LN254@main:
; Line 85
	test	al, al
	je	SHORT $LN158@main
; Line 86
	movzx	eax, al
	push	eax
	push	0
	push	esi
	push	edi
	push	OFFSET ??_C@_0BD@POPOOPM@constant_time_eq_8?$AA@
	push	OFFSET ??_C@_0DM@IFAMJCKK@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
; Line 88
	jmp	SHORT $LN279@main
$LN158@main:
; Line 90
	xor	eax, eax
$LN155@main:
; Line 269
	add	ebp, eax
	mov	eax, DWORD PTR tv1595[esp+64]
	add	eax, 4
	mov	DWORD PTR tv1595[esp+64], eax
	cmp	eax, 40					; 00000028H
	jb	$LL7@main
; Line 234
	mov	eax, DWORD PTR tv1594[esp+64]
	add	eax, 4
	mov	DWORD PTR tv1594[esp+64], eax
	cmp	eax, 40					; 00000028H
	jb	$LL4@main
; Line 277
	xor	eax, eax
	add	DWORD PTR _num_all$1$[esp+64], 507	; 000001fbH
	mov	DWORD PTR tv1592[esp+64], eax
	npad	11
$LL10@main:
; Line 278
	mov	edi, DWORD PTR _signed_test_values[eax]
; Line 279
	xor	eax, eax
	mov	DWORD PTR tv1593[esp+64], eax
	npad	4
$LL13@main:
; Line 280
	mov	esi, DWORD PTR _signed_test_values[eax]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 170
	mov	edx, esi
	xor	edx, edi
; Line 160
	mov	eax, edx
; Line 170
	mov	DWORD PTR _a$1$[esp+64], edx
; Line 160
	not	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 182
	shr	eax, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	lea	ecx, DWORD PTR [edx-1]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 182
	shr	ecx, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	ecx, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 182
	neg	ecx
; Line 183
	cmp	edi, esi
	jne	SHORT $LN253@main
	cmp	ecx, -1
	je	SHORT $LN191@main
; Line 184
	push	ecx
	push	-1
	push	esi
	push	edi
	push	OFFSET ??_C@_0EL@JPMNEGLD@Test?5failed?5for?5constant_time_eq@
$LN280@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
; Line 186
	mov	edx, DWORD PTR _a$1$[esp+88]
	add	esp, 24					; 00000018H
	mov	eax, 1
	jmp	SHORT $LN188@main
$LN253@main:
; Line 187
	test	ecx, ecx
	je	SHORT $LN191@main
; Line 188
	push	ecx
	push	0
	push	esi
	push	edi
	push	OFFSET ??_C@_0EM@LNKJJMGB@Test?5failed?5for?5constant_time_eq@
; Line 191
	jmp	SHORT $LN280@main
$LN191@main:
; Line 193
	xor	eax, eax
$LN188@main:
; Line 282
	add	ebp, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	lea	eax, DWORD PTR [edx-1]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 198
	shr	eax, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	not	edx
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 198
	shr	edx, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	al, dl
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 198
	neg	al
; Line 199
	cmp	edi, esi
	jne	SHORT $LN252@main
	cmp	al, 255					; 000000ffH
	je	SHORT $LN204@main
; Line 200
	movzx	eax, al
	push	eax
	push	255					; 000000ffH
	push	esi
	push	edi
	push	OFFSET ??_C@_0EL@ODMBCLDF@Test?5failed?5for?5constant_time_eq@
$LN281@main:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 202
	mov	eax, 1
	jmp	SHORT $LN201@main
$LN252@main:
; Line 203
	test	al, al
	je	SHORT $LN204@main
; Line 204
	movzx	eax, al
	push	eax
	push	0
	push	esi
	push	edi
	push	OFFSET ??_C@_0EM@MFICIMDG@Test?5failed?5for?5constant_time_eq@
; Line 207
	jmp	SHORT $LN281@main
$LN204@main:
; Line 209
	xor	eax, eax
$LN201@main:
; Line 283
	add	ebp, eax
	mov	eax, DWORD PTR tv1593[esp+64]
	add	eax, 4
	mov	DWORD PTR tv1593[esp+64], eax
	cmp	eax, 52					; 00000034H
	jb	$LL13@main
; Line 277
	mov	eax, DWORD PTR tv1592[esp+64]
	add	eax, 4
	mov	DWORD PTR tv1592[esp+64], eax
	cmp	eax, 52					; 00000034H
	jb	$LL10@main
; Line 288
	xor	edi, edi
	add	DWORD PTR _num_all$1$[esp+64], 81	; 00000051H
$LL16@main:
; Line 290
	xor	esi, esi
$LL19@main:
; Line 158
	xor	eax, eax
; Line 290
	inc	esi
; Line 292
	add	ebp, eax
	cmp	esi, 9
	jb	SHORT $LL19@main
; Line 288
	inc	edi
	cmp	edi, 9
	jb	SHORT $LL16@main
; Line 298
	mov	ecx, DWORD PTR _num_all$1$[esp+64]
	pop	edi
	pop	esi
	push	ecx
	test	ebp, ebp
	jne	SHORT $LN20@main
	push	OFFSET ??_C@_0BD@GHOEAFAD@ok?5?$CIran?5?$CFd?5tests?$CJ?6?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 299
	xor	eax, eax
	pop	ebp
	pop	ebx
; Line 304
	add	esp, 48					; 00000030H
	ret	0
$LN20@main:
; Line 301
	push	ebp
	push	OFFSET ??_C@_0BI@DBLBDJNF@?$CFd?5of?5?$CFd?5tests?5failed?$CB?6?$AA@
	push	1
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 302
	mov	eax, 1
	pop	ebp
	pop	ebx
; Line 304
	add	esp, 48					; 00000030H
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_eq_int_8
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_test_eq_int_8 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 170
	mov	edx, DWORD PTR _a$[esp-4]
	mov	eax, edx
	push	esi
	mov	esi, DWORD PTR _b$[esp]
	xor	eax, esi
; Line 160
	lea	ecx, DWORD PTR [eax-1]
	not	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 198
	shr	ecx, 31					; 0000001fH
	shr	eax, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	cl, al
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 198
	neg	cl
; Line 199
	cmp	edx, esi
	jne	SHORT $LN16@test_eq_in
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN4@test_eq_in
; Line 200
	movzx	eax, cl
	push	eax
	push	255					; 000000ffH
	push	esi
	push	edx
	push	OFFSET ??_C@_0EL@ODMBCLDF@Test?5failed?5for?5constant_time_eq@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 202
	mov	eax, 1
	pop	esi
; Line 210
	ret	0
$LN16@test_eq_in:
; Line 203
	test	cl, cl
	je	SHORT $LN4@test_eq_in
; Line 204
	movzx	eax, cl
	push	eax
	push	0
	push	esi
	push	edx
	push	OFFSET ??_C@_0EM@MFICIMDG@Test?5failed?5for?5constant_time_eq@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 207
	mov	eax, 1
	pop	esi
; Line 210
	ret	0
$LN4@test_eq_in:
; Line 209
	xor	eax, eax
	pop	esi
; Line 210
	ret	0
_test_eq_int_8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_eq_int
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_test_eq_int PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 170
	mov	edx, DWORD PTR _a$[esp-4]
	mov	eax, edx
	push	esi
	mov	esi, DWORD PTR _b$[esp]
	xor	eax, esi
; Line 160
	lea	ecx, DWORD PTR [eax-1]
	not	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 182
	shr	ecx, 31					; 0000001fH
	shr	eax, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	ecx, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 182
	neg	ecx
; Line 183
	cmp	edx, esi
	jne	SHORT $LN14@test_eq_in
	cmp	ecx, -1
	je	SHORT $LN4@test_eq_in
; Line 184
	push	ecx
	push	-1
	push	esi
	push	edx
	push	OFFSET ??_C@_0EL@JPMNEGLD@Test?5failed?5for?5constant_time_eq@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 186
	mov	eax, 1
	pop	esi
; Line 194
	ret	0
$LN14@test_eq_in:
; Line 187
	test	ecx, ecx
	je	SHORT $LN4@test_eq_in
; Line 188
	push	ecx
	push	0
	push	esi
	push	edx
	push	OFFSET ??_C@_0EM@LNKJJMGB@Test?5failed?5for?5constant_time_eq@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 24					; 00000018H
; Line 191
	mov	eax, 1
	pop	esi
; Line 194
	ret	0
$LN4@test_eq_in:
; Line 193
	xor	eax, eax
	pop	esi
; Line 194
	ret	0
_test_eq_int ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_select_int
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_test_select_int PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 177
	xor	eax, eax
; Line 178
	ret	0
_test_select_int ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_select_8
_TEXT	SEGMENT
_a$ = 8							; size = 1
_b$ = 12						; size = 1
_test_select_8 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 158
	xor	eax, eax
; Line 159
	ret	0
_test_select_8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_select
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_test_select PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 139
	xor	eax, eax
; Line 140
	ret	0
_test_select ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_is_zero_8
_TEXT	SEGMENT
_a$ = 8							; size = 4
_test_is_zero_8 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	mov	edx, DWORD PTR _a$[esp-4]
	mov	eax, edx
	not	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 110
	shr	eax, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	lea	ecx, DWORD PTR [edx-1]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 110
	shr	ecx, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	cl, al
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 110
	neg	cl
; Line 111
	test	edx, edx
	jne	SHORT $LN12@test_is_ze
	cmp	cl, 255					; 000000ffH
	je	SHORT $LN4@test_is_ze
; Line 112
	movzx	eax, cl
	push	eax
	push	255					; 000000ffH
	push	edx
	push	OFFSET ??_C@_0EI@GDHNIBJJ@Test?5failed?5for?5constant_time_is@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 20					; 00000014H
; Line 114
	mov	eax, 1
; Line 121
	ret	0
$LN12@test_is_ze:
; Line 115
	test	cl, cl
	je	SHORT $LN4@test_is_ze
; Line 116
	movzx	eax, cl
	push	eax
	push	0
	push	edx
	push	OFFSET ??_C@_0EJ@BKGCNPFP@Test?5failed?5for?5constant_time_is@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 20					; 00000014H
; Line 118
	mov	eax, 1
; Line 121
	ret	0
$LN4@test_is_ze:
; Line 120
	xor	eax, eax
; Line 121
	ret	0
_test_is_zero_8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_is_zero
_TEXT	SEGMENT
_a$ = 8							; size = 4
_test_is_zero PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	mov	edx, DWORD PTR _a$[esp-4]
	mov	eax, edx
	not	eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 95
	shr	eax, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	lea	ecx, DWORD PTR [edx-1]
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 95
	shr	ecx, 31					; 0000001fH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	and	ecx, eax
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 95
	neg	ecx
; Line 96
	test	edx, edx
	jne	SHORT $LN10@test_is_ze
	cmp	ecx, -1
	je	SHORT $LN4@test_is_ze
; Line 97
	push	ecx
	push	-1
	push	edx
	push	OFFSET ??_C@_0EK@LLHFDNMM@Test?5failed?5for?5constant_time_is@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 20					; 00000014H
; Line 99
	mov	eax, 1
; Line 106
	ret	0
$LN10@test_is_ze:
; Line 100
	test	ecx, ecx
	je	SHORT $LN4@test_is_ze
; Line 101
	push	ecx
	push	0
	push	edx
	push	OFFSET ??_C@_0EL@HNDHEILH@Test?5failed?5for?5constant_time_is@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 20					; 00000014H
; Line 103
	mov	eax, 1
; Line 106
	ret	0
$LN4@test_is_ze:
; Line 105
	xor	eax, eax
; Line 106
	ret	0
_test_is_zero ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_binary_op_8
_TEXT	SEGMENT
_op$ = 8						; size = 4
_op_name$ = 12						; size = 4
_a$ = 16						; size = 4
_b$ = 20						; size = 4
_is_true$ = 24						; size = 4
_test_binary_op_8 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 79
	push	esi
; Line 80
	mov	esi, DWORD PTR _b$[esp]
	push	edi
	mov	edi, DWORD PTR _a$[esp+4]
	push	esi
	push	edi
	call	DWORD PTR _op$[esp+12]
	add	esp, 8
; Line 81
	cmp	DWORD PTR _is_true$[esp+4], 0
	je	SHORT $LN6@test_binar
	cmp	al, 255					; 000000ffH
	je	SHORT $LN4@test_binar
; Line 82
	movzx	eax, al
	push	eax
	push	255					; 000000ffH
	push	esi
	push	edi
	push	DWORD PTR _op_name$[esp+20]
	push	OFFSET ??_C@_0DK@KNEAHCHB@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 84
	mov	eax, 1
	pop	edi
	pop	esi
; Line 91
	ret	0
$LN6@test_binar:
; Line 85
	test	al, al
	je	SHORT $LN4@test_binar
; Line 86
	movzx	eax, al
	push	eax
	push	0
	push	esi
	push	edi
	push	DWORD PTR _op_name$[esp+20]
	push	OFFSET ??_C@_0DM@IFAMJCKK@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 88
	mov	eax, 1
	pop	edi
	pop	esi
; Line 91
	ret	0
$LN4@test_binar:
	pop	edi
; Line 90
	xor	eax, eax
	pop	esi
; Line 91
	ret	0
_test_binary_op_8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_binary_op
_TEXT	SEGMENT
_op$ = 8						; size = 4
_op_name$ = 12						; size = 4
_a$ = 16						; size = 4
_b$ = 20						; size = 4
_is_true$ = 24						; size = 4
_test_binary_op PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_test.c
; Line 61
	push	esi
; Line 62
	mov	esi, DWORD PTR _b$[esp]
	push	edi
	mov	edi, DWORD PTR _a$[esp+4]
	push	esi
	push	edi
	call	DWORD PTR _op$[esp+12]
	add	esp, 8
; Line 63
	cmp	DWORD PTR _is_true$[esp+4], 0
	je	SHORT $LN6@test_binar
	cmp	eax, -1
	je	SHORT $LN4@test_binar
; Line 64
	push	eax
	push	-1
	push	esi
	push	edi
	push	DWORD PTR _op_name$[esp+20]
	push	OFFSET ??_C@_0DM@JGGCJLD@Test?5failed?5for?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5ex@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 66
	mov	eax, 1
	pop	edi
	pop	esi
; Line 73
	ret	0
$LN6@test_binar:
; Line 67
	test	eax, eax
	je	SHORT $LN4@test_binar
; Line 68
	push	eax
	push	0
	push	esi
	push	edi
	push	DWORD PTR _op_name$[esp+20]
	push	OFFSET ??_C@_0DO@BMJBPPAM@Test?5failed?5for?5?5?$CFs?$CI?$CFdu?0?5?$CFdu?$CJ?3?5e@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
; Line 70
	mov	eax, 1
	pop	edi
	pop	esi
; Line 73
	ret	0
$LN4@test_binar:
	pop	edi
; Line 72
	xor	eax, eax
	pop	esi
; Line 73
	ret	0
_test_binary_op ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_select_int
_TEXT	SEGMENT
_mask$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_constant_time_select_int PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 192
	mov	ecx, DWORD PTR _mask$[esp-4]
	mov	eax, ecx
	and	ecx, DWORD PTR _a$[esp-4]
	not	eax
	and	eax, DWORD PTR _b$[esp-4]
	or	eax, ecx
; Line 205
	ret	0
_constant_time_select_int ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_select_8
_TEXT	SEGMENT
_mask$ = 8						; size = 1
_a$ = 12						; size = 1
_b$ = 16						; size = 1
_constant_time_select_8 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 199
	movzx	edx, BYTE PTR _mask$[esp-4]
	movzx	ecx, BYTE PTR _b$[esp-4]
; Line 192
	mov	eax, edx
	not	eax
	and	eax, ecx
; Line 199
	movzx	ecx, BYTE PTR _a$[esp-4]
; Line 192
	and	ecx, edx
	or	eax, ecx
; Line 200
	ret	0
_constant_time_select_8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_select
_TEXT	SEGMENT
_mask$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_constant_time_select PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 192
	mov	ecx, DWORD PTR _mask$[esp-4]
	mov	eax, ecx
	and	ecx, DWORD PTR _a$[esp-4]
	not	eax
	and	eax, DWORD PTR _b$[esp-4]
	or	eax, ecx
; Line 193
	ret	0
_constant_time_select ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_eq_int_8
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_constant_time_eq_int_8 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 170
	mov	ecx, DWORD PTR _a$[esp-4]
	xor	ecx, DWORD PTR _b$[esp-4]
; Line 160
	lea	eax, DWORD PTR [ecx-1]
	not	ecx
; Line 185
	shr	eax, 31					; 0000001fH
	shr	ecx, 31					; 0000001fH
; Line 135
	and	eax, ecx
; Line 185
	neg	eax
; Line 186
	ret	0
_constant_time_eq_int_8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_eq_int
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_constant_time_eq_int PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 170
	mov	ecx, DWORD PTR _a$[esp-4]
	xor	ecx, DWORD PTR _b$[esp-4]
; Line 160
	lea	eax, DWORD PTR [ecx-1]
	not	ecx
; Line 180
	shr	eax, 31					; 0000001fH
	shr	ecx, 31					; 0000001fH
; Line 135
	and	eax, ecx
; Line 180
	neg	eax
; Line 181
	ret	0
_constant_time_eq_int ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_eq_8
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_constant_time_eq_8 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 170
	mov	ecx, DWORD PTR _a$[esp-4]
	xor	ecx, DWORD PTR _b$[esp-4]
; Line 160
	lea	eax, DWORD PTR [ecx-1]
	not	ecx
; Line 175
	shr	eax, 31					; 0000001fH
	shr	ecx, 31					; 0000001fH
; Line 135
	and	eax, ecx
; Line 175
	neg	eax
; Line 176
	ret	0
_constant_time_eq_8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_eq
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_constant_time_eq PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 170
	mov	ecx, DWORD PTR _a$[esp-4]
	xor	ecx, DWORD PTR _b$[esp-4]
; Line 160
	lea	eax, DWORD PTR [ecx-1]
	not	ecx
; Line 170
	shr	eax, 31					; 0000001fH
	shr	ecx, 31					; 0000001fH
; Line 135
	and	eax, ecx
; Line 170
	neg	eax
; Line 171
	ret	0
_constant_time_eq ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_is_zero_8
_TEXT	SEGMENT
_a$ = 8							; size = 4
_constant_time_is_zero_8 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	mov	ecx, DWORD PTR _a$[esp-4]
	lea	eax, DWORD PTR [ecx-1]
	not	ecx
; Line 165
	shr	eax, 31					; 0000001fH
	shr	ecx, 31					; 0000001fH
; Line 135
	and	eax, ecx
; Line 165
	neg	eax
; Line 166
	ret	0
_constant_time_is_zero_8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_is_zero
_TEXT	SEGMENT
_a$ = 8							; size = 4
_constant_time_is_zero PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 160
	mov	ecx, DWORD PTR _a$[esp-4]
	lea	eax, DWORD PTR [ecx-1]
	not	ecx
	shr	eax, 31					; 0000001fH
	shr	ecx, 31					; 0000001fH
; Line 135
	and	eax, ecx
; Line 160
	neg	eax
; Line 161
	ret	0
_constant_time_is_zero ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_ge_8
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_constant_time_ge_8 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 140
	mov	edx, DWORD PTR _b$[esp-4]
	push	esi
	mov	esi, DWORD PTR _a$[esp]
	mov	eax, esi
	sub	eax, edx
; Line 155
	mov	ecx, esi
	xor	eax, edx
	xor	ecx, edx
	or	eax, ecx
	xor	eax, esi
; Line 135
	shr	eax, 31					; 0000001fH
; Line 150
	dec	eax
	pop	esi
; Line 156
	ret	0
_constant_time_ge_8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_ge
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_constant_time_ge PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 140
	mov	edx, DWORD PTR _b$[esp-4]
	push	esi
	mov	esi, DWORD PTR _a$[esp]
	mov	eax, esi
	sub	eax, edx
; Line 150
	mov	ecx, esi
	xor	eax, edx
	xor	ecx, edx
	or	eax, ecx
	xor	eax, esi
; Line 135
	shr	eax, 31					; 0000001fH
; Line 150
	dec	eax
	pop	esi
; Line 151
	ret	0
_constant_time_ge ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_lt_8
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_constant_time_lt_8 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 140
	mov	edx, DWORD PTR _b$[esp-4]
	push	esi
	mov	esi, DWORD PTR _a$[esp]
	mov	eax, esi
	sub	eax, edx
; Line 145
	mov	ecx, esi
	xor	eax, edx
	xor	ecx, edx
	or	eax, ecx
	xor	eax, esi
; Line 135
	shr	eax, 31					; 0000001fH
; Line 145
	neg	eax
	pop	esi
; Line 146
	ret	0
_constant_time_lt_8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_lt
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_constant_time_lt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 140
	mov	edx, DWORD PTR _b$[esp-4]
	push	esi
	mov	esi, DWORD PTR _a$[esp]
	mov	eax, esi
	sub	eax, edx
	mov	ecx, esi
	xor	eax, edx
	xor	ecx, edx
	or	eax, ecx
	xor	eax, esi
; Line 135
	shr	eax, 31					; 0000001fH
; Line 140
	neg	eax
	pop	esi
; Line 141
	ret	0
_constant_time_lt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _constant_time_msb
_TEXT	SEGMENT
_a$ = 8							; size = 4
_constant_time_msb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\constant_time_locl.h
; Line 135
	mov	eax, DWORD PTR _a$[esp-4]
	shr	eax, 31					; 0000001fH
	neg	eax
; Line 136
	ret	0
_constant_time_msb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_PKCS7_SIGNER_INFO_sign
PUBLIC	_PKCS7_dataVerify
PUBLIC	_PKCS7_signatureVerify
PUBLIC	_PKCS7_dataInit
PUBLIC	_PKCS7_dataFinal
PUBLIC	_PKCS7_dataDecode
PUBLIC	_PKCS7_get_issuer_and_serial
PUBLIC	_PKCS7_digest_from_attributes
PUBLIC	_PKCS7_add_signed_attribute
PUBLIC	_PKCS7_add_attribute
PUBLIC	_PKCS7_get_attribute
PUBLIC	_PKCS7_get_signed_attribute
PUBLIC	_PKCS7_set_signed_attributes
PUBLIC	_PKCS7_set_attributes
PUBLIC	??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@ ; `string'
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_set:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_sk_dup:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BIO_set_flags:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_push:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_find_type:PROC
EXTRN	_BIO_next:PROC
EXTRN	_BIO_s_mem:PROC
EXTRN	_BIO_new_mem_buf:PROC
EXTRN	_BIO_s_null:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_ASN1_TYPE_new:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_STRING_cmp:PROC
EXTRN	_ASN1_STRING_set:PROC
EXTRN	_ASN1_STRING_set0:PROC
EXTRN	_ASN1_item_i2d:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_cmp:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_MD_pkey_type:PROC
EXTRN	_EVP_MD_CTX_md:PROC
EXTRN	_EVP_CIPHER_key_length:PROC
EXTRN	_EVP_CIPHER_iv_length:PROC
EXTRN	_EVP_CIPHER_CTX_key_length:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_MD_CTX_copy_ex:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_CipherInit_ex:PROC
EXTRN	_EVP_SignFinal:PROC
EXTRN	_EVP_VerifyFinal:PROC
EXTRN	_EVP_DigestSignInit:PROC
EXTRN	_EVP_DigestSignFinal:PROC
EXTRN	_EVP_CIPHER_CTX_set_key_length:PROC
EXTRN	_EVP_CIPHER_CTX_rand_key:PROC
EXTRN	_BIO_f_md:PROC
EXTRN	_BIO_f_cipher:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_size:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_CIPHER_type:PROC
EXTRN	_EVP_CIPHER_param_to_asn1:PROC
EXTRN	_EVP_CIPHER_asn1_to_param:PROC
EXTRN	_EVP_PKEY_CTX_new:PROC
EXTRN	_EVP_PKEY_CTX_free:PROC
EXTRN	_EVP_PKEY_CTX_ctrl:PROC
EXTRN	_EVP_PKEY_encrypt_init:PROC
EXTRN	_EVP_PKEY_encrypt:PROC
EXTRN	_EVP_PKEY_decrypt_init:PROC
EXTRN	_EVP_PKEY_decrypt:PROC
EXTRN	_X509_STORE_CTX_init:PROC
EXTRN	_X509_STORE_CTX_cleanup:PROC
EXTRN	_X509_STORE_CTX_set_purpose:PROC
EXTRN	_PKCS7_ATTR_SIGN_it:PROC
EXTRN	_PKCS7_ATTR_VERIFY_it:PROC
EXTRN	_PKCS7_ctrl:PROC
EXTRN	_PKCS7_add0_attrib_signing_time:PROC
EXTRN	_PKCS7_add1_attrib_digest:PROC
EXTRN	_X509_ATTRIBUTE_dup:PROC
EXTRN	_X509_ATTRIBUTE_free:PROC
EXTRN	_X509_ATTRIBUTE_create:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_X509_NAME_cmp:PROC
EXTRN	_X509_verify_cert:PROC
EXTRN	_X509_find_by_issuer_and_serial:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
CONST	SEGMENT
??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@ DB '.\crypto\pkcs7'
	DB	'\pk7_doit.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_pkcs7_signed_attrib
_TEXT	SEGMENT
_md_len$ = -72						; size = 4
_md_data$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_si$ = 8						; size = 4
_mctx$ = 12						; size = 4
_do_pkcs7_signed_attrib PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 715
	mov	eax, 72					; 00000048H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+72], eax
	push	esi
	mov	esi, DWORD PTR _si$[esp+72]
	push	edi
	mov	edi, DWORD PTR _mctx$[esp+76]
; Line 1169
	push	52					; 00000034H
	push	DWORD PTR [esi+12]
	call	_get_attribute
	add	esp, 8
; Line 720
	test	eax, eax
	jne	SHORT $LN3@do_pkcs7_s
; Line 721
	push	eax
	push	esi
	call	_PKCS7_add0_attrib_signing_time
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@do_pkcs7_s
; Line 722
	push	722					; 000002d2H
$LN11@do_pkcs7_s:
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	65					; 00000041H
$LN10@do_pkcs7_s:
	push	136					; 00000088H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 723
	xor	eax, eax
	pop	edi
	pop	esi
; Line 742
	mov	ecx, DWORD PTR __$ArrayPad$[esp+72]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
$LN3@do_pkcs7_s:
; Line 728
	lea	eax, DWORD PTR _md_len$[esp+80]
	push	eax
	lea	eax, DWORD PTR _md_data$[esp+84]
	push	eax
	push	edi
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@do_pkcs7_s
; Line 729
	push	729					; 000002d9H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	6
; Line 730
	jmp	SHORT $LN10@do_pkcs7_s
$LN4@do_pkcs7_s:
; Line 732
	push	DWORD PTR _md_len$[esp+80]
	lea	eax, DWORD PTR _md_data$[esp+84]
	push	eax
	push	esi
	call	_PKCS7_add1_attrib_digest
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@do_pkcs7_s
; Line 733
	push	733					; 000002ddH
; Line 734
	jmp	SHORT $LN11@do_pkcs7_s
$LN5@do_pkcs7_s:
; Line 738
	push	esi
	call	_PKCS7_SIGNER_INFO_sign
; Line 742
	mov	ecx, DWORD PTR __$ArrayPad$[esp+84]
	add	esp, 4
	neg	eax
	sbb	eax, eax
	pop	edi
	pop	esi
	xor	ecx, esp
	neg	eax
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
_do_pkcs7_signed_attrib ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_find_digest
_TEXT	SEGMENT
_pmd$ = 8						; size = 4
_bio$ = 12						; size = 4
_nid$ = 16						; size = 4
_PKCS7_find_digest PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 694
	push	ebx
	push	esi
	push	edi
; Line 696
	push	520					; 00000208H
	push	DWORD PTR _bio$[esp+12]
	call	_BIO_find_type
	mov	esi, eax
	add	esp, 8
; Line 697
	test	esi, esi
	je	SHORT $LN11@PKCS7_find
	mov	ebx, DWORD PTR _nid$[esp+8]
	mov	edi, DWORD PTR _pmd$[esp+8]
$LL2@PKCS7_find:
; Line 702
	push	edi
	push	0
	push	120					; 00000078H
	push	esi
	call	_BIO_ctrl
; Line 703
	mov	eax, DWORD PTR [edi]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN12@PKCS7_find
; Line 707
	push	eax
	call	_EVP_MD_CTX_md
	push	eax
	call	_EVP_MD_type
	add	esp, 8
	cmp	eax, ebx
	je	SHORT $LN13@PKCS7_find
; Line 709
	push	esi
	call	_BIO_next
	push	520					; 00000208H
	push	eax
	call	_BIO_find_type
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LL2@PKCS7_find
$LN11@PKCS7_find:
; Line 698
	push	699					; 000002bbH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	108					; 0000006cH
	push	127					; 0000007fH
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 700
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 712
	ret	0
$LN13@PKCS7_find:
	pop	edi
; Line 708
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 712
	ret	0
$LN12@PKCS7_find:
; Line 704
	push	704					; 000002c0H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	68					; 00000044H
	push	127					; 0000007fH
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 712
	ret	0
_PKCS7_find_digest ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkcs7_cmp_ri
_TEXT	SEGMENT
_ri$ = 8						; size = 4
_pcert$ = 12						; size = 4
_pkcs7_cmp_ri PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 406
	push	esi
; Line 408
	mov	esi, DWORD PTR _ri$[esp]
	push	edi
	mov	edi, DWORD PTR _pcert$[esp+4]
	mov	eax, DWORD PTR [edi]
	push	DWORD PTR [eax+12]
	mov	eax, DWORD PTR [esi+4]
	push	DWORD PTR [eax]
	call	_X509_NAME_cmp
	add	esp, 8
; Line 410
	test	eax, eax
	jne	SHORT $LN1@pkcs7_cmp_
; Line 412
	mov	eax, DWORD PTR [esi+4]
	push	DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edi]
	push	DWORD PTR [eax+4]
	call	_ASN1_STRING_cmp
	add	esp, 8
$LN1@pkcs7_cmp_:
; Line 414
	pop	edi
	pop	esi
	ret	0
_pkcs7_cmp_ri ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkcs7_decrypt_rinfo
_TEXT	SEGMENT
_eklen$ = -4						; size = 4
_pek$ = 8						; size = 4
_peklen$ = 12						; size = 4
_ri$ = 16						; size = 4
_pkey$ = 20						; size = 4
_pkcs7_decrypt_rinfo PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 195
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 197
	xor	esi, esi
; Line 200
	or	ebx, -1
; Line 202
	push	esi
	push	DWORD PTR _pkey$[esp+16]
	call	_EVP_PKEY_CTX_new
	mov	edi, eax
	add	esp, 8
; Line 203
	test	edi, edi
	jne	SHORT $LN2@pkcs7_decr
; Line 204
	pop	edi
	pop	esi
	or	eax, ebx
	pop	ebx
; Line 250
	pop	ecx
	ret	0
$LN2@pkcs7_decr:
; Line 206
	push	edi
	call	_EVP_PKEY_decrypt_init
	add	esp, 4
	test	eax, eax
	jle	$err$14
; Line 210
	push	ebp
	mov	ebp, DWORD PTR _ri$[esp+16]
	push	ebp
	push	0
	push	4
	push	512					; 00000200H
	push	-1
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN4@pkcs7_decr
; Line 211
	push	211					; 000000d3H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	152					; 00000098H
	push	133					; 00000085H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 212
	jmp	$LN12@pkcs7_decr
$LN4@pkcs7_decr:
; Line 216
	mov	eax, DWORD PTR [ebp+12]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	lea	eax, DWORD PTR _eklen$[esp+28]
	push	eax
	push	0
	push	edi
	call	_EVP_PKEY_decrypt
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	$LN12@pkcs7_decr
; Line 219
	push	219					; 000000dbH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	DWORD PTR _eklen$[esp+28]
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 221
	test	esi, esi
	jne	SHORT $LN6@pkcs7_decr
; Line 222
	push	222					; 000000deH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	65					; 00000041H
	push	133					; 00000085H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 223
	jmp	SHORT $LN12@pkcs7_decr
$LN6@pkcs7_decr:
; Line 227
	mov	eax, DWORD PTR [ebp+12]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	lea	eax, DWORD PTR _eklen$[esp+28]
	push	eax
	push	esi
	push	edi
	call	_EVP_PKEY_decrypt
	add	esp, 20					; 00000014H
	test	eax, eax
	jg	SHORT $LN7@pkcs7_decr
; Line 229
	push	229					; 000000e5H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	6
	push	133					; 00000085H
	push	33					; 00000021H
	xor	ebx, ebx
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 230
	jmp	SHORT $LN12@pkcs7_decr
$LN7@pkcs7_decr:
; Line 235
	mov	ebp, DWORD PTR _pek$[esp+16]
	mov	ebx, 1
	mov	eax, DWORD PTR [ebp]
	test	eax, eax
	je	SHORT $LN8@pkcs7_decr
; Line 236
	mov	ecx, DWORD PTR _peklen$[esp+16]
	push	DWORD PTR [ecx]
	push	eax
	call	_OPENSSL_cleanse
; Line 237
	push	DWORD PTR [ebp]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN8@pkcs7_decr:
; Line 241
	mov	ecx, DWORD PTR _peklen$[esp+16]
	mov	eax, DWORD PTR _eklen$[esp+20]
	mov	DWORD PTR [ebp], esi
	mov	DWORD PTR [ecx], eax
$LN12@pkcs7_decr:
	pop	ebp
$err$14:
; Line 245
	push	edi
	call	_EVP_PKEY_CTX_free
	add	esp, 4
; Line 246
	test	ebx, ebx
	jne	SHORT $LN10@pkcs7_decr
	test	esi, esi
	je	SHORT $LN10@pkcs7_decr
; Line 247
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN10@pkcs7_decr:
; Line 249
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 250
	pop	ecx
	ret	0
_pkcs7_decrypt_rinfo ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkcs7_encode_rinfo
_TEXT	SEGMENT
_eklen$ = 8						; size = 4
_ri$ = 8						; size = 4
_key$ = 12						; size = 4
_keylen$ = 16						; size = 4
_pkcs7_encode_rinfo PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 139
	push	ebx
	push	ebp
; Line 146
	mov	ebp, DWORD PTR _ri$[esp+4]
	push	esi
	xor	esi, esi
	push	DWORD PTR [ebp+16]
	call	_X509_get_pubkey
	mov	ebx, eax
	add	esp, 4
; Line 148
	test	ebx, ebx
	jne	SHORT $LN2@pkcs7_enco
	pop	esi
	pop	ebp
	pop	ebx
; Line 191
	ret	0
$LN2@pkcs7_enco:
	push	edi
; Line 151
	push	0
	push	ebx
	call	_EVP_PKEY_CTX_new
	mov	edi, eax
	add	esp, 8
; Line 152
	test	edi, edi
	jne	SHORT $LN3@pkcs7_enco
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 191
	ret	0
$LN3@pkcs7_enco:
; Line 155
	push	edi
	call	_EVP_PKEY_encrypt_init
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN15@pkcs7_enco
; Line 159
	push	ebp
	push	0
	push	3
	push	256					; 00000100H
	push	-1
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN5@pkcs7_enco
; Line 160
	push	160					; 000000a0H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	152					; 00000098H
$LN18@pkcs7_enco:
; Line 170
	push	132					; 00000084H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN15@pkcs7_enco:
	xor	ebp, ebp
$err$20:
; Line 184
	push	ebx
	call	_EVP_PKEY_free
; Line 186
	push	edi
	call	_EVP_PKEY_CTX_free
	add	esp, 8
; Line 187
	test	esi, esi
	je	SHORT $LN11@pkcs7_enco
; Line 188
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN11@pkcs7_enco:
; Line 189
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 191
	ret	0
$LN5@pkcs7_enco:
; Line 164
	push	DWORD PTR _keylen$[esp+12]
	lea	eax, DWORD PTR _eklen$[esp+16]
	push	DWORD PTR _key$[esp+16]
	push	eax
	push	0
	push	edi
	call	_EVP_PKEY_encrypt
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $LN15@pkcs7_enco
; Line 167
	push	167					; 000000a7H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	DWORD PTR _eklen$[esp+20]
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 169
	test	esi, esi
	jne	SHORT $LN7@pkcs7_enco
; Line 170
	push	170					; 000000aaH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	65					; 00000041H
; Line 171
	jmp	SHORT $LN18@pkcs7_enco
$LN7@pkcs7_enco:
; Line 174
	push	DWORD PTR _keylen$[esp+12]
	lea	eax, DWORD PTR _eklen$[esp+16]
	push	DWORD PTR _key$[esp+16]
	push	eax
	push	esi
	push	edi
	call	_EVP_PKEY_encrypt
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	$LN15@pkcs7_enco
; Line 177
	push	DWORD PTR _eklen$[esp+12]
	push	esi
	push	DWORD PTR [ebp+12]
	call	_ASN1_STRING_set0
	add	esp, 12					; 0000000cH
; Line 178
	xor	esi, esi
; Line 180
	lea	ebp, DWORD PTR [esi+1]
	jmp	$err$20
_pkcs7_encode_rinfo ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_bio_add_digest
_TEXT	SEGMENT
_pbio$ = 8						; size = 4
_alg$ = 12						; size = 4
_PKCS7_bio_add_digest PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 105
	push	esi
; Line 108
	call	_BIO_f_md
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN2@PKCS7_bio_
; Line 109
	push	109					; 0000006dH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	32					; 00000020H
	push	125					; 0000007dH
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 133
	xor	eax, eax
	pop	esi
; Line 135
	ret	0
$LN2@PKCS7_bio_:
; Line 113
	mov	eax, DWORD PTR _alg$[esp]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 12					; 0000000cH
; Line 114
	test	eax, eax
	jne	SHORT $LN3@PKCS7_bio_
; Line 115
	push	115					; 00000073H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	109					; 0000006dH
; Line 116
	jmp	SHORT $LN9@PKCS7_bio_
$LN3@PKCS7_bio_:
; Line 119
	push	eax
	push	0
	push	111					; 0000006fH
	push	esi
	call	_BIO_ctrl
; Line 120
	mov	eax, DWORD PTR _pbio$[esp+16]
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@PKCS7_bio_
; Line 121
	mov	DWORD PTR [eax], esi
$LN6@PKCS7_bio_:
; Line 128
	mov	eax, 1
	pop	esi
; Line 135
	ret	0
$LN4@PKCS7_bio_:
; Line 122
	push	esi
	push	ecx
	call	_BIO_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@PKCS7_bio_
; Line 123
	push	123					; 0000007bH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	32					; 00000020H
$LN9@PKCS7_bio_:
	push	125					; 0000007dH
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$11:
; Line 132
	push	esi
	call	_BIO_free
	add	esp, 4
; Line 133
	xor	eax, eax
	pop	esi
; Line 135
	ret	0
_PKCS7_bio_add_digest ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_get_octet_string
_TEXT	SEGMENT
_p7$ = 8						; size = 4
_PKCS7_get_octet_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 95
	push	esi
; Line 96
	mov	esi, DWORD PTR _p7$[esp]
	push	DWORD PTR [esi+16]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 21					; 00000015H
	jne	SHORT $LN2@PKCS7_get_
; Line 97
	mov	eax, DWORD PTR [esi+20]
	pop	esi
; Line 102
	ret	0
$LN2@PKCS7_get_:
; Line 75
	push	DWORD PTR [esi+16]
	call	_OBJ_obj2nid
; Line 77
	add	eax, -21				; ffffffebH
	add	esp, 4
	cmp	eax, 5
	jbe	SHORT $LN3@PKCS7_get_
; Line 99
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN3@PKCS7_get_
	cmp	DWORD PTR [eax], 4
	jne	SHORT $LN3@PKCS7_get_
; Line 100
	mov	eax, DWORD PTR [eax+4]
	pop	esi
; Line 102
	ret	0
$LN3@PKCS7_get_:
; Line 101
	xor	eax, eax
	pop	esi
; Line 102
	ret	0
_PKCS7_get_octet_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_type_is_other
_TEXT	SEGMENT
_p7$ = 8						; size = 4
_PKCS7_type_is_other PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 75
	mov	eax, DWORD PTR _p7$[esp-4]
	push	DWORD PTR [eax+16]
	call	_OBJ_obj2nid
; Line 77
	add	eax, -21				; ffffffebH
	mov	ecx, 5
	add	esp, 4
	cmp	ecx, eax
	sbb	eax, eax
	neg	eax
; Line 92
	ret	0
_PKCS7_type_is_other ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_attribute
_TEXT	SEGMENT
_sk$ = 8						; size = 4
_nid$ = 12						; size = 4
_get_attribute PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1178
	push	ebp
	push	edi
; Line 1183
	push	DWORD PTR _nid$[esp+4]
	call	_OBJ_nid2obj
	mov	ebp, eax
	add	esp, 4
; Line 1184
	test	ebp, ebp
	je	SHORT $LN6@get_attrib
	mov	edi, DWORD PTR _sk$[esp+4]
	test	edi, edi
	je	SHORT $LN6@get_attrib
; Line 1186
	push	ebx
	push	esi
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@get_attrib
	npad	3
$LL4@get_attrib:
; Line 1187
	push	esi
	push	edi
	call	_sk_value
	mov	ebx, eax
; Line 1188
	push	ebp
	push	DWORD PTR [ebx]
	call	_OBJ_cmp
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN12@get_attrib
; Line 1186
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@get_attrib
$LN3@get_attrib:
	pop	esi
	pop	ebx
	pop	edi
; Line 1195
	xor	eax, eax
	pop	ebp
; Line 1196
	ret	0
$LN12@get_attrib:
; Line 1189
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LN3@get_attrib
	push	DWORD PTR [ebx+8]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@get_attrib
; Line 1190
	push	0
	push	DWORD PTR [ebx+8]
	call	_sk_value
	add	esp, 8
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 1196
	ret	0
$LN6@get_attrib:
	pop	edi
; Line 1185
	xor	eax, eax
	pop	ebp
; Line 1196
	ret	0
_get_attribute ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _add_attribute
_TEXT	SEGMENT
_sk$ = 8						; size = 4
_nid$ = 12						; size = 4
_atrtype$ = 16						; size = 4
_value$ = 20						; size = 4
_add_attribute PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1260
	push	ebx
	push	ebp
; Line 1263
	mov	ebp, DWORD PTR _nid$[esp+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _sk$[esp+12]
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	jne	SHORT $LN5@add_attrib
; Line 1264
	call	_sk_new_null
	mov	DWORD PTR [edi], eax
; Line 1265
	test	eax, eax
	jne	SHORT $new_attrib$21
$LN19@add_attrib:
	pop	edi
	pop	esi
	pop	ebp
; Line 1266
	xor	eax, eax
	pop	ebx
; Line 1295
	ret	0
$LN5@add_attrib:
; Line 1277
	push	eax
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $new_attrib$21
$LL4@add_attrib:
; Line 1278
	push	esi
	push	DWORD PTR [edi]
	call	_sk_value
	mov	ebx, eax
; Line 1279
	push	DWORD PTR [ebx]
	call	_OBJ_obj2nid
	add	esp, 12					; 0000000cH
	cmp	eax, ebp
	je	SHORT $LN15@add_attrib
; Line 1277
	push	DWORD PTR [edi]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@add_attrib
$new_attrib$21:
; Line 1268
	push	DWORD PTR _value$[esp+12]
	push	DWORD PTR _atrtype$[esp+16]
	push	ebp
	call	_X509_ATTRIBUTE_create
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN19@add_attrib
; Line 1270
	push	esi
	push	DWORD PTR [edi]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $end$22
; Line 1271
	push	esi
	call	_X509_ATTRIBUTE_free
	add	esp, 4
; Line 1272
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1295
	ret	0
$LN15@add_attrib:
; Line 1280
	push	ebx
	call	_X509_ATTRIBUTE_free
; Line 1281
	push	DWORD PTR _value$[esp+16]
	push	DWORD PTR _atrtype$[esp+20]
	push	ebp
	call	_X509_ATTRIBUTE_create
	mov	ebx, eax
	add	esp, 16					; 00000010H
; Line 1282
	test	ebx, ebx
	je	$LN19@add_attrib
; Line 1284
	push	ebx
	push	esi
	push	DWORD PTR [edi]
	call	_sk_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $end$22
; Line 1285
	push	ebx
	call	_X509_ATTRIBUTE_free
	add	esp, 4
; Line 1286
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1295
	ret	0
$end$22:
	pop	edi
	pop	esi
	pop	ebp
; Line 1294
	mov	eax, 1
	pop	ebx
; Line 1295
	ret	0
_add_attribute ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_set_attributes
_TEXT	SEGMENT
_p7si$ = 8						; size = 4
_sk$ = 12						; size = 4
_PKCS7_set_attributes PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1228
	push	ebx
; Line 1231
	mov	ebx, DWORD PTR _p7si$[esp]
	push	edi
	mov	eax, DWORD PTR [ebx+24]
	test	eax, eax
	je	SHORT $LN5@PKCS7_set_
; Line 1232
	push	OFFSET _X509_ATTRIBUTE_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN5@PKCS7_set_:
; Line 1233
	mov	edi, DWORD PTR _sk$[esp+4]
	push	edi
	call	_sk_dup
	add	esp, 4
	mov	DWORD PTR [ebx+24], eax
; Line 1234
	test	eax, eax
	jne	SHORT $LN6@PKCS7_set_
	pop	edi
	pop	ebx
; Line 1244
	ret	0
$LN6@PKCS7_set_:
	push	esi
; Line 1236
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@PKCS7_set_
$LL4@PKCS7_set_:
; Line 1240
	push	esi
	push	edi
	call	_sk_value
	push	eax
	call	_X509_ATTRIBUTE_dup
	push	eax
	push	esi
	push	DWORD PTR [ebx+24]
	call	_sk_set
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN10@PKCS7_set_
; Line 1236
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@PKCS7_set_
$LN3@PKCS7_set_:
	pop	esi
	pop	edi
; Line 1243
	mov	eax, 1
	pop	ebx
; Line 1244
	ret	0
$LN10@PKCS7_set_:
	pop	esi
	pop	edi
; Line 1241
	xor	eax, eax
	pop	ebx
; Line 1244
	ret	0
_PKCS7_set_attributes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_set_signed_attributes
_TEXT	SEGMENT
_p7si$ = 8						; size = 4
_sk$ = 12						; size = 4
_PKCS7_set_signed_attributes PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1208
	push	ebx
; Line 1211
	mov	ebx, DWORD PTR _p7si$[esp]
	push	edi
	mov	eax, DWORD PTR [ebx+12]
	test	eax, eax
	je	SHORT $LN5@PKCS7_set_
; Line 1212
	push	OFFSET _X509_ATTRIBUTE_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN5@PKCS7_set_:
; Line 1213
	mov	edi, DWORD PTR _sk$[esp+4]
	push	edi
	call	_sk_dup
	add	esp, 4
	mov	DWORD PTR [ebx+12], eax
; Line 1214
	test	eax, eax
	jne	SHORT $LN6@PKCS7_set_
	pop	edi
	pop	ebx
; Line 1224
	ret	0
$LN6@PKCS7_set_:
	push	esi
; Line 1216
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@PKCS7_set_
$LL4@PKCS7_set_:
; Line 1220
	push	esi
	push	edi
	call	_sk_value
	push	eax
	call	_X509_ATTRIBUTE_dup
	push	eax
	push	esi
	push	DWORD PTR [ebx+12]
	call	_sk_set
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN10@PKCS7_set_
; Line 1216
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@PKCS7_set_
$LN3@PKCS7_set_:
	pop	esi
	pop	edi
; Line 1223
	mov	eax, 1
	pop	ebx
; Line 1224
	ret	0
$LN10@PKCS7_set_:
	pop	esi
	pop	edi
; Line 1221
	xor	eax, eax
	pop	ebx
; Line 1224
	ret	0
_PKCS7_set_signed_attributes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_get_signed_attribute
_TEXT	SEGMENT
_si$ = 8						; size = 4
_nid$ = 12						; size = 4
_PKCS7_get_signed_attribute PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1169
	mov	eax, DWORD PTR _si$[esp-4]
	push	DWORD PTR _nid$[esp-4]
	push	DWORD PTR [eax+12]
	call	_get_attribute
	add	esp, 8
; Line 1170
	ret	0
_PKCS7_get_signed_attribute ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_get_attribute
_TEXT	SEGMENT
_si$ = 8						; size = 4
_nid$ = 12						; size = 4
_PKCS7_get_attribute PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1174
	mov	eax, DWORD PTR _si$[esp-4]
	push	DWORD PTR _nid$[esp-4]
	push	DWORD PTR [eax+24]
	call	_get_attribute
	add	esp, 8
; Line 1175
	ret	0
_PKCS7_get_attribute ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_add_attribute
_TEXT	SEGMENT
_p7si$ = 8						; size = 4
_nid$ = 12						; size = 4
_atrtype$ = 16						; size = 4
_value$ = 20						; size = 4
_PKCS7_add_attribute PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1255
	add	DWORD PTR _p7si$[esp-4], 24		; 00000018H
	jmp	_add_attribute
_PKCS7_add_attribute ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_add_signed_attribute
_TEXT	SEGMENT
_p7si$ = 8						; size = 4
_nid$ = 12						; size = 4
_atrtype$ = 16						; size = 4
_value$ = 20						; size = 4
_PKCS7_add_signed_attribute PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1249
	add	DWORD PTR _p7si$[esp-4], 12		; 0000000cH
	jmp	_add_attribute
_PKCS7_add_signed_attribute ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_digest_from_attributes
_TEXT	SEGMENT
_sk$ = 8						; size = 4
_PKCS7_digest_from_attributes PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1201
	push	51					; 00000033H
	push	DWORD PTR _sk$[esp]
	call	_get_attribute
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@PKCS7_dige
; Line 1204
	ret	0
$LN2@PKCS7_dige:
; Line 1203
	mov	eax, DWORD PTR [eax+4]
; Line 1204
	ret	0
_PKCS7_digest_from_attributes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_get_issuer_and_serial
_TEXT	SEGMENT
_p7$ = 8						; size = 4
_idx$ = 12						; size = 4
_PKCS7_get_issuer_and_serial PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1148
	push	esi
; Line 1153
	mov	esi, DWORD PTR _p7$[esp]
	push	DWORD PTR [esi+16]
	call	_OBJ_obj2nid
	add	esp, 4
; Line 1154
	cmp	eax, 24					; 00000018H
	je	SHORT $LN2@PKCS7_get_
$LN7@PKCS7_get_:
; Line 1155
	xor	eax, eax
	pop	esi
; Line 1165
	ret	0
$LN2@PKCS7_get_:
; Line 1156
	mov	esi, DWORD PTR [esi+20]
	test	esi, esi
	je	SHORT $LN7@PKCS7_get_
; Line 1158
	mov	esi, DWORD PTR [esi+24]
; Line 1159
	test	esi, esi
	je	SHORT $LN7@PKCS7_get_
; Line 1161
	push	esi
	call	_sk_num
	mov	ecx, DWORD PTR _idx$[esp+4]
	add	esp, 4
	cmp	eax, ecx
	jle	SHORT $LN7@PKCS7_get_
; Line 1163
	push	ecx
	push	esi
	call	_sk_value
	add	esp, 8
; Line 1164
	mov	eax, DWORD PTR [eax+4]
	pop	esi
; Line 1165
	ret	0
_PKCS7_get_issuer_and_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_dataDecode
_TEXT	SEGMENT
_evp_ctx$ = -52						; size = 4
_tkey$1$ = -48						; size = 4
_etmp$1$ = -44						; size = 4
_eklen$1$ = -40						; size = 4
_md_sk$1$ = -36						; size = 4
_ri$1$ = -32						; size = 4
_rsk$1$ = -32						; size = 4
_ek$ = -28						; size = 4
_eklen$ = -24						; size = 4
_tkeylen$1$ = -20					; size = 4
_evp_cipher$1$ = -16					; size = 4
_bio$1$ = -12						; size = 4
_enc_alg$1$ = -8					; size = 4
_xa$1$ = -4						; size = 4
_data_body$1$ = 8					; size = 4
_p7$ = 8						; size = 4
_pkey$ = 12						; size = 4
_in_bio$ = 16						; size = 4
_pcert$ = 20						; size = 4
_PKCS7_dataDecode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 418
	mov	eax, 52					; 00000034H
	call	__chkstk
	push	ebx
	push	ebp
; Line 420
	xor	ebx, ebx
; Line 430
	xor	eax, eax
	push	esi
; Line 433
	mov	esi, DWORD PTR _p7$[esp+60]
	xor	ebp, ebp
	push	edi
	xor	edi, edi
	mov	DWORD PTR _etmp$1$[esp+68], ebx
	mov	DWORD PTR _bio$1$[esp+68], ebx
	mov	DWORD PTR _evp_cipher$1$[esp+68], ebx
	mov	DWORD PTR _evp_ctx$[esp+68], ebx
	mov	DWORD PTR _enc_alg$1$[esp+68], ebx
	mov	DWORD PTR _md_sk$1$[esp+68], ebx
	mov	DWORD PTR _rsk$1$[esp+68], ebx
	mov	DWORD PTR _ek$[esp+68], edi
	mov	DWORD PTR _tkey$1$[esp+68], eax
	mov	DWORD PTR _eklen$1$[esp+68], eax
	mov	DWORD PTR _eklen$[esp+68], eax
	mov	DWORD PTR _tkeylen$1$[esp+68], eax
	test	esi, esi
	jne	SHORT $LN13@PKCS7_data
; Line 434
	push	434					; 000001b2H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	143					; 0000008fH
	push	112					; 00000070H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 435
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 691
	add	esp, 52					; 00000034H
	ret	0
$LN13@PKCS7_data:
; Line 438
	cmp	DWORD PTR [esi+20], eax
	jne	SHORT $LN14@PKCS7_data
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	122					; 0000007aH
	push	112					; 00000070H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 440
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 691
	add	esp, 52					; 00000034H
	ret	0
$LN14@PKCS7_data:
; Line 443
	push	DWORD PTR [esi+16]
	call	_OBJ_obj2nid
	add	esp, 4
; Line 444
	mov	DWORD PTR [esi+8], ebx
; Line 446
	sub	eax, 22					; 00000016H
	je	$LN15@PKCS7_data
	sub	eax, 1
	je	$LN20@PKCS7_data
	sub	eax, 1
	je	SHORT $LN18@PKCS7_data
; Line 488
	push	488					; 000001e8H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	112					; 00000070H
	push	112					; 00000070H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 688
	xor	ebx, ebx
; Line 690
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 691
	add	esp, 52					; 00000034H
	ret	0
$LN18@PKCS7_data:
; Line 463
	mov	eax, DWORD PTR [esi+20]
	mov	esi, DWORD PTR [eax+24]
; Line 464
	mov	ecx, DWORD PTR [eax+4]
; Line 466
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR _rsk$1$[esp+68], esi
	mov	DWORD PTR _md_sk$1$[esp+68], ecx
; Line 467
	mov	esi, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _data_body$1$[esp+64], ecx
	mov	DWORD PTR _enc_alg$1$[esp+68], esi
; Line 468
	push	DWORD PTR [esi]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_cipherbyname
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _evp_cipher$1$[esp+68], ecx
; Line 469
	test	ecx, ecx
	jne	$LN87@PKCS7_data
; Line 470
	push	471					; 000001d7H
$LN96@PKCS7_data:
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	111					; 0000006fH
$LN97@PKCS7_data:
	push	112					; 00000070H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 688
	xor	ebx, ebx
; Line 690
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 691
	add	esp, 52					; 00000034H
	ret	0
$LN20@PKCS7_data:
; Line 476
	mov	eax, DWORD PTR [esi+20]
	mov	ecx, DWORD PTR [eax+4]
; Line 477
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _rsk$1$[esp+68], ecx
	mov	ecx, DWORD PTR [eax+4]
; Line 479
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _enc_alg$1$[esp+68], ecx
	mov	DWORD PTR _data_body$1$[esp+64], eax
; Line 480
	push	DWORD PTR [ecx]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_cipherbyname
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _evp_cipher$1$[esp+68], eax
; Line 481
	test	eax, eax
	jne	SHORT $LN86@PKCS7_data
; Line 482
	push	483					; 000001e3H
; Line 484
	jmp	SHORT $LN96@PKCS7_data
$LN15@PKCS7_data:
; Line 454
	mov	eax, DWORD PTR [esi+20]
	push	DWORD PTR [eax+20]
	call	_PKCS7_get_octet_string
; Line 455
	push	DWORD PTR [esi+16]
	mov	DWORD PTR _data_body$1$[esp+72], eax
	call	_OBJ_obj2nid
	add	esp, 8
	cmp	eax, 22					; 00000016H
	jne	SHORT $LN17@PKCS7_data
	push	0
	push	0
	push	2
	push	esi
	call	_PKCS7_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN92@PKCS7_data
$LN17@PKCS7_data:
	mov	ecx, DWORD PTR _data_body$1$[esp+64]
	test	ecx, ecx
	jne	SHORT $LN16@PKCS7_data
; Line 456
	push	457					; 000001c9H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	155					; 0000009bH
; Line 458
	jmp	$LN97@PKCS7_data
$LN92@PKCS7_data:
	mov	ecx, DWORD PTR _data_body$1$[esp+64]
$LN16@PKCS7_data:
; Line 460
	mov	eax, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _md_sk$1$[esp+68], eax
	jmp	SHORT $LN2@PKCS7_data
$LN86@PKCS7_data:
	xor	eax, eax
	jmp	SHORT $LN93@PKCS7_data
$LN87@PKCS7_data:
	mov	eax, DWORD PTR _md_sk$1$[esp+68]
$LN93@PKCS7_data:
	mov	ecx, DWORD PTR _data_body$1$[esp+64]
$LN2@PKCS7_data:
; Line 493
	test	ecx, ecx
	jne	SHORT $LN23@PKCS7_data
	cmp	DWORD PTR _in_bio$[esp+64], ebx
	jne	SHORT $LN23@PKCS7_data
; Line 494
	push	494					; 000001eeH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	122					; 0000007aH
; Line 495
	jmp	$LN97@PKCS7_data
$LN23@PKCS7_data:
; Line 499
	test	eax, eax
	je	$LN5@PKCS7_data
; Line 500
	push	eax
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN5@PKCS7_data
	npad	7
$LL6@PKCS7_data:
; Line 501
	push	esi
	push	DWORD PTR _md_sk$1$[esp+72]
	call	_sk_value
	mov	DWORD PTR _xa$1$[esp+76], eax
; Line 502
	call	_BIO_f_md
	push	eax
	call	_BIO_new
	mov	ebp, eax
	add	esp, 12					; 0000000cH
	test	ebp, ebp
	je	$LN70@PKCS7_data
; Line 507
	mov	eax, DWORD PTR _xa$1$[esp+68]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
; Line 508
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 12					; 0000000cH
; Line 509
	test	eax, eax
	je	SHORT $LN71@PKCS7_data
; Line 515
	push	eax
	push	0
	push	111					; 0000006fH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 516
	test	ebx, ebx
	jne	SHORT $LN27@PKCS7_data
; Line 517
	mov	ebx, ebp
	jmp	SHORT $LN28@PKCS7_data
$LN27@PKCS7_data:
; Line 519
	push	ebp
	push	ebx
	call	_BIO_push
	add	esp, 8
$LN28@PKCS7_data:
; Line 520
	push	DWORD PTR _md_sk$1$[esp+68]
	xor	ebp, ebp
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL6@PKCS7_data
$LN5@PKCS7_data:
; Line 524
	cmp	DWORD PTR _evp_cipher$1$[esp+68], edi
	je	$LN29@PKCS7_data
; Line 534
	call	_BIO_f_cipher
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR _etmp$1$[esp+68], esi
	test	esi, esi
	jne	SHORT $LN30@PKCS7_data
; Line 535
	push	535					; 00000217H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	32					; 00000020H
	push	112					; 00000070H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 536
	jmp	$LN58@PKCS7_data
$LN71@PKCS7_data:
; Line 510
	push	511					; 000001ffH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	109					; 0000006dH
	push	112					; 00000070H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 512
	xor	esi, esi
	jmp	$LN58@PKCS7_data
$LN70@PKCS7_data:
; Line 503
	push	503					; 000001f7H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	32					; 00000020H
	push	112					; 00000070H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 504
	xor	esi, esi
	jmp	$LN58@PKCS7_data
$LN30@PKCS7_data:
; Line 550
	xor	esi, esi
	cmp	DWORD PTR _pcert$[esp+64], edi
	je	$LN83@PKCS7_data
	mov	edi, DWORD PTR _rsk$1$[esp+68]
	push	edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN84@PKCS7_data
$LL9@PKCS7_data:
; Line 551
	push	esi
	push	edi
	call	_sk_value
	mov	ecx, eax
; Line 408
	mov	eax, DWORD PTR _pcert$[esp+72]
; Line 551
	mov	DWORD PTR _ri$1$[esp+76], ecx
; Line 408
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+12]
	mov	eax, DWORD PTR [ecx+4]
	push	DWORD PTR [eax]
	call	_X509_NAME_cmp
	add	esp, 16					; 00000010H
; Line 410
	test	eax, eax
	jne	SHORT $LN95@PKCS7_data
; Line 412
	mov	eax, DWORD PTR _ri$1$[esp+68]
	mov	eax, DWORD PTR [eax+4]
	push	DWORD PTR [eax+4]
	mov	eax, DWORD PTR _pcert$[esp+68]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	call	_ASN1_STRING_cmp
	add	esp, 8
; Line 552
	test	eax, eax
	je	SHORT $LN34@PKCS7_data
$LN95@PKCS7_data:
; Line 550
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL9@PKCS7_data
$LN84@PKCS7_data:
; Line 557
	push	558					; 0000022eH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	115					; 00000073H
	push	112					; 00000070H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 559
	jmp	$LN91@PKCS7_data
$LN34@PKCS7_data:
; Line 578
	push	DWORD PTR _pkey$[esp+64]
	lea	eax, DWORD PTR _eklen$[esp+72]
	push	DWORD PTR _ri$1$[esp+72]
	push	eax
	lea	eax, DWORD PTR _ek$[esp+80]
	push	eax
	call	_pkcs7_decrypt_rinfo
	add	esp, 16					; 00000010H
	test	eax, eax
	js	SHORT $LN85@PKCS7_data
; Line 580
	call	_ERR_clear_error
	mov	esi, DWORD PTR _eklen$[esp+68]
	mov	edi, DWORD PTR _ek$[esp+68]
	mov	DWORD PTR _eklen$1$[esp+68], esi
	jmp	SHORT $LN35@PKCS7_data
$LN83@PKCS7_data:
; Line 569
	push	DWORD PTR _rsk$1$[esp+68]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN90@PKCS7_data
	mov	edi, DWORD PTR _rsk$1$[esp+68]
$LL12@PKCS7_data:
; Line 570
	push	esi
	push	edi
	call	_sk_value
; Line 572
	push	DWORD PTR _pkey$[esp+72]
	push	eax
	lea	eax, DWORD PTR _eklen$[esp+84]
	push	eax
	lea	eax, DWORD PTR _ek$[esp+88]
	push	eax
	call	_pkcs7_decrypt_rinfo
	add	esp, 24					; 00000018H
	test	eax, eax
	js	SHORT $LN85@PKCS7_data
; Line 574
	call	_ERR_clear_error
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL12@PKCS7_data
; Line 569
	mov	esi, DWORD PTR _eklen$[esp+68]
	mov	edi, DWORD PTR _ek$[esp+68]
	mov	DWORD PTR _eklen$1$[esp+68], esi
	jmp	SHORT $LN35@PKCS7_data
$LN85@PKCS7_data:
; Line 667
	mov	edi, DWORD PTR _ek$[esp+68]
	mov	esi, DWORD PTR _eklen$[esp+68]
	jmp	$err$99
$LN90@PKCS7_data:
	xor	esi, esi
$LN35@PKCS7_data:
; Line 584
	lea	eax, DWORD PTR _evp_ctx$[esp+68]
	mov	DWORD PTR _evp_ctx$[esp+68], 0
	push	eax
	push	0
	push	129					; 00000081H
	push	DWORD PTR _etmp$1$[esp+80]
	call	_BIO_ctrl
; Line 585
	push	0
	push	0
	push	0
	push	0
	push	DWORD PTR _evp_cipher$1$[esp+100]
	push	DWORD PTR _evp_ctx$[esp+104]
	call	_EVP_CipherInit_ex
	add	esp, 40					; 00000028H
	test	eax, eax
	jle	$err$99
; Line 587
	mov	eax, DWORD PTR _enc_alg$1$[esp+68]
	push	DWORD PTR [eax+4]
	push	DWORD PTR _evp_ctx$[esp+72]
	call	_EVP_CIPHER_asn1_to_param
	add	esp, 8
	test	eax, eax
	js	$err$99
; Line 590
	push	DWORD PTR _evp_ctx$[esp+68]
	call	_EVP_CIPHER_CTX_key_length
; Line 591
	push	591					; 0000024fH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	eax
	mov	DWORD PTR _tkeylen$1$[esp+84], eax
	call	_CRYPTO_malloc
	add	esp, 16					; 00000010H
	mov	DWORD PTR _tkey$1$[esp+68], eax
; Line 592
	test	eax, eax
	je	$err$99
; Line 594
	push	eax
	push	DWORD PTR _evp_ctx$[esp+72]
	call	_EVP_CIPHER_CTX_rand_key
	add	esp, 8
	test	eax, eax
	jle	$err$99
; Line 596
	test	edi, edi
	jne	SHORT $LN42@PKCS7_data
; Line 597
	mov	edi, DWORD PTR _tkey$1$[esp+68]
; Line 598
	mov	esi, DWORD PTR _tkeylen$1$[esp+68]
	mov	DWORD PTR _eklen$1$[esp+68], esi
; Line 599
	mov	DWORD PTR _tkey$1$[esp+68], 0
$LN42@PKCS7_data:
; Line 602
	push	DWORD PTR _evp_ctx$[esp+68]
	call	_EVP_CIPHER_CTX_key_length
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN44@PKCS7_data
; Line 608
	push	esi
	push	DWORD PTR _evp_ctx$[esp+72]
	call	_EVP_CIPHER_CTX_set_key_length
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN44@PKCS7_data
; Line 610
	push	esi
	push	edi
	call	_OPENSSL_cleanse
; Line 611
	push	edi
	call	_CRYPTO_free
; Line 612
	mov	edi, DWORD PTR _tkey$1$[esp+80]
	add	esp, 12					; 0000000cH
; Line 613
	mov	esi, DWORD PTR _tkeylen$1$[esp+68]
	mov	DWORD PTR _eklen$1$[esp+68], esi
; Line 614
	mov	DWORD PTR _tkey$1$[esp+68], 0
$LN44@PKCS7_data:
; Line 618
	call	_ERR_clear_error
; Line 619
	push	0
	push	0
	push	edi
	push	0
	push	0
	push	DWORD PTR _evp_ctx$[esp+88]
	call	_EVP_CipherInit_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	$err$99
; Line 622
	test	edi, edi
	je	SHORT $LN46@PKCS7_data
; Line 623
	push	esi
	push	edi
	call	_OPENSSL_cleanse
; Line 624
	push	edi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
; Line 625
	xor	edi, edi
$LN46@PKCS7_data:
; Line 627
	mov	esi, DWORD PTR _tkey$1$[esp+68]
	test	esi, esi
	je	SHORT $LN47@PKCS7_data
; Line 628
	push	DWORD PTR _tkeylen$1$[esp+68]
	push	esi
	call	_OPENSSL_cleanse
; Line 629
	push	esi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
; Line 630
	mov	DWORD PTR _tkey$1$[esp+68], 0
$LN47@PKCS7_data:
; Line 633
	test	ebx, ebx
	jne	SHORT $LN48@PKCS7_data
; Line 634
	mov	ebx, DWORD PTR _etmp$1$[esp+68]
	jmp	SHORT $LN49@PKCS7_data
$LN48@PKCS7_data:
; Line 636
	push	DWORD PTR _etmp$1$[esp+68]
	push	ebx
	call	_BIO_push
	add	esp, 8
$LN49@PKCS7_data:
; Line 637
	mov	DWORD PTR _etmp$1$[esp+68], 0
$LN29@PKCS7_data:
; Line 640
	mov	eax, DWORD PTR _in_bio$[esp+64]
	test	eax, eax
	jne	SHORT $LN55@PKCS7_data
; Line 655
	mov	ecx, DWORD PTR _data_body$1$[esp+64]
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jle	SHORT $LN52@PKCS7_data
; Line 656
	push	eax
	push	DWORD PTR [ecx+8]
	call	_BIO_new_mem_buf
	add	esp, 8
	mov	DWORD PTR _bio$1$[esp+68], eax
	jmp	SHORT $LN53@PKCS7_data
$LN52@PKCS7_data:
; Line 658
	call	_BIO_s_mem
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio$1$[esp+68], eax
; Line 659
	test	eax, eax
	je	SHORT $LN89@PKCS7_data
; Line 661
	push	0
	push	0
	push	130					; 00000082H
	push	eax
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio$1$[esp+84]
	add	esp, 16					; 00000010H
$LN53@PKCS7_data:
; Line 663
	test	eax, eax
	je	SHORT $LN89@PKCS7_data
$LN55@PKCS7_data:
; Line 667
	push	eax
	push	ebx
	call	_BIO_push
	add	esp, 8
; Line 690
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 691
	add	esp, 52					; 00000034H
	ret	0
$LN89@PKCS7_data:
	mov	esi, DWORD PTR _eklen$1$[esp+68]
$err$99:
; Line 672
	test	edi, edi
	je	SHORT $LN57@PKCS7_data
; Line 673
	push	esi
	push	edi
	call	_OPENSSL_cleanse
; Line 674
	push	edi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN57@PKCS7_data:
; Line 676
	mov	esi, DWORD PTR _tkey$1$[esp+68]
	test	esi, esi
	je	SHORT $LN91@PKCS7_data
; Line 677
	push	DWORD PTR _tkeylen$1$[esp+68]
	push	esi
	call	_OPENSSL_cleanse
; Line 678
	push	esi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN91@PKCS7_data:
	mov	esi, DWORD PTR _etmp$1$[esp+68]
$LN58@PKCS7_data:
; Line 680
	test	ebx, ebx
	je	SHORT $LN59@PKCS7_data
; Line 681
	push	ebx
	call	_BIO_free_all
	add	esp, 4
$LN59@PKCS7_data:
; Line 682
	test	ebp, ebp
	je	SHORT $LN60@PKCS7_data
; Line 683
	push	ebp
	call	_BIO_free_all
	add	esp, 4
$LN60@PKCS7_data:
; Line 684
	test	esi, esi
	je	SHORT $LN61@PKCS7_data
; Line 685
	push	esi
	call	_BIO_free_all
	add	esp, 4
$LN61@PKCS7_data:
; Line 686
	mov	eax, DWORD PTR _bio$1$[esp+68]
	test	eax, eax
	je	SHORT $LN62@PKCS7_data
; Line 687
	push	eax
	call	_BIO_free_all
	add	esp, 4
$LN62@PKCS7_data:
; Line 688
	pop	edi
	pop	esi
	xor	ebx, ebx
	pop	ebp
; Line 690
	mov	eax, ebx
	pop	ebx
; Line 691
	add	esp, 52					; 00000034H
	ret	0
_PKCS7_dataDecode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_dataFinal
_TEXT	SEGMENT
_abuf$1$ = -116						; size = 4
_cont$1 = -116						; size = 4
_md_len$2 = -116					; size = 4
_mdc$ = -112						; size = 4
_bio$GSCopy$1$ = -108					; size = 4
_abuflen$3 = -104					; size = 4
_si_sk$1$ = -100					; size = 4
_ret$1$ = -96						; size = 4
_ctx_tmp$ = -92						; size = 24
_md_data$4 = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_p7$ = 8						; size = 4
_bio$ = 12						; size = 4
_PKCS7_dataFinal PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 745
	mov	eax, 116				; 00000074H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+116], eax
	push	esi
	mov	esi, DWORD PTR _bio$[esp+116]
	push	edi
	mov	edi, DWORD PTR _p7$[esp+120]
	mov	DWORD PTR _bio$GSCopy$1$[esp+124], esi
; Line 746
	mov	DWORD PTR _ret$1$[esp+124], 0
; Line 755
	test	edi, edi
	jne	SHORT $LN7@PKCS7_data
; Line 756
	push	756					; 000002f4H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	143					; 0000008fH
$LN52@PKCS7_data:
	push	128					; 00000080H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 757
	xor	eax, eax
	pop	edi
	pop	esi
; Line 909
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	ret	0
$LN7@PKCS7_data:
; Line 760
	cmp	DWORD PTR [edi+20], 0
	jne	SHORT $LN8@PKCS7_data
; Line 761
	push	761					; 000002f9H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	122					; 0000007aH
; Line 762
	jmp	SHORT $LN52@PKCS7_data
$LN8@PKCS7_data:
	push	ebx
; Line 765
	lea	eax, DWORD PTR _ctx_tmp$[esp+128]
	push	ebp
	push	eax
	call	_EVP_MD_CTX_init
; Line 766
	push	DWORD PTR [edi+16]
	call	_OBJ_obj2nid
	mov	ebx, eax
; Line 767
	mov	DWORD PTR [edi+8], 0
	add	esp, 8
; Line 769
	lea	eax, DWORD PTR [ebx-21]
	cmp	eax, 4
	ja	$LN20@PKCS7_data
	jmp	DWORD PTR $LN54@PKCS7_data[eax*4]
$LN9@PKCS7_data:
; Line 771
	mov	ebp, DWORD PTR [edi+20]
; Line 772
	jmp	$LN21@PKCS7_data
$LN10@PKCS7_data:
; Line 775
	mov	eax, DWORD PTR [edi+20]
	mov	esi, DWORD PTR [eax+16]
; Line 776
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR _si_sk$1$[esp+132], esi
	mov	ebp, DWORD PTR [eax+8]
; Line 777
	test	ebp, ebp
	jne	$LN19@PKCS7_data
; Line 778
	push	4
	call	_ASN1_STRING_type_new
	mov	ebp, eax
	add	esp, 4
; Line 779
	test	ebp, ebp
	jne	SHORT $LN12@PKCS7_data
; Line 780
	push	780					; 0000030cH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	65					; 00000041H
; Line 781
	jmp	$LN51@PKCS7_data
$LN12@PKCS7_data:
; Line 783
	mov	eax, DWORD PTR [edi+20]
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [eax+8], ebp
; Line 785
	jmp	$LN19@PKCS7_data
$LN13@PKCS7_data:
; Line 788
	mov	eax, DWORD PTR [edi+20]
	mov	eax, DWORD PTR [eax+8]
	mov	ebp, DWORD PTR [eax+8]
; Line 789
	test	ebp, ebp
	jne	$LN21@PKCS7_data
; Line 790
	push	4
	call	_ASN1_STRING_type_new
	mov	ebp, eax
	add	esp, 4
; Line 791
	test	ebp, ebp
	jne	SHORT $LN15@PKCS7_data
; Line 792
	push	792					; 00000318H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	65					; 00000041H
; Line 793
	jmp	$LN51@PKCS7_data
$LN15@PKCS7_data:
; Line 795
	mov	eax, DWORD PTR [edi+20]
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [eax+8], ebp
; Line 797
	jmp	$LN21@PKCS7_data
$LN16@PKCS7_data:
; Line 799
	mov	eax, DWORD PTR [edi+20]
	mov	esi, DWORD PTR [eax+16]
; Line 800
	push	DWORD PTR [eax+20]
	mov	DWORD PTR _si_sk$1$[esp+136], esi
	call	_PKCS7_get_octet_string
	mov	ebp, eax
; Line 802
	mov	eax, DWORD PTR [edi+20]
	mov	eax, DWORD PTR [eax+20]
	push	DWORD PTR [eax+16]
	call	_OBJ_obj2nid
	add	esp, 8
	cmp	eax, 21					; 00000015H
	jne	SHORT $LN19@PKCS7_data
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN19@PKCS7_data
; Line 803
	push	ebp
	call	_ASN1_STRING_free
; Line 805
	mov	eax, DWORD PTR [edi+20]
	add	esp, 4
	xor	ebp, ebp
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [eax+20], ebp
$LN19@PKCS7_data:
; Line 824
	test	esi, esi
	je	$LN50@PKCS7_data
; Line 825
	push	esi
	xor	ebx, ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN31@PKCS7_data
	npad	5
$LL6@PKCS7_data:
; Line 826
	push	ebx
	push	esi
	call	_sk_value
	mov	esi, eax
	add	esp, 8
; Line 827
	cmp	DWORD PTR [esi+28], 0
	je	$LN4@PKCS7_data
; Line 830
	mov	eax, DWORD PTR [esi+8]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
; Line 834
	push	eax
	push	DWORD PTR _bio$GSCopy$1$[esp+140]
	lea	eax, DWORD PTR _mdc$[esp+144]
	push	eax
	call	_PKCS7_find_digest
	add	esp, 16					; 00000010H
; Line 836
	test	eax, eax
	je	$err$55
; Line 842
	push	DWORD PTR _mdc$[esp+132]
	lea	eax, DWORD PTR _ctx_tmp$[esp+136]
	push	eax
	call	_EVP_MD_CTX_copy_ex
	add	esp, 8
	test	eax, eax
	je	$err$55
; Line 851
	push	DWORD PTR [esi+12]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN26@PKCS7_data
; Line 852
	lea	eax, DWORD PTR _ctx_tmp$[esp+132]
	push	eax
	push	esi
	call	_do_pkcs7_signed_attrib
	add	esp, 8
	test	eax, eax
	je	$err$55
; Line 854
	jmp	SHORT $LN4@PKCS7_data
$LN26@PKCS7_data:
; Line 857
	push	DWORD PTR [esi+28]
	call	_EVP_PKEY_size
; Line 858
	push	858					; 0000035aH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	eax
	mov	DWORD PTR _abuflen$3[esp+148], eax
	call	_CRYPTO_malloc
	add	esp, 16					; 00000010H
	mov	DWORD PTR _abuf$1$[esp+132], eax
; Line 859
	test	eax, eax
	je	$err$55
; Line 862
	push	DWORD PTR [esi+28]
	lea	ecx, DWORD PTR _abuflen$3[esp+136]
	push	ecx
	push	eax
	lea	eax, DWORD PTR _ctx_tmp$[esp+144]
	push	eax
	call	_EVP_SignFinal
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN45@PKCS7_data
; Line 866
	push	DWORD PTR _abuflen$3[esp+132]
	push	DWORD PTR _abuf$1$[esp+136]
	push	DWORD PTR [esi+20]
	call	_ASN1_STRING_set0
	add	esp, 12					; 0000000cH
$LN4@PKCS7_data:
; Line 825
	mov	esi, DWORD PTR _si_sk$1$[esp+132]
	inc	ebx
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL6@PKCS7_data
	jmp	$LN31@PKCS7_data
$LN45@PKCS7_data:
; Line 863
	push	863					; 0000035fH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	6
; Line 864
	jmp	$LN51@PKCS7_data
$LN18@PKCS7_data:
; Line 810
	mov	eax, DWORD PTR [edi+20]
	push	DWORD PTR [eax+8]
	call	_PKCS7_get_octet_string
	mov	ebp, eax
; Line 812
	mov	eax, DWORD PTR [edi+20]
	mov	eax, DWORD PTR [eax+8]
	push	DWORD PTR [eax+16]
	call	_OBJ_obj2nid
	add	esp, 8
	cmp	eax, 21					; 00000015H
	jne	SHORT $LN21@PKCS7_data
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN21@PKCS7_data
; Line 813
	push	ebp
	call	_ASN1_STRING_free
; Line 815
	mov	eax, DWORD PTR [edi+20]
	add	esp, 4
	xor	ebp, ebp
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [eax+20], ebp
	jmp	SHORT $LN21@PKCS7_data
$LN50@PKCS7_data:
	mov	esi, DWORD PTR _bio$GSCopy$1$[esp+132]
$LN21@PKCS7_data:
; Line 869
	cmp	ebx, 25					; 00000019H
	jne	SHORT $LN31@PKCS7_data
; Line 872
	mov	eax, DWORD PTR [edi+20]
	mov	eax, DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	push	eax
	lea	eax, DWORD PTR _mdc$[esp+140]
	push	esi
	push	eax
	call	_PKCS7_find_digest
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$55
; Line 875
	lea	eax, DWORD PTR _md_len$2[esp+132]
	push	eax
	lea	eax, DWORD PTR _md_data$4[esp+136]
	push	eax
	push	DWORD PTR _mdc$[esp+140]
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$55
; Line 877
	push	DWORD PTR _md_len$2[esp+132]
	lea	eax, DWORD PTR _md_data$4[esp+136]
	push	eax
	mov	eax, DWORD PTR [edi+20]
	push	DWORD PTR [eax+12]
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
$LN31@PKCS7_data:
; Line 880
	push	DWORD PTR [edi+16]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 22					; 00000016H
	jne	SHORT $LN35@PKCS7_data
	push	0
	push	0
	push	2
	push	edi
	call	_PKCS7_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN37@PKCS7_data
$LN35@PKCS7_data:
; Line 885
	test	ebp, ebp
	je	$err$55
; Line 887
	test	BYTE PTR [ebp+12], 16			; 00000010H
	jne	SHORT $LN37@PKCS7_data
; Line 890
	push	1025					; 00000401H
	push	DWORD PTR _bio$GSCopy$1$[esp+136]
	call	_BIO_find_type
	mov	edi, eax
	add	esp, 8
; Line 891
	test	edi, edi
	jne	SHORT $LN38@PKCS7_data
; Line 892
	push	892					; 0000037cH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	107					; 0000006bH
; Line 893
	jmp	SHORT $LN51@PKCS7_data
$LN38@PKCS7_data:
; Line 895
	lea	eax, DWORD PTR _cont$1[esp+132]
	push	eax
	push	0
	push	3
	push	edi
	call	_BIO_ctrl
; Line 900
	push	512					; 00000200H
	push	edi
	mov	esi, eax
	call	_BIO_set_flags
; Line 901
	push	0
	push	0
	push	130					; 00000082H
	push	edi
	call	_BIO_ctrl
; Line 902
	push	esi
	push	DWORD PTR _cont$1[esp+176]
	push	ebp
	call	_ASN1_STRING_set0
	add	esp, 52					; 00000034H
$LN37@PKCS7_data:
; Line 905
	mov	DWORD PTR _ret$1$[esp+132], 1
	jmp	SHORT $err$55
$LN20@PKCS7_data:
; Line 820
	push	820					; 00000334H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	112					; 00000070H
$LN51@PKCS7_data:
	push	128					; 00000080H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$55:
; Line 907
	lea	eax, DWORD PTR _ctx_tmp$[esp+132]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 909
	mov	ecx, DWORD PTR __$ArrayPad$[esp+136]
	add	esp, 4
	mov	eax, DWORD PTR _ret$1$[esp+132]
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	ret	0
	npad	2
$LN54@PKCS7_data:
	DD	$LN9@PKCS7_data
	DD	$LN16@PKCS7_data
	DD	$LN13@PKCS7_data
	DD	$LN10@PKCS7_data
	DD	$LN18@PKCS7_data
_PKCS7_dataFinal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_dataInit
_TEXT	SEGMENT
_ctx$1 = -116						; size = 4
_out$ = -116						; size = 4
_evp_cipher$1$ = -112					; size = 4
_btmp$1$ = -112						; size = 4
_ivlen$1$ = -108					; size = 4
_xa$1$ = -108						; size = 4
_xalg$1$ = -104						; size = 4
_rsk$1$ = -100						; size = 4
_os$1$ = -96						; size = 4
_keylen$1$ = -92					; size = 4
_p7$GSCopy$1$ = -88					; size = 4
_iv$2 = -84						; size = 16
_key$3 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_p7$ = 8						; size = 4
_bio$ = 12						; size = 4
_PKCS7_dataInit PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 253
	mov	eax, 116				; 00000074H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+116], eax
	push	ebx
	mov	ebx, DWORD PTR _bio$[esp+116]
; Line 257
	xor	eax, eax
	push	ebp
	push	esi
	xor	ecx, ecx
	mov	DWORD PTR _evp_cipher$1$[esp+128], eax
	push	edi
	mov	edi, DWORD PTR _p7$[esp+128]
	xor	esi, esi
; Line 258
	xor	ebp, ebp
	mov	DWORD PTR _p7$GSCopy$1$[esp+132], edi
	mov	DWORD PTR _out$[esp+132], esi
	mov	DWORD PTR _xa$1$[esp+132], ecx
; Line 259
	mov	DWORD PTR _rsk$1$[esp+132], ecx
; Line 260
	mov	DWORD PTR _xalg$1$[esp+132], eax
; Line 262
	mov	DWORD PTR _os$1$[esp+132], eax
; Line 264
	test	edi, edi
	jne	SHORT $LN10@PKCS7_data
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	143					; 0000008fH
	push	105					; 00000069H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 266
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 403
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	ret	0
$LN10@PKCS7_data:
; Line 278
	cmp	DWORD PTR [edi+20], eax
	jne	SHORT $LN11@PKCS7_data
; Line 279
	push	279					; 00000117H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	122					; 0000007aH
	push	105					; 00000069H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 280
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 403
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	ret	0
$LN11@PKCS7_data:
; Line 283
	push	DWORD PTR [edi+16]
	call	_OBJ_obj2nid
; Line 286
	add	eax, -21				; ffffffebH
	mov	DWORD PTR [edi+8], esi
	add	esp, 4
	cmp	eax, 4
	ja	$LN19@PKCS7_data
	jmp	DWORD PTR $LN66@PKCS7_data[eax*4]
$LN12@PKCS7_data:
; Line 288
	mov	eax, DWORD PTR [edi+20]
	mov	ebp, DWORD PTR [eax+4]
; Line 289
	push	DWORD PTR [eax+20]
; Line 290
	jmp	SHORT $LN62@PKCS7_data
$LN13@PKCS7_data:
; Line 292
	mov	eax, DWORD PTR [edi+20]
	mov	ecx, DWORD PTR [eax+24]
; Line 293
	mov	ebp, DWORD PTR [eax+4]
; Line 294
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR _rsk$1$[esp+132], ecx
	mov	ecx, DWORD PTR [eax+4]
; Line 295
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _xalg$1$[esp+132], ecx
	mov	DWORD PTR _evp_cipher$1$[esp+132], eax
; Line 296
	test	eax, eax
	jne	SHORT $LN18@PKCS7_data
; Line 297
	push	297					; 00000129H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	116					; 00000074H
; Line 298
	jmp	$LN63@PKCS7_data
$LN15@PKCS7_data:
; Line 302
	mov	eax, DWORD PTR [edi+20]
	mov	ecx, DWORD PTR [eax+4]
; Line 303
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _rsk$1$[esp+132], ecx
	mov	ecx, DWORD PTR [eax+4]
; Line 304
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _xalg$1$[esp+132], ecx
	mov	DWORD PTR _evp_cipher$1$[esp+132], eax
; Line 305
	test	eax, eax
	jne	SHORT $LN18@PKCS7_data
; Line 306
	push	306					; 00000132H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	116					; 00000074H
; Line 307
	jmp	$LN63@PKCS7_data
$LN17@PKCS7_data:
; Line 311
	mov	eax, DWORD PTR [edi+20]
	mov	ecx, DWORD PTR [eax+4]
; Line 312
	push	DWORD PTR [eax+8]
	mov	DWORD PTR _xa$1$[esp+136], ecx
$LN62@PKCS7_data:
	call	_PKCS7_get_octet_string
	mov	DWORD PTR _os$1$[esp+136], eax
	add	esp, 4
$LN18@PKCS7_data:
; Line 321
	push	ebp
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN5@PKCS7_data
$LL6@PKCS7_data:
; Line 322
	push	edi
	push	ebp
	call	_sk_value
	push	eax
	lea	eax, DWORD PTR _out$[esp+144]
	push	eax
	call	_PKCS7_bio_add_digest
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN59@PKCS7_data
; Line 321
	push	ebp
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL6@PKCS7_data
	mov	esi, DWORD PTR _out$[esp+132]
$LN5@PKCS7_data:
; Line 325
	mov	eax, DWORD PTR _xa$1$[esp+132]
	test	eax, eax
	je	SHORT $LN21@PKCS7_data
	push	eax
	lea	eax, DWORD PTR _out$[esp+136]
	push	eax
	call	_PKCS7_bio_add_digest
	add	esp, 8
	test	eax, eax
	je	SHORT $LN59@PKCS7_data
	mov	esi, DWORD PTR _out$[esp+132]
$LN21@PKCS7_data:
; Line 328
	mov	edi, DWORD PTR _evp_cipher$1$[esp+132]
	test	edi, edi
	je	$LN61@PKCS7_data
; Line 334
	call	_BIO_f_cipher
	push	eax
	call	_BIO_new
	mov	ebp, eax
	add	esp, 4
	mov	DWORD PTR _btmp$1$[esp+132], ebp
	test	ebp, ebp
	jne	SHORT $LN23@PKCS7_data
; Line 335
	push	335					; 0000014fH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	32					; 00000020H
	push	105					; 00000069H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 336
	jmp	$err$67
$LN59@PKCS7_data:
; Line 386
	mov	esi, DWORD PTR _out$[esp+132]
	xor	ebp, ebp
	jmp	$err$67
$LN23@PKCS7_data:
; Line 338
	lea	eax, DWORD PTR _ctx$1[esp+132]
	push	eax
	push	0
	push	129					; 00000081H
	push	ebp
	call	_BIO_ctrl
; Line 339
	push	edi
	call	_EVP_CIPHER_key_length
; Line 340
	push	edi
	mov	DWORD PTR _keylen$1$[esp+156], eax
	call	_EVP_CIPHER_iv_length
; Line 341
	push	edi
	mov	DWORD PTR _ivlen$1$[esp+160], eax
	call	_EVP_CIPHER_type
	push	eax
	call	_OBJ_nid2obj
	mov	ecx, DWORD PTR _xalg$1$[esp+164]
	add	esp, 32					; 00000020H
	mov	DWORD PTR [ecx], eax
; Line 342
	mov	eax, DWORD PTR _ivlen$1$[esp+132]
	test	eax, eax
	jle	SHORT $LN25@PKCS7_data
; Line 343
	push	eax
	lea	eax, DWORD PTR _iv$2[esp+136]
	push	eax
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	jle	$err$67
$LN25@PKCS7_data:
; Line 345
	push	1
	push	0
	push	0
	push	0
	push	edi
	push	DWORD PTR _ctx$1[esp+152]
	call	_EVP_CipherInit_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	$err$67
; Line 347
	lea	eax, DWORD PTR _key$3[esp+132]
	push	eax
	push	DWORD PTR _ctx$1[esp+136]
	call	_EVP_CIPHER_CTX_rand_key
	add	esp, 8
	test	eax, eax
	jle	$err$67
; Line 349
	push	1
	lea	eax, DWORD PTR _iv$2[esp+136]
	push	eax
	lea	eax, DWORD PTR _key$3[esp+140]
	push	eax
	push	0
	push	0
	push	DWORD PTR _ctx$1[esp+152]
	call	_EVP_CipherInit_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	$err$67
; Line 352
	mov	eax, DWORD PTR _ivlen$1$[esp+132]
	test	eax, eax
	jle	SHORT $LN32@PKCS7_data
; Line 353
	mov	edi, DWORD PTR _xalg$1$[esp+132]
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN31@PKCS7_data
; Line 354
	call	_ASN1_TYPE_new
	mov	DWORD PTR [edi+4], eax
; Line 355
	test	eax, eax
	je	$err$67
$LN31@PKCS7_data:
; Line 358
	push	DWORD PTR [edi+4]
	push	DWORD PTR _ctx$1[esp+136]
	call	_EVP_CIPHER_param_to_asn1
	add	esp, 8
	test	eax, eax
	js	$err$67
$LN32@PKCS7_data:
; Line 363
	mov	ebp, DWORD PTR _rsk$1$[esp+132]
	xor	edi, edi
	push	ebp
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN8@PKCS7_data
	npad	4
$LL9@PKCS7_data:
; Line 364
	push	edi
	push	ebp
	call	_sk_value
; Line 365
	push	DWORD PTR _keylen$1$[esp+140]
	lea	ecx, DWORD PTR _key$3[esp+144]
	push	ecx
	push	eax
	call	_pkcs7_encode_rinfo
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	$LN60@PKCS7_data
; Line 363
	push	ebp
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL9@PKCS7_data
$LN8@PKCS7_data:
; Line 368
	push	DWORD PTR _keylen$1$[esp+132]
	lea	eax, DWORD PTR _key$3[esp+136]
	push	eax
	call	_OPENSSL_cleanse
	add	esp, 8
; Line 370
	test	esi, esi
	jne	SHORT $LN34@PKCS7_data
; Line 371
	mov	esi, DWORD PTR _btmp$1$[esp+132]
	jmp	SHORT $LN61@PKCS7_data
$LN34@PKCS7_data:
; Line 373
	mov	eax, DWORD PTR _btmp$1$[esp+132]
	push	eax
	push	esi
	call	_BIO_push
	add	esp, 8
$LN61@PKCS7_data:
; Line 377
	xor	ebp, ebp
	test	ebx, ebx
	jne	SHORT $LN40@PKCS7_data
; Line 378
	mov	edi, DWORD PTR _p7$GSCopy$1$[esp+132]
	push	DWORD PTR [edi+16]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 22					; 00000016H
	jne	SHORT $LN37@PKCS7_data
	push	ebx
	push	ebx
	push	2
	push	edi
	call	_PKCS7_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN37@PKCS7_data
; Line 379
	call	_BIO_s_null
	push	eax
	call	_BIO_new
	add	esp, 4
	jmp	SHORT $LN64@PKCS7_data
$LN37@PKCS7_data:
; Line 380
	mov	ecx, DWORD PTR _os$1$[esp+132]
	test	ecx, ecx
	je	SHORT $LN58@PKCS7_data
	mov	eax, DWORD PTR [ecx]
	test	eax, eax
	jle	SHORT $LN58@PKCS7_data
; Line 381
	push	eax
	push	DWORD PTR [ecx+8]
	call	_BIO_new_mem_buf
	add	esp, 8
$LN64@PKCS7_data:
	mov	ebx, eax
; Line 382
	test	ebx, ebx
	jne	SHORT $LN40@PKCS7_data
$LN58@PKCS7_data:
; Line 383
	call	_BIO_s_mem
	push	eax
	call	_BIO_new
	mov	ebx, eax
	add	esp, 4
; Line 384
	test	ebx, ebx
	je	SHORT $err$67
; Line 386
	push	0
	push	0
	push	130					; 00000082H
	push	ebx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
$LN40@PKCS7_data:
; Line 389
	test	esi, esi
	je	SHORT $LN42@PKCS7_data
; Line 390
	push	ebx
	push	esi
	call	_BIO_push
	add	esp, 8
; Line 402
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 403
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	ret	0
$LN60@PKCS7_data:
	mov	ebp, DWORD PTR _btmp$1$[esp+132]
$err$67:
; Line 396
	test	esi, esi
	je	SHORT $LN45@PKCS7_data
; Line 397
	push	esi
	call	_BIO_free_all
	add	esp, 4
$LN45@PKCS7_data:
; Line 398
	test	ebp, ebp
	je	SHORT $LN46@PKCS7_data
; Line 399
	push	ebp
	call	_BIO_free_all
	add	esp, 4
	jmp	SHORT $LN46@PKCS7_data
$LN42@PKCS7_data:
; Line 392
	mov	esi, ebx
	pop	edi
; Line 402
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 403
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	ret	0
$LN19@PKCS7_data:
; Line 317
	push	317					; 0000013dH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	112					; 00000070H
$LN63@PKCS7_data:
	push	105					; 00000069H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN46@PKCS7_data:
; Line 403
	mov	ecx, DWORD PTR __$ArrayPad$[esp+132]
	xor	esi, esi
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 116				; 00000074H
	ret	0
	npad	3
$LN66@PKCS7_data:
	DD	$LN18@PKCS7_data
	DD	$LN12@PKCS7_data
	DD	$LN15@PKCS7_data
	DD	$LN13@PKCS7_data
	DD	$LN17@PKCS7_data
_PKCS7_dataInit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_signatureVerify
_TEXT	SEGMENT
_mdc$ = -112						; size = 4
_abuf$1 = -108						; size = 4
_md_len$2 = -104					; size = 4
_si$GSCopy$1$ = -100					; size = 4
_x509$GSCopy$1$ = -96					; size = 4
_mdc_tmp$ = -92						; size = 24
_md_dat$3 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_bio$ = 8						; size = 4
_p7$ = 12						; size = 4
_si$ = 16						; size = 4
_x509$ = 20						; size = 4
_PKCS7_signatureVerify PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 1029
	mov	eax, 112				; 00000070H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+112], eax
	mov	eax, DWORD PTR _x509$[esp+108]
	push	ebx
	mov	ebx, DWORD PTR _p7$[esp+112]
	push	ebp
	mov	ebp, DWORD PTR _si$[esp+116]
	push	esi
	mov	esi, DWORD PTR _bio$[esp+120]
	mov	DWORD PTR _x509$GSCopy$1$[esp+124], eax
; Line 1038
	lea	eax, DWORD PTR _mdc_tmp$[esp+124]
	push	edi
	push	eax
	mov	DWORD PTR _si$GSCopy$1$[esp+132], ebp
	xor	edi, edi
	call	_EVP_MD_CTX_init
; Line 1040
	push	DWORD PTR [ebx+16]
	call	_OBJ_obj2nid
	add	esp, 8
	cmp	eax, 22					; 00000016H
	je	SHORT $LN5@PKCS7_sign
	push	DWORD PTR [ebx+16]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 24					; 00000018H
	je	SHORT $LN5@PKCS7_sign
; Line 1041
	push	1041					; 00000411H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	114					; 00000072H
; Line 1042
	jmp	$LN40@PKCS7_sign
$LN5@PKCS7_sign:
; Line 1045
	mov	eax, DWORD PTR [ebp+8]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	add	esp, 4
	mov	ebx, eax
; Line 1049
	test	esi, esi
	je	SHORT $LN7@PKCS7_sign
	npad	6
$LL2@PKCS7_sign:
	push	520					; 00000208H
	push	esi
	call	_BIO_find_type
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	SHORT $LN7@PKCS7_sign
; Line 1055
	lea	eax, DWORD PTR _mdc$[esp+128]
	push	eax
	push	0
	push	120					; 00000078H
	push	esi
	call	_BIO_ctrl
; Line 1056
	mov	eax, DWORD PTR _mdc$[esp+144]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN29@PKCS7_sign
; Line 1060
	push	eax
	call	_EVP_MD_CTX_md
	push	eax
	call	_EVP_MD_type
	add	esp, 8
	cmp	eax, ebx
	je	SHORT $LN30@PKCS7_sign
; Line 1066
	push	DWORD PTR _mdc$[esp+128]
	call	_EVP_MD_CTX_md
	push	eax
	call	_EVP_MD_pkey_type
	add	esp, 8
	cmp	eax, ebx
	je	SHORT $LN30@PKCS7_sign
; Line 1068
	push	esi
	call	_BIO_next
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LL2@PKCS7_sign
$LN7@PKCS7_sign:
; Line 1051
	push	1052					; 0000041cH
$LN41@PKCS7_sign:
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	108					; 0000006cH
$LN40@PKCS7_sign:
	push	113					; 00000071H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$44:
; Line 1143
	lea	eax, DWORD PTR _mdc_tmp$[esp+128]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 1145
	mov	ecx, DWORD PTR __$ArrayPad$[esp+132]
	add	esp, 4
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 112				; 00000070H
	ret	0
$LN30@PKCS7_sign:
; Line 1075
	push	DWORD PTR _mdc$[esp+128]
	lea	eax, DWORD PTR _mdc_tmp$[esp+132]
	push	eax
	call	_EVP_MD_CTX_copy_ex
	add	esp, 8
	test	eax, eax
	je	SHORT $err$44
; Line 1078
	mov	ebp, DWORD PTR [ebp+12]
; Line 1079
	test	ebp, ebp
	je	$LN12@PKCS7_sign
	push	ebp
	call	_sk_num
	add	esp, 4
	test	eax, eax
	je	$LN12@PKCS7_sign
; Line 1085
	lea	eax, DWORD PTR _md_len$2[esp+128]
	mov	DWORD PTR _abuf$1[esp+128], edi
	push	eax
	lea	eax, DWORD PTR _md_dat$3[esp+132]
	push	eax
	lea	eax, DWORD PTR _mdc_tmp$[esp+136]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$44
; Line 1201
	push	51					; 00000033H
	push	ebp
	call	_get_attribute
	add	esp, 8
	test	eax, eax
	je	$LN35@PKCS7_sign
; Line 1203
	mov	edx, DWORD PTR [eax+4]
; Line 1088
	test	edx, edx
	je	$LN35@PKCS7_sign
; Line 1093
	mov	ecx, DWORD PTR _md_len$2[esp+128]
	cmp	DWORD PTR [edx], ecx
	jne	$LN16@PKCS7_sign
	mov	edx, DWORD PTR [edx+8]
	lea	esi, DWORD PTR _md_dat$3[esp+128]
	sub	ecx, 4
	jb	SHORT $LN38@PKCS7_sign
	npad	3
$LL39@PKCS7_sign:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [esi]
	jne	SHORT $LN37@PKCS7_sign
	add	edx, 4
	add	esi, 4
	sub	ecx, 4
	jae	SHORT $LL39@PKCS7_sign
$LN38@PKCS7_sign:
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN36@PKCS7_sign
$LN37@PKCS7_sign:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [esi]
	jne	$LN16@PKCS7_sign
	cmp	ecx, -3					; fffffffdH
	je	SHORT $LN36@PKCS7_sign
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [esi+1]
	jne	$LN16@PKCS7_sign
	cmp	ecx, -2					; fffffffeH
	je	SHORT $LN36@PKCS7_sign
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [esi+2]
	jne	$LN16@PKCS7_sign
	cmp	ecx, -1
	je	SHORT $LN36@PKCS7_sign
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [esi+3]
	jne	$LN16@PKCS7_sign
$LN36@PKCS7_sign:
; Line 1111
	push	0
	push	ebx
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 8
	push	eax
	lea	eax, DWORD PTR _mdc_tmp$[esp+136]
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$44
; Line 1114
	call	_PKCS7_ATTR_VERIFY_it
	push	eax
	lea	eax, DWORD PTR _abuf$1[esp+132]
	push	eax
	push	ebp
	call	_ASN1_item_i2d
	add	esp, 12					; 0000000cH
; Line 1116
	test	eax, eax
	jg	SHORT $LN18@PKCS7_sign
; Line 1117
	push	1117					; 0000045dH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	13					; 0000000dH
	push	113					; 00000071H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1118
	or	edi, -1
; Line 1119
	jmp	$err$44
$LN18@PKCS7_sign:
; Line 1121
	push	eax
	push	DWORD PTR _abuf$1[esp+132]
	lea	eax, DWORD PTR _mdc_tmp$[esp+136]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$44
; Line 1124
	push	DWORD PTR _abuf$1[esp+128]
	call	_CRYPTO_free
	add	esp, 4
$LN12@PKCS7_sign:
; Line 1127
	mov	esi, DWORD PTR _si$GSCopy$1$[esp+128]
; Line 1128
	push	DWORD PTR _x509$GSCopy$1$[esp+128]
	mov	esi, DWORD PTR [esi+20]
	call	_X509_get_pubkey
	mov	edi, eax
	add	esp, 4
; Line 1129
	test	edi, edi
	je	SHORT $LN42@PKCS7_sign
; Line 1134
	push	edi
	push	DWORD PTR [esi]
	lea	eax, DWORD PTR _mdc_tmp$[esp+136]
	push	DWORD PTR [esi+8]
	push	eax
	call	_EVP_VerifyFinal
; Line 1135
	push	edi
	mov	esi, eax
	call	_EVP_PKEY_free
	add	esp, 20					; 00000014H
; Line 1136
	test	esi, esi
	jg	SHORT $LN21@PKCS7_sign
; Line 1137
	push	1137					; 00000471H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	105					; 00000069H
	push	113					; 00000071H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1138
	or	edi, -1
; Line 1139
	jmp	$err$44
$LN16@PKCS7_sign:
; Line 1106
	push	1106					; 00000452H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	101					; 00000065H
	push	113					; 00000071H
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN42@PKCS7_sign:
; Line 1107
	or	edi, -1
; Line 1108
	jmp	$err$44
$LN35@PKCS7_sign:
; Line 1089
	push	1090					; 00000442H
; Line 1091
	jmp	$LN41@PKCS7_sign
$LN21@PKCS7_sign:
; Line 1141
	mov	edi, 1
	jmp	$err$44
$LN29@PKCS7_sign:
; Line 1057
	push	1057					; 00000421H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	68					; 00000044H
; Line 1058
	jmp	$LN40@PKCS7_sign
_PKCS7_signatureVerify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_dataVerify
_TEXT	SEGMENT
_cert_store$ = 8					; size = 4
_ctx$ = 12						; size = 4
_bio$ = 16						; size = 4
_p7$ = 20						; size = 4
_si$ = 24						; size = 4
_PKCS7_dataVerify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 972
	push	esi
; Line 978
	mov	esi, DWORD PTR _p7$[esp]
	test	esi, esi
	jne	SHORT $LN2@PKCS7_data
; Line 979
	push	979					; 000003d3H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	143					; 0000008fH
	push	107					; 0000006bH
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 980
	xor	eax, eax
	pop	esi
; Line 1025
	ret	0
$LN2@PKCS7_data:
; Line 983
	cmp	DWORD PTR [esi+20], 0
	jne	SHORT $LN3@PKCS7_data
; Line 984
	push	984					; 000003d8H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	122					; 0000007aH
	push	107					; 0000006bH
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 985
	xor	eax, eax
	pop	esi
; Line 1025
	ret	0
$LN3@PKCS7_data:
	push	ebx
	push	ebp
	push	edi
; Line 988
	push	DWORD PTR [esi+16]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 22					; 00000016H
	je	SHORT $LN15@PKCS7_data
; Line 990
	push	DWORD PTR [esi+16]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 24					; 00000018H
	jne	$LN6@PKCS7_data
$LN15@PKCS7_data:
; Line 991
	mov	eax, DWORD PTR [esi+20]
; Line 997
	mov	ebp, DWORD PTR _si$[esp+12]
	mov	edi, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [ebp+4]
; Line 999
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	push	edi
	call	_X509_find_by_issuer_and_serial
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 1002
	test	ebx, ebx
	jne	SHORT $LN8@PKCS7_data
; Line 1003
	push	1004					; 000003ecH
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	106					; 0000006aH
	push	107					; 0000006bH
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1024
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1025
	ret	0
$LN8@PKCS7_data:
; Line 1009
	push	edi
	mov	edi, DWORD PTR _ctx$[esp+16]
	push	ebx
	push	DWORD PTR _cert_store$[esp+20]
	push	edi
	call	_X509_STORE_CTX_init
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN9@PKCS7_data
; Line 1010
	push	1010					; 000003f2H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	11					; 0000000bH
	push	107					; 0000006bH
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1024
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1025
	ret	0
$LN9@PKCS7_data:
; Line 1013
	push	4
	push	edi
	call	_X509_STORE_CTX_set_purpose
; Line 1014
	push	edi
	call	_X509_verify_cert
	add	esp, 12					; 0000000cH
; Line 1015
	test	eax, eax
	jg	SHORT $LN10@PKCS7_data
; Line 1016
	push	1016					; 000003f8H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	11					; 0000000bH
	push	107					; 0000006bH
	push	33					; 00000021H
	call	_ERR_put_error
; Line 1017
	push	edi
	call	_X509_STORE_CTX_cleanup
	add	esp, 24					; 00000018H
; Line 1024
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1025
	ret	0
$LN10@PKCS7_data:
; Line 1020
	push	edi
	call	_X509_STORE_CTX_cleanup
; Line 1022
	push	ebx
	push	ebp
	push	esi
	push	DWORD PTR _bio$[esp+28]
	call	_PKCS7_signatureVerify
	add	esp, 20					; 00000014H
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1025
	ret	0
$LN6@PKCS7_data:
; Line 993
	push	993					; 000003e1H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	114					; 00000072H
	push	107					; 0000006bH
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$18:
; Line 1024
	pop	edi
	pop	ebp
	pop	ebx
	xor	eax, eax
	pop	esi
; Line 1025
	ret	0
_PKCS7_dataVerify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PKCS7_SIGNER_INFO_sign
_TEXT	SEGMENT
_abuf$ = -32						; size = 4
_pctx$ = -28						; size = 4
_mctx$ = -24						; size = 24
_siglen$ = 8						; size = 4
_si$ = 8						; size = 4
_PKCS7_SIGNER_INFO_sign PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pkcs7\pk7_doit.c
; Line 912
	mov	eax, 32					; 00000020H
	call	__chkstk
	push	esi
; Line 920
	mov	esi, DWORD PTR _si$[esp+32]
	push	edi
	mov	DWORD PTR _abuf$[esp+40], 0
	mov	eax, DWORD PTR [esi+8]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 921
	test	edi, edi
	je	SHORT $LN13@PKCS7_SIGN
; Line 924
	lea	eax, DWORD PTR _mctx$[esp+40]
	push	eax
	call	_EVP_MD_CTX_init
; Line 925
	push	DWORD PTR [esi+28]
	lea	eax, DWORD PTR _pctx$[esp+48]
	push	0
	push	edi
	push	eax
	lea	eax, DWORD PTR _mctx$[esp+60]
	push	eax
	call	_EVP_DigestSignInit
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $err$16
; Line 929
	push	esi
	push	0
	push	5
	push	8
	push	-1
	push	DWORD PTR _pctx$[esp+60]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN4@PKCS7_SIGN
; Line 930
	push	930					; 000003a2H
$LN14@PKCS7_SIGN:
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	152					; 00000098H
	push	139					; 0000008bH
	push	33					; 00000021H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$16:
; Line 963
	mov	eax, DWORD PTR _abuf$[esp+40]
	test	eax, eax
	je	SHORT $LN11@PKCS7_SIGN
; Line 964
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN11@PKCS7_SIGN:
; Line 965
	lea	eax, DWORD PTR _mctx$[esp+40]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
$LN13@PKCS7_SIGN:
; Line 966
	pop	edi
	xor	eax, eax
	pop	esi
; Line 968
	add	esp, 32					; 00000020H
	ret	0
$LN4@PKCS7_SIGN:
; Line 934
	call	_PKCS7_ATTR_SIGN_it
	push	eax
	lea	eax, DWORD PTR _abuf$[esp+44]
	push	eax
	push	DWORD PTR [esi+12]
	call	_ASN1_item_i2d
; Line 936
	mov	ecx, DWORD PTR _abuf$[esp+52]
	add	esp, 12					; 0000000cH
	test	ecx, ecx
	je	SHORT $LN11@PKCS7_SIGN
; Line 938
	push	eax
	push	ecx
	lea	eax, DWORD PTR _mctx$[esp+48]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $err$16
; Line 940
	push	DWORD PTR _abuf$[esp+40]
	call	_CRYPTO_free
; Line 942
	lea	eax, DWORD PTR _siglen$[esp+40]
	mov	DWORD PTR _abuf$[esp+44], 0
	push	eax
	lea	eax, DWORD PTR _mctx$[esp+48]
	push	0
	push	eax
	call	_EVP_DigestSignFinal
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $err$16
; Line 944
	push	944					; 000003b0H
	push	OFFSET ??_C@_0BK@LMEFMLFD@?4?2crypto?2pkcs7?2pk7_doit?4c?$AA@
	push	DWORD PTR _siglen$[esp+44]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _abuf$[esp+40], eax
; Line 945
	test	eax, eax
	je	$LN11@PKCS7_SIGN
; Line 947
	lea	ecx, DWORD PTR _siglen$[esp+36]
	push	ecx
	push	eax
	lea	eax, DWORD PTR _mctx$[esp+48]
	push	eax
	call	_EVP_DigestSignFinal
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$err$16
; Line 951
	push	esi
	push	1
	push	5
	push	8
	push	-1
	push	DWORD PTR _pctx$[esp+60]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN10@PKCS7_SIGN
; Line 952
	push	952					; 000003b8H
	jmp	$LN14@PKCS7_SIGN
$LN10@PKCS7_SIGN:
; Line 956
	lea	eax, DWORD PTR _mctx$[esp+40]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 958
	push	DWORD PTR _siglen$[esp+40]
	push	DWORD PTR _abuf$[esp+48]
	push	DWORD PTR [esi+20]
	call	_ASN1_STRING_set0
	add	esp, 16					; 00000010H
; Line 960
	mov	eax, 1
	pop	edi
	pop	esi
; Line 968
	add	esp, 32					; 00000020H
	ret	0
_PKCS7_SIGNER_INFO_sign ENDP
_TEXT	ENDS
END

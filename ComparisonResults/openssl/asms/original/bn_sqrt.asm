; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_sqrt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_BN_mod_sqrt
PUBLIC	??_C@_0BG@EDINLKND@?4?2crypto?2bn?2bn_sqrt?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_CTX_start:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_CTX_end:PROC
EXTRN	_BN_pseudo_rand:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_clear_free:PROC
EXTRN	_BN_copy:PROC
EXTRN	_BN_sub:PROC
EXTRN	_BN_add:PROC
EXTRN	_BN_nnmod:PROC
EXTRN	_BN_mod_mul:PROC
EXTRN	_BN_mod_sqr:PROC
EXTRN	_BN_mod_lshift1_quick:PROC
EXTRN	_BN_add_word:PROC
EXTRN	_BN_sub_word:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_is_bit_set:PROC
EXTRN	_BN_mod_exp:PROC
EXTRN	_BN_rshift:PROC
EXTRN	_BN_rshift1:PROC
EXTRN	_BN_ucmp:PROC
EXTRN	_BN_kronecker:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BG@EDINLKND@?4?2crypto?2bn?2bn_sqrt?4c?$AA@
CONST	SEGMENT
??_C@_0BG@EDINLKND@?4?2crypto?2bn?2bn_sqrt?4c?$AA@ DB '.\crypto\bn\bn_sqr'
	DB	't.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_sqrt
_TEXT	SEGMENT
_x$1$ = -24						; size = 4
_A$1$ = -20						; size = 4
_q$1$ = -16						; size = 4
_ret$1$ = -12						; size = 4
_b$1$ = -8						; size = 4
_i$1$ = -4						; size = 4
_in$ = 8						; size = 4
_a$ = 12						; size = 4
_y$1$ = 16						; size = 4
_p$ = 16						; size = 4
_ctx$ = 20						; size = 4
_BN_mod_sqrt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_sqrt.c
; Line 69
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 70
	mov	edx, DWORD PTR _in$[esp+20]
	push	ebx
; Line 76
	mov	ebx, DWORD PTR _p$[esp+24]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+28]
	push	esi
	mov	ecx, DWORD PTR [ebx+4]
	mov	esi, edx
	mov	DWORD PTR _ret$1$[esp+36], esi
	push	edi
	test	ecx, ecx
	jle	$LN16@BN_mod_sqr
	mov	eax, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax]
	test	al, 1
	je	$LN16@BN_mod_sqr
	cmp	ecx, 1
	jne	SHORT $LN17@BN_mod_sqr
	cmp	eax, ecx
	je	$LN16@BN_mod_sqr
$LN17@BN_mod_sqr:
; Line 95
	mov	edi, DWORD PTR _a$[esp+36]
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	$LN26@BN_mod_sqr
	cmp	eax, 1
	jne	SHORT $LN28@BN_mod_sqr
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN28@BN_mod_sqr
	cmp	DWORD PTR [edi+12], 0
	je	$LN26@BN_mod_sqr
$LN28@BN_mod_sqr:
; Line 109
	push	ebp
	call	_BN_CTX_start
; Line 110
	push	ebp
	call	_BN_CTX_get
; Line 111
	push	ebp
	mov	DWORD PTR _A$1$[esp+52], eax
	call	_BN_CTX_get
; Line 112
	push	ebp
	mov	DWORD PTR _b$1$[esp+56], eax
	call	_BN_CTX_get
; Line 113
	push	ebp
	mov	DWORD PTR _q$1$[esp+60], eax
	call	_BN_CTX_get
; Line 114
	push	ebp
	mov	esi, eax
	call	_BN_CTX_get
; Line 115
	push	ebp
	mov	DWORD PTR _x$1$[esp+68], eax
	call	_BN_CTX_get
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _y$1$[esp+36], eax
; Line 116
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 119
	cmp	DWORD PTR _in$[esp+36], 0
	jne	SHORT $LN141@BN_mod_sqr
; Line 120
	call	_BN_new
	mov	DWORD PTR _ret$1$[esp+40], eax
; Line 121
	test	eax, eax
	je	$LN100@BN_mod_sqr
$LN141@BN_mod_sqr:
; Line 125
	push	ebp
	push	ebx
	push	edi
	push	DWORD PTR _A$1$[esp+52]
	call	_BN_nnmod
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 129
	mov	edi, 1
; Line 130
	push	edi
	push	ebx
	call	_BN_is_bit_set
	add	esp, 8
	test	eax, eax
	jne	$LN142@BN_mod_sqr
	npad	6
$LL2@BN_mod_sqr:
; Line 131
	inc	edi
	push	edi
	push	ebx
	call	_BN_is_bit_set
	add	esp, 8
	test	eax, eax
	je	SHORT $LL2@BN_mod_sqr
; Line 134
	cmp	edi, 1
	je	$LN142@BN_mod_sqr
; Line 183
	push	ebx
	cmp	edi, 2
	jne	$LN41@BN_mod_sqr
	push	DWORD PTR _A$1$[esp+44]
	push	esi
	call	_BN_mod_lshift1_quick
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 187
	mov	edi, DWORD PTR _q$1$[esp+40]
	push	3
	push	ebx
	push	edi
	call	_BN_rshift
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 190
	push	ebp
	push	ebx
	push	edi
	mov	DWORD PTR [edi+12], 0
	mov	edi, DWORD PTR _b$1$[esp+52]
	push	esi
	push	edi
	call	_BN_mod_exp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 194
	push	ebp
	push	ebx
	push	edi
	mov	edi, DWORD PTR _y$1$[esp+48]
	push	edi
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 198
	push	ebp
	push	ebx
	push	edi
	push	esi
	push	esi
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 200
	push	1
	push	esi
	call	_BN_sub_word
	add	esp, 8
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 204
	mov	edi, DWORD PTR _x$1$[esp+40]
	push	ebp
	push	ebx
	push	DWORD PTR _b$1$[esp+48]
	push	DWORD PTR _A$1$[esp+52]
	push	edi
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 206
	push	ebp
	push	ebx
	push	esi
	push	edi
	push	edi
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 209
	mov	esi, DWORD PTR _ret$1$[esp+40]
	push	edi
	push	esi
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 212
	jmp	$LN143@BN_mod_sqr
$LN41@BN_mod_sqr:
; Line 219
	push	DWORD PTR _q$1$[esp+44]
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 221
	mov	eax, DWORD PTR _q$1$[esp+40]
	mov	DWORD PTR [eax+12], 0
; Line 222
	mov	eax, 2
	mov	DWORD PTR _i$1$[esp+40], eax
$LL6@BN_mod_sqr:
; Line 228
	cmp	eax, 22					; 00000016H
	jge	SHORT $LN52@BN_mod_sqr
; Line 229
	push	eax
	push	DWORD PTR _y$1$[esp+40]
; Line 231
	jmp	SHORT $LN158@BN_mod_sqr
$LN52@BN_mod_sqr:
; Line 232
	push	0
	push	0
	push	ebx
	call	_BN_num_bits
	add	esp, 4
	push	eax
	push	DWORD PTR _y$1$[esp+48]
	call	_BN_pseudo_rand
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 234
	push	ebx
	push	DWORD PTR _y$1$[esp+40]
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN57@BN_mod_sqr
; Line 235
	mov	eax, DWORD PTR _y$1$[esp+36]
	mov	ecx, OFFSET _BN_add
	cmp	DWORD PTR [ebx+12], 0
	push	ebx
	push	eax
	push	eax
	mov	eax, OFFSET _BN_sub
	cmovne	eax, ecx
	call	eax
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN140@BN_mod_sqr
$LN57@BN_mod_sqr:
; Line 239
	mov	eax, DWORD PTR _y$1$[esp+36]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN59@BN_mod_sqr
; Line 240
	push	DWORD PTR _i$1$[esp+40]
	push	eax
$LN158@BN_mod_sqr:
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	$LN140@BN_mod_sqr
	mov	eax, DWORD PTR _y$1$[esp+36]
$LN59@BN_mod_sqr:
; Line 244
	push	ebp
	push	DWORD PTR _q$1$[esp+44]
	push	eax
	call	_BN_kronecker
	add	esp, 12					; 0000000cH
; Line 245
	cmp	eax, -1
	jl	$LN140@BN_mod_sqr
; Line 247
	test	eax, eax
	je	$LN117@BN_mod_sqr
; Line 253
	cmp	eax, 1
	jne	SHORT $LN62@BN_mod_sqr
	mov	eax, DWORD PTR _i$1$[esp+40]
	inc	eax
	mov	DWORD PTR _i$1$[esp+40], eax
	cmp	eax, 82					; 00000052H
	jl	$LL6@BN_mod_sqr
	jmp	SHORT $LN144@BN_mod_sqr
$LN62@BN_mod_sqr:
; Line 255
	cmp	eax, -1
	je	SHORT $LN63@BN_mod_sqr
$LN144@BN_mod_sqr:
; Line 261
	push	261					; 00000105H
	push	OFFSET ??_C@_0BG@EDINLKND@?4?2crypto?2bn?2bn_sqrt?4c?$AA@
	push	113					; 00000071H
	push	121					; 00000079H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 262
	jmp	$LN140@BN_mod_sqr
$LN63@BN_mod_sqr:
; Line 266
	mov	eax, DWORD PTR _q$1$[esp+40]
	push	edi
	push	eax
	push	eax
	call	_BN_rshift
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 273
	mov	eax, DWORD PTR _y$1$[esp+36]
	push	ebp
	push	ebx
	push	DWORD PTR _q$1$[esp+48]
	push	eax
	push	eax
	call	_BN_mod_exp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 275
	mov	ecx, DWORD PTR _y$1$[esp+36]
	cmp	DWORD PTR [ecx+4], 1
	jne	SHORT $LN68@BN_mod_sqr
	mov	eax, DWORD PTR [ecx]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN68@BN_mod_sqr
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN68@BN_mod_sqr
; Line 276
	push	276					; 00000114H
; Line 277
	jmp	$LN160@BN_mod_sqr
$LN68@BN_mod_sqr:
; Line 300
	push	DWORD PTR _q$1$[esp+40]
	push	esi
	call	_BN_rshift1
	add	esp, 8
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 304
	cmp	DWORD PTR [esi+4], 0
; Line 305
	push	ebp
	push	ebx
	jne	SHORT $LN70@BN_mod_sqr
	push	DWORD PTR _A$1$[esp+48]
	push	esi
	call	_BN_nnmod
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 307
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN73@BN_mod_sqr
$LN162@BN_mod_sqr:
; Line 309
	mov	esi, DWORD PTR _ret$1$[esp+40]
	push	0
	push	esi
	call	_BN_set_word
	add	esp, 8
; Line 406
	push	ebp
	call	_BN_CTX_end
	add	esp, 4
; Line 408
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 409
	add	esp, 24					; 00000018H
	ret	0
$LN73@BN_mod_sqr:
; Line 312
	push	1
	push	DWORD PTR _x$1$[esp+44]
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 314
	mov	eax, DWORD PTR _x$1$[esp+40]
	jmp	SHORT $LN77@BN_mod_sqr
$LN70@BN_mod_sqr:
; Line 315
	push	esi
	push	DWORD PTR _A$1$[esp+52]
	push	DWORD PTR _x$1$[esp+56]
	call	_BN_mod_exp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 317
	mov	eax, DWORD PTR _x$1$[esp+40]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN162@BN_mod_sqr
$LN77@BN_mod_sqr:
; Line 326
	push	ebp
	push	ebx
	push	eax
	push	DWORD PTR _b$1$[esp+52]
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 328
	mov	eax, DWORD PTR _b$1$[esp+40]
	push	ebp
	push	ebx
	push	DWORD PTR _A$1$[esp+48]
	push	eax
	push	eax
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 332
	mov	eax, DWORD PTR _x$1$[esp+40]
	push	ebp
	push	ebx
	push	DWORD PTR _A$1$[esp+48]
	push	eax
	push	eax
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN140@BN_mod_sqr
	npad	1
$LL7@BN_mod_sqr:
; Line 346
	mov	ecx, DWORD PTR _b$1$[esp+40]
	cmp	DWORD PTR [ecx+4], 1
	jne	SHORT $LN83@BN_mod_sqr
	mov	eax, DWORD PTR [ecx]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN83@BN_mod_sqr
	cmp	DWORD PTR [ecx+12], 0
	je	$LN121@BN_mod_sqr
$LN83@BN_mod_sqr:
; Line 355
	push	DWORD PTR _ctx$[esp+36]
	mov	ebp, 1
	push	ebx
	push	ecx
	push	esi
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN156@BN_mod_sqr
$LL9@BN_mod_sqr:
; Line 357
	cmp	DWORD PTR [esi+4], 1
	jne	SHORT $LN88@BN_mod_sqr
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN88@BN_mod_sqr
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN10@BN_mod_sqr
$LN88@BN_mod_sqr:
; Line 358
	inc	ebp
; Line 359
	cmp	ebp, edi
	je	$LN118@BN_mod_sqr
; Line 363
	push	DWORD PTR _ctx$[esp+36]
	push	ebx
	push	esi
	push	esi
	push	esi
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LL9@BN_mod_sqr
$LN156@BN_mod_sqr:
	mov	ebp, DWORD PTR _ctx$[esp+36]
$LN140@BN_mod_sqr:
; Line 401
	mov	eax, DWORD PTR _ret$1$[esp+40]
	test	eax, eax
	je	$LN100@BN_mod_sqr
	cmp	eax, DWORD PTR _in$[esp+36]
	je	$LN100@BN_mod_sqr
; Line 402
	push	eax
	call	_BN_clear_free
	add	esp, 4
; Line 404
	xor	esi, esi
; Line 406
	push	ebp
	call	_BN_CTX_end
	add	esp, 4
; Line 408
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 409
	add	esp, 24					; 00000018H
	ret	0
$LN10@BN_mod_sqr:
; Line 368
	push	DWORD PTR _y$1$[esp+36]
	push	esi
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN156@BN_mod_sqr
; Line 370
	sub	edi, ebp
	dec	edi
	test	edi, edi
	jle	SHORT $LN12@BN_mod_sqr
$LL13@BN_mod_sqr:
; Line 371
	push	DWORD PTR _ctx$[esp+36]
	push	ebx
	push	esi
	push	esi
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN156@BN_mod_sqr
; Line 370
	dec	edi
	test	edi, edi
	jg	SHORT $LL13@BN_mod_sqr
$LN12@BN_mod_sqr:
; Line 374
	mov	edi, DWORD PTR _ctx$[esp+36]
	push	edi
	push	ebx
	push	esi
	push	esi
	push	DWORD PTR _y$1$[esp+52]
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN150@BN_mod_sqr
; Line 376
	mov	eax, DWORD PTR _x$1$[esp+40]
	push	edi
	push	ebx
	push	esi
	push	eax
	push	eax
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN150@BN_mod_sqr
; Line 378
	mov	eax, DWORD PTR _b$1$[esp+40]
	push	edi
	push	ebx
	push	DWORD PTR _y$1$[esp+44]
	push	eax
	push	eax
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN150@BN_mod_sqr
; Line 380
	mov	edi, ebp
; Line 346
	jmp	$LL7@BN_mod_sqr
$LN121@BN_mod_sqr:
; Line 347
	mov	edi, DWORD PTR _x$1$[esp+40]
	mov	esi, DWORD PTR _ret$1$[esp+40]
	push	edi
	push	esi
	call	_BN_copy
	mov	ebp, DWORD PTR _ctx$[esp+44]
	add	esp, 8
	test	eax, eax
	je	$LN140@BN_mod_sqr
	jmp	$LN143@BN_mod_sqr
$LN118@BN_mod_sqr:
; Line 360
	push	360					; 00000168H
	push	OFFSET ??_C@_0BG@EDINLKND@?4?2crypto?2bn?2bn_sqrt?4c?$AA@
	push	111					; 0000006fH
	push	121					; 00000079H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 361
	jmp	$LN156@BN_mod_sqr
$LN117@BN_mod_sqr:
; Line 249
	push	249					; 000000f9H
$LN160@BN_mod_sqr:
	push	OFFSET ??_C@_0BG@EDINLKND@?4?2crypto?2bn?2bn_sqrt?4c?$AA@
	push	112					; 00000070H
	push	121					; 00000079H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 250
	jmp	$LN140@BN_mod_sqr
$LN142@BN_mod_sqr:
; Line 143
	mov	esi, DWORD PTR _q$1$[esp+40]
	push	2
	push	ebx
	push	esi
	call	_BN_rshift
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 146
	push	1
	push	esi
	mov	DWORD PTR [esi+12], 0
	call	_BN_add_word
	add	esp, 8
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 148
	push	ebp
	push	ebx
	push	esi
	push	DWORD PTR _A$1$[esp+52]
	mov	esi, DWORD PTR _ret$1$[esp+56]
	push	esi
	call	_BN_mod_exp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN140@BN_mod_sqr
	mov	edi, DWORD PTR _x$1$[esp+40]
$LN143@BN_mod_sqr:
; Line 390
	push	ebp
	push	ebx
	push	esi
	push	edi
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN140@BN_mod_sqr
; Line 393
	push	DWORD PTR _A$1$[esp+40]
	push	edi
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	je	$LN99@BN_mod_sqr
; Line 394
	push	394					; 0000018aH
	push	OFFSET ??_C@_0BG@EDINLKND@?4?2crypto?2bn?2bn_sqrt?4c?$AA@
	push	111					; 0000006fH
	push	121					; 00000079H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	$LN140@BN_mod_sqr
$LN150@BN_mod_sqr:
	mov	ebp, edi
	jmp	$LN140@BN_mod_sqr
$LN26@BN_mod_sqr:
; Line 96
	test	edx, edx
	jne	SHORT $LN139@BN_mod_sqr
; Line 97
	call	_BN_new
	mov	esi, eax
; Line 98
	test	esi, esi
	je	SHORT $LN100@BN_mod_sqr
$LN139@BN_mod_sqr:
; Line 100
	cmp	DWORD PTR [edi+4], 1
	jne	SHORT $LN102@BN_mod_sqr
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN102@BN_mod_sqr
	cmp	DWORD PTR [edi+12], 0
	jne	SHORT $LN102@BN_mod_sqr
	mov	eax, 1
	jmp	SHORT $LN105@BN_mod_sqr
$LN102@BN_mod_sqr:
	xor	eax, eax
$LN105@BN_mod_sqr:
	push	eax
	push	esi
	call	_BN_set_word
	add	esp, 8
$LN165@BN_mod_sqr:
	test	eax, eax
	jne	SHORT $LN23@BN_mod_sqr
; Line 101
	cmp	esi, DWORD PTR _in$[esp+36]
	je	SHORT $LN32@BN_mod_sqr
; Line 102
	push	esi
	call	_BN_free
	add	esp, 4
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 409
	add	esp, 24					; 00000018H
	ret	0
$LN16@BN_mod_sqr:
; Line 77
	cmp	ecx, 1
	jne	SHORT $LN20@BN_mod_sqr
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN20@BN_mod_sqr
; Line 78
	test	edx, edx
	jne	SHORT $LN22@BN_mod_sqr
; Line 79
	call	_BN_new
	mov	esi, eax
; Line 80
	test	esi, esi
	jne	SHORT $LN22@BN_mod_sqr
$LN100@BN_mod_sqr:
; Line 404
	xor	esi, esi
$LN99@BN_mod_sqr:
; Line 406
	push	ebp
	call	_BN_CTX_end
	add	esp, 4
$LN23@BN_mod_sqr:
; Line 408
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 409
	add	esp, 24					; 00000018H
	ret	0
$LN22@BN_mod_sqr:
; Line 82
	push	0
	push	DWORD PTR _a$[esp+40]
	call	_BN_is_bit_set
	push	eax
	push	esi
	call	_BN_set_word
	add	esp, 16					; 00000010H
; Line 85
	jmp	SHORT $LN165@BN_mod_sqr
$LN20@BN_mod_sqr:
; Line 91
	push	91					; 0000005bH
	push	OFFSET ??_C@_0BG@EDINLKND@?4?2crypto?2bn?2bn_sqrt?4c?$AA@
	push	112					; 00000070H
	push	121					; 00000079H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN32@BN_mod_sqr:
; Line 92
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 409
	add	esp, 24					; 00000018H
	ret	0
_BN_mod_sqrt ENDP
_TEXT	ENDS
END

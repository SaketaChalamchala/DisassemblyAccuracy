; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_RSA_version
_BSS	SEGMENT
_default_RSA_meth DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_RSA_version DB	'RSA part of OpenSSL 1.0.2h  3 May 2016', 00H
CONST	ENDS
PUBLIC	_RSA_new
PUBLIC	_RSA_new_method
PUBLIC	_RSA_free
PUBLIC	_RSA_up_ref
PUBLIC	_RSA_set_default_method
PUBLIC	_RSA_get_default_method
PUBLIC	_RSA_get_method
PUBLIC	_RSA_set_method
PUBLIC	_RSA_memory_lock
PUBLIC	_RSA_get_ex_new_index
PUBLIC	_RSA_set_ex_data
PUBLIC	_RSA_get_ex_data
PUBLIC	??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@ ; `string'
EXTRN	_CRYPTO_get_ex_new_index:PROC
EXTRN	_CRYPTO_new_ex_data:PROC
EXTRN	_CRYPTO_free_ex_data:PROC
EXTRN	_CRYPTO_set_ex_data:PROC
EXTRN	_CRYPTO_get_ex_data:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc_locked:PROC
EXTRN	_CRYPTO_free_locked:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_clear_free:PROC
EXTRN	_BN_BLINDING_free:PROC
EXTRN	_RSA_PKCS1_SSLeay:PROC
EXTRN	_ENGINE_get_RSA:PROC
EXTRN	_ENGINE_init:PROC
EXTRN	_ENGINE_finish:PROC
EXTRN	_ENGINE_get_default_RSA:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@
CONST	SEGMENT
??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@ DB '.\crypto\rsa\rsa_'
	DB	'lib.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_get_ex_data
_TEXT	SEGMENT
_r$ = 8							; size = 4
_idx$ = 12						; size = 4
_RSA_get_ex_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 291
	add	DWORD PTR _r$[esp-4], 48		; 00000030H
	jmp	_CRYPTO_get_ex_data
_RSA_get_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_set_ex_data
_TEXT	SEGMENT
_r$ = 8							; size = 4
_idx$ = 12						; size = 4
_arg$ = 16						; size = 4
_RSA_set_ex_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 286
	add	DWORD PTR _r$[esp-4], 48		; 00000030H
	jmp	_CRYPTO_set_ex_data
_RSA_set_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_get_ex_new_index
_TEXT	SEGMENT
_argl$ = 8						; size = 4
_argp$ = 12						; size = 4
_new_func$ = 16						; size = 4
_dup_func$ = 20						; size = 4
_free_func$ = 24					; size = 4
_RSA_get_ex_new_index PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 280
	push	DWORD PTR _free_func$[esp-4]
	push	DWORD PTR _dup_func$[esp]
	push	DWORD PTR _new_func$[esp+4]
	push	DWORD PTR _argp$[esp+8]
	push	DWORD PTR _argl$[esp+12]
	push	6
	call	_CRYPTO_get_ex_new_index
	add	esp, 24					; 00000018H
; Line 282
	ret	0
_RSA_get_ex_new_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_memory_lock
_TEXT	SEGMENT
_r$GSCopy$1$ = -36					; size = 4
_p$1$ = -32						; size = 4
_t$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_r$ = 8							; size = 4
_RSA_memory_lock PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 295
	mov	eax, 36					; 00000024H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+36], eax
	mov	eax, DWORD PTR _r$[esp+32]
; Line 301
	cmp	DWORD PTR [eax+24], 0
	push	ebp
	lea	ebp, DWORD PTR [eax+24]
	mov	DWORD PTR _r$GSCopy$1$[esp+40], eax
	jne	SHORT $LN8@RSA_memory
; Line 302
	mov	eax, 1
	pop	ebp
; Line 336
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
$LN8@RSA_memory:
; Line 304
	lea	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _t$[esp+40], ebp
; Line 307
	lea	edx, DWORD PTR [eax+40]
	mov	DWORD PTR _t$[esp+44], ecx
; Line 313
	mov	ecx, DWORD PTR [ecx]
	push	ebx
	push	esi
	lea	ebx, DWORD PTR [eax+32]
	mov	DWORD PTR _t$[esp+64], edx
	push	edi
	lea	edi, DWORD PTR [eax+36]
	mov	DWORD PTR _t$[esp+60], ebx
	add	eax, 44					; 0000002cH
	mov	DWORD PTR _t$[esp+64], edi
	mov	DWORD PTR _t$[esp+72], eax
; Line 314
	push	314					; 0000013aH
	push	OFFSET ??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@
	mov	eax, DWORD PTR [eax]
	mov	esi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edx]
	add	esi, DWORD PTR [ecx+4]
	add	esi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ebp]
	add	esi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [edi]
	add	esi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+4]
	add	eax, esi
	lea	eax, DWORD PTR [eax*4+128]
	push	eax
	call	_CRYPTO_malloc_locked
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$1$[esp+52], eax
	test	eax, eax
	jne	SHORT $LN9@RSA_memory
; Line 315
	push	315					; 0000013bH
	push	OFFSET ??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@
	push	65					; 00000041H
	push	130					; 00000082H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 316
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
; Line 336
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
$LN9@RSA_memory:
; Line 319
	lea	ebx, DWORD PTR [eax+31]
; Line 320
	xor	ebp, ebp
	mov	esi, eax
$LL7@RSA_memory:
; Line 321
	mov	eax, DWORD PTR _t$[esp+ebp*4+52]
	mov	edi, DWORD PTR [eax]
; Line 322
	mov	DWORD PTR [eax], esi
; Line 323
	movups	xmm0, XMMWORD PTR [edi]
	movups	XMMWORD PTR [esi], xmm0
; Line 324
	mov	DWORD PTR [esi+16], 2
; Line 325
	mov	DWORD PTR [esi], ebx
; Line 326
	mov	eax, DWORD PTR [edi+4]
	shl	eax, 2
	push	eax
	push	DWORD PTR [edi]
	push	ebx
	call	_memcpy
; Line 327
	mov	eax, DWORD PTR [edi+4]
; Line 328
	push	edi
	lea	ebx, DWORD PTR [ebx+eax*4]
	call	_BN_clear_free
	inc	ebp
	add	esp, 16					; 00000010H
	add	esi, 20					; 00000014H
	cmp	ebp, 6
	jl	SHORT $LL7@RSA_memory
; Line 332
	mov	eax, DWORD PTR _r$GSCopy$1$[esp+52]
; Line 334
	mov	ecx, DWORD PTR _p$1$[esp+52]
	pop	edi
	pop	esi
	and	DWORD PTR [eax+60], -7			; fffffff9H
	mov	DWORD PTR [eax+76], ecx
; Line 335
	mov	eax, 1
; Line 336
	mov	ecx, DWORD PTR __$ArrayPad$[esp+44]
	pop	ebx
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
_RSA_memory_lock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_set_method
_TEXT	SEGMENT
_rsa$ = 8						; size = 4
_meth$ = 12						; size = 4
_RSA_set_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 116
	push	esi
; Line 122
	mov	esi, DWORD PTR _rsa$[esp]
	mov	eax, DWORD PTR [esi+8]
; Line 123
	mov	eax, DWORD PTR [eax+32]
	test	eax, eax
	je	SHORT $LN2@RSA_set_me
; Line 124
	push	esi
	call	eax
	add	esp, 4
$LN2@RSA_set_me:
; Line 126
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN3@RSA_set_me
; Line 127
	push	eax
	call	_ENGINE_finish
	add	esp, 4
; Line 128
	mov	DWORD PTR [esi+12], 0
$LN3@RSA_set_me:
; Line 131
	mov	eax, DWORD PTR _meth$[esp]
	mov	DWORD PTR [esi+8], eax
; Line 132
	mov	eax, DWORD PTR [eax+28]
	test	eax, eax
	je	SHORT $LN6@RSA_set_me
; Line 133
	push	esi
	call	eax
	add	esp, 4
$LN6@RSA_set_me:
; Line 134
	mov	eax, 1
	pop	esi
; Line 135
	ret	0
_RSA_set_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_get_method
_TEXT	SEGMENT
_rsa$ = 8						; size = 4
_RSA_get_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 112
	mov	eax, DWORD PTR _rsa$[esp-4]
	mov	eax, DWORD PTR [eax+8]
; Line 113
	ret	0
_RSA_get_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_get_default_method
_TEXT	SEGMENT
_RSA_get_default_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 92
	mov	eax, DWORD PTR _default_RSA_meth
	test	eax, eax
	jne	SHORT $LN2@RSA_get_de
; Line 102
	call	_RSA_PKCS1_SSLeay
	mov	DWORD PTR _default_RSA_meth, eax
$LN2@RSA_get_de:
; Line 108
	ret	0
_RSA_get_default_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_set_default_method
_TEXT	SEGMENT
_meth$ = 8						; size = 4
_RSA_set_default_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 87
	mov	eax, DWORD PTR _meth$[esp-4]
	mov	DWORD PTR _default_RSA_meth, eax
; Line 88
	ret	0
_RSA_set_default_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_up_ref
_TEXT	SEGMENT
_r$ = 8							; size = 4
_RSA_up_ref PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 264
	mov	eax, DWORD PTR _r$[esp-4]
	push	264					; 00000108H
	push	OFFSET ??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@
	push	9
	add	eax, 56					; 00000038H
	push	1
	push	eax
	call	_CRYPTO_add_lock
; Line 274
	xor	ecx, ecx
	add	esp, 20					; 00000014H
	cmp	eax, 1
	setg	cl
	mov	eax, ecx
; Line 275
	ret	0
_RSA_up_ref ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_free
_TEXT	SEGMENT
_r$ = 8							; size = 4
_RSA_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 209
	push	esi
; Line 212
	mov	esi, DWORD PTR _r$[esp]
	test	esi, esi
	je	$LN1@RSA_free
; Line 215
	push	215					; 000000d7H
	push	OFFSET ??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@
	push	9
	lea	eax, DWORD PTR [esi+56]
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 219
	test	eax, eax
	jg	$LN1@RSA_free
; Line 228
	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax+32]
	test	eax, eax
	je	SHORT $LN4@RSA_free
; Line 229
	push	esi
	call	eax
	add	esp, 4
$LN4@RSA_free:
; Line 231
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN5@RSA_free
; Line 232
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN5@RSA_free:
; Line 235
	lea	eax, DWORD PTR [esi+48]
	push	eax
	push	esi
	push	6
	call	_CRYPTO_free_ex_data
; Line 237
	mov	eax, DWORD PTR [esi+16]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN6@RSA_free
; Line 238
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN6@RSA_free:
; Line 239
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN7@RSA_free
; Line 240
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN7@RSA_free:
; Line 241
	mov	eax, DWORD PTR [esi+24]
	test	eax, eax
	je	SHORT $LN8@RSA_free
; Line 242
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN8@RSA_free:
; Line 243
	mov	eax, DWORD PTR [esi+28]
	test	eax, eax
	je	SHORT $LN9@RSA_free
; Line 244
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN9@RSA_free:
; Line 245
	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN10@RSA_free
; Line 246
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN10@RSA_free:
; Line 247
	mov	eax, DWORD PTR [esi+36]
	test	eax, eax
	je	SHORT $LN11@RSA_free
; Line 248
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN11@RSA_free:
; Line 249
	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $LN12@RSA_free
; Line 250
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN12@RSA_free:
; Line 251
	mov	eax, DWORD PTR [esi+44]
	test	eax, eax
	je	SHORT $LN13@RSA_free
; Line 252
	push	eax
	call	_BN_clear_free
	add	esp, 4
$LN13@RSA_free:
; Line 253
	mov	eax, DWORD PTR [esi+80]
	test	eax, eax
	je	SHORT $LN14@RSA_free
; Line 254
	push	eax
	call	_BN_BLINDING_free
	add	esp, 4
$LN14@RSA_free:
; Line 255
	mov	eax, DWORD PTR [esi+84]
	test	eax, eax
	je	SHORT $LN15@RSA_free
; Line 256
	push	eax
	call	_BN_BLINDING_free
	add	esp, 4
$LN15@RSA_free:
; Line 257
	mov	eax, DWORD PTR [esi+76]
	test	eax, eax
	je	SHORT $LN16@RSA_free
; Line 258
	push	eax
	call	_CRYPTO_free_locked
	add	esp, 4
$LN16@RSA_free:
; Line 259
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@RSA_free:
	pop	esi
; Line 260
	ret	0
_RSA_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_new_method
_TEXT	SEGMENT
_engine$ = 8						; size = 4
_RSA_new_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 138
	push	esi
; Line 141
	push	141					; 0000008dH
	push	OFFSET ??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@
	push	88					; 00000058H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 142
	test	esi, esi
	jne	SHORT $LN2@RSA_new_me
; Line 143
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@
	push	65					; 00000041H
	push	106					; 0000006aH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 144
	xor	eax, eax
	pop	esi
; Line 206
	ret	0
$LN2@RSA_new_me:
; Line 92
	mov	eax, DWORD PTR _default_RSA_meth
	test	eax, eax
	jne	SHORT $LN14@RSA_new_me
; Line 102
	call	_RSA_PKCS1_SSLeay
	mov	DWORD PTR _default_RSA_meth, eax
$LN14@RSA_new_me:
	push	edi
; Line 149
	mov	edi, DWORD PTR _engine$[esp+4]
	mov	DWORD PTR [esi+8], eax
	test	edi, edi
	je	SHORT $LN3@RSA_new_me
; Line 150
	push	edi
	call	_ENGINE_init
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@RSA_new_me
; Line 151
	push	151					; 00000097H
	push	OFFSET ??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@
	push	38					; 00000026H
	push	106					; 0000006aH
	push	4
	call	_ERR_put_error
; Line 152
	push	esi
	call	_CRYPTO_free
	add	esp, 24					; 00000018H
; Line 153
	xor	eax, eax
	pop	edi
	pop	esi
; Line 206
	ret	0
$LN5@RSA_new_me:
; Line 155
	mov	DWORD PTR [esi+12], edi
; Line 156
	jmp	SHORT $LN4@RSA_new_me
$LN3@RSA_new_me:
; Line 157
	call	_ENGINE_get_default_RSA
	mov	DWORD PTR [esi+12], eax
$LN4@RSA_new_me:
; Line 158
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN7@RSA_new_me
; Line 159
	push	eax
	call	_ENGINE_get_RSA
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
; Line 160
	test	eax, eax
	jne	SHORT $LN7@RSA_new_me
; Line 161
	push	161					; 000000a1H
	push	OFFSET ??_C@_0BH@MECNDGAA@?4?2crypto?2rsa?2rsa_lib?4c?$AA@
	push	38					; 00000026H
	push	106					; 0000006aH
	push	4
	call	_ERR_put_error
; Line 162
	push	DWORD PTR [esi+12]
	call	_ENGINE_finish
; Line 163
	push	esi
	call	_CRYPTO_free
	add	esp, 28					; 0000001cH
; Line 164
	xor	eax, eax
	pop	edi
	pop	esi
; Line 206
	ret	0
$LN7@RSA_new_me:
; Line 186
	mov	eax, DWORD PTR [esi+8]
; Line 187
	lea	edi, DWORD PTR [esi+48]
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+20], 0
	mov	DWORD PTR [esi+24], 0
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [esi+32], 0
	mov	DWORD PTR [esi+36], 0
	mov	DWORD PTR [esi+40], 0
	mov	DWORD PTR [esi+44], 0
	mov	DWORD PTR [esi+56], 1
	mov	DWORD PTR [esi+64], 0
	mov	DWORD PTR [esi+68], 0
	mov	DWORD PTR [esi+72], 0
	mov	DWORD PTR [esi+80], 0
	mov	DWORD PTR [esi+84], 0
	mov	DWORD PTR [esi+76], 0
	mov	eax, DWORD PTR [eax+36]
	push	edi
	and	eax, -1025				; fffffbffH
	push	esi
	push	6
	mov	DWORD PTR [esi+60], eax
	call	_CRYPTO_new_ex_data
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN8@RSA_new_me
; Line 189
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN9@RSA_new_me
; Line 190
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN9@RSA_new_me:
; Line 192
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 193
	xor	eax, eax
	pop	edi
	pop	esi
; Line 206
	ret	0
$LN8@RSA_new_me:
; Line 196
	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax+28]
	test	eax, eax
	je	SHORT $LN10@RSA_new_me
	push	esi
	call	eax
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN10@RSA_new_me
; Line 198
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN11@RSA_new_me
; Line 199
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN11@RSA_new_me:
; Line 201
	push	edi
	push	esi
	push	6
	call	_CRYPTO_free_ex_data
; Line 202
	push	esi
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 203
	xor	esi, esi
$LN10@RSA_new_me:
; Line 205
	pop	edi
	mov	eax, esi
	pop	esi
; Line 206
	ret	0
_RSA_new_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_new
_TEXT	SEGMENT
_RSA_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_lib.c
; Line 80
	push	0
	call	_RSA_new_method
	add	esp, 4
; Line 83
	ret	0
_RSA_new ENDP
_TEXT	ENDS
END

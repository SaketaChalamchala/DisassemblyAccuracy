; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\des\ede_cbcm_enc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_DES_ede3_cbcm_encrypt
EXTRN	_DES_encrypt1:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _DES_ede3_cbcm_encrypt
_TEXT	SEGMENT
_tout1$1$ = -32						; size = 4
_m1$2$ = -32						; size = 4
_xor1$1$ = -28						; size = 4
_tout0$1$ = -28						; size = 4
_xor0$1$ = -24						; size = 4
_iv1$2$ = -24						; size = 4
_tin1$2$ = -20						; size = 4
_iv1$4$ = -16						; size = 4
_iv2$4$ = -12						; size = 4
_tin$ = -8						; size = 8
_in$ = 8						; size = 4
_out$ = 12						; size = 4
_tin0$2$ = 16						; size = 4
_l$1$ = 16						; size = 4
_length$ = 16						; size = 4
_ks1$ = 20						; size = 4
_ks2$ = 24						; size = 4
_ks3$ = 28						; size = 4
_ivec1$ = 32						; size = 4
_ivec2$ = 36						; size = 4
tv1037 = 40						; size = 4
_m1$1$ = 40						; size = 4
_m0$2$ = 40						; size = 4
_enc$ = 40						; size = 4
_DES_ede3_cbcm_encrypt PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\des\ede_cbcm_enc.c
; Line 81
	mov	eax, 32					; 00000020H
	call	__chkstk
; Line 91
	cmp	DWORD PTR _enc$[esp+28], 0
; Line 92
	mov	eax, DWORD PTR _ivec1$[esp+28]
	push	ebx
	push	ebp
	push	esi
	push	edi
	je	$LN12@DES_ede3_c
	movzx	ebx, BYTE PTR [eax]
	lea	edi, DWORD PTR [eax+1]
	mov	edx, edi
	mov	DWORD PTR _iv1$2$[esp+48], edi
	movzx	eax, BYTE PTR [edx]
	shl	eax, 8
	or	ebx, eax
; Line 93
	movzx	ebp, BYTE PTR [edx+3]
	movzx	eax, BYTE PTR [edx+1]
	movzx	ecx, BYTE PTR [edx+6]
	shl	eax, 16					; 00000010H
	or	ebx, eax
	shl	ecx, 8
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	ebx, eax
	movzx	eax, BYTE PTR [edx+4]
	shl	eax, 8
	or	ebp, eax
	movzx	eax, BYTE PTR [edx+5]
	or	ecx, eax
; Line 94
	mov	eax, DWORD PTR _ivec2$[esp+44]
	lea	edx, DWORD PTR [eax+1]
	shl	ecx, 16					; 00000010H
; Line 95
	movzx	esi, BYTE PTR [edx+3]
	or	ebp, ecx
	mov	DWORD PTR _m1$1$[esp+44], ebp
	movzx	ecx, BYTE PTR [eax]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+4]
	shl	eax, 8
	mov	DWORD PTR _tout0$1$[esp+48], ecx
	or	esi, eax
	movzx	ecx, BYTE PTR [edx+6]
	movzx	eax, BYTE PTR [edx+5]
	shl	ecx, 8
	or	ecx, eax
; Line 96
	mov	eax, DWORD PTR _length$[esp+44]
	shl	ecx, 16					; 00000010H
	add	eax, -8					; fffffff8H
	or	esi, ecx
	mov	DWORD PTR _l$1$[esp+44], eax
	mov	DWORD PTR _tout1$1$[esp+48], esi
	cmp	eax, -7					; fffffff9H
	jl	$LN43@DES_ede3_c
; Line 92
	mov	edi, DWORD PTR _out$[esp+44]
	add	eax, 7
	mov	esi, DWORD PTR _in$[esp+44]
	mov	DWORD PTR tv1037[esp+44], eax
$LL4@DES_ede3_c:
; Line 99
	push	1
	push	DWORD PTR _ks3$[esp+48]
	lea	eax, DWORD PTR _tin$[esp+56]
	mov	DWORD PTR _tin$[esp+56], ebx
	push	eax
	mov	DWORD PTR _tin$[esp+64], ebp
	call	_DES_encrypt1
; Line 103
	mov	eax, DWORD PTR _l$1$[esp+56]
	add	esp, 12					; 0000000cH
	mov	ebx, DWORD PTR _tin$[esp+48]
	mov	ebp, DWORD PTR _tin$[esp+52]
	test	eax, eax
	jns	SHORT $LN14@DES_ede3_c
; Line 104
	add	eax, 8
	xor	ecx, ecx
	add	esi, eax
	xor	edx, edx
	mov	eax, DWORD PTR tv1037[esp+44]
	cmp	eax, 7
	ja	$LN15@DES_ede3_c
	jmp	DWORD PTR $LN45@DES_ede3_c[eax*4]
$LN16@DES_ede3_c:
	movzx	ecx, BYTE PTR [esi-1]
	dec	esi
	shl	ecx, 24					; 00000018H
$LN17@DES_ede3_c:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 16					; 00000010H
	or	ecx, eax
$LN18@DES_ede3_c:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 8
	or	ecx, eax
$LN19@DES_ede3_c:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	or	ecx, eax
$LN20@DES_ede3_c:
	movzx	edx, BYTE PTR [esi-1]
	dec	esi
	shl	edx, 24					; 00000018H
$LN21@DES_ede3_c:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 16					; 00000010H
	or	edx, eax
$LN22@DES_ede3_c:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 8
	or	edx, eax
$LN23@DES_ede3_c:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	or	edx, eax
; Line 105
	jmp	SHORT $LN15@DES_ede3_c
$LN14@DES_ede3_c:
; Line 106
	movzx	eax, BYTE PTR [esi+1]
	movzx	edx, BYTE PTR [esi]
; Line 107
	movzx	ecx, BYTE PTR [esi+4]
	shl	eax, 8
	or	edx, eax
	movzx	eax, BYTE PTR [esi+2]
	shl	eax, 16					; 00000010H
	or	edx, eax
	movzx	eax, BYTE PTR [esi+3]
	shl	eax, 24					; 00000018H
	or	edx, eax
	movzx	eax, BYTE PTR [esi+5]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+6]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+7]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	add	esi, 8
$LN15@DES_ede3_c:
; Line 109
	xor	edx, DWORD PTR _tout0$1$[esp+48]
; Line 114
	lea	eax, DWORD PTR _tin$[esp+48]
	xor	ecx, DWORD PTR _tout1$1$[esp+48]
	push	1
	push	DWORD PTR _ks1$[esp+48]
	mov	DWORD PTR _tin$[esp+56], edx
	push	eax
	mov	DWORD PTR _tin$[esp+64], ecx
	call	_DES_encrypt1
; Line 115
	xor	DWORD PTR _tin$[esp+60], ebx
; Line 117
	lea	eax, DWORD PTR _tin$[esp+60]
	xor	DWORD PTR _tin$[esp+64], ebp
	push	0
	push	DWORD PTR _ks2$[esp+60]
	push	eax
	call	_DES_encrypt1
; Line 118
	xor	DWORD PTR _tin$[esp+72], ebx
; Line 120
	lea	eax, DWORD PTR _tin$[esp+72]
	xor	DWORD PTR _tin$[esp+76], ebp
	push	1
	push	DWORD PTR _ks1$[esp+72]
	push	eax
	call	_DES_encrypt1
; Line 121
	mov	edx, DWORD PTR _tin$[esp+84]
	add	esp, 36					; 00000024H
; Line 122
	mov	ecx, DWORD PTR _tin$[esp+52]
; Line 124
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [edi], dl
	mov	BYTE PTR [edi+1], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edi+2], al
	mov	eax, edx
	sub	DWORD PTR tv1037[esp+44], 8
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edi+3], al
; Line 125
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edi+4], cl
	mov	BYTE PTR [edi+5], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edi+6], al
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edi+7], al
	add	edi, 8
	mov	eax, DWORD PTR _l$1$[esp+44]
	sub	eax, 8
	mov	DWORD PTR _tout0$1$[esp+48], edx
	mov	DWORD PTR _tout1$1$[esp+48], ecx
	mov	DWORD PTR _l$1$[esp+44], eax
	cmp	eax, -7					; fffffff9H
	jge	$LL4@DES_ede3_c
	mov	edi, DWORD PTR _iv1$2$[esp+48]
	mov	DWORD PTR _m1$1$[esp+44], ebp
	jmp	SHORT $LN3@DES_ede3_c
$LN43@DES_ede3_c:
	mov	edx, DWORD PTR _tout0$1$[esp+48]
$LN3@DES_ede3_c:
; Line 128
	mov	eax, DWORD PTR _ivec1$[esp+44]
; Line 129
	mov	ecx, DWORD PTR _m1$1$[esp+44]
	mov	BYTE PTR [eax], bl
	mov	eax, ebx
	shr	eax, 8
	mov	BYTE PTR [edi], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edi+1], al
	mov	eax, ecx
	shr	eax, 8
	shr	ebx, 24					; 00000018H
	mov	BYTE PTR [edi+2], bl
	mov	BYTE PTR [edi+3], cl
	mov	BYTE PTR [edi+4], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edi+5], al
; Line 132
	mov	eax, edx
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [edi+6], cl
	mov	ecx, DWORD PTR _ivec2$[esp+44]
	lea	ebx, DWORD PTR [ecx+1]
	shr	eax, 8
	pop	edi
	pop	esi
	mov	BYTE PTR [ecx], dl
; Line 133
	mov	ecx, DWORD PTR _tout1$1$[esp+40]
	mov	BYTE PTR [ebx], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ebx+1], al
	mov	eax, ecx
	shr	edx, 24					; 00000018H
	mov	BYTE PTR [ebx+2], dl
	mov	BYTE PTR [ebx+3], cl
	shr	eax, 8
	mov	BYTE PTR [ebx+4], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ebx+5], al
	shr	ecx, 24					; 00000018H
	pop	ebp
	mov	BYTE PTR [ebx+6], cl
	pop	ebx
; Line 188
	add	esp, 32					; 00000020H
	ret	0
$LN12@DES_ede3_c:
; Line 137
	movzx	ecx, BYTE PTR [eax]
	lea	esi, DWORD PTR [eax+1]
	mov	edx, esi
; Line 141
	mov	edi, DWORD PTR _length$[esp+44]
	add	edi, -8					; fffffff8H
	mov	DWORD PTR _iv1$4$[esp+48], esi
	movzx	eax, BYTE PTR [edx]
	movzx	ebx, BYTE PTR [edx+3]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+4]
	shl	eax, 8
	or	ebx, eax
	mov	DWORD PTR _m0$2$[esp+44], ecx
	movzx	ecx, BYTE PTR [edx+6]
	movzx	eax, BYTE PTR [edx+5]
	shl	ecx, 8
	or	ecx, eax
	mov	eax, DWORD PTR _ivec2$[esp+44]
	shl	ecx, 16					; 00000010H
	or	ebx, ecx
	mov	DWORD PTR _m1$2$[esp+48], ebx
	movzx	ebx, BYTE PTR [eax]
	lea	ebp, DWORD PTR [eax+1]
	mov	edx, ebp
	mov	DWORD PTR _iv2$4$[esp+48], ebp
	movzx	eax, BYTE PTR [edx]
	movzx	ecx, BYTE PTR [edx+3]
	shl	eax, 8
	or	ebx, eax
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ebx, eax
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	ebx, eax
	movzx	eax, BYTE PTR [edx+4]
	shl	eax, 8
	or	ecx, eax
	mov	DWORD PTR _xor0$1$[esp+48], ebx
	movzx	eax, BYTE PTR [edx+5]
	mov	DWORD PTR _xor1$1$[esp+48], ecx
	movzx	ecx, BYTE PTR [edx+6]
	mov	edx, DWORD PTR _xor1$1$[esp+48]
	shl	ecx, 8
	or	ecx, eax
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	DWORD PTR _xor1$1$[esp+48], edx
	cmp	edi, -7					; fffffff9H
	jl	$LN8@DES_ede3_c
; Line 137
	mov	esi, DWORD PTR _out$[esp+44]
	lea	ebp, DWORD PTR [edi+7]
	mov	ebx, DWORD PTR _in$[esp+44]
$LL9@DES_ede3_c:
; Line 142
	mov	eax, DWORD PTR _m0$2$[esp+44]
	mov	DWORD PTR _tin$[esp+48], eax
; Line 143
	mov	eax, DWORD PTR _m1$2$[esp+48]
; Line 144
	push	1
	push	DWORD PTR _ks3$[esp+48]
	mov	DWORD PTR _tin$[esp+60], eax
	lea	eax, DWORD PTR _tin$[esp+56]
	push	eax
	call	_DES_encrypt1
; Line 145
	mov	eax, DWORD PTR _tin$[esp+60]
; Line 149
	lea	ebx, DWORD PTR [ebx+8]
	movzx	ecx, BYTE PTR [ebx-8]
	mov	DWORD PTR _m0$2$[esp+56], eax
	mov	eax, DWORD PTR _tin$[esp+64]
	movzx	edx, BYTE PTR [ebx-4]
	mov	DWORD PTR _m1$2$[esp+60], eax
	movzx	eax, BYTE PTR [ebx-7]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [ebx-6]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	movzx	eax, BYTE PTR [ebx-5]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	movzx	eax, BYTE PTR [ebx-3]
	shl	eax, 8
	or	edx, eax
	mov	DWORD PTR _tin0$2$[esp+56], ecx
	movzx	eax, BYTE PTR [ebx-2]
	shl	eax, 16					; 00000010H
	or	edx, eax
; Line 154
	mov	DWORD PTR _tin$[esp+60], ecx
	movzx	eax, BYTE PTR [ebx-1]
	shl	eax, 24					; 00000018H
	or	edx, eax
; Line 156
	lea	eax, DWORD PTR _tin$[esp+60]
	push	0
	push	DWORD PTR _ks1$[esp+60]
	mov	DWORD PTR _tin1$2$[esp+68], edx
	push	eax
	mov	DWORD PTR _tin$[esp+76], edx
	call	_DES_encrypt1
; Line 157
	mov	eax, DWORD PTR _m0$2$[esp+68]
	xor	DWORD PTR _tin$[esp+72], eax
; Line 158
	mov	eax, DWORD PTR _m1$2$[esp+72]
	xor	DWORD PTR _tin$[esp+76], eax
; Line 159
	lea	eax, DWORD PTR _tin$[esp+72]
	push	1
	push	DWORD PTR _ks2$[esp+72]
	push	eax
	call	_DES_encrypt1
; Line 160
	mov	eax, DWORD PTR _m0$2$[esp+80]
	xor	DWORD PTR _tin$[esp+84], eax
; Line 161
	mov	eax, DWORD PTR _m1$2$[esp+84]
	xor	DWORD PTR _tin$[esp+88], eax
; Line 162
	lea	eax, DWORD PTR _tin$[esp+84]
	push	0
	push	DWORD PTR _ks1$[esp+84]
	push	eax
	call	_DES_encrypt1
; Line 166
	mov	edx, DWORD PTR _tin$[esp+96]
	add	esp, 48					; 00000030H
; Line 167
	mov	ecx, DWORD PTR _tin$[esp+52]
	xor	edx, DWORD PTR _xor0$1$[esp+48]
	xor	ecx, DWORD PTR _xor1$1$[esp+48]
; Line 168
	test	edi, edi
	jns	SHORT $LN24@DES_ede3_c
; Line 169
	add	esi, 8
	add	esi, edi
	cmp	ebp, 7
	ja	SHORT $LN25@DES_ede3_c
	jmp	DWORD PTR $LN46@DES_ede3_c[ebp*4]
$LN26@DES_ede3_c:
	dec	esi
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi], al
$LN27@DES_ede3_c:
	dec	esi
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi], al
$LN28@DES_ede3_c:
	dec	esi
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [esi], al
$LN29@DES_ede3_c:
	dec	esi
	mov	BYTE PTR [esi], cl
$LN30@DES_ede3_c:
	dec	esi
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi], al
$LN31@DES_ede3_c:
	dec	esi
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi], al
$LN32@DES_ede3_c:
	dec	esi
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi], al
$LN33@DES_ede3_c:
	dec	esi
	mov	BYTE PTR [esi], dl
; Line 170
	jmp	SHORT $LN25@DES_ede3_c
$LN24@DES_ede3_c:
; Line 171
	mov	BYTE PTR [esi], dl
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+1], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+2], al
; Line 172
	mov	eax, ecx
	shr	edx, 24					; 00000018H
	mov	BYTE PTR [esi+3], dl
	mov	BYTE PTR [esi+4], cl
	shr	eax, 8
	mov	BYTE PTR [esi+5], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [esi+6], al
	mov	BYTE PTR [esi+7], cl
	add	esi, 8
$LN25@DES_ede3_c:
; Line 174
	mov	eax, DWORD PTR _tin0$2$[esp+44]
	sub	edi, 8
; Line 175
	mov	edx, DWORD PTR _tin1$2$[esp+48]
	sub	ebp, 8
	mov	DWORD PTR _xor0$1$[esp+48], eax
	mov	DWORD PTR _xor1$1$[esp+48], edx
	cmp	edi, -7					; fffffff9H
	jge	$LL9@DES_ede3_c
	mov	esi, DWORD PTR _iv1$4$[esp+48]
	mov	ebx, eax
	mov	ebp, DWORD PTR _iv2$4$[esp+48]
$LN8@DES_ede3_c:
; Line 179
	mov	eax, DWORD PTR _ivec1$[esp+44]
	mov	ecx, DWORD PTR _m0$2$[esp+44]
	pop	edi
	mov	BYTE PTR [eax], cl
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [esi], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+1], al
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [esi+2], cl
; Line 180
	mov	ecx, DWORD PTR _m1$2$[esp+44]
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [esi+3], cl
	mov	BYTE PTR [esi+4], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+5], al
; Line 183
	mov	eax, DWORD PTR _ivec2$[esp+40]
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [esi+6], cl
	pop	esi
	mov	BYTE PTR [eax], bl
	mov	eax, ebx
	shr	eax, 8
	mov	BYTE PTR [ebp], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ebp+1], al
; Line 184
	mov	eax, edx
	shr	ebx, 24					; 00000018H
	mov	BYTE PTR [ebp+2], bl
	mov	BYTE PTR [ebp+3], dl
	shr	eax, 8
	mov	BYTE PTR [ebp+4], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ebp+5], al
	shr	edx, 24					; 00000018H
	mov	BYTE PTR [ebp+6], dl
	pop	ebp
	pop	ebx
; Line 188
	add	esp, 32					; 00000020H
	ret	0
	npad	3
$LN45@DES_ede3_c:
	DD	$LN23@DES_ede3_c
	DD	$LN22@DES_ede3_c
	DD	$LN21@DES_ede3_c
	DD	$LN20@DES_ede3_c
	DD	$LN19@DES_ede3_c
	DD	$LN18@DES_ede3_c
	DD	$LN17@DES_ede3_c
	DD	$LN16@DES_ede3_c
$LN46@DES_ede3_c:
	DD	$LN33@DES_ede3_c
	DD	$LN32@DES_ede3_c
	DD	$LN31@DES_ede3_c
	DD	$LN30@DES_ede3_c
	DD	$LN29@DES_ede3_c
	DD	$LN28@DES_ede3_c
	DD	$LN27@DES_ede3_c
	DD	$LN26@DES_ede3_c
_DES_ede3_cbcm_encrypt ENDP
_TEXT	ENDS
END

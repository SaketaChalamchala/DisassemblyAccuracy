; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\srp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BL@JPDDAPOA@usage?3?5srp?5?$FLargs?$FN?5?$FLuser?$FN?5?6?$AA@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0CP@CPMGHJFL@?5?9verbose?5?5?5?5?5?5?5?5Talk?5alot?5while@ ; `string'
PUBLIC	??_C@_0CA@BMBDPPOE@?5?9config?5file?5?5?5?5A?5config?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0DH@HJDEJFFD@?5?9name?5arg?5?5?5?5?5?5?5The?5particular?5@ ; `string'
PUBLIC	??_C@_0CN@LIGOFOII@?5?9srpvfile?5arg?5?5?5The?5srp?5verifie@ ; `string'
PUBLIC	??_C@_0CP@ENHKBOPP@?5?9add?5?5?5?5?5?5?5?5?5?5?5?5add?5an?5user?5and@ ; `string'
PUBLIC	??_C@_0DO@DGONFHIF@?5?9modify?5?5?5?5?5?5?5?5?5modify?5the?5srp?5@ ; `string'
PUBLIC	??_C@_0DB@KMBAENMD@?5?9delete?5?5?5?5?5?5?5?5?5delete?5user?5fro@ ; `string'
PUBLIC	??_C@_0BM@MDIIBAOA@?5?9list?5?5?5?5?5?5?5?5?5?5?5list?5user?6?$AA@ ; `string'
PUBLIC	??_C@_0DN@MPMJFEDE@?5?9gn?5arg?5?5?5?5?5?5?5?5?5g?5and?5N?5values?5@ ; `string'
PUBLIC	??_C@_0DF@BFCABBLK@?5?9userinfo?5arg?5?5?5additional?5info@ ; `string'
PUBLIC	??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ ; `string'
PUBLIC	??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ ; `string'
PUBLIC	??_C@_0EA@KMOKHMNB@?5?9engine?5e?5?5?5?5?5?5?5?5?5?9?5use?5engine?5@ ; `string'
_BSS	SEGMENT
_conf	DD	01H DUP (?)
_section DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0EA@KMOKHMNB@?5?9engine?5e?5?5?5?5?5?5?5?5?5?9?5use?5engine?5@
CONST	SEGMENT
??_C@_0EA@KMOKHMNB@?5?9engine?5e?5?5?5?5?5?5?5?5?5?9?5use?5engine?5@ DB ' '
	DB	'-engine e         - use engine e, possibly a hardware device.'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
CONST	SEGMENT
??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ DB ' -passo'
	DB	'ut arg    output file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@
CONST	SEGMENT
??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ DB ' -pass'
	DB	'in arg     input file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@BFCABBLK@?5?9userinfo?5arg?5?5?5additional?5info@
CONST	SEGMENT
??_C@_0DF@BFCABBLK@?5?9userinfo?5arg?5?5?5additional?5info@ DB ' -userinf'
	DB	'o arg   additional info to be set for user', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@MPMJFEDE@?5?9gn?5arg?5?5?5?5?5?5?5?5?5g?5and?5N?5values?5@
CONST	SEGMENT
??_C@_0DN@MPMJFEDE@?5?9gn?5arg?5?5?5?5?5?5?5?5?5g?5and?5N?5values?5@ DB ' '
	DB	'-gn arg         g and N values to be used for new verifier', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MDIIBAOA@?5?9list?5?5?5?5?5?5?5?5?5?5?5list?5user?6?$AA@
CONST	SEGMENT
??_C@_0BM@MDIIBAOA@?5?9list?5?5?5?5?5?5?5?5?5?5?5list?5user?6?$AA@ DB ' -'
	DB	'list           list user', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@KMBAENMD@?5?9delete?5?5?5?5?5?5?5?5?5delete?5user?5fro@
CONST	SEGMENT
??_C@_0DB@KMBAENMD@?5?9delete?5?5?5?5?5?5?5?5?5delete?5user?5fro@ DB ' -d'
	DB	'elete         delete user from verifier file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@DGONFHIF@?5?9modify?5?5?5?5?5?5?5?5?5modify?5the?5srp?5@
CONST	SEGMENT
??_C@_0DO@DGONFHIF@?5?9modify?5?5?5?5?5?5?5?5?5modify?5the?5srp?5@ DB ' -'
	DB	'modify         modify the srp verifier of an existing user', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@ENHKBOPP@?5?9add?5?5?5?5?5?5?5?5?5?5?5?5add?5an?5user?5and@
CONST	SEGMENT
??_C@_0CP@ENHKBOPP@?5?9add?5?5?5?5?5?5?5?5?5?5?5?5add?5an?5user?5and@ DB ' '
	DB	'-add            add an user and srp verifier', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@LIGOFOII@?5?9srpvfile?5arg?5?5?5The?5srp?5verifie@
CONST	SEGMENT
??_C@_0CN@LIGOFOII@?5?9srpvfile?5arg?5?5?5The?5srp?5verifie@ DB ' -srpvfi'
	DB	'le arg   The srp verifier file name', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@HJDEJFFD@?5?9name?5arg?5?5?5?5?5?5?5The?5particular?5@
CONST	SEGMENT
??_C@_0DH@HJDEJFFD@?5?9name?5arg?5?5?5?5?5?5?5The?5particular?5@ DB ' -na'
	DB	'me arg       The particular srp definition to use', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BMBDPPOE@?5?9config?5file?5?5?5?5A?5config?5file?6?$AA@
CONST	SEGMENT
??_C@_0CA@BMBDPPOE@?5?9config?5file?5?5?5?5A?5config?5file?6?$AA@ DB ' -c'
	DB	'onfig file    A config file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@CPMGHJFL@?5?9verbose?5?5?5?5?5?5?5?5Talk?5alot?5while@
CONST	SEGMENT
??_C@_0CP@CPMGHJFL@?5?9verbose?5?5?5?5?5?5?5?5Talk?5alot?5while@ DB ' -ve'
	DB	'rbose        Talk alot while doing things', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JPDDAPOA@usage?3?5srp?5?$FLargs?$FN?5?$FLuser?$FN?5?6?$AA@
CONST	SEGMENT
??_C@_0BL@JPDDAPOA@usage?3?5srp?5?$FLargs?$FN?5?$FLuser?$FN?5?6?$AA@ DB 'u'
	DB	'sage: srp [args] [user] ', 0aH, 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_srp_usage DD	FLAT:??_C@_0BL@JPDDAPOA@usage?3?5srp?5?$FLargs?$FN?5?$FLuser?$FN?5?6?$AA@
	DD	FLAT:??_C@_01EEMJAFIK@?6?$AA@
	DD	FLAT:??_C@_0CP@CPMGHJFL@?5?9verbose?5?5?5?5?5?5?5?5Talk?5alot?5while@
	DD	FLAT:??_C@_0CA@BMBDPPOE@?5?9config?5file?5?5?5?5A?5config?5file?6?$AA@
	DD	FLAT:??_C@_0DH@HJDEJFFD@?5?9name?5arg?5?5?5?5?5?5?5The?5particular?5@
	DD	FLAT:??_C@_0CN@LIGOFOII@?5?9srpvfile?5arg?5?5?5The?5srp?5verifie@
	DD	FLAT:??_C@_0CP@ENHKBOPP@?5?9add?5?5?5?5?5?5?5?5?5?5?5?5add?5an?5user?5and@
	DD	FLAT:??_C@_0DO@DGONFHIF@?5?9modify?5?5?5?5?5?5?5?5?5modify?5the?5srp?5@
	DD	FLAT:??_C@_0DB@KMBAENMD@?5?9delete?5?5?5?5?5?5?5?5?5delete?5user?5fro@
	DD	FLAT:??_C@_0BM@MDIIBAOA@?5?9list?5?5?5?5?5?5?5?5?5?5?5list?5user?6?$AA@
	DD	FLAT:??_C@_0DN@MPMJFEDE@?5?9gn?5arg?5?5?5?5?5?5?5?5?5g?5and?5N?5values?5@
	DD	FLAT:??_C@_0DF@BFCABBLK@?5?9userinfo?5arg?5?5?5additional?5info@
	DD	FLAT:??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@
	DD	FLAT:??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
	DD	FLAT:??_C@_0EA@KMOKHMNB@?5?9engine?5e?5?5?5?5?5?5?5?5?5?9?5use?5engine?5@
	DD	00H
_DATA	ENDS
PUBLIC	_srp_main
PUBLIC	??_C@_08MHBLPCGN@?$CFs?5?$CC?$CFs?$CC?6?$AA@	; `string'
PUBLIC	??_C@_0N@NMGOCCED@?5?5?$CFd?5?$DN?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_09GNPLPNOP@g?5N?5entry?$AA@		; `string'
PUBLIC	??_C@_0L@IEDNHEPL@User?5entry?$AA@		; `string'
PUBLIC	??_C@_0N@MIOAMMGC@?4?2apps?2srp?4c?$AA@		; `string'
PUBLIC	??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@FOEHPNDP@failed?5to?5update?5srpvfile?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@HFPMKNMK@TXT_DB?5error?5number?5?$CFld?6?$AA@ ; `string'
PUBLIC	??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@ ; `string'
PUBLIC	??_C@_0EP@EANMHLPF@Validating?6?5?5?5user?$DN?$CC?$CFs?$CC?6?5srp_ver@ ; `string'
PUBLIC	??_C@_08NNKGPBFA@Pass?5?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_0CI@CPLJHLIA@Internal?5error?5validating?5SRP?5ve@ ; `string'
PUBLIC	??_C@_0CF@LNPAIMHK@Creating?6?5user?$DN?$CC?$CFs?$CC?6?5g?$DN?$CC?$CFs?$CC?6?5N?$DN?$CC@ ; `string'
PUBLIC	??_C@_0CG@DAKAEKAC@Internal?5error?5creating?5SRP?5veri@ ; `string'
PUBLIC	??_C@_0CE@MDMDGKEC@gNid?$DN?$CFs?5salt?5?$DN?$CC?$CFs?$CC?6?5verifier?5?$DN?$CC?$CF@ ; `string'
PUBLIC	??_C@_08FBJJFDKJ@?9verbose?$AA@			; `string'
PUBLIC	??_C@_07OOKHNANK@?9config?$AA@			; `string'
PUBLIC	??_C@_05IBCNGGP@?9name?$AA@			; `string'
PUBLIC	??_C@_09LJIFNPCB@?9srpvfile?$AA@		; `string'
PUBLIC	??_C@_04MNFJLOGO@?9add?$AA@			; `string'
PUBLIC	??_C@_07MECGGDBN@?9delete?$AA@			; `string'
PUBLIC	??_C@_07HDFGNLJC@?9modify?$AA@			; `string'
PUBLIC	??_C@_05PCAHAAIK@?9list?$AA@			; `string'
PUBLIC	??_C@_03DKAFMMIM@?9gn?$AA@			; `string'
PUBLIC	??_C@_09EALNJFHO@?9userinfo?$AA@		; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_08KCDBEMAI@?9passout?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0DH@LMDLHAMI@?9dbfile?5and?5?9configfile?5cannot?5b@ ; `string'
PUBLIC	??_C@_0EM@PMPNEKPN@Exactly?5one?5of?5the?5options?5?9add?0@ ; `string'
PUBLIC	??_C@_0DN@NLEHJIDG@Need?5at?5least?5one?5user?5for?5optio@ ; `string'
PUBLIC	??_C@_0DH@LLEICDLD@?9passin?0?5?9passout?5arguments?5only@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@ ; `string'
PUBLIC	??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@ ; `string'
PUBLIC	??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ ; `string'
PUBLIC	??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@		; `string'
PUBLIC	??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@		; `string'
PUBLIC	??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_01KMDKNFGN@?1?$AA@			; `string'
PUBLIC	??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@		; `string'
PUBLIC	??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@ ; `string'
PUBLIC	??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@ ; `string'
PUBLIC	??_C@_0DA@OMHJOFDK@trying?5to?5read?5default_srp?5in?5?$CC?5@ ; `string'
PUBLIC	??_C@_0M@JKIKNBFP@default_srp?$AA@		; `string'
PUBLIC	??_C@_03NPHLOKFJ@srp?$AA@			; `string'
PUBLIC	??_C@_08OFLJHDDG@RANDFILE?$AA@			; `string'
PUBLIC	??_C@_0CJ@DFCDNHLM@trying?5to?5read?5srpvfile?5in?5secti@ ; `string'
PUBLIC	??_C@_08GKFCLJJ@srpvfile?$AA@			; `string'
PUBLIC	??_C@_0CH@PEHEPCB@Trying?5to?5read?5SRP?5verifier?5file@ ; `string'
PUBLIC	??_C@_0BG@EIENBPNB@Database?5initialised?6?$AA@	; `string'
PUBLIC	??_C@_0BA@LGHGKGHD@Default?5g?5and?5N?$AA@	; `string'
PUBLIC	??_C@_0CB@KOEHJMPK@No?5g?5and?5N?5value?5for?5index?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0CC@MNJPNEHG@Database?5has?5no?5g?5N?5information?4@ ; `string'
PUBLIC	??_C@_0BK@KKOKEAJM@Starting?5user?5processing?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@OHPDKOHH@Processing?5user?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@EMNMALMK@List?5all?5users?6?$AA@	; `string'
PUBLIC	??_C@_0CG@OEOGKCBC@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5ignore@ ; `string'
PUBLIC	??_C@_0BI@OPAIHJMA@user?5?$CC?$CFs?$CC?5reactivated?4?6?$AA@ ; `string'
PUBLIC	??_C@_0EB@LMLENDJK@Cannot?5create?5srp?5verifier?5for?5u@ ; `string'
PUBLIC	??_C@_01MHEDDDHA@v?$AA@				; `string'
PUBLIC	??_C@_0CO@PDCLFPKK@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5operat@ ; `string'
PUBLIC	??_C@_0CP@FOKAEHPP@user?5?$CC?$CFs?$CC?5already?5updated?0?5opera@ ; `string'
PUBLIC	??_C@_0CC@FHMKAKHG@Verifying?5password?5for?5user?5?$CC?$CFs?$CC@ ; `string'
PUBLIC	??_C@_0DG@LNJNJBF@Invalid?5password?5for?5user?5?$CC?$CFs?$CC?0?5@ ; `string'
PUBLIC	??_C@_0BM@DKMHDOBC@Password?5for?5user?5?$CC?$CFs?$CC?5ok?4?6?$AA@ ; `string'
PUBLIC	??_C@_0EA@MJPDKFAD@Cannot?5create?5srp?5verifier?5for?5u@ ; `string'
PUBLIC	??_C@_0DA@MJKEIMHB@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5operat@ ; `string'
PUBLIC	??_C@_0BG@MPHFNMEP@user?5?$CC?$CFs?$CC?5revoked?4?5t?6?$AA@ ; `string'
PUBLIC	??_C@_0BH@MOLHBHNM@User?5procession?5done?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@LIGKEPIM@Trying?5to?5update?5srpvfile?4?6?$AA@ ; `string'
PUBLIC	??_C@_03CLCAEGCJ@new?$AA@			; `string'
PUBLIC	??_C@_0BN@IICNICGI@Temporary?5srpvfile?5created?4?6?$AA@ ; `string'
PUBLIC	??_C@_03PNKCFLFB@old?$AA@			; `string'
PUBLIC	??_C@_0BD@BOEBNMJP@srpvfile?5updated?4?6?$AA@	; `string'
PUBLIC	??_C@_0BB@JBBICPAO@User?5errors?5?$CFd?4?6?$AA@	; `string'
PUBLIC	??_C@_0BP@HIIPPFDL@SRP?5terminating?5with?5code?5?$CFd?4?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__getenv:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_NCONF_new:PROC
EXTRN	_NCONF_free:PROC
EXTRN	_NCONF_load:PROC
EXTRN	_NCONF_get_string:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_TXT_DB_insert:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BUF_strlcat:PROC
EXTRN	_SRP_create_verifier:PROC
EXTRN	_SRP_get_default_gN:PROC
EXTRN	_OBJ_cleanup:PROC
EXTRN	_X509_get_default_cert_area:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_write_file:PROC
EXTRN	_password_callback:PROC
EXTRN	_app_passwd:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_load_index:PROC
EXTRN	_save_index:PROC
EXTRN	_rotate_index:PROC
EXTRN	_free_index:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BP@HIIPPFDL@SRP?5terminating?5with?5code?5?$CFd?4?6?$AA@
CONST	SEGMENT
??_C@_0BP@HIIPPFDL@SRP?5terminating?5with?5code?5?$CFd?4?6?$AA@ DB 'SRP t'
	DB	'erminating with code %d.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JBBICPAO@User?5errors?5?$CFd?4?6?$AA@
CONST	SEGMENT
??_C@_0BB@JBBICPAO@User?5errors?5?$CFd?4?6?$AA@ DB 'User errors %d.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BOEBNMJP@srpvfile?5updated?4?6?$AA@
CONST	SEGMENT
??_C@_0BD@BOEBNMJP@srpvfile?5updated?4?6?$AA@ DB 'srpvfile updated.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_03PNKCFLFB@old?$AA@
CONST	SEGMENT
??_C@_03PNKCFLFB@old?$AA@ DB 'old', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IICNICGI@Temporary?5srpvfile?5created?4?6?$AA@
CONST	SEGMENT
??_C@_0BN@IICNICGI@Temporary?5srpvfile?5created?4?6?$AA@ DB 'Temporary sr'
	DB	'pvfile created.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CLCAEGCJ@new?$AA@
CONST	SEGMENT
??_C@_03CLCAEGCJ@new?$AA@ DB 'new', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LIGKEPIM@Trying?5to?5update?5srpvfile?4?6?$AA@
CONST	SEGMENT
??_C@_0BM@LIGKEPIM@Trying?5to?5update?5srpvfile?4?6?$AA@ DB 'Trying to up'
	DB	'date srpvfile.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MOLHBHNM@User?5procession?5done?4?6?$AA@
CONST	SEGMENT
??_C@_0BH@MOLHBHNM@User?5procession?5done?4?6?$AA@ DB 'User procession do'
	DB	'ne.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MPHFNMEP@user?5?$CC?$CFs?$CC?5revoked?4?5t?6?$AA@
CONST	SEGMENT
??_C@_0BG@MPHFNMEP@user?5?$CC?$CFs?$CC?5revoked?4?5t?6?$AA@ DB 'user "%s"'
	DB	' revoked. t', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@MJKEIMHB@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5operat@
CONST	SEGMENT
??_C@_0DA@MJKEIMHB@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5operat@ DB 'u'
	DB	'ser "%s" does not exist, operation ignored. t', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@MJPDKFAD@Cannot?5create?5srp?5verifier?5for?5u@
CONST	SEGMENT
??_C@_0EA@MJPDKFAD@Cannot?5create?5srp?5verifier?5for?5u@ DB 'Cannot crea'
	DB	'te srp verifier for user "%s", operation abandoned.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DKMHDOBC@Password?5for?5user?5?$CC?$CFs?$CC?5ok?4?6?$AA@
CONST	SEGMENT
??_C@_0BM@DKMHDOBC@Password?5for?5user?5?$CC?$CFs?$CC?5ok?4?6?$AA@ DB 'Pa'
	DB	'ssword for user "%s" ok.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@LNJNJBF@Invalid?5password?5for?5user?5?$CC?$CFs?$CC?0?5@
CONST	SEGMENT
??_C@_0DG@LNJNJBF@Invalid?5password?5for?5user?5?$CC?$CFs?$CC?0?5@ DB 'In'
	DB	'valid password for user "%s", operation abandoned.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@FHMKAKHG@Verifying?5password?5for?5user?5?$CC?$CFs?$CC@
CONST	SEGMENT
??_C@_0CC@FHMKAKHG@Verifying?5password?5for?5user?5?$CC?$CFs?$CC@ DB 'Ver'
	DB	'ifying password for user "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FOKAEHPP@user?5?$CC?$CFs?$CC?5already?5updated?0?5opera@
CONST	SEGMENT
??_C@_0CP@FOKAEHPP@user?5?$CC?$CFs?$CC?5already?5updated?0?5opera@ DB 'us'
	DB	'er "%s" already updated, operation ignored.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@PDCLFPKK@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5operat@
CONST	SEGMENT
??_C@_0CO@PDCLFPKK@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5operat@ DB 'u'
	DB	'ser "%s" does not exist, operation ignored.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01MHEDDDHA@v?$AA@
CONST	SEGMENT
??_C@_01MHEDDDHA@v?$AA@ DB 'v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@LMLENDJK@Cannot?5create?5srp?5verifier?5for?5u@
CONST	SEGMENT
??_C@_0EB@LMLENDJK@Cannot?5create?5srp?5verifier?5for?5u@ DB 'Cannot crea'
	DB	'te srp verifier for user "%s", operation abandoned .', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OPAIHJMA@user?5?$CC?$CFs?$CC?5reactivated?4?6?$AA@
CONST	SEGMENT
??_C@_0BI@OPAIHJMA@user?5?$CC?$CFs?$CC?5reactivated?4?6?$AA@ DB 'user "%s'
	DB	'" reactivated.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@OEOGKCBC@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5ignore@
CONST	SEGMENT
??_C@_0CG@OEOGKCBC@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5ignore@ DB 'u'
	DB	'ser "%s" does not exist, ignored. t', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EMNMALMK@List?5all?5users?6?$AA@
CONST	SEGMENT
??_C@_0BA@EMNMALMK@List?5all?5users?6?$AA@ DB 'List all users', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OHPDKOHH@Processing?5user?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BG@OHPDKOHH@Processing?5user?5?$CC?$CFs?$CC?6?$AA@ DB 'Processing '
	DB	'user "%s"', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KKOKEAJM@Starting?5user?5processing?6?$AA@
CONST	SEGMENT
??_C@_0BK@KKOKEAJM@Starting?5user?5processing?6?$AA@ DB 'Starting user pr'
	DB	'ocessing', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@MNJPNEHG@Database?5has?5no?5g?5N?5information?4@
CONST	SEGMENT
??_C@_0CC@MNJPNEHG@Database?5has?5no?5g?5N?5information?4@ DB 'Database h'
	DB	'as no g N information.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KOEHJMPK@No?5g?5and?5N?5value?5for?5index?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0CB@KOEHJMPK@No?5g?5and?5N?5value?5for?5index?5?$CC?$CFs?$CC?6@ DB 'N'
	DB	'o g and N value for index "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LGHGKGHD@Default?5g?5and?5N?$AA@
CONST	SEGMENT
??_C@_0BA@LGHGKGHD@Default?5g?5and?5N?$AA@ DB 'Default g and N', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EIENBPNB@Database?5initialised?6?$AA@
CONST	SEGMENT
??_C@_0BG@EIENBPNB@Database?5initialised?6?$AA@ DB 'Database initialised', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PEHEPCB@Trying?5to?5read?5SRP?5verifier?5file@
CONST	SEGMENT
??_C@_0CH@PEHEPCB@Trying?5to?5read?5SRP?5verifier?5file@ DB 'Trying to re'
	DB	'ad SRP verifier file "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GKFCLJJ@srpvfile?$AA@
CONST	SEGMENT
??_C@_08GKFCLJJ@srpvfile?$AA@ DB 'srpvfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DFCDNHLM@trying?5to?5read?5srpvfile?5in?5secti@
CONST	SEGMENT
??_C@_0CJ@DFCDNHLM@trying?5to?5read?5srpvfile?5in?5secti@ DB 'trying to r'
	DB	'ead srpvfile in section "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OFLJHDDG@RANDFILE?$AA@
CONST	SEGMENT
??_C@_08OFLJHDDG@RANDFILE?$AA@ DB 'RANDFILE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03NPHLOKFJ@srp?$AA@
CONST	SEGMENT
??_C@_03NPHLOKFJ@srp?$AA@ DB 'srp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JKIKNBFP@default_srp?$AA@
CONST	SEGMENT
??_C@_0M@JKIKNBFP@default_srp?$AA@ DB 'default_srp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OMHJOFDK@trying?5to?5read?5default_srp?5in?5?$CC?5@
CONST	SEGMENT
??_C@_0DA@OMHJOFDK@trying?5to?5read?5default_srp?5in?5?$CC?5@ DB 'trying '
	DB	'to read default_srp in " BASE_SECTION "', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@
CONST	SEGMENT
??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@ DB 'error o'
	DB	'n line %ld of config file ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@
CONST	SEGMENT
??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@ DB 'error l'
	DB	'oading the config file ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@ DB 'Using con'
	DB	'figuration from %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@
CONST	SEGMENT
??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@ DB 'openssl.cnf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1?$AA@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1?$AA@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@ DB 'Out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@
CONST	SEGMENT
??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@ DB 'SSLEAY_CONF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@
CONST	SEGMENT
??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@ DB 'OPENSSL_CONF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
CONST	SEGMENT
??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ DB 'Error getting pas'
	DB	'swords', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@
CONST	SEGMENT
??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@ DB ' '
	DB	'                the random number generator', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@
CONST	SEGMENT
??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@ DB ' '
	DB	'                load the file (or the files in the directory)'
	DB	' into', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ DB ' -rand f'
	DB	'ile%cfile%c...', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@LLEICDLD@?9passin?0?5?9passout?5arguments?5only@
CONST	SEGMENT
??_C@_0DH@LLEICDLD@?9passin?0?5?9passout?5arguments?5only@ DB '-passin, -'
	DB	'passout arguments only valid with one user.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@NLEHJIDG@Need?5at?5least?5one?5user?5for?5optio@
CONST	SEGMENT
??_C@_0DN@NLEHJIDG@Need?5at?5least?5one?5user?5for?5optio@ DB 'Need at le'
	DB	'ast one user for options -add, -delete, -modify. ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@PMPNEKPN@Exactly?5one?5of?5the?5options?5?9add?0@
CONST	SEGMENT
??_C@_0EM@PMPNEKPN@Exactly?5one?5of?5the?5options?5?9add?0@ DB 'Exactly o'
	DB	'ne of the options -add, -delete, -modify -list must be specif'
	DB	'ied.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@LMDLHAMI@?9dbfile?5and?5?9configfile?5cannot?5b@
CONST	SEGMENT
??_C@_0DH@LMDLHAMI@?9dbfile?5and?5?9configfile?5cannot?5b@ DB '-dbfile an'
	DB	'd -configfile cannot be specified together.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KCDBEMAI@?9passout?$AA@
CONST	SEGMENT
??_C@_08KCDBEMAI@?9passout?$AA@ DB '-passout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09EALNJFHO@?9userinfo?$AA@
CONST	SEGMENT
??_C@_09EALNJFHO@?9userinfo?$AA@ DB '-userinfo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03DKAFMMIM@?9gn?$AA@
CONST	SEGMENT
??_C@_03DKAFMMIM@?9gn?$AA@ DB '-gn', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PCAHAAIK@?9list?$AA@
CONST	SEGMENT
??_C@_05PCAHAAIK@?9list?$AA@ DB '-list', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HDFGNLJC@?9modify?$AA@
CONST	SEGMENT
??_C@_07HDFGNLJC@?9modify?$AA@ DB '-modify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MECGGDBN@?9delete?$AA@
CONST	SEGMENT
??_C@_07MECGGDBN@?9delete?$AA@ DB '-delete', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MNFJLOGO@?9add?$AA@
CONST	SEGMENT
??_C@_04MNFJLOGO@?9add?$AA@ DB '-add', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LJIFNPCB@?9srpvfile?$AA@
CONST	SEGMENT
??_C@_09LJIFNPCB@?9srpvfile?$AA@ DB '-srpvfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IBCNGGP@?9name?$AA@
CONST	SEGMENT
??_C@_05IBCNGGP@?9name?$AA@ DB '-name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OOKHNANK@?9config?$AA@
CONST	SEGMENT
??_C@_07OOKHNANK@?9config?$AA@ DB '-config', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FBJJFDKJ@?9verbose?$AA@
CONST	SEGMENT
??_C@_08FBJJFDKJ@?9verbose?$AA@ DB '-verbose', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MDMDGKEC@gNid?$DN?$CFs?5salt?5?$DN?$CC?$CFs?$CC?6?5verifier?5?$DN?$CC?$CF@
CONST	SEGMENT
??_C@_0CE@MDMDGKEC@gNid?$DN?$CFs?5salt?5?$DN?$CC?$CFs?$CC?6?5verifier?5?$DN?$CC?$CF@ DB 'g'
	DB	'Nid=%s salt ="%s"', 0aH, ' verifier ="%s"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DAKAEKAC@Internal?5error?5creating?5SRP?5veri@
CONST	SEGMENT
??_C@_0CG@DAKAEKAC@Internal?5error?5creating?5SRP?5veri@ DB 'Internal err'
	DB	'or creating SRP verifier', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@LNPAIMHK@Creating?6?5user?$DN?$CC?$CFs?$CC?6?5g?$DN?$CC?$CFs?$CC?6?5N?$DN?$CC@
CONST	SEGMENT
??_C@_0CF@LNPAIMHK@Creating?6?5user?$DN?$CC?$CFs?$CC?6?5g?$DN?$CC?$CFs?$CC?6?5N?$DN?$CC@ DB 'C'
	DB	'reating', 0aH, ' user="%s"', 0aH, ' g="%s"', 0aH, ' N="%s"', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CPLJHLIA@Internal?5error?5validating?5SRP?5ve@
CONST	SEGMENT
??_C@_0CI@CPLJHLIA@Internal?5error?5validating?5SRP?5ve@ DB 'Internal err'
	DB	'or validating SRP verifier', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NNKGPBFA@Pass?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_08NNKGPBFA@Pass?5?$CFs?6?$AA@ DB 'Pass %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@EANMHLPF@Validating?6?5?5?5user?$DN?$CC?$CFs?$CC?6?5srp_ver@
CONST	SEGMENT
??_C@_0EP@EANMHLPF@Validating?6?5?5?5user?$DN?$CC?$CFs?$CC?6?5srp_ver@ DB 'V'
	DB	'alidating', 0aH, '   user="%s"', 0aH, ' srp_verifier="%s"', 0aH
	DB	' srp_usersalt="%s"', 0aH, ' g="%s"', 0aH, ' N="%s"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
CONST	SEGMENT
??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@ DB 'vari'
	DB	'able lookup failed for %s::%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HFPMKNMK@TXT_DB?5error?5number?5?$CFld?6?$AA@
CONST	SEGMENT
??_C@_0BJ@HFPMKNMK@TXT_DB?5error?5number?5?$CFld?6?$AA@ DB 'TXT_DB error '
	DB	'number %ld', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FOEHPNDP@failed?5to?5update?5srpvfile?6?$AA@
CONST	SEGMENT
??_C@_0BL@FOEHPNDP@failed?5to?5update?5srpvfile?6?$AA@ DB 'failed to upda'
	DB	'te srpvfile', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@ DB 'Memory allocati'
	DB	'on failure', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MIOAMMGC@?4?2apps?2srp?4c?$AA@
CONST	SEGMENT
??_C@_0N@MIOAMMGC@?4?2apps?2srp?4c?$AA@ DB '.\apps\srp.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IEDNHEPL@User?5entry?$AA@
CONST	SEGMENT
??_C@_0L@IEDNHEPL@User?5entry?$AA@ DB 'User entry', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GNPLPNOP@g?5N?5entry?$AA@
CONST	SEGMENT
??_C@_09GNPLPNOP@g?5N?5entry?$AA@ DB 'g N entry', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NMGOCCED@?5?5?$CFd?5?$DN?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0N@NMGOCCED@?5?5?$CFd?5?$DN?5?$CC?$CFs?$CC?6?$AA@ DB '  %d = "%s"', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08MHBLPCGN@?$CFs?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_08MHBLPCGN@?$CFs?5?$CC?$CFs?$CC?6?$AA@ DB '%s "%s"', 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _srp_create_user
_TEXT	SEGMENT
_salt$ = -1052						; size = 4
_N$GSCopy$1$ = -1048					; size = 4
_srp_verifier$GSCopy$1$ = -1044				; size = 4
_srp_usersalt$GSCopy$1$ = -1040				; size = 4
_cb_tmp$ = -1036					; size = 8
_password$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_user$ = 8						; size = 4
_srp_verifier$ = 12					; size = 4
_srp_usersalt$ = 16					; size = 4
_g$ = 20						; size = 4
_N$ = 24						; size = 4
_passout$ = 28						; size = 4
_bio$ = 32						; size = 4
_verbose$ = 36						; size = 4
_srp_create_user PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\srp.c
; Line 241
	mov	eax, 1052				; 0000041cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1052], eax
	mov	eax, DWORD PTR _srp_verifier$[esp+1048]
	mov	DWORD PTR _srp_verifier$GSCopy$1$[esp+1052], eax
	mov	eax, DWORD PTR _srp_usersalt$[esp+1048]
	push	ebp
	mov	ebp, DWORD PTR _g$[esp+1052]
	mov	DWORD PTR _srp_usersalt$GSCopy$1$[esp+1056], eax
	mov	eax, DWORD PTR _N$[esp+1052]
	push	esi
	mov	esi, DWORD PTR _user$[esp+1056]
	mov	DWORD PTR _N$GSCopy$1$[esp+1060], eax
	mov	eax, DWORD PTR _passout$[esp+1056]
	push	edi
	mov	edi, DWORD PTR _bio$[esp+1060]
; Line 247
	mov	DWORD PTR _cb_tmp$[esp+1064], eax
; Line 249
	lea	eax, DWORD PTR _cb_tmp$[esp+1064]
	push	eax
	push	1
	lea	eax, DWORD PTR _password$[esp+1072]
	mov	DWORD PTR _salt$[esp+1072], 0
	push	1024					; 00000400H
	push	eax
	mov	DWORD PTR _cb_tmp$[esp+1084], esi
	call	_password_callback
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	$LN9@srp_create
; Line 250
	cmp	DWORD PTR _verbose$[esp+1060], 0
	je	SHORT $LN3@srp_create
	push	DWORD PTR _N$GSCopy$1$[esp+1064]
	push	ebp
	push	esi
	push	OFFSET ??_C@_0CF@LNPAIMHK@Creating?6?5user?$DN?$CC?$CFs?$CC?6?5g?$DN?$CC?$CFs?$CC?6?5N?$DN?$CC@
	push	edi
	call	_BIO_printf
	add	esp, 20					; 00000014H
$LN3@srp_create:
; Line 253
	push	ebp
	push	DWORD PTR _N$GSCopy$1$[esp+1068]
	mov	ebp, DWORD PTR _srp_verifier$GSCopy$1$[esp+1072]
	lea	eax, DWORD PTR _salt$[esp+1072]
	push	ebp
	push	eax
	lea	eax, DWORD PTR _password$[esp+1080]
	push	eax
	push	esi
	call	_SRP_create_verifier
	mov	esi, eax
	add	esp, 24					; 00000018H
	test	esi, esi
	jne	SHORT $LN4@srp_create
; Line 257
	push	OFFSET ??_C@_0CG@DAKAEKAC@Internal?5error?5creating?5SRP?5veri@
	push	edi
	call	_BIO_printf
; Line 258
	mov	eax, DWORD PTR _salt$[esp+1072]
	add	esp, 8
	jmp	SHORT $LN5@srp_create
$LN4@srp_create:
; Line 259
	mov	ecx, DWORD PTR _srp_usersalt$GSCopy$1$[esp+1064]
	mov	eax, DWORD PTR _salt$[esp+1064]
	mov	DWORD PTR [ecx], eax
$LN5@srp_create:
; Line 260
	cmp	DWORD PTR _verbose$[esp+1060], 1
	jle	SHORT $LN8@srp_create
	push	DWORD PTR [ebp]
	push	eax
	push	esi
	push	OFFSET ??_C@_0CE@MDMDGKEC@gNid?$DN?$CFs?5salt?5?$DN?$CC?$CFs?$CC?6?5verifier?5?$DN?$CC?$CF@
	push	edi
	call	_BIO_printf
	add	esp, 20					; 00000014H
$LN8@srp_create:
; Line 264
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
; Line 265
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1052]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1052				; 0000041cH
	ret	0
$LN9@srp_create:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1064]
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1052				; 0000041cH
	ret	0
_srp_create_user ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _srp_verify_user
_TEXT	SEGMENT
_N$GSCopy$1$ = -1048					; size = 4
_srp_usersalt$GSCopy$ = -1044				; size = 4
_verifier$ = -1040					; size = 4
_cb_tmp$ = -1036					; size = 8
_password$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_user$ = 8						; size = 4
_srp_verifier$ = 12					; size = 4
_srp_usersalt$ = 16					; size = 4
_g$ = 20						; size = 4
_N$ = 24						; size = 4
_passin$ = 28						; size = 4
_bio$ = 32						; size = 4
_verbose$ = 36						; size = 4
_srp_verify_user PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\srp.c
; Line 209
	mov	eax, 1048				; 00000418H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1048], eax
	mov	eax, DWORD PTR _srp_usersalt$[esp+1044]
	push	ebx
	mov	ebx, DWORD PTR _user$[esp+1048]
	push	ebp
	mov	ebp, DWORD PTR _g$[esp+1052]
	mov	DWORD PTR _srp_usersalt$GSCopy$[esp+1056], eax
	mov	eax, DWORD PTR _N$[esp+1052]
	push	esi
	mov	esi, DWORD PTR _srp_verifier$[esp+1056]
	mov	DWORD PTR _N$GSCopy$1$[esp+1060], eax
	mov	eax, DWORD PTR _passin$[esp+1056]
	push	edi
	mov	edi, DWORD PTR _bio$[esp+1060]
; Line 216
	mov	DWORD PTR _cb_tmp$[esp+1064], eax
; Line 218
	lea	eax, DWORD PTR _cb_tmp$[esp+1064]
	push	eax
	push	0
	lea	eax, DWORD PTR _password$[esp+1072]
	mov	DWORD PTR _verifier$[esp+1072], 0
	push	1024					; 00000400H
	push	eax
	mov	DWORD PTR _cb_tmp$[esp+1084], ebx
	call	_password_callback
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	$LN12@srp_verify
; Line 219
	cmp	DWORD PTR _verbose$[esp+1060], 0
	je	SHORT $LN3@srp_verify
	push	DWORD PTR _N$GSCopy$1$[esp+1064]
	push	ebp
	push	DWORD PTR _srp_usersalt$GSCopy$[esp+1072]
	push	esi
	push	ebx
	push	OFFSET ??_C@_0EP@EANMHLPF@Validating?6?5?5?5user?$DN?$CC?$CFs?$CC?6?5srp_ver@
	push	edi
	call	_BIO_printf
	add	esp, 28					; 0000001cH
$LN3@srp_verify:
; Line 222
	lea	eax, DWORD PTR _password$[esp+1064]
	push	eax
	push	OFFSET ??_C@_08NNKGPBFA@Pass?5?$CFs?6?$AA@
	push	edi
	call	_BIO_printf
; Line 224
	push	ebp
	push	DWORD PTR _N$GSCopy$1$[esp+1080]
	lea	eax, DWORD PTR _verifier$[esp+1084]
	push	eax
	lea	eax, DWORD PTR _srp_usersalt$GSCopy$[esp+1088]
	push	eax
	lea	eax, DWORD PTR _password$[esp+1092]
	push	eax
	push	ebx
	call	_SRP_create_verifier
	mov	ebx, eax
	add	esp, 36					; 00000024H
	test	ebx, ebx
	jne	SHORT $LN4@srp_verify
; Line 228
	push	OFFSET ??_C@_0CI@CPLJHLIA@Internal?5error?5validating?5SRP?5ve@
	push	edi
	call	_BIO_printf
	add	esp, 8
; Line 235
	mov	eax, ebx
	jmp	SHORT $LN5@srp_verify
$LN4@srp_verify:
; Line 230
	mov	edx, DWORD PTR _verifier$[esp+1064]
	mov	eax, edx
$LL8@srp_verify:
	mov	cl, BYTE PTR [eax]
	cmp	cl, BYTE PTR [esi]
	jne	SHORT $LN9@srp_verify
	test	cl, cl
	je	SHORT $LN10@srp_verify
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, BYTE PTR [esi+1]
	jne	SHORT $LN9@srp_verify
	add	eax, 2
	add	esi, 2
	test	cl, cl
	jne	SHORT $LL8@srp_verify
$LN10@srp_verify:
	xor	eax, eax
	jmp	SHORT $LN11@srp_verify
$LN9@srp_verify:
	sbb	eax, eax
	or	eax, 1
$LN11@srp_verify:
	xor	ecx, ecx
	test	eax, eax
; Line 232
	push	edx
	cmovne	ebx, ecx
	call	_CRYPTO_free
	add	esp, 4
; Line 235
	mov	eax, ebx
	jmp	SHORT $LN5@srp_verify
$LN12@srp_verify:
	xor	eax, eax
$LN5@srp_verify:
; Line 236
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1064]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1048				; 00000418H
	ret	0
_srp_verify_user ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _lookup_fail
_TEXT	SEGMENT
_name$ = 8						; size = 4
_tag$ = 12						; size = 4
_lookup_fail PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\srp.c
; Line 203
	push	DWORD PTR _tag$[esp-4]
	push	DWORD PTR _name$[esp]
	push	OFFSET ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 204
	ret	0
_lookup_fail ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _update_index
_TEXT	SEGMENT
_db$ = 8						; size = 4
_bio$ = 12						; size = 4
_row$ = 16						; size = 4
_update_index PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\srp.c
; Line 176
	push	edi
; Line 181
	push	181					; 000000b5H
	push	OFFSET ??_C@_0N@MIOAMMGC@?4?2apps?2srp?4c?$AA@
	push	28					; 0000001cH
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
	test	edi, edi
	jne	SHORT $LN5@update_ind
; Line 182
	push	OFFSET ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 183
	xor	eax, eax
	pop	edi
; Line 199
	ret	0
$LN5@update_ind:
; Line 187
	mov	ecx, DWORD PTR _row$[esp]
	push	ebx
; Line 192
	mov	ebx, DWORD PTR _db$[esp+4]
	push	edi
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [edi+4], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [edi+8], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [ecx+8], 0
	mov	DWORD PTR [edi+12], eax
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [edi+16], eax
	mov	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [edi+20], eax
	mov	DWORD PTR [ecx+20], 0
	mov	DWORD PTR [edi+24], 0
	push	DWORD PTR [ebx+4]
	call	_TXT_DB_insert
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@update_ind
; Line 193
	push	OFFSET ??_C@_0BL@FOEHPNDP@failed?5to?5update?5srpvfile?6?$AA@
	push	DWORD PTR _bio$[esp+8]
	call	_BIO_printf
; Line 194
	mov	eax, DWORD PTR [ebx+4]
	push	DWORD PTR [eax+16]
	push	OFFSET ??_C@_0BJ@HFPMKNMK@TXT_DB?5error?5number?5?$CFld?6?$AA@
	push	DWORD PTR _bio$[esp+20]
	call	_BIO_printf
; Line 195
	push	edi
	call	_CRYPTO_free
	add	esp, 24					; 00000018H
; Line 196
	xor	eax, eax
	pop	ebx
	pop	edi
; Line 199
	ret	0
$LN6@update_ind:
	pop	ebx
; Line 198
	mov	eax, 1
	pop	edi
; Line 199
	ret	0
_update_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_user
_TEXT	SEGMENT
_db$ = 8						; size = 4
_bio$ = 12						; size = 4
_userindex$ = 16					; size = 4
_verbose$ = 20						; size = 4
_print_user PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\srp.c
; Line 162
	push	edi
; Line 163
	mov	edi, DWORD PTR _verbose$[esp]
	test	edi, edi
	jle	SHORT $LN3@print_user
; Line 164
	push	ebx
	mov	ebx, DWORD PTR _db$[esp+4]
	push	ebp
	push	esi
	mov	esi, DWORD PTR _userindex$[esp+12]
	mov	eax, DWORD PTR [ebx+4]
	push	esi
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	ebp, eax
	add	esp, 8
; Line 166
	mov	ecx, DWORD PTR [ebp]
	cmp	BYTE PTR [ecx], 73			; 00000049H
	je	SHORT $LN5@print_user
; Line 167
	push	OFFSET ??_C@_0L@IEDNHEPL@User?5entry?$AA@
	push	edi
	push	esi
	mov	esi, DWORD PTR _bio$[esp+24]
	push	esi
	push	ebx
	call	_print_entry
	add	esp, 20					; 00000014H
; Line 168
	push	OFFSET ??_C@_09GNPLPNOP@g?5N?5entry?$AA@
	push	edi
	push	73					; 00000049H
	push	DWORD PTR [ebp+16]
	push	ebx
	call	_get_index
	add	esp, 12					; 0000000cH
	push	eax
	push	esi
	push	ebx
	call	_print_entry
	add	esp, 20					; 00000014H
$LN5@print_user:
	pop	esi
	pop	ebp
	pop	ebx
$LN3@print_user:
	pop	edi
; Line 173
	ret	0
_print_user ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_index
_TEXT	SEGMENT
_db$ = 8						; size = 4
_bio$ = 12						; size = 4
_indexindex$ = 16					; size = 4
_verbose$ = 20						; size = 4
_print_index PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\srp.c
; Line 158
	push	OFFSET ??_C@_09GNPLPNOP@g?5N?5entry?$AA@
	push	DWORD PTR _verbose$[esp]
	push	DWORD PTR _indexindex$[esp+4]
	push	DWORD PTR _bio$[esp+8]
	push	DWORD PTR _db$[esp+12]
	call	_print_entry
	add	esp, 20					; 00000014H
; Line 159
	ret	0
_print_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_entry
_TEXT	SEGMENT
_db$ = 8						; size = 4
_bio$ = 12						; size = 4
_indx$ = 16						; size = 4
_verbose$ = 20						; size = 4
_s$ = 24						; size = 4
_print_entry PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\srp.c
; Line 146
	mov	eax, DWORD PTR _indx$[esp-4]
	test	eax, eax
	js	SHORT $LN3@print_entr
	cmp	DWORD PTR _verbose$[esp-4], 0
	je	SHORT $LN3@print_entr
; Line 148
	push	esi
	push	edi
	push	eax
	mov	eax, DWORD PTR _db$[esp+8]
	mov	eax, DWORD PTR [eax+4]
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	edi, eax
; Line 149
	push	DWORD PTR [edi+12]
	push	DWORD PTR _s$[esp+16]
	push	OFFSET ??_C@_08MHBLPCGN@?$CFs?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _bio$[esp+24]
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 150
	xor	esi, esi
	npad	3
$LL4@print_entr:
; Line 151
	push	DWORD PTR [edi+esi*4]
	push	esi
	push	OFFSET ??_C@_0N@NMGOCCED@?5?5?$CFd?5?$DN?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	inc	esi
	add	esp, 16					; 00000010H
	cmp	esi, 6
	jl	SHORT $LL4@print_entr
	pop	edi
	pop	esi
$LN3@print_entr:
; Line 154
	ret	0
_print_entry ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_index
_TEXT	SEGMENT
_db$ = 8						; size = 4
_id$ = 12						; size = 4
_type$ = 16						; size = 1
_get_index PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\srp.c
; Line 121
	push	ebx
; Line 124
	mov	ebx, DWORD PTR _id$[esp]
	test	ebx, ebx
	jne	SHORT $LN8@get_index
; Line 125
	or	eax, -1
	pop	ebx
; Line 142
	ret	0
$LN8@get_index:
	push	esi
	push	edi
; Line 127
	mov	edi, DWORD PTR _db$[esp+8]
	xor	esi, esi
	mov	eax, DWORD PTR [edi+4]
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	cmp	BYTE PTR _type$[esp+8], 73		; 00000049H
	jne	SHORT $LN9@get_index
	test	eax, eax
	jle	SHORT $LN25@get_index
	npad	1
$LL4@get_index:
; Line 128
	mov	eax, DWORD PTR [edi+4]
	push	esi
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	ecx, eax
	add	esp, 8
; Line 130
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax], 73			; 00000049H
	jne	SHORT $LN2@get_index
	mov	ecx, DWORD PTR [ecx+12]
	mov	eax, ebx
	npad	3
$LL26@get_index:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN27@get_index
	test	dl, dl
	je	SHORT $LN28@get_index
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN27@get_index
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL26@get_index
$LN28@get_index:
	xor	eax, eax
	jmp	SHORT $LN29@get_index
$LN27@get_index:
	sbb	eax, eax
	or	eax, 1
$LN29@get_index:
	test	eax, eax
	je	SHORT $LN17@get_index
$LN2@get_index:
; Line 127
	mov	eax, DWORD PTR [edi+4]
	inc	esi
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@get_index
$LN25@get_index:
	pop	edi
	pop	esi
; Line 141
	or	eax, -1
	pop	ebx
; Line 142
	ret	0
$LN9@get_index:
; Line 133
	test	eax, eax
	jle	SHORT $LN25@get_index
$LL7@get_index:
; Line 134
	mov	eax, DWORD PTR [edi+4]
	push	esi
	push	DWORD PTR [eax+4]
	call	_sk_value
	add	esp, 8
; Line 137
	mov	ecx, DWORD PTR [eax]
	cmp	BYTE PTR [ecx], 73			; 00000049H
	je	SHORT $LN5@get_index
	mov	ecx, DWORD PTR [eax+12]
	mov	eax, ebx
$LL30@get_index:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN31@get_index
	test	dl, dl
	je	SHORT $LN32@get_index
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN31@get_index
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL30@get_index
$LN32@get_index:
	xor	eax, eax
	jmp	SHORT $LN33@get_index
$LN31@get_index:
	sbb	eax, eax
	or	eax, 1
$LN33@get_index:
	test	eax, eax
	je	SHORT $LN17@get_index
$LN5@get_index:
; Line 133
	mov	eax, DWORD PTR [edi+4]
	inc	esi
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL7@get_index
; Line 141
	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
; Line 142
	ret	0
$LN17@get_index:
	pop	edi
; Line 138
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 142
	ret	0
_get_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _srp_main
_TEXT	SEGMENT
_verbose$1$ = -124					; size = 4
_argv$GSCopy$1$ = -120					; size = 4
_errors$1$ = -116					; size = 4
_list_user$1$ = -112					; size = 4
_db$1$ = -108						; size = 4
_gNrow$1$ = -104					; size = 4
_passargin$1$ = -104					; size = 4
_doupdatedb$1$ = -100					; size = 4
_dbfile$1$ = -96					; size = 4
_tofree$1$ = -92					; size = 4
_gN$1$ = -88						; size = 4
_modify_user$1$ = -84					; size = 4
_passout$ = -80						; size = 4
_delete_user$1$ = -76					; size = 4
_ret$1$ = -72						; size = 4
_bio$1$ = -68						; size = 4
_maxgN$1$ = -68						; size = 4
_add_user$1$ = -64					; size = 4
_passin$ = -60						; size = 4
_userinfo$1$ = -56					; size = 4
_engine$1$ = -52					; size = 4
_passargout$1$ = -48					; size = 4
_errorline$ = -44					; size = 4
_gNindex$1$ = -40					; size = 4
_randfile$1$ = -36					; size = 4
_db_attr$ = -32						; size = 4
_row$1 = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_srp_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\srp.c
; Line 268
	mov	eax, 124				; 0000007cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+124], eax
	mov	eax, DWORD PTR _argv$[esp+120]
; Line 284
	xor	ecx, ecx
	push	ebx
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR _argv$GSCopy$1$[esp+136], eax
	xor	eax, eax
	mov	DWORD PTR _add_user$1$[esp+136], 0
	push	edi
; Line 313
	mov	edi, DWORD PTR _bio_err
	xor	ebp, ebp
	xor	ebx, ebx
	mov	DWORD PTR _list_user$1$[esp+140], 0
	mov	DWORD PTR _delete_user$1$[esp+140], 0
	mov	DWORD PTR _modify_user$1$[esp+140], 0
	mov	DWORD PTR _passargin$1$[esp+140], esi
	mov	DWORD PTR _passargout$1$[esp+140], esi
	mov	DWORD PTR _passin$[esp+140], esi
	mov	DWORD PTR _passout$[esp+140], esi
	mov	DWORD PTR _gN$1$[esp+140], esi
	mov	DWORD PTR _gNindex$1$[esp+140], -1
	mov	DWORD PTR _maxgN$1$[esp+140], -1
	mov	DWORD PTR _userinfo$1$[esp+140], eax
	mov	DWORD PTR _ret$1$[esp+140], 1
	mov	DWORD PTR _errors$1$[esp+140], eax
	mov	DWORD PTR _verbose$1$[esp+140], eax
	mov	DWORD PTR _doupdatedb$1$[esp+140], eax
	mov	DWORD PTR _dbfile$1$[esp+140], eax
	mov	DWORD PTR _db$1$[esp+140], eax
	mov	DWORD PTR _errorline$[esp+140], -1
	mov	DWORD PTR _randfile$1$[esp+140], eax
	mov	DWORD PTR _engine$1$[esp+140], eax
	mov	DWORD PTR _tofree$1$[esp+140], eax
	mov	DWORD PTR _conf, eax
	mov	DWORD PTR _section, eax
	test	edi, edi
	jne	SHORT $LN19@srp_main
; Line 314
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR _bio_err, edi
	test	edi, edi
	je	SHORT $LN333@srp_main
; Line 315
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	edi, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN333@srp_main:
	xor	ecx, ecx
$LN19@srp_main:
; Line 317
	mov	eax, DWORD PTR _argc$[esp+136]
; Line 318
	add	DWORD PTR _argv$GSCopy$1$[esp+140], 4
	dec	eax
	mov	DWORD PTR _argc$[esp+136], eax
; Line 319
	cmp	eax, 1
	jl	$LN56@srp_main
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	npad	8
$LL2@srp_main:
; Line 320
	mov	esi, DWORD PTR [esi]
	mov	ecx, OFFSET ??_C@_08FBJJFDKJ@?9verbose?$AA@
	mov	eax, esi
	npad	7
$LL266@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN267@srp_main
	test	dl, dl
	je	SHORT $LN268@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN267@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL266@srp_main
$LN268@srp_main:
	xor	eax, eax
	jmp	SHORT $LN269@srp_main
$LN267@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN269@srp_main:
	test	eax, eax
	jne	SHORT $LN20@srp_main
; Line 321
	inc	DWORD PTR _verbose$1$[esp+140]
	mov	ecx, DWORD PTR _argc$[esp+136]
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	jmp	$LN55@srp_main
$LN20@srp_main:
; Line 322
	mov	ecx, OFFSET ??_C@_07OOKHNANK@?9config?$AA@
	mov	eax, esi
$LL270@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN271@srp_main
	test	dl, dl
	je	SHORT $LN272@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN271@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL270@srp_main
$LN272@srp_main:
	xor	eax, eax
	jmp	SHORT $LN273@srp_main
$LN271@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN273@srp_main:
	test	eax, eax
	jne	SHORT $LN22@srp_main
; Line 323
	mov	ecx, DWORD PTR _argc$[esp+136]
; Line 325
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	dec	ecx
	mov	DWORD PTR _argc$[esp+136], ecx
	cmp	ecx, 1
	jl	$bad$387
	mov	ebx, DWORD PTR [esi+4]
	add	esi, 4
	jmp	$LN55@srp_main
$LN22@srp_main:
; Line 326
	mov	ecx, OFFSET ??_C@_05IBCNGGP@?9name?$AA@
	mov	eax, esi
	npad	5
$LL274@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN275@srp_main
	test	dl, dl
	je	SHORT $LN276@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN275@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL274@srp_main
$LN276@srp_main:
	xor	eax, eax
	jmp	SHORT $LN277@srp_main
$LN275@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN277@srp_main:
	test	eax, eax
	jne	SHORT $LN25@srp_main
; Line 327
	mov	ecx, DWORD PTR _argc$[esp+136]
; Line 329
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	dec	ecx
	mov	DWORD PTR _argc$[esp+136], ecx
	cmp	ecx, 1
	jl	$bad$387
	mov	eax, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _section, eax
	jmp	$LN55@srp_main
$LN25@srp_main:
; Line 330
	mov	ecx, OFFSET ??_C@_09LJIFNPCB@?9srpvfile?$AA@
	mov	eax, esi
	npad	4
$LL278@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN279@srp_main
	test	dl, dl
	je	SHORT $LN280@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN279@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL278@srp_main
$LN280@srp_main:
	xor	eax, eax
	jmp	SHORT $LN281@srp_main
$LN279@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN281@srp_main:
	test	eax, eax
	jne	SHORT $LN28@srp_main
; Line 331
	mov	ecx, DWORD PTR _argc$[esp+136]
; Line 333
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	dec	ecx
	mov	DWORD PTR _argc$[esp+136], ecx
	cmp	ecx, 1
	jl	$bad$387
	mov	edx, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _dbfile$1$[esp+140], edx
	jmp	$LN55@srp_main
$LN28@srp_main:
; Line 334
	mov	ecx, OFFSET ??_C@_04MNFJLOGO@?9add?$AA@
	mov	eax, esi
	npad	5
$LL282@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN283@srp_main
	test	dl, dl
	je	SHORT $LN284@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN283@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL282@srp_main
$LN284@srp_main:
	xor	eax, eax
	jmp	SHORT $LN285@srp_main
$LN283@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN285@srp_main:
	test	eax, eax
	jne	SHORT $LN31@srp_main
; Line 335
	mov	ecx, DWORD PTR _argc$[esp+136]
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	mov	DWORD PTR _add_user$1$[esp+140], 1
	jmp	$LN55@srp_main
$LN31@srp_main:
; Line 336
	mov	ecx, OFFSET ??_C@_07MECGGDBN@?9delete?$AA@
	mov	eax, esi
$LL286@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN287@srp_main
	test	dl, dl
	je	SHORT $LN288@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN287@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL286@srp_main
$LN288@srp_main:
	xor	eax, eax
	jmp	SHORT $LN289@srp_main
$LN287@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN289@srp_main:
	test	eax, eax
	jne	SHORT $LN33@srp_main
; Line 337
	mov	ecx, DWORD PTR _argc$[esp+136]
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	mov	DWORD PTR _delete_user$1$[esp+140], 1
	jmp	$LN55@srp_main
$LN33@srp_main:
; Line 338
	mov	ecx, OFFSET ??_C@_07HDFGNLJC@?9modify?$AA@
	mov	eax, esi
$LL290@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN291@srp_main
	test	dl, dl
	je	SHORT $LN292@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN291@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL290@srp_main
$LN292@srp_main:
	xor	eax, eax
	jmp	SHORT $LN293@srp_main
$LN291@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN293@srp_main:
	test	eax, eax
	jne	SHORT $LN35@srp_main
; Line 339
	mov	ecx, DWORD PTR _argc$[esp+136]
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	mov	DWORD PTR _modify_user$1$[esp+140], 1
	jmp	$LN55@srp_main
$LN35@srp_main:
; Line 340
	mov	ecx, OFFSET ??_C@_05PCAHAAIK@?9list?$AA@
	mov	eax, esi
$LL294@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN295@srp_main
	test	dl, dl
	je	SHORT $LN296@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN295@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL294@srp_main
$LN296@srp_main:
	xor	eax, eax
	jmp	SHORT $LN297@srp_main
$LN295@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN297@srp_main:
	test	eax, eax
	jne	SHORT $LN37@srp_main
; Line 341
	mov	ecx, DWORD PTR _argc$[esp+136]
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	mov	DWORD PTR _list_user$1$[esp+140], 1
	jmp	$LN55@srp_main
$LN37@srp_main:
; Line 342
	mov	ecx, OFFSET ??_C@_03DKAFMMIM@?9gn?$AA@
	mov	eax, esi
$LL298@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN299@srp_main
	test	dl, dl
	je	SHORT $LN300@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN299@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL298@srp_main
$LN300@srp_main:
	xor	eax, eax
	jmp	SHORT $LN301@srp_main
$LN299@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN301@srp_main:
	test	eax, eax
	jne	SHORT $LN39@srp_main
; Line 343
	mov	ecx, DWORD PTR _argc$[esp+136]
; Line 345
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	dec	ecx
	mov	DWORD PTR _argc$[esp+136], ecx
	cmp	ecx, 1
	jl	$bad$387
	mov	edx, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _gN$1$[esp+140], edx
	jmp	$LN55@srp_main
$LN39@srp_main:
; Line 346
	mov	ecx, OFFSET ??_C@_09EALNJFHO@?9userinfo?$AA@
	mov	eax, esi
	npad	5
$LL302@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN303@srp_main
	test	dl, dl
	je	SHORT $LN304@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN303@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL302@srp_main
$LN304@srp_main:
	xor	eax, eax
	jmp	SHORT $LN305@srp_main
$LN303@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN305@srp_main:
	test	eax, eax
	jne	SHORT $LN42@srp_main
; Line 347
	mov	ecx, DWORD PTR _argc$[esp+136]
; Line 349
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	dec	ecx
	mov	DWORD PTR _argc$[esp+136], ecx
	cmp	ecx, 1
	jl	$bad$387
	mov	eax, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _userinfo$1$[esp+140], eax
	jmp	$LN55@srp_main
$LN42@srp_main:
; Line 350
	mov	ecx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	eax, esi
	npad	5
$LL306@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN307@srp_main
	test	dl, dl
	je	SHORT $LN308@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN307@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL306@srp_main
$LN308@srp_main:
	xor	eax, eax
	jmp	SHORT $LN309@srp_main
$LN307@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN309@srp_main:
	test	eax, eax
	jne	SHORT $LN45@srp_main
; Line 351
	mov	ecx, DWORD PTR _argc$[esp+136]
; Line 353
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	dec	ecx
	mov	DWORD PTR _argc$[esp+136], ecx
	cmp	ecx, 1
	jl	$bad$387
	mov	edx, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _passargin$1$[esp+140], edx
	jmp	$LN55@srp_main
$LN45@srp_main:
; Line 354
	mov	ecx, OFFSET ??_C@_08KCDBEMAI@?9passout?$AA@
	mov	eax, esi
	npad	5
$LL310@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN311@srp_main
	test	dl, dl
	je	SHORT $LN312@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN311@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL310@srp_main
$LN312@srp_main:
	xor	eax, eax
	jmp	SHORT $LN313@srp_main
$LN311@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN313@srp_main:
	test	eax, eax
	jne	SHORT $LN48@srp_main
; Line 355
	mov	ecx, DWORD PTR _argc$[esp+136]
; Line 357
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	dec	ecx
	mov	DWORD PTR _argc$[esp+136], ecx
	cmp	ecx, 1
	jl	$bad$387
	mov	edx, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _passargout$1$[esp+140], edx
; Line 358
	jmp	SHORT $LN55@srp_main
$LN48@srp_main:
; Line 360
	mov	eax, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
$LL314@srp_main:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN315@srp_main
	test	cl, cl
	je	SHORT $LN316@srp_main
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN315@srp_main
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL314@srp_main
$LN316@srp_main:
	xor	eax, eax
	jmp	SHORT $LN317@srp_main
$LN315@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN317@srp_main:
; Line 363
	mov	esi, DWORD PTR _argv$GSCopy$1$[esp+140]
	test	eax, eax
	jne	$LN51@srp_main
; Line 361
	mov	ecx, DWORD PTR _argc$[esp+136]
	dec	ecx
	mov	DWORD PTR _argc$[esp+136], ecx
	cmp	ecx, 1
	jl	$bad$387
; Line 363
	mov	edx, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _engine$1$[esp+140], edx
$LN55@srp_main:
; Line 375
	dec	ecx
; Line 376
	add	esi, 4
	mov	DWORD PTR _argc$[esp+136], ecx
	mov	DWORD PTR _argv$GSCopy$1$[esp+140], esi
	cmp	ecx, 1
	jge	$LL2@srp_main
$LN353@srp_main:
	xor	ecx, ecx
$LN54@srp_main:
; Line 379
	mov	esi, DWORD PTR _dbfile$1$[esp+140]
	test	esi, esi
	je	SHORT $LN355@srp_main
	test	ebx, ebx
	je	SHORT $LN355@srp_main
; Line 380
	push	OFFSET ??_C@_0DH@LMDLHAMI@?9dbfile?5and?5?9configfile?5cannot?5b@
	push	edi
	call	_BIO_printf
; Line 382
	mov	edi, DWORD PTR _bio_err
	add	esp, 8
	mov	ecx, 1
$LN355@srp_main:
	mov	esi, DWORD PTR _passargin$1$[esp+140]
$LN56@srp_main:
; Line 384
	mov	eax, DWORD PTR _delete_user$1$[esp+140]
	mov	edx, DWORD PTR _modify_user$1$[esp+140]
	add	eax, edx
	add	eax, DWORD PTR _list_user$1$[esp+140]
	add	eax, DWORD PTR _add_user$1$[esp+140]
	cmp	eax, 1
	je	SHORT $LN57@srp_main
; Line 385
	push	OFFSET ??_C@_0EM@PMPNEKPN@Exactly?5one?5of?5the?5options?5?9add?0@
	push	edi
	call	_BIO_printf
; Line 387
	mov	edi, DWORD PTR _bio_err
	add	esp, 8
	mov	edx, DWORD PTR _modify_user$1$[esp+140]
	mov	ecx, 1
$LN57@srp_main:
; Line 389
	mov	eax, DWORD PTR _delete_user$1$[esp+140]
	lea	eax, DWORD PTR [edx+eax*2]
	cmp	eax, 1
	mov	eax, DWORD PTR _argc$[esp+136]
	jne	SHORT $LN58@srp_main
	test	eax, eax
	jg	SHORT $LN58@srp_main
; Line 390
	push	OFFSET ??_C@_0DN@NLEHJIDG@Need?5at?5least?5one?5user?5for?5optio@
	push	edi
	call	_BIO_printf
; Line 392
	mov	edi, DWORD PTR _bio_err
	add	esp, 8
	mov	eax, DWORD PTR _argc$[esp+136]
	mov	ecx, 1
$LN58@srp_main:
; Line 394
	cmp	DWORD PTR _passin$[esp+140], ebp
	jne	SHORT $LN60@srp_main
	cmp	DWORD PTR _passout$[esp+140], ebp
	je	SHORT $LN59@srp_main
$LN60@srp_main:
	cmp	eax, 1
	je	SHORT $LN59@srp_main
; Line 395
	push	OFFSET ??_C@_0DH@LLEICDLD@?9passin?0?5?9passout?5arguments?5only@
	push	edi
	call	_BIO_printf
; Line 400
	mov	edi, DWORD PTR _bio_err
	add	esp, 8
	jmp	SHORT $LN248@srp_main
$LN51@srp_main:
; Line 367
	mov	eax, DWORD PTR [esi]
	cmp	BYTE PTR [eax], 45			; 0000002dH
	jne	$LN353@srp_main
$bad$387:
; Line 369
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
	push	edi
	call	_BIO_printf
; Line 370
	mov	edi, DWORD PTR _bio_err
	add	esp, 12					; 0000000cH
	mov	ecx, 1
	jmp	$LN54@srp_main
$LN59@srp_main:
; Line 400
	test	ecx, ecx
	je	SHORT $LN61@srp_main
$LN248@srp_main:
; Line 401
	mov	eax, DWORD PTR _srp_usage
	mov	esi, OFFSET _srp_usage
	test	eax, eax
	je	SHORT $LN5@srp_main
	npad	5
$LL6@srp_main:
; Line 402
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	edi
	call	_BIO_printf
	mov	eax, DWORD PTR [esi+4]
	lea	esi, DWORD PTR [esi+4]
	mov	edi, DWORD PTR _bio_err
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LL6@srp_main
$LN5@srp_main:
; Line 404
	push	59					; 0000003bH
	push	59					; 0000003bH
	push	OFFSET ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
	push	edi
	call	_BIO_printf
; Line 406
	push	OFFSET ??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 408
	push	OFFSET ??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 32					; 00000020H
; Line 409
	jmp	SHORT $LN365@srp_main
$LN61@srp_main:
; Line 412
	call	_ERR_load_crypto_strings
; Line 415
	push	0
	push	DWORD PTR _engine$1$[esp+144]
	push	DWORD PTR _bio_err
	call	_setup_engine
; Line 418
	lea	eax, DWORD PTR _passout$[esp+152]
	push	eax
	lea	eax, DWORD PTR _passin$[esp+156]
	push	eax
	push	DWORD PTR _passargout$1$[esp+160]
	push	esi
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN62@srp_main
; Line 419
	push	OFFSET ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
$LN385@srp_main:
; Line 447
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN365@srp_main:
	mov	ebx, DWORD PTR _verbose$1$[esp+140]
$LN145@srp_main:
; Line 751
	test	ebx, ebx
	mov	ebx, DWORD PTR _ret$1$[esp+140]
	je	$LN146@srp_main
	push	ebx
	push	OFFSET ??_C@_0BP@HIIPPFDL@SRP?5terminating?5with?5code?5?$CFd?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	$LN146@srp_main
$LN62@srp_main:
; Line 423
	mov	esi, DWORD PTR _dbfile$1$[esp+140]
	test	esi, esi
	jne	$LN372@srp_main
; Line 426
	xor	edi, edi
	mov	DWORD PTR _tofree$1$[esp+140], edi
; Line 427
	test	ebx, ebx
	jne	$LN66@srp_main
; Line 428
	mov	esi, DWORD PTR __imp__getenv
	push	OFFSET ??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@
	call	esi
	mov	ebx, eax
	add	esp, 4
; Line 429
	test	ebx, ebx
	jne	SHORT $LN66@srp_main
; Line 430
	push	OFFSET ??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@
	call	esi
	mov	ebx, eax
	add	esp, 4
; Line 431
	test	ebx, ebx
	jne	SHORT $LN66@srp_main
; Line 432
	call	_X509_get_default_cert_area
	mov	edi, eax
; Line 444
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL318@srp_main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL318@srp_main
	sub	ecx, edx
; Line 445
	push	445					; 000001bdH
	push	OFFSET ??_C@_0N@MIOAMMGC@?4?2apps?2srp?4c?$AA@
	lea	esi, DWORD PTR [ecx+13]
	push	esi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _tofree$1$[esp+140], eax
; Line 446
	test	eax, eax
	jne	SHORT $LN67@srp_main
; Line 447
	push	OFFSET ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
; Line 448
	jmp	$LN385@srp_main
$LN67@srp_main:
; Line 450
	push	esi
	push	edi
	mov	edi, DWORD PTR _tofree$1$[esp+148]
	push	edi
	call	_BUF_strlcpy
; Line 451
	push	esi
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	push	edi
	call	_BUF_strlcat
; Line 453
	push	esi
	push	OFFSET ??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@
	push	edi
	call	_BUF_strlcat
	add	esp, 36					; 00000024H
; Line 454
	mov	ebx, edi
$LN66@srp_main:
; Line 457
	cmp	DWORD PTR _verbose$1$[esp+140], ebp
	je	SHORT $LN68@srp_main
	push	ebx
	push	OFFSET ??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN68@srp_main:
; Line 459
	push	0
	call	_NCONF_new
; Line 460
	lea	ecx, DWORD PTR _errorline$[esp+144]
	mov	DWORD PTR _conf, eax
	push	ecx
	push	ebx
	push	eax
	call	_NCONF_load
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN69@srp_main
; Line 461
	mov	eax, DWORD PTR _errorline$[esp+140]
; Line 462
	push	ebx
	test	eax, eax
	jg	SHORT $LN70@srp_main
	push	OFFSET ??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	$LN365@srp_main
$LN70@srp_main:
; Line 465
	push	eax
	push	OFFSET ??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 467
	jmp	$LN365@srp_main
$LN69@srp_main:
; Line 469
	test	edi, edi
	je	SHORT $LN72@srp_main
; Line 470
	push	edi
	call	_CRYPTO_free
	add	esp, 4
; Line 471
	xor	eax, eax
	mov	DWORD PTR _tofree$1$[esp+140], eax
$LN72@srp_main:
; Line 474
	push	DWORD PTR _conf
	push	DWORD PTR _bio_err
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN365@srp_main
; Line 478
	mov	eax, DWORD PTR _section
; Line 479
	mov	ebx, DWORD PTR _verbose$1$[esp+140]
	test	eax, eax
	jne	SHORT $LN250@srp_main
	test	ebx, ebx
	je	SHORT $LN75@srp_main
	push	OFFSET ??_C@_0DA@OMHJOFDK@trying?5to?5read?5default_srp?5in?5?$CC?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN75@srp_main:
; Line 483
	push	OFFSET ??_C@_0M@JKIKNBFP@default_srp?$AA@
	push	OFFSET ??_C@_03NPHLOKFJ@srp?$AA@
	push	DWORD PTR _conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _section, eax
; Line 484
	test	eax, eax
	jne	SHORT $LN250@srp_main
; Line 203
	push	OFFSET ??_C@_0M@JKIKNBFP@default_srp?$AA@
	push	OFFSET ??_C@_03NPHLOKFJ@srp?$AA@
	push	OFFSET ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 486
	jmp	$LN145@srp_main
$LN250@srp_main:
; Line 490
	mov	ecx, DWORD PTR _conf
	test	ecx, ecx
	je	SHORT $LN379@srp_main
; Line 491
	push	OFFSET ??_C@_08OFLJHDDG@RANDFILE?$AA@
	push	OFFSET ??_C@_03NPHLOKFJ@srp?$AA@
	push	ecx
	call	_NCONF_get_string
	mov	ecx, DWORD PTR _conf
	mov	edi, eax
	mov	eax, DWORD PTR _section
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _randfile$1$[esp+140], edi
	jmp	SHORT $LN77@srp_main
$LN379@srp_main:
	xor	edi, edi
$LN77@srp_main:
; Line 493
	test	ebx, ebx
	je	SHORT $LN78@srp_main
	push	eax
	push	OFFSET ??_C@_0CJ@DFCDNHLM@trying?5to?5read?5srpvfile?5in?5secti@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	ecx, DWORD PTR _conf
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _section
$LN78@srp_main:
; Line 497
	push	OFFSET ??_C@_08GKFCLJJ@srpvfile?$AA@
	push	eax
	push	ecx
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dbfile$1$[esp+140], esi
	test	esi, esi
	jne	SHORT $LN79@srp_main
; Line 498
	push	OFFSET ??_C@_08GKFCLJJ@srpvfile?$AA@
	push	DWORD PTR _section
	call	_lookup_fail
	add	esp, 8
; Line 499
	jmp	$LN145@srp_main
$LN79@srp_main:
; Line 503
	test	edi, edi
	je	SHORT $LN249@srp_main
; Line 506
	push	0
	push	DWORD PTR _bio_err
	push	edi
	call	_app_RAND_load_file
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN81@srp_main
$LN372@srp_main:
	mov	ebx, DWORD PTR _verbose$1$[esp+140]
$LN249@srp_main:
; Line 504
	call	_ERR_clear_error
$LN81@srp_main:
; Line 508
	test	ebx, ebx
	je	SHORT $LN82@srp_main
	push	esi
	push	OFFSET ??_C@_0CH@PEHEPCB@Trying?5to?5read?5SRP?5verifier?5file@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN82@srp_main:
; Line 511
	lea	eax, DWORD PTR _db_attr$[esp+140]
	push	eax
	push	esi
	call	_load_index
	mov	edi, eax
	add	esp, 8
	mov	DWORD PTR _db$1$[esp+140], edi
; Line 512
	test	edi, edi
	je	$LN145@srp_main
; Line 516
	mov	eax, DWORD PTR [edi+4]
	xor	esi, esi
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN8@srp_main
	or	ebp, -1
	npad	6
$LL9@srp_main:
; Line 517
	mov	eax, DWORD PTR [edi+4]
	push	esi
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	ecx, eax
	add	esp, 8
; Line 519
	mov	eax, DWORD PTR [ecx]
	cmp	BYTE PTR [eax], 73			; 00000049H
	jne	SHORT $LN7@srp_main
; Line 520
	mov	DWORD PTR _maxgN$1$[esp+140], esi
; Line 521
	test	ebp, ebp
	jns	SHORT $LN85@srp_main
	mov	eax, DWORD PTR _gN$1$[esp+140]
	test	eax, eax
	je	SHORT $LN85@srp_main
	mov	ecx, DWORD PTR [ecx+12]
	npad	5
$LL319@srp_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN320@srp_main
	test	dl, dl
	je	SHORT $LN321@srp_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN320@srp_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL319@srp_main
$LN321@srp_main:
	xor	eax, eax
	jmp	SHORT $LN322@srp_main
$LN320@srp_main:
	sbb	eax, eax
	or	eax, 1
$LN322@srp_main:
	test	eax, eax
	cmove	ebp, esi
$LN85@srp_main:
; Line 524
	xor	eax, eax
	cmp	ebx, 1
; Line 158
	push	OFFSET ??_C@_09GNPLPNOP@g?5N?5entry?$AA@
; Line 524
	setg	al
; Line 158
	push	eax
	push	esi
	push	DWORD PTR _bio_err
	push	edi
	call	_print_entry
	add	esp, 20					; 00000014H
$LN7@srp_main:
; Line 516
	mov	eax, DWORD PTR [edi+4]
	inc	esi
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	$LL9@srp_main
	mov	DWORD PTR _gNindex$1$[esp+140], ebp
	xor	ebp, ebp
$LN8@srp_main:
; Line 528
	test	ebx, ebx
	je	SHORT $LN86@srp_main
	push	OFFSET ??_C@_0BG@EIENBPNB@Database?5initialised?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN86@srp_main:
; Line 530
	mov	esi, DWORD PTR _gNindex$1$[esp+140]
	test	esi, esi
	js	SHORT $LN87@srp_main
; Line 531
	mov	eax, DWORD PTR [edi+4]
	push	esi
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	ebx, eax
	mov	DWORD PTR _gNrow$1$[esp+148], eax
; Line 532
	xor	eax, eax
	cmp	DWORD PTR _verbose$1$[esp+148], 1
	push	OFFSET ??_C@_0BA@LGHGKGHD@Default?5g?5and?5N?$AA@
	setg	al
	push	eax
	push	esi
	push	DWORD PTR _bio_err
	push	edi
	call	_print_entry
	add	esp, 28					; 0000001cH
	jmp	SHORT $LN90@srp_main
$LN87@srp_main:
; Line 533
	cmp	DWORD PTR _maxgN$1$[esp+140], 0
	jle	SHORT $LN89@srp_main
	mov	esi, DWORD PTR _gN$1$[esp+140]
	push	esi
	call	_SRP_get_default_gN
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN89@srp_main
; Line 534
	push	esi
	push	OFFSET ??_C@_0CB@KOEHJMPK@No?5g?5and?5N?5value?5for?5index?5?$CC?$CFs?$CC?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 535
	jmp	$LN145@srp_main
$LN89@srp_main:
; Line 537
	test	ebx, ebx
	je	SHORT $LN91@srp_main
	push	OFFSET ??_C@_0CC@MNJPNEHG@Database?5has?5no?5g?5N?5information?4@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN91@srp_main:
; Line 538
	xor	ebx, ebx
	mov	DWORD PTR _gNrow$1$[esp+140], ebx
$LN90@srp_main:
; Line 541
	mov	edx, DWORD PTR _verbose$1$[esp+140]
	cmp	edx, 1
	jle	SHORT $LN92@srp_main
	push	OFFSET ??_C@_0BK@KKOKEAJM@Starting?5user?5processing?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	edx, DWORD PTR _verbose$1$[esp+148]
	add	esp, 8
$LN92@srp_main:
; Line 543
	cmp	DWORD PTR _argc$[esp+136], 0
	jle	SHORT $LN347@srp_main
; Line 544
	mov	eax, DWORD PTR _argv$GSCopy$1$[esp+140]
	mov	ebp, DWORD PTR [eax]
	add	eax, 4
	mov	DWORD PTR _argv$GSCopy$1$[esp+140], eax
$LN347@srp_main:
	mov	ecx, DWORD PTR _list_user$1$[esp+140]
$LL10@srp_main:
; Line 546
	test	ecx, ecx
	jne	$LN94@srp_main
	test	ebp, ebp
	jne	$LN242@srp_main
; Line 722
	mov	ebx, DWORD PTR _verbose$1$[esp+140]
	test	ebx, ebx
	je	SHORT $LN136@srp_main
	push	OFFSET ??_C@_0BH@MOLHBHNM@User?5procession?5done?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN136@srp_main:
; Line 724
	mov	eax, DWORD PTR _doupdatedb$1$[esp+140]
	test	eax, eax
	je	$LN143@srp_main
; Line 726
	mov	eax, DWORD PTR [edi+4]
	xor	esi, esi
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN16@srp_main
	npad	4
$LL17@srp_main:
; Line 727
	mov	eax, DWORD PTR [edi+4]
	push	esi
	push	DWORD PTR [eax+4]
	call	_sk_value
	add	esp, 8
; Line 729
	mov	eax, DWORD PTR [eax]
	cmp	BYTE PTR [eax], 118			; 00000076H
	jne	SHORT $LN15@srp_main
; Line 731
	push	ebx
	push	esi
	mov	BYTE PTR [eax], 86			; 00000056H
	push	DWORD PTR _bio_err
	push	edi
	call	_print_user
	add	esp, 16					; 00000010H
$LN15@srp_main:
; Line 726
	mov	eax, DWORD PTR [edi+4]
	inc	esi
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL17@srp_main
$LN16@srp_main:
; Line 735
	test	ebx, ebx
	je	SHORT $LN139@srp_main
	push	OFFSET ??_C@_0BM@LIGKEPIM@Trying?5to?5update?5srpvfile?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN139@srp_main:
; Line 736
	mov	esi, DWORD PTR _dbfile$1$[esp+140]
	push	edi
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	esi
	call	_save_index
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN376@srp_main
; Line 739
	test	ebx, ebx
	je	SHORT $LN141@srp_main
	push	OFFSET ??_C@_0BN@IICNICGI@Temporary?5srpvfile?5created?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN141@srp_main:
; Line 740
	push	OFFSET ??_C@_03PNKCFLFB@old?$AA@
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	esi
	call	_rotate_index
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN376@srp_main
; Line 743
	test	ebx, ebx
	je	SHORT $LN143@srp_main
	push	OFFSET ??_C@_0BD@BOEBNMJP@srpvfile?5updated?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN143@srp_main:
; Line 746
	mov	eax, DWORD PTR _errors$1$[esp+140]
	xor	ecx, ecx
	test	eax, eax
	setne	cl
	mov	DWORD PTR _ret$1$[esp+140], ecx
	jmp	$err$388
$LN94@srp_main:
; Line 548
	test	ebp, ebp
	je	SHORT $LN96@srp_main
$LN242@srp_main:
; Line 549
	cmp	edx, 1
	jle	SHORT $LN96@srp_main
	push	ebp
	push	OFFSET ??_C@_0BG@OHPDKOHH@Processing?5user?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN96@srp_main:
; Line 550
	push	85					; 00000055H
	push	ebp
	push	edi
	call	_get_index
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	js	SHORT $LN97@srp_main
; Line 551
	cmp	DWORD PTR _verbose$1$[esp+140], 0
	jg	SHORT $LN153@srp_main
	cmp	DWORD PTR _list_user$1$[esp+140], 0
	jne	SHORT $LN153@srp_main
	xor	eax, eax
	jmp	SHORT $LN154@srp_main
$LN153@srp_main:
	mov	eax, 1
$LN154@srp_main:
	push	eax
	push	esi
	push	DWORD PTR _bio_err
	push	edi
	call	_print_user
	add	esp, 16					; 00000010H
$LN97@srp_main:
; Line 554
	mov	ecx, DWORD PTR _list_user$1$[esp+140]
	test	ecx, ecx
	je	$LN98@srp_main
; Line 555
	test	ebp, ebp
	jne	$LN100@srp_main
; Line 556
	push	OFFSET ??_C@_0BA@EMNMALMK@List?5all?5users?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 558
	mov	eax, DWORD PTR [edi+4]
	xor	ebx, ebx
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN13@srp_main
	npad	1
$LL14@srp_main:
; Line 164
	mov	eax, DWORD PTR [edi+4]
; Line 559
	mov	esi, DWORD PTR _bio_err
; Line 164
	push	ebx
; Line 559
	mov	DWORD PTR _bio$1$[esp+144], esi
; Line 164
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	ebp, eax
	add	esp, 8
; Line 166
	mov	eax, DWORD PTR [ebp]
	cmp	BYTE PTR [eax], 73			; 00000049H
	je	$LN12@srp_main
; Line 146
	test	ebx, ebx
	js	SHORT $LN177@srp_main
; Line 148
	mov	eax, DWORD PTR [edi+4]
	push	ebx
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	edi, eax
; Line 149
	push	DWORD PTR [edi+12]
	push	OFFSET ??_C@_0L@IEDNHEPL@User?5entry?$AA@
	push	OFFSET ??_C@_08MHBLPCGN@?$CFs?5?$CC?$CFs?$CC?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 150
	xor	esi, esi
$LL178@srp_main:
; Line 151
	push	DWORD PTR [edi+esi*4]
	push	esi
	push	OFFSET ??_C@_0N@NMGOCCED@?5?5?$CFd?5?$DN?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	inc	esi
	add	esp, 16					; 00000010H
	cmp	esi, 6
	jl	SHORT $LL178@srp_main
	mov	esi, DWORD PTR _bio$1$[esp+140]
	mov	edi, DWORD PTR _db$1$[esp+140]
$LN177@srp_main:
; Line 168
	push	73					; 00000049H
	push	DWORD PTR [ebp+16]
	push	edi
	call	_get_index
	add	esp, 12					; 0000000cH
; Line 146
	test	eax, eax
	js	SHORT $LN12@srp_main
; Line 148
	push	eax
	mov	eax, DWORD PTR [edi+4]
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	edi, eax
; Line 149
	push	DWORD PTR [edi+12]
	push	OFFSET ??_C@_09GNPLPNOP@g?5N?5entry?$AA@
	push	OFFSET ??_C@_08MHBLPCGN@?$CFs?5?$CC?$CFs?$CC?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 150
	xor	esi, esi
	npad	2
$LL184@srp_main:
; Line 151
	push	DWORD PTR [edi+esi*4]
	push	esi
	push	OFFSET ??_C@_0N@NMGOCCED@?5?5?$CFd?5?$DN?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	inc	esi
	add	esp, 16					; 00000010H
	cmp	esi, 6
	jl	SHORT $LL184@srp_main
	mov	edi, DWORD PTR _db$1$[esp+140]
$LN12@srp_main:
; Line 558
	mov	eax, DWORD PTR [edi+4]
	inc	ebx
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL14@srp_main
$LN13@srp_main:
; Line 561
	xor	ecx, ecx
	mov	DWORD PTR _list_user$1$[esp+140], ecx
	jmp	$LN133@srp_main
$LN100@srp_main:
; Line 562
	test	esi, esi
	jns	$LN133@srp_main
; Line 563
	push	ebp
	push	OFFSET ??_C@_0CG@OEOGKCBC@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5ignore@
$LN383@srp_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 565
	inc	DWORD PTR _errors$1$[esp+140]
; Line 566
	jmp	$LN380@srp_main
$LN98@srp_main:
; Line 567
	cmp	DWORD PTR _add_user$1$[esp+140], 0
	je	$LN103@srp_main
; Line 568
	test	esi, esi
	js	SHORT $LN105@srp_main
; Line 570
	mov	eax, DWORD PTR [edi+4]
	push	esi
	push	DWORD PTR [eax+4]
	call	_sk_value
; Line 572
	push	ebp
	push	OFFSET ??_C@_0BI@OPAIHJMA@user?5?$CC?$CFs?$CC?5reactivated?4?6?$AA@
	push	DWORD PTR _bio_err
	mov	esi, eax
	call	_BIO_printf
; Line 573
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax], 86			; 00000056H
; Line 576
	jmp	$LN381@srp_main
$LN105@srp_main:
; Line 579
	mov	DWORD PTR _row$1[esp+144], 0
; Line 580
	mov	DWORD PTR _row$1[esp+148], 0
; Line 581
	mov	DWORD PTR _row$1[esp+160], 0
; Line 582
	test	ebx, ebx
	je	SHORT $LN155@srp_main
	mov	eax, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [ebx+8]
	jmp	SHORT $LN158@srp_main
$LN155@srp_main:
	mov	ecx, DWORD PTR _gN$1$[esp+140]
	xor	eax, eax
$LN158@srp_main:
	mov	ebx, DWORD PTR _verbose$1$[esp+140]
	push	ebx
	push	DWORD PTR _bio_err
	push	DWORD PTR _passout$[esp+148]
	push	eax
	push	ecx
	lea	eax, DWORD PTR _row$1[esp+168]
	push	eax
	lea	eax, DWORD PTR _row$1[esp+168]
	push	eax
	push	ebp
	call	_srp_create_user
	add	esp, 32					; 00000020H
	mov	esi, eax
; Line 595
	push	ebp
	test	esi, esi
	je	$LN204@srp_main
	call	_BUF_strdup
; Line 596
	push	OFFSET ??_C@_01MHEDDDHA@v?$AA@
	mov	DWORD PTR _row$1[esp+160], eax
	call	_BUF_strdup
; Line 597
	push	esi
	mov	DWORD PTR _row$1[esp+152], eax
	call	_BUF_strdup
; Line 607
	mov	ecx, DWORD PTR _row$1[esp+164]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _row$1[esp+156], eax
	test	ecx, ecx
	je	SHORT $LN341@srp_main
	test	eax, eax
	je	SHORT $LN339@srp_main
	cmp	DWORD PTR _row$1[esp+140], 0
	je	SHORT $LN339@srp_main
	cmp	DWORD PTR _row$1[esp+144], 0
	je	SHORT $LN339@srp_main
	cmp	DWORD PTR _row$1[esp+148], 0
	je	SHORT $LN339@srp_main
	mov	ebp, DWORD PTR _userinfo$1$[esp+140]
	test	ebp, ebp
	je	SHORT $LN110@srp_main
	push	ebp
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR _row$1[esp+160], eax
	test	eax, eax
	je	SHORT $LN335@srp_main
$LN110@srp_main:
	lea	eax, DWORD PTR _row$1[esp+140]
	push	eax
	push	DWORD PTR _bio_err
	push	edi
	call	_update_index
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN382@srp_main
$LN335@srp_main:
; Line 746
	mov	ecx, DWORD PTR _row$1[esp+152]
	mov	eax, DWORD PTR _row$1[esp+156]
$LN339@srp_main:
; Line 608
	test	ecx, ecx
	je	SHORT $LN341@srp_main
; Line 609
	push	ecx
	call	_CRYPTO_free
	mov	eax, DWORD PTR _row$1[esp+160]
	add	esp, 4
$LN341@srp_main:
; Line 610
	test	eax, eax
	je	SHORT $LN112@srp_main
; Line 611
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN112@srp_main:
; Line 612
	mov	eax, DWORD PTR _row$1[esp+160]
	test	eax, eax
	je	SHORT $LN113@srp_main
; Line 613
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN113@srp_main:
; Line 614
	mov	eax, DWORD PTR _row$1[esp+140]
	test	eax, eax
	je	SHORT $LN114@srp_main
; Line 615
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN114@srp_main:
; Line 616
	mov	eax, DWORD PTR _row$1[esp+144]
	test	eax, eax
	je	SHORT $LN115@srp_main
; Line 617
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN115@srp_main:
; Line 618
	mov	eax, DWORD PTR _row$1[esp+148]
	test	eax, eax
	je	$LN376@srp_main
; Line 619
	push	eax
	call	_CRYPTO_free
	add	esp, 4
; Line 620
	jmp	$LN376@srp_main
$LN103@srp_main:
; Line 624
	cmp	DWORD PTR _modify_user$1$[esp+140], 0
	je	$LN117@srp_main
; Line 625
	test	esi, esi
	jns	SHORT $LN119@srp_main
; Line 626
	push	ebp
	push	OFFSET ??_C@_0CO@PDCLFPKK@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5operat@
; Line 630
	jmp	$LN383@srp_main
$LN119@srp_main:
; Line 632
	mov	eax, DWORD PTR [edi+4]
	push	esi
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	edi, eax
	add	esp, 8
; Line 634
	mov	eax, DWORD PTR [edi]
; Line 635
	mov	al, BYTE PTR [eax]
	cmp	al, 118					; 00000076H
	jne	SHORT $LN121@srp_main
; Line 636
	push	ebp
	push	OFFSET ??_C@_0CP@FOKAEHPP@user?5?$CC?$CFs?$CC?5already?5updated?0?5opera@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 640
	mov	edi, DWORD PTR _db$1$[esp+152]
	add	esp, 12					; 0000000cH
	inc	DWORD PTR _errors$1$[esp+140]
	jmp	$LN380@srp_main
$LN121@srp_main:
; Line 643
	cmp	al, 86					; 00000056H
	jne	SHORT $LN126@srp_main
; Line 646
	cmp	DWORD PTR _verbose$1$[esp+140], 0
	je	SHORT $LN124@srp_main
	push	ebp
	push	OFFSET ??_C@_0CC@FHMKAKHG@Verifying?5password?5for?5user?5?$CC?$CFs?$CC@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN124@srp_main:
; Line 650
	push	73					; 00000049H
	push	DWORD PTR [edi+16]
	push	DWORD PTR _db$1$[esp+148]
	call	_get_index
	add	esp, 12					; 0000000cH
	test	eax, eax
	js	SHORT $LN159@srp_main
; Line 651
	mov	eax, DWORD PTR _db$1$[esp+140]
	push	esi
	mov	eax, DWORD PTR [eax+4]
	push	DWORD PTR [eax+4]
	call	_sk_value
	add	esp, 8
; Line 656
	test	eax, eax
	je	SHORT $LN159@srp_main
	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN162@srp_main
$LN159@srp_main:
	mov	eax, DWORD PTR [edi+16]
	xor	ecx, ecx
$LN162@srp_main:
	push	DWORD PTR _verbose$1$[esp+140]
	push	DWORD PTR _bio_err
	push	DWORD PTR _passin$[esp+148]
	push	ecx
	push	eax
	push	DWORD PTR [edi+8]
	push	DWORD PTR [edi+4]
	push	ebp
	call	_srp_verify_user
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$LN206@srp_main
$LN126@srp_main:
; Line 668
	mov	edx, DWORD PTR _verbose$1$[esp+140]
	test	edx, edx
	je	SHORT $LN127@srp_main
	push	ebp
	push	OFFSET ??_C@_0BM@DKMHDOBC@Password?5for?5user?5?$CC?$CFs?$CC?5ok?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	edx, DWORD PTR _verbose$1$[esp+152]
	add	esp, 12					; 0000000cH
$LN127@srp_main:
; Line 672
	test	ebx, ebx
	je	SHORT $LN163@srp_main
	mov	eax, DWORD PTR [ebx+4]
	mov	ecx, DWORD PTR [ebx+8]
	jmp	SHORT $LN166@srp_main
$LN163@srp_main:
	xor	eax, eax
	xor	ecx, ecx
$LN166@srp_main:
	push	edx
	push	DWORD PTR _bio_err
	lea	ebx, DWORD PTR [edi+8]
	push	DWORD PTR _passout$[esp+148]
	lea	esi, DWORD PTR [edi+4]
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	ebp
	call	_srp_create_user
	mov	ecx, eax
	add	esp, 32					; 00000020H
	test	ecx, ecx
	je	$LN207@srp_main
; Line 686
	mov	eax, DWORD PTR [edi]
; Line 687
	push	ecx
	mov	BYTE PTR [eax], 118			; 00000076H
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR [edi+16], eax
; Line 691
	cmp	DWORD PTR [edi+12], 0
	je	$LN371@srp_main
	test	eax, eax
	je	$LN371@srp_main
	cmp	DWORD PTR [edi], 0
	je	$LN371@srp_main
	cmp	DWORD PTR [esi], 0
	je	$LN371@srp_main
	cmp	DWORD PTR [ebx], 0
	je	$LN371@srp_main
	mov	ebp, DWORD PTR _userinfo$1$[esp+140]
	test	ebp, ebp
	je	SHORT $LN129@srp_main
	push	ebp
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR [edi+20], eax
	test	eax, eax
	je	$LN371@srp_main
$LN129@srp_main:
; Line 697
	mov	edi, DWORD PTR _db$1$[esp+140]
	jmp	SHORT $LN382@srp_main
$LN117@srp_main:
; Line 698
	cmp	DWORD PTR _delete_user$1$[esp+140], 0
	je	SHORT $LN133@srp_main
; Line 699
	test	esi, esi
	jns	SHORT $LN132@srp_main
; Line 700
	push	ebp
	push	OFFSET ??_C@_0DA@MJKEIMHB@user?5?$CC?$CFs?$CC?5does?5not?5exist?0?5operat@
; Line 704
	jmp	$LN383@srp_main
$LN132@srp_main:
; Line 705
	mov	eax, DWORD PTR [edi+4]
	push	esi
	push	DWORD PTR [eax+4]
	call	_sk_value
; Line 707
	push	ebp
	push	OFFSET ??_C@_0BG@MPHFNMEP@user?5?$CC?$CFs?$CC?5revoked?4?5t?6?$AA@
	push	DWORD PTR _bio_err
	mov	esi, eax
	call	_BIO_printf
; Line 709
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax], 82			; 00000052H
$LN381@srp_main:
; Line 707
	add	esp, 20					; 00000014H
$LN382@srp_main:
; Line 711
	mov	DWORD PTR _doupdatedb$1$[esp+140], 1
$LN380@srp_main:
	mov	ecx, DWORD PTR _list_user$1$[esp+140]
$LN133@srp_main:
; Line 714
	mov	eax, DWORD PTR _argc$[esp+136]
; Line 715
	mov	ebx, DWORD PTR _gNrow$1$[esp+140]
	dec	eax
	mov	edx, DWORD PTR _verbose$1$[esp+140]
	mov	DWORD PTR _argc$[esp+136], eax
	test	eax, eax
	jle	SHORT $LN134@srp_main
	mov	eax, DWORD PTR _argv$GSCopy$1$[esp+140]
	mov	ebp, DWORD PTR [eax]
	add	eax, 4
	mov	DWORD PTR _argv$GSCopy$1$[esp+140], eax
	jmp	$LL10@srp_main
$LN134@srp_main:
; Line 717
	xor	ebp, ebp
; Line 718
	xor	ecx, ecx
	mov	DWORD PTR _list_user$1$[esp+140], ecx
; Line 720
	jmp	$LL10@srp_main
$LN204@srp_main:
; Line 589
	push	OFFSET ??_C@_0EB@LMLENDJK@Cannot?5create?5srp?5verifier?5for?5u@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 592
	mov	eax, DWORD PTR _errors$1$[esp+152]
	add	esp, 12					; 0000000cH
	inc	eax
; Line 593
	jmp	SHORT $err$388
$LN206@srp_main:
; Line 661
	push	ebp
	push	OFFSET ??_C@_0DG@LNJNJBF@Invalid?5password?5for?5user?5?$CC?$CFs?$CC?0?5@
$LN384@srp_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 664
	mov	eax, DWORD PTR _errors$1$[esp+152]
	add	esp, 12					; 0000000cH
; Line 665
	mov	ebx, DWORD PTR _verbose$1$[esp+140]
	inc	eax
	jmp	SHORT $err$388
$LN207@srp_main:
; Line 679
	push	ebp
	push	OFFSET ??_C@_0EA@MJPDKFAD@Cannot?5create?5srp?5verifier?5for?5u@
	jmp	SHORT $LN384@srp_main
$LN371@srp_main:
	mov	ebx, DWORD PTR _verbose$1$[esp+140]
$LN376@srp_main:
	mov	eax, DWORD PTR _errors$1$[esp+140]
$err$388:
; Line 748
	test	eax, eax
	je	$LN145@srp_main
; Line 749
	test	ebx, ebx
	je	SHORT $LN377@srp_main
	push	eax
	push	OFFSET ??_C@_0BB@JBBICPAO@User?5errors?5?$CFd?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	$LN145@srp_main
$LN377@srp_main:
	mov	ebx, DWORD PTR _ret$1$[esp+140]
$LN146@srp_main:
; Line 752
	mov	eax, DWORD PTR _tofree$1$[esp+140]
	test	eax, eax
	je	SHORT $LN147@srp_main
; Line 753
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN147@srp_main:
; Line 754
	test	ebx, ebx
	je	SHORT $LN148@srp_main
; Line 755
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN148@srp_main:
; Line 756
	mov	eax, DWORD PTR _randfile$1$[esp+140]
	test	eax, eax
	je	SHORT $LN149@srp_main
; Line 757
	push	DWORD PTR _bio_err
	push	eax
	call	_app_RAND_write_file
	add	esp, 8
$LN149@srp_main:
; Line 758
	mov	eax, DWORD PTR _conf
	test	eax, eax
	je	SHORT $LN150@srp_main
; Line 759
	push	eax
	call	_NCONF_free
	add	esp, 4
$LN150@srp_main:
; Line 760
	mov	eax, DWORD PTR _db$1$[esp+140]
	test	eax, eax
	je	SHORT $LN151@srp_main
; Line 761
	push	eax
	call	_free_index
	add	esp, 4
$LN151@srp_main:
; Line 763
	call	_OBJ_cleanup
; Line 766
	mov	ecx, DWORD PTR __$ArrayPad$[esp+140]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 124				; 0000007cH
	ret	0
_srp_main ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost_keywrap.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_keyDiversifyCryptoPro
PUBLIC	_keyWrapCryptoPro
PUBLIC	_keyUnwrapCryptoPro
EXTRN	_gost_enc:PROC
EXTRN	_gost_dec:PROC
EXTRN	_gost_enc_cfb:PROC
EXTRN	_gost_key:PROC
EXTRN	_gost_mac_iv:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogtpy
;	COMDAT _keyUnwrapCryptoPro
_TEXT	SEGMENT
_cek_mac$ = -40						; size = 4
_kek_ukm$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_keyExchangeKey$ = 12					; size = 4
_wrappedKey$ = 16					; size = 4
_sessionKey$ = 20					; size = 4
_keyUnwrapCryptoPro PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost_keywrap.c
; Line 94
	mov	eax, 40					; 00000028H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+40], eax
	push	ebx
	mov	ebx, DWORD PTR _wrappedKey$[esp+40]
; Line 96
	lea	eax, DWORD PTR _kek_ukm$[esp+44]
	push	esi
	mov	esi, DWORD PTR _sessionKey$[esp+44]
	push	edi
	mov	edi, DWORD PTR _ctx$[esp+48]
	push	eax
	push	ebx
	push	DWORD PTR _keyExchangeKey$[esp+56]
	push	edi
	call	_keyDiversifyCryptoPro
; Line 99
	lea	eax, DWORD PTR _kek_ukm$[esp+68]
	push	eax
	push	edi
	call	_gost_key
; Line 100
	push	4
	push	esi
	lea	eax, DWORD PTR [ebx+8]
	push	eax
	push	edi
	call	_gost_dec
; Line 101
	lea	eax, DWORD PTR _cek_mac$[esp+92]
	push	eax
	push	32					; 00000020H
	push	esi
	push	ebx
	push	32					; 00000020H
	push	edi
	call	_gost_mac_iv
	add	esp, 64					; 00000040H
; Line 102
	lea	ecx, DWORD PTR _cek_mac$[esp+52]
	mov	ecx, DWORD PTR [ecx]
	xor	eax, eax
	cmp	ecx, DWORD PTR [ebx+40]
; Line 106
	mov	ecx, DWORD PTR __$ArrayPad$[esp+52]
	pop	edi
	pop	esi
	sete	al
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	ret	0
_keyUnwrapCryptoPro ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _keyWrapCryptoPro
_TEXT	SEGMENT
_kek_ukm$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_keyExchangeKey$ = 12					; size = 4
_ukm$ = 16						; size = 4
_sessionKey$ = 20					; size = 4
_wrappedKey$ = 24					; size = 4
_keyWrapCryptoPro PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost_keywrap.c
; Line 70
	mov	eax, 36					; 00000024H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+36], eax
	push	ebx
	mov	ebx, DWORD PTR _ukm$[esp+36]
; Line 72
	lea	eax, DWORD PTR _kek_ukm$[esp+40]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+40]
	push	esi
	mov	esi, DWORD PTR _wrappedKey$[esp+44]
	push	edi
	mov	edi, DWORD PTR _sessionKey$[esp+48]
	push	eax
	push	ebx
	push	DWORD PTR _keyExchangeKey$[esp+56]
	push	ebp
	call	_keyDiversifyCryptoPro
; Line 73
	lea	eax, DWORD PTR _kek_ukm$[esp+68]
	push	eax
	push	ebp
	call	_gost_key
; Line 74
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [esi+4], eax
; Line 75
	lea	eax, DWORD PTR [esi+8]
	push	4
	push	eax
	push	edi
	push	ebp
	call	_gost_enc
; Line 76
	lea	eax, DWORD PTR [esi+40]
	push	eax
	push	32					; 00000020H
	push	edi
	push	ebx
	push	32					; 00000020H
	push	ebp
	call	_gost_mac_iv
; Line 78
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	add	esp, 64					; 00000040H
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
_keyWrapCryptoPro ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _keyDiversifyCryptoPro
_TEXT	SEGMENT
_ctx$GSCopy$1$ = -16					; size = 4
_S$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_inputKey$ = 12						; size = 4
_ukm$ = 16						; size = 4
_outputKey$ = 20					; size = 4
_keyDiversifyCryptoPro PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost_keywrap.c
; Line 25
	mov	eax, 16					; 00000010H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+16], eax
	mov	eax, DWORD PTR _ctx$[esp+12]
	push	ebx
	push	ebp
	mov	DWORD PTR _ctx$GSCopy$1$[esp+24], eax
; Line 31
	xor	ebp, ebp
	mov	eax, DWORD PTR _inputKey$[esp+20]
	push	esi
	mov	esi, DWORD PTR _outputKey$[esp+24]
	push	edi
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [esi+16], xmm0
	npad	7
$LL4@keyDiversi:
; Line 36
	movzx	edi, BYTE PTR [esi+3]
	xor	ecx, ecx
	movzx	eax, BYTE PTR [esi+2]
	xor	edx, edx
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+1]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi]
	shl	edi, 8
	or	edi, eax
; Line 38
	mov	eax, DWORD PTR _ukm$[esp+28]
	movzx	ebx, BYTE PTR [eax+ebp]
	test	bl, 1
	je	SHORT $LN8@keyDiversi
; Line 39
	mov	ecx, edi
; Line 40
	jmp	SHORT $LN5@keyDiversi
$LN8@keyDiversi:
; Line 41
	mov	edx, edi
$LN5@keyDiversi:
; Line 36
	movzx	edi, BYTE PTR [esi+7]
	movzx	eax, BYTE PTR [esi+6]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+5]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+4]
	shl	edi, 8
	or	edi, eax
; Line 38
	test	bl, 2
	je	SHORT $LN22@keyDiversi
; Line 39
	add	ecx, edi
; Line 40
	jmp	SHORT $LN23@keyDiversi
$LN22@keyDiversi:
; Line 41
	add	edx, edi
$LN23@keyDiversi:
; Line 36
	movzx	edi, BYTE PTR [esi+11]
	movzx	eax, BYTE PTR [esi+10]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+9]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+8]
	shl	edi, 8
	or	edi, eax
; Line 38
	test	bl, 4
	je	SHORT $LN25@keyDiversi
; Line 39
	add	ecx, edi
; Line 40
	jmp	SHORT $LN26@keyDiversi
$LN25@keyDiversi:
; Line 41
	add	edx, edi
$LN26@keyDiversi:
; Line 36
	movzx	edi, BYTE PTR [esi+15]
	movzx	eax, BYTE PTR [esi+14]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+13]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+12]
	shl	edi, 8
	or	edi, eax
; Line 38
	test	bl, 8
	je	SHORT $LN28@keyDiversi
; Line 39
	add	ecx, edi
; Line 40
	jmp	SHORT $LN29@keyDiversi
$LN28@keyDiversi:
; Line 41
	add	edx, edi
$LN29@keyDiversi:
; Line 36
	movzx	edi, BYTE PTR [esi+19]
	movzx	eax, BYTE PTR [esi+18]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+17]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+16]
	shl	edi, 8
	or	edi, eax
; Line 38
	test	bl, 16					; 00000010H
	je	SHORT $LN31@keyDiversi
; Line 39
	add	ecx, edi
; Line 40
	jmp	SHORT $LN32@keyDiversi
$LN31@keyDiversi:
; Line 41
	add	edx, edi
$LN32@keyDiversi:
; Line 36
	movzx	edi, BYTE PTR [esi+23]
	movzx	eax, BYTE PTR [esi+22]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+21]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+20]
	shl	edi, 8
	or	edi, eax
; Line 38
	test	bl, 32					; 00000020H
	je	SHORT $LN34@keyDiversi
; Line 39
	add	ecx, edi
; Line 40
	jmp	SHORT $LN35@keyDiversi
$LN34@keyDiversi:
; Line 41
	add	edx, edi
$LN35@keyDiversi:
; Line 36
	movzx	edi, BYTE PTR [esi+27]
	movzx	eax, BYTE PTR [esi+26]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+25]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+24]
	shl	edi, 8
	or	edi, eax
; Line 38
	test	bl, 64					; 00000040H
	je	SHORT $LN37@keyDiversi
; Line 39
	add	ecx, edi
; Line 40
	jmp	SHORT $LN38@keyDiversi
$LN37@keyDiversi:
; Line 41
	add	edx, edi
$LN38@keyDiversi:
; Line 36
	movzx	edi, BYTE PTR [esi+31]
	movzx	eax, BYTE PTR [esi+30]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+29]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [esi+28]
	shl	edi, 8
	or	edi, eax
; Line 38
	test	bl, bl
	jns	SHORT $LN40@keyDiversi
; Line 39
	add	ecx, edi
; Line 40
	jmp	SHORT $LN41@keyDiversi
$LN40@keyDiversi:
; Line 41
	add	edx, edi
$LN41@keyDiversi:
; Line 52
	mov	ebx, DWORD PTR _ctx$GSCopy$1$[esp+32]
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR _S$[esp+33], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR _S$[esp+34], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR _S$[esp+37], al
	mov	eax, edx
	mov	BYTE PTR _S$[esp+32], cl
	mov	BYTE PTR _S$[esp+36], dl
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	shr	edx, 24					; 00000018H
	push	esi
	push	ebx
	mov	BYTE PTR _S$[esp+43], cl
	mov	BYTE PTR _S$[esp+46], al
	mov	BYTE PTR _S$[esp+47], dl
	call	_gost_key
; Line 53
	push	4
	push	esi
	push	esi
	lea	eax, DWORD PTR _S$[esp+52]
	push	eax
	push	ebx
	call	_gost_enc_cfb
	inc	ebp
	add	esp, 28					; 0000001cH
	cmp	ebp, 8
	jl	$LL4@keyDiversi
; Line 55
	mov	ecx, DWORD PTR __$ArrayPad$[esp+32]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 16					; 00000010H
	ret	0
_keyDiversifyCryptoPro ENDP
_TEXT	ENDS
END

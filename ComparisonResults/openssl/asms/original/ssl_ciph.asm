; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0CO@JKDHGEMK@?$CF?923s?5?$CFs?5Kx?$DN?$CF?98s?5Au?$DN?$CF?94s?5Enc?$DN?$CF?99@ ; `string'
PUBLIC	??_C@_03NIFPGLBG@ALL?$AA@			; `string'
PUBLIC	??_C@_0BA@NMKLDIMD@COMPLEMENTOFALL?$AA@		; `string'
PUBLIC	??_C@_0BE@MOOCAEFB@COMPLEMENTOFDEFAULT?$AA@	; `string'
PUBLIC	??_C@_04DBKDGHDK@kRSA?$AA@			; `string'
PUBLIC	??_C@_04KAMJEGNI@kDHr?$AA@			; `string'
PUBLIC	??_C@_04LMFBPDAP@kDHd?$AA@			; `string'
PUBLIC	??_C@_03HNKPLAPA@kDH?$AA@			; `string'
PUBLIC	??_C@_04DEMGAGKA@kEDH?$AA@			; `string'
PUBLIC	??_C@_04DAMOOGOM@kDHE?$AA@			; `string'
PUBLIC	??_C@_02EPINMGPM@DH?$AA@			; `string'
PUBLIC	??_C@_05LDAGJEKM@kKRB5?$AA@			; `string'
PUBLIC	??_C@_06NMBCIJLO@kECDHr?$AA@			; `string'
PUBLIC	??_C@_06NJJBANCI@kECDHe?$AA@			; `string'
PUBLIC	??_C@_05HKIPGBDO@kECDH?$AA@			; `string'
PUBLIC	??_C@_06OCDGGDLK@kEECDH?$AA@			; `string'
PUBLIC	??_C@_06EMBFCJIK@kECDHE?$AA@			; `string'
PUBLIC	??_C@_04GPFMMIBJ@ECDH?$AA@			; `string'
PUBLIC	??_C@_04GBEFEHDL@kPSK?$AA@			; `string'
PUBLIC	??_C@_04NLAEEJHI@kSRP?$AA@			; `string'
PUBLIC	??_C@_05LFIHGFEO@kGOST?$AA@			; `string'
PUBLIC	??_C@_04HLBDHPJL@aRSA?$AA@			; `string'
PUBLIC	??_C@_04HGJFAHAL@aDSS?$AA@			; `string'
PUBLIC	??_C@_03DFKBHBPH@DSS?$AA@			; `string'
PUBLIC	??_C@_05BCJNLHMK@aKRB5?$AA@			; `string'
PUBLIC	??_C@_05LDMJOPLG@aNULL?$AA@			; `string'
PUBLIC	??_C@_03BCBCFAJE@aDH?$AA@			; `string'
PUBLIC	??_C@_05NLBEECFI@aECDH?$AA@			; `string'
PUBLIC	??_C@_06JMHKPPFB@aECDSA?$AA@			; `string'
PUBLIC	??_C@_05JNBFMGNN@ECDSA?$AA@			; `string'
PUBLIC	??_C@_04CLPFFPJK@aPSK?$AA@			; `string'
PUBLIC	??_C@_07FCHCHDPL@aGOST94?$AA@			; `string'
PUBLIC	??_C@_07CANELMDB@aGOST01?$AA@			; `string'
PUBLIC	??_C@_05BEBMEGCI@aGOST?$AA@			; `string'
PUBLIC	??_C@_04JBLEFBNJ@aSRP?$AA@			; `string'
PUBLIC	??_C@_03DNECGIPN@EDH?$AA@			; `string'
PUBLIC	??_C@_03DJEKIILB@DHE?$AA@			; `string'
PUBLIC	??_C@_05EHCJAFHI@EECDH?$AA@			; `string'
PUBLIC	??_C@_05OJAKEPEI@ECDHE?$AA@			; `string'
PUBLIC	??_C@_04HIBGFPH@NULL?$AA@			; `string'
PUBLIC	??_C@_04KGNFDNIL@KRB5?$AA@			; `string'
PUBLIC	??_C@_03DICHAJGH@RSA?$AA@			; `string'
PUBLIC	??_C@_03LCCAPPKK@ADH?$AA@			; `string'
PUBLIC	??_C@_05NMLIEHGO@AECDH?$AA@			; `string'
PUBLIC	??_C@_03GIMBCJGG@PSK?$AA@			; `string'
PUBLIC	??_C@_03NCIACHCF@SRP?$AA@			; `string'
PUBLIC	??_C@_03CNAKKODF@DES?$AA@			; `string'
PUBLIC	??_C@_04CMONEEGC@3DES?$AA@			; `string'
PUBLIC	??_C@_03HGEJCHKE@RC4?$AA@			; `string'
PUBLIC	??_C@_03CABDIACC@RC2?$AA@			; `string'
PUBLIC	??_C@_04OHHLMMNP@IDEA?$AA@			; `string'
PUBLIC	??_C@_04IOANANM@SEED?$AA@			; `string'
PUBLIC	??_C@_05CIFIKNKA@eNULL?$AA@			; `string'
PUBLIC	??_C@_06NICOGCEJ@AES128?$AA@			; `string'
PUBLIC	??_C@_06FBFHPGKM@AES256?$AA@			; `string'
PUBLIC	??_C@_03BKNEFOAH@AES?$AA@			; `string'
PUBLIC	??_C@_06JBABBCNN@AESGCM?$AA@			; `string'
PUBLIC	??_C@_0M@ODOKKANE@CAMELLIA128?$AA@		; `string'
PUBLIC	??_C@_0M@GKJDDEDB@CAMELLIA256?$AA@		; `string'
PUBLIC	??_C@_08LLHPADEA@CAMELLIA?$AA@			; `string'
PUBLIC	??_C@_03GCGHEHKJ@MD5?$AA@			; `string'
PUBLIC	??_C@_04KPMLCNGO@SHA1?$AA@			; `string'
PUBLIC	??_C@_03JAOICCJD@SHA?$AA@			; `string'
PUBLIC	??_C@_06LGHNNDMJ@GOST94?$AA@			; `string'
PUBLIC	??_C@_09OKGBFKOB@GOST89MAC?$AA@			; `string'
PUBLIC	??_C@_06HKIKMHH@SHA256?$AA@			; `string'
PUBLIC	??_C@_06IFPKDKMD@SHA384?$AA@			; `string'
PUBLIC	??_C@_05NHFKDGAI@SSLv2?$AA@			; `string'
PUBLIC	??_C@_05MOEBAHEJ@SSLv3?$AA@			; `string'
PUBLIC	??_C@_05LLIBCOJ@TLSv1?$AA@			; `string'
PUBLIC	??_C@_07KDKGANMO@TLSv1?42?$AA@			; `string'
PUBLIC	??_C@_03KKGFKKLA@EXP?$AA@			; `string'
PUBLIC	??_C@_06NOPGBFOL@EXPORT?$AA@			; `string'
PUBLIC	??_C@_08CMHDGLIF@EXPORT40?$AA@			; `string'
PUBLIC	??_C@_08HLOLKGDE@EXPORT56?$AA@			; `string'
PUBLIC	??_C@_03IBEFMGAI@LOW?$AA@			; `string'
PUBLIC	??_C@_06HMBFJLMK@MEDIUM?$AA@			; `string'
PUBLIC	??_C@_04PKDHFCJF@HIGH?$AA@			; `string'
PUBLIC	??_C@_04PFFIJCJL@FIPS?$AA@			; `string'
PUBLIC	??_C@_0BI@GCIKLAPH@EXP?9DHE?9DSS?9DES?9CBC?9SHA?$AA@ ; `string'
PUBLIC	??_C@_0BE@FIMAPOMA@DHE?9DSS?9DES?9CBC?9SHA?$AA@	; `string'
PUBLIC	??_C@_0BF@IFKJKKFO@DHE?9DSS?9DES?9CBC3?9SHA?$AA@ ; `string'
PUBLIC	??_C@_0BI@FAOABPEM@EXP?9DHE?9RSA?9DES?9CBC?9SHA?$AA@ ; `string'
PUBLIC	??_C@_0BE@GKKKFBHL@DHE?9RSA?9DES?9CBC?9SHA?$AA@	; `string'
PUBLIC	??_C@_0BF@NJCIKKPF@DHE?9RSA?9DES?9CBC3?9SHA?$AA@ ; `string'
_BSS	SEGMENT
_ssl_cipher_methods DD 0eH DUP (?)
_ssl_comp_methods DD 01H DUP (?)
_ssl_digest_methods DD 06H DUP (?)
_ssl_mac_secret_size DD 06H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0BF@NJCIKKPF@DHE?9RSA?9DES?9CBC3?9SHA?$AA@
CONST	SEGMENT
??_C@_0BF@NJCIKKPF@DHE?9RSA?9DES?9CBC3?9SHA?$AA@ DB 'DHE-RSA-DES-CBC3-SHA'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GKKKFBHL@DHE?9RSA?9DES?9CBC?9SHA?$AA@
CONST	SEGMENT
??_C@_0BE@GKKKFBHL@DHE?9RSA?9DES?9CBC?9SHA?$AA@ DB 'DHE-RSA-DES-CBC-SHA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FAOABPEM@EXP?9DHE?9RSA?9DES?9CBC?9SHA?$AA@
CONST	SEGMENT
??_C@_0BI@FAOABPEM@EXP?9DHE?9RSA?9DES?9CBC?9SHA?$AA@ DB 'EXP-DHE-RSA-DES-'
	DB	'CBC-SHA', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IFKJKKFO@DHE?9DSS?9DES?9CBC3?9SHA?$AA@
CONST	SEGMENT
??_C@_0BF@IFKJKKFO@DHE?9DSS?9DES?9CBC3?9SHA?$AA@ DB 'DHE-DSS-DES-CBC3-SHA'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FIMAPOMA@DHE?9DSS?9DES?9CBC?9SHA?$AA@
CONST	SEGMENT
??_C@_0BE@FIMAPOMA@DHE?9DSS?9DES?9CBC?9SHA?$AA@ DB 'DHE-DSS-DES-CBC-SHA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GCIKLAPH@EXP?9DHE?9DSS?9DES?9CBC?9SHA?$AA@
CONST	SEGMENT
??_C@_0BI@GCIKLAPH@EXP?9DHE?9DSS?9DES?9CBC?9SHA?$AA@ DB 'EXP-DHE-DSS-DES-'
	DB	'CBC-SHA', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04PFFIJCJL@FIPS?$AA@
CONST	SEGMENT
??_C@_04PFFIJCJL@FIPS?$AA@ DB 'FIPS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PKDHFCJF@HIGH?$AA@
CONST	SEGMENT
??_C@_04PKDHFCJF@HIGH?$AA@ DB 'HIGH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HMBFJLMK@MEDIUM?$AA@
CONST	SEGMENT
??_C@_06HMBFJLMK@MEDIUM?$AA@ DB 'MEDIUM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03IBEFMGAI@LOW?$AA@
CONST	SEGMENT
??_C@_03IBEFMGAI@LOW?$AA@ DB 'LOW', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08HLOLKGDE@EXPORT56?$AA@
CONST	SEGMENT
??_C@_08HLOLKGDE@EXPORT56?$AA@ DB 'EXPORT56', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CMHDGLIF@EXPORT40?$AA@
CONST	SEGMENT
??_C@_08CMHDGLIF@EXPORT40?$AA@ DB 'EXPORT40', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NOPGBFOL@EXPORT?$AA@
CONST	SEGMENT
??_C@_06NOPGBFOL@EXPORT?$AA@ DB 'EXPORT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KKGFKKLA@EXP?$AA@
CONST	SEGMENT
??_C@_03KKGFKKLA@EXP?$AA@ DB 'EXP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07KDKGANMO@TLSv1?42?$AA@
CONST	SEGMENT
??_C@_07KDKGANMO@TLSv1?42?$AA@ DB 'TLSv1.2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LLIBCOJ@TLSv1?$AA@
CONST	SEGMENT
??_C@_05LLIBCOJ@TLSv1?$AA@ DB 'TLSv1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MOEBAHEJ@SSLv3?$AA@
CONST	SEGMENT
??_C@_05MOEBAHEJ@SSLv3?$AA@ DB 'SSLv3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NHFKDGAI@SSLv2?$AA@
CONST	SEGMENT
??_C@_05NHFKDGAI@SSLv2?$AA@ DB 'SSLv2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IFPKDKMD@SHA384?$AA@
CONST	SEGMENT
??_C@_06IFPKDKMD@SHA384?$AA@ DB 'SHA384', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HKIKMHH@SHA256?$AA@
CONST	SEGMENT
??_C@_06HKIKMHH@SHA256?$AA@ DB 'SHA256', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09OKGBFKOB@GOST89MAC?$AA@
CONST	SEGMENT
??_C@_09OKGBFKOB@GOST89MAC?$AA@ DB 'GOST89MAC', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LGHNNDMJ@GOST94?$AA@
CONST	SEGMENT
??_C@_06LGHNNDMJ@GOST94?$AA@ DB 'GOST94', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JAOICCJD@SHA?$AA@
CONST	SEGMENT
??_C@_03JAOICCJD@SHA?$AA@ DB 'SHA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KPMLCNGO@SHA1?$AA@
CONST	SEGMENT
??_C@_04KPMLCNGO@SHA1?$AA@ DB 'SHA1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCGHEHKJ@MD5?$AA@
CONST	SEGMENT
??_C@_03GCGHEHKJ@MD5?$AA@ DB 'MD5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLHPADEA@CAMELLIA?$AA@
CONST	SEGMENT
??_C@_08LLHPADEA@CAMELLIA?$AA@ DB 'CAMELLIA', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GKJDDEDB@CAMELLIA256?$AA@
CONST	SEGMENT
??_C@_0M@GKJDDEDB@CAMELLIA256?$AA@ DB 'CAMELLIA256', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ODOKKANE@CAMELLIA128?$AA@
CONST	SEGMENT
??_C@_0M@ODOKKANE@CAMELLIA128?$AA@ DB 'CAMELLIA128', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JBABBCNN@AESGCM?$AA@
CONST	SEGMENT
??_C@_06JBABBCNN@AESGCM?$AA@ DB 'AESGCM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BKNEFOAH@AES?$AA@
CONST	SEGMENT
??_C@_03BKNEFOAH@AES?$AA@ DB 'AES', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FBFHPGKM@AES256?$AA@
CONST	SEGMENT
??_C@_06FBFHPGKM@AES256?$AA@ DB 'AES256', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NICOGCEJ@AES128?$AA@
CONST	SEGMENT
??_C@_06NICOGCEJ@AES128?$AA@ DB 'AES128', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CIFIKNKA@eNULL?$AA@
CONST	SEGMENT
??_C@_05CIFIKNKA@eNULL?$AA@ DB 'eNULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IOANANM@SEED?$AA@
CONST	SEGMENT
??_C@_04IOANANM@SEED?$AA@ DB 'SEED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHHLMMNP@IDEA?$AA@
CONST	SEGMENT
??_C@_04OHHLMMNP@IDEA?$AA@ DB 'IDEA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03CABDIACC@RC2?$AA@
CONST	SEGMENT
??_C@_03CABDIACC@RC2?$AA@ DB 'RC2', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HGEJCHKE@RC4?$AA@
CONST	SEGMENT
??_C@_03HGEJCHKE@RC4?$AA@ DB 'RC4', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CMONEEGC@3DES?$AA@
CONST	SEGMENT
??_C@_04CMONEEGC@3DES?$AA@ DB '3DES', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03CNAKKODF@DES?$AA@
CONST	SEGMENT
??_C@_03CNAKKODF@DES?$AA@ DB 'DES', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NCIACHCF@SRP?$AA@
CONST	SEGMENT
??_C@_03NCIACHCF@SRP?$AA@ DB 'SRP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GIMBCJGG@PSK?$AA@
CONST	SEGMENT
??_C@_03GIMBCJGG@PSK?$AA@ DB 'PSK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05NMLIEHGO@AECDH?$AA@
CONST	SEGMENT
??_C@_05NMLIEHGO@AECDH?$AA@ DB 'AECDH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCCAPPKK@ADH?$AA@
CONST	SEGMENT
??_C@_03LCCAPPKK@ADH?$AA@ DB 'ADH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DICHAJGH@RSA?$AA@
CONST	SEGMENT
??_C@_03DICHAJGH@RSA?$AA@ DB 'RSA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KGNFDNIL@KRB5?$AA@
CONST	SEGMENT
??_C@_04KGNFDNIL@KRB5?$AA@ DB 'KRB5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HIBGFPH@NULL?$AA@
CONST	SEGMENT
??_C@_04HIBGFPH@NULL?$AA@ DB 'NULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OJAKEPEI@ECDHE?$AA@
CONST	SEGMENT
??_C@_05OJAKEPEI@ECDHE?$AA@ DB 'ECDHE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05EHCJAFHI@EECDH?$AA@
CONST	SEGMENT
??_C@_05EHCJAFHI@EECDH?$AA@ DB 'EECDH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DJEKIILB@DHE?$AA@
CONST	SEGMENT
??_C@_03DJEKIILB@DHE?$AA@ DB 'DHE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DNECGIPN@EDH?$AA@
CONST	SEGMENT
??_C@_03DNECGIPN@EDH?$AA@ DB 'EDH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04JBLEFBNJ@aSRP?$AA@
CONST	SEGMENT
??_C@_04JBLEFBNJ@aSRP?$AA@ DB 'aSRP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BEBMEGCI@aGOST?$AA@
CONST	SEGMENT
??_C@_05BEBMEGCI@aGOST?$AA@ DB 'aGOST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CANELMDB@aGOST01?$AA@
CONST	SEGMENT
??_C@_07CANELMDB@aGOST01?$AA@ DB 'aGOST01', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FCHCHDPL@aGOST94?$AA@
CONST	SEGMENT
??_C@_07FCHCHDPL@aGOST94?$AA@ DB 'aGOST94', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CLPFFPJK@aPSK?$AA@
CONST	SEGMENT
??_C@_04CLPFFPJK@aPSK?$AA@ DB 'aPSK', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JNBFMGNN@ECDSA?$AA@
CONST	SEGMENT
??_C@_05JNBFMGNN@ECDSA?$AA@ DB 'ECDSA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JMHKPPFB@aECDSA?$AA@
CONST	SEGMENT
??_C@_06JMHKPPFB@aECDSA?$AA@ DB 'aECDSA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NLBEECFI@aECDH?$AA@
CONST	SEGMENT
??_C@_05NLBEECFI@aECDH?$AA@ DB 'aECDH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BCBCFAJE@aDH?$AA@
CONST	SEGMENT
??_C@_03BCBCFAJE@aDH?$AA@ DB 'aDH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LDMJOPLG@aNULL?$AA@
CONST	SEGMENT
??_C@_05LDMJOPLG@aNULL?$AA@ DB 'aNULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BCJNLHMK@aKRB5?$AA@
CONST	SEGMENT
??_C@_05BCJNLHMK@aKRB5?$AA@ DB 'aKRB5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DFKBHBPH@DSS?$AA@
CONST	SEGMENT
??_C@_03DFKBHBPH@DSS?$AA@ DB 'DSS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HGJFAHAL@aDSS?$AA@
CONST	SEGMENT
??_C@_04HGJFAHAL@aDSS?$AA@ DB 'aDSS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HLBDHPJL@aRSA?$AA@
CONST	SEGMENT
??_C@_04HLBDHPJL@aRSA?$AA@ DB 'aRSA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LFIHGFEO@kGOST?$AA@
CONST	SEGMENT
??_C@_05LFIHGFEO@kGOST?$AA@ DB 'kGOST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04NLAEEJHI@kSRP?$AA@
CONST	SEGMENT
??_C@_04NLAEEJHI@kSRP?$AA@ DB 'kSRP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GBEFEHDL@kPSK?$AA@
CONST	SEGMENT
??_C@_04GBEFEHDL@kPSK?$AA@ DB 'kPSK', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GPFMMIBJ@ECDH?$AA@
CONST	SEGMENT
??_C@_04GPFMMIBJ@ECDH?$AA@ DB 'ECDH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EMBFCJIK@kECDHE?$AA@
CONST	SEGMENT
??_C@_06EMBFCJIK@kECDHE?$AA@ DB 'kECDHE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OCDGGDLK@kEECDH?$AA@
CONST	SEGMENT
??_C@_06OCDGGDLK@kEECDH?$AA@ DB 'kEECDH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HKIPGBDO@kECDH?$AA@
CONST	SEGMENT
??_C@_05HKIPGBDO@kECDH?$AA@ DB 'kECDH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NJJBANCI@kECDHe?$AA@
CONST	SEGMENT
??_C@_06NJJBANCI@kECDHe?$AA@ DB 'kECDHe', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NMBCIJLO@kECDHr?$AA@
CONST	SEGMENT
??_C@_06NMBCIJLO@kECDHr?$AA@ DB 'kECDHr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LDAGJEKM@kKRB5?$AA@
CONST	SEGMENT
??_C@_05LDAGJEKM@kKRB5?$AA@ DB 'kKRB5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02EPINMGPM@DH?$AA@
CONST	SEGMENT
??_C@_02EPINMGPM@DH?$AA@ DB 'DH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04DAMOOGOM@kDHE?$AA@
CONST	SEGMENT
??_C@_04DAMOOGOM@kDHE?$AA@ DB 'kDHE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DEMGAGKA@kEDH?$AA@
CONST	SEGMENT
??_C@_04DEMGAGKA@kEDH?$AA@ DB 'kEDH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03HNKPLAPA@kDH?$AA@
CONST	SEGMENT
??_C@_03HNKPLAPA@kDH?$AA@ DB 'kDH', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LMFBPDAP@kDHd?$AA@
CONST	SEGMENT
??_C@_04LMFBPDAP@kDHd?$AA@ DB 'kDHd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KAMJEGNI@kDHr?$AA@
CONST	SEGMENT
??_C@_04KAMJEGNI@kDHr?$AA@ DB 'kDHr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DBKDGHDK@kRSA?$AA@
CONST	SEGMENT
??_C@_04DBKDGHDK@kRSA?$AA@ DB 'kRSA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MOOCAEFB@COMPLEMENTOFDEFAULT?$AA@
CONST	SEGMENT
??_C@_0BE@MOOCAEFB@COMPLEMENTOFDEFAULT?$AA@ DB 'COMPLEMENTOFDEFAULT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NMKLDIMD@COMPLEMENTOFALL?$AA@
CONST	SEGMENT
??_C@_0BA@NMKLDIMD@COMPLEMENTOFALL?$AA@ DB 'COMPLEMENTOFALL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03NIFPGLBG@ALL?$AA@
CONST	SEGMENT
??_C@_03NIFPGLBG@ALL?$AA@ DB 'ALL', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_cipher_aliases DD 00H
	DD	FLAT:??_C@_03NIFPGLBG@ALL?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffdfH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BA@NMKLDIMD@COMPLEMENTOFALL?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BE@MOOCAEFB@COMPLEMENTOFDEFAULT?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04DBKDGHDK@kRSA?$AA@
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04KAMJEGNI@kDHr?$AA@
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04LMFBPDAP@kDHd?$AA@
	DD	00H
	DD	04H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03HNKPLAPA@kDH?$AA@
	DD	00H
	DD	06H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04DEMGAGKA@kEDH?$AA@
	DD	00H
	DD	08H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04DAMOOGOM@kDHE?$AA@
	DD	00H
	DD	08H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_02EPINMGPM@DH?$AA@
	DD	00H
	DD	0eH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05LDAGJEKM@kKRB5?$AA@
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06NMBCIJLO@kECDHr?$AA@
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06NJJBANCI@kECDHe?$AA@
	DD	00H
	DD	040H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05HKIPGBDO@kECDH?$AA@
	DD	00H
	DD	060H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06OCDGGDLK@kEECDH?$AA@
	DD	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06EMBFCJIK@kECDHE?$AA@
	DD	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04GPFMMIBJ@ECDH?$AA@
	DD	00H
	DD	0e0H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04GBEFEHDL@kPSK?$AA@
	DD	00H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04NLAEEJHI@kSRP?$AA@
	DD	00H
	DD	0400H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05LFIHGFEO@kGOST?$AA@
	DD	00H
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04HLBDHPJL@aRSA?$AA@
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04HGJFAHAL@aDSS?$AA@
	DD	00H
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03DFKBHBPH@DSS?$AA@
	DD	00H
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05BCJNLHMK@aKRB5?$AA@
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05LDMJOPLG@aNULL?$AA@
	DD	00H
	DD	00H
	DD	04H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03BCBCFAJE@aDH?$AA@
	DD	00H
	DD	00H
	DD	08H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05NLBEECFI@aECDH?$AA@
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06JMHKPPFB@aECDSA?$AA@
	DD	00H
	DD	00H
	DD	040H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05JNBFMGNN@ECDSA?$AA@
	DD	00H
	DD	00H
	DD	040H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04CLPFFPJK@aPSK?$AA@
	DD	00H
	DD	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07FCHCHDPL@aGOST94?$AA@
	DD	00H
	DD	00H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07CANELMDB@aGOST01?$AA@
	DD	00H
	DD	00H
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05BEBMEGCI@aGOST?$AA@
	DD	00H
	DD	00H
	DD	0300H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04JBLEFBNJ@aSRP?$AA@
	DD	00H
	DD	00H
	DD	0400H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03DNECGIPN@EDH?$AA@
	DD	00H
	DD	08H
	DD	0fffffffbH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03DJEKIILB@DHE?$AA@
	DD	00H
	DD	08H
	DD	0fffffffbH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05EHCJAFHI@EECDH?$AA@
	DD	00H
	DD	080H
	DD	0fffffffbH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05OJAKEPEI@ECDHE?$AA@
	DD	00H
	DD	080H
	DD	0fffffffbH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04HIBGFPH@NULL?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04KGNFDNIL@KRB5?$AA@
	DD	00H
	DD	010H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03DICHAJGH@RSA?$AA@
	DD	00H
	DD	01H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03LCCAPPKK@ADH?$AA@
	DD	00H
	DD	08H
	DD	04H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05NMLIEHGO@AECDH?$AA@
	DD	00H
	DD	080H
	DD	04H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03GIMBCJGG@PSK?$AA@
	DD	00H
	DD	0100H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03NCIACHCF@SRP?$AA@
	DD	00H
	DD	0400H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03CNAKKODF@DES?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04CMONEEGC@3DES?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03HGEJCHKE@RC4?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	04H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03CABDIACC@RC2?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	08H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04OHHLMMNP@IDEA?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04IOANANM@SEED?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	0800H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05CIFIKNKA@eNULL?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06NICOGCEJ@AES128?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	01040H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06FBFHPGKM@AES256?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	02080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03BKNEFOAH@AES?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	030c0H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06JBABBCNN@AESGCM?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	03000H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@ODOKKANE@CAMELLIA128?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0M@GKJDDEDB@CAMELLIA256?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	0200H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_08LLHPADEA@CAMELLIA?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	0300H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03GCGHEHKJ@MD5?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04KPMLCNGO@SHA1?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03JAOICCJD@SHA?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06LGHNNDMJ@GOST94?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	04H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_09OKGBFKOB@GOST89MAC?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	08H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06HKIKMHH@SHA256?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06IFPKDKMD@SHA384?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05NHFKDGAI@SSLv2?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05MOEBAHEJ@SSLv3?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_05LLIBCOJ@TLSv1?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_07KDKGANMO@TLSv1?42?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	04H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03KKGFKKLA@EXP?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06NOPGBFOL@EXPORT?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_08CMHDGLIF@EXPORT40?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	08H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_08HLOLKGDE@EXPORT56?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	010H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_03IBEFMGAI@LOW?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	020H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06HMBFJLMK@MEDIUM?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	040H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04PKDHFCJF@HIGH?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	080H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04PFFIJCJL@FIPS?$AA@
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffdfH
	DD	00H
	DD	00H
	DD	0100H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BI@GCIKLAPH@EXP?9DHE?9DSS?9DES?9CBC?9SHA?$AA@
	DD	00H
	DD	08H
	DD	02H
	DD	01H
	DD	02H
	DD	02H
	DD	0aH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BE@FIMAPOMA@DHE?9DSS?9DES?9CBC?9SHA?$AA@
	DD	00H
	DD	08H
	DD	02H
	DD	01H
	DD	02H
	DD	02H
	DD	021H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BF@IFKJKKFO@DHE?9DSS?9DES?9CBC3?9SHA?$AA@
	DD	00H
	DD	08H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	0181H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BI@FAOABPEM@EXP?9DHE?9RSA?9DES?9CBC?9SHA?$AA@
	DD	00H
	DD	08H
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	0aH
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BE@GKKKFBHL@DHE?9RSA?9DES?9CBC?9SHA?$AA@
	DD	00H
	DD	08H
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	021H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BF@NJCIKKPF@DHE?9RSA?9DES?9CBC3?9SHA?$AA@
	DD	00H
	DD	08H
	DD	01H
	DD	02H
	DD	02H
	DD	02H
	DD	0181H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_0CO@JKDHGEMK@?$CF?923s?5?$CFs?5Kx?$DN?$CF?98s?5Au?$DN?$CF?94s?5Enc?$DN?$CF?99@
CONST	SEGMENT
??_C@_0CO@JKDHGEMK@?$CF?923s?5?$CFs?5Kx?$DN?$CF?98s?5Au?$DN?$CF?94s?5Enc?$DN?$CF?99@ DB '%'
	DB	'-23s %s Kx=%-8s Au=%-4s Enc=%-9s Mac=%-4s%s', 0aH, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?format@?1??SSL_CIPHER_description@@9@9 DD FLAT:??_C@_0CO@JKDHGEMK@?$CF?923s?5?$CFs?5Kx?$DN?$CF?98s?5Au?$DN?$CF?94s?5Enc?$DN?$CF?99@ ; `SSL_CIPHER_description'::`2'::format
_ssl_mac_pkey_id DD 0357H
	DD	0357H
	DD	0357H
	DD	00H
	DD	0357H
	DD	0357H
_ssl_handshake_digest_flag DD 010H
	DD	020H
	DD	040H
	DD	00H
	DD	080H
	DD	0100H
_DATA	ENDS
PUBLIC	_SSL_CIPHER_get_bits
PUBLIC	_SSL_CIPHER_get_version
PUBLIC	_SSL_CIPHER_get_name
PUBLIC	_SSL_CIPHER_get_id
PUBLIC	_SSL_CIPHER_description
PUBLIC	_SSL_COMP_get_name
PUBLIC	_SSL_COMP_get_compression_methods
PUBLIC	_SSL_COMP_set0_compression_methods
PUBLIC	_SSL_COMP_free_compression_methods
PUBLIC	_SSL_COMP_add_compression_method
PUBLIC	_SSL_CIPHER_find
PUBLIC	_ssl_create_cipher_list
PUBLIC	_ssl_cipher_get_evp
PUBLIC	_ssl_get_handshake_digest
PUBLIC	_ssl_cipher_get_cert_index
PUBLIC	_ssl_get_cipher_by_char
PUBLIC	_ssl_load_ciphers
PUBLIC	_ssl3_comp_find
PUBLIC	??_C@_07LDJJJFAI@DES?9CBC?$AA@			; `string'
PUBLIC	??_C@_0N@MLDFENGJ@DES?9EDE3?9CBC?$AA@		; `string'
PUBLIC	??_C@_07KJDFEEGB@RC2?9CBC?$AA@			; `string'
PUBLIC	??_C@_08MJNEIAD@IDEA?9CBC?$AA@			; `string'
PUBLIC	??_C@_0M@CPGGBEEL@AES?9128?9CBC?$AA@		; `string'
PUBLIC	??_C@_0M@FOEEEMFG@AES?9256?9CBC?$AA@		; `string'
PUBLIC	??_C@_0BB@HAKAAAMD@CAMELLIA?9128?9CBC?$AA@	; `string'
PUBLIC	??_C@_0BB@BICFINO@CAMELLIA?9256?9CBC?$AA@	; `string'
PUBLIC	??_C@_0L@INGOKGPP@gost89?9cnt?$AA@		; `string'
PUBLIC	??_C@_08KJBEBBMB@SEED?9CBC?$AA@			; `string'
PUBLIC	??_C@_0O@LNIKAOOL@id?9aes128?9GCM?$AA@		; `string'
PUBLIC	??_C@_0O@MMKIFGPG@id?9aes256?9GCM?$AA@		; `string'
PUBLIC	??_C@_0CJ@EKPJCJCG@ssl_mac_secret_size?$FLSSL_MD_MD5_I@ ; `string'
PUBLIC	??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@	; `string'
PUBLIC	??_C@_0CK@MJPEELOP@ssl_mac_secret_size?$FLSSL_MD_SHA1_@ ; `string'
PUBLIC	??_C@_09MIOJGGFD@md_gost94?$AA@			; `string'
PUBLIC	??_C@_0CM@KEOLKDEN@ssl_mac_secret_size?$FLSSL_MD_GOST9@ ; `string'
PUBLIC	??_C@_08JCNEGNFC@gost?9mac?$AA@			; `string'
PUBLIC	??_C@_0N@MFFPBCGK@RC4?9HMAC?9MD5?$AA@		; `string'
PUBLIC	??_C@_0BG@OKEPPAEE@AES?9128?9CBC?9HMAC?9SHA1?$AA@ ; `string'
PUBLIC	??_C@_0BG@NJKHMG@AES?9256?9CBC?9HMAC?9SHA1?$AA@	; `string'
PUBLIC	??_C@_0BI@JAKBILLC@AES?9128?9CBC?9HMAC?9SHA256?$AA@ ; `string'
PUBLIC	??_C@_0BI@GMBLFPLK@AES?9256?9CBC?9HMAC?9SHA256?$AA@ ; `string'
PUBLIC	??_C@_06BPJPGPFJ@gost94?$AA@			; `string'
PUBLIC	??_C@_08KMPAMBCP@gost2001?$AA@			; `string'
PUBLIC	??_C@_08NKIPMNFC@STRENGTH?$AA@			; `string'
PUBLIC	??_C@_0O@KBPCDIMJ@SUITEB128ONLY?$AA@		; `string'
PUBLIC	??_C@_0M@IHCKNMIL@SUITEB128C2?$AA@		; `string'
PUBLIC	??_C@_09JCJKDIKO@SUITEB128?$AA@			; `string'
PUBLIC	??_C@_09GECADPMF@SUITEB192?$AA@			; `string'
PUBLIC	??_C@_0BO@MAHEHKAF@ECDHE?9ECDSA?9AES256?9GCM?9SHA384?$AA@ ; `string'
PUBLIC	??_C@_0DM@CNGFGEEL@ECDHE?9ECDSA?9AES128?9GCM?9SHA256?3EC@ ; `string'
PUBLIC	??_C@_0BO@MMHACALI@ECDHE?9ECDSA?9AES128?9GCM?9SHA256?$AA@ ; `string'
PUBLIC	??_C@_07MGCPDNLD@DEFAULT?$AA@			; `string'
PUBLIC	??_C@_0CG@ENOBHNBE@ALL?3?$CBEXPORT?3?$CBLOW?3?$CBaNULL?3?$CBeNULL?3?$CB@ ; `string'
PUBLIC	??_C@_07NLOFKJHI@?5export?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_07CIFAGBMG@unknown?$AA@			; `string'
PUBLIC	??_C@_08NFIHIJDF@RSA?$CI512?$CJ?$AA@		; `string'
PUBLIC	??_C@_09KACPIHME@RSA?$CI1024?$CJ?$AA@		; `string'
PUBLIC	??_C@_06JENBGILL@DH?1RSA?$AA@			; `string'
PUBLIC	??_C@_06JJFHBACL@DH?1DSS?$AA@			; `string'
PUBLIC	??_C@_07OJOOFGOD@DH?$CI512?$CJ?$AA@		; `string'
PUBLIC	??_C@_08MPKDJJPK@DH?$CI1024?$CJ?$AA@		; `string'
PUBLIC	??_C@_08NMKDCACN@ECDH?1RSA?$AA@			; `string'
PUBLIC	??_C@_0L@NFDBBNLK@ECDH?1ECDSA?$AA@		; `string'
PUBLIC	??_C@_04KAFEMMGJ@GOST?$AA@			; `string'
PUBLIC	??_C@_04OHJIHAFH@None?$AA@			; `string'
PUBLIC	??_C@_06MENLBMAD@GOST01?$AA@			; `string'
PUBLIC	??_C@_07EFPGLNEO@DES?$CI40?$CJ?$AA@		; `string'
PUBLIC	??_C@_07PJMHKGJJ@DES?$CI56?$CJ?$AA@		; `string'
PUBLIC	??_C@_09KDEPFJMJ@3DES?$CI168?$CJ?$AA@		; `string'
PUBLIC	??_C@_07IJADIPDK@RC4?$CI40?$CJ?$AA@		; `string'
PUBLIC	??_C@_07DFDCJEON@RC4?$CI56?$CJ?$AA@		; `string'
PUBLIC	??_C@_07CEADOPGN@RC4?$CI64?$CJ?$AA@		; `string'
PUBLIC	??_C@_08PNMOMLGK@RC4?$CI128?$CJ?$AA@		; `string'
PUBLIC	??_C@_07FPFKGMCH@RC2?$CI40?$CJ?$AA@		; `string'
PUBLIC	??_C@_07ODGLHHPA@RC2?$CI56?$CJ?$AA@		; `string'
PUBLIC	??_C@_08JOBOPOFA@RC2?$CI128?$CJ?$AA@		; `string'
PUBLIC	??_C@_09DNAHFGCI@IDEA?$CI128?$CJ?$AA@		; `string'
PUBLIC	??_C@_08OAPNMODC@AES?$CI128?$CJ?$AA@		; `string'
PUBLIC	??_C@_08DABEKBFB@AES?$CI256?$CJ?$AA@		; `string'
PUBLIC	??_C@_0M@KBEPPIBE@AESGCM?$CI128?$CJ?$AA@	; `string'
PUBLIC	??_C@_0M@HBKGJHHH@AESGCM?$CI256?$CJ?$AA@	; `string'
PUBLIC	??_C@_0O@IHMMGHFO@Camellia?$CI128?$CJ?$AA@	; `string'
PUBLIC	??_C@_0O@FHCFAIDN@Camellia?$CI256?$CJ?$AA@	; `string'
PUBLIC	??_C@_09EIMIHMON@SEED?$CI128?$CJ?$AA@		; `string'
PUBLIC	??_C@_0M@GEGNFJ@GOST89?$CI256?$CJ?$AA@		; `string'
PUBLIC	??_C@_04BFMJLMOC@AEAD?$AA@			; `string'
PUBLIC	??_C@_06CBBMHLD@GOST89?$AA@			; `string'
PUBLIC	??_C@_0BF@DPJDPLHD@OPENSSL_malloc?5Error?$AA@	; `string'
PUBLIC	??_C@_0BB@OLKJDAH@Buffer?5too?5small?$AA@	; `string'
PUBLIC	??_C@_06DIOMAMDA@?$CINONE?$CJ?$AA@		; `string'
PUBLIC	??_C@_0M@EGHBBHFM@TLSv1?1SSLv3?$AA@		; `string'
PUBLIC	___isa_available_default
PUBLIC	__xmm@00000003000000020000000100000000
PUBLIC	__xmm@00000014000000140000001400000014
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_find:PROC
EXTRN	_sk_push:PROC
EXTRN	_sk_set_cmp_func:PROC
EXTRN	_sk_dup:PROC
EXTRN	_sk_sort:PROC
EXTRN	_CRYPTO_mem_ctrl:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OpenSSLDie:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_COMP_zlib:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_EVP_MD_size:PROC
EXTRN	_EVP_CIPHER_flags:PROC
EXTRN	_EVP_enc_null:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_asn1_find_str:PROC
EXTRN	_EVP_PKEY_asn1_get0_info:PROC
EXTRN	_ENGINE_finish:PROC
EXTRN	_ssl_cipher_ptr_id_cmp:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	___isa_available:DWORD
;	COMDAT ___isa_available_default
_BSS	SEGMENT
___isa_available_default DD 01H DUP (?)
_BSS	ENDS
;	COMDAT __xmm@00000014000000140000001400000014
CONST	SEGMENT
__xmm@00000014000000140000001400000014 DB 014H, 00H, 00H, 00H, 014H, 00H, 00H
	DB	00H, 014H, 00H, 00H, 00H, 014H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000003000000020000000100000000
CONST	SEGMENT
__xmm@00000003000000020000000100000000 DB 00H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 02H, 00H, 00H, 00H, 03H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT ??_C@_0M@EGHBBHFM@TLSv1?1SSLv3?$AA@
CONST	SEGMENT
??_C@_0M@EGHBBHFM@TLSv1?1SSLv3?$AA@ DB 'TLSv1/SSLv3', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DIOMAMDA@?$CINONE?$CJ?$AA@
CONST	SEGMENT
??_C@_06DIOMAMDA@?$CINONE?$CJ?$AA@ DB '(NONE)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OLKJDAH@Buffer?5too?5small?$AA@
CONST	SEGMENT
??_C@_0BB@OLKJDAH@Buffer?5too?5small?$AA@ DB 'Buffer too small', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DPJDPLHD@OPENSSL_malloc?5Error?$AA@
CONST	SEGMENT
??_C@_0BF@DPJDPLHD@OPENSSL_malloc?5Error?$AA@ DB 'OPENSSL_malloc Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CBBMHLD@GOST89?$AA@
CONST	SEGMENT
??_C@_06CBBMHLD@GOST89?$AA@ DB 'GOST89', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BFMJLMOC@AEAD?$AA@
CONST	SEGMENT
??_C@_04BFMJLMOC@AEAD?$AA@ DB 'AEAD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GEGNFJ@GOST89?$CI256?$CJ?$AA@
CONST	SEGMENT
??_C@_0M@GEGNFJ@GOST89?$CI256?$CJ?$AA@ DB 'GOST89(256)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EIMIHMON@SEED?$CI128?$CJ?$AA@
CONST	SEGMENT
??_C@_09EIMIHMON@SEED?$CI128?$CJ?$AA@ DB 'SEED(128)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FHCFAIDN@Camellia?$CI256?$CJ?$AA@
CONST	SEGMENT
??_C@_0O@FHCFAIDN@Camellia?$CI256?$CJ?$AA@ DB 'Camellia(256)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IHMMGHFO@Camellia?$CI128?$CJ?$AA@
CONST	SEGMENT
??_C@_0O@IHMMGHFO@Camellia?$CI128?$CJ?$AA@ DB 'Camellia(128)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HBKGJHHH@AESGCM?$CI256?$CJ?$AA@
CONST	SEGMENT
??_C@_0M@HBKGJHHH@AESGCM?$CI256?$CJ?$AA@ DB 'AESGCM(256)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KBEPPIBE@AESGCM?$CI128?$CJ?$AA@
CONST	SEGMENT
??_C@_0M@KBEPPIBE@AESGCM?$CI128?$CJ?$AA@ DB 'AESGCM(128)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DABEKBFB@AES?$CI256?$CJ?$AA@
CONST	SEGMENT
??_C@_08DABEKBFB@AES?$CI256?$CJ?$AA@ DB 'AES(256)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAPNMODC@AES?$CI128?$CJ?$AA@
CONST	SEGMENT
??_C@_08OAPNMODC@AES?$CI128?$CJ?$AA@ DB 'AES(128)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DNAHFGCI@IDEA?$CI128?$CJ?$AA@
CONST	SEGMENT
??_C@_09DNAHFGCI@IDEA?$CI128?$CJ?$AA@ DB 'IDEA(128)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JOBOPOFA@RC2?$CI128?$CJ?$AA@
CONST	SEGMENT
??_C@_08JOBOPOFA@RC2?$CI128?$CJ?$AA@ DB 'RC2(128)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07ODGLHHPA@RC2?$CI56?$CJ?$AA@
CONST	SEGMENT
??_C@_07ODGLHHPA@RC2?$CI56?$CJ?$AA@ DB 'RC2(56)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FPFKGMCH@RC2?$CI40?$CJ?$AA@
CONST	SEGMENT
??_C@_07FPFKGMCH@RC2?$CI40?$CJ?$AA@ DB 'RC2(40)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PNMOMLGK@RC4?$CI128?$CJ?$AA@
CONST	SEGMENT
??_C@_08PNMOMLGK@RC4?$CI128?$CJ?$AA@ DB 'RC4(128)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CEADOPGN@RC4?$CI64?$CJ?$AA@
CONST	SEGMENT
??_C@_07CEADOPGN@RC4?$CI64?$CJ?$AA@ DB 'RC4(64)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DFDCJEON@RC4?$CI56?$CJ?$AA@
CONST	SEGMENT
??_C@_07DFDCJEON@RC4?$CI56?$CJ?$AA@ DB 'RC4(56)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IJADIPDK@RC4?$CI40?$CJ?$AA@
CONST	SEGMENT
??_C@_07IJADIPDK@RC4?$CI40?$CJ?$AA@ DB 'RC4(40)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KDEPFJMJ@3DES?$CI168?$CJ?$AA@
CONST	SEGMENT
??_C@_09KDEPFJMJ@3DES?$CI168?$CJ?$AA@ DB '3DES(168)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PJMHKGJJ@DES?$CI56?$CJ?$AA@
CONST	SEGMENT
??_C@_07PJMHKGJJ@DES?$CI56?$CJ?$AA@ DB 'DES(56)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EFPGLNEO@DES?$CI40?$CJ?$AA@
CONST	SEGMENT
??_C@_07EFPGLNEO@DES?$CI40?$CJ?$AA@ DB 'DES(40)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MENLBMAD@GOST01?$AA@
CONST	SEGMENT
??_C@_06MENLBMAD@GOST01?$AA@ DB 'GOST01', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHJIHAFH@None?$AA@
CONST	SEGMENT
??_C@_04OHJIHAFH@None?$AA@ DB 'None', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KAFEMMGJ@GOST?$AA@
CONST	SEGMENT
??_C@_04KAFEMMGJ@GOST?$AA@ DB 'GOST', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NFDBBNLK@ECDH?1ECDSA?$AA@
CONST	SEGMENT
??_C@_0L@NFDBBNLK@ECDH?1ECDSA?$AA@ DB 'ECDH/ECDSA', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NMKDCACN@ECDH?1RSA?$AA@
CONST	SEGMENT
??_C@_08NMKDCACN@ECDH?1RSA?$AA@ DB 'ECDH/RSA', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MPKDJJPK@DH?$CI1024?$CJ?$AA@
CONST	SEGMENT
??_C@_08MPKDJJPK@DH?$CI1024?$CJ?$AA@ DB 'DH(1024)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07OJOOFGOD@DH?$CI512?$CJ?$AA@
CONST	SEGMENT
??_C@_07OJOOFGOD@DH?$CI512?$CJ?$AA@ DB 'DH(512)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JJFHBACL@DH?1DSS?$AA@
CONST	SEGMENT
??_C@_06JJFHBACL@DH?1DSS?$AA@ DB 'DH/DSS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JENBGILL@DH?1RSA?$AA@
CONST	SEGMENT
??_C@_06JENBGILL@DH?1RSA?$AA@ DB 'DH/RSA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KACPIHME@RSA?$CI1024?$CJ?$AA@
CONST	SEGMENT
??_C@_09KACPIHME@RSA?$CI1024?$CJ?$AA@ DB 'RSA(1024)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NFIHIJDF@RSA?$CI512?$CJ?$AA@
CONST	SEGMENT
??_C@_08NFIHIJDF@RSA?$CI512?$CJ?$AA@ DB 'RSA(512)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CIFAGBMG@unknown?$AA@
CONST	SEGMENT
??_C@_07CIFAGBMG@unknown?$AA@ DB 'unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07NLOFKJHI@?5export?$AA@
CONST	SEGMENT
??_C@_07NLOFKJHI@?5export?$AA@ DB ' export', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ENOBHNBE@ALL?3?$CBEXPORT?3?$CBLOW?3?$CBaNULL?3?$CBeNULL?3?$CB@
CONST	SEGMENT
??_C@_0CG@ENOBHNBE@ALL?3?$CBEXPORT?3?$CBLOW?3?$CBaNULL?3?$CBeNULL?3?$CB@ DB 'A'
	DB	'LL:!EXPORT:!LOW:!aNULL:!eNULL:!SSLv2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MGCPDNLD@DEFAULT?$AA@
CONST	SEGMENT
??_C@_07MGCPDNLD@DEFAULT?$AA@ DB 'DEFAULT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MMHACALI@ECDHE?9ECDSA?9AES128?9GCM?9SHA256?$AA@
CONST	SEGMENT
??_C@_0BO@MMHACALI@ECDHE?9ECDSA?9AES128?9GCM?9SHA256?$AA@ DB 'ECDHE-ECDSA'
	DB	'-AES128-GCM-SHA256', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@CNGFGEEL@ECDHE?9ECDSA?9AES128?9GCM?9SHA256?3EC@
CONST	SEGMENT
??_C@_0DM@CNGFGEEL@ECDHE?9ECDSA?9AES128?9GCM?9SHA256?3EC@ DB 'ECDHE-ECDSA'
	DB	'-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MAHEHKAF@ECDHE?9ECDSA?9AES256?9GCM?9SHA384?$AA@
CONST	SEGMENT
??_C@_0BO@MAHEHKAF@ECDHE?9ECDSA?9AES256?9GCM?9SHA384?$AA@ DB 'ECDHE-ECDSA'
	DB	'-AES256-GCM-SHA384', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09GECADPMF@SUITEB192?$AA@
CONST	SEGMENT
??_C@_09GECADPMF@SUITEB192?$AA@ DB 'SUITEB192', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JCJKDIKO@SUITEB128?$AA@
CONST	SEGMENT
??_C@_09JCJKDIKO@SUITEB128?$AA@ DB 'SUITEB128', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IHCKNMIL@SUITEB128C2?$AA@
CONST	SEGMENT
??_C@_0M@IHCKNMIL@SUITEB128C2?$AA@ DB 'SUITEB128C2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KBPCDIMJ@SUITEB128ONLY?$AA@
CONST	SEGMENT
??_C@_0O@KBPCDIMJ@SUITEB128ONLY?$AA@ DB 'SUITEB128ONLY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NKIPMNFC@STRENGTH?$AA@
CONST	SEGMENT
??_C@_08NKIPMNFC@STRENGTH?$AA@ DB 'STRENGTH', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KMPAMBCP@gost2001?$AA@
CONST	SEGMENT
??_C@_08KMPAMBCP@gost2001?$AA@ DB 'gost2001', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPJPGPFJ@gost94?$AA@
CONST	SEGMENT
??_C@_06BPJPGPFJ@gost94?$AA@ DB 'gost94', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GMBLFPLK@AES?9256?9CBC?9HMAC?9SHA256?$AA@
CONST	SEGMENT
??_C@_0BI@GMBLFPLK@AES?9256?9CBC?9HMAC?9SHA256?$AA@ DB 'AES-256-CBC-HMAC-'
	DB	'SHA256', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JAKBILLC@AES?9128?9CBC?9HMAC?9SHA256?$AA@
CONST	SEGMENT
??_C@_0BI@JAKBILLC@AES?9128?9CBC?9HMAC?9SHA256?$AA@ DB 'AES-128-CBC-HMAC-'
	DB	'SHA256', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NJKHMG@AES?9256?9CBC?9HMAC?9SHA1?$AA@
CONST	SEGMENT
??_C@_0BG@NJKHMG@AES?9256?9CBC?9HMAC?9SHA1?$AA@ DB 'AES-256-CBC-HMAC-SHA1'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OKEPPAEE@AES?9128?9CBC?9HMAC?9SHA1?$AA@
CONST	SEGMENT
??_C@_0BG@OKEPPAEE@AES?9128?9CBC?9HMAC?9SHA1?$AA@ DB 'AES-128-CBC-HMAC-SH'
	DB	'A1', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MFFPBCGK@RC4?9HMAC?9MD5?$AA@
CONST	SEGMENT
??_C@_0N@MFFPBCGK@RC4?9HMAC?9MD5?$AA@ DB 'RC4-HMAC-MD5', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JCNEGNFC@gost?9mac?$AA@
CONST	SEGMENT
??_C@_08JCNEGNFC@gost?9mac?$AA@ DB 'gost-mac', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KEOLKDEN@ssl_mac_secret_size?$FLSSL_MD_GOST9@
CONST	SEGMENT
??_C@_0CM@KEOLKDEN@ssl_mac_secret_size?$FLSSL_MD_GOST9@ DB 'ssl_mac_secre'
	DB	't_size[SSL_MD_GOST94_IDX] >= 0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MIOJGGFD@md_gost94?$AA@
CONST	SEGMENT
??_C@_09MIOJGGFD@md_gost94?$AA@ DB 'md_gost94', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@MJPEELOP@ssl_mac_secret_size?$FLSSL_MD_SHA1_@
CONST	SEGMENT
??_C@_0CK@MJPEELOP@ssl_mac_secret_size?$FLSSL_MD_SHA1_@ DB 'ssl_mac_secre'
	DB	't_size[SSL_MD_SHA1_IDX] >= 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
CONST	SEGMENT
??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@ DB '.\ssl\ssl_ciph.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EKPJCJCG@ssl_mac_secret_size?$FLSSL_MD_MD5_I@
CONST	SEGMENT
??_C@_0CJ@EKPJCJCG@ssl_mac_secret_size?$FLSSL_MD_MD5_I@ DB 'ssl_mac_secre'
	DB	't_size[SSL_MD_MD5_IDX] >= 0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MMKIFGPG@id?9aes256?9GCM?$AA@
CONST	SEGMENT
??_C@_0O@MMKIFGPG@id?9aes256?9GCM?$AA@ DB 'id-aes256-GCM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LNIKAOOL@id?9aes128?9GCM?$AA@
CONST	SEGMENT
??_C@_0O@LNIKAOOL@id?9aes128?9GCM?$AA@ DB 'id-aes128-GCM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KJBEBBMB@SEED?9CBC?$AA@
CONST	SEGMENT
??_C@_08KJBEBBMB@SEED?9CBC?$AA@ DB 'SEED-CBC', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@INGOKGPP@gost89?9cnt?$AA@
CONST	SEGMENT
??_C@_0L@INGOKGPP@gost89?9cnt?$AA@ DB 'gost89-cnt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BICFINO@CAMELLIA?9256?9CBC?$AA@
CONST	SEGMENT
??_C@_0BB@BICFINO@CAMELLIA?9256?9CBC?$AA@ DB 'CAMELLIA-256-CBC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HAKAAAMD@CAMELLIA?9128?9CBC?$AA@
CONST	SEGMENT
??_C@_0BB@HAKAAAMD@CAMELLIA?9128?9CBC?$AA@ DB 'CAMELLIA-128-CBC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FOEEEMFG@AES?9256?9CBC?$AA@
CONST	SEGMENT
??_C@_0M@FOEEEMFG@AES?9256?9CBC?$AA@ DB 'AES-256-CBC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CPGGBEEL@AES?9128?9CBC?$AA@
CONST	SEGMENT
??_C@_0M@CPGGBEEL@AES?9128?9CBC?$AA@ DB 'AES-128-CBC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MJNEIAD@IDEA?9CBC?$AA@
CONST	SEGMENT
??_C@_08MJNEIAD@IDEA?9CBC?$AA@ DB 'IDEA-CBC', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KJDFEEGB@RC2?9CBC?$AA@
CONST	SEGMENT
??_C@_07KJDFEEGB@RC2?9CBC?$AA@ DB 'RC2-CBC', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MLDFENGJ@DES?9EDE3?9CBC?$AA@
CONST	SEGMENT
??_C@_0N@MLDFENGJ@DES?9EDE3?9CBC?$AA@ DB 'DES-EDE3-CBC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07LDJJJFAI@DES?9CBC?$AA@
CONST	SEGMENT
??_C@_07LDJJJFAI@DES?9CBC?$AA@ DB 'DES-CBC', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cmeth_free
_TEXT	SEGMENT
_cm$ = 8						; size = 4
_cmeth_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1966
	jmp	_CRYPTO_free
_cmeth_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _check_suiteb_cipher_list
_TEXT	SEGMENT
_meth$ = 8						; size = 4
_c$ = 12						; size = 4
_prule_str$ = 16					; size = 4
_check_suiteb_cipher_list PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1408
	push	ebx
	push	esi
; Line 1410
	mov	esi, DWORD PTR _prule_str$[esp+4]
	xor	ebx, ebx
	push	edi
	mov	edi, DWORD PTR __imp__strncmp
	push	13					; 0000000dH
	push	OFFSET ??_C@_0O@KBPCDIMJ@SUITEB128ONLY?$AA@
	push	DWORD PTR [esi]
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@check_suit
; Line 1411
	mov	ecx, 65536				; 00010000H
	jmp	SHORT $LN23@check_suit
$LN4@check_suit:
; Line 1412
	push	11					; 0000000bH
	push	OFFSET ??_C@_0M@IHCKNMIL@SUITEB128C2?$AA@
	push	DWORD PTR [esi]
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@check_suit
; Line 1413
	lea	ebx, DWORD PTR [eax+1]
; Line 1414
	mov	ecx, 196608				; 00030000H
	jmp	SHORT $LN23@check_suit
$LN6@check_suit:
; Line 1415
	push	9
	push	OFFSET ??_C@_09JCJKDIKO@SUITEB128?$AA@
	push	DWORD PTR [esi]
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN8@check_suit
; Line 1416
	mov	ecx, 196608				; 00030000H
	jmp	SHORT $LN23@check_suit
$LN8@check_suit:
; Line 1417
	push	9
	push	OFFSET ??_C@_09GECADPMF@SUITEB192?$AA@
	push	DWORD PTR [esi]
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN11@check_suit
; Line 1418
	mov	ecx, 131072				; 00020000H
$LN23@check_suit:
; Line 1422
	mov	edx, DWORD PTR _c$[esp+8]
	mov	eax, DWORD PTR [edx+56]
	and	eax, -196609				; fffcffffH
; Line 1423
	or	eax, ecx
	mov	DWORD PTR [edx+56], eax
; Line 1424
	jmp	SHORT $LN12@check_suit
$LN11@check_suit:
; Line 1425
	mov	edx, DWORD PTR _c$[esp+8]
	mov	ecx, DWORD PTR [edx+56]
	and	ecx, 196608				; 00030000H
$LN12@check_suit:
; Line 1427
	test	ecx, ecx
	je	$LN24@check_suit
; Line 1431
	mov	eax, DWORD PTR _meth$[esp+8]
	mov	eax, DWORD PTR [eax+100]
	mov	eax, DWORD PTR [eax+56]
	test	al, 16					; 00000010H
	jne	SHORT $LN14@check_suit
; Line 1432
	test	al, 8
	je	SHORT $LN15@check_suit
; Line 1433
	push	1434					; 0000059aH
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	387					; 00000183H
	jmp	SHORT $LN25@check_suit
$LN15@check_suit:
; Line 1436
	push	1437					; 0000059dH
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	379					; 0000017bH
$LN25@check_suit:
	push	331					; 0000014bH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1438
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 1464
	ret	0
$LN14@check_suit:
; Line 1441
	cmp	ecx, 65536				; 00010000H
	je	SHORT $LN20@check_suit
	cmp	ecx, 131072				; 00020000H
	je	SHORT $LN21@check_suit
	cmp	ecx, 196608				; 00030000H
	jne	SHORT $LN2@check_suit
; Line 1443
	test	ebx, ebx
	mov	eax, OFFSET ??_C@_0BO@MAHEHKAF@ECDHE?9ECDSA?9AES256?9GCM?9SHA384?$AA@
	mov	ecx, OFFSET ??_C@_0DM@CNGFGEEL@ECDHE?9ECDSA?9AES128?9GCM?9SHA256?3EC@
	cmove	eax, ecx
	mov	DWORD PTR [esi], eax
; Line 1458
	mov	eax, 1
	pop	edi
	pop	esi
	mov	DWORD PTR [edx+52], 1
	pop	ebx
; Line 1464
	ret	0
$LN21@check_suit:
	pop	edi
; Line 1453
	mov	DWORD PTR [esi], OFFSET ??_C@_0BO@MAHEHKAF@ECDHE?9ECDSA?9AES256?9GCM?9SHA384?$AA@
; Line 1458
	mov	eax, 1
	pop	esi
	mov	DWORD PTR [edx+52], 1
	pop	ebx
; Line 1464
	ret	0
$LN20@check_suit:
; Line 1450
	mov	DWORD PTR [esi], OFFSET ??_C@_0BO@MMHACALI@ECDHE?9ECDSA?9AES128?9GCM?9SHA256?$AA@
$LN2@check_suit:
; Line 1457
	mov	DWORD PTR [edx+52], 1
$LN24@check_suit:
	pop	edi
	pop	esi
; Line 1458
	mov	eax, 1
	pop	ebx
; Line 1464
	ret	0
_check_suiteb_cipher_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_process_rulestr
_TEXT	SEGMENT
_algo_strength$1$ = -44					; size = 4
_buf$1$ = -40						; size = 4
_retval$1$ = -36					; size = 4
_rule$1$ = -32						; size = 4
_alg_mac$1$ = -28					; size = 4
_alg_enc$1$ = -24					; size = 4
_alg_auth$1$ = -20					; size = 4
_alg_mkey$1$ = -16					; size = 4
_cipher_id$1$ = -12					; size = 4
_multi$1$ = -8						; size = 4
_found$1$ = -4						; size = 4
_alg_ssl$1$ = 8						; size = 4
_rule_str$ = 8						; size = 4
_head_p$ = 12						; size = 4
_tail_p$ = 16						; size = 4
_ca_list$ = 20						; size = 4
_ssl_cipher_process_rulestr PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1156
	mov	eax, 44					; 0000002cH
	call	__chkstk
	push	esi
; Line 1165
	mov	esi, DWORD PTR _rule_str$[esp+44]
	xor	eax, eax
	mov	DWORD PTR _cipher_id$1$[esp+48], eax
	mov	ecx, 1
	mov	DWORD PTR _retval$1$[esp+48], ecx
; Line 1167
	mov	al, BYTE PTR [esi]
; Line 1169
	test	al, al
	je	$LN132@ssl_cipher
	push	ebx
	push	ebp
	push	edi
	npad	5
$LL2@ssl_cipher:
; Line 1171
	cmp	al, 45					; 0000002dH
	jne	SHORT $LN17@ssl_cipher
; Line 1172
	mov	edi, 3
; Line 1173
	inc	esi
	mov	DWORD PTR _rule$1$[esp+60], edi
	jmp	SHORT $LN119@ssl_cipher
$LN17@ssl_cipher:
; Line 1174
	cmp	al, 43					; 0000002bH
	jne	SHORT $LN19@ssl_cipher
; Line 1175
	mov	edi, 4
; Line 1176
	inc	esi
	mov	DWORD PTR _rule$1$[esp+60], edi
	jmp	SHORT $LN119@ssl_cipher
$LN19@ssl_cipher:
; Line 1177
	cmp	al, 33					; 00000021H
	jne	SHORT $LN21@ssl_cipher
; Line 1178
	mov	edi, 2
; Line 1179
	inc	esi
	mov	DWORD PTR _rule$1$[esp+60], edi
	jmp	SHORT $LN119@ssl_cipher
$LN21@ssl_cipher:
; Line 1180
	cmp	al, 64					; 00000040H
	jne	SHORT $LN23@ssl_cipher
; Line 1181
	mov	edi, 5
; Line 1182
	inc	esi
	mov	DWORD PTR _rule$1$[esp+60], edi
; Line 1183
	jmp	SHORT $LN119@ssl_cipher
$LN23@ssl_cipher:
; Line 1184
	mov	edi, 1
	mov	DWORD PTR _rule$1$[esp+60], edi
; Line 1187
	cmp	al, 58					; 0000003aH
	je	$LN26@ssl_cipher
	cmp	al, 32					; 00000020H
	je	$LN26@ssl_cipher
	cmp	al, 59					; 0000003bH
	je	$LN26@ssl_cipher
	cmp	al, 44					; 0000002cH
	je	$LN26@ssl_cipher
$LN119@ssl_cipher:
; Line 1192
	xor	eax, eax
; Line 1196
	xor	edx, edx
; Line 1197
	xor	ebx, ebx
	mov	DWORD PTR _alg_mkey$1$[esp+60], eax
	mov	DWORD PTR _alg_auth$1$[esp+60], eax
	mov	DWORD PTR _alg_enc$1$[esp+60], eax
	mov	DWORD PTR _alg_mac$1$[esp+60], eax
	mov	DWORD PTR _alg_ssl$1$[esp+56], edx
	mov	DWORD PTR _algo_strength$1$[esp+60], ebx
$LL5@ssl_cipher:
; Line 1201
	mov	ecx, esi
; Line 1202
	xor	ebp, ebp
	mov	DWORD PTR _buf$1$[esp+60], ecx
$LN145@ssl_cipher:
; Line 1206
	mov	al, BYTE PTR [esi]
	cmp	al, 65					; 00000041H
	jl	SHORT $LN28@ssl_cipher
	cmp	al, 90					; 0000005aH
	jle	SHORT $LN27@ssl_cipher
$LN28@ssl_cipher:
	cmp	al, 48					; 00000030H
	jl	SHORT $LN29@ssl_cipher
	cmp	al, 57					; 00000039H
	jle	SHORT $LN27@ssl_cipher
$LN29@ssl_cipher:
	cmp	al, 97					; 00000061H
	jl	SHORT $LN30@ssl_cipher
	cmp	al, 122					; 0000007aH
	jle	SHORT $LN27@ssl_cipher
$LN30@ssl_cipher:
	cmp	al, 45					; 0000002dH
	je	SHORT $LN27@ssl_cipher
	cmp	al, 46					; 0000002eH
	jne	SHORT $LN9@ssl_cipher
$LN27@ssl_cipher:
; Line 1211
	inc	esi
; Line 1212
	inc	ebp
; Line 1213
	jmp	SHORT $LN145@ssl_cipher
$LN9@ssl_cipher:
; Line 1215
	test	ebp, ebp
	je	$LN88@ssl_cipher
; Line 1228
	cmp	edi, 5
	je	$LN121@ssl_cipher
; Line 1234
	cmp	al, 43					; 0000002bH
	jne	SHORT $LN33@ssl_cipher
; Line 1235
	mov	DWORD PTR _multi$1$[esp+60], 1
; Line 1236
	inc	esi
; Line 1237
	jmp	SHORT $LN34@ssl_cipher
$LN33@ssl_cipher:
; Line 1238
	mov	DWORD PTR _multi$1$[esp+60], 0
$LN34@ssl_cipher:
; Line 1253
	mov	eax, DWORD PTR _ca_list$[esp+56]
	xor	ebx, ebx
	xor	edi, edi
	mov	DWORD PTR _cipher_id$1$[esp+60], ebx
	mov	DWORD PTR _found$1$[esp+60], edi
	cmp	DWORD PTR [eax], ebx
	je	$LN137@ssl_cipher
	mov	edi, eax
$LL10@ssl_cipher:
; Line 1254
	mov	eax, DWORD PTR [edi]
	push	ebp
	push	DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN35@ssl_cipher
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax+ebp], 0
	je	SHORT $LN87@ssl_cipher
$LN35@ssl_cipher:
; Line 1253
	mov	eax, DWORD PTR _ca_list$[esp+56]
; Line 1259
	inc	ebx
	cmp	DWORD PTR [eax+ebx*4], 0
	mov	ecx, DWORD PTR _buf$1$[esp+60]
	lea	edi, DWORD PTR [eax+ebx*4]
	jne	SHORT $LL10@ssl_cipher
	mov	edi, DWORD PTR _found$1$[esp+60]
	mov	ebx, DWORD PTR _algo_strength$1$[esp+60]
	mov	edx, DWORD PTR _alg_ssl$1$[esp+56]
	jmp	SHORT $LN98@ssl_cipher
$LN87@ssl_cipher:
; Line 1265
	mov	edx, DWORD PTR _ca_list$[esp+56]
	mov	edi, 1
	mov	edx, DWORD PTR [edx+ebx*4]
	mov	eax, DWORD PTR [edx+12]
	test	eax, eax
	je	$LN40@ssl_cipher
; Line 1266
	mov	ecx, DWORD PTR _alg_mkey$1$[esp+60]
	test	ecx, ecx
	je	$LN39@ssl_cipher
; Line 1267
	and	ecx, eax
	mov	DWORD PTR _alg_mkey$1$[esp+60], ecx
; Line 1268
	jne	$LN40@ssl_cipher
$LN91@ssl_cipher:
; Line 1270
	mov	ebx, DWORD PTR _algo_strength$1$[esp+60]
	xor	edi, edi
$LN146@ssl_cipher:
; Line 1316
	mov	edx, DWORD PTR _alg_ssl$1$[esp+56]
$LN139@ssl_cipher:
	mov	ecx, DWORD PTR _buf$1$[esp+60]
$LN98@ssl_cipher:
; Line 1372
	mov	eax, DWORD PTR _rule$1$[esp+60]
	cmp	eax, 5
	jne	$LN70@ssl_cipher
$LN121@ssl_cipher:
; Line 1374
	cmp	ebp, 8
	jne	$LN72@ssl_cipher
	push	ebp
	push	OFFSET ??_C@_08NKIPMNFC@STRENGTH?$AA@
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN72@ssl_cipher
; Line 1375
	push	DWORD PTR _tail_p$[esp+56]
	push	DWORD PTR _head_p$[esp+60]
	call	_ssl_cipher_strength_sort
	add	esp, 8
; Line 1379
	test	eax, eax
	je	$LN122@ssl_cipher
	mov	ecx, DWORD PTR _retval$1$[esp+60]
$LN84@ssl_cipher:
; Line 1387
	mov	al, BYTE PTR [esi]
	test	al, al
	je	SHORT $LN128@ssl_cipher
$LL12@ssl_cipher:
	cmp	al, 58					; 0000003aH
	je	$LN15@ssl_cipher
	cmp	al, 32					; 00000020H
	je	$LN15@ssl_cipher
	cmp	al, 59					; 0000003bH
	je	$LN15@ssl_cipher
	cmp	al, 44					; 0000002cH
	je	$LN15@ssl_cipher
	mov	al, BYTE PTR [esi+1]
; Line 1388
	inc	esi
	test	al, al
	jne	SHORT $LL12@ssl_cipher
$LN128@ssl_cipher:
	pop	edi
	pop	ebp
	pop	ebx
; Line 1402
	mov	eax, ecx
	pop	esi
; Line 1403
	add	esp, 44					; 0000002cH
	ret	0
$LN39@ssl_cipher:
; Line 1273
	mov	DWORD PTR _alg_mkey$1$[esp+60], eax
$LN40@ssl_cipher:
; Line 1276
	mov	eax, DWORD PTR [edx+16]
	test	eax, eax
	je	SHORT $LN44@ssl_cipher
; Line 1277
	mov	ecx, DWORD PTR _alg_auth$1$[esp+60]
	test	ecx, ecx
	je	SHORT $LN43@ssl_cipher
; Line 1278
	and	ecx, eax
	mov	DWORD PTR _alg_auth$1$[esp+60], ecx
; Line 1279
	je	$LN91@ssl_cipher
; Line 1283
	jmp	SHORT $LN44@ssl_cipher
$LN43@ssl_cipher:
; Line 1284
	mov	DWORD PTR _alg_auth$1$[esp+60], eax
$LN44@ssl_cipher:
; Line 1287
	mov	eax, DWORD PTR [edx+20]
	test	eax, eax
	je	SHORT $LN48@ssl_cipher
; Line 1288
	mov	ecx, DWORD PTR _alg_enc$1$[esp+60]
	test	ecx, ecx
	je	SHORT $LN47@ssl_cipher
; Line 1289
	and	ecx, eax
	mov	DWORD PTR _alg_enc$1$[esp+60], ecx
; Line 1290
	je	$LN91@ssl_cipher
; Line 1294
	jmp	SHORT $LN48@ssl_cipher
$LN47@ssl_cipher:
; Line 1295
	mov	DWORD PTR _alg_enc$1$[esp+60], eax
$LN48@ssl_cipher:
; Line 1298
	mov	eax, DWORD PTR [edx+24]
	test	eax, eax
	je	SHORT $LN52@ssl_cipher
; Line 1299
	mov	ebx, DWORD PTR _alg_mac$1$[esp+60]
	test	ebx, ebx
	je	SHORT $LN51@ssl_cipher
; Line 1300
	and	ebx, eax
	mov	DWORD PTR _alg_mac$1$[esp+60], ebx
; Line 1301
	je	$LN91@ssl_cipher
; Line 1305
	jmp	SHORT $LN52@ssl_cipher
$LN51@ssl_cipher:
; Line 1306
	mov	DWORD PTR _alg_mac$1$[esp+60], eax
$LN52@ssl_cipher:
; Line 1309
	mov	ecx, DWORD PTR [edx+32]
	mov	eax, ecx
; Line 1310
	mov	ebx, DWORD PTR _algo_strength$1$[esp+60]
	and	eax, 3
	je	SHORT $LN56@ssl_cipher
	test	bl, 3
	je	SHORT $LN55@ssl_cipher
; Line 1311
	mov	eax, ecx
	or	eax, -4					; fffffffcH
	and	ebx, eax
	mov	DWORD PTR _algo_strength$1$[esp+60], ebx
; Line 1314
	test	bl, 3
	jne	SHORT $LN56@ssl_cipher
$LN95@ssl_cipher:
; Line 1315
	xor	edi, edi
; Line 1316
	jmp	$LN146@ssl_cipher
$LN55@ssl_cipher:
; Line 1319
	or	ebx, eax
	mov	DWORD PTR _algo_strength$1$[esp+60], ebx
$LN56@ssl_cipher:
; Line 1322
	mov	eax, ecx
	and	eax, 508				; 000001fcH
	je	SHORT $LN60@ssl_cipher
; Line 1323
	test	ebx, 508				; 000001fcH
	je	SHORT $LN59@ssl_cipher
; Line 1324
	mov	eax, ecx
	or	eax, -509				; fffffe03H
	and	ebx, eax
	mov	DWORD PTR _algo_strength$1$[esp+60], ebx
; Line 1327
	test	ebx, 508				; 000001fcH
	je	SHORT $LN95@ssl_cipher
; Line 1331
	jmp	SHORT $LN60@ssl_cipher
$LN59@ssl_cipher:
; Line 1332
	or	ebx, eax
	mov	DWORD PTR _algo_strength$1$[esp+60], ebx
$LN60@ssl_cipher:
; Line 1336
	test	ecx, 512				; 00000200H
	je	SHORT $LN62@ssl_cipher
; Line 1337
	or	ebx, 512				; 00000200H
	mov	DWORD PTR _algo_strength$1$[esp+60], ebx
$LN62@ssl_cipher:
; Line 1340
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN63@ssl_cipher
; Line 1346
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _cipher_id$1$[esp+60], eax
$LN140@ssl_cipher:
	mov	edx, DWORD PTR _alg_ssl$1$[esp+56]
$LN67@ssl_cipher:
; Line 1365
	cmp	DWORD PTR _multi$1$[esp+60], 0
	je	$LN139@ssl_cipher
; Line 1206
	mov	edi, DWORD PTR _rule$1$[esp+60]
	jmp	$LL5@ssl_cipher
$LN63@ssl_cipher:
; Line 1353
	mov	eax, DWORD PTR [edx+28]
	test	eax, eax
	je	SHORT $LN140@ssl_cipher
; Line 1354
	mov	edx, DWORD PTR _alg_ssl$1$[esp+56]
	test	edx, edx
	je	SHORT $LN66@ssl_cipher
; Line 1355
	and	edx, eax
	mov	DWORD PTR _alg_ssl$1$[esp+56], edx
; Line 1356
	jne	SHORT $LN67@ssl_cipher
; Line 1357
	xor	edi, edi
	jmp	$LN139@ssl_cipher
$LN66@ssl_cipher:
; Line 1361
	mov	edx, eax
	mov	DWORD PTR _alg_ssl$1$[esp+56], edx
	jmp	SHORT $LN67@ssl_cipher
$LN88@ssl_cipher:
; Line 1221
	push	1222					; 000004c6H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	280					; 00000118H
	push	230					; 000000e6H
	push	20					; 00000014H
	call	_ERR_put_error
; Line 1223
	xor	edi, edi
	add	esp, 20					; 00000014H
	mov	DWORD PTR _retval$1$[esp+60], edi
; Line 1224
	inc	esi
	jmp	$LN146@ssl_cipher
$LN137@ssl_cipher:
	mov	ebx, DWORD PTR _algo_strength$1$[esp+60]
	jmp	$LN98@ssl_cipher
$LN72@ssl_cipher:
; Line 1377
	push	1378					; 00000562H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	280					; 00000118H
	push	230					; 000000e6H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN122@ssl_cipher:
; Line 1380
	xor	ecx, ecx
	mov	DWORD PTR _retval$1$[esp+60], ecx
	jmp	$LN84@ssl_cipher
$LN70@ssl_cipher:
; Line 1389
	test	edi, edi
	je	SHORT $LN85@ssl_cipher
; Line 1390
	push	DWORD PTR _tail_p$[esp+56]
	push	DWORD PTR _head_p$[esp+60]
	push	-1
	push	eax
	mov	eax, DWORD PTR _alg_mac$1$[esp+76]
	push	ebx
	push	edx
	push	eax
	mov	eax, DWORD PTR _alg_enc$1$[esp+88]
	push	eax
	mov	eax, DWORD PTR _alg_auth$1$[esp+92]
	push	eax
	mov	eax, DWORD PTR _alg_mkey$1$[esp+96]
	push	eax
	mov	eax, DWORD PTR _cipher_id$1$[esp+100]
	push	eax
	call	_ssl_cipher_apply_rule
	add	esp, 44					; 0000002cH
$LN15@ssl_cipher:
; Line 1398
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LN103@ssl_cipher
$LN135@ssl_cipher:
; Line 1402
	mov	eax, DWORD PTR _retval$1$[esp+60]
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1403
	add	esp, 44					; 0000002cH
	ret	0
$LN85@ssl_cipher:
; Line 1395
	mov	al, BYTE PTR [esi]
	test	al, al
	je	SHORT $LN135@ssl_cipher
	npad	5
$LL14@ssl_cipher:
	cmp	al, 58					; 0000003aH
	je	SHORT $LN15@ssl_cipher
	cmp	al, 32					; 00000020H
	je	SHORT $LN15@ssl_cipher
	cmp	al, 59					; 0000003bH
	je	SHORT $LN15@ssl_cipher
	cmp	al, 44					; 0000002cH
	je	SHORT $LN15@ssl_cipher
	mov	al, BYTE PTR [esi+1]
; Line 1396
	inc	esi
	test	al, al
	jne	SHORT $LL14@ssl_cipher
; Line 1402
	mov	eax, DWORD PTR _retval$1$[esp+60]
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1403
	add	esp, 44					; 0000002cH
	ret	0
$LN26@ssl_cipher:
; Line 1188
	inc	esi
$LN103@ssl_cipher:
; Line 1167
	mov	al, BYTE PTR [esi]
; Line 1169
	test	al, al
	jne	$LL2@ssl_cipher
; Line 1402
	mov	eax, DWORD PTR _retval$1$[esp+60]
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1403
	add	esp, 44					; 0000002cH
	ret	0
$LN132@ssl_cipher:
; Line 1402
	mov	eax, ecx
	pop	esi
; Line 1403
	add	esp, 44					; 0000002cH
	ret	0
_ssl_cipher_process_rulestr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_strength_sort
_TEXT	SEGMENT
_head$1 = -12						; size = 4
_tail$2 = -8						; size = 4
_number_uses$1$ = -4					; size = 4
_head_p$ = 8						; size = 4
_tail_p$ = 12						; size = 4
_ssl_cipher_strength_sort PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1106
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 1116
	mov	ecx, DWORD PTR _head_p$[esp+8]
	push	ebx
	push	ebp
	xor	ebx, ebx
	mov	ecx, DWORD PTR [ecx]
	push	esi
; Line 1117
	test	ecx, ecx
	je	SHORT $LN3@ssl_cipher
	npad	7
$LL2@ssl_cipher:
; Line 1118
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN9@ssl_cipher
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+40]
	cmp	eax, ebx
	cmovg	ebx, eax
$LN9@ssl_cipher:
; Line 1120
	mov	ecx, DWORD PTR [ecx+12]
	test	ecx, ecx
	jne	SHORT $LL2@ssl_cipher
$LN3@ssl_cipher:
; Line 1123
	push	1123					; 00000463H
	lea	esi, DWORD PTR [ebx*4+4]
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	esi
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _number_uses$1$[esp+24], ebp
; Line 1124
	test	ebp, ebp
	jne	SHORT $LN10@ssl_cipher
; Line 1125
	push	1125					; 00000465H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	65					; 00000041H
	push	231					; 000000e7H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1126
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
; Line 1150
	add	esp, 12					; 0000000cH
	ret	0
$LN10@ssl_cipher:
; Line 1128
	push	esi
	push	0
	push	ebp
	call	_memset
; Line 1133
	mov	eax, DWORD PTR _head_p$[esp+32]
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax]
; Line 1134
	test	ecx, ecx
	je	SHORT $LN5@ssl_cipher
$LL4@ssl_cipher:
; Line 1135
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN11@ssl_cipher
; Line 1136
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+40]
	inc	DWORD PTR [ebp+eax*4]
$LN11@ssl_cipher:
; Line 1137
	mov	ecx, DWORD PTR [ecx+12]
	test	ecx, ecx
	jne	SHORT $LL4@ssl_cipher
	mov	eax, DWORD PTR _head_p$[esp+20]
$LN5@ssl_cipher:
; Line 1143
	test	ebx, ebx
	js	SHORT $LN7@ssl_cipher
	push	edi
$LL8@ssl_cipher:
; Line 1144
	cmp	DWORD PTR [ebp+ebx*4], 0
	jle	SHORT $LN6@ssl_cipher
; Line 989
	mov	ecx, DWORD PTR _tail_p$[esp+24]
	mov	edi, DWORD PTR [eax]
	mov	DWORD PTR _head$1[esp+28], edi
	mov	ebp, DWORD PTR [ecx]
	mov	DWORD PTR _tail$2[esp+28], ebp
; Line 1001
	test	ebp, ebp
	je	SHORT $LN56@ssl_cipher
	npad	1
$LL15@ssl_cipher:
; Line 1004
	mov	esi, edi
; Line 1006
	test	edi, edi
	je	SHORT $LN70@ssl_cipher
; Line 1009
	mov	edi, DWORD PTR [edi+12]
; Line 1011
	mov	eax, DWORD PTR [esi]
; Line 1017
	test	ebx, ebx
	js	SHORT $LN23@ssl_cipher
; Line 1018
	cmp	ebx, DWORD PTR [eax+40]
	jne	SHORT $LN39@ssl_cipher
$LN23@ssl_cipher:
; Line 1068
	cmp	DWORD PTR [esi+4], 0
	je	SHORT $LN39@ssl_cipher
; Line 1069
	lea	eax, DWORD PTR _tail$2[esp+28]
	push	eax
	lea	eax, DWORD PTR _head$1[esp+32]
	push	esi
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
$LN39@ssl_cipher:
; Line 1001
	cmp	esi, ebp
	jne	SHORT $LL15@ssl_cipher
$LN70@ssl_cipher:
	mov	edi, DWORD PTR _head$1[esp+28]
	mov	ebp, DWORD PTR _tail$2[esp+28]
	mov	eax, DWORD PTR _head_p$[esp+24]
	mov	ecx, DWORD PTR _tail_p$[esp+24]
$LN56@ssl_cipher:
; Line 1100
	mov	DWORD PTR [eax], edi
; Line 1101
	mov	DWORD PTR [ecx], ebp
	mov	ebp, DWORD PTR _number_uses$1$[esp+28]
$LN6@ssl_cipher:
; Line 1143
	sub	ebx, 1
	jns	SHORT $LL8@ssl_cipher
	pop	edi
$LN7@ssl_cipher:
; Line 1148
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
; Line 1149
	mov	eax, 1
	pop	esi
	pop	ebp
	pop	ebx
; Line 1150
	add	esp, 12					; 0000000cH
	ret	0
_ssl_cipher_strength_sort ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_apply_rule
_TEXT	SEGMENT
_head$ = -16						; size = 4
_tail$ = -12						; size = 4
_last$1$ = -8						; size = 4
_reverse$2$ = -4					; size = 4
_cipher_id$ = 8						; size = 4
_alg_mkey$ = 12						; size = 4
_alg_auth$ = 16						; size = 4
_alg_enc$ = 20						; size = 4
_alg_mac$ = 24						; size = 4
_alg_ssl$ = 28						; size = 4
_algo_strength$ = 32					; size = 4
_rule$ = 36						; size = 4
_strength_bits$ = 40					; size = 4
_head_p$ = 44						; size = 4
_tail_p$ = 48						; size = 4
_ssl_cipher_apply_rule PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 972
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 988
	mov	esi, DWORD PTR _head_p$[esp+24]
	xor	ecx, ecx
	cmp	DWORD PTR _rule$[esp+24], 3
	mov	eax, 1
	push	edi
; Line 989
	mov	edi, DWORD PTR _tail_p$[esp+28]
	cmove	ecx, eax
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR _reverse$2$[esp+32], ecx
	mov	DWORD PTR _head$[esp+32], edx
	mov	edi, DWORD PTR [edi]
	mov	DWORD PTR _tail$[esp+32], edi
; Line 991
	test	ecx, ecx
	je	SHORT $LN6@ssl_cipher
; Line 993
	mov	eax, edx
	mov	ebx, edi
	mov	DWORD PTR _last$1$[esp+32], eax
; Line 994
	jmp	SHORT $LN7@ssl_cipher
$LN6@ssl_cipher:
; Line 995
	mov	ebx, edx
; Line 996
	mov	DWORD PTR _last$1$[esp+32], edi
	mov	eax, edi
$LN7@ssl_cipher:
; Line 1001
	test	eax, eax
	je	$LN45@ssl_cipher
	mov	eax, DWORD PTR _algo_strength$[esp+28]
	npad	9
$LL2@ssl_cipher:
; Line 1004
	mov	esi, ebx
; Line 1006
	test	ebx, ebx
	je	$LN46@ssl_cipher
; Line 1009
	test	ecx, ecx
	je	SHORT $LN37@ssl_cipher
	mov	ebx, DWORD PTR [ebx+16]
	jmp	SHORT $LN38@ssl_cipher
$LN37@ssl_cipher:
	mov	ebx, DWORD PTR [ebx+12]
$LN38@ssl_cipher:
; Line 1017
	cmp	DWORD PTR _strength_bits$[esp+28], 0
	mov	ecx, DWORD PTR [esi]
	jl	SHORT $LN10@ssl_cipher
; Line 1018
	mov	ebp, DWORD PTR _strength_bits$[esp+28]
	cmp	ebp, DWORD PTR [ecx+40]
	mov	ebp, DWORD PTR _rule$[esp+28]
	jne	$LN30@ssl_cipher
; Line 1020
	jmp	$LN20@ssl_cipher
$LN10@ssl_cipher:
; Line 1032
	cmp	DWORD PTR _alg_mkey$[esp+28], 0
	je	SHORT $LN13@ssl_cipher
	mov	ebp, DWORD PTR _alg_mkey$[esp+28]
	test	DWORD PTR [ecx+12], ebp
	je	$LN30@ssl_cipher
$LN13@ssl_cipher:
; Line 1034
	cmp	DWORD PTR _alg_auth$[esp+28], 0
	je	SHORT $LN14@ssl_cipher
	mov	ebp, DWORD PTR _alg_auth$[esp+28]
	test	DWORD PTR [ecx+16], ebp
	je	$LN30@ssl_cipher
$LN14@ssl_cipher:
; Line 1036
	cmp	DWORD PTR _alg_enc$[esp+28], 0
	je	SHORT $LN15@ssl_cipher
	mov	ebp, DWORD PTR _alg_enc$[esp+28]
	test	DWORD PTR [ecx+20], ebp
	je	$LN30@ssl_cipher
$LN15@ssl_cipher:
; Line 1038
	cmp	DWORD PTR _alg_mac$[esp+28], 0
	je	SHORT $LN16@ssl_cipher
	mov	ebp, DWORD PTR _alg_mac$[esp+28]
	test	DWORD PTR [ecx+24], ebp
	je	$LN30@ssl_cipher
$LN16@ssl_cipher:
; Line 1040
	cmp	DWORD PTR _alg_ssl$[esp+28], 0
	mov	ebp, DWORD PTR _rule$[esp+28]
	je	SHORT $LN17@ssl_cipher
	mov	ebp, DWORD PTR _alg_ssl$[esp+28]
	test	DWORD PTR [ecx+28], ebp
	mov	ebp, DWORD PTR _rule$[esp+28]
	je	$LN30@ssl_cipher
$LN17@ssl_cipher:
; Line 1043
	test	al, 3
	je	SHORT $LN18@ssl_cipher
	mov	eax, DWORD PTR [ecx+32]
	and	eax, DWORD PTR _algo_strength$[esp+28]
	test	al, 3
	mov	eax, DWORD PTR _algo_strength$[esp+28]
	je	$LN30@ssl_cipher
$LN18@ssl_cipher:
; Line 1046
	test	eax, 508				; 000001fcH
	je	SHORT $LN19@ssl_cipher
	mov	eax, DWORD PTR [ecx+32]
	and	eax, DWORD PTR _algo_strength$[esp+28]
	test	eax, 508				; 000001fcH
	mov	eax, DWORD PTR _algo_strength$[esp+28]
	je	$LN30@ssl_cipher
$LN19@ssl_cipher:
; Line 1049
	test	eax, 512				; 00000200H
	je	SHORT $LN20@ssl_cipher
	test	DWORD PTR [ecx+32], 512			; 00000200H
	je	$LN30@ssl_cipher
$LN20@ssl_cipher:
; Line 1058
	cmp	ebp, 1
	jne	SHORT $LN21@ssl_cipher
; Line 1060
	cmp	DWORD PTR [esi+4], 0
	jne	$LN30@ssl_cipher
; Line 1061
	lea	eax, DWORD PTR _tail$[esp+32]
	push	eax
	lea	eax, DWORD PTR _head$[esp+36]
	push	esi
	push	eax
	call	_ll_append_tail
; Line 1064
	mov	edx, DWORD PTR _head$[esp+44]
	add	esp, 12					; 0000000cH
	mov	edi, DWORD PTR _tail$[esp+32]
	mov	DWORD PTR [esi+4], ebp
	jmp	$LN50@ssl_cipher
$LN21@ssl_cipher:
; Line 1066
	cmp	ebp, 4
	jne	SHORT $LN24@ssl_cipher
; Line 1068
	cmp	DWORD PTR [esi+4], 0
	je	$LN30@ssl_cipher
; Line 1069
	lea	eax, DWORD PTR _tail$[esp+32]
	push	eax
	lea	eax, DWORD PTR _head$[esp+36]
	push	esi
	push	eax
	call	_ll_append_tail
; Line 1070
	mov	edx, DWORD PTR _head$[esp+44]
	add	esp, 12					; 0000000cH
	mov	edi, DWORD PTR _tail$[esp+32]
	jmp	$LN50@ssl_cipher
$LN24@ssl_cipher:
; Line 1071
	cmp	ebp, 3
	jne	SHORT $LN27@ssl_cipher
; Line 1073
	cmp	DWORD PTR [esi+4], 0
	je	SHORT $LN30@ssl_cipher
; Line 1079
	lea	eax, DWORD PTR _tail$[esp+32]
	push	eax
	lea	eax, DWORD PTR _head$[esp+36]
	push	esi
	push	eax
	call	_ll_append_head
; Line 1081
	mov	edx, DWORD PTR _head$[esp+44]
	add	esp, 12					; 0000000cH
	mov	edi, DWORD PTR _tail$[esp+32]
	mov	DWORD PTR [esi+4], 0
	jmp	SHORT $LN50@ssl_cipher
$LN27@ssl_cipher:
; Line 1082
	cmp	ebp, 2
	jne	SHORT $LN30@ssl_cipher
; Line 1084
	cmp	edx, esi
	jne	SHORT $LN31@ssl_cipher
; Line 1085
	mov	edx, DWORD PTR [esi+12]
	mov	DWORD PTR _head$[esp+32], edx
	jmp	SHORT $LN32@ssl_cipher
$LN31@ssl_cipher:
; Line 1087
	mov	ecx, DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [ecx+12], eax
$LN32@ssl_cipher:
; Line 1088
	cmp	edi, esi
	jne	SHORT $LN33@ssl_cipher
; Line 1089
	mov	edi, DWORD PTR [esi+16]
	mov	DWORD PTR _tail$[esp+32], edi
$LN33@ssl_cipher:
; Line 1091
	mov	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [esi+4], 0
	test	ecx, ecx
	je	SHORT $LN34@ssl_cipher
; Line 1092
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx+16], eax
$LN34@ssl_cipher:
; Line 1093
	mov	ecx, DWORD PTR [esi+16]
	test	ecx, ecx
	je	SHORT $LN35@ssl_cipher
; Line 1094
	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR [ecx+12], eax
$LN35@ssl_cipher:
; Line 1095
	mov	DWORD PTR [esi+12], 0
; Line 1096
	mov	DWORD PTR [esi+16], 0
$LN50@ssl_cipher:
	mov	eax, DWORD PTR _algo_strength$[esp+28]
$LN30@ssl_cipher:
; Line 1001
	mov	ecx, DWORD PTR _reverse$2$[esp+32]
	cmp	esi, DWORD PTR _last$1$[esp+32]
	jne	$LL2@ssl_cipher
$LN46@ssl_cipher:
; Line 1100
	mov	eax, DWORD PTR _head_p$[esp+28]
	mov	DWORD PTR [eax], edx
; Line 1101
	mov	eax, DWORD PTR _tail_p$[esp+28]
	mov	DWORD PTR [eax], edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1102
	add	esp, 16					; 00000010H
	ret	0
$LN45@ssl_cipher:
; Line 1101
	mov	eax, DWORD PTR _tail_p$[esp+28]
	mov	DWORD PTR [esi], edx
	mov	DWORD PTR [eax], edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1102
	add	esp, 16					; 00000010H
	ret	0
_ssl_cipher_apply_rule ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_collect_aliases
_TEXT	SEGMENT
_ca_list$ = 8						; size = 4
_num_of_group_aliases$ = 12				; size = 4
_disabled_mkey$ = 16					; size = 4
_disabled_auth$ = 20					; size = 4
_disabled_enc$ = 24					; size = 4
_disabled_mac$ = 28					; size = 4
_disabled_ssl$ = 32					; size = 4
_head$ = 36						; size = 4
_ssl_cipher_collect_aliases PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 915
	mov	edx, DWORD PTR _head$[esp-4]
	not	DWORD PTR _disabled_mkey$[esp-4]
	not	DWORD PTR _disabled_auth$[esp-4]
	not	DWORD PTR _disabled_enc$[esp-4]
	not	DWORD PTR _disabled_mac$[esp-4]
	not	DWORD PTR _disabled_ssl$[esp-4]
; Line 916
	mov	ecx, DWORD PTR _ca_list$[esp-4]
; Line 917
	test	edx, edx
	je	SHORT $LN3@ssl_cipher
$LL2@ssl_cipher:
; Line 918
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
; Line 919
	add	ecx, 4
; Line 920
	mov	edx, DWORD PTR [edx+12]
	test	edx, edx
	jne	SHORT $LL2@ssl_cipher
$LN3@ssl_cipher:
; Line 929
	cmp	DWORD PTR _num_of_group_aliases$[esp-4], 0
	jle	SHORT $LN26@ssl_cipher
	push	ebx
	push	ebp
	push	esi
	mov	edx, OFFSET _cipher_aliases+16
	push	edi
	npad	2
$LL6@ssl_cipher:
; Line 930
	mov	esi, DWORD PTR [edx-4]
; Line 931
	mov	eax, DWORD PTR [edx]
; Line 932
	mov	edi, DWORD PTR [edx+4]
; Line 933
	mov	ebx, DWORD PTR [edx+8]
; Line 934
	mov	ebp, DWORD PTR [edx+12]
; Line 936
	test	esi, esi
	je	SHORT $LN8@ssl_cipher
; Line 937
	test	esi, DWORD PTR _disabled_mkey$[esp+12]
	je	SHORT $LN4@ssl_cipher
$LN8@ssl_cipher:
; Line 940
	test	eax, eax
	je	SHORT $LN10@ssl_cipher
; Line 941
	test	eax, DWORD PTR _disabled_auth$[esp+12]
	je	SHORT $LN4@ssl_cipher
$LN10@ssl_cipher:
; Line 944
	test	edi, edi
	je	SHORT $LN12@ssl_cipher
; Line 945
	test	edi, DWORD PTR _disabled_enc$[esp+12]
	je	SHORT $LN4@ssl_cipher
$LN12@ssl_cipher:
; Line 948
	test	ebx, ebx
	je	SHORT $LN14@ssl_cipher
; Line 949
	test	ebx, DWORD PTR _disabled_mac$[esp+12]
	je	SHORT $LN4@ssl_cipher
$LN14@ssl_cipher:
; Line 952
	test	ebp, ebp
	je	SHORT $LN16@ssl_cipher
; Line 953
	test	ebp, DWORD PTR _disabled_ssl$[esp+12]
	je	SHORT $LN4@ssl_cipher
$LN16@ssl_cipher:
; Line 956
	lea	eax, DWORD PTR [edx-16]
	mov	DWORD PTR [ecx], eax
; Line 957
	add	ecx, 4
$LN4@ssl_cipher:
; Line 929
	add	edx, 48					; 00000030H
	sub	DWORD PTR _num_of_group_aliases$[esp+12], 1
	jne	SHORT $LL6@ssl_cipher
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
$LN26@ssl_cipher:
; Line 960
	mov	DWORD PTR [ecx], 0
; Line 961
	ret	0
_ssl_cipher_collect_aliases ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_collect_ciphers
_TEXT	SEGMENT
tv1500 = -20						; size = 4
tv1491 = -20						; size = 4
tv1504 = -16						; size = 16
_ssl_method$ = 8					; size = 4
_num_of_ciphers$ = 12					; size = 4
_disabled_mkey$ = 16					; size = 4
_disabled_auth$ = 20					; size = 4
_disabled_enc$ = 24					; size = 4
_disabled_mac$ = 28					; size = 4
_disabled_ssl$ = 32					; size = 4
_co_list$ = 36						; size = 4
_head_p$ = 40						; size = 4
_tail_p$ = 44						; size = 4
_ssl_cipher_collect_ciphers PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 830
	push	ebp
	mov	ebp, esp
	and	esp, -16				; fffffff0H
	mov	eax, 20					; 00000014H
	call	__chkstk
	mov	eax, DWORD PTR _co_list$[ebp]
	push	ebx
	push	esi
	push	edi
	movd	xmm0, eax
; Line 842
	xor	ebx, ebx
	pshufd	xmm0, xmm0, 0
; Line 843
	xor	edi, edi
	movaps	XMMWORD PTR tv1504[esp+32], xmm0
	cmp	DWORD PTR _num_of_ciphers$[ebp], ebx
	jle	$LN9@ssl_cipher
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv1500[esp+32], eax
	mov	esi, eax
	npad	6
$LL4@ssl_cipher:
; Line 844
	mov	eax, DWORD PTR _ssl_method$[ebp]
	push	edi
	mov	eax, DWORD PTR [eax+88]
	call	eax
	add	esp, 4
; Line 853
	test	eax, eax
	je	SHORT $LN2@ssl_cipher
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@ssl_cipher
	mov	ecx, DWORD PTR _disabled_mkey$[ebp]
	test	DWORD PTR [eax+12], ecx
	jne	SHORT $LN2@ssl_cipher
	mov	ecx, DWORD PTR _disabled_auth$[ebp]
	test	DWORD PTR [eax+16], ecx
	jne	SHORT $LN2@ssl_cipher
	mov	ecx, DWORD PTR _disabled_enc$[ebp]
	test	DWORD PTR [eax+20], ecx
	jne	SHORT $LN2@ssl_cipher
	mov	ecx, DWORD PTR _disabled_mac$[ebp]
	test	DWORD PTR [eax+24], ecx
	jne	SHORT $LN2@ssl_cipher
	mov	ecx, DWORD PTR _disabled_ssl$[ebp]
	test	DWORD PTR [eax+28], ecx
	jne	SHORT $LN2@ssl_cipher
; Line 855
	mov	DWORD PTR [esi-16], eax
; Line 859
	inc	ebx
	mov	DWORD PTR [esi-4], 0
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi-12], 0
	add	esi, 20					; 00000014H
$LN2@ssl_cipher:
; Line 843
	inc	edi
	cmp	edi, DWORD PTR _num_of_ciphers$[ebp]
	jl	SHORT $LL4@ssl_cipher
; Line 873
	test	ebx, ebx
	jle	$LN9@ssl_cipher
; Line 874
	mov	eax, DWORD PTR tv1500[esp+32]
; Line 877
	mov	esi, DWORD PTR _co_list$[ebp]
	mov	DWORD PTR [eax], 0
	cmp	ebx, 1
	jle	$LN10@ssl_cipher
	lea	eax, DWORD PTR [esi+20]
; Line 879
	mov	edi, 1
	lea	edx, DWORD PTR [ebx-1]
	mov	DWORD PTR [esi+12], eax
	lea	eax, DWORD PTR [edx-1]
	cmp	edx, edi
	jle	$LN6@ssl_cipher
	cmp	eax, 8
	jb	$LN17@ssl_cipher
; Line 881
	cmp	DWORD PTR ___isa_available, 2
	jl	$LN17@ssl_cipher
	movaps	xmm3, XMMWORD PTR __xmm@00000003000000020000000100000000
	and	eax, -2147483641			; 80000007H
	jns	SHORT $LN26@ssl_cipher
	dec	eax
	or	eax, -8					; fffffff8H
	inc	eax
$LN26@ssl_cipher:
	movaps	xmm2, XMMWORD PTR __xmm@00000014000000140000001400000014
	mov	ecx, edx
	movaps	xmm4, XMMWORD PTR tv1504[esp+32]
	sub	ecx, eax
	mov	DWORD PTR tv1491[esp+32], ecx
	lea	ecx, DWORD PTR [esi+56]
	mov	esi, DWORD PTR tv1491[esp+32]
	npad	7
$LL7@ssl_cipher:
	movd	xmm0, edi
	lea	eax, DWORD PTR [edi+4]
	pshufd	xmm1, xmm0, 0
; Line 879
	lea	ecx, DWORD PTR [ecx+160]
	paddd	xmm1, xmm3
	add	edi, 8
; Line 880
	pmulld	xmm1, xmm2
	paddd	xmm1, xmm4
	movaps	xmm0, xmm1
; Line 881
	paddd	xmm1, xmm2
	movd	DWORD PTR [ecx-184], xmm1
	psubd	xmm0, xmm2
	movd	DWORD PTR [ecx-180], xmm0
	psrldq	xmm0, 4
	psrldq	xmm1, 4
	movd	DWORD PTR [ecx-160], xmm0
	movd	DWORD PTR [ecx-164], xmm1
	psrldq	xmm0, 4
	psrldq	xmm1, 4
	movd	DWORD PTR [ecx-140], xmm0
	movd	DWORD PTR [ecx-144], xmm1
	psrldq	xmm0, 4
	psrldq	xmm1, 4
	movd	DWORD PTR [ecx-120], xmm0
	movd	DWORD PTR [ecx-124], xmm1
	movd	xmm0, eax
	pshufd	xmm1, xmm0, 0
	paddd	xmm1, xmm3
	pmulld	xmm1, xmm2
	paddd	xmm1, xmm4
	movaps	xmm0, xmm1
	paddd	xmm1, xmm2
	movd	DWORD PTR [ecx-104], xmm1
	psubd	xmm0, xmm2
	movd	DWORD PTR [ecx-100], xmm0
	psrldq	xmm0, 4
	psrldq	xmm1, 4
	movd	DWORD PTR [ecx-80], xmm0
	movd	DWORD PTR [ecx-84], xmm1
	psrldq	xmm0, 4
	psrldq	xmm1, 4
	movd	DWORD PTR [ecx-60], xmm0
	movd	DWORD PTR [ecx-64], xmm1
	psrldq	xmm0, 4
	psrldq	xmm1, 4
	movd	DWORD PTR [ecx-40], xmm0
	movd	DWORD PTR [ecx-44], xmm1
	cmp	edi, esi
	jl	$LL7@ssl_cipher
	mov	esi, DWORD PTR _co_list$[ebp]
$LN17@ssl_cipher:
; Line 879
	cmp	edi, edx
	jge	SHORT $LN6@ssl_cipher
	lea	ecx, DWORD PTR [edi+1]
	sub	edx, edi
	lea	ecx, DWORD PTR [edi+ecx*4]
	lea	ecx, DWORD PTR [esi+ecx*4]
$LL16@ssl_cipher:
; Line 880
	lea	eax, DWORD PTR [ecx-36]
	mov	DWORD PTR [ecx], eax
; Line 881
	lea	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx-4], eax
	lea	ecx, DWORD PTR [ecx+20]
	sub	edx, 1
	jne	SHORT $LL16@ssl_cipher
$LN6@ssl_cipher:
; Line 884
	lea	eax, DWORD PTR [ebx-2]
	lea	eax, DWORD PTR [eax+eax*4]
	lea	ecx, DWORD PTR [esi+eax*4]
	lea	eax, DWORD PTR [ebx+ebx*4]
	mov	DWORD PTR [esi+eax*4-4], ecx
$LN10@ssl_cipher:
; Line 887
	lea	eax, DWORD PTR [ebx+ebx*4]
	lea	ecx, DWORD PTR [esi+eax*4]
; Line 889
	mov	eax, DWORD PTR _head_p$[ebp]
	mov	DWORD PTR [ecx-8], 0
; Line 890
	add	ecx, -20				; ffffffecH
	mov	DWORD PTR [eax], esi
	mov	eax, DWORD PTR _tail_p$[ebp]
	mov	DWORD PTR [eax], ecx
$LN9@ssl_cipher:
; Line 892
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ssl_cipher_collect_ciphers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_get_disabled
_TEXT	SEGMENT
_mkey$ = 8						; size = 4
_auth$ = 12						; size = 4
_enc$ = 16						; size = 4
_mac$ = 20						; size = 4
_ssl$ = 24						; size = 4
_ssl_cipher_get_disabled PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 734
	mov	eax, DWORD PTR _ssl$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR _mac$[esp]
	push	ebp
	mov	ebp, DWORD PTR _enc$[esp+4]
	push	esi
	mov	esi, DWORD PTR _auth$[esp+8]
	push	edi
	mov	edi, DWORD PTR _mkey$[esp+12]
; Line 769
	push	OFFSET ??_C@_06BPJPGPFJ@gost94?$AA@
	mov	DWORD PTR [edi], 0
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [ebp], 0
	mov	DWORD PTR [ebx], 0
	mov	DWORD PTR [eax], 0
	or	DWORD PTR [edi], 16			; 00000010H
	or	DWORD PTR [esi], 32			; 00000020H
	call	_get_optional_pkey_id
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@ssl_cipher
; Line 770
	or	DWORD PTR [esi], 256			; 00000100H
$LN2@ssl_cipher:
; Line 772
	push	OFFSET ??_C@_08KMPAMBCP@gost2001?$AA@
	call	_get_optional_pkey_id
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@ssl_cipher
; Line 773
	or	DWORD PTR [esi], 512			; 00000200H
$LN3@ssl_cipher:
; Line 778
	mov	eax, DWORD PTR [esi]
	and	eax, 768				; 00000300H
	cmp	eax, 768				; 00000300H
	jne	SHORT $LN4@ssl_cipher
; Line 779
	or	DWORD PTR [edi], 512			; 00000200H
$LN4@ssl_cipher:
; Line 795
	xor	ecx, ecx
	mov	eax, 8192				; 00002000H
	cmp	DWORD PTR _ssl_cipher_methods+52, ecx
	mov	edx, 4096				; 00001000H
	mov	edi, 16					; 00000010H
	mov	esi, 2
	cmove	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+48, eax
	cmove	eax, edx
; Line 807
	mov	edx, 2048				; 00000800H
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+44, eax
	cmove	eax, edx
	mov	edx, 1024				; 00000400H
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+40, eax
	cmove	eax, edx
	mov	edx, 512				; 00000200H
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+36, eax
	cmove	eax, edx
	mov	edx, 256				; 00000100H
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+32, eax
	cmove	eax, edx
	mov	edx, 128				; 00000080H
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+28, eax
	cmove	eax, edx
	mov	edx, 64					; 00000040H
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+24, eax
	cmove	eax, edx
	mov	edx, 8
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+16, eax
	cmove	eax, edi
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+12, eax
	cmove	eax, edx
	mov	edx, 4
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+8, eax
	cmove	eax, edx
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods+4, eax
	cmove	eax, esi
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_cipher_methods, eax
	sete	al
	or	ecx, eax
	or	DWORD PTR [ebp], ecx
; Line 813
	xor	ecx, ecx
	cmp	DWORD PTR _ssl_digest_methods+8, ecx
	cmove	ecx, edx
	xor	eax, eax
	cmp	DWORD PTR _ssl_digest_methods+20, eax
	mov	edx, 32					; 00000020H
	cmove	eax, edx
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_digest_methods+16, eax
	cmove	eax, edi
	or	ecx, eax
	xor	eax, eax
	cmp	DWORD PTR _ssl_digest_methods+4, eax
	cmove	eax, esi
	or	ecx, eax
	xor	eax, eax
; Line 809
	cmp	DWORD PTR _ssl_digest_methods, eax
	sete	al
; Line 813
	or	ecx, eax
	or	DWORD PTR [ebx], ecx
; Line 814
	cmp	DWORD PTR _ssl_digest_methods+12, 0
	je	SHORT $LN6@ssl_cipher
	cmp	DWORD PTR _ssl_mac_pkey_id+12, 0
	je	SHORT $LN6@ssl_cipher
	pop	edi
	pop	esi
	xor	ecx, ecx
	or	DWORD PTR [ebx], ecx
	pop	ebp
	pop	ebx
; Line 818
	ret	0
$LN6@ssl_cipher:
	pop	edi
	pop	esi
; Line 814
	mov	ecx, 8
	or	DWORD PTR [ebx], ecx
	pop	ebp
	pop	ebx
; Line 818
	ret	0
_ssl_cipher_get_disabled ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ll_append_head
_TEXT	SEGMENT
_head$ = 8						; size = 4
_curr$ = 12						; size = 4
_tail$ = 16						; size = 4
_ll_append_head PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 712
	mov	edx, DWORD PTR _head$[esp-4]
	mov	ecx, DWORD PTR _curr$[esp-4]
	cmp	ecx, DWORD PTR [edx]
	je	SHORT $LN1@ll_append_
; Line 714
	push	esi
	mov	esi, DWORD PTR _tail$[esp]
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN3@ll_append_
; Line 715
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [esi], eax
$LN3@ll_append_:
; Line 716
	mov	esi, DWORD PTR [ecx+12]
	test	esi, esi
	je	SHORT $LN4@ll_append_
; Line 717
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [esi+16], eax
$LN4@ll_append_:
; Line 718
	mov	esi, DWORD PTR [ecx+16]
	test	esi, esi
	je	SHORT $LN5@ll_append_
; Line 719
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [esi+12], eax
$LN5@ll_append_:
; Line 720
	mov	eax, DWORD PTR [edx]
	pop	esi
	mov	DWORD PTR [eax+16], ecx
; Line 721
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+12], eax
; Line 722
	mov	DWORD PTR [ecx+16], 0
; Line 723
	mov	DWORD PTR [edx], ecx
$LN1@ll_append_:
; Line 724
	ret	0
_ll_append_head ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ll_append_tail
_TEXT	SEGMENT
_head$ = 8						; size = 4
_curr$ = 12						; size = 4
_tail$ = 16						; size = 4
_ll_append_tail PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 695
	mov	edx, DWORD PTR _tail$[esp-4]
	mov	ecx, DWORD PTR _curr$[esp-4]
	cmp	ecx, DWORD PTR [edx]
	je	SHORT $LN1@ll_append_
; Line 697
	push	esi
	mov	esi, DWORD PTR _head$[esp]
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN3@ll_append_
; Line 698
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [esi], eax
$LN3@ll_append_:
; Line 699
	mov	esi, DWORD PTR [ecx+16]
	test	esi, esi
	je	SHORT $LN4@ll_append_
; Line 700
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [esi+12], eax
$LN4@ll_append_:
; Line 701
	mov	esi, DWORD PTR [ecx+12]
	test	esi, esi
	je	SHORT $LN5@ll_append_
; Line 702
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [esi+16], eax
$LN5@ll_append_:
; Line 703
	mov	eax, DWORD PTR [edx]
	pop	esi
	mov	DWORD PTR [eax+12], ecx
; Line 704
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+16], eax
; Line 705
	mov	DWORD PTR [ecx+12], 0
; Line 706
	mov	DWORD PTR [edx], ecx
$LN1@ll_append_:
; Line 707
	ret	0
_ll_append_tail ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_builtin_compressions
_TEXT	SEGMENT
_load_builtin_compressions PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 475
	push	475					; 000001dbH
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	16					; 00000010H
	push	5
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 476
	cmp	DWORD PTR _ssl_comp_methods, 0
	jne	$LN8@load_built
; Line 477
	push	477					; 000001ddH
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	16					; 00000010H
	push	6
	call	_CRYPTO_lock
; Line 478
	push	478					; 000001deH
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	16					; 00000010H
	push	9
	call	_CRYPTO_lock
	add	esp, 32					; 00000020H
; Line 481
	cmp	DWORD PTR _ssl_comp_methods, 0
	jne	$LN11@load_built
; Line 484
	push	3
	call	_CRYPTO_mem_ctrl
; Line 485
	push	OFFSET _sk_comp_cmp
	call	_sk_new
	add	esp, 8
	mov	DWORD PTR _ssl_comp_methods, eax
; Line 486
	test	eax, eax
	je	SHORT $LN4@load_built
; Line 487
	push	esi
	push	487					; 000001e7H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	12					; 0000000cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 488
	test	esi, esi
	je	SHORT $LN7@load_built
; Line 489
	call	_COMP_zlib
	mov	DWORD PTR [esi+8], eax
; Line 490
	test	eax, eax
	je	SHORT $LN6@load_built
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN6@load_built
; Line 491
	push	esi
	call	_CRYPTO_free
	add	esp, 4
	jmp	SHORT $LN7@load_built
$LN6@load_built:
; Line 495
	push	esi
	push	DWORD PTR _ssl_comp_methods
	mov	DWORD PTR [esi], 1
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], eax
	call	_sk_push
	add	esp, 8
$LN7@load_built:
; Line 498
	push	DWORD PTR _ssl_comp_methods
	call	_sk_sort
	add	esp, 4
	pop	esi
$LN4@load_built:
; Line 500
	push	2
	call	_CRYPTO_mem_ctrl
	add	esp, 4
$LN11@load_built:
; Line 505
	push	505					; 000001f9H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	16					; 00000010H
	push	10					; 0000000aH
; Line 507
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 508
	ret	0
$LN8@load_built:
; Line 507
	push	507					; 000001fbH
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	16					; 00000010H
	push	6
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 508
	ret	0
_load_builtin_compressions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sk_comp_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_sk_comp_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 468
	mov	eax, DWORD PTR _a$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _b$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx]
	sub	eax, DWORD PTR [ecx]
; Line 469
	ret	0
_sk_comp_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_optional_pkey_id
_TEXT	SEGMENT
_pkey_id$ = -8						; size = 4
_tmpeng$ = -4						; size = 4
_pkey_name$ = 8						; size = 4
_get_optional_pkey_id PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 388
	mov	eax, 8
	call	__chkstk
; Line 392
	push	-1
	push	DWORD PTR _pkey_name$[esp+8]
	lea	eax, DWORD PTR _tmpeng$[esp+16]
	mov	DWORD PTR _tmpeng$[esp+16], 0
	push	eax
	mov	DWORD PTR _pkey_id$[esp+20], 0
	call	_EVP_PKEY_asn1_find_str
	add	esp, 12					; 0000000cH
; Line 393
	test	eax, eax
	je	SHORT $LN7@get_option
; Line 395
	push	eax
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _pkey_id$[esp+24]
	push	0
	push	eax
	call	_EVP_PKEY_asn1_get0_info
	mov	ecx, DWORD PTR _pkey_id$[esp+32]
	xor	edx, edx
	add	esp, 24					; 00000018H
	test	eax, eax
	cmovle	ecx, edx
	mov	DWORD PTR _pkey_id$[esp+8], ecx
	jmp	SHORT $LN3@get_option
$LN7@get_option:
	mov	ecx, DWORD PTR _pkey_id$[esp+8]
$LN3@get_option:
; Line 398
	mov	eax, DWORD PTR _tmpeng$[esp+8]
	test	eax, eax
	je	SHORT $LN6@get_option
; Line 399
	push	eax
	call	_ENGINE_finish
; Line 400
	mov	eax, DWORD PTR _pkey_id$[esp+12]
	add	esp, 4
; Line 401
	add	esp, 8
	ret	0
$LN6@get_option:
; Line 400
	mov	eax, ecx
; Line 401
	add	esp, 8
	ret	0
_get_optional_pkey_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_comp_find
_TEXT	SEGMENT
_sk$ = 8						; size = 4
_n$ = 12						; size = 4
_ssl3_comp_find PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1919
	push	ebx
; Line 1923
	mov	ebx, DWORD PTR _n$[esp]
	push	edi
	test	ebx, ebx
	je	SHORT $LN6@ssl3_comp_
	mov	edi, DWORD PTR _sk$[esp+4]
	test	edi, edi
	je	SHORT $LN6@ssl3_comp_
; Line 1925
	push	ebp
	push	esi
	push	edi
	call	_sk_num
	mov	ebp, eax
	add	esp, 4
; Line 1926
	xor	esi, esi
	test	ebp, ebp
	jle	SHORT $LN3@ssl3_comp_
$LL4@ssl3_comp_:
; Line 1927
	push	esi
	push	edi
	call	_sk_value
	add	esp, 8
; Line 1928
	cmp	DWORD PTR [eax], ebx
	je	SHORT $LN14@ssl3_comp_
; Line 1926
	inc	esi
	cmp	esi, ebp
	jl	SHORT $LL4@ssl3_comp_
$LN3@ssl3_comp_:
; Line 1931
	xor	eax, eax
$LN14@ssl3_comp_:
	pop	esi
	pop	ebp
	pop	edi
	pop	ebx
; Line 1932
	ret	0
$LN6@ssl3_comp_:
	pop	edi
; Line 1924
	xor	eax, eax
	pop	ebx
; Line 1932
	ret	0
_ssl3_comp_find ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_load_ciphers
_TEXT	SEGMENT
_ssl_load_ciphers PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 407
	push	OFFSET ??_C@_07LDJJJFAI@DES?9CBC?$AA@
	call	_EVP_get_cipherbyname
; Line 408
	push	OFFSET ??_C@_0N@MLDFENGJ@DES?9EDE3?9CBC?$AA@
	mov	DWORD PTR _ssl_cipher_methods, eax
	call	_EVP_get_cipherbyname
; Line 410
	push	OFFSET ??_C@_03HGEJCHKE@RC4?$AA@
	mov	DWORD PTR _ssl_cipher_methods+4, eax
	call	_EVP_get_cipherbyname
; Line 411
	push	OFFSET ??_C@_07KJDFEEGB@RC2?9CBC?$AA@
	mov	DWORD PTR _ssl_cipher_methods+8, eax
	call	_EVP_get_cipherbyname
; Line 413
	push	OFFSET ??_C@_08MJNEIAD@IDEA?9CBC?$AA@
	mov	DWORD PTR _ssl_cipher_methods+12, eax
	call	_EVP_get_cipherbyname
; Line 417
	push	OFFSET ??_C@_0M@CPGGBEEL@AES?9128?9CBC?$AA@
	mov	DWORD PTR _ssl_cipher_methods+16, eax
	call	_EVP_get_cipherbyname
; Line 419
	push	OFFSET ??_C@_0M@FOEEEMFG@AES?9256?9CBC?$AA@
	mov	DWORD PTR _ssl_cipher_methods+24, eax
	call	_EVP_get_cipherbyname
; Line 421
	push	OFFSET ??_C@_0BB@HAKAAAMD@CAMELLIA?9128?9CBC?$AA@
	mov	DWORD PTR _ssl_cipher_methods+28, eax
	call	_EVP_get_cipherbyname
; Line 423
	push	OFFSET ??_C@_0BB@BICFINO@CAMELLIA?9256?9CBC?$AA@
	mov	DWORD PTR _ssl_cipher_methods+32, eax
	call	_EVP_get_cipherbyname
; Line 425
	push	OFFSET ??_C@_0L@INGOKGPP@gost89?9cnt?$AA@
	mov	DWORD PTR _ssl_cipher_methods+36, eax
	call	_EVP_get_cipherbyname
; Line 427
	push	OFFSET ??_C@_08KJBEBBMB@SEED?9CBC?$AA@
	mov	DWORD PTR _ssl_cipher_methods+40, eax
	call	_EVP_get_cipherbyname
; Line 429
	push	OFFSET ??_C@_0O@LNIKAOOL@id?9aes128?9GCM?$AA@
	mov	DWORD PTR _ssl_cipher_methods+44, eax
	call	_EVP_get_cipherbyname
; Line 431
	push	OFFSET ??_C@_0O@MMKIFGPG@id?9aes256?9GCM?$AA@
	mov	DWORD PTR _ssl_cipher_methods+48, eax
	call	_EVP_get_cipherbyname
; Line 434
	push	OFFSET ??_C@_03GCGHEHKJ@MD5?$AA@
	mov	DWORD PTR _ssl_cipher_methods+52, eax
	call	_EVP_get_digestbyname
; Line 435
	push	eax
	mov	DWORD PTR _ssl_digest_methods, eax
	call	_EVP_MD_size
	add	esp, 60					; 0000003cH
	mov	DWORD PTR _ssl_mac_secret_size, eax
; Line 437
	test	eax, eax
	jns	SHORT $LN6@ssl_load_c
	push	OFFSET ??_C@_0CJ@EKPJCJCG@ssl_mac_secret_size?$FLSSL_MD_MD5_I@
	push	437					; 000001b5H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN6@ssl_load_c:
; Line 438
	push	OFFSET ??_C@_04KPMLCNGO@SHA1?$AA@
	call	_EVP_get_digestbyname
; Line 439
	push	eax
	mov	DWORD PTR _ssl_digest_methods+4, eax
	call	_EVP_MD_size
	add	esp, 8
	mov	DWORD PTR _ssl_mac_secret_size+4, eax
; Line 441
	test	eax, eax
	jns	SHORT $LN8@ssl_load_c
	push	OFFSET ??_C@_0CK@MJPEELOP@ssl_mac_secret_size?$FLSSL_MD_SHA1_@
	push	441					; 000001b9H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN8@ssl_load_c:
; Line 442
	push	OFFSET ??_C@_09MIOJGGFD@md_gost94?$AA@
	call	_EVP_get_digestbyname
	add	esp, 4
	mov	DWORD PTR _ssl_digest_methods+8, eax
; Line 444
	test	eax, eax
	je	SHORT $LN10@ssl_load_c
; Line 445
	push	eax
	call	_EVP_MD_size
	add	esp, 4
	mov	DWORD PTR _ssl_mac_secret_size+8, eax
; Line 447
	test	eax, eax
	jns	SHORT $LN10@ssl_load_c
	push	OFFSET ??_C@_0CM@KEOLKDEN@ssl_mac_secret_size?$FLSSL_MD_GOST9@
	push	447					; 000001bfH
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN10@ssl_load_c:
; Line 449
	push	OFFSET ??_C@_08JCNEGNFC@gost?9mac?$AA@
	call	_EVP_get_digestbyname
; Line 451
	push	OFFSET ??_C@_08JCNEGNFC@gost?9mac?$AA@
	mov	DWORD PTR _ssl_digest_methods+12, eax
	call	_get_optional_pkey_id
; Line 452
	mov	ecx, DWORD PTR _ssl_mac_secret_size+12
	test	eax, eax
	mov	edx, 32					; 00000020H
	mov	DWORD PTR _ssl_mac_pkey_id+12, eax
	cmovne	ecx, edx
; Line 456
	push	OFFSET ??_C@_06HKIKMHH@SHA256?$AA@
	mov	DWORD PTR _ssl_mac_secret_size+12, ecx
	call	_EVP_get_digestbyname
; Line 457
	push	eax
	mov	DWORD PTR _ssl_digest_methods+16, eax
	call	_EVP_MD_size
; Line 459
	push	OFFSET ??_C@_06IFPKDKMD@SHA384?$AA@
	mov	DWORD PTR _ssl_mac_secret_size+16, eax
	call	_EVP_get_digestbyname
; Line 460
	push	eax
	mov	DWORD PTR _ssl_digest_methods+20, eax
	call	_EVP_MD_size
	add	esp, 24					; 00000018H
	mov	DWORD PTR _ssl_mac_secret_size+20, eax
; Line 462
	ret	0
_ssl_load_ciphers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_get_cipher_by_char
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_ptr$ = 12						; size = 4
_ssl_get_cipher_by_char PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 2068
	mov	eax, DWORD PTR _ssl$[esp-4]
	push	DWORD PTR _ptr$[esp-4]
	mov	eax, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+72]
	call	eax
	add	esp, 4
; Line 2069
	test	eax, eax
	je	SHORT $LN3@ssl_get_ci
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@ssl_get_ci
$LN3@ssl_get_ci:
; Line 2070
	xor	eax, eax
$LN1@ssl_get_ci:
; Line 2072
	ret	0
_ssl_get_cipher_by_char ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_get_cert_index
_TEXT	SEGMENT
_c$ = 8							; size = 4
_ssl_cipher_get_cert_index PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 2032
	mov	eax, DWORD PTR _c$[esp-4]
	mov	ecx, DWORD PTR [eax+12]
; Line 2033
	mov	eax, DWORD PTR [eax+16]
; Line 2035
	test	cl, 96					; 00000060H
	je	SHORT $LN2@ssl_cipher
$LN20@ssl_cipher:
; Line 2044
	mov	eax, 5
; Line 2063
	ret	0
$LN2@ssl_cipher:
; Line 2045
	test	al, 64					; 00000040H
	jne	SHORT $LN20@ssl_cipher
; Line 2047
	test	cl, 2
	je	SHORT $LN6@ssl_cipher
; Line 2048
	mov	eax, 3
; Line 2063
	ret	0
$LN6@ssl_cipher:
; Line 2049
	test	cl, 4
	je	SHORT $LN8@ssl_cipher
; Line 2050
	mov	eax, 4
; Line 2063
	ret	0
$LN8@ssl_cipher:
; Line 2051
	test	al, 2
	je	SHORT $LN10@ssl_cipher
; Line 2052
	mov	eax, 2
; Line 2063
	ret	0
$LN10@ssl_cipher:
; Line 2053
	test	al, 1
	je	SHORT $LN12@ssl_cipher
; Line 2054
	xor	eax, eax
; Line 2063
	ret	0
$LN12@ssl_cipher:
; Line 2055
	test	al, 32					; 00000020H
	je	SHORT $LN14@ssl_cipher
; Line 2057
	or	eax, -1
; Line 2063
	ret	0
$LN14@ssl_cipher:
; Line 2058
	test	eax, 256				; 00000100H
	je	SHORT $LN16@ssl_cipher
; Line 2059
	mov	eax, 6
; Line 2063
	ret	0
$LN16@ssl_cipher:
; Line 2060
	and	eax, 512				; 00000200H
	neg	eax
	sbb	eax, eax
	and	eax, 8
	dec	eax
; Line 2063
	ret	0
_ssl_cipher_get_cert_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_get_handshake_digest
_TEXT	SEGMENT
_idx$ = 8						; size = 4
_mask$ = 12						; size = 4
_md$ = 16						; size = 4
_ssl_get_handshake_digest PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 678
	mov	edx, DWORD PTR _idx$[esp-4]
	cmp	edx, 5
	ja	SHORT $LN3@ssl_get_ha
; Line 681
	mov	eax, DWORD PTR _mask$[esp-4]
	mov	ecx, DWORD PTR _ssl_handshake_digest_flag[edx*4]
	mov	DWORD PTR [eax], ecx
; Line 683
	mov	eax, DWORD PTR _md$[esp-4]
	test	ecx, ecx
	je	SHORT $LN4@ssl_get_ha
	mov	ecx, DWORD PTR _ssl_digest_methods[edx*4]
	mov	DWORD PTR [eax], ecx
; Line 686
	mov	eax, 1
; Line 687
	ret	0
$LN4@ssl_get_ha:
; Line 685
	mov	DWORD PTR [eax], 0
; Line 686
	mov	eax, 1
; Line 687
	ret	0
$LN3@ssl_get_ha:
; Line 679
	xor	eax, eax
; Line 687
	ret	0
_ssl_get_handshake_digest ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cipher_get_evp
_TEXT	SEGMENT
_ctmp$1 = -12						; size = 12
_s$ = 8							; size = 4
_enc$ = 12						; size = 4
_md$ = 16						; size = 4
_mac_pkey_type$ = 20					; size = 4
_mac_secret_size$ = 24					; size = 4
_comp$ = 28						; size = 4
_ssl_cipher_get_evp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 514
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
; Line 518
	mov	ebx, DWORD PTR _s$[esp+12]
	push	esi
	mov	esi, DWORD PTR [ebx+180]
; Line 519
	test	esi, esi
	jne	SHORT $LN6@ssl_cipher
; Line 520
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 674
	add	esp, 12					; 0000000cH
	ret	0
$LN6@ssl_cipher:
	push	edi
; Line 521
	mov	edi, DWORD PTR _comp$[esp+20]
	test	edi, edi
	je	SHORT $LN10@ssl_cipher
; Line 524
	call	_load_builtin_compressions
; Line 527
	mov	DWORD PTR [edi], 0
; Line 528
	mov	eax, DWORD PTR [ebx+176]
	mov	DWORD PTR _ctmp$1[esp+24], eax
; Line 529
	mov	eax, DWORD PTR _ssl_comp_methods
	test	eax, eax
	je	SHORT $LN10@ssl_cipher
; Line 530
	lea	ecx, DWORD PTR _ctmp$1[esp+24]
	push	ecx
	push	eax
	call	_sk_find
	add	esp, 8
; Line 531
	test	eax, eax
	js	SHORT $LN9@ssl_cipher
; Line 532
	push	eax
	push	DWORD PTR _ssl_comp_methods
	call	_sk_value
	add	esp, 8
	mov	DWORD PTR [edi], eax
	jmp	SHORT $LN10@ssl_cipher
$LN9@ssl_cipher:
; Line 534
	mov	DWORD PTR [edi], 0
$LN10@ssl_cipher:
; Line 538
	mov	edi, DWORD PTR _enc$[esp+20]
	push	ebp
	test	edi, edi
	je	$LN12@ssl_cipher
	mov	ebp, DWORD PTR _md$[esp+24]
	test	ebp, ebp
	je	$LN12@ssl_cipher
; Line 541
	mov	eax, DWORD PTR [esi+20]
	cmp	eax, 128				; 00000080H
	ja	SHORT $LN64@ssl_cipher
	je	SHORT $LN20@ssl_cipher
	dec	eax
	cmp	eax, 63					; 0000003fH
	ja	$LN30@ssl_cipher
	movzx	eax, BYTE PTR $LN71@ssl_cipher[eax]
	jmp	DWORD PTR $LN78@ssl_cipher[eax*4]
$LN13@ssl_cipher:
; Line 543
	xor	eax, eax
; Line 544
	jmp	$LN31@ssl_cipher
$LN14@ssl_cipher:
; Line 546
	mov	eax, 1
; Line 547
	jmp	$LN31@ssl_cipher
$LN15@ssl_cipher:
; Line 549
	mov	eax, 2
; Line 550
	jmp	SHORT $LN31@ssl_cipher
$LN16@ssl_cipher:
; Line 552
	mov	eax, 3
; Line 553
	jmp	SHORT $LN31@ssl_cipher
$LN17@ssl_cipher:
; Line 555
	mov	eax, 4
; Line 556
	jmp	SHORT $LN31@ssl_cipher
$LN19@ssl_cipher:
; Line 561
	mov	eax, 6
; Line 562
	jmp	SHORT $LN31@ssl_cipher
$LN68@ssl_cipher:
; Line 593
	call	_EVP_enc_null
	jmp	SHORT $LN75@ssl_cipher
$LN20@ssl_cipher:
; Line 564
	mov	eax, 7
; Line 565
	jmp	SHORT $LN31@ssl_cipher
$LN64@ssl_cipher:
; Line 541
	cmp	eax, 2048				; 00000800H
	ja	SHORT $LN65@ssl_cipher
	je	SHORT $LN24@ssl_cipher
	cmp	eax, 256				; 00000100H
	je	SHORT $LN21@ssl_cipher
	cmp	eax, 512				; 00000200H
	je	SHORT $LN22@ssl_cipher
	cmp	eax, 1024				; 00000400H
	jne	SHORT $LN30@ssl_cipher
; Line 573
	mov	eax, 10					; 0000000aH
; Line 574
	jmp	SHORT $LN31@ssl_cipher
$LN22@ssl_cipher:
; Line 570
	mov	eax, 9
; Line 571
	jmp	SHORT $LN31@ssl_cipher
$LN21@ssl_cipher:
; Line 567
	mov	eax, 8
; Line 568
	jmp	SHORT $LN31@ssl_cipher
$LN24@ssl_cipher:
; Line 576
	mov	eax, 11					; 0000000bH
; Line 577
	jmp	SHORT $LN31@ssl_cipher
$LN65@ssl_cipher:
; Line 541
	cmp	eax, 4096				; 00001000H
	je	SHORT $LN25@ssl_cipher
	cmp	eax, 8192				; 00002000H
	jne	SHORT $LN30@ssl_cipher
; Line 582
	mov	eax, 13					; 0000000dH
; Line 583
	jmp	SHORT $LN31@ssl_cipher
$LN30@ssl_cipher:
; Line 590
	mov	DWORD PTR [edi], 0
	jmp	SHORT $LN32@ssl_cipher
$LN25@ssl_cipher:
; Line 579
	mov	eax, 12					; 0000000cH
$LN31@ssl_cipher:
; Line 595
	mov	eax, DWORD PTR _ssl_cipher_methods[eax*4]
$LN75@ssl_cipher:
	mov	DWORD PTR [edi], eax
$LN32@ssl_cipher:
; Line 598
	mov	eax, DWORD PTR [esi+24]
	dec	eax
	cmp	eax, 31					; 0000001fH
	ja	SHORT $LN42@ssl_cipher
	movzx	eax, BYTE PTR $LN72@ssl_cipher[eax]
	jmp	DWORD PTR $LN79@ssl_cipher[eax*4]
$LN33@ssl_cipher:
; Line 600
	xor	ecx, ecx
; Line 601
	jmp	SHORT $LN70@ssl_cipher
$LN34@ssl_cipher:
; Line 603
	mov	ecx, 1
; Line 604
	jmp	SHORT $LN70@ssl_cipher
$LN35@ssl_cipher:
; Line 606
	mov	ecx, 4
; Line 607
	jmp	SHORT $LN70@ssl_cipher
$LN36@ssl_cipher:
; Line 609
	mov	ecx, 5
; Line 610
	jmp	SHORT $LN70@ssl_cipher
$LN37@ssl_cipher:
; Line 612
	mov	ecx, 2
; Line 613
	jmp	SHORT $LN70@ssl_cipher
$LN38@ssl_cipher:
; Line 615
	mov	ecx, 3
$LN70@ssl_cipher:
; Line 631
	mov	ebx, DWORD PTR _mac_pkey_type$[esp+24]
	mov	eax, DWORD PTR _ssl_digest_methods[ecx*4]
	mov	DWORD PTR [ebp], eax
	test	ebx, ebx
	je	SHORT $LN46@ssl_cipher
; Line 632
	mov	eax, DWORD PTR _ssl_mac_pkey_id[ecx*4]
	mov	DWORD PTR [ebx], eax
$LN46@ssl_cipher:
; Line 633
	mov	edx, DWORD PTR _mac_secret_size$[esp+24]
	test	edx, edx
	je	SHORT $LN45@ssl_cipher
; Line 634
	mov	eax, DWORD PTR _ssl_mac_secret_size[ecx*4]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN45@ssl_cipher
$LN42@ssl_cipher:
; Line 623
	mov	ebx, DWORD PTR _mac_pkey_type$[esp+24]
	mov	DWORD PTR [ebp], 0
	test	ebx, ebx
	je	SHORT $LN43@ssl_cipher
; Line 624
	mov	DWORD PTR [ebx], 0
$LN43@ssl_cipher:
; Line 625
	mov	eax, DWORD PTR _mac_secret_size$[esp+24]
	test	eax, eax
	je	SHORT $LN44@ssl_cipher
; Line 626
	mov	DWORD PTR [eax], 0
$LN44@ssl_cipher:
; Line 627
	xor	eax, eax
	cmp	DWORD PTR [esi+24], 64			; 00000040H
	cmove	ebx, eax
$LN45@ssl_cipher:
; Line 639
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	$LN12@ssl_cipher
	cmp	DWORD PTR [ebp], 0
	jne	SHORT $LN50@ssl_cipher
	push	eax
	call	_EVP_CIPHER_flags
	add	esp, 4
	test	eax, 2097152				; 00200000H
	je	$LN12@ssl_cipher
$LN50@ssl_cipher:
	test	ebx, ebx
	je	SHORT $LN51@ssl_cipher
	cmp	DWORD PTR [ebx], 0
	je	$LN12@ssl_cipher
$LN51@ssl_cipher:
; Line 642
	mov	ecx, DWORD PTR _s$[esp+24]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, ecx
	and	eax, -256				; ffffff00H
	cmp	eax, 768				; 00000300H
	jne	$LN62@ssl_cipher
	cmp	ecx, 769				; 00000301H
	jl	$LN62@ssl_cipher
; Line 652
	cmp	DWORD PTR [esi+20], 4
	jne	SHORT $LN54@ssl_cipher
	cmp	DWORD PTR [esi+24], 1
	jne	SHORT $LN54@ssl_cipher
	push	OFFSET ??_C@_0N@MFFPBCGK@RC4?9HMAC?9MD5?$AA@
	call	_EVP_get_cipherbyname
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN76@ssl_cipher
$LN54@ssl_cipher:
; Line 656
	cmp	DWORD PTR [esi+20], 64			; 00000040H
	jne	SHORT $LN56@ssl_cipher
	cmp	DWORD PTR [esi+24], 2
	jne	SHORT $LN56@ssl_cipher
	push	OFFSET ??_C@_0BG@OKEPPAEE@AES?9128?9CBC?9HMAC?9SHA1?$AA@
	call	_EVP_get_cipherbyname
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN76@ssl_cipher
$LN56@ssl_cipher:
; Line 660
	cmp	DWORD PTR [esi+20], 128			; 00000080H
	jne	SHORT $LN58@ssl_cipher
	cmp	DWORD PTR [esi+24], 2
	jne	SHORT $LN58@ssl_cipher
	push	OFFSET ??_C@_0BG@NJKHMG@AES?9256?9CBC?9HMAC?9SHA1?$AA@
	call	_EVP_get_cipherbyname
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN76@ssl_cipher
$LN58@ssl_cipher:
; Line 664
	cmp	DWORD PTR [esi+20], 64			; 00000040H
	jne	SHORT $LN60@ssl_cipher
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jne	SHORT $LN60@ssl_cipher
	push	OFFSET ??_C@_0BI@JAKBILLC@AES?9128?9CBC?9HMAC?9SHA256?$AA@
	call	_EVP_get_cipherbyname
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN76@ssl_cipher
$LN60@ssl_cipher:
; Line 668
	cmp	DWORD PTR [esi+20], 128			; 00000080H
	jne	SHORT $LN62@ssl_cipher
	cmp	DWORD PTR [esi+24], 16			; 00000010H
	jne	SHORT $LN62@ssl_cipher
	push	OFFSET ??_C@_0BI@GMBLFPLK@AES?9256?9CBC?9HMAC?9SHA256?$AA@
	call	_EVP_get_cipherbyname
	add	esp, 4
	test	eax, eax
	je	SHORT $LN62@ssl_cipher
$LN76@ssl_cipher:
; Line 670
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [ebp], 0
$LN62@ssl_cipher:
; Line 671
	pop	ebp
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 674
	add	esp, 12					; 0000000cH
	ret	0
$LN12@ssl_cipher:
	pop	ebp
	pop	edi
	pop	esi
; Line 539
	xor	eax, eax
	pop	ebx
; Line 674
	add	esp, 12					; 0000000cH
	ret	0
	npad	1
$LN78@ssl_cipher:
	DD	$LN13@ssl_cipher
	DD	$LN14@ssl_cipher
	DD	$LN15@ssl_cipher
	DD	$LN16@ssl_cipher
	DD	$LN17@ssl_cipher
	DD	$LN68@ssl_cipher
	DD	$LN19@ssl_cipher
	DD	$LN30@ssl_cipher
$LN71@ssl_cipher:
	DB	0
	DB	1
	DB	7
	DB	2
	DB	7
	DB	7
	DB	7
	DB	3
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
$LN79@ssl_cipher:
	DD	$LN33@ssl_cipher
	DD	$LN34@ssl_cipher
	DD	$LN37@ssl_cipher
	DD	$LN38@ssl_cipher
	DD	$LN35@ssl_cipher
	DD	$LN36@ssl_cipher
	DD	$LN42@ssl_cipher
$LN72@ssl_cipher:
	DB	0
	DB	1
	DB	6
	DB	2
	DB	6
	DB	6
	DB	6
	DB	3
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	4
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	5
_ssl_cipher_get_evp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_create_cipher_list
_TEXT	SEGMENT
_head$1 = -36						; size = 4
_tail$2 = -36						; size = 4
_tail$3 = -36						; size = 4
_tail$4 = -36						; size = 4
_tail$5 = -36						; size = 4
_tail$6 = -36						; size = 4
_tail$7 = -36						; size = 4
_tail$8 = -36						; size = 4
_tail$9 = -36						; size = 4
_tail$10 = -36						; size = 4
_tail$11 = -36						; size = 4
_head$12 = -36						; size = 4
_head$ = -36						; size = 4
_tail$13 = -32						; size = 4
_head$14 = -32						; size = 4
_head$15 = -32						; size = 4
_head$16 = -32						; size = 4
_head$17 = -32						; size = 4
_head$18 = -32						; size = 4
_head$19 = -32						; size = 4
_head$20 = -32						; size = 4
_head$21 = -32						; size = 4
_head$22 = -32						; size = 4
_head$23 = -32						; size = 4
_tail$24 = -32						; size = 4
_tail$ = -32						; size = 4
_co_list$1$ = -28					; size = 4
_disabled_ssl$ = -24					; size = 4
_disabled_mac$ = -20					; size = 4
_disabled_enc$ = -16					; size = 4
_disabled_auth$ = -12					; size = 4
_disabled_mkey$ = -8					; size = 4
_num_of_ciphers$1$ = -4					; size = 4
_ssl_method$ = 8					; size = 4
_cipher_list$ = 12					; size = 4
_cipher_list_by_id$ = 16				; size = 4
tv308 = 20						; size = 4
_rule_str$ = 20						; size = 4
_c$ = 24						; size = 4
_ssl_create_cipher_list PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1471
	mov	eax, 36					; 00000024H
	call	__chkstk
; Line 1483
	cmp	DWORD PTR _rule_str$[esp+32], 0
	mov	DWORD PTR _head$[esp+36], 0
	mov	DWORD PTR _tail$[esp+36], 0
	je	$LN6@ssl_create
	cmp	DWORD PTR _cipher_list$[esp+32], 0
	je	$LN6@ssl_create
	cmp	DWORD PTR _cipher_list_by_id$[esp+32], 0
	je	$LN6@ssl_create
; Line 1486
	push	esi
	mov	esi, DWORD PTR _ssl_method$[esp+36]
	lea	eax, DWORD PTR _rule_str$[esp+36]
	push	eax
	push	DWORD PTR _c$[esp+40]
	push	esi
	call	_check_suiteb_cipher_list
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@ssl_create
	pop	esi
; Line 1668
	add	esp, 36					; 00000024H
	ret	0
$LN7@ssl_create:
	push	ebx
	push	ebp
; Line 1494
	lea	eax, DWORD PTR _disabled_ssl$[esp+48]
	push	eax
	lea	eax, DWORD PTR _disabled_mac$[esp+52]
	push	eax
	lea	eax, DWORD PTR _disabled_enc$[esp+56]
	push	eax
	lea	eax, DWORD PTR _disabled_auth$[esp+60]
	push	eax
	lea	eax, DWORD PTR _disabled_mkey$[esp+64]
	push	eax
	call	_ssl_cipher_get_disabled
; Line 1502
	mov	eax, DWORD PTR [esi+84]
	call	eax
	mov	ebx, eax
; Line 1507
	push	1508					; 000005e4H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	mov	DWORD PTR _num_of_ciphers$1$[esp+76], ebx
	lea	ecx, DWORD PTR [ebx+ebx*4]
	shl	ecx, 2
	push	ecx
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 32					; 00000020H
	mov	DWORD PTR _co_list$1$[esp+48], ebp
; Line 1509
	test	ebp, ebp
	jne	SHORT $LN8@ssl_create
; Line 1510
	push	1510					; 000005e6H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	65					; 00000041H
	push	166					; 000000a6H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1511
	xor	eax, eax
	pop	ebp
	pop	ebx
	pop	esi
; Line 1668
	add	esp, 36					; 00000024H
	ret	0
$LN8@ssl_create:
	push	edi
; Line 1514
	lea	eax, DWORD PTR _tail$[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$[esp+56]
	push	eax
	push	ebp
	push	DWORD PTR _disabled_ssl$[esp+64]
	push	DWORD PTR _disabled_mac$[esp+68]
	push	DWORD PTR _disabled_enc$[esp+72]
	push	DWORD PTR _disabled_auth$[esp+76]
	push	DWORD PTR _disabled_mkey$[esp+80]
	push	ebx
	push	esi
	call	_ssl_cipher_collect_ciphers
; Line 989
	mov	edi, DWORD PTR _tail$[esp+92]
; Line 1514
	add	esp, 40					; 00000028H
; Line 988
	mov	esi, DWORD PTR _head$[esp+52]
	mov	DWORD PTR _head$12[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$24[esp+52], edi
; Line 1001
	test	edi, edi
	je	SHORT $LN490@ssl_create
	npad	6
$LL22@ssl_create:
; Line 1004
	mov	ebx, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN557@ssl_create
; Line 1011
	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [esi+12]
; Line 1032
	test	BYTE PTR [eax+12], 128			; 00000080H
	je	SHORT $LN43@ssl_create
; Line 1060
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LN43@ssl_create
; Line 1061
	lea	eax, DWORD PTR _tail$24[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$12[esp+56]
	push	ebx
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
; Line 1062
	mov	DWORD PTR [ebx+4], 1
$LN43@ssl_create:
; Line 1001
	cmp	ebx, edi
	jne	SHORT $LL22@ssl_create
$LN557@ssl_create:
	mov	esi, DWORD PTR _head$12[esp+52]
	mov	edi, DWORD PTR _tail$24[esp+52]
$LN490@ssl_create:
; Line 988
	mov	DWORD PTR _head$23[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$11[esp+52], edi
; Line 1001
	test	esi, esi
	je	SHORT $LN492@ssl_create
	npad	7
$LL60@ssl_create:
; Line 1004
	mov	ebx, edi
; Line 1006
	test	edi, edi
	je	SHORT $LN558@ssl_create
; Line 1011
	mov	eax, DWORD PTR [ebx]
	mov	edi, DWORD PTR [edi+16]
; Line 1032
	test	BYTE PTR [eax+12], 128			; 00000080H
	je	SHORT $LN87@ssl_create
; Line 1073
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN87@ssl_create
; Line 1079
	lea	eax, DWORD PTR _tail$11[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$23[esp+56]
	push	ebx
	push	eax
	call	_ll_append_head
	add	esp, 12					; 0000000cH
; Line 1080
	mov	DWORD PTR [ebx+4], 0
$LN87@ssl_create:
; Line 1001
	cmp	ebx, esi
	jne	SHORT $LL60@ssl_create
$LN558@ssl_create:
	mov	esi, DWORD PTR _head$23[esp+52]
	mov	edi, DWORD PTR _tail$11[esp+52]
$LN492@ssl_create:
; Line 988
	mov	DWORD PTR _head$22[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$10[esp+52], edi
; Line 1001
	test	edi, edi
	je	SHORT $LN494@ssl_create
	npad	7
$LL98@ssl_create:
; Line 1004
	mov	ebx, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN559@ssl_create
; Line 1011
	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [esi+12]
; Line 1036
	test	DWORD PTR [eax+20], 12480		; 000030c0H
	je	SHORT $LN119@ssl_create
; Line 1060
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LN119@ssl_create
; Line 1061
	lea	eax, DWORD PTR _tail$10[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$22[esp+56]
	push	ebx
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
; Line 1062
	mov	DWORD PTR [ebx+4], 1
$LN119@ssl_create:
; Line 1001
	cmp	ebx, edi
	jne	SHORT $LL98@ssl_create
$LN559@ssl_create:
	mov	esi, DWORD PTR _head$22[esp+52]
	mov	edi, DWORD PTR _tail$10[esp+52]
$LN494@ssl_create:
; Line 988
	mov	DWORD PTR _head$21[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$9[esp+52], edi
; Line 1001
	test	edi, edi
	je	SHORT $LN496@ssl_create
	npad	4
$LL136@ssl_create:
; Line 1004
	mov	ebx, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN560@ssl_create
; Line 1060
	cmp	DWORD PTR [ebx+4], 0
	mov	esi, DWORD PTR [esi+12]
	jne	SHORT $LN157@ssl_create
; Line 1061
	lea	eax, DWORD PTR _tail$9[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$21[esp+56]
	push	ebx
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
; Line 1062
	mov	DWORD PTR [ebx+4], 1
$LN157@ssl_create:
; Line 1001
	cmp	ebx, edi
	jne	SHORT $LL136@ssl_create
$LN560@ssl_create:
	mov	esi, DWORD PTR _head$21[esp+52]
	mov	edi, DWORD PTR _tail$9[esp+52]
$LN496@ssl_create:
; Line 988
	mov	DWORD PTR _head$20[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$8[esp+52], edi
; Line 1001
	test	edi, edi
	je	SHORT $LN498@ssl_create
$LL174@ssl_create:
; Line 1004
	mov	ebx, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN561@ssl_create
; Line 1011
	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [esi+12]
; Line 1038
	test	BYTE PTR [eax+24], 1
	je	SHORT $LN198@ssl_create
; Line 1068
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN198@ssl_create
; Line 1069
	lea	eax, DWORD PTR _tail$8[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$20[esp+56]
	push	ebx
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
$LN198@ssl_create:
; Line 1001
	cmp	ebx, edi
	jne	SHORT $LL174@ssl_create
$LN561@ssl_create:
	mov	esi, DWORD PTR _head$20[esp+52]
	mov	edi, DWORD PTR _tail$8[esp+52]
$LN498@ssl_create:
; Line 988
	mov	DWORD PTR _head$19[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$7[esp+52], edi
; Line 1001
	test	edi, edi
	je	SHORT $LN500@ssl_create
$LL212@ssl_create:
; Line 1004
	mov	ebx, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN562@ssl_create
; Line 1011
	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [esi+12]
; Line 1034
	test	BYTE PTR [eax+16], 4
	je	SHORT $LN236@ssl_create
; Line 1068
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN236@ssl_create
; Line 1069
	lea	eax, DWORD PTR _tail$7[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$19[esp+56]
	push	ebx
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
$LN236@ssl_create:
; Line 1001
	cmp	ebx, edi
	jne	SHORT $LL212@ssl_create
$LN562@ssl_create:
	mov	esi, DWORD PTR _head$19[esp+52]
	mov	edi, DWORD PTR _tail$7[esp+52]
$LN500@ssl_create:
; Line 988
	mov	DWORD PTR _head$18[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$6[esp+52], edi
; Line 1001
	test	edi, edi
	je	SHORT $LN502@ssl_create
$LL250@ssl_create:
; Line 1004
	mov	ebx, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN563@ssl_create
; Line 1011
	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [esi+12]
; Line 1034
	test	BYTE PTR [eax+16], 16			; 00000010H
	je	SHORT $LN274@ssl_create
; Line 1068
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN274@ssl_create
; Line 1069
	lea	eax, DWORD PTR _tail$6[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$18[esp+56]
	push	ebx
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
$LN274@ssl_create:
; Line 1001
	cmp	ebx, edi
	jne	SHORT $LL250@ssl_create
$LN563@ssl_create:
	mov	esi, DWORD PTR _head$18[esp+52]
	mov	edi, DWORD PTR _tail$6[esp+52]
$LN502@ssl_create:
; Line 988
	mov	DWORD PTR _head$17[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$5[esp+52], edi
; Line 1001
	test	edi, edi
	je	SHORT $LN504@ssl_create
$LL288@ssl_create:
; Line 1004
	mov	ebx, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN564@ssl_create
; Line 1011
	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [esi+12]
; Line 1032
	test	BYTE PTR [eax+12], 1
	je	SHORT $LN312@ssl_create
; Line 1068
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN312@ssl_create
; Line 1069
	lea	eax, DWORD PTR _tail$5[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$17[esp+56]
	push	ebx
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
$LN312@ssl_create:
; Line 1001
	cmp	ebx, edi
	jne	SHORT $LL288@ssl_create
$LN564@ssl_create:
	mov	esi, DWORD PTR _head$17[esp+52]
	mov	edi, DWORD PTR _tail$5[esp+52]
$LN504@ssl_create:
; Line 988
	mov	DWORD PTR _head$16[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$4[esp+52], edi
; Line 1001
	test	edi, edi
	je	SHORT $LN506@ssl_create
	npad	7
$LL326@ssl_create:
; Line 1004
	mov	ebx, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN565@ssl_create
; Line 1011
	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [esi+12]
; Line 1032
	test	DWORD PTR [eax+12], 256			; 00000100H
	je	SHORT $LN350@ssl_create
; Line 1068
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN350@ssl_create
; Line 1069
	lea	eax, DWORD PTR _tail$4[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$16[esp+56]
	push	ebx
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
$LN350@ssl_create:
; Line 1001
	cmp	ebx, edi
	jne	SHORT $LL326@ssl_create
$LN565@ssl_create:
	mov	esi, DWORD PTR _head$16[esp+52]
	mov	edi, DWORD PTR _tail$4[esp+52]
$LN506@ssl_create:
; Line 988
	mov	DWORD PTR _head$15[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$3[esp+52], edi
; Line 1001
	test	edi, edi
	je	SHORT $LN508@ssl_create
$LL364@ssl_create:
; Line 1004
	mov	ebx, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN566@ssl_create
; Line 1011
	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [esi+12]
; Line 1032
	test	BYTE PTR [eax+12], 16			; 00000010H
	je	SHORT $LN388@ssl_create
; Line 1068
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN388@ssl_create
; Line 1069
	lea	eax, DWORD PTR _tail$3[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$15[esp+56]
	push	ebx
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
$LN388@ssl_create:
; Line 1001
	cmp	ebx, edi
	jne	SHORT $LL364@ssl_create
$LN566@ssl_create:
	mov	esi, DWORD PTR _head$15[esp+52]
	mov	edi, DWORD PTR _tail$3[esp+52]
$LN508@ssl_create:
; Line 988
	mov	DWORD PTR _head$14[esp+52], esi
; Line 989
	mov	DWORD PTR _tail$2[esp+52], edi
; Line 1001
	test	edi, edi
	je	SHORT $LN510@ssl_create
$LL402@ssl_create:
; Line 1004
	mov	ebx, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN567@ssl_create
; Line 1011
	mov	eax, DWORD PTR [ebx]
	mov	esi, DWORD PTR [esi+12]
; Line 1036
	test	BYTE PTR [eax+20], 4
	je	SHORT $LN426@ssl_create
; Line 1068
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN426@ssl_create
; Line 1069
	lea	eax, DWORD PTR _tail$2[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$14[esp+56]
	push	ebx
	push	eax
	call	_ll_append_tail
	add	esp, 12					; 0000000cH
$LN426@ssl_create:
; Line 1001
	cmp	ebx, edi
	jne	SHORT $LL402@ssl_create
$LN567@ssl_create:
	mov	esi, DWORD PTR _head$14[esp+52]
	mov	edi, DWORD PTR _tail$2[esp+52]
$LN510@ssl_create:
; Line 1571
	lea	eax, DWORD PTR _tail$[esp+52]
; Line 1100
	mov	DWORD PTR _head$[esp+52], esi
; Line 1571
	push	eax
	lea	eax, DWORD PTR _head$[esp+56]
; Line 1101
	mov	DWORD PTR _tail$[esp+56], edi
; Line 1571
	push	eax
	call	_ssl_cipher_strength_sort
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@ssl_create
; Line 1572
	push	ebp
	call	_CRYPTO_free
; Line 1628
	add	esp, 4
; Line 1629
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1668
	add	esp, 36					; 00000024H
	ret	0
$LN9@ssl_create:
; Line 988
	mov	ebx, DWORD PTR _head$[esp+52]
; Line 989
	mov	esi, DWORD PTR _tail$[esp+52]
	mov	DWORD PTR _head$1[esp+52], ebx
	mov	DWORD PTR _tail$13[esp+52], esi
; Line 1001
	test	ebx, ebx
	je	SHORT $LN512@ssl_create
$LL440@ssl_create:
; Line 1004
	mov	edi, esi
; Line 1006
	test	esi, esi
	je	SHORT $LN568@ssl_create
; Line 1073
	cmp	DWORD PTR [edi+4], 0
	mov	esi, DWORD PTR [esi+16]
	je	SHORT $LN467@ssl_create
; Line 1079
	lea	eax, DWORD PTR _tail$13[esp+52]
	push	eax
	lea	eax, DWORD PTR _head$1[esp+56]
	push	edi
	push	eax
	call	_ll_append_head
	add	esp, 12					; 0000000cH
; Line 1080
	mov	DWORD PTR [edi+4], 0
$LN467@ssl_create:
; Line 1001
	cmp	edi, ebx
	jne	SHORT $LL440@ssl_create
$LN568@ssl_create:
	mov	ebx, DWORD PTR _head$1[esp+52]
	mov	esi, DWORD PTR _tail$13[esp+52]
$LN512@ssl_create:
; Line 1589
	mov	eax, DWORD PTR _num_of_ciphers$1$[esp+52]
	push	1589					; 00000635H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
; Line 1100
	mov	DWORD PTR _head$[esp+60], ebx
; Line 1589
	lea	eax, DWORD PTR [eax*4+340]
; Line 1101
	mov	DWORD PTR _tail$[esp+60], esi
; Line 1589
	push	eax
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 1590
	test	ebp, ebp
	jne	SHORT $LN10@ssl_create
; Line 1591
	push	DWORD PTR _co_list$1$[esp+52]
	call	_CRYPTO_free
; Line 1592
	push	1592					; 00000638H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	65					; 00000041H
	push	166					; 000000a6H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 24					; 00000018H
; Line 1629
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1668
	add	esp, 36					; 00000024H
	ret	0
$LN10@ssl_create:
; Line 1595
	push	ebx
	push	DWORD PTR _disabled_ssl$[esp+56]
	push	DWORD PTR _disabled_mac$[esp+60]
	push	DWORD PTR _disabled_enc$[esp+64]
	push	DWORD PTR _disabled_auth$[esp+68]
	push	DWORD PTR _disabled_mkey$[esp+72]
	push	84					; 00000054H
	push	ebp
	call	_ssl_cipher_collect_aliases
; Line 1604
	mov	esi, DWORD PTR _rule_str$[esp+80]
	mov	edi, 1
; Line 1605
	push	7
	push	OFFSET ??_C@_07MGCPDNLD@DEFAULT?$AA@
	push	esi
	call	DWORD PTR __imp__strncmp
	add	esp, 44					; 0000002cH
	test	eax, eax
	jne	SHORT $LN555@ssl_create
; Line 1606
	push	ebp
	lea	eax, DWORD PTR _tail$[esp+56]
	push	eax
	lea	eax, DWORD PTR _head$[esp+60]
	push	eax
	push	OFFSET ??_C@_0CG@ENOBHNBE@ALL?3?$CBEXPORT?3?$CBLOW?3?$CBaNULL?3?$CBeNULL?3?$CB@
	call	_ssl_cipher_process_rulestr
; Line 1608
	add	esi, 7
	add	esp, 16					; 00000010H
	mov	edi, eax
; Line 1609
	cmp	BYTE PTR [esi], 58			; 0000003aH
	jne	SHORT $LN12@ssl_create
; Line 1610
	inc	esi
$LN12@ssl_create:
; Line 1613
	test	edi, edi
	je	SHORT $LN13@ssl_create
$LN555@ssl_create:
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
$LL556@ssl_create:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL556@ssl_create
	sub	ecx, edx
	je	SHORT $LN13@ssl_create
; Line 1614
	push	ebp
	lea	eax, DWORD PTR _tail$[esp+56]
	push	eax
	lea	eax, DWORD PTR _head$[esp+60]
	push	eax
	push	esi
	call	_ssl_cipher_process_rulestr
	add	esp, 16					; 00000010H
	mov	edi, eax
$LN13@ssl_create:
; Line 1616
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
; Line 1618
	test	edi, edi
	je	SHORT $LN574@ssl_create
; Line 1627
	call	_sk_new_null
	mov	edi, eax
	test	edi, edi
	jne	SHORT $LN15@ssl_create
$LN574@ssl_create:
; Line 1628
	push	DWORD PTR _co_list$1$[esp+52]
	call	_CRYPTO_free
	add	esp, 4
; Line 1629
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1668
	add	esp, 36					; 00000024H
	ret	0
$LN15@ssl_create:
; Line 1636
	mov	esi, DWORD PTR _head$[esp+52]
	test	esi, esi
	je	SHORT $LN3@ssl_create
	npad	1
$LL4@ssl_create:
; Line 1641
	cmp	DWORD PTR [esi+4], 0
	je	SHORT $LN2@ssl_create
; Line 1644
	push	DWORD PTR [esi]
	push	edi
	call	_sk_push
	add	esp, 8
$LN2@ssl_create:
; Line 1636
	mov	esi, DWORD PTR [esi+12]
	test	esi, esi
	jne	SHORT $LL4@ssl_create
$LN3@ssl_create:
; Line 1650
	push	DWORD PTR _co_list$1$[esp+52]
	call	_CRYPTO_free
; Line 1652
	push	edi
	call	_sk_dup
	mov	esi, eax
	add	esp, 8
; Line 1653
	test	esi, esi
	jne	SHORT $LN17@ssl_create
; Line 1654
	push	edi
	call	_sk_free
	add	esp, 4
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1668
	add	esp, 36					; 00000024H
	ret	0
$LN17@ssl_create:
; Line 1657
	mov	ebx, DWORD PTR _cipher_list$[esp+48]
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN18@ssl_create
; Line 1658
	push	eax
	call	_sk_free
	add	esp, 4
$LN18@ssl_create:
; Line 1659
	mov	DWORD PTR [ebx], edi
; Line 1660
	mov	ebx, DWORD PTR _cipher_list_by_id$[esp+48]
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN19@ssl_create
; Line 1661
	push	eax
	call	_sk_free
	add	esp, 4
$LN19@ssl_create:
; Line 1663
	push	OFFSET _ssl_cipher_ptr_id_cmp
	push	esi
	mov	DWORD PTR [ebx], esi
	call	_sk_set_cmp_func
; Line 1666
	push	DWORD PTR [ebx]
	call	_sk_sort
	add	esp, 12					; 0000000cH
; Line 1667
	mov	eax, edi
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1668
	add	esp, 36					; 00000024H
	ret	0
$LN6@ssl_create:
; Line 1484
	xor	eax, eax
; Line 1668
	add	esp, 36					; 00000024H
	ret	0
_ssl_create_cipher_list ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CIPHER_find
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_ptr$ = 12						; size = 4
_SSL_CIPHER_find PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 2076
	mov	eax, DWORD PTR _ssl$[esp-4]
	push	DWORD PTR _ptr$[esp-4]
	mov	eax, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax+72]
	call	eax
	add	esp, 4
; Line 2077
	ret	0
_SSL_CIPHER_find ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_COMP_add_compression_method
_TEXT	SEGMENT
_id$ = 8						; size = 4
_cm$ = 12						; size = 4
_SSL_COMP_add_compression_method PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1977
	push	edi
; Line 1980
	mov	edi, DWORD PTR _cm$[esp]
	test	edi, edi
	je	$LN3@SSL_COMP_a
	cmp	DWORD PTR [edi], 0
	je	$LN3@SSL_COMP_a
; Line 1991
	push	ebx
	mov	ebx, DWORD PTR _id$[esp+4]
	lea	eax, DWORD PTR [ebx-193]
	cmp	eax, 62					; 0000003eH
	ja	$LN5@SSL_COMP_a
; Line 1997
	push	esi
	push	3
	call	_CRYPTO_mem_ctrl
; Line 1998
	push	1998					; 000007ceH
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	12					; 0000000cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 16					; 00000010H
; Line 1999
	mov	DWORD PTR [esi], ebx
; Line 2000
	mov	DWORD PTR [esi+8], edi
; Line 2001
	call	_load_builtin_compressions
; Line 2002
	mov	eax, DWORD PTR _ssl_comp_methods
	test	eax, eax
	je	SHORT $LN10@SSL_COMP_a
	push	esi
	push	eax
	call	_sk_find
	add	esp, 8
	test	eax, eax
	js	SHORT $LN6@SSL_COMP_a
; Line 2003
	push	esi
	call	_CRYPTO_free
; Line 2004
	push	2
	call	_CRYPTO_mem_ctrl
; Line 2005
	push	2006					; 000007d6H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	309					; 00000135H
$LN14@SSL_COMP_a:
	push	165					; 000000a5H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 28					; 0000001cH
; Line 2007
	mov	eax, 1
	pop	esi
	pop	ebx
	pop	edi
; Line 2018
	ret	0
$LN6@SSL_COMP_a:
; Line 2009
	mov	eax, DWORD PTR _ssl_comp_methods
	test	eax, eax
	je	SHORT $LN10@SSL_COMP_a
	push	esi
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN10@SSL_COMP_a
; Line 2015
	push	2
	call	_CRYPTO_mem_ctrl
	add	esp, 4
; Line 2016
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 2018
	ret	0
$LN10@SSL_COMP_a:
; Line 2010
	push	esi
	call	_CRYPTO_free
; Line 2011
	push	2
	call	_CRYPTO_mem_ctrl
; Line 2012
	push	2012					; 000007dcH
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	65					; 00000041H
; Line 2013
	jmp	SHORT $LN14@SSL_COMP_a
$LN5@SSL_COMP_a:
; Line 1992
	push	1993					; 000007c9H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	307					; 00000133H
	push	165					; 000000a5H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1994
	xor	eax, eax
	pop	ebx
	pop	edi
; Line 2018
	ret	0
$LN3@SSL_COMP_a:
; Line 1981
	mov	eax, 1
	pop	edi
; Line 2018
	ret	0
_SSL_COMP_add_compression_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_COMP_free_compression_methods
_TEXT	SEGMENT
_SSL_COMP_free_compression_methods PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1971
	mov	eax, DWORD PTR _ssl_comp_methods
; Line 1973
	push	OFFSET _cmeth_free
	push	eax
	mov	DWORD PTR _ssl_comp_methods, 0
	call	_sk_pop_free
	add	esp, 8
; Line 1974
	ret	0
_SSL_COMP_free_compression_methods ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_COMP_set0_compression_methods
_TEXT	SEGMENT
_meths$ = 8						; size = 4
_SSL_COMP_set0_compression_methods PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1959
	mov	eax, DWORD PTR _ssl_comp_methods
; Line 1960
	mov	ecx, DWORD PTR _meths$[esp-4]
	mov	DWORD PTR _ssl_comp_methods, ecx
; Line 1962
	ret	0
_SSL_COMP_set0_compression_methods ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_COMP_get_compression_methods
_TEXT	SEGMENT
_SSL_COMP_get_compression_methods PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1952
	call	_load_builtin_compressions
; Line 1953
	mov	eax, DWORD PTR _ssl_comp_methods
; Line 1954
	ret	0
_SSL_COMP_get_compression_methods ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_COMP_get_name
_TEXT	SEGMENT
_comp$ = 8						; size = 4
_SSL_COMP_get_name PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 2022
	mov	eax, DWORD PTR _comp$[esp-4]
	test	eax, eax
	je	SHORT $LN2@SSL_COMP_g
; Line 2023
	mov	eax, DWORD PTR [eax+4]
; Line 2025
	ret	0
$LN2@SSL_COMP_g:
; Line 2024
	xor	eax, eax
; Line 2025
	ret	0
_SSL_COMP_get_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CIPHER_description
_TEXT	SEGMENT
_is_export$1$ = -16					; size = 4
_ver$1$ = -12						; size = 4
tv585 = -12						; size = 4
_alg_mac$1$ = -8					; size = 4
_exp_str$1$ = -4					; size = 4
_cipher$ = 8						; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_SSL_CIPHER_description PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1671
	mov	eax, 16					; 00000010H
	call	__chkstk
; Line 1684
	mov	eax, DWORD PTR _cipher$[esp+12]
	push	ebx
	push	ebp
	push	esi
; Line 1687
	mov	ebx, DWORD PTR [eax+24]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	esi, DWORD PTR [eax+20]
	mov	DWORD PTR _alg_mac$1$[esp+28], ebx
; Line 1688
	mov	ebx, DWORD PTR [eax+28]
; Line 1692
	mov	eax, DWORD PTR [eax+32]
	mov	ebp, eax
	and	ebp, 2
; Line 1693
	and	eax, 8
	mov	DWORD PTR _is_export$1$[esp+28], ebp
	mov	ebp, 1024				; 00000400H
	push	edi
	mov	edi, 512				; 00000200H
	cmovne	ebp, edi
; Line 1694
	test	eax, eax
	je	SHORT $LN68@SSL_CIPHER
	mov	edi, 5
	jmp	SHORT $LN69@SSL_CIPHER
$LN68@SSL_CIPHER:
	lea	edi, DWORD PTR [esi-1]
	neg	edi
	sbb	edi, edi
	add	edi, 8
$LN69@SSL_CIPHER:
; Line 1695
	cmp	DWORD PTR _is_export$1$[esp+32], 0
	mov	eax, OFFSET ??_C@_07NLOFKJHI@?5export?$AA@
	mov	DWORD PTR tv585[esp+32], OFFSET ??_C@_00CNPNBAHC@?$AA@
	cmove	eax, DWORD PTR tv585[esp+32]
	mov	DWORD PTR _exp_str$1$[esp+32], eax
; Line 1697
	test	bl, 1
	je	SHORT $LN10@SSL_CIPHER
; Line 1698
	mov	DWORD PTR _ver$1$[esp+32], OFFSET ??_C@_05NHFKDGAI@SSLv2?$AA@
	jmp	SHORT $LN14@SSL_CIPHER
$LN10@SSL_CIPHER:
; Line 1699
	test	bl, 2
	je	SHORT $LN12@SSL_CIPHER
; Line 1700
	mov	DWORD PTR _ver$1$[esp+32], OFFSET ??_C@_05MOEBAHEJ@SSLv3?$AA@
	jmp	SHORT $LN14@SSL_CIPHER
$LN12@SSL_CIPHER:
; Line 1701
	test	bl, 4
	mov	eax, OFFSET ??_C@_07KDKGANMO@TLSv1?42?$AA@
	mov	ebx, OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	cmove	eax, ebx
	mov	DWORD PTR _ver$1$[esp+32], eax
$LN14@SSL_CIPHER:
; Line 1706
	cmp	ecx, 32					; 00000020H
	ja	$LN74@SSL_CIPHER
	je	SHORT $LN21@SSL_CIPHER
	dec	ecx
	cmp	ecx, 15					; 0000000fH
	ja	$LN27@SSL_CIPHER
	movzx	eax, BYTE PTR $LN86@SSL_CIPHER[ecx]
	jmp	DWORD PTR $LN93@SSL_CIPHER[eax*4]
$LN16@SSL_CIPHER:
; Line 1708
	mov	ecx, DWORD PTR _is_export$1$[esp+32]
	test	ecx, ecx
	je	SHORT $LN70@SSL_CIPHER
	cmp	ebp, 512				; 00000200H
	mov	ebx, OFFSET ??_C@_08NFIHIJDF@RSA?$CI512?$CJ?$AA@
	mov	eax, OFFSET ??_C@_09KACPIHME@RSA?$CI1024?$CJ?$AA@
	cmovne	ebx, eax
	jmp	$LN2@SSL_CIPHER
$LN70@SSL_CIPHER:
	mov	ebx, OFFSET ??_C@_03DICHAJGH@RSA?$AA@
; Line 1709
	jmp	$LN2@SSL_CIPHER
$LN17@SSL_CIPHER:
; Line 1711
	mov	ebx, OFFSET ??_C@_06JENBGILL@DH?1RSA?$AA@
; Line 1712
	jmp	$LN91@SSL_CIPHER
$LN18@SSL_CIPHER:
; Line 1714
	mov	ebx, OFFSET ??_C@_06JJFHBACL@DH?1DSS?$AA@
; Line 1715
	jmp	SHORT $LN91@SSL_CIPHER
$LN19@SSL_CIPHER:
; Line 1717
	mov	ebx, OFFSET ??_C@_04KGNFDNIL@KRB5?$AA@
; Line 1718
	jmp	SHORT $LN91@SSL_CIPHER
$LN20@SSL_CIPHER:
; Line 1720
	mov	ecx, DWORD PTR _is_export$1$[esp+32]
	test	ecx, ecx
	je	SHORT $LN72@SSL_CIPHER
	cmp	ebp, 512				; 00000200H
	mov	ebx, OFFSET ??_C@_07OJOOFGOD@DH?$CI512?$CJ?$AA@
	mov	eax, OFFSET ??_C@_08MPKDJJPK@DH?$CI1024?$CJ?$AA@
	cmovne	ebx, eax
	jmp	SHORT $LN2@SSL_CIPHER
$LN72@SSL_CIPHER:
	mov	ebx, OFFSET ??_C@_02EPINMGPM@DH?$AA@
; Line 1721
	jmp	SHORT $LN2@SSL_CIPHER
$LN21@SSL_CIPHER:
; Line 1723
	mov	ebx, OFFSET ??_C@_08NMKDCACN@ECDH?1RSA?$AA@
; Line 1724
	jmp	SHORT $LN91@SSL_CIPHER
$LN74@SSL_CIPHER:
; Line 1706
	cmp	ecx, 256				; 00000100H
	ja	SHORT $LN75@SSL_CIPHER
	je	SHORT $LN24@SSL_CIPHER
	sub	ecx, 64					; 00000040H
	je	SHORT $LN22@SSL_CIPHER
	sub	ecx, 64					; 00000040H
	jne	SHORT $LN27@SSL_CIPHER
; Line 1729
	mov	ebx, OFFSET ??_C@_04GPFMMIBJ@ECDH?$AA@
; Line 1730
	jmp	SHORT $LN91@SSL_CIPHER
$LN22@SSL_CIPHER:
; Line 1726
	mov	ebx, OFFSET ??_C@_0L@NFDBBNLK@ECDH?1ECDSA?$AA@
; Line 1727
	jmp	SHORT $LN91@SSL_CIPHER
$LN24@SSL_CIPHER:
; Line 1732
	mov	ebx, OFFSET ??_C@_03GIMBCJGG@PSK?$AA@
; Line 1733
	jmp	SHORT $LN91@SSL_CIPHER
$LN75@SSL_CIPHER:
; Line 1706
	cmp	ecx, 512				; 00000200H
	je	SHORT $LN26@SSL_CIPHER
	cmp	ecx, 1024				; 00000400H
	je	SHORT $LN25@SSL_CIPHER
$LN27@SSL_CIPHER:
; Line 1741
	mov	ebx, OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	jmp	SHORT $LN91@SSL_CIPHER
$LN25@SSL_CIPHER:
; Line 1735
	mov	ebx, OFFSET ??_C@_03NCIACHCF@SRP?$AA@
; Line 1736
	jmp	SHORT $LN91@SSL_CIPHER
$LN26@SSL_CIPHER:
; Line 1738
	mov	ebx, OFFSET ??_C@_04KAFEMMGJ@GOST?$AA@
$LN91@SSL_CIPHER:
	mov	ecx, DWORD PTR _is_export$1$[esp+32]
$LN2@SSL_CIPHER:
; Line 1744
	cmp	edx, 32					; 00000020H
	ja	SHORT $LN76@SSL_CIPHER
	je	SHORT $LN31@SSL_CIPHER
	dec	edx
	cmp	edx, 15					; 0000000fH
	ja	SHORT $LN39@SSL_CIPHER
	movzx	eax, BYTE PTR $LN87@SSL_CIPHER[edx]
	jmp	DWORD PTR $LN94@SSL_CIPHER[eax*4]
$LN28@SSL_CIPHER:
; Line 1746
	mov	ebp, OFFSET ??_C@_03DICHAJGH@RSA?$AA@
; Line 1747
	jmp	SHORT $LN4@SSL_CIPHER
$LN29@SSL_CIPHER:
; Line 1749
	mov	ebp, OFFSET ??_C@_03DFKBHBPH@DSS?$AA@
; Line 1750
	jmp	SHORT $LN4@SSL_CIPHER
$LN30@SSL_CIPHER:
; Line 1752
	mov	ebp, OFFSET ??_C@_02EPINMGPM@DH?$AA@
; Line 1753
	jmp	SHORT $LN4@SSL_CIPHER
$LN32@SSL_CIPHER:
; Line 1758
	mov	ebp, OFFSET ??_C@_04GPFMMIBJ@ECDH?$AA@
; Line 1759
	jmp	SHORT $LN4@SSL_CIPHER
$LN33@SSL_CIPHER:
; Line 1761
	mov	ebp, OFFSET ??_C@_04OHJIHAFH@None?$AA@
; Line 1762
	jmp	SHORT $LN4@SSL_CIPHER
$LN31@SSL_CIPHER:
; Line 1755
	mov	ebp, OFFSET ??_C@_04KGNFDNIL@KRB5?$AA@
; Line 1756
	jmp	SHORT $LN4@SSL_CIPHER
$LN76@SSL_CIPHER:
; Line 1744
	cmp	edx, 256				; 00000100H
	ja	SHORT $LN77@SSL_CIPHER
	je	SHORT $LN37@SSL_CIPHER
	sub	edx, 64					; 00000040H
	je	SHORT $LN34@SSL_CIPHER
	sub	edx, 64					; 00000040H
	jne	SHORT $LN39@SSL_CIPHER
; Line 1767
	mov	ebp, OFFSET ??_C@_03GIMBCJGG@PSK?$AA@
; Line 1768
	jmp	SHORT $LN4@SSL_CIPHER
$LN34@SSL_CIPHER:
; Line 1764
	mov	ebp, OFFSET ??_C@_05JNBFMGNN@ECDSA?$AA@
; Line 1765
	jmp	SHORT $LN4@SSL_CIPHER
$LN37@SSL_CIPHER:
; Line 1773
	mov	ebp, OFFSET ??_C@_06LGHNNDMJ@GOST94?$AA@
; Line 1774
	jmp	SHORT $LN4@SSL_CIPHER
$LN77@SSL_CIPHER:
; Line 1744
	cmp	edx, 512				; 00000200H
	je	SHORT $LN38@SSL_CIPHER
	cmp	edx, 1024				; 00000400H
	je	SHORT $LN36@SSL_CIPHER
$LN39@SSL_CIPHER:
; Line 1779
	mov	ebp, OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	jmp	SHORT $LN4@SSL_CIPHER
$LN36@SSL_CIPHER:
; Line 1770
	mov	ebp, OFFSET ??_C@_03NCIACHCF@SRP?$AA@
; Line 1771
	jmp	SHORT $LN4@SSL_CIPHER
$LN38@SSL_CIPHER:
; Line 1776
	mov	ebp, OFFSET ??_C@_06MENLBMAD@GOST01?$AA@
$LN4@SSL_CIPHER:
; Line 1783
	cmp	esi, 128				; 00000080H
	ja	$LN84@SSL_CIPHER
	je	$LN47@SSL_CIPHER
	dec	esi
	cmp	esi, 63					; 0000003fH
	ja	$LN54@SSL_CIPHER
	movzx	eax, BYTE PTR $LN88@SSL_CIPHER[esi]
	jmp	DWORD PTR $LN95@SSL_CIPHER[eax*4]
$LN40@SSL_CIPHER:
; Line 1785
	test	ecx, ecx
	je	SHORT $LN78@SSL_CIPHER
	cmp	edi, 5
	jne	SHORT $LN78@SSL_CIPHER
	mov	esi, OFFSET ??_C@_07EFPGLNEO@DES?$CI40?$CJ?$AA@
	jmp	$LN6@SSL_CIPHER
$LN78@SSL_CIPHER:
	mov	esi, OFFSET ??_C@_07PJMHKGJJ@DES?$CI56?$CJ?$AA@
; Line 1786
	jmp	$LN6@SSL_CIPHER
$LN41@SSL_CIPHER:
; Line 1788
	mov	esi, OFFSET ??_C@_09KDEPFJMJ@3DES?$CI168?$CJ?$AA@
; Line 1789
	jmp	$LN6@SSL_CIPHER
$LN42@SSL_CIPHER:
; Line 1791
	test	ecx, ecx
	je	SHORT $LN80@SSL_CIPHER
	cmp	edi, 5
	mov	esi, OFFSET ??_C@_07IJADIPDK@RC4?$CI40?$CJ?$AA@
	mov	eax, OFFSET ??_C@_07DFDCJEON@RC4?$CI56?$CJ?$AA@
	cmovne	esi, eax
	jmp	$LN6@SSL_CIPHER
$LN80@SSL_CIPHER:
	mov	eax, DWORD PTR _cipher$[esp+28]
	mov	esi, OFFSET ??_C@_07CEADOPGN@RC4?$CI64?$CJ?$AA@
	test	BYTE PTR [eax+36], 2
	mov	eax, OFFSET ??_C@_08PNMOMLGK@RC4?$CI128?$CJ?$AA@
	cmove	esi, eax
; Line 1793
	jmp	$LN6@SSL_CIPHER
$LN43@SSL_CIPHER:
; Line 1795
	test	ecx, ecx
	je	SHORT $LN82@SSL_CIPHER
	cmp	edi, 5
	mov	esi, OFFSET ??_C@_07FPFKGMCH@RC2?$CI40?$CJ?$AA@
	mov	eax, OFFSET ??_C@_07ODGLHHPA@RC2?$CI56?$CJ?$AA@
	cmovne	esi, eax
	jmp	$LN6@SSL_CIPHER
$LN82@SSL_CIPHER:
	mov	esi, OFFSET ??_C@_08JOBOPOFA@RC2?$CI128?$CJ?$AA@
; Line 1796
	jmp	SHORT $LN6@SSL_CIPHER
$LN44@SSL_CIPHER:
; Line 1798
	mov	esi, OFFSET ??_C@_09DNAHFGCI@IDEA?$CI128?$CJ?$AA@
; Line 1799
	jmp	SHORT $LN6@SSL_CIPHER
$LN45@SSL_CIPHER:
; Line 1801
	mov	esi, OFFSET ??_C@_04OHJIHAFH@None?$AA@
; Line 1802
	jmp	SHORT $LN6@SSL_CIPHER
$LN46@SSL_CIPHER:
; Line 1804
	mov	esi, OFFSET ??_C@_08OAPNMODC@AES?$CI128?$CJ?$AA@
; Line 1805
	jmp	SHORT $LN6@SSL_CIPHER
$LN47@SSL_CIPHER:
; Line 1807
	mov	esi, OFFSET ??_C@_08DABEKBFB@AES?$CI256?$CJ?$AA@
; Line 1808
	jmp	SHORT $LN6@SSL_CIPHER
$LN84@SSL_CIPHER:
; Line 1783
	cmp	esi, 2048				; 00000800H
	ja	SHORT $LN85@SSL_CIPHER
	je	SHORT $LN52@SSL_CIPHER
	cmp	esi, 256				; 00000100H
	je	SHORT $LN50@SSL_CIPHER
	cmp	esi, 512				; 00000200H
	je	SHORT $LN51@SSL_CIPHER
	cmp	esi, 1024				; 00000400H
	jne	SHORT $LN54@SSL_CIPHER
; Line 1825
	mov	esi, OFFSET ??_C@_0M@GEGNFJ@GOST89?$CI256?$CJ?$AA@
; Line 1826
	jmp	SHORT $LN6@SSL_CIPHER
$LN51@SSL_CIPHER:
; Line 1819
	mov	esi, OFFSET ??_C@_0O@FHCFAIDN@Camellia?$CI256?$CJ?$AA@
; Line 1820
	jmp	SHORT $LN6@SSL_CIPHER
$LN50@SSL_CIPHER:
; Line 1816
	mov	esi, OFFSET ??_C@_0O@IHMMGHFO@Camellia?$CI128?$CJ?$AA@
; Line 1817
	jmp	SHORT $LN6@SSL_CIPHER
$LN52@SSL_CIPHER:
; Line 1822
	mov	esi, OFFSET ??_C@_09EIMIHMON@SEED?$CI128?$CJ?$AA@
; Line 1823
	jmp	SHORT $LN6@SSL_CIPHER
$LN85@SSL_CIPHER:
; Line 1783
	cmp	esi, 4096				; 00001000H
	je	SHORT $LN48@SSL_CIPHER
	cmp	esi, 8192				; 00002000H
	je	SHORT $LN49@SSL_CIPHER
$LN54@SSL_CIPHER:
; Line 1828
	mov	esi, OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	jmp	SHORT $LN6@SSL_CIPHER
$LN49@SSL_CIPHER:
; Line 1813
	mov	esi, OFFSET ??_C@_0M@HBKGJHHH@AESGCM?$CI256?$CJ?$AA@
; Line 1814
	jmp	SHORT $LN6@SSL_CIPHER
$LN48@SSL_CIPHER:
; Line 1810
	mov	esi, OFFSET ??_C@_0M@KBEPPIBE@AESGCM?$CI128?$CJ?$AA@
$LN6@SSL_CIPHER:
; Line 1832
	mov	eax, DWORD PTR _alg_mac$1$[esp+32]
	dec	eax
	cmp	eax, 63					; 0000003fH
	ja	SHORT $LN62@SSL_CIPHER
	movzx	eax, BYTE PTR $LN89@SSL_CIPHER[eax]
	jmp	DWORD PTR $LN96@SSL_CIPHER[eax*4]
$LN55@SSL_CIPHER:
; Line 1834
	mov	edi, OFFSET ??_C@_03GCGHEHKJ@MD5?$AA@
; Line 1835
	jmp	SHORT $LN8@SSL_CIPHER
$LN56@SSL_CIPHER:
; Line 1837
	mov	edi, OFFSET ??_C@_04KPMLCNGO@SHA1?$AA@
; Line 1838
	jmp	SHORT $LN8@SSL_CIPHER
$LN57@SSL_CIPHER:
; Line 1840
	mov	edi, OFFSET ??_C@_06HKIKMHH@SHA256?$AA@
; Line 1841
	jmp	SHORT $LN8@SSL_CIPHER
$LN58@SSL_CIPHER:
; Line 1843
	mov	edi, OFFSET ??_C@_06IFPKDKMD@SHA384?$AA@
; Line 1844
	jmp	SHORT $LN8@SSL_CIPHER
$LN59@SSL_CIPHER:
; Line 1846
	mov	edi, OFFSET ??_C@_04BFMJLMOC@AEAD?$AA@
; Line 1847
	jmp	SHORT $LN8@SSL_CIPHER
$LN60@SSL_CIPHER:
; Line 1849
	mov	edi, OFFSET ??_C@_06CBBMHLD@GOST89?$AA@
; Line 1850
	jmp	SHORT $LN8@SSL_CIPHER
$LN61@SSL_CIPHER:
; Line 1852
	mov	edi, OFFSET ??_C@_06LGHNNDMJ@GOST94?$AA@
; Line 1853
	jmp	SHORT $LN8@SSL_CIPHER
$LN62@SSL_CIPHER:
; Line 1855
	mov	edi, OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
$LN8@SSL_CIPHER:
; Line 1859
	mov	eax, DWORD PTR _buf$[esp+28]
	test	eax, eax
	jne	SHORT $LN63@SSL_CIPHER
; Line 1861
	push	1861					; 00000745H
	push	OFFSET ??_C@_0BB@LIPCHABF@?4?2ssl?2ssl_ciph?4c?$AA@
	push	128					; 00000080H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$[esp+28], eax
; Line 1862
	test	eax, eax
	jne	SHORT $LN90@SSL_CIPHER
; Line 1863
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, OFFSET ??_C@_0BF@DPJDPLHD@OPENSSL_malloc?5Error?$AA@
	pop	ebx
; Line 1875
	add	esp, 16					; 00000010H
	ret	0
$LN63@SSL_CIPHER:
; Line 1864
	mov	ecx, DWORD PTR _len$[esp+28]
	cmp	ecx, 128				; 00000080H
	jge	SHORT $LN66@SSL_CIPHER
; Line 1865
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, OFFSET ??_C@_0BB@OLKJDAH@Buffer?5too?5small?$AA@
	pop	ebx
; Line 1875
	add	esp, 16					; 00000010H
	ret	0
$LN90@SSL_CIPHER:
	mov	ecx, 128				; 00000080H
$LN66@SSL_CIPHER:
; Line 1871
	push	DWORD PTR _exp_str$1$[esp+32]
	mov	edx, DWORD PTR _cipher$[esp+32]
	push	edi
	push	esi
	push	ebp
	push	ebx
	push	DWORD PTR _ver$1$[esp+52]
	push	DWORD PTR [edx+4]
	push	DWORD PTR ?format@?1??SSL_CIPHER_description@@9@9
	push	ecx
	push	eax
	call	_BIO_snprintf
; Line 1874
	mov	eax, DWORD PTR _buf$[esp+68]
	add	esp, 40					; 00000028H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1875
	add	esp, 16					; 00000010H
	ret	0
$LN93@SSL_CIPHER:
	DD	$LN16@SSL_CIPHER
	DD	$LN17@SSL_CIPHER
	DD	$LN18@SSL_CIPHER
	DD	$LN20@SSL_CIPHER
	DD	$LN19@SSL_CIPHER
	DD	$LN27@SSL_CIPHER
$LN86@SSL_CIPHER:
	DB	0
	DB	1
	DB	5
	DB	2
	DB	5
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
$LN94@SSL_CIPHER:
	DD	$LN28@SSL_CIPHER
	DD	$LN29@SSL_CIPHER
	DD	$LN33@SSL_CIPHER
	DD	$LN30@SSL_CIPHER
	DD	$LN32@SSL_CIPHER
	DD	$LN39@SSL_CIPHER
$LN87@SSL_CIPHER:
	DB	0
	DB	1
	DB	5
	DB	2
	DB	5
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
$LN95@SSL_CIPHER:
	DD	$LN40@SSL_CIPHER
	DD	$LN41@SSL_CIPHER
	DD	$LN42@SSL_CIPHER
	DD	$LN43@SSL_CIPHER
	DD	$LN44@SSL_CIPHER
	DD	$LN45@SSL_CIPHER
	DD	$LN46@SSL_CIPHER
	DD	$LN54@SSL_CIPHER
$LN88@SSL_CIPHER:
	DB	0
	DB	1
	DB	7
	DB	2
	DB	7
	DB	7
	DB	7
	DB	3
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
$LN96@SSL_CIPHER:
	DD	$LN55@SSL_CIPHER
	DD	$LN56@SSL_CIPHER
	DD	$LN61@SSL_CIPHER
	DD	$LN60@SSL_CIPHER
	DD	$LN57@SSL_CIPHER
	DD	$LN58@SSL_CIPHER
	DD	$LN59@SSL_CIPHER
	DD	$LN62@SSL_CIPHER
$LN89@SSL_CIPHER:
	DB	0
	DB	1
	DB	7
	DB	2
	DB	7
	DB	7
	DB	7
	DB	3
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
_SSL_CIPHER_description ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CIPHER_get_id
_TEXT	SEGMENT
_c$ = 8							; size = 4
_SSL_CIPHER_get_id PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1915
	mov	eax, DWORD PTR _c$[esp-4]
	mov	eax, DWORD PTR [eax+8]
; Line 1916
	ret	0
_SSL_CIPHER_get_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CIPHER_get_name
_TEXT	SEGMENT
_c$ = 8							; size = 4
_SSL_CIPHER_get_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1895
	mov	eax, DWORD PTR _c$[esp-4]
	test	eax, eax
	je	SHORT $LN2@SSL_CIPHER
; Line 1896
	mov	eax, DWORD PTR [eax+4]
; Line 1898
	ret	0
$LN2@SSL_CIPHER:
; Line 1897
	mov	eax, OFFSET ??_C@_06DIOMAMDA@?$CINONE?$CJ?$AA@
; Line 1898
	ret	0
_SSL_CIPHER_get_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CIPHER_get_version
_TEXT	SEGMENT
_c$ = 8							; size = 4
_SSL_CIPHER_get_version PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1881
	mov	eax, DWORD PTR _c$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@SSL_CIPHER
; Line 1882
	mov	eax, OFFSET ??_C@_06DIOMAMDA@?$CINONE?$CJ?$AA@
; Line 1890
	ret	0
$LN2@SSL_CIPHER:
; Line 1883
	movzx	ecx, BYTE PTR [eax+11]
; Line 1884
	cmp	ecx, 3
	jne	SHORT $LN3@SSL_CIPHER
; Line 1885
	mov	eax, OFFSET ??_C@_0M@EGHBBHFM@TLSv1?1SSLv3?$AA@
; Line 1890
	ret	0
$LN3@SSL_CIPHER:
; Line 1886
	cmp	ecx, 2
	mov	eax, OFFSET ??_C@_05NHFKDGAI@SSLv2?$AA@
	mov	edx, OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	cmovne	eax, edx
; Line 1890
	ret	0
_SSL_CIPHER_get_version ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SSL_CIPHER_get_bits
_TEXT	SEGMENT
_c$ = 8							; size = 4
_alg_bits$ = 12						; size = 4
_SSL_CIPHER_get_bits PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssl_ciph.c
; Line 1905
	mov	ecx, DWORD PTR _c$[esp-4]
	test	ecx, ecx
	je	SHORT $LN5@SSL_CIPHER
; Line 1906
	mov	edx, DWORD PTR _alg_bits$[esp-4]
	test	edx, edx
	je	SHORT $LN3@SSL_CIPHER
; Line 1907
	mov	eax, DWORD PTR [ecx+44]
	mov	DWORD PTR [edx], eax
$LN3@SSL_CIPHER:
; Line 1910
	mov	eax, DWORD PTR [ecx+40]
; Line 1911
	ret	0
$LN5@SSL_CIPHER:
; Line 1910
	xor	eax, eax
; Line 1911
	ret	0
_SSL_CIPHER_get_bits ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_i2d_ASN1_bio_stream
PUBLIC	_PEM_write_bio_ASN1_stream
PUBLIC	_SMIME_write_ASN1
PUBLIC	_SMIME_read_ASN1
PUBLIC	_SMIME_crlf_copy
PUBLIC	_SMIME_text
PUBLIC	??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@ ; `string'
PUBLIC	??_C@_0BE@JOAPMNHH@?9?9?9?9?9BEGIN?5?$CFs?9?9?9?9?9?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@BEJKDKBL@?9?9?9?9?9END?5?$CFs?9?9?9?9?9?6?$AA@ ; `string'
PUBLIC	??_C@_01IHBHIGKO@?0?$AA@			; `string'
PUBLIC	??_C@_04PGHFOLLE@sha1?$AA@			; `string'
PUBLIC	??_C@_03PKBIKOHH@md5?$AA@			; `string'
PUBLIC	??_C@_07LDMAFAJ@sha?9256?$AA@			; `string'
PUBLIC	??_C@_07IJGOJDLN@sha?9384?$AA@			; `string'
PUBLIC	??_C@_07PFIOFAGI@sha?9512?$AA@			; `string'
PUBLIC	??_C@_0N@FJDLKGKL@gostr3411?994?$AA@		; `string'
PUBLIC	??_C@_07CIFAGBMG@unknown?$AA@			; `string'
PUBLIC	??_C@_09DFGCBALL@smime?4p7m?$AA@		; `string'
PUBLIC	??_C@_0BF@GKPLIGCF@application?1x?9pkcs7?9?$AA@	; `string'
PUBLIC	??_C@_0BD@NDADAIF@application?1pkcs7?9?$AA@	; `string'
PUBLIC	??_C@_02PCIJFNDE@?$AN?6?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BE@MBODPAJ@MIME?9Version?3?51?40?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CA@OLICOBKO@Content?9Type?3?5multipart?1signed?$DL?$AA@ ; `string'
PUBLIC	??_C@_0BJ@LMOEKNCM@?5protocol?$DN?$CC?$CFssignature?$CC?$DL?$AA@ ; `string'
PUBLIC	??_C@_09DJGEKGKI@?5micalg?$DN?$CC?$AA@		; `string'
PUBLIC	??_C@_0BJ@PGDHPNJG@?$CC?$DL?5boundary?$DN?$CC?9?9?9?9?$CFs?$CC?$CFs?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CF@PFAGFGFE@This?5is?5an?5S?1MIME?5signed?5message@ ; `string'
PUBLIC	??_C@_0L@CNHJFJFM@?9?9?9?9?9?9?$CFs?$CFs?$AA@	; `string'
PUBLIC	??_C@_0N@LEAPAFNA@?$CFs?9?9?9?9?9?9?$CFs?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BL@IBDMLFLD@Content?9Type?3?5?$CFssignature?$DL?$AA@ ; `string'
PUBLIC	??_C@_0BE@BMNPFHLD@?5name?$DN?$CCsmime?4p7s?$CC?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CE@LMBKLCNI@Content?9Transfer?9Encoding?3?5base6@ ; `string'
PUBLIC	??_C@_0CB@JNLOJFLI@Content?9Disposition?3?5attachment?$DL@ ; `string'
PUBLIC	??_C@_0BK@OFJEPDGB@?5filename?$DN?$CCsmime?4p7s?$CC?$CFs?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BB@CEFPDGPA@?$CFs?9?9?9?9?9?9?$CFs?9?9?$CFs?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0P@KCEEPGAP@enveloped?9data?$AA@		; `string'
PUBLIC	??_C@_0P@JEJBLIHN@signed?9receipt?$AA@		; `string'
PUBLIC	??_C@_0M@MHALIMFG@signed?9data?$AA@		; `string'
PUBLIC	??_C@_0L@IFNGEJCO@certs?9only?$AA@		; `string'
PUBLIC	??_C@_0BA@DFPMGHIN@compressed?9data?$AA@	; `string'
PUBLIC	??_C@_09DAOBJECN@smime?4p7z?$AA@		; `string'
PUBLIC	??_C@_0BB@OFJOJND@?5filename?$DN?$CC?$CFs?$CC?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BG@GOHJPKDF@Content?9Type?3?5?$CFsmime?$DL?$AA@ ; `string'
PUBLIC	??_C@_0BA@ICJPMDJA@?5smime?9type?$DN?$CFs?$DL?$AA@ ; `string'
PUBLIC	??_C@_0N@LOHHOGEF@?5name?$DN?$CC?$CFs?$CC?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0CG@FGBKIPJD@Content?9Transfer?9Encoding?3?5base6@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0N@MCOKKOFB@content?9type?$AA@		; `string'
PUBLIC	??_C@_0BB@ILCPDBF@multipart?1signed?$AA@	; `string'
PUBLIC	??_C@_08KIKGFOKI@boundary?$AA@			; `string'
PUBLIC	??_C@_0BO@KCNJHHFC@application?1x?9pkcs7?9signature?$AA@ ; `string'
PUBLIC	??_C@_0BM@INAPNOAN@application?1pkcs7?9signature?$AA@ ; `string'
PUBLIC	??_C@_06BPMLCLKK@type?3?5?$AA@			; `string'
PUBLIC	??_C@_0BJ@FHHCEEOK@application?1x?9pkcs7?9mime?$AA@ ; `string'
PUBLIC	??_C@_0BH@CABCCFDD@application?1pkcs7?9mime?$AA@ ; `string'
PUBLIC	??_C@_0BN@PPPPFNNH@Content?9Type?3?5text?1plain?$AN?6?$AN?6?$AA@ ; `string'
PUBLIC	??_C@_0L@NPNLKGOJ@text?1plain?$AA@		; `string'
PUBLIC	??_C@_02BAABKJLB@?9?9?$AA@			; `string'
PUBLIC	__xmm@0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
PUBLIC	__xmm@0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f
PUBLIC	__xmm@30303030303030303030303030303030
PUBLIC	__xmm@37373737373737373737373737373737
PUBLIC	__xmm@ffffffffffffffffffffffffffffffff
EXTRN	__imp__isupper:PROC
EXTRN	__imp__isspace:PROC
EXTRN	__imp__tolower:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_find:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_vfree:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_gets:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_push:PROC
EXTRN	_BIO_pop:PROC
EXTRN	_BIO_s_mem:PROC
EXTRN	_BIO_f_buffer:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_ASN1_item_d2i_bio:PROC
EXTRN	_ASN1_item_i2d_bio:PROC
EXTRN	_BIO_new_NDEF:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_BIO_f_base64:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT __xmm@ffffffffffffffffffffffffffffffff
CONST	SEGMENT
__xmm@ffffffffffffffffffffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@37373737373737373737373737373737
CONST	SEGMENT
__xmm@37373737373737373737373737373737 DB '7777777777777777'
CONST	ENDS
;	COMDAT __xmm@30303030303030303030303030303030
CONST	SEGMENT
__xmm@30303030303030303030303030303030 DB '0000000000000000'
CONST	ENDS
;	COMDAT __xmm@0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f
CONST	SEGMENT
__xmm@0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f DB 0fH, 0fH, 0fH, 0fH, 0fH, 0fH, 0fH
	DB	0fH, 0fH, 0fH, 0fH, 0fH, 0fH, 0fH, 0fH, 0fH
CONST	ENDS
;	COMDAT __xmm@0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
CONST	SEGMENT
__xmm@0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a DB 0aH, 0aH, 0aH, 0aH, 0aH, 0aH, 0aH
	DB	0aH, 0aH, 0aH, 0aH, 0aH, 0aH, 0aH, 0aH, 0aH
CONST	ENDS
;	COMDAT ??_C@_02BAABKJLB@?9?9?$AA@
CONST	SEGMENT
??_C@_02BAABKJLB@?9?9?$AA@ DB '--', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NPNLKGOJ@text?1plain?$AA@
CONST	SEGMENT
??_C@_0L@NPNLKGOJ@text?1plain?$AA@ DB 'text/plain', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PPPPFNNH@Content?9Type?3?5text?1plain?$AN?6?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BN@PPPPFNNH@Content?9Type?3?5text?1plain?$AN?6?$AN?6?$AA@ DB 'Cont'
	DB	'ent-Type: text/plain', 0dH, 0aH, 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CABCCFDD@application?1pkcs7?9mime?$AA@
CONST	SEGMENT
??_C@_0BH@CABCCFDD@application?1pkcs7?9mime?$AA@ DB 'application/pkcs7-mi'
	DB	'me', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FHHCEEOK@application?1x?9pkcs7?9mime?$AA@
CONST	SEGMENT
??_C@_0BJ@FHHCEEOK@application?1x?9pkcs7?9mime?$AA@ DB 'application/x-pkc'
	DB	's7-mime', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPMLCLKK@type?3?5?$AA@
CONST	SEGMENT
??_C@_06BPMLCLKK@type?3?5?$AA@ DB 'type: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@INAPNOAN@application?1pkcs7?9signature?$AA@
CONST	SEGMENT
??_C@_0BM@INAPNOAN@application?1pkcs7?9signature?$AA@ DB 'application/pkc'
	DB	's7-signature', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KCNJHHFC@application?1x?9pkcs7?9signature?$AA@
CONST	SEGMENT
??_C@_0BO@KCNJHHFC@application?1x?9pkcs7?9signature?$AA@ DB 'application/'
	DB	'x-pkcs7-signature', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08KIKGFOKI@boundary?$AA@
CONST	SEGMENT
??_C@_08KIKGFOKI@boundary?$AA@ DB 'boundary', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ILCPDBF@multipart?1signed?$AA@
CONST	SEGMENT
??_C@_0BB@ILCPDBF@multipart?1signed?$AA@ DB 'multipart/signed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MCOKKOFB@content?9type?$AA@
CONST	SEGMENT
??_C@_0N@MCOKKOFB@content?9type?$AA@ DB 'content-type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FGBKIPJD@Content?9Transfer?9Encoding?3?5base6@
CONST	SEGMENT
??_C@_0CG@FGBKIPJD@Content?9Transfer?9Encoding?3?5base6@ DB 'Content-Tran'
	DB	'sfer-Encoding: base64%s%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LOHHOGEF@?5name?$DN?$CC?$CFs?$CC?$CFs?$AA@
CONST	SEGMENT
??_C@_0N@LOHHOGEF@?5name?$DN?$CC?$CFs?$CC?$CFs?$AA@ DB ' name="%s"%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ICJPMDJA@?5smime?9type?$DN?$CFs?$DL?$AA@
CONST	SEGMENT
??_C@_0BA@ICJPMDJA@?5smime?9type?$DN?$CFs?$DL?$AA@ DB ' smime-type=%s;', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GOHJPKDF@Content?9Type?3?5?$CFsmime?$DL?$AA@
CONST	SEGMENT
??_C@_0BG@GOHJPKDF@Content?9Type?3?5?$CFsmime?$DL?$AA@ DB 'Content-Type: '
	DB	'%smime;', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OFJOJND@?5filename?$DN?$CC?$CFs?$CC?$CFs?$AA@
CONST	SEGMENT
??_C@_0BB@OFJOJND@?5filename?$DN?$CC?$CFs?$CC?$CFs?$AA@ DB ' filename="%s'
	DB	'"%s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09DAOBJECN@smime?4p7z?$AA@
CONST	SEGMENT
??_C@_09DAOBJECN@smime?4p7z?$AA@ DB 'smime.p7z', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DFPMGHIN@compressed?9data?$AA@
CONST	SEGMENT
??_C@_0BA@DFPMGHIN@compressed?9data?$AA@ DB 'compressed-data', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IFNGEJCO@certs?9only?$AA@
CONST	SEGMENT
??_C@_0L@IFNGEJCO@certs?9only?$AA@ DB 'certs-only', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHALIMFG@signed?9data?$AA@
CONST	SEGMENT
??_C@_0M@MHALIMFG@signed?9data?$AA@ DB 'signed-data', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JEJBLIHN@signed?9receipt?$AA@
CONST	SEGMENT
??_C@_0P@JEJBLIHN@signed?9receipt?$AA@ DB 'signed-receipt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KCEEPGAP@enveloped?9data?$AA@
CONST	SEGMENT
??_C@_0P@KCEEPGAP@enveloped?9data?$AA@ DB 'enveloped-data', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CEFPDGPA@?$CFs?9?9?9?9?9?9?$CFs?9?9?$CFs?$CFs?$AA@
CONST	SEGMENT
??_C@_0BB@CEFPDGPA@?$CFs?9?9?9?9?9?9?$CFs?9?9?$CFs?$CFs?$AA@ DB '%s------'
	DB	'%s--%s%s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OFJEPDGB@?5filename?$DN?$CCsmime?4p7s?$CC?$CFs?$CFs?$AA@
CONST	SEGMENT
??_C@_0BK@OFJEPDGB@?5filename?$DN?$CCsmime?4p7s?$CC?$CFs?$CFs?$AA@ DB ' f'
	DB	'ilename="smime.p7s"%s%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JNLOJFLI@Content?9Disposition?3?5attachment?$DL@
CONST	SEGMENT
??_C@_0CB@JNLOJFLI@Content?9Disposition?3?5attachment?$DL@ DB 'Content-Di'
	DB	'sposition: attachment;', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LMBKLCNI@Content?9Transfer?9Encoding?3?5base6@
CONST	SEGMENT
??_C@_0CE@LMBKLCNI@Content?9Transfer?9Encoding?3?5base6@ DB 'Content-Tran'
	DB	'sfer-Encoding: base64%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BMNPFHLD@?5name?$DN?$CCsmime?4p7s?$CC?$CFs?$AA@
CONST	SEGMENT
??_C@_0BE@BMNPFHLD@?5name?$DN?$CCsmime?4p7s?$CC?$CFs?$AA@ DB ' name="smim'
	DB	'e.p7s"%s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IBDMLFLD@Content?9Type?3?5?$CFssignature?$DL?$AA@
CONST	SEGMENT
??_C@_0BL@IBDMLFLD@Content?9Type?3?5?$CFssignature?$DL?$AA@ DB 'Content-T'
	DB	'ype: %ssignature;', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LEAPAFNA@?$CFs?9?9?9?9?9?9?$CFs?$CFs?$AA@
CONST	SEGMENT
??_C@_0N@LEAPAFNA@?$CFs?9?9?9?9?9?9?$CFs?$CFs?$AA@ DB '%s------%s%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CNHJFJFM@?9?9?9?9?9?9?$CFs?$CFs?$AA@
CONST	SEGMENT
??_C@_0L@CNHJFJFM@?9?9?9?9?9?9?$CFs?$CFs?$AA@ DB '------%s%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PFAGFGFE@This?5is?5an?5S?1MIME?5signed?5message@
CONST	SEGMENT
??_C@_0CF@PFAGFGFE@This?5is?5an?5S?1MIME?5signed?5message@ DB 'This is an'
	DB	' S/MIME signed message%s%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PGDHPNJG@?$CC?$DL?5boundary?$DN?$CC?9?9?9?9?$CFs?$CC?$CFs?$CFs?$AA@
CONST	SEGMENT
??_C@_0BJ@PGDHPNJG@?$CC?$DL?5boundary?$DN?$CC?9?9?9?9?$CFs?$CC?$CFs?$CFs?$AA@ DB '"'
	DB	'; boundary="----%s"%s%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09DJGEKGKI@?5micalg?$DN?$CC?$AA@
CONST	SEGMENT
??_C@_09DJGEKGKI@?5micalg?$DN?$CC?$AA@ DB ' micalg="', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LMOEKNCM@?5protocol?$DN?$CC?$CFssignature?$CC?$DL?$AA@
CONST	SEGMENT
??_C@_0BJ@LMOEKNCM@?5protocol?$DN?$CC?$CFssignature?$CC?$DL?$AA@ DB ' pro'
	DB	'tocol="%ssignature";', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OLICOBKO@Content?9Type?3?5multipart?1signed?$DL?$AA@
CONST	SEGMENT
??_C@_0CA@OLICOBKO@Content?9Type?3?5multipart?1signed?$DL?$AA@ DB 'Conten'
	DB	't-Type: multipart/signed;', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MBODPAJ@MIME?9Version?3?51?40?$CFs?$AA@
CONST	SEGMENT
??_C@_0BE@MBODPAJ@MIME?9Version?3?51?40?$CFs?$AA@ DB 'MIME-Version: 1.0%s'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PCIJFNDE@?$AN?6?$AA@
CONST	SEGMENT
??_C@_02PCIJFNDE@?$AN?6?$AA@ DB 0dH, 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NDADAIF@application?1pkcs7?9?$AA@
CONST	SEGMENT
??_C@_0BD@NDADAIF@application?1pkcs7?9?$AA@ DB 'application/pkcs7-', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GKPLIGCF@application?1x?9pkcs7?9?$AA@
CONST	SEGMENT
??_C@_0BF@GKPLIGCF@application?1x?9pkcs7?9?$AA@ DB 'application/x-pkcs7-', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DFGCBALL@smime?4p7m?$AA@
CONST	SEGMENT
??_C@_09DFGCBALL@smime?4p7m?$AA@ DB 'smime.p7m', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CIFAGBMG@unknown?$AA@
CONST	SEGMENT
??_C@_07CIFAGBMG@unknown?$AA@ DB 'unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FJDLKGKL@gostr3411?994?$AA@
CONST	SEGMENT
??_C@_0N@FJDLKGKL@gostr3411?994?$AA@ DB 'gostr3411-94', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PFIOFAGI@sha?9512?$AA@
CONST	SEGMENT
??_C@_07PFIOFAGI@sha?9512?$AA@ DB 'sha-512', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IJGOJDLN@sha?9384?$AA@
CONST	SEGMENT
??_C@_07IJGOJDLN@sha?9384?$AA@ DB 'sha-384', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LDMAFAJ@sha?9256?$AA@
CONST	SEGMENT
??_C@_07LDMAFAJ@sha?9256?$AA@ DB 'sha-256', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03PKBIKOHH@md5?$AA@
CONST	SEGMENT
??_C@_03PKBIKOHH@md5?$AA@ DB 'md5', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04PGHFOLLE@sha1?$AA@
CONST	SEGMENT
??_C@_04PGHFOLLE@sha1?$AA@ DB 'sha1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0?$AA@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0?$AA@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BEJKDKBL@?9?9?9?9?9END?5?$CFs?9?9?9?9?9?6?$AA@
CONST	SEGMENT
??_C@_0BC@BEJKDKBL@?9?9?9?9?9END?5?$CFs?9?9?9?9?9?6?$AA@ DB '-----END %s-'
	DB	'----', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JOAPMNHH@?9?9?9?9?9BEGIN?5?$CFs?9?9?9?9?9?6?$AA@
CONST	SEGMENT
??_C@_0BE@JOAPMNHH@?9?9?9?9?9BEGIN?5?$CFs?9?9?9?9?9?6?$AA@ DB '-----BEGIN'
	DB	' %s-----', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@ DB '.\crypto\asn1\a'
	DB	'sn_mime.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_write_micalg
_TEXT	SEGMENT
_micstr$1 = -8						; size = 4
_have_unknown$1$ = -4					; size = 4
_out$ = 8						; size = 4
_mdalgs$ = 12						; size = 4
_asn1_write_micalg PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 202
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 207
	mov	edi, DWORD PTR _mdalgs$[esp+20]
	xor	eax, eax
	push	edi
	mov	DWORD PTR _have_unknown$1$[esp+28], eax
	xor	ebp, ebp
	xor	ebx, ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN27@asn1_write
	mov	esi, DWORD PTR _out$[esp+20]
$LL4@asn1_write:
; Line 208
	test	ebp, ebp
	je	SHORT $LN7@asn1_write
; Line 209
	push	1
	push	OFFSET ??_C@_01IHBHIGKO@?0?$AA@
	push	esi
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN7@asn1_write:
; Line 211
	push	ebx
	push	edi
	mov	ebp, 1
	call	_sk_value
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	mov	edi, eax
; Line 212
	push	edi
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 20					; 00000014H
; Line 213
	test	eax, eax
	je	SHORT $LN10@asn1_write
	mov	eax, DWORD PTR [eax+72]
	test	eax, eax
	je	SHORT $LN10@asn1_write
; Line 216
	lea	ecx, DWORD PTR _micstr$1[esp+24]
	push	ecx
	push	0
	push	2
	push	0
	call	eax
	add	esp, 16					; 00000010H
; Line 217
	test	eax, eax
	jle	SHORT $LN9@asn1_write
; Line 218
	push	DWORD PTR _micstr$1[esp+24]
	push	esi
	call	_BIO_puts
; Line 219
	push	DWORD PTR _micstr$1[esp+32]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
; Line 220
	jmp	SHORT $LN2@asn1_write
$LN9@asn1_write:
; Line 222
	cmp	eax, -2					; fffffffeH
	jne	$LN28@asn1_write
$LN10@asn1_write:
; Line 225
	cmp	edi, 673				; 000002a1H
	jg	SHORT $LN21@asn1_write
	je	SHORT $LN14@asn1_write
	cmp	edi, 4
	je	SHORT $LN12@asn1_write
	cmp	edi, 64					; 00000040H
	je	SHORT $LN11@asn1_write
	cmp	edi, 672				; 000002a0H
	jne	SHORT $LN17@asn1_write
; Line 235
	push	OFFSET ??_C@_07LDMAFAJ@sha?9256?$AA@
; Line 236
	jmp	SHORT $LN29@asn1_write
$LN11@asn1_write:
; Line 227
	push	OFFSET ??_C@_04PGHFOLLE@sha1?$AA@
; Line 228
	jmp	SHORT $LN29@asn1_write
$LN12@asn1_write:
; Line 231
	push	OFFSET ??_C@_03PKBIKOHH@md5?$AA@
; Line 232
	jmp	SHORT $LN29@asn1_write
$LN14@asn1_write:
; Line 239
	push	OFFSET ??_C@_07IJGOJDLN@sha?9384?$AA@
; Line 240
	jmp	SHORT $LN29@asn1_write
$LN21@asn1_write:
; Line 225
	cmp	edi, 674				; 000002a2H
	je	SHORT $LN15@asn1_write
	cmp	edi, 809				; 00000329H
	je	SHORT $LN16@asn1_write
$LN17@asn1_write:
; Line 252
	cmp	DWORD PTR _have_unknown$1$[esp+24], 0
	je	SHORT $LN18@asn1_write
; Line 253
	xor	ebp, ebp
	jmp	SHORT $LN2@asn1_write
$LN18@asn1_write:
; Line 255
	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	push	esi
	call	_BIO_puts
; Line 256
	mov	DWORD PTR _have_unknown$1$[esp+32], ebp
	jmp	SHORT $LN30@asn1_write
$LN15@asn1_write:
; Line 243
	push	OFFSET ??_C@_07PFIOFAGI@sha?9512?$AA@
$LN29@asn1_write:
	push	esi
	call	_BIO_puts
$LN30@asn1_write:
	add	esp, 8
$LN2@asn1_write:
; Line 207
	mov	edi, DWORD PTR _mdalgs$[esp+20]
	inc	ebx
	push	edi
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL4@asn1_write
$LN27@asn1_write:
; Line 266
	mov	eax, 1
$err$32:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 268
	add	esp, 8
	ret	0
$LN16@asn1_write:
; Line 247
	push	OFFSET ??_C@_0N@FJDLKGKL@gostr3411?994?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
$LN28@asn1_write:
; Line 266
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 268
	add	esp, 8
	ret	0
_asn1_write_micalg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _b64_read_asn1
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_it$ = 12						; size = 4
_b64_read_asn1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 182
	push	esi
; Line 185
	call	_BIO_f_base64
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN2@b64_read_a
; Line 186
	push	186					; 000000baH
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	65					; 00000041H
	push	209					; 000000d1H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 187
	xor	eax, eax
	pop	esi
; Line 197
	ret	0
$LN2@b64_read_a:
	push	ebx
	push	edi
; Line 189
	push	DWORD PTR _bio$[esp+8]
	push	esi
	call	_BIO_push
	mov	edi, eax
; Line 190
	push	0
	push	edi
	push	DWORD PTR _it$[esp+24]
	call	_ASN1_item_d2i_bio
	mov	ebx, eax
	add	esp, 20					; 00000014H
; Line 191
	test	ebx, ebx
	jne	SHORT $LN3@b64_read_a
; Line 192
	push	192					; 000000c0H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	110					; 0000006eH
	push	209					; 000000d1H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN3@b64_read_a:
; Line 193
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
; Line 194
	push	edi
	call	_BIO_pop
; Line 195
	push	esi
	call	_BIO_free
	add	esp, 24					; 00000018H
; Line 196
	mov	eax, ebx
	pop	edi
	pop	ebx
	pop	esi
; Line 197
	ret	0
_b64_read_asn1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _B64_write_ASN1
_TEXT	SEGMENT
_out$ = 8						; size = 4
_val$ = 12						; size = 4
_in$ = 16						; size = 4
_flags$ = 20						; size = 4
_it$ = 24						; size = 4
_B64_write_ASN1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 150
	push	ebx
; Line 153
	call	_BIO_f_base64
	push	eax
	call	_BIO_new
	mov	ebx, eax
	add	esp, 4
; Line 154
	test	ebx, ebx
	jne	SHORT $LN2@B64_write_
; Line 155
	push	155					; 0000009bH
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	65					; 00000041H
	push	210					; 000000d2H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 156
	xor	eax, eax
	pop	ebx
; Line 167
	ret	0
$LN2@B64_write_:
	push	esi
	push	edi
; Line 161
	push	DWORD PTR _out$[esp+8]
	push	ebx
	call	_BIO_push
; Line 162
	push	DWORD PTR _it$[esp+16]
	mov	edi, eax
	push	DWORD PTR _flags$[esp+20]
	push	DWORD PTR _in$[esp+24]
	push	DWORD PTR _val$[esp+28]
	push	edi
	call	_i2d_ASN1_bio_stream
; Line 163
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	mov	esi, eax
	call	_BIO_ctrl
; Line 164
	push	edi
	call	_BIO_pop
; Line 165
	push	ebx
	call	_BIO_free
	add	esp, 52					; 00000034H
; Line 166
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 167
	ret	0
_B64_write_ASN1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mime_hdr_free
_TEXT	SEGMENT
_hdr$ = 8						; size = 4
_mime_hdr_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 915
	push	esi
; Line 916
	mov	esi, DWORD PTR _hdr$[esp]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@mime_hdr_f
; Line 917
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN2@mime_hdr_f:
; Line 918
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN3@mime_hdr_f
; Line 919
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@mime_hdr_f:
; Line 920
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN4@mime_hdr_f
; Line 921
	push	OFFSET _mime_param_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN4@mime_hdr_f:
; Line 922
	push	esi
	call	_CRYPTO_free
	add	esp, 4
	pop	esi
; Line 923
	ret	0
_mime_hdr_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mime_param_find
_TEXT	SEGMENT
_param$ = -8						; size = 8
_hdr$ = 8						; size = 4
_name$ = 12						; size = 4
_mime_param_find PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 904
	mov	eax, 8
	call	__chkstk
; Line 907
	mov	eax, DWORD PTR _name$[esp+4]
	push	esi
; Line 908
	mov	esi, DWORD PTR _hdr$[esp+8]
	mov	DWORD PTR _param$[esp+12], eax
	lea	eax, DWORD PTR _param$[esp+12]
	push	eax
	push	DWORD PTR [esi+8]
	call	_sk_find
	add	esp, 8
; Line 909
	test	eax, eax
	jns	SHORT $LN2@mime_param
; Line 910
	xor	eax, eax
	pop	esi
; Line 912
	add	esp, 8
	ret	0
$LN2@mime_param:
; Line 911
	push	eax
	push	DWORD PTR [esi+8]
	call	_sk_value
	add	esp, 8
	pop	esi
; Line 912
	add	esp, 8
	ret	0
_mime_param_find ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mime_hdr_find
_TEXT	SEGMENT
_htmp$ = -12						; size = 12
_hdrs$ = 8						; size = 4
_name$ = 12						; size = 4
_mime_hdr_find PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 893
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 896
	mov	eax, DWORD PTR _name$[esp+8]
	mov	DWORD PTR _htmp$[esp+12], eax
; Line 897
	lea	eax, DWORD PTR _htmp$[esp+12]
	push	eax
	push	DWORD PTR _hdrs$[esp+12]
	call	_sk_find
	add	esp, 8
; Line 898
	test	eax, eax
	jns	SHORT $LN2@mime_hdr_f
; Line 899
	xor	eax, eax
; Line 901
	add	esp, 12					; 0000000cH
	ret	0
$LN2@mime_hdr_f:
; Line 900
	push	eax
	push	DWORD PTR _hdrs$[esp+12]
	call	_sk_value
	add	esp, 8
; Line 901
	add	esp, 12					; 0000000cH
	ret	0
_mime_hdr_find ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _strip_eol
_TEXT	SEGMENT
_linebuf$ = 8						; size = 4
_plen$ = 12						; size = 4
_strip_eol PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 965
	mov	eax, DWORD PTR _linebuf$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR _plen$[esp+4]
	dec	eax
	xor	esi, esi
	mov	ecx, DWORD PTR [edi]
	add	eax, ecx
	test	ecx, ecx
	jle	SHORT $LN15@strip_eol
$LL4@strip_eol:
; Line 966
	mov	dl, BYTE PTR [eax]
; Line 967
	cmp	dl, 10					; 0000000aH
	jne	SHORT $LN5@strip_eol
; Line 968
	mov	esi, 1
	jmp	SHORT $LN2@strip_eol
$LN5@strip_eol:
; Line 969
	cmp	dl, 13					; 0000000dH
	jne	SHORT $LN15@strip_eol
$LN2@strip_eol:
; Line 965
	dec	ecx
	dec	eax
	test	ecx, ecx
	jg	SHORT $LL4@strip_eol
$LN15@strip_eol:
; Line 972
	mov	DWORD PTR [edi], ecx
; Line 973
	mov	eax, esi
	pop	edi
	pop	esi
; Line 974
	ret	0
_strip_eol ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _multi_split
_TEXT	SEGMENT
_first$1$ = -1046					; size = 1
_part$1$ = -1045					; size = 1
_eol$1$ = -1044						; size = 4
_bio$GSCopy$1$ = -1040					; size = 4
_parts$1$ = -1036					; size = 4
_bound$GSCopy$1$ = -1032				; size = 4
_linebuf$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_bio$ = 8						; size = 4
_bound$ = 12						; size = 4
_ret$ = 16						; size = 4
_multi_split PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 596
	mov	eax, 1048				; 00000418H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1048], eax
	mov	eax, DWORD PTR _bio$[esp+1044]
	push	ebx
	push	ebp
	mov	DWORD PTR _bio$GSCopy$1$[esp+1056], eax
	mov	eax, DWORD PTR _bound$[esp+1052]
; Line 604
	mov	ebp, eax
	push	esi
	mov	esi, DWORD PTR _ret$[esp+1056]
	push	edi
	mov	DWORD PTR _bound$GSCopy$1$[esp+1064], eax
	lea	ecx, DWORD PTR [ebp+1]
	mov	DWORD PTR _eol$1$[esp+1064], 0
	xor	edi, edi
$LL32@multi_spli:
	mov	al, BYTE PTR [ebp]
	inc	ebp
	test	al, al
	jne	SHORT $LL32@multi_spli
; Line 605
	xor	bl, bl
; Line 607
	mov	BYTE PTR _first$1$[esp+1064], 1
	sub	ebp, ecx
	mov	BYTE PTR _part$1$[esp+1064], bl
; Line 608
	call	_sk_new_null
	mov	DWORD PTR _parts$1$[esp+1064], eax
; Line 609
	mov	DWORD PTR [esi], eax
; Line 610
	lea	eax, DWORD PTR _linebuf$[esp+1064]
	push	1024					; 00000400H
	push	eax
	push	DWORD PTR _bio$GSCopy$1$[esp+1072]
	call	_BIO_gets
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jle	$LN3@multi_spli
	npad	8
$LL2@multi_spli:
; Line 611
	push	ebp
	push	DWORD PTR _bound$GSCopy$1$[esp+1068]
	lea	eax, DWORD PTR _linebuf$[esp+1072]
	push	esi
	push	eax
	call	_mime_bound_check
	add	esp, 16					; 00000010H
; Line 612
	cmp	al, 1
	jne	SHORT $LN4@multi_spli
; Line 614
	inc	bl
	mov	BYTE PTR _first$1$[esp+1064], al
	mov	BYTE PTR _part$1$[esp+1064], bl
	jmp	$LN13@multi_spli
$LN4@multi_spli:
; Line 615
	cmp	al, 2
	je	$LN26@multi_spli
; Line 618
	test	bl, bl
	je	$LN13@multi_spli
; Line 963
	xor	ebx, ebx
; Line 965
	test	esi, esi
	jle	SHORT $LN33@multi_spli
	lea	ecx, DWORD PTR _linebuf$[esp+1064]
$LL18@multi_spli:
; Line 966
	mov	al, BYTE PTR [ecx+esi-1]
; Line 967
	cmp	al, 10					; 0000000aH
	jne	SHORT $LN19@multi_spli
; Line 968
	mov	ebx, 1
	jmp	SHORT $LN16@multi_spli
$LN19@multi_spli:
; Line 969
	cmp	al, 13					; 0000000dH
	jne	SHORT $LN33@multi_spli
$LN16@multi_spli:
; Line 965
	dec	esi
	test	esi, esi
	jg	SHORT $LL18@multi_spli
$LN33@multi_spli:
; Line 621
	cmp	BYTE PTR _first$1$[esp+1064], 0
	je	SHORT $LN9@multi_spli
; Line 622
	mov	BYTE PTR _first$1$[esp+1064], 0
; Line 623
	test	edi, edi
	je	SHORT $LN11@multi_spli
; Line 624
	push	edi
	push	DWORD PTR _parts$1$[esp+1068]
	call	_sk_push
	add	esp, 8
$LN11@multi_spli:
; Line 625
	call	_BIO_s_mem
	push	eax
	call	_BIO_new
; Line 626
	push	0
	push	0
	mov	edi, eax
	push	130					; 00000082H
	push	edi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
	jmp	SHORT $LN12@multi_spli
$LN9@multi_spli:
; Line 627
	cmp	DWORD PTR _eol$1$[esp+1064], 0
	je	SHORT $LN12@multi_spli
; Line 628
	push	2
	push	OFFSET ??_C@_02PCIJFNDE@?$AN?6?$AA@
	push	edi
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN12@multi_spli:
; Line 629
	mov	DWORD PTR _eol$1$[esp+1064], ebx
; Line 630
	test	esi, esi
	je	SHORT $LN34@multi_spli
; Line 631
	push	esi
	lea	eax, DWORD PTR _linebuf$[esp+1068]
	push	eax
	push	edi
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN34@multi_spli:
	mov	bl, BYTE PTR _part$1$[esp+1064]
$LN13@multi_spli:
; Line 610
	push	1024					; 00000400H
	lea	eax, DWORD PTR _linebuf$[esp+1068]
	push	eax
	push	DWORD PTR _bio$GSCopy$1$[esp+1072]
	call	_BIO_gets
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jg	$LL2@multi_spli
$LN3@multi_spli:
; Line 634
	xor	eax, eax
$LN1@multi_spli:
; Line 635
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1064]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1048				; 00000418H
	ret	0
$LN26@multi_spli:
; Line 616
	push	edi
	push	DWORD PTR _parts$1$[esp+1068]
	call	_sk_push
	add	esp, 8
; Line 617
	mov	eax, 1
	jmp	SHORT $LN1@multi_spli
_multi_split ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mime_bound_check
_TEXT	SEGMENT
_line$ = 8						; size = 4
_linelen$ = 12						; size = 4
_bound$ = 16						; size = 4
_blen$ = 20						; size = 4
_mime_bound_check PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 942
	mov	ecx, DWORD PTR _linelen$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR _line$[esp]
	push	esi
	cmp	ecx, -1
	jne	SHORT $LN2@mime_bound
; Line 943
	mov	ecx, ebx
	lea	edx, DWORD PTR [ecx+1]
$LL9@mime_bound:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL9@mime_bound
	sub	ecx, edx
$LN2@mime_bound:
; Line 944
	mov	esi, DWORD PTR _blen$[esp+4]
	cmp	esi, -1
	jne	SHORT $LN3@mime_bound
; Line 945
	mov	esi, DWORD PTR _bound$[esp+4]
	lea	edx, DWORD PTR [esi+1]
	npad	3
$LL10@mime_bound:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL10@mime_bound
	sub	esi, edx
$LN3@mime_bound:
; Line 947
	lea	eax, DWORD PTR [esi+2]
	cmp	eax, ecx
	jle	SHORT $LN4@mime_bound
; Line 948
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 957
	ret	0
$LN4@mime_bound:
	push	edi
; Line 950
	mov	edi, DWORD PTR __imp__strncmp
	push	2
	push	OFFSET ??_C@_02BAABKJLB@?9?9?$AA@
	push	ebx
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@mime_bound
	push	esi
	push	DWORD PTR _bound$[esp+12]
	lea	eax, DWORD PTR [ebx+2]
	push	eax
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@mime_bound
; Line 951
	push	2
	lea	eax, DWORD PTR [ebx+2]
	add	eax, esi
	push	OFFSET ??_C@_02BAABKJLB@?9?9?$AA@
	push	eax
	call	edi
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 2
	pop	edi
	pop	esi
	pop	ebx
; Line 957
	ret	0
$LN7@mime_bound:
	pop	edi
	pop	esi
; Line 956
	xor	eax, eax
	pop	ebx
; Line 957
	ret	0
_mime_bound_check ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mime_param_free
_TEXT	SEGMENT
_param$ = 8						; size = 4
_mime_param_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 926
	push	esi
; Line 927
	mov	esi, DWORD PTR _param$[esp]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@mime_param
; Line 928
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN2@mime_param:
; Line 929
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN3@mime_param
; Line 930
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@mime_param:
; Line 931
	push	esi
	call	_CRYPTO_free
	add	esp, 4
	pop	esi
; Line 932
	ret	0
_mime_param_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mime_param_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_mime_param_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 885
	mov	eax, DWORD PTR _a$[esp-4]
	mov	ecx, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax]
	test	edx, edx
	je	SHORT $LN3@mime_param
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@mime_param
$LL5@mime_param:
; Line 887
	mov	cl, BYTE PTR [edx]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN6@mime_param
	test	cl, cl
	je	SHORT $LN7@mime_param
	mov	cl, BYTE PTR [edx+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN6@mime_param
	add	edx, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL5@mime_param
$LN7@mime_param:
	xor	eax, eax
; Line 888
	ret	0
$LN6@mime_param:
; Line 887
	sbb	eax, eax
	or	eax, 1
; Line 888
	ret	0
$LN3@mime_param:
; Line 886
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], ecx
	setne	cl
	xor	eax, eax
	test	edx, edx
	setne	al
	sub	eax, ecx
; Line 888
	ret	0
_mime_param_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mime_hdr_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_mime_hdr_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 876
	mov	eax, DWORD PTR _a$[esp-4]
	mov	ecx, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax]
	test	edx, edx
	je	SHORT $LN3@mime_hdr_c
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN3@mime_hdr_c
$LL5@mime_hdr_c:
; Line 879
	mov	cl, BYTE PTR [edx]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN6@mime_hdr_c
	test	cl, cl
	je	SHORT $LN7@mime_hdr_c
	mov	cl, BYTE PTR [edx+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN6@mime_hdr_c
	add	edx, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL5@mime_hdr_c
$LN7@mime_hdr_c:
	xor	eax, eax
; Line 880
	ret	0
$LN6@mime_hdr_c:
; Line 879
	sbb	eax, eax
	or	eax, 1
; Line 880
	ret	0
$LN3@mime_hdr_c:
; Line 877
	mov	eax, DWORD PTR [ecx]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], ecx
	setne	cl
	xor	eax, eax
	test	edx, edx
	setne	al
	sub	eax, ecx
; Line 880
	ret	0
_mime_hdr_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mime_parse_hdr
_TEXT	SEGMENT
_ntmp$1$ = -1048					; size = 4
_mhdr$1$ = -1044					; size = 4
_save_state$1$ = -1040					; size = 4
_headers$1$ = -1036					; size = 4
_bio$GSCopy$1$ = -1032					; size = 4
_linebuf$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_bio$ = 8						; size = 4
_mime_parse_hdr PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 648
	mov	eax, 1048				; 00000418H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1048], eax
	push	ebx
	mov	ebx, DWORD PTR _bio$[esp+1048]
	push	esi
; Line 652
	xor	esi, esi
	mov	DWORD PTR _bio$GSCopy$1$[esp+1056], ebx
; Line 656
	push	OFFSET _mime_hdr_cmp
	mov	DWORD PTR _mhdr$1$[esp+1060], esi
	mov	DWORD PTR _save_state$1$[esp+1060], esi
	call	_sk_new
	add	esp, 4
	mov	DWORD PTR _headers$1$[esp+1056], eax
; Line 657
	test	eax, eax
	jne	SHORT $LN63@mime_parse
	pop	esi
	pop	ebx
; Line 751
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1048]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1048				; 00000418H
	ret	0
$LN63@mime_parse:
; Line 659
	push	1024					; 00000400H
	lea	eax, DWORD PTR _linebuf$[esp+1060]
	push	eax
	push	ebx
	call	_BIO_gets
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN84@mime_parse
	push	ebp
	mov	ebp, DWORD PTR __imp__isspace
	push	edi
	npad	2
$LL2@mime_parse:
; Line 661
	test	esi, esi
	je	SHORT $LN10@mime_parse
	movzx	eax, BYTE PTR _linebuf$[esp+1064]
	push	eax
	call	ebp
	add	esp, 4
; Line 662
	mov	edi, 3
	test	eax, eax
	jne	SHORT $LN11@mime_parse
$LN10@mime_parse:
; Line 664
	mov	edi, 1
$LN11@mime_parse:
; Line 667
	mov	al, BYTE PTR _linebuf$[esp+1064]
	lea	ebx, DWORD PTR _linebuf$[esp+1064]
	mov	DWORD PTR _ntmp$1$[esp+1064], 0
	mov	esi, ebx
	test	al, al
	je	$LN5@mime_parse
	mov	ebp, DWORD PTR _mhdr$1$[esp+1064]
	npad	5
$LL6@mime_parse:
	cmp	al, 13					; 0000000dH
	je	$LN83@mime_parse
	cmp	al, 10					; 0000000aH
	je	$LN83@mime_parse
; Line 675
	lea	ecx, DWORD PTR [edi-1]
	cmp	ecx, 5
	ja	$LN4@mime_parse
	jmp	DWORD PTR $LN91@mime_parse[ecx*4]
$LN12@mime_parse:
; Line 677
	cmp	al, 58					; 0000003aH
	jne	$LN4@mime_parse
; Line 678
	mov	edi, 2
$LN88@mime_parse:
; Line 755
	push	esi
; Line 679
	mov	BYTE PTR [ebx], 0
; Line 755
	call	_strip_start
	push	eax
	call	_strip_end
	add	esp, 8
; Line 680
	mov	DWORD PTR _ntmp$1$[esp+1064], eax
; Line 681
	lea	esi, DWORD PTR [ebx+1]
; Line 683
	jmp	$LN4@mime_parse
$LN14@mime_parse:
; Line 686
	cmp	al, 59					; 0000003bH
	jne	SHORT $LN15@mime_parse
; Line 755
	push	esi
; Line 688
	mov	BYTE PTR [ebx], 0
; Line 755
	call	_strip_start
	push	eax
	call	_strip_end
; Line 689
	push	eax
	push	DWORD PTR _ntmp$1$[esp+1076]
	call	_mime_hdr_new
	mov	ebp, eax
; Line 690
	push	ebp
	push	DWORD PTR _headers$1$[esp+1084]
	call	_sk_push
	add	esp, 24					; 00000018H
; Line 691
	mov	DWORD PTR _ntmp$1$[esp+1064], 0
; Line 692
	lea	esi, DWORD PTR [ebx+1]
; Line 693
	mov	edi, 3
	jmp	SHORT $LN4@mime_parse
$LN15@mime_parse:
; Line 694
	cmp	al, 40					; 00000028H
	jne	SHORT $LN4@mime_parse
; Line 695
	mov	DWORD PTR _save_state$1$[esp+1064], edi
; Line 696
	mov	edi, 6
; Line 698
	jmp	SHORT $LN4@mime_parse
$LN18@mime_parse:
; Line 701
	cmp	al, 41					; 00000029H
	jne	SHORT $LN4@mime_parse
; Line 702
	mov	edi, DWORD PTR _save_state$1$[esp+1064]
; Line 704
	jmp	SHORT $LN4@mime_parse
$LN20@mime_parse:
; Line 707
	cmp	al, 61					; 0000003dH
	jne	SHORT $LN4@mime_parse
; Line 708
	mov	edi, 4
; Line 713
	jmp	SHORT $LN88@mime_parse
$LN22@mime_parse:
; Line 716
	cmp	al, 59					; 0000003bH
	jne	SHORT $LN23@mime_parse
; Line 755
	push	esi
; Line 717
	mov	edi, 3
; Line 718
	mov	BYTE PTR [ebx], 0
; Line 755
	call	_strip_start
	push	eax
	call	_strip_end
; Line 719
	push	eax
	push	DWORD PTR _ntmp$1$[esp+1076]
	push	ebp
	call	_mime_hdr_addparam
	add	esp, 20					; 00000014H
; Line 720
	mov	DWORD PTR _ntmp$1$[esp+1064], 0
	lea	esi, DWORD PTR [ebx+1]
	jmp	SHORT $LN4@mime_parse
$LN23@mime_parse:
; Line 722
	cmp	al, 34					; 00000022H
	jne	SHORT $LN15@mime_parse
; Line 724
	mov	edi, 5
	jmp	SHORT $LN4@mime_parse
$LN28@mime_parse:
; Line 732
	cmp	al, 34					; 00000022H
	mov	eax, 4
	cmove	edi, eax
$LN4@mime_parse:
; Line 668
	mov	al, BYTE PTR [ebx+1]
	inc	ebx
	test	al, al
	jne	$LL6@mime_parse
$LN83@mime_parse:
	mov	DWORD PTR _mhdr$1$[esp+1064], ebp
	mov	ebp, DWORD PTR __imp__isspace
$LN5@mime_parse:
; Line 740
	cmp	edi, 2
	jne	SHORT $LN30@mime_parse
; Line 763
	mov	al, BYTE PTR [esi]
	test	al, al
	je	SHORT $LN47@mime_parse
	npad	7
$LL48@mime_parse:
; Line 764
	cmp	al, 34					; 00000022H
	je	SHORT $LN67@mime_parse
; Line 771
	movzx	eax, al
	push	eax
	call	ebp
	add	esp, 4
	test	eax, eax
	je	SHORT $LN45@mime_parse
; Line 763
	mov	al, BYTE PTR [esi+1]
	inc	esi
	test	al, al
	jne	SHORT $LL48@mime_parse
$LN47@mime_parse:
; Line 774
	xor	esi, esi
$LN45@mime_parse:
; Line 755
	push	esi
	call	_strip_end
; Line 741
	push	eax
	push	DWORD PTR _ntmp$1$[esp+1072]
	call	_mime_hdr_new
	mov	esi, eax
; Line 742
	push	esi
	push	DWORD PTR _headers$1$[esp+1080]
	mov	DWORD PTR _mhdr$1$[esp+1084], esi
	call	_sk_push
	add	esp, 20					; 00000014H
	jmp	SHORT $LN32@mime_parse
$LN67@mime_parse:
; Line 766
	lea	eax, DWORD PTR [esi+1]
	xor	esi, esi
	cmp	BYTE PTR [eax], 0
	cmovne	esi, eax
; Line 769
	jmp	SHORT $LN45@mime_parse
$LN30@mime_parse:
; Line 743
	cmp	edi, 4
	jne	SHORT $LN85@mime_parse
; Line 763
	mov	al, BYTE PTR [esi]
	test	al, al
	je	SHORT $LN57@mime_parse
$LL58@mime_parse:
; Line 764
	cmp	al, 34					; 00000022H
	je	SHORT $LN69@mime_parse
; Line 771
	movzx	eax, al
	push	eax
	call	ebp
	add	esp, 4
	test	eax, eax
	je	SHORT $LN55@mime_parse
; Line 763
	mov	al, BYTE PTR [esi+1]
	inc	esi
	test	al, al
	jne	SHORT $LL58@mime_parse
$LN57@mime_parse:
; Line 774
	xor	esi, esi
$LN55@mime_parse:
; Line 755
	push	esi
	call	_strip_end
; Line 744
	mov	esi, DWORD PTR _mhdr$1$[esp+1068]
	push	eax
	push	DWORD PTR _ntmp$1$[esp+1072]
	push	esi
	call	_mime_hdr_addparam
	add	esp, 16					; 00000010H
	jmp	SHORT $LN32@mime_parse
$LN69@mime_parse:
; Line 766
	lea	eax, DWORD PTR [esi+1]
	xor	esi, esi
	cmp	BYTE PTR [eax], 0
	cmovne	esi, eax
; Line 769
	jmp	SHORT $LN55@mime_parse
$LN85@mime_parse:
	mov	esi, DWORD PTR _mhdr$1$[esp+1064]
$LN32@mime_parse:
; Line 745
	lea	eax, DWORD PTR _linebuf$[esp+1064]
	cmp	ebx, eax
	je	SHORT $LN87@mime_parse
; Line 659
	mov	ebx, DWORD PTR _bio$GSCopy$1$[esp+1064]
	push	1024					; 00000400H
	push	eax
	push	ebx
	call	_BIO_gets
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	$LL2@mime_parse
$LN87@mime_parse:
	pop	edi
	pop	ebp
$LN84@mime_parse:
; Line 751
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1056]
	mov	eax, DWORD PTR _headers$1$[esp+1056]
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1048				; 00000418H
	ret	0
	npad	2
$LN91@mime_parse:
	DD	$LN12@mime_parse
	DD	$LN14@mime_parse
	DD	$LN20@mime_parse
	DD	$LN22@mime_parse
	DD	$LN28@mime_parse
	DD	$LN18@mime_parse
_mime_parse_hdr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mime_hdr_addparam
_TEXT	SEGMENT
_mhdr$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_mime_hdr_addparam PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 844
	mov	eax, DWORD PTR _name$[esp-4]
	push	ebx
	push	esi
	test	eax, eax
	je	SHORT $LN5@mime_hdr_a
; Line 845
	push	eax
	call	_BUF_strdup
	mov	ebx, eax
	add	esp, 4
; Line 846
	test	ebx, ebx
	je	SHORT $LN18@mime_hdr_a
; Line 848
	cmp	BYTE PTR [ebx], 0
	mov	esi, ebx
	je	SHORT $LN6@mime_hdr_a
	push	ebp
	mov	ebp, DWORD PTR __imp__tolower
	push	edi
	npad	8
$LL4@mime_hdr_a:
; Line 849
	movzx	edi, BYTE PTR [esi]
; Line 850
	push	edi
	call	DWORD PTR __imp__isupper
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@mime_hdr_a
; Line 851
	push	edi
	call	ebp
	add	esp, 4
; Line 852
	mov	BYTE PTR [esi], al
$LN2@mime_hdr_a:
; Line 848
	inc	esi
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LL4@mime_hdr_a
; Line 855
	pop	edi
	pop	ebp
	jmp	SHORT $LN6@mime_hdr_a
$LN5@mime_hdr_a:
; Line 856
	xor	ebx, ebx
$LN6@mime_hdr_a:
; Line 857
	mov	eax, DWORD PTR _value$[esp+4]
	test	eax, eax
	je	SHORT $LN9@mime_hdr_a
; Line 858
	push	eax
	call	_BUF_strdup
	mov	esi, eax
	add	esp, 4
; Line 859
	test	esi, esi
	jne	SHORT $LN10@mime_hdr_a
$LN18@mime_hdr_a:
	pop	esi
; Line 860
	xor	eax, eax
	pop	ebx
; Line 871
	ret	0
$LN9@mime_hdr_a:
; Line 862
	xor	esi, esi
$LN10@mime_hdr_a:
; Line 864
	push	864					; 00000360H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	8
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 865
	test	eax, eax
	je	SHORT $LN18@mime_hdr_a
; Line 867
	mov	DWORD PTR [eax], ebx
; Line 868
	mov	DWORD PTR [eax+4], esi
; Line 869
	push	eax
	mov	eax, DWORD PTR _mhdr$[esp+8]
	push	DWORD PTR [eax+8]
	call	_sk_push
	add	esp, 8
; Line 870
	mov	eax, 1
	pop	esi
	pop	ebx
; Line 871
	ret	0
_mime_hdr_addparam ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mime_hdr_new
_TEXT	SEGMENT
_tmpval$1$ = -4						; size = 4
_tmpname$1$ = 8						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
_mime_hdr_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 801
	mov	eax, 4
	call	__chkstk
; Line 805
	mov	eax, DWORD PTR _name$[esp]
	push	ebx
	mov	ebx, DWORD PTR __imp__tolower
	push	ebp
	mov	ebp, DWORD PTR __imp__isupper
	push	esi
	push	edi
	test	eax, eax
	je	SHORT $LN8@mime_hdr_n
; Line 806
	push	eax
	call	_BUF_strdup
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR _tmpname$1$[esp+16], ecx
	test	ecx, ecx
	jne	SHORT $LN10@mime_hdr_n
$LN27@mime_hdr_n:
	pop	edi
	pop	esi
	pop	ebp
; Line 807
	xor	eax, eax
	pop	ebx
; Line 837
	pop	ecx
	ret	0
$LN10@mime_hdr_n:
; Line 808
	cmp	BYTE PTR [ecx], 0
	mov	esi, ecx
	je	SHORT $LN9@mime_hdr_n
$LL4@mime_hdr_n:
; Line 809
	movzx	edi, BYTE PTR [esi]
; Line 810
	push	edi
	call	ebp
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@mime_hdr_n
; Line 811
	push	edi
	call	ebx
	add	esp, 4
; Line 812
	mov	BYTE PTR [esi], al
$LN2@mime_hdr_n:
; Line 808
	inc	esi
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LL4@mime_hdr_n
; Line 815
	jmp	SHORT $LN9@mime_hdr_n
$LN8@mime_hdr_n:
; Line 816
	mov	DWORD PTR _tmpname$1$[esp+16], 0
$LN9@mime_hdr_n:
; Line 817
	mov	eax, DWORD PTR _value$[esp+16]
	test	eax, eax
	je	SHORT $LN12@mime_hdr_n
; Line 818
	push	eax
	call	_BUF_strdup
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR _tmpval$1$[esp+20], edi
	test	edi, edi
	je	SHORT $LN27@mime_hdr_n
; Line 820
	cmp	BYTE PTR [edi], 0
	mov	esi, edi
	je	SHORT $LN13@mime_hdr_n
	npad	5
$LL7@mime_hdr_n:
; Line 821
	movzx	edi, BYTE PTR [esi]
; Line 822
	push	edi
	call	ebp
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@mime_hdr_n
; Line 823
	push	edi
	call	ebx
	add	esp, 4
; Line 824
	mov	BYTE PTR [esi], al
$LN5@mime_hdr_n:
; Line 820
	inc	esi
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LL7@mime_hdr_n
; Line 827
	mov	edi, DWORD PTR _tmpval$1$[esp+20]
	jmp	SHORT $LN13@mime_hdr_n
$LN12@mime_hdr_n:
; Line 828
	xor	edi, edi
$LN13@mime_hdr_n:
; Line 829
	push	829					; 0000033dH
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	12					; 0000000cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 830
	test	esi, esi
	je	$LN27@mime_hdr_n
; Line 832
	mov	eax, DWORD PTR _tmpname$1$[esp+16]
; Line 834
	push	OFFSET _mime_param_cmp
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], edi
	call	_sk_new
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
	xor	ecx, ecx
	test	eax, eax
	cmove	esi, ecx
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 837
	pop	ecx
	ret	0
_mime_hdr_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _strip_end
_TEXT	SEGMENT
_name$ = 8						; size = 4
_strip_end PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 779
	push	edi
; Line 781
	mov	edi, DWORD PTR _name$[esp]
	test	edi, edi
	jne	SHORT $LN5@strip_end
; Line 782
	xor	eax, eax
	pop	edi
; Line 798
	ret	0
$LN5@strip_end:
; Line 784
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL16@strip_end:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL16@strip_end
	push	ebx
	push	esi
	sub	ecx, edx
	lea	esi, DWORD PTR [edi-1]
	add	esi, ecx
	cmp	esi, edi
	jb	SHORT $LN3@strip_end
	mov	ebx, DWORD PTR __imp__isspace
	npad	4
$LL4@strip_end:
; Line 785
	mov	al, BYTE PTR [esi]
; Line 786
	cmp	al, 34					; 00000022H
	je	SHORT $LN12@strip_end
; Line 792
	movzx	eax, al
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@strip_end
; Line 793
	mov	BYTE PTR [esi], 0
	dec	esi
	cmp	esi, edi
	jae	SHORT $LL4@strip_end
$LN3@strip_end:
	pop	esi
	pop	ebx
; Line 797
	xor	eax, eax
	pop	edi
; Line 798
	ret	0
$LN12@strip_end:
; Line 787
	lea	eax, DWORD PTR [esi-1]
	cmp	eax, edi
	je	SHORT $LN3@strip_end
; Line 789
	mov	BYTE PTR [esi], 0
$LN8@strip_end:
	pop	esi
	pop	ebx
; Line 790
	mov	eax, edi
	pop	edi
; Line 798
	ret	0
_strip_end ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _strip_start
_TEXT	SEGMENT
_name$ = 8						; size = 4
_strip_start PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 760
	push	esi
; Line 763
	mov	esi, DWORD PTR _name$[esp]
	push	edi
	mov	al, BYTE PTR [esi]
	test	al, al
	je	SHORT $LN3@strip_star
	mov	edi, DWORD PTR __imp__isspace
$LL4@strip_star:
; Line 764
	cmp	al, 34					; 00000022H
	je	SHORT $LN10@strip_star
; Line 771
	movzx	eax, al
	push	eax
	call	edi
	add	esp, 4
	test	eax, eax
	je	SHORT $LN11@strip_star
; Line 763
	mov	al, BYTE PTR [esi+1]
	inc	esi
	test	al, al
	jne	SHORT $LL4@strip_star
$LN3@strip_star:
	pop	edi
; Line 774
	xor	eax, eax
	pop	esi
; Line 775
	ret	0
$LN11@strip_star:
	pop	edi
; Line 772
	mov	eax, esi
	pop	esi
; Line 775
	ret	0
$LN10@strip_star:
; Line 766
	lea	ecx, DWORD PTR [esi+1]
	xor	eax, eax
	cmp	BYTE PTR [ecx], al
	pop	edi
	cmovne	eax, ecx
	pop	esi
; Line 775
	ret	0
_strip_start ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _strip_ends
_TEXT	SEGMENT
_name$ = 8						; size = 4
_strip_ends PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 755
	push	DWORD PTR _name$[esp-4]
	call	_strip_start
	add	esp, 4
	mov	DWORD PTR _name$[esp-4], eax
	jmp	_strip_end
_strip_ends ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_output_data
_TEXT	SEGMENT
_sarg$ = -12						; size = 12
_out$ = 8						; size = 4
_data$ = 12						; size = 4
_val$ = 16						; size = 4
_flags$ = 20						; size = 4
_it$ = 24						; size = 4
_asn1_output_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 366
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	mov	ebx, DWORD PTR _flags$[esp+12]
	mov	eax, ebx
	push	ebp
; Line 368
	mov	ebp, DWORD PTR _it$[esp+16]
	and	eax, 32832				; 00008040H
	push	esi
	mov	esi, DWORD PTR [ebp+16]
	cmp	eax, 64					; 00000040H
; Line 376
	jne	$LN5@asn1_outpu
; Line 381
	test	esi, esi
	je	$LN7@asn1_outpu
	cmp	DWORD PTR [esi+16], 0
	je	$LN7@asn1_outpu
; Line 386
	push	edi
	mov	edi, DWORD PTR _out$[esp+24]
; Line 392
	lea	eax, DWORD PTR _sarg$[esp+28]
	push	eax
	push	ebp
	lea	eax, DWORD PTR _val$[esp+32]
	mov	DWORD PTR _sarg$[esp+36], edi
	push	eax
	mov	DWORD PTR _sarg$[esp+44], 0
	mov	DWORD PTR _sarg$[esp+48], 0
	mov	eax, DWORD PTR [esi+16]
	push	12					; 0000000cH
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN8@asn1_outpu
; Line 393
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 412
	add	esp, 12					; 0000000cH
	ret	0
$LN8@asn1_outpu:
; Line 396
	push	ebx
	push	DWORD PTR _sarg$[esp+36]
	push	DWORD PTR _data$[esp+32]
	call	_SMIME_crlf_copy
; Line 399
	lea	eax, DWORD PTR _sarg$[esp+40]
	push	eax
	push	ebp
	lea	eax, DWORD PTR _val$[esp+44]
	push	eax
	mov	eax, DWORD PTR [esi+16]
	push	13					; 0000000dH
	call	eax
; Line 404
	mov	esi, DWORD PTR _sarg$[esp+60]
	xor	ecx, ecx
	add	esp, 28					; 0000001cH
	mov	ebx, 1
	test	eax, eax
	cmovle	ebx, ecx
	cmp	esi, edi
	je	SHORT $LN3@asn1_outpu
	npad	3
$LL2@asn1_outpu:
; Line 405
	push	esi
	call	_BIO_pop
; Line 406
	push	DWORD PTR _sarg$[esp+36]
	mov	esi, eax
	call	_BIO_free
	add	esp, 8
; Line 407
	mov	DWORD PTR _sarg$[esp+32], esi
	cmp	esi, edi
	jne	SHORT $LL2@asn1_outpu
$LN3@asn1_outpu:
	pop	edi
	pop	esi
	pop	ebp
; Line 410
	mov	eax, ebx
	pop	ebx
; Line 412
	add	esp, 12					; 0000000cH
	ret	0
$LN7@asn1_outpu:
; Line 382
	push	382					; 0000017eH
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	202					; 000000caH
	push	214					; 000000d6H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 383
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
; Line 412
	add	esp, 12					; 0000000cH
	ret	0
$LN5@asn1_outpu:
; Line 377
	push	ebx
	push	DWORD PTR _out$[esp+24]
	push	DWORD PTR _data$[esp+28]
	call	_SMIME_crlf_copy
	add	esp, 12					; 0000000cH
; Line 378
	mov	eax, 1
	pop	esi
	pop	ebp
	pop	ebx
; Line 412
	add	esp, 12					; 0000000cH
	ret	0
_asn1_output_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SMIME_text
_TEXT	SEGMENT
_htmp$1 = -4112						; size = 12
_iobuf$ = -4100						; size = 4096
__$ArrayPad$ = -4					; size = 4
_in$ = 8						; size = 4
_out$ = 12						; size = 4
_SMIME_text PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 561
	mov	eax, 4112				; 00001010H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+4112], eax
	push	ebp
	mov	ebp, DWORD PTR _out$[esp+4112]
	push	esi
	push	edi
	mov	edi, DWORD PTR _in$[esp+4120]
; Line 567
	push	edi
	call	_mime_parse_hdr
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN4@SMIME_text
; Line 568
	push	568					; 00000238H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	207					; 000000cfH
	push	213					; 000000d5H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 569
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
; Line 588
	mov	ecx, DWORD PTR __$ArrayPad$[esp+4112]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 4112				; 00001010H
	ret	0
$LN4@SMIME_text:
	push	ebx
; Line 897
	lea	eax, DWORD PTR _htmp$1[esp+4128]
	mov	DWORD PTR _htmp$1[esp+4128], OFFSET ??_C@_0N@MCOKKOFB@content?9type?$AA@
	push	eax
	push	esi
	call	_sk_find
	add	esp, 8
; Line 898
	test	eax, eax
	js	$LN6@SMIME_text
; Line 900
	push	eax
	push	esi
	call	_sk_value
	mov	ebx, eax
	add	esp, 8
; Line 571
	test	ebx, ebx
	je	$LN6@SMIME_text
	mov	ecx, DWORD PTR [ebx+4]
	test	ecx, ecx
	je	$LN6@SMIME_text
; Line 576
	mov	edx, OFFSET ??_C@_0L@NPNLKGOJ@text?1plain?$AA@
$LL17@SMIME_text:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN18@SMIME_text
	test	al, al
	je	SHORT $LN19@SMIME_text
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN18@SMIME_text
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL17@SMIME_text
$LN19@SMIME_text:
	xor	eax, eax
	jmp	SHORT $LN20@SMIME_text
$LN18@SMIME_text:
	sbb	eax, eax
	or	eax, 1
$LN20@SMIME_text:
	test	eax, eax
	je	SHORT $LN7@SMIME_text
; Line 577
	push	577					; 00000241H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	205					; 000000cdH
	push	213					; 000000d5H
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 578
	push	DWORD PTR [ebx+4]
	push	OFFSET ??_C@_06BPMLCLKK@type?3?5?$AA@
	push	2
	call	_ERR_add_error_data
; Line 579
	push	OFFSET _mime_hdr_free
	push	esi
	call	_sk_pop_free
	add	esp, 40					; 00000028H
; Line 580
	jmp	$LN22@SMIME_text
$LN7@SMIME_text:
; Line 582
	push	OFFSET _mime_hdr_free
	push	esi
	call	_sk_pop_free
; Line 583
	push	4096					; 00001000H
	lea	eax, DWORD PTR _iobuf$[esp+4140]
	push	eax
	push	edi
	call	_BIO_read
	mov	ecx, eax
	add	esp, 20					; 00000014H
	test	ecx, ecx
	jle	SHORT $LN3@SMIME_text
	npad	3
$LL2@SMIME_text:
; Line 584
	push	ecx
	lea	eax, DWORD PTR _iobuf$[esp+4132]
	push	eax
	push	ebp
	call	_BIO_write
	push	4096					; 00001000H
	lea	eax, DWORD PTR _iobuf$[esp+4144]
	push	eax
	push	edi
	call	_BIO_read
	mov	ecx, eax
	add	esp, 24					; 00000018H
	test	ecx, ecx
	jg	SHORT $LL2@SMIME_text
$LN3@SMIME_text:
; Line 585
	xor	eax, eax
	test	ecx, ecx
	setns	al
; Line 587
	jmp	SHORT $LN21@SMIME_text
$LN6@SMIME_text:
; Line 572
	push	572					; 0000023cH
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	206					; 000000ceH
	push	213					; 000000d5H
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 573
	push	OFFSET _mime_hdr_free
	push	esi
	call	_sk_pop_free
	add	esp, 28					; 0000001cH
$LN22@SMIME_text:
; Line 574
	xor	eax, eax
$LN21@SMIME_text:
; Line 588
	mov	ecx, DWORD PTR __$ArrayPad$[esp+4128]
	pop	ebx
	pop	edi
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 4112				; 00001010H
	ret	0
_SMIME_text ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SMIME_crlf_copy
_TEXT	SEGMENT
_linebuf$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_in$ = 8						; size = 4
_out$ = 12						; size = 4
_flags$ = 16						; size = 4
_SMIME_crlf_copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 526
	mov	eax, 1028				; 00000404H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1028], eax
	push	ebp
	push	esi
	mov	esi, DWORD PTR _out$[esp+1032]
	push	edi
	mov	edi, DWORD PTR _in$[esp+1036]
; Line 535
	call	_BIO_f_buffer
	push	eax
	call	_BIO_new
	mov	ebp, eax
	add	esp, 4
; Line 536
	test	ebp, ebp
	jne	SHORT $LN6@SMIME_crlf
	pop	edi
	pop	esi
	pop	ebp
; Line 557
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1028]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1028				; 00000404H
	ret	0
$LN6@SMIME_crlf:
; Line 538
	push	esi
	push	ebp
	call	_BIO_push
	mov	esi, eax
	add	esp, 8
; Line 539
	mov	eax, DWORD PTR _flags$[esp+1036]
	test	al, al
	jns	SHORT $LN7@SMIME_crlf
; Line 540
	push	1024					; 00000400H
	lea	eax, DWORD PTR _linebuf$[esp+1044]
	push	eax
	push	edi
	call	_BIO_read
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN5@SMIME_crlf
$LL2@SMIME_crlf:
; Line 541
	push	eax
	lea	eax, DWORD PTR _linebuf$[esp+1044]
	push	eax
	push	esi
	call	_BIO_write
	push	1024					; 00000400H
	lea	eax, DWORD PTR _linebuf$[esp+1056]
	push	eax
	push	edi
	call	_BIO_read
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LL2@SMIME_crlf
; Line 542
	jmp	$LN5@SMIME_crlf
$LN7@SMIME_crlf:
; Line 543
	test	al, 1
	je	SHORT $LN22@SMIME_crlf
; Line 544
	push	OFFSET ??_C@_0BN@PPPPFNNH@Content?9Type?3?5text?1plain?$AN?6?$AN?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
$LN22@SMIME_crlf:
; Line 545
	push	1024					; 00000400H
	lea	eax, DWORD PTR _linebuf$[esp+1044]
	push	eax
	push	edi
	call	_BIO_gets
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN5@SMIME_crlf
	push	ebx
	npad	7
$LL4@SMIME_crlf:
; Line 963
	xor	ebx, ebx
; Line 965
	test	eax, eax
	jle	SHORT $LN34@SMIME_crlf
	lea	edx, DWORD PTR _linebuf$[esp+1044]
	npad	6
$LL16@SMIME_crlf:
; Line 966
	mov	cl, BYTE PTR [edx+eax-1]
; Line 967
	cmp	cl, 10					; 0000000aH
	jne	SHORT $LN17@SMIME_crlf
; Line 968
	mov	ebx, 1
	jmp	SHORT $LN14@SMIME_crlf
$LN17@SMIME_crlf:
; Line 969
	cmp	cl, 13					; 0000000dH
	jne	SHORT $LN33@SMIME_crlf
$LN14@SMIME_crlf:
; Line 965
	dec	eax
	test	eax, eax
	jg	SHORT $LL16@SMIME_crlf
$LN33@SMIME_crlf:
; Line 547
	test	eax, eax
$LN34@SMIME_crlf:
	je	SHORT $LN10@SMIME_crlf
; Line 548
	push	eax
	lea	eax, DWORD PTR _linebuf$[esp+1048]
	push	eax
	push	esi
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN10@SMIME_crlf:
; Line 549
	test	bl, bl
	je	SHORT $LN11@SMIME_crlf
; Line 550
	push	2
	push	OFFSET ??_C@_02PCIJFNDE@?$AN?6?$AA@
	push	esi
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN11@SMIME_crlf:
; Line 545
	push	1024					; 00000400H
	lea	eax, DWORD PTR _linebuf$[esp+1048]
	push	eax
	push	edi
	call	_BIO_gets
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LL4@SMIME_crlf
	pop	ebx
$LN5@SMIME_crlf:
; Line 553
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 554
	push	esi
	call	_BIO_pop
; Line 555
	push	ebp
	call	_BIO_free
; Line 557
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1064]
	add	esp, 24					; 00000018H
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1028				; 00000404H
	ret	0
_SMIME_crlf_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SMIME_read_ASN1
_TEXT	SEGMENT
_asnin$1$ = -24						; size = 4
_parts$ = -24						; size = 4
_param$1 = -20						; size = 8
_htmp$2 = -12						; size = 12
_bio$ = 8						; size = 4
_bcont$ = 12						; size = 4
_it$ = 16						; size = 4
_SMIME_read_ASN1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 421
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 430
	mov	eax, DWORD PTR _bcont$[esp+20]
	mov	DWORD PTR _parts$[esp+24], 0
	test	eax, eax
	je	SHORT $LN2@SMIME_read
; Line 431
	mov	DWORD PTR [eax], 0
$LN2@SMIME_read:
	push	ebp
; Line 433
	mov	ebp, DWORD PTR _bio$[esp+24]
	push	edi
	push	ebp
	call	_mime_parse_hdr
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN3@SMIME_read
; Line 434
	push	434					; 000001b2H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	207					; 000000cfH
	push	212					; 000000d4H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 435
	xor	eax, eax
	pop	edi
	pop	ebp
; Line 522
	add	esp, 24					; 00000018H
	ret	0
$LN3@SMIME_read:
	push	esi
; Line 897
	lea	eax, DWORD PTR _htmp$2[esp+36]
	mov	DWORD PTR _htmp$2[esp+36], OFFSET ??_C@_0N@MCOKKOFB@content?9type?$AA@
	push	eax
	push	edi
	call	_sk_find
	add	esp, 8
; Line 898
	test	eax, eax
	js	$LN5@SMIME_read
; Line 900
	push	eax
	push	edi
	call	_sk_value
	mov	esi, eax
	add	esp, 8
; Line 438
	test	esi, esi
	je	$LN5@SMIME_read
	mov	edx, DWORD PTR [esi+4]
	test	edx, edx
	je	$LN5@SMIME_read
; Line 446
	mov	ecx, OFFSET ??_C@_0BB@ILCPDBF@multipart?1signed?$AA@
	mov	eax, edx
	push	ebx
$LL27@SMIME_read:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [ecx]
	jne	SHORT $LN28@SMIME_read
	test	bl, bl
	je	SHORT $LN29@SMIME_read
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [ecx+1]
	jne	SHORT $LN28@SMIME_read
	add	eax, 2
	add	ecx, 2
	test	bl, bl
	jne	SHORT $LL27@SMIME_read
$LN29@SMIME_read:
	xor	eax, eax
	jmp	SHORT $LN30@SMIME_read
$LN28@SMIME_read:
	sbb	eax, eax
	or	eax, 1
$LN30@SMIME_read:
	test	eax, eax
	jne	$LN6@SMIME_read
; Line 908
	lea	eax, DWORD PTR _param$1[esp+40]
	mov	DWORD PTR _param$1[esp+40], OFFSET ??_C@_08KIKGFOKI@boundary?$AA@
	push	eax
	push	DWORD PTR [esi+8]
	call	_sk_find
	add	esp, 8
; Line 909
	test	eax, eax
	js	$LN8@SMIME_read
; Line 911
	push	eax
	push	DWORD PTR [esi+8]
	call	_sk_value
	add	esp, 8
; Line 449
	test	eax, eax
	je	$LN8@SMIME_read
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	$LN8@SMIME_read
; Line 454
	lea	ecx, DWORD PTR _parts$[esp+40]
	push	ecx
	push	eax
	push	ebp
	call	_multi_split
; Line 455
	push	OFFSET _mime_hdr_free
	push	edi
	mov	esi, eax
	call	_sk_pop_free
	add	esp, 20					; 00000014H
; Line 456
	test	esi, esi
	mov	esi, DWORD PTR _parts$[esp+40]
	je	$LN10@SMIME_read
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	eax, 2
	jne	$LN10@SMIME_read
; Line 463
	push	1
	push	esi
	call	_sk_value
; Line 465
	push	eax
	mov	DWORD PTR _asnin$1$[esp+52], eax
	call	_mime_parse_hdr
	mov	edi, eax
	add	esp, 12					; 0000000cH
	test	edi, edi
	jne	SHORT $LN11@SMIME_read
; Line 466
	push	466					; 000001d2H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	208					; 000000d0H
; Line 468
	jmp	$LN53@SMIME_read
$LN11@SMIME_read:
; Line 473
	push	OFFSET ??_C@_0N@MCOKKOFB@content?9type?$AA@
	push	edi
	call	_mime_hdr_find
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	$LN13@SMIME_read
	mov	ecx, DWORD PTR [ebp+4]
	test	ecx, ecx
	je	$LN13@SMIME_read
; Line 479
	mov	edx, OFFSET ??_C@_0BO@KCNJHHFC@application?1x?9pkcs7?9signature?$AA@
	mov	eax, ecx
	npad	1
$LL31@SMIME_read:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN32@SMIME_read
	test	bl, bl
	je	SHORT $LN33@SMIME_read
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN32@SMIME_read
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL31@SMIME_read
$LN33@SMIME_read:
	xor	eax, eax
	jmp	SHORT $LN34@SMIME_read
$LN32@SMIME_read:
	sbb	eax, eax
	or	eax, 1
$LN34@SMIME_read:
	test	eax, eax
	je	SHORT $LN14@SMIME_read
	mov	eax, OFFSET ??_C@_0BM@INAPNOAN@application?1pkcs7?9signature?$AA@
	npad	2
$LL35@SMIME_read:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN36@SMIME_read
	test	dl, dl
	je	SHORT $LN37@SMIME_read
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN36@SMIME_read
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL35@SMIME_read
$LN37@SMIME_read:
	xor	eax, eax
	jmp	SHORT $LN38@SMIME_read
$LN36@SMIME_read:
	sbb	eax, eax
	or	eax, 1
$LN38@SMIME_read:
	test	eax, eax
	je	SHORT $LN14@SMIME_read
; Line 481
	push	481					; 000001e1H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	213					; 000000d5H
	push	212					; 000000d4H
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 482
	push	DWORD PTR [ebp+4]
	push	OFFSET ??_C@_06BPMLCLKK@type?3?5?$AA@
	push	2
	call	_ERR_add_error_data
; Line 483
	push	OFFSET _mime_hdr_free
	push	edi
	call	_sk_pop_free
; Line 484
	push	OFFSET _BIO_vfree
	push	esi
	call	_sk_pop_free
	add	esp, 48					; 00000030H
; Line 511
	xor	eax, eax
	pop	ebx
	pop	esi
	pop	edi
	pop	ebp
; Line 522
	add	esp, 24					; 00000018H
	ret	0
$LN14@SMIME_read:
; Line 487
	push	OFFSET _mime_hdr_free
	push	edi
	call	_sk_pop_free
; Line 489
	push	DWORD PTR _it$[esp+44]
	mov	ebx, DWORD PTR _asnin$1$[esp+52]
	push	ebx
	call	_b64_read_asn1
	mov	edi, eax
	add	esp, 16					; 00000010H
	test	edi, edi
	jne	SHORT $LN15@SMIME_read
; Line 490
	push	490					; 000001eaH
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	204					; 000000ccH
$LN53@SMIME_read:
	push	212					; 000000d4H
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 491
	push	OFFSET _BIO_vfree
	push	esi
	call	_sk_pop_free
	add	esp, 28					; 0000001cH
; Line 511
	xor	eax, eax
$LN48@SMIME_read:
	pop	ebx
	pop	esi
	pop	edi
	pop	ebp
; Line 522
	add	esp, 24					; 00000018H
	ret	0
$LN15@SMIME_read:
; Line 495
	mov	ebp, DWORD PTR _bcont$[esp+36]
	test	ebp, ebp
	je	SHORT $LN16@SMIME_read
; Line 496
	push	0
	push	esi
	call	_sk_value
; Line 497
	push	ebx
	mov	DWORD PTR [ebp], eax
	call	_BIO_free
; Line 498
	push	esi
	call	_sk_free
	add	esp, 16					; 00000010H
; Line 501
	mov	eax, edi
	pop	ebx
	pop	esi
	pop	edi
	pop	ebp
; Line 522
	add	esp, 24					; 00000018H
	ret	0
$LN16@SMIME_read:
; Line 500
	push	OFFSET _BIO_vfree
	push	esi
	call	_sk_pop_free
	add	esp, 8
; Line 501
	mov	eax, edi
	pop	ebx
	pop	esi
	pop	edi
	pop	ebp
; Line 522
	add	esp, 24					; 00000018H
	ret	0
$LN13@SMIME_read:
; Line 474
	push	OFFSET _mime_hdr_free
	push	edi
	call	_sk_pop_free
; Line 475
	push	475					; 000001dbH
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	212					; 000000d4H
	push	212					; 000000d4H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 28					; 0000001cH
; Line 511
	xor	eax, eax
	pop	ebx
	pop	esi
	pop	edi
	pop	ebp
; Line 522
	add	esp, 24					; 00000018H
	ret	0
$LN10@SMIME_read:
; Line 457
	push	457					; 000001c9H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	210					; 000000d2H
; Line 459
	jmp	$LN53@SMIME_read
$LN8@SMIME_read:
; Line 450
	push	OFFSET _mime_hdr_free
	push	edi
	call	_sk_pop_free
; Line 451
	push	451					; 000001c3H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	211					; 000000d3H
	push	212					; 000000d4H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 28					; 0000001cH
; Line 511
	xor	eax, eax
	pop	ebx
	pop	esi
	pop	edi
	pop	ebp
; Line 522
	add	esp, 24					; 00000018H
	ret	0
$LN6@SMIME_read:
; Line 506
	mov	ecx, OFFSET ??_C@_0BJ@FHHCEEOK@application?1x?9pkcs7?9mime?$AA@
	mov	eax, edx
$LL39@SMIME_read:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [ecx]
	jne	SHORT $LN40@SMIME_read
	test	bl, bl
	je	SHORT $LN41@SMIME_read
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [ecx+1]
	jne	SHORT $LN40@SMIME_read
	add	eax, 2
	add	ecx, 2
	test	bl, bl
	jne	SHORT $LL39@SMIME_read
$LN41@SMIME_read:
	xor	eax, eax
	jmp	SHORT $LN42@SMIME_read
$LN40@SMIME_read:
	sbb	eax, eax
	or	eax, 1
$LN42@SMIME_read:
	test	eax, eax
	je	SHORT $LN18@SMIME_read
	mov	eax, OFFSET ??_C@_0BH@CABCCFDD@application?1pkcs7?9mime?$AA@
	npad	2
$LL43@SMIME_read:
	mov	cl, BYTE PTR [edx]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN44@SMIME_read
	test	cl, cl
	je	SHORT $LN45@SMIME_read
	mov	cl, BYTE PTR [edx+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN44@SMIME_read
	add	edx, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL43@SMIME_read
$LN45@SMIME_read:
	xor	eax, eax
	jmp	SHORT $LN46@SMIME_read
$LN44@SMIME_read:
	sbb	eax, eax
	or	eax, 1
$LN46@SMIME_read:
	test	eax, eax
	je	SHORT $LN18@SMIME_read
; Line 508
	push	508					; 000001fcH
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	205					; 000000cdH
	push	212					; 000000d4H
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 509
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06BPMLCLKK@type?3?5?$AA@
	push	2
	call	_ERR_add_error_data
; Line 510
	push	OFFSET _mime_hdr_free
	push	edi
	call	_sk_pop_free
	add	esp, 40					; 00000028H
; Line 511
	xor	eax, eax
	pop	ebx
	pop	esi
	pop	edi
	pop	ebp
; Line 522
	add	esp, 24					; 00000018H
	ret	0
$LN18@SMIME_read:
; Line 514
	push	OFFSET _mime_hdr_free
	push	edi
	call	_sk_pop_free
; Line 516
	push	DWORD PTR _it$[esp+44]
	push	ebp
	call	_b64_read_asn1
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN48@SMIME_read
; Line 517
	push	517					; 00000205H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	203					; 000000cbH
	push	212					; 000000d4H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	ebx
	pop	esi
	pop	edi
	pop	ebp
; Line 522
	add	esp, 24					; 00000018H
	ret	0
$LN5@SMIME_read:
; Line 439
	push	OFFSET _mime_hdr_free
	push	edi
	call	_sk_pop_free
; Line 440
	push	440					; 000001b8H
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	209					; 000000d1H
	push	212					; 000000d4H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 28					; 0000001cH
; Line 441
	xor	eax, eax
	pop	esi
	pop	edi
	pop	ebp
; Line 522
	add	esp, 24					; 00000018H
	ret	0
_SMIME_read_ASN1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SMIME_write_ASN1
_TEXT	SEGMENT
_cname$1$ = -64						; size = 4
_it$GSCopy$1$ = -60					; size = 4
_val$GSCopy$1$ = -56					; size = 4
_mdalgs$GSCopy$1$ = -52					; size = 4
_mime_prefix$1$ = -48					; size = 4
_data$GSCopy$1$ = -44					; size = 4
_bound$ = -40						; size = 33
__$ArrayPad$ = -4					; size = 4
_bio$ = 8						; size = 4
_val$ = 12						; size = 4
_data$ = 16						; size = 4
_flags$ = 20						; size = 4
_ctype_nid$ = 24					; size = 4
_econt_nid$ = 28					; size = 4
_mdalgs$ = 32						; size = 4
_it$ = 36						; size = 4
_SMIME_write_ASN1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 275
	mov	eax, 64					; 00000040H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+64], eax
	mov	eax, DWORD PTR _val$[esp+60]
; Line 280
	mov	ecx, DWORD PTR _flags$[esp+60]
	mov	edx, DWORD PTR _data$[esp+60]
	mov	DWORD PTR _val$GSCopy$1$[esp+64], eax
	mov	eax, DWORD PTR _mdalgs$[esp+60]
	push	ebx
	mov	DWORD PTR _mdalgs$GSCopy$1$[esp+68], eax
	xor	ebx, ebx
	mov	eax, DWORD PTR _it$[esp+64]
	test	ecx, 1024				; 00000400H
	push	esi
	mov	esi, DWORD PTR _bio$[esp+68]
	push	edi
	mov	DWORD PTR _it$GSCopy$1$[esp+76], eax
	mov	edi, OFFSET ??_C@_0BD@NDADAIF@application?1pkcs7?9?$AA@
	mov	eax, OFFSET ??_C@_0BF@GKPLIGCF@application?1x?9pkcs7?9?$AA@
	mov	DWORD PTR _data$GSCopy$1$[esp+76], edx
	cmove	eax, edi
	mov	DWORD PTR _cname$1$[esp+76], OFFSET ??_C@_09DFGCBALL@smime?4p7m?$AA@
; Line 285
	test	ecx, 2048				; 00000800H
	mov	DWORD PTR _mime_prefix$1$[esp+76], eax
	mov	edi, OFFSET ??_C@_02PCIJFNDE@?$AN?6?$AA@
	mov	eax, OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	cmove	edi, eax
; Line 289
	test	cl, 64					; 00000040H
	je	$LN9@SMIME_writ
	test	edx, edx
	je	$LN9@SMIME_writ
; Line 292
	lea	eax, DWORD PTR _bound$[esp+76]
	push	32					; 00000020H
	push	eax
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	jns	SHORT $LN10@SMIME_writ
$LN45@SMIME_writ:
	pop	edi
	pop	esi
; Line 293
	xor	eax, eax
	pop	ebx
; Line 360
	mov	ecx, DWORD PTR __$ArrayPad$[esp+64]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
$LN10@SMIME_writ:
; Line 295
	movups	xmm3, XMMWORD PTR _bound$[esp+76]
; Line 303
	push	edi
	movaps	xmm2, XMMWORD PTR __xmm@0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
	pand	xmm3, XMMWORD PTR __xmm@0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f
	pcmpgtb	xmm2, xmm3
	mov	BYTE PTR _bound$[esp+112], bl
	pandn	xmm2, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
	movaps	xmm0, xmm3
	paddb	xmm3, XMMWORD PTR __xmm@37373737373737373737373737373737
	movaps	xmm1, xmm2
	paddb	xmm0, XMMWORD PTR __xmm@30303030303030303030303030303030
	pand	xmm3, xmm2
	movups	xmm2, XMMWORD PTR _bound$[esp+96]
	push	OFFSET ??_C@_0BE@MBODPAJ@MIME?9Version?3?51?40?$CFs?$AA@
	pandn	xmm1, xmm0
	pand	xmm2, XMMWORD PTR __xmm@0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f
	por	xmm1, xmm3
	movaps	xmm3, XMMWORD PTR __xmm@0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
	movaps	xmm0, xmm2
	paddb	xmm0, XMMWORD PTR __xmm@30303030303030303030303030303030
	pcmpgtb	xmm3, xmm2
	pandn	xmm3, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
	paddb	xmm2, XMMWORD PTR __xmm@37373737373737373737373737373737
	movups	XMMWORD PTR _bound$[esp+84], xmm1
	push	esi
	movaps	xmm1, xmm3
	pand	xmm2, xmm3
	pandn	xmm1, xmm0
	por	xmm1, xmm2
	movups	XMMWORD PTR _bound$[esp+104], xmm1
	call	_BIO_printf
; Line 304
	push	OFFSET ??_C@_0CA@OLICOBKO@Content?9Type?3?5multipart?1signed?$DL?$AA@
	push	esi
	call	_BIO_printf
; Line 305
	mov	ebx, DWORD PTR _mime_prefix$1$[esp+96]
	push	ebx
	push	OFFSET ??_C@_0BJ@LMOEKNCM@?5protocol?$DN?$CC?$CFssignature?$CC?$DL?$AA@
	push	esi
	call	_BIO_printf
; Line 306
	push	OFFSET ??_C@_09DJGEKGKI@?5micalg?$DN?$CC?$AA@
	push	esi
	call	_BIO_puts
; Line 307
	push	DWORD PTR _mdalgs$GSCopy$1$[esp+116]
	push	esi
	call	_asn1_write_micalg
; Line 308
	push	edi
	push	edi
	lea	eax, DWORD PTR _bound$[esp+132]
	push	eax
	push	OFFSET ??_C@_0BJ@PGDHPNJG@?$CC?$DL?5boundary?$DN?$CC?9?9?9?9?$CFs?$CC?$CFs?$CFs?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 310
	push	edi
	push	edi
	push	OFFSET ??_C@_0CF@PFAGFGFE@This?5is?5an?5S?1MIME?5signed?5message@
	push	esi
	call	_BIO_printf
; Line 313
	push	edi
	lea	eax, DWORD PTR _bound$[esp+96]
	push	eax
	push	OFFSET ??_C@_0L@CNHJFJFM@?9?9?9?9?9?9?$CFs?$CFs?$AA@
	push	esi
	call	_BIO_printf
; Line 314
	push	DWORD PTR _it$GSCopy$1$[esp+108]
	mov	eax, DWORD PTR _flags$[esp+108]
	push	eax
	push	DWORD PTR _val$GSCopy$1$[esp+116]
	push	DWORD PTR _data$GSCopy$1$[esp+120]
	push	esi
	call	_asn1_output_data
	add	esp, 52					; 00000034H
	test	eax, eax
	je	$LN45@SMIME_writ
; Line 316
	push	edi
	lea	eax, DWORD PTR _bound$[esp+80]
	push	eax
	push	edi
	push	OFFSET ??_C@_0N@LEAPAFNA@?$CFs?9?9?9?9?9?9?$CFs?$CFs?$AA@
	push	esi
	call	_BIO_printf
; Line 320
	push	ebx
	push	OFFSET ??_C@_0BL@IBDMLFLD@Content?9Type?3?5?$CFssignature?$DL?$AA@
	push	esi
	call	_BIO_printf
; Line 321
	push	edi
	push	OFFSET ??_C@_0BE@BMNPFHLD@?5name?$DN?$CCsmime?4p7s?$CC?$CFs?$AA@
	push	esi
	call	_BIO_printf
; Line 322
	push	edi
	push	OFFSET ??_C@_0CE@LMBKLCNI@Content?9Transfer?9Encoding?3?5base6@
	push	esi
	call	_BIO_printf
; Line 323
	push	OFFSET ??_C@_0CB@JNLOJFLI@Content?9Disposition?3?5attachment?$DL@
	push	esi
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 324
	push	edi
	push	edi
	push	OFFSET ??_C@_0BK@OFJEPDGB@?5filename?$DN?$CCsmime?4p7s?$CC?$CFs?$CFs?$AA@
	push	esi
	call	_BIO_printf
; Line 325
	push	DWORD PTR _it$GSCopy$1$[esp+92]
	push	0
	push	0
	push	DWORD PTR _val$GSCopy$1$[esp+104]
	push	esi
	call	_B64_write_ASN1
; Line 326
	push	edi
	push	edi
	lea	eax, DWORD PTR _bound$[esp+120]
	push	eax
	push	edi
	push	OFFSET ??_C@_0BB@CEFPDGPA@?$CFs?9?9?9?9?9?9?$CFs?9?9?$CFs?$CFs?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 60					; 0000003cH
; Line 328
	jmp	$LN44@SMIME_writ
$LN9@SMIME_writ:
; Line 333
	mov	eax, DWORD PTR _ctype_nid$[esp+72]
	cmp	eax, 23					; 00000017H
	jne	SHORT $LN14@SMIME_writ
; Line 334
	mov	ebx, OFFSET ??_C@_0P@KCEEPGAP@enveloped?9data?$AA@
	jmp	SHORT $LN22@SMIME_writ
$LN14@SMIME_writ:
; Line 335
	cmp	eax, 22					; 00000016H
	jne	SHORT $LN16@SMIME_writ
; Line 336
	cmp	DWORD PTR _econt_nid$[esp+72], 204	; 000000ccH
	jne	SHORT $LN18@SMIME_writ
; Line 337
	mov	ebx, OFFSET ??_C@_0P@JEJBLIHN@signed?9receipt?$AA@
	jmp	SHORT $LN22@SMIME_writ
$LN18@SMIME_writ:
; Line 338
	push	DWORD PTR _mdalgs$GSCopy$1$[esp+76]
	call	_sk_num
	add	esp, 4
	mov	ebx, OFFSET ??_C@_0M@MHALIMFG@signed?9data?$AA@
	test	eax, eax
	mov	ecx, OFFSET ??_C@_0L@IFNGEJCO@certs?9only?$AA@
	cmovs	ebx, ecx
; Line 342
	jmp	SHORT $LN22@SMIME_writ
$LN16@SMIME_writ:
	cmp	eax, 786				; 00000312H
	jne	SHORT $LN22@SMIME_writ
; Line 343
	mov	ebx, OFFSET ??_C@_0BA@DFPMGHIN@compressed?9data?$AA@
; Line 344
	mov	DWORD PTR _cname$1$[esp+76], OFFSET ??_C@_09DAOBJECN@smime?4p7z?$AA@
$LN22@SMIME_writ:
; Line 347
	push	edi
	push	OFFSET ??_C@_0BE@MBODPAJ@MIME?9Version?3?51?40?$CFs?$AA@
	push	esi
	call	_BIO_printf
; Line 348
	push	OFFSET ??_C@_0CB@JNLOJFLI@Content?9Disposition?3?5attachment?$DL@
	push	esi
	call	_BIO_printf
; Line 349
	push	edi
	push	DWORD PTR _cname$1$[esp+100]
	push	OFFSET ??_C@_0BB@OFJOJND@?5filename?$DN?$CC?$CFs?$CC?$CFs?$AA@
	push	esi
	call	_BIO_printf
; Line 350
	push	DWORD PTR _mime_prefix$1$[esp+112]
	push	OFFSET ??_C@_0BG@GOHJPKDF@Content?9Type?3?5?$CFsmime?$DL?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 48					; 00000030H
; Line 351
	test	ebx, ebx
	je	SHORT $LN23@SMIME_writ
; Line 352
	push	ebx
	push	OFFSET ??_C@_0BA@ICJPMDJA@?5smime?9type?$DN?$CFs?$DL?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN23@SMIME_writ:
; Line 353
	push	edi
	push	DWORD PTR _cname$1$[esp+80]
	push	OFFSET ??_C@_0N@LOHHOGEF@?5name?$DN?$CC?$CFs?$CC?$CFs?$AA@
	push	esi
	call	_BIO_printf
; Line 354
	push	edi
	push	edi
	push	OFFSET ??_C@_0CG@FGBKIPJD@Content?9Transfer?9Encoding?3?5base6@
	push	esi
	call	_BIO_printf
; Line 356
	push	DWORD PTR _it$GSCopy$1$[esp+108]
	mov	eax, DWORD PTR _flags$[esp+108]
	push	eax
	push	DWORD PTR _data$GSCopy$1$[esp+116]
	push	DWORD PTR _val$GSCopy$1$[esp+120]
	push	esi
	call	_B64_write_ASN1
	add	esp, 52					; 00000034H
	test	eax, eax
	je	$LN45@SMIME_writ
; Line 358
	push	edi
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN44@SMIME_writ:
; Line 360
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
_SMIME_write_ASN1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PEM_write_bio_ASN1_stream
_TEXT	SEGMENT
_out$ = 8						; size = 4
_val$ = 12						; size = 4
_in$ = 16						; size = 4
_flags$ = 20						; size = 4
_hdr$ = 24						; size = 4
_it$ = 28						; size = 4
_PEM_write_bio_ASN1_stream PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 173
	push	esi
	push	edi
; Line 175
	push	DWORD PTR _hdr$[esp+4]
	mov	edi, DWORD PTR _out$[esp+8]
	push	OFFSET ??_C@_0BE@JOAPMNHH@?9?9?9?9?9BEGIN?5?$CFs?9?9?9?9?9?6?$AA@
	push	edi
	call	_BIO_printf
; Line 176
	push	DWORD PTR _it$[esp+16]
	push	DWORD PTR _flags$[esp+20]
	push	DWORD PTR _in$[esp+24]
	push	DWORD PTR _val$[esp+28]
	push	edi
	call	_B64_write_ASN1
; Line 177
	push	DWORD PTR _hdr$[esp+36]
	mov	esi, eax
	push	OFFSET ??_C@_0BC@BEJKDKBL@?9?9?9?9?9END?5?$CFs?9?9?9?9?9?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 44					; 0000002cH
; Line 178
	mov	eax, esi
	pop	edi
	pop	esi
; Line 179
	ret	0
_PEM_write_bio_ASN1_stream ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_ASN1_bio_stream
_TEXT	SEGMENT
_out$ = 8						; size = 4
_val$ = 12						; size = 4
_in$ = 16						; size = 4
_flags$ = 20						; size = 4
_it$ = 24						; size = 4
_i2d_ASN1_bio_stream PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_mime.c
; Line 119
	push	ebx
	push	esi
; Line 121
	mov	esi, DWORD PTR _flags$[esp+4]
	push	edi
	test	esi, 4096				; 00001000H
	je	SHORT $LN5@i2d_ASN1_b
; Line 123
	push	DWORD PTR _it$[esp+8]
	mov	ebx, DWORD PTR _out$[esp+12]
	push	DWORD PTR _val$[esp+12]
	push	ebx
	call	_BIO_new_NDEF
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 124
	test	edi, edi
	jne	SHORT $LN7@i2d_ASN1_b
; Line 125
	push	125					; 0000007dH
	push	OFFSET ??_C@_0BJ@NBGEILCD@?4?2crypto?2asn1?2asn_mime?4c?$AA@
	push	65					; 00000041H
	push	211					; 000000d3H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 126
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 144
	ret	0
$LN7@i2d_ASN1_b:
; Line 128
	push	esi
	push	edi
	push	DWORD PTR _in$[esp+16]
	call	_SMIME_crlf_copy
; Line 129
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
	add	esp, 28					; 0000001cH
$LL4@i2d_ASN1_b:
; Line 132
	push	edi
	call	_BIO_pop
; Line 133
	push	edi
	mov	esi, eax
	call	_BIO_free
	add	esp, 8
; Line 134
	mov	edi, esi
; Line 135
	cmp	esi, ebx
	jne	SHORT $LL4@i2d_ASN1_b
; Line 143
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 144
	ret	0
$LN5@i2d_ASN1_b:
; Line 142
	push	DWORD PTR _val$[esp+8]
	push	DWORD PTR _out$[esp+12]
	push	DWORD PTR _it$[esp+16]
	call	_ASN1_item_i2d_bio
	add	esp, 12					; 0000000cH
; Line 143
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
; Line 144
	ret	0
_i2d_ASN1_bio_stream ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\cms\cms_pwri.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_CMS_RecipientInfo_set0_password
PUBLIC	_CMS_add0_recipient_password
PUBLIC	_cms_RecipientInfo_pwri_crypt
PUBLIC	??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@ ; `string'
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_TYPE_new:PROC
EXTRN	_ASN1_item_pack:PROC
EXTRN	_ASN1_item_new:PROC
EXTRN	_ASN1_item_free:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_EVP_CIPHER_CTX_cipher:PROC
EXTRN	_EVP_CIPHER_CTX_block_size:PROC
EXTRN	_EVP_CIPHER_CTX_iv_length:PROC
EXTRN	_EVP_EncryptInit_ex:PROC
EXTRN	_EVP_EncryptUpdate:PROC
EXTRN	_EVP_DecryptInit_ex:PROC
EXTRN	_EVP_DecryptUpdate:PROC
EXTRN	_EVP_CipherInit_ex:PROC
EXTRN	_EVP_CIPHER_CTX_init:PROC
EXTRN	_EVP_CIPHER_CTX_cleanup:PROC
EXTRN	_EVP_CIPHER_CTX_set_padding:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_CIPHER_type:PROC
EXTRN	_EVP_CIPHER_param_to_asn1:PROC
EXTRN	_EVP_CIPHER_asn1_to_param:PROC
EXTRN	_EVP_PBE_CipherInit:PROC
EXTRN	_X509_ALGOR_new:PROC
EXTRN	_X509_ALGOR_free:PROC
EXTRN	_d2i_X509_ALGOR:PROC
EXTRN	_X509_ALGOR_it:PROC
EXTRN	_PKCS5_pbkdf2_set:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_CMS_RecipientInfo_it:PROC
EXTRN	_CMS_PasswordRecipientInfo_it:PROC
EXTRN	_cms_get0_enveloped:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
CONST	SEGMENT
??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@ DB '.\crypto\cms\cms'
	DB	'_pwri.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _kek_wrap_key
_TEXT	SEGMENT
_dummy$ = -4						; size = 4
_out$ = 8						; size = 4
_outlen$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_ctx$ = 24						; size = 4
_kek_wrap_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cms\cms_pwri.c
; Line 277
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
; Line 278
	mov	ebp, DWORD PTR _ctx$[esp+8]
	push	edi
	push	ebp
	call	_EVP_CIPHER_CTX_block_size
; Line 285
	mov	ebx, DWORD PTR _inlen$[esp+16]
	mov	ecx, eax
	xor	edx, edx
	add	esp, 4
	lea	eax, DWORD PTR [ebx+3]
	add	eax, ecx
	div	ecx
	mov	edi, eax
; Line 286
	imul	edi, ecx
; Line 287
	add	ecx, ecx
	cmp	edi, ecx
	jae	SHORT $LN2@kek_wrap_k
$LN8@kek_wrap_k:
	pop	edi
	pop	ebp
; Line 289
	xor	eax, eax
	pop	ebx
; Line 314
	pop	ecx
	ret	0
$LN2@kek_wrap_k:
; Line 291
	cmp	ebx, 255				; 000000ffH
	ja	SHORT $LN8@kek_wrap_k
; Line 295
	push	esi
	mov	esi, DWORD PTR _out$[esp+16]
	test	esi, esi
	je	SHORT $LN4@kek_wrap_k
; Line 298
	mov	ecx, DWORD PTR _in$[esp+16]
	mov	BYTE PTR [esi], bl
; Line 301
	push	ebx
	push	ecx
	movzx	eax, BYTE PTR [ecx]
	not	al
	mov	BYTE PTR [esi+1], al
	movzx	eax, BYTE PTR [ecx+1]
	not	al
	mov	BYTE PTR [esi+2], al
	movzx	eax, BYTE PTR [ecx+2]
	not	al
	mov	BYTE PTR [esi+3], al
	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	_memcpy
; Line 304
	lea	eax, DWORD PTR [ebx+4]
	add	esp, 12					; 0000000cH
	cmp	edi, eax
	jbe	SHORT $LN5@kek_wrap_k
	mov	eax, edi
	sub	eax, ebx
	sub	eax, 4
	push	eax
	lea	eax, DWORD PTR [ebx+4]
	add	eax, esi
	push	eax
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	jns	SHORT $LN5@kek_wrap_k
; Line 305
	pop	esi
	pop	edi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 314
	pop	ecx
	ret	0
$LN5@kek_wrap_k:
; Line 307
	push	edi
	push	esi
	lea	eax, DWORD PTR _dummy$[esp+28]
	push	eax
	push	esi
	push	ebp
	call	_EVP_EncryptUpdate
; Line 308
	push	edi
	push	esi
	lea	eax, DWORD PTR _dummy$[esp+48]
	push	eax
	push	esi
	push	ebp
	call	_EVP_EncryptUpdate
	add	esp, 40					; 00000028H
$LN4@kek_wrap_k:
; Line 311
	mov	eax, DWORD PTR _outlen$[esp+16]
	pop	esi
	mov	DWORD PTR [eax], edi
; Line 313
	mov	eax, 1
	pop	edi
	pop	ebp
	pop	ebx
; Line 314
	pop	ecx
	ret	0
_kek_wrap_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _kek_unwrap_key
_TEXT	SEGMENT
_outl$ = -8						; size = 4
_rv$1$ = -4						; size = 4
_out$ = 8						; size = 4
_outlen$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_ctx$ = 24						; size = 4
_kek_unwrap_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cms\cms_pwri.c
; Line 224
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 225
	push	DWORD PTR _ctx$[esp+16]
	call	_EVP_CIPHER_CTX_block_size
; Line 228
	mov	ebx, DWORD PTR _inlen$[esp+20]
	mov	ebp, eax
	add	esp, 4
	mov	DWORD PTR _rv$1$[esp+20], 0
	lea	esi, DWORD PTR [ebp*2]
	cmp	ebx, esi
	jae	SHORT $LN2@kek_unwrap
$LN9@kek_unwrap:
	pop	esi
	pop	ebp
; Line 230
	xor	eax, eax
	pop	ebx
; Line 272
	add	esp, 8
	ret	0
$LN2@kek_unwrap:
; Line 232
	xor	edx, edx
	mov	eax, ebx
	div	ebp
	test	edx, edx
	jne	SHORT $LN9@kek_unwrap
; Line 236
	push	edi
	push	236					; 000000ecH
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	ebx
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 237
	test	edi, edi
	jne	SHORT $LN4@kek_unwrap
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 272
	add	esp, 8
	ret	0
$LN4@kek_unwrap:
; Line 240
	push	esi
	mov	esi, DWORD PTR _in$[esp+24]
	lea	ecx, DWORD PTR [ebp*2]
	mov	eax, esi
	sub	eax, ecx
	add	eax, ebx
	push	eax
	lea	eax, DWORD PTR _outl$[esp+32]
	push	eax
	mov	eax, edi
	sub	eax, ecx
	add	eax, ebx
	push	eax
	push	DWORD PTR _ctx$[esp+36]
	call	_EVP_DecryptUpdate
; Line 247
	mov	eax, edi
	sub	eax, ebp
	push	ebp
	add	eax, ebx
	push	eax
	lea	eax, DWORD PTR _outl$[esp+52]
	push	eax
	push	edi
	push	DWORD PTR _ctx$[esp+56]
	call	_EVP_DecryptUpdate
; Line 249
	mov	eax, ebx
	sub	eax, ebp
	mov	ebp, DWORD PTR _ctx$[esp+60]
	push	eax
	push	esi
	lea	eax, DWORD PTR _outl$[esp+72]
	push	eax
	push	edi
	push	ebp
	call	_EVP_DecryptUpdate
; Line 252
	push	0
	push	0
	push	0
	push	0
	push	ebp
	call	_EVP_DecryptInit_ex
	add	esp, 80					; 00000050H
; Line 254
	lea	eax, DWORD PTR _outl$[esp+24]
	push	ebx
	push	edi
	push	eax
	push	edi
	push	ebp
	call	_EVP_DecryptUpdate
; Line 256
	movzx	eax, BYTE PTR [edi+5]
	lea	edx, DWORD PTR [edi+4]
	xor	al, BYTE PTR [edi+2]
	add	esp, 20					; 00000014H
	mov	cl, BYTE PTR [edi+6]
	xor	cl, BYTE PTR [edi+3]
	and	cl, al
	movzx	eax, BYTE PTR [edi+1]
	xor	al, BYTE PTR [edx]
	and	cl, al
	cmp	cl, 255					; 000000ffH
	jne	SHORT $err$11
; Line 260
	movzx	ecx, BYTE PTR [edi]
	lea	eax, DWORD PTR [ecx-4]
	cmp	ebx, eax
	jb	SHORT $err$11
; Line 264
	mov	eax, DWORD PTR _outlen$[esp+20]
; Line 265
	push	ecx
	push	edx
	push	DWORD PTR _out$[esp+28]
	mov	DWORD PTR [eax], ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 266
	mov	DWORD PTR _rv$1$[esp+24], 1
$err$11:
; Line 268
	push	ebx
	push	edi
	call	_OPENSSL_cleanse
; Line 269
	push	edi
	call	_CRYPTO_free
; Line 270
	mov	eax, DWORD PTR _rv$1$[esp+36]
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 272
	add	esp, 8
	ret	0
_kek_unwrap_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cms_RecipientInfo_pwri_crypt
_TEXT	SEGMENT
_kekalg$1$ = -160					; size = 4
_keylen$ = -156						; size = 4
_p$ = -152						; size = 4
_r$1$ = -148						; size = 4
_kekctx$ = -144						; size = 140
__$ArrayPad$ = -4					; size = 4
_cms$ = 8						; size = 4
_ri$ = 12						; size = 4
_en_de$ = 16						; size = 4
_cms_RecipientInfo_pwri_crypt PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cms\cms_pwri.c
; Line 320
	mov	eax, 160				; 000000a0H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+160], eax
	mov	eax, DWORD PTR _cms$[esp+156]
	mov	ecx, DWORD PTR _ri$[esp+156]
	push	ebp
	push	esi
; Line 332
	mov	eax, DWORD PTR [eax+4]
	xor	esi, esi
	mov	DWORD PTR _p$[esp+168], 0
	push	edi
; Line 334
	mov	edi, DWORD PTR [ecx+4]
	mov	ebp, DWORD PTR [eax+12]
; Line 335
	lea	eax, DWORD PTR _kekctx$[esp+172]
	push	eax
	mov	DWORD PTR _r$1$[esp+176], 0
	call	_EVP_CIPHER_CTX_init
	add	esp, 4
; Line 337
	cmp	DWORD PTR [edi+16], esi
	jne	SHORT $LN2@cms_Recipi
; Line 338
	push	338					; 00000152H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	178					; 000000b2H
	push	167					; 000000a7H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 339
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
; Line 435
	mov	ecx, DWORD PTR __$ArrayPad$[esp+160]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 160				; 000000a0H
	ret	0
$LN2@cms_Recipi:
	push	ebx
; Line 341
	mov	ebx, DWORD PTR [edi+8]
; Line 343
	test	ebx, ebx
	je	$LN4@cms_Recipi
	push	DWORD PTR [ebx]
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 893				; 0000037dH
	jne	$LN4@cms_Recipi
; Line 349
	mov	eax, DWORD PTR [ebx+4]
	cmp	DWORD PTR [eax], 16			; 00000010H
	jne	$LN26@cms_Recipi
; Line 350
	mov	eax, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _p$[esp+176], eax
; Line 351
	mov	eax, DWORD PTR [ebx+4]
	mov	eax, DWORD PTR [eax+4]
; Line 352
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR _p$[esp+180]
	push	eax
	push	0
	call	_d2i_X509_ALGOR
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _kekalg$1$[esp+176], ebx
; Line 354
	test	ebx, ebx
	je	$LN26@cms_Recipi
; Line 360
	push	DWORD PTR [ebx]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_cipherbyname
	add	esp, 12					; 0000000cH
; Line 362
	test	eax, eax
	jne	SHORT $LN7@cms_Recipi
; Line 363
	push	363					; 0000016bH
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	148					; 00000094H
	push	167					; 000000a7H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 364
	jmp	$err$36
$LN7@cms_Recipi:
; Line 368
	mov	ebx, DWORD PTR _en_de$[esp+172]
	push	ebx
	push	0
	push	0
	push	0
	push	eax
	lea	eax, DWORD PTR _kekctx$[esp+196]
	push	eax
	call	_EVP_CipherInit_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN32@cms_Recipi
; Line 370
	lea	eax, DWORD PTR _kekctx$[esp+176]
	push	0
	push	eax
	call	_EVP_CIPHER_CTX_set_padding
; Line 371
	mov	eax, DWORD PTR _kekalg$1$[esp+184]
	push	DWORD PTR [eax+4]
	lea	eax, DWORD PTR _kekctx$[esp+188]
	push	eax
	call	_EVP_CIPHER_asn1_to_param
	add	esp, 16					; 00000010H
	test	eax, eax
	jns	SHORT $LN9@cms_Recipi
; Line 372
	push	373					; 00000175H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	102					; 00000066H
	push	167					; 000000a7H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 374
	jmp	$LN32@cms_Recipi
$LN9@cms_Recipi:
; Line 377
	mov	eax, DWORD PTR [edi+4]
; Line 383
	lea	ecx, DWORD PTR _kekctx$[esp+176]
	push	ebx
	push	ecx
	push	DWORD PTR [eax+4]
	push	DWORD PTR [edi+20]
	push	DWORD PTR [edi+16]
	push	DWORD PTR [eax]
	call	_EVP_PBE_CipherInit
	add	esp, 24					; 00000018H
	test	eax, eax
	jns	SHORT $LN10@cms_Recipi
; Line 384
	push	384					; 00000180H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	6
	push	167					; 000000a7H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 385
	jmp	$LN32@cms_Recipi
$LN10@cms_Recipi:
; Line 390
	test	ebx, ebx
	je	$LN11@cms_Recipi
; Line 392
	mov	ebx, DWORD PTR [ebp+20]
; Line 278
	lea	eax, DWORD PTR _kekctx$[esp+176]
	push	eax
	call	_EVP_CIPHER_CTX_block_size
	mov	ecx, eax
; Line 285
	xor	edx, edx
	lea	eax, DWORD PTR [ebx+3]
	add	esp, 4
	add	eax, ecx
	div	ecx
	mov	edx, eax
; Line 287
	lea	eax, DWORD PTR [ecx+ecx]
	imul	edx, ecx
	cmp	edx, eax
	jb	$LN32@cms_Recipi
; Line 291
	cmp	ebx, 255				; 000000ffH
	ja	$LN32@cms_Recipi
; Line 395
	push	395					; 0000018bH
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	edx
; Line 311
	mov	DWORD PTR _keylen$[esp+188], edx
; Line 395
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 397
	test	esi, esi
	je	$LN32@cms_Recipi
; Line 400
	lea	eax, DWORD PTR _kekctx$[esp+176]
	push	eax
	push	DWORD PTR [ebp+20]
	lea	eax, DWORD PTR _keylen$[esp+184]
	push	DWORD PTR [ebp+16]
	push	eax
	push	esi
	call	_kek_wrap_key
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN32@cms_Recipi
; Line 402
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [eax+8], esi
; Line 403
	mov	ecx, DWORD PTR [edi+12]
	mov	eax, DWORD PTR _keylen$[esp+176]
	mov	DWORD PTR [ecx], eax
; Line 404
	jmp	$LN12@cms_Recipi
$LN11@cms_Recipi:
; Line 405
	mov	eax, DWORD PTR [edi+12]
	push	405					; 00000195H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	DWORD PTR [eax]
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 407
	test	esi, esi
	jne	SHORT $LN16@cms_Recipi
; Line 408
	push	408					; 00000198H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	65					; 00000041H
	push	167					; 000000a7H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 409
	jmp	SHORT $LN32@cms_Recipi
$LN16@cms_Recipi:
; Line 411
	mov	eax, DWORD PTR [edi+12]
	lea	ecx, DWORD PTR _kekctx$[esp+176]
	push	ecx
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	lea	eax, DWORD PTR _keylen$[esp+188]
	push	eax
	push	esi
	call	_kek_unwrap_key
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN17@cms_Recipi
; Line 414
	push	414					; 0000019eH
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	180					; 000000b4H
	push	167					; 000000a7H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 415
	jmp	SHORT $LN32@cms_Recipi
$LN17@cms_Recipi:
; Line 419
	mov	eax, DWORD PTR _keylen$[esp+176]
	mov	DWORD PTR [ebp+16], esi
	mov	DWORD PTR [ebp+20], eax
$LN12@cms_Recipi:
; Line 423
	mov	DWORD PTR _r$1$[esp+176], 1
$LN32@cms_Recipi:
	mov	ebx, DWORD PTR _kekalg$1$[esp+176]
$err$36:
; Line 427
	lea	eax, DWORD PTR _kekctx$[esp+176]
	push	eax
	call	_EVP_CIPHER_CTX_cleanup
; Line 429
	mov	edi, DWORD PTR _r$1$[esp+180]
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN18@cms_Recipi
	test	esi, esi
	je	SHORT $LN18@cms_Recipi
; Line 430
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN18@cms_Recipi:
; Line 431
	push	ebx
	call	_X509_ALGOR_free
	add	esp, 4
; Line 433
	mov	eax, edi
	jmp	SHORT $LN33@cms_Recipi
$LN26@cms_Recipi:
; Line 355
	push	356					; 00000164H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	176					; 000000b0H
; Line 357
	jmp	SHORT $LN34@cms_Recipi
$LN4@cms_Recipi:
; Line 344
	push	345					; 00000159H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	179					; 000000b3H
$LN34@cms_Recipi:
	push	167					; 000000a7H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 346
	xor	eax, eax
$LN33@cms_Recipi:
; Line 435
	mov	ecx, DWORD PTR __$ArrayPad$[esp+176]
	pop	ebx
	pop	edi
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 160				; 000000a0H
	ret	0
_cms_RecipientInfo_pwri_crypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CMS_add0_recipient_password
_TEXT	SEGMENT
_iter$GSCopy$1$ = -164					; size = 4
_ctx$ = -160						; size = 140
_iv$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_cms$ = 8						; size = 4
_iter$ = 12						; size = 4
_wrap_nid$ = 16						; size = 4
_pbe_nid$ = 20						; size = 4
_pass$ = 24						; size = 4
_passlen$ = 28						; size = 4
_kekciph$ = 32						; size = 4
_CMS_add0_recipient_password PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cms\cms_pwri.c
; Line 89
	mov	eax, 164				; 000000a4H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+164], eax
	mov	eax, DWORD PTR _cms$[esp+160]
	mov	ecx, DWORD PTR _iter$[esp+160]
	push	ebx
	mov	ebx, DWORD PTR _kekciph$[esp+164]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR _wrap_nid$[esp+176]
; Line 90
	xor	esi, esi
; Line 98
	push	eax
	mov	DWORD PTR _iter$GSCopy$1$[esp+184], ecx
	call	_cms_get0_enveloped
	mov	ebp, eax
	add	esp, 4
; Line 99
	test	ebp, ebp
	je	$LN23@CMS_add0_r
; Line 102
	test	edi, edi
	mov	eax, 893				; 0000037dH
	cmovle	edi, eax
; Line 109
	test	ebx, ebx
	jne	SHORT $LN6@CMS_add0_r
; Line 110
	mov	eax, DWORD PTR [ebp+12]
	mov	ebx, DWORD PTR [eax+12]
; Line 112
	test	ebx, ebx
	jne	SHORT $LN6@CMS_add0_r
; Line 113
	push	113					; 00000071H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	126					; 0000007eH
	push	165					; 000000a5H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 114
	jmp	$LN23@CMS_add0_r
$LN6@CMS_add0_r:
; Line 116
	cmp	edi, 893				; 0000037dH
	je	SHORT $LN7@CMS_add0_r
; Line 117
	push	118					; 00000076H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	179					; 000000b3H
	push	165					; 000000a5H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 119
	jmp	$LN23@CMS_add0_r
$LN7@CMS_add0_r:
; Line 123
	call	_X509_ALGOR_new
	mov	edi, eax
; Line 124
	test	edi, edi
	je	$merr$28
; Line 127
	lea	eax, DWORD PTR _ctx$[esp+180]
	push	eax
	call	_EVP_CIPHER_CTX_init
; Line 129
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$[esp+196]
	push	ebx
	push	eax
	call	_EVP_EncryptInit_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN9@CMS_add0_r
; Line 130
	push	130					; 00000082H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	6
; Line 131
	jmp	$LN25@CMS_add0_r
$LN9@CMS_add0_r:
; Line 134
	lea	eax, DWORD PTR _ctx$[esp+180]
	push	eax
	call	_EVP_CIPHER_CTX_iv_length
	add	esp, 4
; Line 136
	test	eax, eax
	jle	$LN14@CMS_add0_r
; Line 137
	push	eax
	lea	eax, DWORD PTR _iv$[esp+184]
	push	eax
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	jle	$err$29
; Line 139
	lea	eax, DWORD PTR _iv$[esp+180]
	push	eax
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$[esp+192]
	push	0
	push	eax
	call	_EVP_EncryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	jg	SHORT $LN12@CMS_add0_r
; Line 140
	push	140					; 0000008cH
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	6
; Line 141
	jmp	$LN25@CMS_add0_r
$LN12@CMS_add0_r:
; Line 143
	call	_ASN1_TYPE_new
	mov	DWORD PTR [edi+4], eax
; Line 144
	test	eax, eax
	jne	SHORT $LN13@CMS_add0_r
; Line 145
	push	145					; 00000091H
; Line 146
	jmp	$LN26@CMS_add0_r
$LN13@CMS_add0_r:
; Line 148
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+184]
	push	eax
	call	_EVP_CIPHER_param_to_asn1
	add	esp, 8
	test	eax, eax
	jg	SHORT $LN14@CMS_add0_r
; Line 149
	push	150					; 00000096H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	102					; 00000066H
; Line 151
	jmp	$LN25@CMS_add0_r
$LN14@CMS_add0_r:
; Line 155
	lea	eax, DWORD PTR _ctx$[esp+180]
	push	eax
	call	_EVP_CIPHER_CTX_cipher
	push	eax
	call	_EVP_CIPHER_type
	push	eax
	call	_OBJ_nid2obj
	mov	DWORD PTR [edi], eax
; Line 157
	lea	eax, DWORD PTR _ctx$[esp+192]
	push	eax
	call	_EVP_CIPHER_CTX_cleanup
; Line 160
	call	_CMS_RecipientInfo_it
	push	eax
	call	_ASN1_item_new
	mov	esi, eax
	add	esp, 20					; 00000014H
; Line 161
	test	esi, esi
	je	$merr$28
; Line 164
	call	_CMS_PasswordRecipientInfo_it
	push	eax
	call	_ASN1_item_new
	mov	ebx, eax
	add	esp, 4
	mov	DWORD PTR [esi+4], ebx
; Line 165
	test	ebx, ebx
	je	$merr$28
; Line 167
	mov	DWORD PTR [esi], 3
; Line 171
	push	DWORD PTR [ebx+8]
	call	_X509_ALGOR_free
	add	esp, 4
; Line 172
	call	_X509_ALGOR_new
	mov	DWORD PTR [ebx+8], eax
; Line 173
	test	eax, eax
	je	$merr$28
; Line 175
	push	893					; 0000037dH
	call	_OBJ_nid2obj
	mov	ecx, DWORD PTR [ebx+8]
	add	esp, 4
	mov	DWORD PTR [ecx], eax
; Line 176
	call	_ASN1_TYPE_new
	mov	ecx, DWORD PTR [ebx+8]
	mov	DWORD PTR [ecx+4], eax
; Line 177
	mov	eax, DWORD PTR [ebx+8]
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $merr$28
; Line 180
	add	eax, 4
	push	eax
	call	_X509_ALGOR_it
	push	eax
	push	edi
	call	_ASN1_item_pack
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $merr$28
; Line 184
	mov	eax, DWORD PTR [ebx+8]
; Line 186
	push	edi
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [eax], 16			; 00000010H
	call	_X509_ALGOR_free
; Line 191
	push	-1
	push	-1
	xor	edi, edi
	push	edi
	push	edi
	push	DWORD PTR _iter$GSCopy$1$[esp+200]
	call	_PKCS5_pbkdf2_set
	add	esp, 24					; 00000018H
	mov	DWORD PTR [ebx+4], eax
; Line 193
	test	eax, eax
	je	SHORT $err$29
; Line 196
	push	DWORD PTR _passlen$[esp+176]
	push	DWORD PTR _pass$[esp+180]
	push	esi
	call	_CMS_RecipientInfo_set0_password
; Line 197
	mov	DWORD PTR [ebx], edi
; Line 199
	push	esi
	push	DWORD PTR [ebp+8]
	call	_sk_push
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $merr$28
; Line 202
	mov	eax, esi
	jmp	SHORT $LN1@CMS_add0_r
$merr$28:
; Line 205
	push	205					; 000000cdH
$LN26@CMS_add0_r:
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	65					; 00000041H
$LN25@CMS_add0_r:
	push	165					; 000000a5H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$29:
; Line 207
	lea	eax, DWORD PTR _ctx$[esp+180]
	push	eax
	call	_EVP_CIPHER_CTX_cleanup
	add	esp, 4
; Line 208
	test	esi, esi
	je	SHORT $LN22@CMS_add0_r
; Line 209
	call	_CMS_RecipientInfo_it
	push	eax
	push	esi
	call	_ASN1_item_free
	add	esp, 8
$LN22@CMS_add0_r:
; Line 210
	test	edi, edi
	je	SHORT $LN23@CMS_add0_r
; Line 211
	push	edi
	call	_X509_ALGOR_free
	add	esp, 4
$LN23@CMS_add0_r:
; Line 212
	xor	eax, eax
$LN1@CMS_add0_r:
; Line 214
	mov	ecx, DWORD PTR __$ArrayPad$[esp+180]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 164				; 000000a4H
	ret	0
_CMS_add0_recipient_password ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CMS_RecipientInfo_set0_password
_TEXT	SEGMENT
_ri$ = 8						; size = 4
_pass$ = 12						; size = 4
_passlen$ = 16						; size = 4
_CMS_RecipientInfo_set0_password PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cms\cms_pwri.c
; Line 70
	mov	eax, DWORD PTR _ri$[esp-4]
	cmp	DWORD PTR [eax], 3
	je	SHORT $LN2@CMS_Recipi
; Line 71
	push	71					; 00000047H
	push	OFFSET ??_C@_0BI@JJBFJHOL@?4?2crypto?2cms?2cms_pwri?4c?$AA@
	push	177					; 000000b1H
	push	168					; 000000a8H
	push	46					; 0000002eH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 72
	xor	eax, eax
; Line 81
	ret	0
$LN2@CMS_Recipi:
; Line 75
	mov	edx, DWORD PTR [eax+4]
; Line 76
	mov	eax, DWORD PTR _pass$[esp-4]
; Line 77
	mov	ecx, DWORD PTR _passlen$[esp-4]
	mov	DWORD PTR [edx+16], eax
	test	eax, eax
	je	SHORT $LN3@CMS_Recipi
	test	ecx, ecx
	jns	SHORT $LN3@CMS_Recipi
; Line 78
	mov	ecx, eax
	push	esi
	lea	esi, DWORD PTR [ecx+1]
$LL5@CMS_Recipi:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL5@CMS_Recipi
	sub	ecx, esi
	pop	esi
$LN3@CMS_Recipi:
; Line 79
	mov	DWORD PTR [edx+20], ecx
; Line 80
	mov	eax, 1
; Line 81
	ret	0
_CMS_RecipientInfo_set0_password ENDP
_TEXT	ENDS
END

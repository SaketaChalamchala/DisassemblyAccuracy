; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_04GABBLIPF@asn1?$AA@			; `string'
;	COMDAT ??_C@_04GABBLIPF@asn1?$AA@
CONST	SEGMENT
??_C@_04GABBLIPF@asn1?$AA@ DB 'asn1', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_methods_asn1 DD 0216H
	DD	FLAT:??_C@_04GABBLIPF@asn1?$AA@
	DD	FLAT:_asn1_bio_write
	DD	FLAT:_asn1_bio_read
	DD	FLAT:_asn1_bio_puts
	DD	FLAT:_asn1_bio_gets
	DD	FLAT:_asn1_bio_ctrl
	DD	FLAT:_asn1_bio_new
	DD	FLAT:_asn1_bio_free
	DD	FLAT:_asn1_bio_callback_ctrl
_DATA	ENDS
PUBLIC	_BIO_asn1_set_prefix
PUBLIC	_BIO_asn1_get_prefix
PUBLIC	_BIO_asn1_set_suffix
PUBLIC	_BIO_asn1_get_suffix
PUBLIC	_BIO_f_asn1
PUBLIC	??_C@_0BJ@JFDEBOM@?4?2crypto?2asn1?2bio_asn1?4c?$AA@ ; `string'
PUBLIC	??_C@_0BM@FIMHHPDL@ctx?9?$DObuflen?5?$DM?$DN?5ctx?9?$DObufsize?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OpenSSLDie:PROC
EXTRN	_BIO_clear_flags:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_gets:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_callback_ctrl:PROC
EXTRN	_BIO_copy_next_retry:PROC
EXTRN	_ASN1_put_object:PROC
EXTRN	_ASN1_object_size:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BM@FIMHHPDL@ctx?9?$DObuflen?5?$DM?$DN?5ctx?9?$DObufsize?$AA@
CONST	SEGMENT
??_C@_0BM@FIMHHPDL@ctx?9?$DObuflen?5?$DM?$DN?5ctx?9?$DObufsize?$AA@ DB 'c'
	DB	'tx->buflen <= ctx->bufsize', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JFDEBOM@?4?2crypto?2asn1?2bio_asn1?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@JFDEBOM@?4?2crypto?2asn1?2bio_asn1?4c?$AA@ DB '.\crypto\asn1\bi'
	DB	'o_asn1.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_get_ex
_TEXT	SEGMENT
_extmp$ = -8						; size = 8
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_ex_func$ = 16						; size = 4
_ex_free_func$ = 20					; size = 4
_asn1_bio_get_ex PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 449
	mov	eax, 8
	call	__chkstk
; Line 452
	lea	eax, DWORD PTR _extmp$[esp+8]
	push	eax
	push	0
	push	DWORD PTR _cmd$[esp+12]
	push	DWORD PTR _b$[esp+16]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 453
	test	eax, eax
	jle	SHORT $LN2@asn1_bio_g
; Line 454
	mov	edx, DWORD PTR _ex_func$[esp+4]
	mov	ecx, DWORD PTR _extmp$[esp+8]
	mov	DWORD PTR [edx], ecx
; Line 455
	mov	edx, DWORD PTR _ex_free_func$[esp+4]
	mov	ecx, DWORD PTR _extmp$[esp+12]
	mov	DWORD PTR [edx], ecx
$LN2@asn1_bio_g:
; Line 458
	add	esp, 8
	ret	0
_asn1_bio_get_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_set_ex
_TEXT	SEGMENT
_extmp$ = -8						; size = 8
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_ex_func$ = 16						; size = 4
_ex_free_func$ = 20					; size = 4
_asn1_bio_set_ex PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 439
	mov	eax, 8
	call	__chkstk
; Line 441
	mov	eax, DWORD PTR _ex_func$[esp+4]
	mov	DWORD PTR _extmp$[esp+8], eax
; Line 442
	mov	eax, DWORD PTR _ex_free_func$[esp+4]
	mov	DWORD PTR _extmp$[esp+12], eax
; Line 443
	lea	eax, DWORD PTR _extmp$[esp+8]
	push	eax
	push	0
	push	DWORD PTR _cmd$[esp+12]
	push	DWORD PTR _b$[esp+16]
	call	_BIO_ctrl
; Line 444
	add	esp, 24					; 00000018H
	ret	0
_asn1_bio_set_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_setup_ex
_TEXT	SEGMENT
_b$ = 8							; size = 4
_ctx$ = 12						; size = 4
_setup$ = 16						; size = 4
_ex_state$ = 20						; size = 4
_other_state$ = 24					; size = 4
_asn1_bio_setup_ex PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 322
	mov	ecx, DWORD PTR _setup$[esp-4]
	push	esi
	mov	esi, DWORD PTR _ctx$[esp]
	test	ecx, ecx
	je	SHORT $LN2@asn1_bio_s
	lea	eax, DWORD PTR [esi+60]
	push	eax
	lea	eax, DWORD PTR [esi+52]
	push	eax
	lea	eax, DWORD PTR [esi+48]
	push	eax
	push	DWORD PTR _b$[esp+12]
	call	ecx
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN2@asn1_bio_s
; Line 323
	push	15					; 0000000fH
	push	DWORD PTR _b$[esp+4]
	call	_BIO_clear_flags
	add	esp, 8
; Line 324
	xor	eax, eax
	pop	esi
; Line 331
	ret	0
$LN2@asn1_bio_s:
; Line 326
	cmp	DWORD PTR [esi+52], 0
	mov	eax, DWORD PTR _other_state$[esp]
	cmovg	eax, DWORD PTR _ex_state$[esp]
	mov	DWORD PTR [esi], eax
; Line 330
	mov	eax, 1
	pop	esi
; Line 331
	ret	0
_asn1_bio_setup_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_flush_ex
_TEXT	SEGMENT
_b$ = 8							; size = 4
_ctx$ = 12						; size = 4
_cleanup$ = 16						; size = 4
_next$ = 20						; size = 4
_asn1_bio_flush_ex PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 295
	push	esi
	push	edi
; Line 297
	mov	edi, DWORD PTR _ctx$[esp+4]
	mov	eax, DWORD PTR [edi+52]
	lea	esi, DWORD PTR [edi+52]
	test	eax, eax
	jg	SHORT $LN5@asn1_bio_f
; Line 298
	pop	edi
	mov	eax, 1
	pop	esi
; Line 315
	ret	0
$LN5@asn1_bio_f:
	push	ebx
	push	ebp
; Line 300
	push	eax
	mov	eax, DWORD PTR [edi+48]
	lea	ebp, DWORD PTR [edi+48]
	add	eax, DWORD PTR [edi+56]
	push	eax
	mov	eax, DWORD PTR _b$[esp+20]
	push	DWORD PTR [eax+36]
	call	_BIO_write
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 301
	test	ebx, ebx
	jle	SHORT $LN3@asn1_bio_f
	npad	6
$LL2@asn1_bio_f:
; Line 303
	sub	DWORD PTR [esi], ebx
	mov	eax, DWORD PTR [esi]
; Line 304
	test	eax, eax
	jle	SHORT $LN7@asn1_bio_f
; Line 305
	add	DWORD PTR [edi+56], ebx
	push	eax
	mov	eax, DWORD PTR [ebp]
	add	eax, DWORD PTR [edi+56]
	push	eax
	mov	eax, DWORD PTR _b$[esp+20]
	push	DWORD PTR [eax+36]
	call	_BIO_write
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jg	SHORT $LL2@asn1_bio_f
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 315
	ret	0
$LN7@asn1_bio_f:
; Line 307
	mov	ecx, DWORD PTR _cleanup$[esp+12]
	test	ecx, ecx
	je	SHORT $LN9@asn1_bio_f
; Line 308
	lea	eax, DWORD PTR [edi+60]
	push	eax
	push	esi
	push	ebp
	push	DWORD PTR _b$[esp+24]
	call	ecx
	add	esp, 16					; 00000010H
$LN9@asn1_bio_f:
; Line 309
	mov	eax, DWORD PTR _next$[esp+12]
	mov	DWORD PTR [edi], eax
; Line 310
	mov	DWORD PTR [edi+56], 0
$LN3@asn1_bio_f:
; Line 314
	pop	ebp
	mov	eax, ebx
	pop	ebx
	pop	edi
	pop	esi
; Line 315
	ret	0
_asn1_bio_flush_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_size$ = 12						; size = 4
_asn1_bio_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 163
	push	esi
; Line 164
	mov	esi, DWORD PTR _size$[esp]
	push	164					; 000000a4H
	push	OFFSET ??_C@_0BJ@JFDEBOM@?4?2crypto?2asn1?2bio_asn1?4c?$AA@
	push	esi
	call	_CRYPTO_malloc
	mov	ecx, DWORD PTR _ctx$[esp+12]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ecx+4], eax
; Line 165
	test	eax, eax
	jne	SHORT $LN2@asn1_bio_i
	pop	esi
; Line 178
	ret	0
$LN2@asn1_bio_i:
; Line 167
	mov	DWORD PTR [ecx+8], esi
; Line 177
	mov	eax, 1
	mov	DWORD PTR [ecx+12], 0
	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+28], 4
	mov	DWORD PTR [ecx+48], 0
	mov	DWORD PTR [ecx+56], 0
	mov	DWORD PTR [ecx+52], 0
	mov	DWORD PTR [ecx], 0
	pop	esi
; Line 178
	ret	0
_asn1_bio_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_callback_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_fp$ = 16						; size = 4
_asn1_bio_callback_ctrl PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 354
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax+36]
	test	eax, eax
	jne	SHORT $LN2@asn1_bio_c
; Line 357
	ret	0
$LN2@asn1_bio_c:
; Line 356
	mov	DWORD PTR _b$[esp-4], eax
	jmp	_BIO_callback_ctrl
_asn1_bio_callback_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_free
_TEXT	SEGMENT
_b$ = 8							; size = 4
_asn1_bio_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 181
	push	esi
; Line 183
	mov	esi, DWORD PTR _b$[esp]
	push	edi
	mov	edi, DWORD PTR [esi+32]
; Line 184
	test	edi, edi
	jne	SHORT $LN2@asn1_bio_f
; Line 185
	pop	edi
	xor	eax, eax
	pop	esi
; Line 193
	ret	0
$LN2@asn1_bio_f:
; Line 186
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN3@asn1_bio_f
; Line 187
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@asn1_bio_f:
; Line 188
	push	edi
	call	_CRYPTO_free
	add	esp, 4
; Line 189
	mov	DWORD PTR [esi+12], 0
; Line 190
	mov	DWORD PTR [esi+32], 0
; Line 192
	mov	eax, 1
	mov	DWORD PTR [esi+20], 0
	pop	edi
	pop	esi
; Line 193
	ret	0
_asn1_bio_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_new
_TEXT	SEGMENT
_b$ = 8							; size = 4
_asn1_bio_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 147
	push	esi
; Line 149
	push	149					; 00000095H
	push	OFFSET ??_C@_0BJ@JFDEBOM@?4?2crypto?2asn1?2bio_asn1?4c?$AA@
	push	64					; 00000040H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 150
	test	esi, esi
	je	SHORT $LN5@asn1_bio_n
; Line 152
	push	20					; 00000014H
	push	esi
	call	_asn1_bio_init
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@asn1_bio_n
; Line 153
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN5@asn1_bio_n:
; Line 154
	xor	eax, eax
	pop	esi
; Line 160
	ret	0
$LN3@asn1_bio_n:
; Line 156
	mov	eax, DWORD PTR _b$[esp]
; Line 157
	mov	DWORD PTR [eax+32], esi
	mov	DWORD PTR [eax+12], 1
; Line 158
	mov	DWORD PTR [eax+20], 0
; Line 159
	mov	eax, 1
	pop	esi
; Line 160
	ret	0
_asn1_bio_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_arg1$ = 16						; size = 4
_arg2$ = 20						; size = 4
_asn1_bio_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 360
	push	esi
	push	edi
; Line 364
	mov	edi, DWORD PTR _b$[esp+4]
	mov	esi, DWORD PTR [edi+32]
; Line 365
	test	esi, esi
	jne	SHORT $LN4@asn1_bio_c
; Line 366
	pop	edi
	xor	eax, eax
	pop	esi
; Line 435
	ret	0
$LN4@asn1_bio_c:
	push	ebx
; Line 367
	mov	ebx, DWORD PTR _cmd$[esp+8]
	lea	eax, DWORD PTR [ebx-11]
	cmp	eax, 143				; 0000008fH
	ja	$LN19@asn1_bio_c
	movzx	eax, BYTE PTR $LN22@asn1_bio_c[eax]
	jmp	DWORD PTR $LN27@asn1_bio_c[eax*4]
$LN5@asn1_bio_c:
; Line 371
	mov	ecx, DWORD PTR _arg2$[esp+8]
	pop	ebx
	pop	edi
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+32], eax
; Line 372
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+36], eax
; Line 434
	mov	eax, 1
	pop	esi
; Line 435
	ret	0
$LN6@asn1_bio_c:
; Line 377
	mov	ecx, DWORD PTR _arg2$[esp+8]
	mov	eax, DWORD PTR [esi+32]
	pop	ebx
	pop	edi
	mov	DWORD PTR [ecx], eax
; Line 378
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [ecx+4], eax
; Line 434
	mov	eax, 1
	pop	esi
; Line 435
	ret	0
$LN7@asn1_bio_c:
; Line 383
	mov	ecx, DWORD PTR _arg2$[esp+8]
	pop	ebx
	pop	edi
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+40], eax
; Line 384
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+44], eax
; Line 434
	mov	eax, 1
	pop	esi
; Line 435
	ret	0
$LN8@asn1_bio_c:
; Line 389
	mov	ecx, DWORD PTR _arg2$[esp+8]
	mov	eax, DWORD PTR [esi+40]
	pop	ebx
	pop	edi
	mov	DWORD PTR [ecx], eax
; Line 390
	mov	eax, DWORD PTR [esi+44]
	mov	DWORD PTR [ecx+4], eax
; Line 434
	mov	eax, 1
	pop	esi
; Line 435
	ret	0
$LN9@asn1_bio_c:
; Line 394
	mov	eax, DWORD PTR _arg2$[esp+8]
	pop	ebx
	mov	DWORD PTR [esi+60], eax
; Line 434
	mov	eax, 1
	pop	edi
	pop	esi
; Line 435
	ret	0
$LN10@asn1_bio_c:
; Line 398
	mov	eax, DWORD PTR _arg2$[esp+8]
	mov	ecx, DWORD PTR [esi+60]
	pop	ebx
	pop	edi
	mov	DWORD PTR [eax], ecx
; Line 434
	mov	eax, 1
	pop	esi
; Line 435
	ret	0
$LN11@asn1_bio_c:
; Line 402
	cmp	DWORD PTR [edi+36], 0
	je	SHORT $LN25@asn1_bio_c
; Line 406
	cmp	DWORD PTR [esi], 2
	jne	SHORT $LN14@asn1_bio_c
; Line 407
	push	6
	push	5
	push	DWORD PTR [esi+40]
	push	esi
	push	edi
	call	_asn1_bio_setup_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN25@asn1_bio_c
$LN14@asn1_bio_c:
; Line 412
	cmp	DWORD PTR [esi], 5
	jne	SHORT $LN16@asn1_bio_c
; Line 413
	push	6
	push	DWORD PTR [esi+44]
	push	esi
	push	edi
	call	_asn1_bio_flush_ex
	add	esp, 16					; 00000010H
; Line 415
	test	eax, eax
	jle	SHORT $LN23@asn1_bio_c
$LN16@asn1_bio_c:
; Line 419
	cmp	DWORD PTR [esi], 6
	jne	SHORT $LN17@asn1_bio_c
; Line 420
	push	DWORD PTR _arg2$[esp+8]
	push	DWORD PTR _arg1$[esp+12]
	push	ebx
	push	DWORD PTR [edi+36]
; Line 430
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	pop	ebx
	pop	edi
	pop	esi
; Line 435
	ret	0
$LN17@asn1_bio_c:
; Line 422
	push	15					; 0000000fH
	push	edi
	call	_BIO_clear_flags
	add	esp, 8
$LN25@asn1_bio_c:
; Line 423
	pop	ebx
	pop	edi
	xor	eax, eax
	pop	esi
; Line 435
	ret	0
$LN19@asn1_bio_c:
; Line 428
	mov	eax, DWORD PTR [edi+36]
	test	eax, eax
	je	SHORT $LN25@asn1_bio_c
; Line 430
	push	DWORD PTR _arg2$[esp+8]
	push	DWORD PTR _arg1$[esp+12]
	push	ebx
	push	eax
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
$LN23@asn1_bio_c:
; Line 435
	pop	ebx
	pop	edi
	pop	esi
	ret	0
$LN27@asn1_bio_c:
	DD	$LN11@asn1_bio_c
	DD	$LN5@asn1_bio_c
	DD	$LN6@asn1_bio_c
	DD	$LN7@asn1_bio_c
	DD	$LN8@asn1_bio_c
	DD	$LN9@asn1_bio_c
	DD	$LN10@asn1_bio_c
	DD	$LN19@asn1_bio_c
$LN22@asn1_bio_c:
	DB	0
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
_asn1_bio_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_gets
_TEXT	SEGMENT
_b$ = 8							; size = 4
_str$ = 12						; size = 4
_size$ = 16						; size = 4
_asn1_bio_gets PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 347
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax+36]
	test	eax, eax
	jne	SHORT $LN2@asn1_bio_g
; Line 350
	ret	0
$LN2@asn1_bio_g:
; Line 349
	mov	DWORD PTR _b$[esp-4], eax
	jmp	_BIO_gets
_asn1_bio_gets ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_puts
_TEXT	SEGMENT
_b$ = 8							; size = 4
_str$ = 12						; size = 4
_asn1_bio_puts PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 342
	mov	edx, DWORD PTR _str$[esp-4]
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
	npad	6
$LL3@asn1_bio_p:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@asn1_bio_p
	sub	eax, esi
	push	eax
	push	edx
	push	DWORD PTR _b$[esp+8]
	call	_asn1_bio_write
	add	esp, 12					; 0000000cH
	pop	esi
; Line 343
	ret	0
_asn1_bio_puts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_read
_TEXT	SEGMENT
_b$ = 8							; size = 4
_in$ = 12						; size = 4
_inl$ = 16						; size = 4
_asn1_bio_read PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 335
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax+36]
	test	eax, eax
	jne	SHORT $LN2@asn1_bio_r
; Line 338
	ret	0
$LN2@asn1_bio_r:
; Line 337
	mov	DWORD PTR _b$[esp-4], eax
	jmp	_BIO_read
_asn1_bio_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_bio_write
_TEXT	SEGMENT
_wrlen$1$ = -8						; size = 4
_p$ = -4						; size = 4
_b$ = 8							; size = 4
_in$ = 12						; size = 4
_inl$ = 16						; size = 4
_asn1_bio_write PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 196
	mov	eax, 8
	call	__chkstk
; Line 200
	mov	edx, DWORD PTR _in$[esp+4]
	push	ebx
	push	ebp
	test	edx, edx
	je	$LN8@asn1_bio_w
	mov	ebp, DWORD PTR _inl$[esp+12]
	test	ebp, ebp
	js	$LN8@asn1_bio_w
	mov	ebx, DWORD PTR _b$[esp+12]
	cmp	DWORD PTR [ebx+36], 0
	je	$LN8@asn1_bio_w
; Line 202
	push	esi
	mov	esi, DWORD PTR [ebx+32]
; Line 204
	xor	eax, eax
	test	esi, esi
	je	SHORT $LN38@asn1_bio_w
; Line 206
	mov	DWORD PTR _wrlen$1$[esp+20], eax
; Line 210
	mov	eax, DWORD PTR [esi]
	push	edi
	cmp	eax, 4
	ja	SHORT $LN36@asn1_bio_w
$LL2@asn1_bio_w:
	jmp	DWORD PTR $LN41@asn1_bio_w[eax*4]
$LN10@asn1_bio_w:
; Line 214
	push	2
	push	1
	push	DWORD PTR [esi+32]
	push	esi
	push	ebx
	call	_asn1_bio_setup_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN30@asn1_bio_w
$LN37@asn1_bio_w:
	mov	edx, DWORD PTR _in$[esp+20]
$LN24@asn1_bio_w:
; Line 210
	mov	eax, DWORD PTR [esi]
	cmp	eax, 4
	jbe	SHORT $LL2@asn1_bio_w
$LN36@asn1_bio_w:
; Line 278
	push	15					; 0000000fH
	push	ebx
	call	_BIO_clear_flags
	add	esp, 8
$LN30@asn1_bio_w:
; Line 279
	xor	eax, eax
	pop	edi
$LN38@asn1_bio_w:
	pop	esi
	pop	ebp
	pop	ebx
; Line 291
	add	esp, 8
	ret	0
$LN12@asn1_bio_w:
; Line 222
	push	2
	push	DWORD PTR [esi+36]
	push	esi
	push	ebx
	call	_asn1_bio_flush_ex
	mov	edi, eax
	add	esp, 16					; 00000010H
; Line 225
	test	edi, edi
	jg	SHORT $LN37@asn1_bio_w
$done$42:
; Line 286
	push	15					; 0000000fH
	push	ebx
	call	_BIO_clear_flags
; Line 287
	push	ebx
	call	_BIO_copy_next_retry
; Line 289
	mov	eax, DWORD PTR _wrlen$1$[esp+36]
	add	esp, 12					; 0000000cH
	test	eax, eax
	cmovg	edi, eax
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 291
	add	esp, 8
	ret	0
$LN14@asn1_bio_w:
; Line 231
	push	DWORD PTR [esi+28]
	push	ebp
	push	0
	call	_ASN1_object_size
	sub	eax, ebp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+16], eax
; Line 232
	cmp	eax, DWORD PTR [esi+8]
	jle	SHORT $LN28@asn1_bio_w
	push	OFFSET ??_C@_0BM@FIMHHPDL@ctx?9?$DObuflen?5?$DM?$DN?5ctx?9?$DObufsize?$AA@
	push	232					; 000000e8H
	push	OFFSET ??_C@_0BJ@JFDEBOM@?4?2crypto?2asn1?2bio_asn1?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN28@asn1_bio_w:
; Line 233
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR _p$[esp+24], eax
; Line 234
	lea	eax, DWORD PTR _p$[esp+24]
	push	DWORD PTR [esi+24]
	push	DWORD PTR [esi+28]
	push	ebp
	push	0
	push	eax
	call	_ASN1_put_object
	add	esp, 20					; 00000014H
; Line 235
	mov	DWORD PTR [esi+20], ebp
; Line 236
	mov	DWORD PTR [esi], 3
; Line 238
	jmp	$LN37@asn1_bio_w
$LN15@asn1_bio_w:
; Line 241
	push	DWORD PTR [esi+16]
	mov	eax, DWORD PTR [esi+4]
	add	eax, DWORD PTR [esi+12]
	push	eax
	push	DWORD PTR [ebx+36]
	call	_BIO_write
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 242
	test	edi, edi
	jle	$done$42
; Line 245
	sub	DWORD PTR [esi+16], edi
; Line 247
	mov	edx, DWORD PTR _in$[esp+20]
	je	SHORT $LN17@asn1_bio_w
	add	DWORD PTR [esi+12], edi
	jmp	$LN24@asn1_bio_w
$LN17@asn1_bio_w:
; Line 249
	mov	DWORD PTR [esi+12], 0
; Line 250
	mov	DWORD PTR [esi], 4
; Line 253
	jmp	$LN24@asn1_bio_w
$LN19@asn1_bio_w:
; Line 257
	cmp	ebp, DWORD PTR [esi+20]
	mov	ecx, ebp
	cmovg	ecx, DWORD PTR [esi+20]
; Line 261
	push	ecx
	push	edx
	push	DWORD PTR [ebx+36]
	call	_BIO_write
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 262
	test	edi, edi
	jle	$LN37@asn1_bio_w
; Line 266
	mov	edx, DWORD PTR _in$[esp+20]
; Line 267
	sub	ebp, edi
	add	DWORD PTR _wrlen$1$[esp+24], edi
	add	edx, edi
	sub	DWORD PTR [esi+20], edi
; Line 269
	cmp	DWORD PTR [esi+20], 0
	mov	DWORD PTR _in$[esp+20], edx
	jne	SHORT $LN23@asn1_bio_w
; Line 270
	mov	DWORD PTR [esi], 2
$LN23@asn1_bio_w:
; Line 272
	test	ebp, ebp
	je	$done$42
	jmp	$LN24@asn1_bio_w
$LN8@asn1_bio_w:
	pop	ebp
; Line 201
	xor	eax, eax
	pop	ebx
; Line 291
	add	esp, 8
	ret	0
	npad	3
$LN41@asn1_bio_w:
	DD	$LN10@asn1_bio_w
	DD	$LN12@asn1_bio_w
	DD	$LN14@asn1_bio_w
	DD	$LN15@asn1_bio_w
	DD	$LN19@asn1_bio_w
_asn1_bio_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_f_asn1
_TEXT	SEGMENT
_BIO_f_asn1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 143
	mov	eax, OFFSET _methods_asn1
; Line 144
	ret	0
_BIO_f_asn1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_asn1_get_suffix
_TEXT	SEGMENT
_extmp$1 = -8						; size = 8
_b$ = 8							; size = 4
_psuffix$ = 12						; size = 4
_psuffix_free$ = 16					; size = 4
_BIO_asn1_get_suffix PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 480
	mov	eax, 8
	call	__chkstk
; Line 452
	lea	eax, DWORD PTR _extmp$1[esp+8]
	push	eax
	push	0
	push	152					; 00000098H
	push	DWORD PTR _b$[esp+16]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 453
	test	eax, eax
	jle	SHORT $LN4@BIO_asn1_g
; Line 454
	mov	edx, DWORD PTR _psuffix$[esp+4]
	mov	ecx, DWORD PTR _extmp$1[esp+8]
	mov	DWORD PTR [edx], ecx
; Line 455
	mov	edx, DWORD PTR _psuffix_free$[esp+4]
	mov	ecx, DWORD PTR _extmp$1[esp+12]
	mov	DWORD PTR [edx], ecx
$LN4@BIO_asn1_g:
; Line 482
	add	esp, 8
	ret	0
_BIO_asn1_get_suffix ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_asn1_set_suffix
_TEXT	SEGMENT
_extmp$1 = -8						; size = 8
_b$ = 8							; size = 4
_suffix$ = 12						; size = 4
_suffix_free$ = 16					; size = 4
_BIO_asn1_set_suffix PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 474
	mov	eax, 8
	call	__chkstk
; Line 441
	mov	eax, DWORD PTR _suffix$[esp+4]
	mov	DWORD PTR _extmp$1[esp+8], eax
; Line 442
	mov	eax, DWORD PTR _suffix_free$[esp+4]
	mov	DWORD PTR _extmp$1[esp+12], eax
; Line 443
	lea	eax, DWORD PTR _extmp$1[esp+8]
	push	eax
	push	0
	push	151					; 00000097H
	push	DWORD PTR _b$[esp+16]
	call	_BIO_ctrl
; Line 476
	add	esp, 24					; 00000018H
	ret	0
_BIO_asn1_set_suffix ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_asn1_get_prefix
_TEXT	SEGMENT
_extmp$1 = -8						; size = 8
_b$ = 8							; size = 4
_pprefix$ = 12						; size = 4
_pprefix_free$ = 16					; size = 4
_BIO_asn1_get_prefix PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 468
	mov	eax, 8
	call	__chkstk
; Line 452
	lea	eax, DWORD PTR _extmp$1[esp+8]
	push	eax
	push	0
	push	150					; 00000096H
	push	DWORD PTR _b$[esp+16]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 453
	test	eax, eax
	jle	SHORT $LN4@BIO_asn1_g
; Line 454
	mov	edx, DWORD PTR _pprefix$[esp+4]
	mov	ecx, DWORD PTR _extmp$1[esp+8]
	mov	DWORD PTR [edx], ecx
; Line 455
	mov	edx, DWORD PTR _pprefix_free$[esp+4]
	mov	ecx, DWORD PTR _extmp$1[esp+12]
	mov	DWORD PTR [edx], ecx
$LN4@BIO_asn1_g:
; Line 470
	add	esp, 8
	ret	0
_BIO_asn1_get_prefix ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_asn1_set_prefix
_TEXT	SEGMENT
_extmp$1 = -8						; size = 8
_b$ = 8							; size = 4
_prefix$ = 12						; size = 4
_prefix_free$ = 16					; size = 4
_BIO_asn1_set_prefix PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\bio_asn1.c
; Line 462
	mov	eax, 8
	call	__chkstk
; Line 441
	mov	eax, DWORD PTR _prefix$[esp+4]
	mov	DWORD PTR _extmp$1[esp+8], eax
; Line 442
	mov	eax, DWORD PTR _prefix_free$[esp+4]
	mov	DWORD PTR _extmp$1[esp+12], eax
; Line 443
	lea	eax, DWORD PTR _extmp$1[esp+8]
	push	eax
	push	0
	push	149					; 00000095H
	push	DWORD PTR _b$[esp+16]
	call	_BIO_ctrl
; Line 464
	add	esp, 24					; 00000018H
	ret	0
_BIO_asn1_set_prefix ENDP
_TEXT	ENDS
END

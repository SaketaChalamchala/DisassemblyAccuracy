; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_names_lh DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_names_type_num DD 05H
_DATA	ENDS
PUBLIC	_OBJ_NAME_init
PUBLIC	_OBJ_NAME_new_index
PUBLIC	_OBJ_NAME_get
PUBLIC	_OBJ_NAME_add
PUBLIC	_OBJ_NAME_remove
PUBLIC	_OBJ_NAME_cleanup
PUBLIC	_OBJ_NAME_do_all
PUBLIC	_OBJ_NAME_do_all_sorted
PUBLIC	??_C@_0BL@PDJKIALP@?4?2crypto?2objects?2o_names?4c?$AA@ ; `string'
EXTRN	_strcmp:PROC
EXTRN	__imp__qsort:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_mem_ctrl:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_lh_new:PROC
EXTRN	_lh_free:PROC
EXTRN	_lh_insert:PROC
EXTRN	_lh_delete:PROC
EXTRN	_lh_retrieve:PROC
EXTRN	_lh_doall:PROC
EXTRN	_lh_doall_arg:PROC
EXTRN	_lh_strhash:PROC
EXTRN	_lh_num_items:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	__chkstk:PROC
_BSS	SEGMENT
_name_funcs_stack DD 01H DUP (?)
_free_type DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0BL@PDJKIALP@?4?2crypto?2objects?2o_names?4c?$AA@
CONST	SEGMENT
??_C@_0BL@PDJKIALP@?4?2crypto?2objects?2o_names?4c?$AA@ DB '.\crypto\obje'
	DB	'cts\o_names.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _name_funcs_free
_TEXT	SEGMENT
_ptr$ = 8						; size = 4
_name_funcs_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 344
	jmp	_CRYPTO_free
_name_funcs_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _names_lh_free_LHASH_DOALL
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_names_lh_free_LHASH_DOALL PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 333
	mov	eax, DWORD PTR _arg$[esp-4]
	test	eax, eax
	je	SHORT $LN5@names_lh_f
; Line 336
	mov	ecx, DWORD PTR _free_type
	test	ecx, ecx
	js	SHORT $LN6@names_lh_f
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@names_lh_f
$LN6@names_lh_f:
; Line 337
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	call	_OBJ_NAME_remove
	add	esp, 8
$LN5@names_lh_f:
; Line 340
	ret	0
_names_lh_free_LHASH_DOALL ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _names_lh_free_doall
_TEXT	SEGMENT
_onp$ = 8						; size = 4
_names_lh_free_doall PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 333
	mov	eax, DWORD PTR _onp$[esp-4]
	test	eax, eax
	je	SHORT $LN3@names_lh_f
; Line 336
	mov	ecx, DWORD PTR _free_type
	test	ecx, ecx
	js	SHORT $LN4@names_lh_f
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@names_lh_f
$LN4@names_lh_f:
; Line 337
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	call	_OBJ_NAME_remove
	add	esp, 8
$LN3@names_lh_f:
; Line 338
	ret	0
_names_lh_free_doall ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_all_sorted_cmp
_TEXT	SEGMENT
_n1_$ = 8						; size = 4
_n2_$ = 12						; size = 4
_do_all_sorted_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 302
	mov	eax, DWORD PTR _n2_$[esp-4]
	mov	ecx, DWORD PTR _n1_$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+8]
	mov	ecx, DWORD PTR [ecx+8]
$LL3@do_all_sor:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN4@do_all_sor
	test	dl, dl
	je	SHORT $LN5@do_all_sor
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN4@do_all_sor
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL3@do_all_sor
$LN5@do_all_sor:
	xor	eax, eax
; Line 303
	ret	0
$LN4@do_all_sor:
; Line 302
	sbb	eax, eax
	or	eax, 1
; Line 303
	ret	0
_do_all_sorted_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_all_sorted_fn
_TEXT	SEGMENT
_name$ = 8						; size = 4
_d_$ = 12						; size = 4
_do_all_sorted_fn PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 291
	mov	edx, DWORD PTR _d_$[esp-4]
	push	esi
	mov	esi, DWORD PTR _name$[esp]
	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN1@do_all_sor
; Line 294
	mov	ecx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+ecx*4], esi
	inc	DWORD PTR [edx+4]
$LN1@do_all_sor:
	pop	esi
; Line 295
	ret	0
_do_all_sorted_fn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_all_fn_LHASH_DOALL_ARG
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_do_all_fn_LHASH_DOALL_ARG PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 262
	mov	edx, DWORD PTR _arg1$[esp-4]
	mov	ecx, DWORD PTR _arg2$[esp-4]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN4@do_all_fn_
; Line 263
	push	DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [ecx+4]
	push	edx
	call	eax
	add	esp, 8
$LN4@do_all_fn_:
; Line 266
	ret	0
_do_all_fn_LHASH_DOALL_ARG ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_all_fn_doall_arg
_TEXT	SEGMENT
_name$ = 8						; size = 4
_d$ = 12						; size = 4
_do_all_fn_doall_arg PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 262
	mov	edx, DWORD PTR _name$[esp-4]
	mov	ecx, DWORD PTR _d$[esp-4]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN2@do_all_fn_
; Line 263
	push	DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [ecx+4]
	push	edx
	call	eax
	add	esp, 8
$LN2@do_all_fn_:
; Line 264
	ret	0
_do_all_fn_doall_arg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _obj_name_LHASH_COMP
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_obj_name_LHASH_COMP PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 54
	jmp	_obj_name_cmp
_obj_name_LHASH_COMP ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _obj_name_LHASH_HASH
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_obj_name_LHASH_HASH PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 139
	mov	eax, DWORD PTR _name_funcs_stack
	push	esi
	mov	esi, DWORD PTR _arg$[esp]
	push	edi
	test	eax, eax
	je	SHORT $LN4@obj_name_L
	mov	edi, DWORD PTR [esi]
	push	eax
	call	_sk_num
	add	esp, 4
	cmp	eax, edi
	jle	SHORT $LN4@obj_name_L
; Line 140
	push	edi
	push	DWORD PTR _name_funcs_stack
	call	_sk_value
	push	DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax]
	call	eax
	add	esp, 12					; 0000000cH
; Line 144
	mov	ecx, eax
; Line 146
	mov	eax, DWORD PTR [esi]
	xor	eax, ecx
	pop	edi
	pop	esi
; Line 53
	ret	0
$LN4@obj_name_L:
; Line 144
	push	DWORD PTR [esi+8]
	call	_lh_strhash
	add	esp, 4
	mov	ecx, eax
; Line 146
	mov	eax, DWORD PTR [esi]
	xor	eax, ecx
	pop	edi
	pop	esi
; Line 53
	ret	0
_obj_name_LHASH_HASH ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _obj_name_cmp
_TEXT	SEGMENT
_a_void$ = 8						; size = 4
_b_void$ = 12						; size = 4
_obj_name_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 115
	push	esi
; Line 120
	mov	esi, DWORD PTR _a_void$[esp]
	push	edi
	mov	edi, DWORD PTR _b_void$[esp+4]
	mov	eax, DWORD PTR [esi]
	sub	eax, DWORD PTR [edi]
; Line 121
	jne	SHORT $LN4@obj_name_c
; Line 123
	mov	eax, DWORD PTR _name_funcs_stack
	push	ebx
	test	eax, eax
	je	SHORT $LN3@obj_name_c
	mov	ebx, DWORD PTR [esi]
	push	eax
	call	_sk_num
	add	esp, 4
	cmp	eax, ebx
	jle	SHORT $LN3@obj_name_c
; Line 124
	push	ebx
	push	DWORD PTR _name_funcs_stack
	call	_sk_value
	push	DWORD PTR [edi+8]
	push	DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax+4]
	call	eax
	add	esp, 16					; 00000010H
	pop	ebx
	pop	edi
	pop	esi
; Line 130
	ret	0
$LN3@obj_name_c:
; Line 127
	mov	eax, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [esi+8]
	npad	3
$LL6@obj_name_c:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN7@obj_name_c
	test	dl, dl
	je	SHORT $LN8@obj_name_c
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN7@obj_name_c
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL6@obj_name_c
$LN8@obj_name_c:
	pop	ebx
	pop	edi
	xor	eax, eax
	pop	esi
; Line 130
	ret	0
$LN7@obj_name_c:
; Line 127
	sbb	eax, eax
	or	eax, 1
	pop	ebx
$LN4@obj_name_c:
; Line 130
	pop	edi
	pop	esi
	ret	0
_obj_name_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _obj_name_hash
_TEXT	SEGMENT
_a_void$ = 8						; size = 4
_obj_name_hash PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 139
	mov	eax, DWORD PTR _name_funcs_stack
	push	esi
	mov	esi, DWORD PTR _a_void$[esp]
	push	edi
	test	eax, eax
	je	SHORT $LN2@obj_name_h
	mov	edi, DWORD PTR [esi]
	push	eax
	call	_sk_num
	add	esp, 4
	cmp	eax, edi
	jle	SHORT $LN2@obj_name_h
; Line 140
	push	edi
	push	DWORD PTR _name_funcs_stack
	call	_sk_value
	push	DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax]
	call	eax
	add	esp, 12					; 0000000cH
; Line 144
	mov	ecx, eax
; Line 146
	mov	eax, DWORD PTR [esi]
	xor	eax, ecx
	pop	edi
	pop	esi
; Line 148
	ret	0
$LN2@obj_name_h:
; Line 144
	push	DWORD PTR [esi+8]
	call	_lh_strhash
	add	esp, 4
	mov	ecx, eax
; Line 146
	mov	eax, DWORD PTR [esi]
	xor	eax, ecx
	pop	edi
	pop	esi
; Line 148
	ret	0
_obj_name_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OBJ_NAME_do_all_sorted
_TEXT	SEGMENT
_d$ = -24						; size = 12
_d$1 = -12						; size = 12
_type$ = 8						; size = 4
_fn$ = 12						; size = 4
_arg$ = 16						; size = 4
_OBJ_NAME_do_all_sorted PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 308
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	esi
; Line 312
	mov	esi, DWORD PTR _type$[esp+24]
; Line 313
	push	314					; 0000013aH
	push	OFFSET ??_C@_0BL@PDJKIALP@?4?2crypto?2objects?2o_names?4c?$AA@
	push	DWORD PTR _names_lh
	mov	DWORD PTR _d$[esp+40], esi
	call	_lh_num_items
	add	esp, 4
	shl	eax, 2
	push	eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _d$[esp+36], eax
; Line 316
	test	eax, eax
	je	$LN5@OBJ_NAME_d
; Line 275
	lea	eax, DWORD PTR _d$[esp+28]
; Line 317
	mov	DWORD PTR _d$[esp+32], 0
; Line 275
	mov	DWORD PTR _d$1[esp+36], eax
; Line 277
	lea	eax, DWORD PTR _d$1[esp+28]
	push	eax
	push	OFFSET _do_all_fn_LHASH_DOALL_ARG
	push	DWORD PTR _names_lh
	mov	DWORD PTR _d$1[esp+40], esi
	mov	DWORD PTR _d$1[esp+44], OFFSET _do_all_sorted_fn
	call	_lh_doall_arg
; Line 320
	push	OFFSET _do_all_sorted_cmp
	push	4
	push	DWORD PTR _d$[esp+52]
	push	DWORD PTR _d$[esp+60]
	call	DWORD PTR __imp__qsort
; Line 322
	xor	esi, esi
	add	esp, 28					; 0000001cH
	cmp	DWORD PTR _d$[esp+32], esi
	jle	SHORT $LN3@OBJ_NAME_d
	push	ebx
	mov	ebx, DWORD PTR _fn$[esp+28]
	push	edi
	mov	edi, DWORD PTR _arg$[esp+32]
	npad	2
$LL4@OBJ_NAME_d:
; Line 323
	mov	eax, DWORD PTR _d$[esp+44]
	push	edi
	push	DWORD PTR [eax+esi*4]
	call	ebx
	inc	esi
	add	esp, 8
	cmp	esi, DWORD PTR _d$[esp+40]
	jl	SHORT $LL4@OBJ_NAME_d
	pop	edi
	pop	ebx
$LN3@OBJ_NAME_d:
; Line 325
	push	DWORD PTR _d$[esp+36]
	call	_CRYPTO_free
	add	esp, 4
$LN5@OBJ_NAME_d:
	pop	esi
; Line 327
	add	esp, 24					; 00000018H
	ret	0
_OBJ_NAME_do_all_sorted ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OBJ_NAME_do_all
_TEXT	SEGMENT
_d$ = -12						; size = 12
_type$ = 8						; size = 4
_fn$ = 12						; size = 4
_arg$ = 16						; size = 4
_OBJ_NAME_do_all PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 270
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 273
	mov	eax, DWORD PTR _type$[esp+8]
	mov	DWORD PTR _d$[esp+12], eax
; Line 274
	mov	eax, DWORD PTR _fn$[esp+8]
	mov	DWORD PTR _d$[esp+16], eax
; Line 275
	mov	eax, DWORD PTR _arg$[esp+8]
	mov	DWORD PTR _d$[esp+20], eax
; Line 277
	lea	eax, DWORD PTR _d$[esp+12]
	push	eax
	push	OFFSET _do_all_fn_LHASH_DOALL_ARG
	push	DWORD PTR _names_lh
	call	_lh_doall_arg
; Line 279
	add	esp, 24					; 00000018H
	ret	0
_OBJ_NAME_do_all ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OBJ_NAME_cleanup
_TEXT	SEGMENT
_type$ = 8						; size = 4
_OBJ_NAME_cleanup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 351
	mov	eax, DWORD PTR _names_lh
	test	eax, eax
	je	SHORT $LN4@OBJ_NAME_c
; Line 354
	push	esi
	mov	esi, DWORD PTR _type$[esp]
	push	edi
; Line 355
	mov	edi, DWORD PTR [eax+32]
; Line 358
	push	OFFSET _names_lh_free_LHASH_DOALL
	push	eax
	mov	DWORD PTR _free_type, esi
	mov	DWORD PTR [eax+32], 0
	call	_lh_doall
	add	esp, 8
; Line 359
	test	esi, esi
	jns	SHORT $LN3@OBJ_NAME_c
; Line 360
	push	DWORD PTR _names_lh
	call	_lh_free
; Line 361
	push	OFFSET _name_funcs_free
	push	DWORD PTR _name_funcs_stack
	call	_sk_pop_free
	add	esp, 12					; 0000000cH
; Line 362
	mov	DWORD PTR _names_lh, 0
; Line 363
	mov	DWORD PTR _name_funcs_stack, 0
	pop	edi
	pop	esi
; Line 366
	ret	0
$LN3@OBJ_NAME_c:
; Line 365
	mov	eax, DWORD PTR _names_lh
	mov	DWORD PTR [eax+32], edi
	pop	edi
	pop	esi
$LN4@OBJ_NAME_c:
; Line 366
	ret	0
_OBJ_NAME_cleanup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OBJ_NAME_remove
_TEXT	SEGMENT
_on$ = -16						; size = 16
_name$ = 8						; size = 4
_type$ = 12						; size = 4
_OBJ_NAME_remove PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 226
	mov	eax, 16					; 00000010H
	call	__chkstk
; Line 229
	mov	ecx, DWORD PTR _names_lh
	test	ecx, ecx
	jne	SHORT $LN2@OBJ_NAME_r
; Line 230
	xor	eax, eax
; Line 252
	add	esp, 16					; 00000010H
	ret	0
$LN2@OBJ_NAME_r:
; Line 233
	mov	eax, DWORD PTR _name$[esp+12]
	mov	DWORD PTR _on$[esp+24], eax
	mov	eax, DWORD PTR _type$[esp+12]
	and	eax, -32769				; ffff7fffH
; Line 234
	mov	DWORD PTR _on$[esp+16], eax
; Line 235
	lea	eax, DWORD PTR _on$[esp+16]
	push	esi
	push	eax
	push	ecx
	call	_lh_delete
	mov	esi, eax
	add	esp, 8
; Line 236
	test	esi, esi
	je	SHORT $LN3@OBJ_NAME_r
; Line 239
	mov	eax, DWORD PTR _name_funcs_stack
	test	eax, eax
	je	SHORT $LN5@OBJ_NAME_r
	push	edi
	mov	edi, DWORD PTR [esi]
	push	eax
	call	_sk_num
	add	esp, 4
	cmp	eax, edi
	jle	SHORT $LN8@OBJ_NAME_r
; Line 245
	push	edi
	push	DWORD PTR _name_funcs_stack
	call	_sk_value
	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+8]
	push	DWORD PTR [esi+8]
	call	eax
	add	esp, 20					; 00000014H
$LN8@OBJ_NAME_r:
	pop	edi
$LN5@OBJ_NAME_r:
; Line 248
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 249
	mov	eax, 1
	pop	esi
; Line 252
	add	esp, 16					; 00000010H
	ret	0
$LN3@OBJ_NAME_r:
; Line 251
	xor	eax, eax
	pop	esi
; Line 252
	add	esp, 16					; 00000010H
	ret	0
_OBJ_NAME_remove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OBJ_NAME_add
_TEXT	SEGMENT
_name$ = 8						; size = 4
_type$ = 12						; size = 4
_data$ = 16						; size = 4
_OBJ_NAME_add PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 185
	cmp	DWORD PTR _names_lh, 0
	jne	SHORT $LN2@OBJ_NAME_a
; Line 60
	push	3
	call	_CRYPTO_mem_ctrl
; Line 61
	push	OFFSET _obj_name_LHASH_COMP
	push	OFFSET _obj_name_LHASH_HASH
	call	_lh_new
; Line 62
	push	2
	mov	DWORD PTR _names_lh, eax
	call	_CRYPTO_mem_ctrl
; Line 63
	xor	eax, eax
	add	esp, 16					; 00000010H
	cmp	DWORD PTR _names_lh, eax
	setne	al
; Line 185
	test	eax, eax
	jne	SHORT $LN2@OBJ_NAME_a
$LN14@OBJ_NAME_a:
; Line 186
	xor	eax, eax
; Line 223
	ret	0
$LN2@OBJ_NAME_a:
; Line 191
	push	191					; 000000bfH
	push	OFFSET ??_C@_0BL@PDJKIALP@?4?2crypto?2objects?2o_names?4c?$AA@
	push	16					; 00000010H
	call	_CRYPTO_malloc
	mov	edx, eax
	add	esp, 12					; 0000000cH
; Line 192
	test	edx, edx
	je	SHORT $LN14@OBJ_NAME_a
; Line 197
	mov	eax, DWORD PTR _name$[esp-4]
	mov	ecx, DWORD PTR _type$[esp-4]
	mov	DWORD PTR [edx+8], eax
	mov	eax, ecx
	push	esi
	and	eax, 32768				; 00008000H
	and	ecx, -32769				; ffff7fffH
; Line 202
	push	edx
	push	DWORD PTR _names_lh
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _data$[esp+8]
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+12], eax
	call	_lh_insert
	mov	esi, eax
	add	esp, 8
; Line 203
	test	esi, esi
	je	SHORT $LN4@OBJ_NAME_a
; Line 206
	mov	eax, DWORD PTR _name_funcs_stack
	test	eax, eax
	je	SHORT $LN6@OBJ_NAME_a
	push	edi
	mov	edi, DWORD PTR [esi]
	push	eax
	call	_sk_num
	add	esp, 4
	cmp	eax, edi
	jle	SHORT $LN13@OBJ_NAME_a
; Line 212
	push	edi
	push	DWORD PTR _name_funcs_stack
	call	_sk_value
	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+8]
	push	DWORD PTR [esi+8]
	call	eax
	add	esp, 20					; 00000014H
$LN13@OBJ_NAME_a:
	pop	edi
$LN6@OBJ_NAME_a:
; Line 215
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN7@OBJ_NAME_a:
; Line 222
	mov	eax, 1
	pop	esi
; Line 223
	ret	0
$LN4@OBJ_NAME_a:
; Line 217
	mov	eax, DWORD PTR _names_lh
	cmp	DWORD PTR [eax+92], 0
	je	SHORT $LN7@OBJ_NAME_a
; Line 219
	xor	eax, eax
	pop	esi
; Line 223
	ret	0
_OBJ_NAME_add ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OBJ_NAME_get
_TEXT	SEGMENT
_on$ = -16						; size = 16
_name$ = 8						; size = 4
_type$ = 12						; size = 4
_OBJ_NAME_get PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 151
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
; Line 155
	mov	ebx, DWORD PTR _name$[esp+16]
	push	esi
	xor	esi, esi
	test	ebx, ebx
	jne	SHORT $LN5@OBJ_NAME_g
$LN19@OBJ_NAME_g:
	pop	esi
; Line 156
	xor	eax, eax
	pop	ebx
; Line 178
	add	esp, 16					; 00000010H
	ret	0
$LN5@OBJ_NAME_g:
; Line 157
	mov	ecx, DWORD PTR _names_lh
	test	ecx, ecx
	jne	SHORT $LN6@OBJ_NAME_g
	call	_OBJ_NAME_init
	test	eax, eax
	je	SHORT $LN19@OBJ_NAME_g
; Line 158
	mov	ecx, DWORD PTR _names_lh
$LN6@OBJ_NAME_g:
; Line 160
	mov	eax, DWORD PTR _type$[esp+20]
	push	edi
	mov	edi, eax
; Line 163
	mov	DWORD PTR _on$[esp+36], ebx
	and	eax, -32769				; ffff7fffH
	and	edi, 32768				; 00008000H
; Line 164
	mov	DWORD PTR _on$[esp+28], eax
; Line 167
	lea	eax, DWORD PTR _on$[esp+28]
	push	eax
	push	ecx
	call	_lh_retrieve
	add	esp, 8
; Line 168
	test	eax, eax
	je	SHORT $LN13@OBJ_NAME_g
$LL2@OBJ_NAME_g:
; Line 170
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN8@OBJ_NAME_g
	test	edi, edi
	jne	SHORT $LN8@OBJ_NAME_g
; Line 171
	inc	esi
	cmp	esi, 10					; 0000000aH
	jg	SHORT $LN13@OBJ_NAME_g
; Line 173
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR _on$[esp+36], eax
	lea	eax, DWORD PTR _on$[esp+28]
	push	eax
	push	DWORD PTR _names_lh
	call	_lh_retrieve
	add	esp, 8
	test	eax, eax
	jne	SHORT $LL2@OBJ_NAME_g
$LN13@OBJ_NAME_g:
	pop	edi
	pop	esi
; Line 169
	xor	eax, eax
	pop	ebx
; Line 178
	add	esp, 16					; 00000010H
	ret	0
$LN8@OBJ_NAME_g:
; Line 175
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
; Line 178
	add	esp, 16					; 00000010H
	ret	0
_OBJ_NAME_get ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OBJ_NAME_new_index
_TEXT	SEGMENT
_hash_func$ = 8						; size = 4
_cmp_func$ = 12						; size = 4
_free_func$ = 16					; size = 4
_OBJ_NAME_new_index PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 74
	mov	ecx, DWORD PTR _name_funcs_stack
	test	ecx, ecx
	jne	SHORT $LN6@OBJ_NAME_n
; Line 75
	push	3
	call	_CRYPTO_mem_ctrl
; Line 76
	call	_sk_new_null
; Line 77
	push	2
	mov	DWORD PTR _name_funcs_stack, eax
	call	_CRYPTO_mem_ctrl
; Line 79
	mov	ecx, DWORD PTR _name_funcs_stack
	add	esp, 8
	test	ecx, ecx
	jne	SHORT $LN6@OBJ_NAME_n
; Line 81
	xor	eax, eax
; Line 111
	ret	0
$LN6@OBJ_NAME_n:
; Line 83
	mov	eax, DWORD PTR _names_type_num
	push	ebx
	push	esi
	mov	ebx, eax
; Line 84
	inc	eax
	push	edi
; Line 85
	push	ecx
	mov	DWORD PTR _names_type_num, eax
	call	_sk_num
	mov	edi, eax
	add	esp, 4
	cmp	edi, DWORD PTR _names_type_num
	jge	SHORT $LN3@OBJ_NAME_n
$LL4@OBJ_NAME_n:
; Line 86
	push	3
	call	_CRYPTO_mem_ctrl
; Line 87
	push	87					; 00000057H
	push	OFFSET ??_C@_0BL@PDJKIALP@?4?2crypto?2objects?2o_names?4c?$AA@
	push	12					; 0000000cH
	call	_CRYPTO_malloc
; Line 88
	push	2
	mov	esi, eax
	call	_CRYPTO_mem_ctrl
	add	esp, 20					; 00000014H
; Line 89
	test	esi, esi
	je	SHORT $LN13@OBJ_NAME_n
; Line 99
	push	3
	mov	DWORD PTR [esi], OFFSET _lh_strhash
	mov	DWORD PTR [esi+4], OFFSET _strcmp
	mov	DWORD PTR [esi+8], 0
	call	_CRYPTO_mem_ctrl
; Line 100
	push	esi
	push	DWORD PTR _name_funcs_stack
	call	_sk_push
; Line 101
	push	2
	call	_CRYPTO_mem_ctrl
	inc	edi
	add	esp, 16					; 00000010H
	cmp	edi, DWORD PTR _names_type_num
	jl	SHORT $LL4@OBJ_NAME_n
$LN3@OBJ_NAME_n:
; Line 103
	push	ebx
	push	DWORD PTR _name_funcs_stack
	call	_sk_value
; Line 104
	mov	ecx, DWORD PTR _hash_func$[esp+16]
	add	esp, 8
	test	ecx, ecx
	je	SHORT $LN8@OBJ_NAME_n
; Line 105
	mov	DWORD PTR [eax], ecx
$LN8@OBJ_NAME_n:
; Line 106
	mov	ecx, DWORD PTR _cmp_func$[esp+8]
	test	ecx, ecx
	je	SHORT $LN9@OBJ_NAME_n
; Line 107
	mov	DWORD PTR [eax+4], ecx
$LN9@OBJ_NAME_n:
; Line 108
	mov	ecx, DWORD PTR _free_func$[esp+8]
	test	ecx, ecx
	je	SHORT $LN10@OBJ_NAME_n
; Line 109
	mov	DWORD PTR [eax+8], ecx
$LN10@OBJ_NAME_n:
	pop	edi
	pop	esi
; Line 110
	mov	eax, ebx
	pop	ebx
; Line 111
	ret	0
$LN13@OBJ_NAME_n:
; Line 90
	push	90					; 0000005aH
	push	OFFSET ??_C@_0BL@PDJKIALP@?4?2crypto?2objects?2o_names?4c?$AA@
	push	65					; 00000041H
	push	106					; 0000006aH
	push	8
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 91
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 111
	ret	0
_OBJ_NAME_new_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OBJ_NAME_init
_TEXT	SEGMENT
_OBJ_NAME_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\objects\o_names.c
; Line 58
	cmp	DWORD PTR _names_lh, 0
	je	SHORT $LN2@OBJ_NAME_i
; Line 59
	mov	eax, 1
; Line 64
	ret	0
$LN2@OBJ_NAME_i:
; Line 60
	push	3
	call	_CRYPTO_mem_ctrl
; Line 61
	push	OFFSET _obj_name_LHASH_COMP
	push	OFFSET _obj_name_LHASH_HASH
	call	_lh_new
; Line 62
	push	2
	mov	DWORD PTR _names_lh, eax
	call	_CRYPTO_mem_ctrl
; Line 63
	xor	eax, eax
	add	esp, 16					; 00000010H
	cmp	DWORD PTR _names_lh, eax
	setne	al
; Line 64
	ret	0
_OBJ_NAME_init ENDP
_TEXT	ENDS
END

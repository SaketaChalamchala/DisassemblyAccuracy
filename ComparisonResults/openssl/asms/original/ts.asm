; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\ts.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_ts_main
PUBLIC	??_C@_07OOKHNANK@?9config?$AA@			; `string'
PUBLIC	??_C@_08ONPADCNC@?9section?$AA@			; `string'
PUBLIC	??_C@_06JIMFLALG@?9query?$AA@			; `string'
PUBLIC	??_C@_05DFDJJDDF@?9data?$AA@			; `string'
PUBLIC	??_C@_07JCKCKHOC@?9digest?$AA@			; `string'
PUBLIC	??_C@_05LGFPCDPE@?9rand?$AA@			; `string'
PUBLIC	??_C@_07EDOEKPLG@?9policy?$AA@			; `string'
PUBLIC	??_C@_09EOFPIKIL@?9no_nonce?$AA@		; `string'
PUBLIC	??_C@_05DLEDECNE@?9cert?$AA@			; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_09NKMONJIP@?9token_in?$AA@		; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_0L@DJGPPNH@?9token_out?$AA@		; `string'
PUBLIC	??_C@_05OEBEIMJA@?9text?$AA@			; `string'
PUBLIC	??_C@_06PMOHMEN@?9reply?$AA@			; `string'
PUBLIC	??_C@_0L@LMAFEAOJ@?9queryfile?$AA@		; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_06JJMGFEBF@?9inkey?$AA@			; `string'
PUBLIC	??_C@_07KJCLPKOH@?9signer?$AA@			; `string'
PUBLIC	??_C@_06NEDJBPEF@?9chain?$AA@			; `string'
PUBLIC	??_C@_07FILEFCOC@?9verify?$AA@			; `string'
PUBLIC	??_C@_07MNNNLALG@?9CApath?$AA@			; `string'
PUBLIC	??_C@_07EAFCHGPO@?9CAfile?$AA@			; `string'
PUBLIC	??_C@_0L@EABBFAIP@?9untrusted?$AA@		; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ ; `string'
PUBLIC	??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@MCGLDCN@Error?5getting?5password?4?6?$AA@ ; `string'
PUBLIC	??_C@_0OM@CGNAACOE@usage?3?6ts?5?9query?5?$FL?9rand?5file?$CFcfi@ ; `string'
PUBLIC	??_C@_0BBH@JKDHADME@or?6ts?5?9reply?5?$FL?9config?5configfile@ ; `string'
PUBLIC	??_C@_0KO@KIDMHDIF@or?6ts?5?9verify?5?$FL?9data?5file_to_has@ ; `string'
PUBLIC	??_C@_0BK@FNHFJPIO@cannot?5convert?5?$CFs?5to?5OID?6?$AA@ ; `string'
PUBLIC	??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@		; `string'
PUBLIC	??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@		; `string'
PUBLIC	??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@ ; `string'
PUBLIC	??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@ ; `string'
PUBLIC	??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_08NOLCFLKC@oid_file?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_04PGHFOLLE@sha1?$AA@			; `string'
PUBLIC	??_C@_0BI@ONLCPDDL@could?5not?5create?5query?6?$AA@ ; `string'
PUBLIC	??_C@_0M@MKEPFLFH@?4?2apps?2ts?4c?$AA@		; `string'
PUBLIC	??_C@_0CI@GKJPONPL@bad?5digest?0?5?$CFd?5bytes?5must?5be?5spe@ ; `string'
PUBLIC	??_C@_0BI@FECAGFBO@could?5not?5create?5nonce?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@CJJOIHDP@Response?5has?5been?5generated?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@IBMCAENB@Response?5is?5not?5generated?4?6?$AA@ ; `string'
PUBLIC	??_C@_0CH@IKKNJBOJ@Error?5during?5serial?5number?5gener@ ; `string'
PUBLIC	??_C@_0EF@LGJIOGOJ@Warning?3?5could?5not?5open?5file?5?$CFs?5@ ; `string'
PUBLIC	??_C@_0BP@IBMKHAAI@unable?5to?5load?5number?5from?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0CE@BDGKPNBC@could?5not?5save?5serial?5number?5to?5@ ; `string'
PUBLIC	??_C@_0P@EEGBFCKN@Verification?3?5?$AA@		; `string'
PUBLIC	??_C@_03JLOMOCCD@OK?6?$AA@			; `string'
PUBLIC	??_C@_07DLBBOEE@FAILED?6?$AA@			; `string'
PUBLIC	??_C@_0BH@DIIACFIB@invalid?5digest?5string?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@NEBNLEOC@memory?5allocation?5failure?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__getenv:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_add_word:PROC
EXTRN	_BN_free:PROC
EXTRN	_ASN1_TYPE_new:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_ASN1_INTEGER_new:PROC
EXTRN	_ASN1_INTEGER_free:PROC
EXTRN	_i2a_ASN1_INTEGER:PROC
EXTRN	_a2i_ASN1_INTEGER:PROC
EXTRN	_ASN1_INTEGER_set:PROC
EXTRN	_BN_to_ASN1_INTEGER:PROC
EXTRN	_ASN1_INTEGER_to_BN:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_txt2obj:PROC
EXTRN	_OBJ_cleanup:PROC
EXTRN	_OBJ_create_objects:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_MD_size:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestInit:PROC
EXTRN	_EVP_DigestFinal:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_X509_STORE_new:PROC
EXTRN	_X509_STORE_free:PROC
EXTRN	_X509_STORE_set_verify_cb:PROC
EXTRN	_X509_STORE_add_lookup:PROC
EXTRN	_X509_LOOKUP_hash_dir:PROC
EXTRN	_X509_LOOKUP_file:PROC
EXTRN	_X509_LOOKUP_ctrl:PROC
EXTRN	_d2i_PKCS7_bio:PROC
EXTRN	_i2d_PKCS7_bio:PROC
EXTRN	_PKCS7_free:PROC
EXTRN	_X509_ALGOR_new:PROC
EXTRN	_X509_ALGOR_free:PROC
EXTRN	_NCONF_new:PROC
EXTRN	_NCONF_free:PROC
EXTRN	_NCONF_load:PROC
EXTRN	_NCONF_get_string:PROC
EXTRN	_RAND_bytes:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_string_to_hex:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_write_file:PROC
EXTRN	_app_RAND_load_files:PROC
EXTRN	_app_passwd:PROC
EXTRN	_add_oid_section:PROC
EXTRN	_load_config:PROC
EXTRN	_TS_REQ_new:PROC
EXTRN	_TS_REQ_free:PROC
EXTRN	_d2i_TS_REQ_bio:PROC
EXTRN	_i2d_TS_REQ_bio:PROC
EXTRN	_TS_MSG_IMPRINT_new:PROC
EXTRN	_TS_MSG_IMPRINT_free:PROC
EXTRN	_TS_RESP_new:PROC
EXTRN	_TS_RESP_free:PROC
EXTRN	_PKCS7_to_TS_TST_INFO:PROC
EXTRN	_d2i_TS_RESP_bio:PROC
EXTRN	_i2d_TS_RESP_bio:PROC
EXTRN	_TS_STATUS_INFO_new:PROC
EXTRN	_TS_STATUS_INFO_free:PROC
EXTRN	_TS_TST_INFO_free:PROC
EXTRN	_TS_REQ_set_version:PROC
EXTRN	_TS_REQ_set_msg_imprint:PROC
EXTRN	_TS_MSG_IMPRINT_set_algo:PROC
EXTRN	_TS_MSG_IMPRINT_set_msg:PROC
EXTRN	_TS_REQ_set_policy_id:PROC
EXTRN	_TS_REQ_set_nonce:PROC
EXTRN	_TS_REQ_set_cert_req:PROC
EXTRN	_TS_REQ_print_bio:PROC
EXTRN	_TS_RESP_set_status_info:PROC
EXTRN	_TS_RESP_set_tst_info:PROC
EXTRN	_TS_RESP_get_token:PROC
EXTRN	_TS_RESP_get_tst_info:PROC
EXTRN	_TS_RESP_CTX_new:PROC
EXTRN	_TS_RESP_CTX_free:PROC
EXTRN	_TS_RESP_CTX_set_status_info:PROC
EXTRN	_TS_RESP_CTX_add_failure_info:PROC
EXTRN	_TS_RESP_create_response:PROC
EXTRN	_TS_RESP_verify_response:PROC
EXTRN	_TS_RESP_verify_token:PROC
EXTRN	_TS_VERIFY_CTX_new:PROC
EXTRN	_TS_VERIFY_CTX_free:PROC
EXTRN	_TS_REQ_to_TS_VERIFY_CTX:PROC
EXTRN	_TS_RESP_print_bio:PROC
EXTRN	_TS_TST_INFO_print_bio:PROC
EXTRN	_TS_CONF_load_certs:PROC
EXTRN	_TS_CONF_get_tsa_section:PROC
EXTRN	_TS_CONF_set_serial:PROC
EXTRN	_TS_CONF_set_crypto_device:PROC
EXTRN	_TS_CONF_set_signer_cert:PROC
EXTRN	_TS_CONF_set_certs:PROC
EXTRN	_TS_CONF_set_signer_key:PROC
EXTRN	_TS_CONF_set_def_policy:PROC
EXTRN	_TS_CONF_set_policies:PROC
EXTRN	_TS_CONF_set_digests:PROC
EXTRN	_TS_CONF_set_accuracy:PROC
EXTRN	_TS_CONF_set_clock_precision_digits:PROC
EXTRN	_TS_CONF_set_ordering:PROC
EXTRN	_TS_CONF_set_tsa_name:PROC
EXTRN	_TS_CONF_set_ess_cert_id_chain:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@ DB 'Error loading f'
	DB	'ile %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@ DB 'Error loadi'
	DB	'ng directory %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NEBNLEOC@memory?5allocation?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BL@NEBNLEOC@memory?5allocation?5failure?6?$AA@ DB 'memory allocati'
	DB	'on failure', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DIIACFIB@invalid?5digest?5string?6?$AA@
CONST	SEGMENT
??_C@_0BH@DIIACFIB@invalid?5digest?5string?6?$AA@ DB 'invalid digest stri'
	DB	'ng', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLBBOEE@FAILED?6?$AA@
CONST	SEGMENT
??_C@_07DLBBOEE@FAILED?6?$AA@ DB 'FAILED', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03JLOMOCCD@OK?6?$AA@
CONST	SEGMENT
??_C@_03JLOMOCCD@OK?6?$AA@ DB 'OK', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EEGBFCKN@Verification?3?5?$AA@
CONST	SEGMENT
??_C@_0P@EEGBFCKN@Verification?3?5?$AA@ DB 'Verification: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BDGKPNBC@could?5not?5save?5serial?5number?5to?5@
CONST	SEGMENT
??_C@_0CE@BDGKPNBC@could?5not?5save?5serial?5number?5to?5@ DB 'could not '
	DB	'save serial number to %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IBMKHAAI@unable?5to?5load?5number?5from?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BP@IBMKHAAI@unable?5to?5load?5number?5from?5?$CFs?6?$AA@ DB 'unabl'
	DB	'e to load number from %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@LGJIOGOJ@Warning?3?5could?5not?5open?5file?5?$CFs?5@
CONST	SEGMENT
??_C@_0EF@LGJIOGOJ@Warning?3?5could?5not?5open?5file?5?$CFs?5@ DB 'Warnin'
	DB	'g: could not open file %s for reading, using serial number: 1'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IKKNJBOJ@Error?5during?5serial?5number?5gener@
CONST	SEGMENT
??_C@_0CH@IKKNJBOJ@Error?5during?5serial?5number?5gener@ DB 'Error during'
	DB	' serial number generation.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IBMCAENB@Response?5is?5not?5generated?4?6?$AA@
CONST	SEGMENT
??_C@_0BM@IBMCAENB@Response?5is?5not?5generated?4?6?$AA@ DB 'Response is '
	DB	'not generated.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CJJOIHDP@Response?5has?5been?5generated?4?6?$AA@
CONST	SEGMENT
??_C@_0BO@CJJOIHDP@Response?5has?5been?5generated?4?6?$AA@ DB 'Response h'
	DB	'as been generated.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FECAGFBO@could?5not?5create?5nonce?6?$AA@
CONST	SEGMENT
??_C@_0BI@FECAGFBO@could?5not?5create?5nonce?6?$AA@ DB 'could not create '
	DB	'nonce', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GKJPONPL@bad?5digest?0?5?$CFd?5bytes?5must?5be?5spe@
CONST	SEGMENT
??_C@_0CI@GKJPONPL@bad?5digest?0?5?$CFd?5bytes?5must?5be?5spe@ DB 'bad di'
	DB	'gest, %d bytes must be specified', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MKEPFLFH@?4?2apps?2ts?4c?$AA@
CONST	SEGMENT
??_C@_0M@MKEPFLFH@?4?2apps?2ts?4c?$AA@ DB '.\apps\ts.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ONLCPDDL@could?5not?5create?5query?6?$AA@
CONST	SEGMENT
??_C@_0BI@ONLCPDDL@could?5not?5create?5query?6?$AA@ DB 'could not create '
	DB	'query', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04PGHFOLLE@sha1?$AA@
CONST	SEGMENT
??_C@_04PGHFOLLE@sha1?$AA@ DB 'sha1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NOLCFLKC@oid_file?$AA@
CONST	SEGMENT
??_C@_08NOLCFLKC@oid_file?$AA@ DB 'oid_file', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@ DB 'Using con'
	DB	'figuration from %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@
CONST	SEGMENT
??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@ DB 'error o'
	DB	'n line %ld of config file ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@
CONST	SEGMENT
??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@ DB 'error l'
	DB	'oading the config file ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@
CONST	SEGMENT
??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@ DB 'SSLEAY_CONF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@
CONST	SEGMENT
??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@ DB 'OPENSSL_CONF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FNHFJPIO@cannot?5convert?5?$CFs?5to?5OID?6?$AA@
CONST	SEGMENT
??_C@_0BK@FNHFJPIO@cannot?5convert?5?$CFs?5to?5OID?6?$AA@ DB 'cannot conv'
	DB	'ert %s to OID', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0KO@KIDMHDIF@or?6ts?5?9verify?5?$FL?9data?5file_to_has@
CONST	SEGMENT
??_C@_0KO@KIDMHDIF@or?6ts?5?9verify?5?$FL?9data?5file_to_has@ DB 'or', 0aH
	DB	'ts -verify [-data file_to_hash] [-digest digest_bytes] [-quer'
	DB	'yfile request.tsq] -in response.tsr [-token_in] -CApath ca_pa'
	DB	'th -CAfile ca_file.pem -untrusted cert_file.pem', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BBH@JKDHADME@or?6ts?5?9reply?5?$FL?9config?5configfile@
CONST	SEGMENT
??_C@_0BBH@JKDHADME@or?6ts?5?9reply?5?$FL?9config?5configfile@ DB 'or', 0aH
	DB	'ts -reply [-config configfile] [-section tsa_section] [-query'
	DB	'file request.tsq] [-passin password] [-signer tsa_cert.pem] ['
	DB	'-inkey private_key.pem] [-chain certs_file.pem] [-policy obje'
	DB	'ct_id] [-in response.tsr] [-token_in] [-out response.tsr] [-t'
	DB	'oken_out] [-text] [-engine id]', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0OM@CGNAACOE@usage?3?6ts?5?9query?5?$FL?9rand?5file?$CFcfi@
CONST	SEGMENT
??_C@_0OM@CGNAACOE@usage?3?6ts?5?9query?5?$FL?9rand?5file?$CFcfi@ DB 'usa'
	DB	'ge:', 0aH, 'ts -query [-rand file%cfile%c...] [-config config'
	DB	'file] [-data file_to_hash] [-digest digest_bytes][-md2|-md4|-'
	DB	'md5|-sha|-sha1|-mdc2|-ripemd160] [-policy object_id] [-no_non'
	DB	'ce] [-cert] [-in request.tsq] [-out request.tsq] [-text]', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MCGLDCN@Error?5getting?5password?4?6?$AA@
CONST	SEGMENT
??_C@_0BJ@MCGLDCN@Error?5getting?5password?4?6?$AA@ DB 'Error getting pas'
	DB	'sword.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
CONST	SEGMENT
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ DB '%ld sem'
	DB	'i-random bytes loaded', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
CONST	SEGMENT
??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ DB 'warning, n'
	DB	'ot much extra random data, consider using the -rand option', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EABBFAIP@?9untrusted?$AA@
CONST	SEGMENT
??_C@_0L@EABBFAIP@?9untrusted?$AA@ DB '-untrusted', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EAFCHGPO@?9CAfile?$AA@
CONST	SEGMENT
??_C@_07EAFCHGPO@?9CAfile?$AA@ DB '-CAfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNNNLALG@?9CApath?$AA@
CONST	SEGMENT
??_C@_07MNNNLALG@?9CApath?$AA@ DB '-CApath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FILEFCOC@?9verify?$AA@
CONST	SEGMENT
??_C@_07FILEFCOC@?9verify?$AA@ DB '-verify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NEDJBPEF@?9chain?$AA@
CONST	SEGMENT
??_C@_06NEDJBPEF@?9chain?$AA@ DB '-chain', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KJCLPKOH@?9signer?$AA@
CONST	SEGMENT
??_C@_07KJCLPKOH@?9signer?$AA@ DB '-signer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JJMGFEBF@?9inkey?$AA@
CONST	SEGMENT
??_C@_06JJMGFEBF@?9inkey?$AA@ DB '-inkey', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LMAFEAOJ@?9queryfile?$AA@
CONST	SEGMENT
??_C@_0L@LMAFEAOJ@?9queryfile?$AA@ DB '-queryfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PMOHMEN@?9reply?$AA@
CONST	SEGMENT
??_C@_06PMOHMEN@?9reply?$AA@ DB '-reply', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEBEIMJA@?9text?$AA@
CONST	SEGMENT
??_C@_05OEBEIMJA@?9text?$AA@ DB '-text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DJGPPNH@?9token_out?$AA@
CONST	SEGMENT
??_C@_0L@DJGPPNH@?9token_out?$AA@ DB '-token_out', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NKMONJIP@?9token_in?$AA@
CONST	SEGMENT
??_C@_09NKMONJIP@?9token_in?$AA@ DB '-token_in', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DLEDECNE@?9cert?$AA@
CONST	SEGMENT
??_C@_05DLEDECNE@?9cert?$AA@ DB '-cert', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09EOFPIKIL@?9no_nonce?$AA@
CONST	SEGMENT
??_C@_09EOFPIKIL@?9no_nonce?$AA@ DB '-no_nonce', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EDOEKPLG@?9policy?$AA@
CONST	SEGMENT
??_C@_07EDOEKPLG@?9policy?$AA@ DB '-policy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGFPCDPE@?9rand?$AA@
CONST	SEGMENT
??_C@_05LGFPCDPE@?9rand?$AA@ DB '-rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JCKCKHOC@?9digest?$AA@
CONST	SEGMENT
??_C@_07JCKCKHOC@?9digest?$AA@ DB '-digest', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05DFDJJDDF@?9data?$AA@
CONST	SEGMENT
??_C@_05DFDJJDDF@?9data?$AA@ DB '-data', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JIMFLALG@?9query?$AA@
CONST	SEGMENT
??_C@_06JIMFLALG@?9query?$AA@ DB '-query', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08ONPADCNC@?9section?$AA@
CONST	SEGMENT
??_C@_08ONPADCNC@?9section?$AA@ DB '-section', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07OOKHNANK@?9config?$AA@
CONST	SEGMENT
??_C@_07OOKHNANK@?9config?$AA@ DB '-config', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ts_main
_TEXT	SEGMENT
_no_nonce$1$ = -108					; size = 4
_digest$1$ = -104					; size = 4
_passin$1$ = -100					; size = 4
_ret$1$ = -96						; size = 4
_queryfile$1$ = -92					; size = 4
_data$1$ = -88						; size = 4
_in$1$ = -84						; size = 4
_token_in$1$ = -80					; size = 4
_rnd$1$ = -76						; size = 4
_configfile$1$ = -72					; size = 4
_text$1$ = -68						; size = 4
_out$1$ = -64						; size = 4
_policy$1$ = -60					; size = 4
_conf$1$ = -56						; size = 4
_password$ = -52					; size = 4
_cert$1$ = -48						; size = 4
_md$1$ = -44						; size = 4
_token_out$1$ = -40					; size = 4
_chain$1$ = -36						; size = 4
_signer$1$ = -32					; size = 4
_inkey$1$ = -28						; size = 4
_engine$1$ = -24					; size = 4
_section$1$ = -20					; size = 4
_untrusted$1$ = -16					; size = 4
_ca_file$1$ = -12					; size = 4
_ca_path$1$ = -8					; size = 4
_free_bio_err$1$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_ts_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 127
	mov	eax, 108				; 0000006cH
	call	__chkstk
	push	ebx
; Line 128
	mov	eax, 1
; Line 129
	mov	DWORD PTR _configfile$1$[esp+112], 0
	push	ebp
	mov	DWORD PTR _ret$1$[esp+116], eax
; Line 136
	xor	ebx, ebx
; Line 138
	xor	eax, eax
	mov	DWORD PTR _section$1$[esp+116], 0
	xor	ebp, ebp
	mov	DWORD PTR _conf$1$[esp+116], 0
	mov	DWORD PTR _data$1$[esp+116], ebp
	mov	DWORD PTR _digest$1$[esp+116], ebx
	mov	DWORD PTR _md$1$[esp+116], ebx
	mov	DWORD PTR _rnd$1$[esp+116], eax
; Line 139
	mov	DWORD PTR _policy$1$[esp+116], eax
; Line 140
	mov	DWORD PTR _no_nonce$1$[esp+116], eax
; Line 141
	mov	DWORD PTR _cert$1$[esp+116], eax
; Line 142
	mov	DWORD PTR _in$1$[esp+116], eax
; Line 143
	mov	DWORD PTR _out$1$[esp+116], eax
; Line 144
	mov	DWORD PTR _text$1$[esp+116], eax
; Line 145
	mov	DWORD PTR _queryfile$1$[esp+116], eax
; Line 146
	mov	DWORD PTR _passin$1$[esp+116], eax
; Line 147
	mov	DWORD PTR _password$[esp+116], eax
; Line 148
	mov	DWORD PTR _inkey$1$[esp+116], eax
; Line 149
	mov	DWORD PTR _signer$1$[esp+116], eax
; Line 150
	mov	DWORD PTR _chain$1$[esp+116], eax
; Line 151
	mov	DWORD PTR _ca_path$1$[esp+116], eax
; Line 152
	mov	DWORD PTR _ca_file$1$[esp+116], eax
; Line 153
	mov	DWORD PTR _untrusted$1$[esp+116], eax
; Line 154
	mov	DWORD PTR _engine$1$[esp+116], eax
; Line 156
	mov	DWORD PTR _token_in$1$[esp+116], eax
; Line 158
	mov	DWORD PTR _token_out$1$[esp+116], eax
; Line 159
	mov	DWORD PTR _free_bio_err$1$[esp+116], eax
; Line 161
	call	_ERR_load_crypto_strings
; Line 164
	mov	eax, DWORD PTR _bio_err
	test	eax, eax
	jne	SHORT $LN7@ts_main
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN7@ts_main
; Line 166
	push	2
	mov	DWORD PTR _free_bio_err$1$[esp+120], 1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN7@ts_main:
; Line 169
	push	esi
	push	edi
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN240@ts_main
; Line 172
	mov	esi, DWORD PTR _argc$[esp+120]
	mov	edi, DWORD PTR _argv$[esp+120]
	dec	esi
	add	edi, 4
	test	esi, esi
	jle	$LN134@ts_main
	npad	5
$LL4@ts_main:
; Line 173
	mov	ebx, DWORD PTR [edi]
	mov	ecx, OFFSET ??_C@_07OOKHNANK@?9config?$AA@
	mov	eax, ebx
	npad	7
$LL137@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN138@ts_main
	test	dl, dl
	je	SHORT $LN139@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN138@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL137@ts_main
$LN139@ts_main:
	xor	eax, eax
	jmp	SHORT $LN140@ts_main
$LN138@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN140@ts_main:
	test	eax, eax
	jne	SHORT $LN9@ts_main
; Line 174
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 176
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _configfile$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN9@ts_main:
; Line 177
	mov	ecx, OFFSET ??_C@_08ONPADCNC@?9section?$AA@
	mov	eax, ebx
	npad	5
$LL141@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN142@ts_main
	test	dl, dl
	je	SHORT $LN143@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN142@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL141@ts_main
$LN143@ts_main:
	xor	eax, eax
	jmp	SHORT $LN144@ts_main
$LN142@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN144@ts_main:
	test	eax, eax
	jne	SHORT $LN12@ts_main
; Line 178
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 180
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _section$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN12@ts_main:
; Line 181
	mov	ecx, OFFSET ??_C@_06JIMFLALG@?9query?$AA@
	mov	eax, ebx
	npad	5
$LL145@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN146@ts_main
	test	dl, dl
	je	SHORT $LN147@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN146@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL145@ts_main
$LN147@ts_main:
	xor	eax, eax
	jmp	SHORT $LN148@ts_main
$LN146@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN148@ts_main:
	test	eax, eax
	jne	SHORT $LN15@ts_main
; Line 182
	test	ebp, ebp
	jne	$usage$248
; Line 184
	lea	ebp, DWORD PTR [eax+1]
	jmp	$LN241@ts_main
$LN15@ts_main:
; Line 185
	mov	ecx, OFFSET ??_C@_05DFDJJDDF@?9data?$AA@
	mov	eax, ebx
$LL149@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN150@ts_main
	test	dl, dl
	je	SHORT $LN151@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN150@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL149@ts_main
$LN151@ts_main:
	xor	eax, eax
	jmp	SHORT $LN152@ts_main
$LN150@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN152@ts_main:
	test	eax, eax
	jne	SHORT $LN18@ts_main
; Line 186
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 188
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _data$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN18@ts_main:
; Line 189
	mov	ecx, OFFSET ??_C@_07JCKCKHOC@?9digest?$AA@
	mov	eax, ebx
	npad	5
$LL153@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN154@ts_main
	test	dl, dl
	je	SHORT $LN155@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN154@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL153@ts_main
$LN155@ts_main:
	xor	eax, eax
	jmp	SHORT $LN156@ts_main
$LN154@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN156@ts_main:
	test	eax, eax
	jne	SHORT $LN21@ts_main
; Line 190
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 192
	mov	ebx, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _digest$1$[esp+124], ebx
	jmp	$LN242@ts_main
$LN21@ts_main:
; Line 193
	mov	ecx, OFFSET ??_C@_05LGFPCDPE@?9rand?$AA@
	mov	eax, ebx
	npad	5
$LL157@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN158@ts_main
	test	dl, dl
	je	SHORT $LN159@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN158@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL157@ts_main
$LN159@ts_main:
	xor	eax, eax
	jmp	SHORT $LN160@ts_main
$LN158@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN160@ts_main:
	test	eax, eax
	jne	SHORT $LN24@ts_main
; Line 194
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 196
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _rnd$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN24@ts_main:
; Line 197
	mov	ecx, OFFSET ??_C@_07EDOEKPLG@?9policy?$AA@
	mov	eax, ebx
	npad	5
$LL161@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN162@ts_main
	test	dl, dl
	je	SHORT $LN163@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN162@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL161@ts_main
$LN163@ts_main:
	xor	eax, eax
	jmp	SHORT $LN164@ts_main
$LN162@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN164@ts_main:
	test	eax, eax
	jne	SHORT $LN27@ts_main
; Line 198
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 200
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _policy$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN27@ts_main:
; Line 201
	mov	ecx, OFFSET ??_C@_09EOFPIKIL@?9no_nonce?$AA@
	mov	eax, ebx
	npad	5
$LL165@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN166@ts_main
	test	dl, dl
	je	SHORT $LN167@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN166@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL165@ts_main
$LN167@ts_main:
	xor	eax, eax
	jmp	SHORT $LN168@ts_main
$LN166@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN168@ts_main:
	test	eax, eax
	jne	SHORT $LN30@ts_main
; Line 202
	mov	ebx, DWORD PTR _digest$1$[esp+124]
	mov	ecx, 1
	mov	DWORD PTR _no_nonce$1$[esp+124], ecx
	jmp	$LN243@ts_main
$LN30@ts_main:
; Line 203
	mov	ecx, OFFSET ??_C@_05DLEDECNE@?9cert?$AA@
	mov	eax, ebx
$LL169@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN170@ts_main
	test	dl, dl
	je	SHORT $LN171@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN170@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL169@ts_main
$LN171@ts_main:
	xor	eax, eax
	jmp	SHORT $LN172@ts_main
$LN170@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN172@ts_main:
	test	eax, eax
	jne	SHORT $LN32@ts_main
; Line 204
	mov	DWORD PTR _cert$1$[esp+124], 1
	jmp	$LN241@ts_main
$LN32@ts_main:
; Line 205
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, ebx
	npad	1
$LL173@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN174@ts_main
	test	dl, dl
	je	SHORT $LN175@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN174@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL173@ts_main
$LN175@ts_main:
	xor	eax, eax
	jmp	SHORT $LN176@ts_main
$LN174@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN176@ts_main:
	test	eax, eax
	jne	SHORT $LN34@ts_main
; Line 206
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 208
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _in$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN34@ts_main:
; Line 209
	mov	ecx, OFFSET ??_C@_09NKMONJIP@?9token_in?$AA@
	mov	eax, ebx
	npad	5
$LL177@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN178@ts_main
	test	dl, dl
	je	SHORT $LN179@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN178@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL177@ts_main
$LN179@ts_main:
	xor	eax, eax
	jmp	SHORT $LN180@ts_main
$LN178@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN180@ts_main:
	test	eax, eax
	jne	SHORT $LN37@ts_main
; Line 210
	mov	DWORD PTR _token_in$1$[esp+124], 1
	jmp	$LN241@ts_main
$LN37@ts_main:
; Line 211
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, ebx
	npad	3
$LL181@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN182@ts_main
	test	dl, dl
	je	SHORT $LN183@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN182@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL181@ts_main
$LN183@ts_main:
	xor	eax, eax
	jmp	SHORT $LN184@ts_main
$LN182@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN184@ts_main:
	test	eax, eax
	jne	SHORT $LN39@ts_main
; Line 212
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 214
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _out$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN39@ts_main:
; Line 215
	mov	ecx, OFFSET ??_C@_0L@DJGPPNH@?9token_out?$AA@
	mov	eax, ebx
	npad	5
$LL185@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN186@ts_main
	test	dl, dl
	je	SHORT $LN187@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN186@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL185@ts_main
$LN187@ts_main:
	xor	eax, eax
	jmp	SHORT $LN188@ts_main
$LN186@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN188@ts_main:
	test	eax, eax
	jne	SHORT $LN42@ts_main
; Line 216
	mov	DWORD PTR _token_out$1$[esp+124], 1
	jmp	$LN241@ts_main
$LN42@ts_main:
; Line 217
	mov	ecx, OFFSET ??_C@_05OEBEIMJA@?9text?$AA@
	mov	eax, ebx
	npad	3
$LL189@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN190@ts_main
	test	dl, dl
	je	SHORT $LN191@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN190@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL189@ts_main
$LN191@ts_main:
	xor	eax, eax
	jmp	SHORT $LN192@ts_main
$LN190@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN192@ts_main:
	test	eax, eax
	jne	SHORT $LN44@ts_main
; Line 218
	mov	DWORD PTR _text$1$[esp+124], 1
	jmp	$LN241@ts_main
$LN44@ts_main:
; Line 219
	mov	ecx, OFFSET ??_C@_06PMOHMEN@?9reply?$AA@
	mov	eax, ebx
	npad	3
$LL193@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN194@ts_main
	test	dl, dl
	je	SHORT $LN195@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN194@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL193@ts_main
$LN195@ts_main:
	xor	eax, eax
	jmp	SHORT $LN196@ts_main
$LN194@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN196@ts_main:
	test	eax, eax
	jne	SHORT $LN46@ts_main
; Line 220
	test	ebp, ebp
	jne	$usage$248
; Line 222
	lea	ebp, DWORD PTR [eax+2]
	jmp	$LN241@ts_main
$LN46@ts_main:
; Line 223
	mov	ecx, OFFSET ??_C@_0L@LMAFEAOJ@?9queryfile?$AA@
	mov	eax, ebx
$LL197@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN198@ts_main
	test	dl, dl
	je	SHORT $LN199@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN198@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL197@ts_main
$LN199@ts_main:
	xor	eax, eax
	jmp	SHORT $LN200@ts_main
$LN198@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN200@ts_main:
	test	eax, eax
	jne	SHORT $LN49@ts_main
; Line 224
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 226
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _queryfile$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN49@ts_main:
; Line 227
	mov	ecx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	eax, ebx
	npad	5
$LL201@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN202@ts_main
	test	dl, dl
	je	SHORT $LN203@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN202@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL201@ts_main
$LN203@ts_main:
	xor	eax, eax
	jmp	SHORT $LN204@ts_main
$LN202@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN204@ts_main:
	test	eax, eax
	jne	SHORT $LN52@ts_main
; Line 228
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 230
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	ebx, DWORD PTR _digest$1$[esp+124]
	mov	ecx, DWORD PTR _no_nonce$1$[esp+124]
	mov	DWORD PTR _passin$1$[esp+124], eax
	jmp	$LN2@ts_main
$LN52@ts_main:
; Line 231
	mov	ecx, OFFSET ??_C@_06JJMGFEBF@?9inkey?$AA@
	mov	eax, ebx
$LL205@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN206@ts_main
	test	dl, dl
	je	SHORT $LN207@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN206@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL205@ts_main
$LN207@ts_main:
	xor	eax, eax
	jmp	SHORT $LN208@ts_main
$LN206@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN208@ts_main:
	test	eax, eax
	jne	SHORT $LN55@ts_main
; Line 232
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 234
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _inkey$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN55@ts_main:
; Line 235
	mov	ecx, OFFSET ??_C@_07KJCLPKOH@?9signer?$AA@
	mov	eax, ebx
	npad	2
$LL209@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN210@ts_main
	test	dl, dl
	je	SHORT $LN211@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN210@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL209@ts_main
$LN211@ts_main:
	xor	eax, eax
	jmp	SHORT $LN212@ts_main
$LN210@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN212@ts_main:
	test	eax, eax
	jne	SHORT $LN58@ts_main
; Line 236
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 238
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _signer$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN58@ts_main:
; Line 239
	mov	ecx, OFFSET ??_C@_06NEDJBPEF@?9chain?$AA@
	mov	eax, ebx
	npad	5
$LL213@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN214@ts_main
	test	dl, dl
	je	SHORT $LN215@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN214@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL213@ts_main
$LN215@ts_main:
	xor	eax, eax
	jmp	SHORT $LN216@ts_main
$LN214@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN216@ts_main:
	test	eax, eax
	jne	SHORT $LN61@ts_main
; Line 240
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 242
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _chain$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN61@ts_main:
; Line 243
	mov	ecx, OFFSET ??_C@_07FILEFCOC@?9verify?$AA@
	mov	eax, ebx
	npad	5
$LL217@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN218@ts_main
	test	dl, dl
	je	SHORT $LN219@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN218@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL217@ts_main
$LN219@ts_main:
	xor	eax, eax
	jmp	SHORT $LN220@ts_main
$LN218@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN220@ts_main:
	test	eax, eax
	jne	SHORT $LN64@ts_main
; Line 244
	test	ebp, ebp
	jne	$usage$248
; Line 246
	lea	ebp, DWORD PTR [eax+3]
	jmp	$LN241@ts_main
$LN64@ts_main:
; Line 247
	mov	ecx, OFFSET ??_C@_07MNNNLALG@?9CApath?$AA@
	mov	eax, ebx
$LL221@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN222@ts_main
	test	dl, dl
	je	SHORT $LN223@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN222@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL221@ts_main
$LN223@ts_main:
	xor	eax, eax
	jmp	SHORT $LN224@ts_main
$LN222@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN224@ts_main:
	test	eax, eax
	jne	SHORT $LN67@ts_main
; Line 248
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 250
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _ca_path$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN67@ts_main:
; Line 251
	mov	ecx, OFFSET ??_C@_07EAFCHGPO@?9CAfile?$AA@
	mov	eax, ebx
	npad	5
$LL225@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN226@ts_main
	test	dl, dl
	je	SHORT $LN227@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN226@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL225@ts_main
$LN227@ts_main:
	xor	eax, eax
	jmp	SHORT $LN228@ts_main
$LN226@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN228@ts_main:
	test	eax, eax
	jne	SHORT $LN70@ts_main
; Line 252
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 254
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _ca_file$1$[esp+124], eax
	jmp	$LN241@ts_main
$LN70@ts_main:
; Line 255
	mov	ecx, OFFSET ??_C@_0L@EABBFAIP@?9untrusted?$AA@
	mov	eax, ebx
	npad	5
$LL229@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN230@ts_main
	test	dl, dl
	je	SHORT $LN231@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN230@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL229@ts_main
$LN231@ts_main:
	xor	eax, eax
	jmp	SHORT $LN232@ts_main
$LN230@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN232@ts_main:
	test	eax, eax
	jne	SHORT $LN73@ts_main
; Line 256
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 258
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _untrusted$1$[esp+124], eax
	jmp	SHORT $LN241@ts_main
$LN73@ts_main:
; Line 259
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, ebx
$LL233@ts_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN234@ts_main
	test	dl, dl
	je	SHORT $LN235@ts_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN234@ts_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL233@ts_main
$LN235@ts_main:
	xor	eax, eax
	jmp	SHORT $LN236@ts_main
$LN234@ts_main:
	sbb	eax, eax
	or	eax, 1
$LN236@ts_main:
	test	eax, eax
	jne	SHORT $LN76@ts_main
; Line 260
	mov	eax, esi
	dec	esi
	cmp	eax, 1
	jl	$usage$248
; Line 262
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _engine$1$[esp+124], eax
	jmp	SHORT $LN241@ts_main
$LN76@ts_main:
; Line 263
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 4
	mov	DWORD PTR _md$1$[esp+124], eax
	test	eax, eax
	je	$usage$248
$LN241@ts_main:
	mov	ebx, DWORD PTR _digest$1$[esp+124]
$LN242@ts_main:
	mov	ecx, DWORD PTR _no_nonce$1$[esp+124]
$LN243@ts_main:
	mov	eax, DWORD PTR _passin$1$[esp+124]
$LN2@ts_main:
; Line 172
	dec	esi
	add	edi, 4
	test	esi, esi
	jg	$LL4@ts_main
; Line 270
	cmp	ebp, 1
	jne	SHORT $LN83@ts_main
	test	ecx, ecx
	jne	$LN134@ts_main
; Line 271
	push	ebp
	push	DWORD PTR _bio_err
	push	ecx
	call	_app_RAND_load_file
	add	esp, 12					; 0000000cH
	test	eax, eax
	mov	eax, DWORD PTR _rnd$1$[esp+124]
	jne	SHORT $LN82@ts_main
	test	eax, eax
	jne	SHORT $LN131@ts_main
; Line 272
	push	OFFSET ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 274
	jmp	$LN134@ts_main
$LN82@ts_main:
	test	eax, eax
	je	$LN134@ts_main
$LN131@ts_main:
; Line 275
	push	eax
	call	_app_RAND_load_files
	push	eax
	push	OFFSET ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 280
	jmp	$LN134@ts_main
$LN83@ts_main:
	cmp	ebp, 2
	jne	$LN84@ts_main
	test	eax, eax
	je	$LN134@ts_main
	push	0
	lea	ecx, DWORD PTR _password$[esp+128]
	push	ecx
	push	0
	push	eax
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN134@ts_main
; Line 282
	push	OFFSET ??_C@_0BJ@MCGLDCN@Error?5getting?5password?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN240@ts_main:
	mov	ebx, 1
$cleanup$249:
; Line 359
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_write_file
; Line 360
	push	DWORD PTR _conf$1$[esp+132]
	call	_NCONF_free
; Line 361
	push	DWORD PTR _password$[esp+136]
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 362
	call	_OBJ_cleanup
; Line 363
	cmp	DWORD PTR _free_bio_err$1$[esp+124], 0
	pop	edi
	pop	esi
	je	SHORT $LN237@ts_main
; Line 364
	push	DWORD PTR _bio_err
	call	_BIO_free_all
	add	esp, 4
; Line 365
	mov	DWORD PTR _bio_err, 0
$LN237@ts_main:
; Line 368
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 369
	add	esp, 108				; 0000006cH
	ret	0
$LN84@ts_main:
; Line 289
	cmp	ebp, 3
	ja	SHORT $LN240@ts_main
$LN134@ts_main:
	jmp	DWORD PTR $LN247@ts_main[ebp*4]
$LN86@ts_main:
; Line 297
	mov	esi, DWORD PTR _data$1$[esp+124]
	test	esi, esi
	je	SHORT $LN97@ts_main
	test	ebx, ebx
	jne	$LN104@ts_main
$LN97@ts_main:
; Line 301
	push	DWORD PTR _configfile$1$[esp+124]
	call	_load_config_file
; Line 302
	push	DWORD PTR _text$1$[esp+128]
	mov	edx, DWORD PTR _in$1$[esp+132]
	push	DWORD PTR _out$1$[esp+132]
	mov	DWORD PTR _conf$1$[esp+136], eax
	push	edx
	push	DWORD PTR _cert$1$[esp+140]
	push	DWORD PTR _no_nonce$1$[esp+144]
	push	DWORD PTR _policy$1$[esp+148]
	push	DWORD PTR _md$1$[esp+152]
	push	ebx
	push	esi
	call	_query_command
	add	esp, 40					; 00000028H
	mov	ebx, eax
	neg	ebx
	sbb	ebx, ebx
	inc	ebx
; Line 304
	jmp	$cleanup$249
$LN88@ts_main:
; Line 306
	push	DWORD PTR _configfile$1$[esp+124]
	call	_load_config_file
; Line 307
	mov	edx, DWORD PTR _in$1$[esp+128]
	add	esp, 4
; Line 308
	mov	ecx, DWORD PTR _queryfile$1$[esp+124]
	mov	ebx, eax
	mov	DWORD PTR _conf$1$[esp+124], ebx
	test	edx, edx
	jne	SHORT $LN89@ts_main
	test	ecx, ecx
	je	SHORT $LN104@ts_main
	test	ebx, ebx
	je	SHORT $LN104@ts_main
	mov	esi, DWORD PTR _token_in$1$[esp+124]
	test	esi, esi
	je	SHORT $LN92@ts_main
; Line 309
	jmp	SHORT $LN104@ts_main
$LN89@ts_main:
; Line 313
	xor	eax, eax
	test	ecx, ecx
	setne	al
	mov	DWORD PTR _ret$1$[esp+124], eax
; Line 314
	test	eax, eax
	jne	SHORT $usage$248
	mov	esi, DWORD PTR _token_in$1$[esp+124]
$LN92@ts_main:
; Line 318
	push	DWORD PTR _text$1$[esp+124]
	push	DWORD PTR _token_out$1$[esp+128]
	push	DWORD PTR _out$1$[esp+132]
	push	esi
	push	edx
	push	DWORD PTR _policy$1$[esp+144]
	push	DWORD PTR _chain$1$[esp+148]
	push	DWORD PTR _signer$1$[esp+152]
	push	DWORD PTR _inkey$1$[esp+156]
	push	DWORD PTR _password$[esp+160]
	push	ecx
	push	DWORD PTR _engine$1$[esp+168]
	push	DWORD PTR _section$1$[esp+172]
	push	ebx
	call	_reply_command
	add	esp, 56					; 00000038H
	mov	ebx, eax
	neg	ebx
	sbb	ebx, ebx
	inc	ebx
; Line 321
	jmp	$cleanup$249
$LN93@ts_main:
; Line 323
	mov	ecx, DWORD PTR _queryfile$1$[esp+124]
	mov	eax, DWORD PTR _data$1$[esp+124]
	test	ecx, ecx
	je	SHORT $LN130@ts_main
	test	eax, eax
	jne	SHORT $LN104@ts_main
$LN244@ts_main:
	test	ebx, ebx
	je	SHORT $LN103@ts_main
$LN104@ts_main:
	mov	eax, 1
	mov	DWORD PTR _ret$1$[esp+124], eax
$usage$248:
; Line 337
	push	59					; 0000003bH
	push	59					; 0000003bH
	push	OFFSET ??_C@_0OM@CGNAACOE@usage?3?6ts?5?9query?5?$FL?9rand?5file?$CFcfi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 344
	push	OFFSET ??_C@_0BBH@JKDHADME@or?6ts?5?9reply?5?$FL?9config?5configfile@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 351
	push	OFFSET ??_C@_0KO@KIDMHDIF@or?6ts?5?9verify?5?$FL?9data?5file_to_has@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	ebx, DWORD PTR _ret$1$[esp+156]
	add	esp, 32					; 00000020H
	jmp	$cleanup$249
$LN130@ts_main:
; Line 323
	test	eax, eax
	jne	SHORT $LN244@ts_main
	test	ebx, ebx
	je	SHORT $LN104@ts_main
$LN103@ts_main:
	mov	edx, DWORD PTR _in$1$[esp+124]
	test	edx, edx
	je	SHORT $LN104@ts_main
; Line 330
	push	DWORD PTR _untrusted$1$[esp+124]
	mov	esi, DWORD PTR _token_in$1$[esp+128]
	push	DWORD PTR _ca_file$1$[esp+128]
	push	DWORD PTR _ca_path$1$[esp+132]
	push	esi
	push	edx
	push	ecx
	push	ebx
	push	eax
	call	_verify_command
	add	esp, 32					; 00000020H
	mov	ebx, eax
	neg	ebx
	sbb	ebx, ebx
	inc	ebx
	jmp	$cleanup$249
$LN247@ts_main:
; Line 369
	DD	$usage$248
	DD	$LN86@ts_main
	DD	$LN88@ts_main
	DD	$LN93@ts_main
_ts_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _verify_cb
_TEXT	SEGMENT
_ok$ = 8						; size = 4
_ctx$ = 12						; size = 4
_verify_cb PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 1118
	mov	eax, DWORD PTR _ok$[esp-4]
; Line 1119
	ret	0
_verify_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _create_cert_store
_TEXT	SEGMENT
_ca_path$ = 8						; size = 4
_ca_file$ = 12						; size = 4
_create_cert_store PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 1057
	push	esi
	push	edi
; Line 1063
	call	_X509_STORE_new
	mov	esi, eax
; Line 1066
	push	OFFSET _verify_cb
	push	esi
	call	_X509_STORE_set_verify_cb
; Line 1069
	mov	edi, DWORD PTR _ca_path$[esp+12]
	add	esp, 8
	test	edi, edi
	je	SHORT $LN4@create_cer
; Line 1070
	call	_X509_LOOKUP_hash_dir
	push	eax
	push	esi
	call	_X509_STORE_add_lookup
	add	esp, 8
; Line 1071
	test	eax, eax
	jne	SHORT $LN3@create_cer
$LN10@create_cer:
; Line 1072
	push	OFFSET ??_C@_0BL@NEBNLEOC@memory?5allocation?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1098
	push	esi
	call	_X509_STORE_free
	add	esp, 4
; Line 1099
	xor	eax, eax
	pop	edi
	pop	esi
; Line 1100
	ret	0
$LN3@create_cer:
; Line 1075
	push	0
	push	1
	push	edi
	push	2
	push	eax
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
; Line 1076
	test	eax, eax
	jne	SHORT $LN4@create_cer
; Line 1077
	push	edi
	push	OFFSET ??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@
; Line 1078
	jmp	SHORT $LN9@create_cer
$LN4@create_cer:
; Line 1083
	mov	edi, DWORD PTR _ca_file$[esp+4]
	test	edi, edi
	je	SHORT $LN7@create_cer
; Line 1084
	call	_X509_LOOKUP_file
	push	eax
	push	esi
	call	_X509_STORE_add_lookup
	add	esp, 8
; Line 1085
	test	eax, eax
	je	SHORT $LN10@create_cer
; Line 1089
	push	0
	push	1
	push	edi
	push	1
	push	eax
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
; Line 1090
	test	eax, eax
	jne	SHORT $LN7@create_cer
; Line 1091
	push	edi
	push	OFFSET ??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@
$LN9@create_cer:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$err$12:
; Line 1098
	push	esi
	call	_X509_STORE_free
	add	esp, 4
; Line 1099
	xor	eax, eax
	pop	edi
	pop	esi
; Line 1100
	ret	0
$LN7@create_cer:
	pop	edi
; Line 1096
	mov	eax, esi
	pop	esi
; Line 1100
	ret	0
_create_cert_store ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _create_verify_ctx
_TEXT	SEGMENT
_imprint_len$1 = 8					; size = 4
_data$ = 8						; size = 4
_digest$ = 12						; size = 4
_queryfile$ = 16					; size = 4
_ca_path$ = 20						; size = 4
_ca_file$ = 24						; size = 4
_untrusted$ = 28					; size = 4
_create_verify_ctx PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 996
	push	ebx
	push	ebp
; Line 1002
	mov	ebp, DWORD PTR _data$[esp+4]
	xor	ebx, ebx
	push	esi
	push	edi
	xor	esi, esi
	xor	edi, edi
	test	ebp, ebp
	jne	SHORT $LN4@create_ver
	cmp	DWORD PTR _digest$[esp+12], ebx
	jne	SHORT $LN4@create_ver
; Line 1020
	mov	eax, DWORD PTR _queryfile$[esp+12]
	test	eax, eax
	je	SHORT $LN11@create_ver
; Line 1025
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	eax
	call	_BIO_new_file
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN20@create_ver
; Line 1027
	push	ebp
	push	ebx
	call	_d2i_TS_REQ_bio
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	$LN20@create_ver
; Line 1029
	push	ebp
	push	edi
	call	_TS_REQ_to_TS_VERIFY_CTX
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	$LN20@create_ver
; Line 1031
	jmp	SHORT $LN9@create_ver
$LN11@create_ver:
	pop	edi
	pop	esi
	pop	ebp
; Line 1032
	xor	eax, eax
	pop	ebx
; Line 1054
	ret	0
$LN4@create_ver:
; Line 1003
	call	_TS_VERIFY_CTX_new
	mov	esi, eax
	test	esi, esi
	je	$LN20@create_ver
; Line 1005
	mov	DWORD PTR [esi], 66			; 00000042H
; Line 1006
	test	ebp, ebp
	je	SHORT $LN6@create_ver
; Line 1008
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	ebp
	mov	DWORD PTR [esi], 82			; 00000052H
	call	_BIO_new_file
	add	esp, 8
	mov	DWORD PTR [esi+28], eax
	test	eax, eax
	je	SHORT $LN20@create_ver
; Line 1010
	jmp	SHORT $LN9@create_ver
$LN6@create_ver:
	mov	eax, DWORD PTR _digest$[esp+12]
	test	eax, eax
	je	SHORT $LN9@create_ver
; Line 1013
	lea	ecx, DWORD PTR _imprint_len$1[esp+12]
	mov	DWORD PTR [esi], 74			; 0000004aH
	push	ecx
	push	eax
	call	_string_to_hex
	add	esp, 8
	mov	DWORD PTR [esi+20], eax
	test	eax, eax
	jne	SHORT $LN10@create_ver
; Line 1014
	push	OFFSET ??_C@_0BH@DIIACFIB@invalid?5digest?5string?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1015
	jmp	SHORT $LN20@create_ver
$LN10@create_ver:
; Line 1017
	mov	eax, DWORD PTR _imprint_len$1[esp+12]
	mov	DWORD PTR [esi+24], eax
$LN9@create_ver:
; Line 1038
	push	DWORD PTR _ca_file$[esp+12]
	or	DWORD PTR [esi], 1
	push	DWORD PTR _ca_path$[esp+16]
	call	_create_cert_store
	add	esp, 8
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	je	SHORT $LN20@create_ver
; Line 1042
	mov	eax, DWORD PTR _untrusted$[esp+12]
	test	eax, eax
	je	SHORT $LN18@create_ver
	push	eax
	call	_TS_CONF_load_certs
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	jne	SHORT $LN18@create_ver
$LN20@create_ver:
; Line 1048
	push	esi
	call	_TS_VERIFY_CTX_free
	add	esp, 4
; Line 1049
	xor	esi, esi
$LN18@create_ver:
; Line 1051
	push	ebx
	call	_BIO_free_all
; Line 1052
	push	edi
	call	_TS_REQ_free
	add	esp, 8
; Line 1053
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1054
	ret	0
_create_verify_ctx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _verify_command
_TEXT	SEGMENT
_in_bio$1$ = -4						; size = 4
_data$ = 8						; size = 4
_digest$ = 12						; size = 4
_queryfile$ = 16					; size = 4
_in$ = 20						; size = 4
_token_in$ = 24						; size = 4
_ca_path$ = 28						; size = 4
_ca_file$ = 32						; size = 4
_untrusted$ = 36					; size = 4
_verify_command PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 947
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 955
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	DWORD PTR _in$[esp+20]
	xor	ebx, ebx
	xor	ebp, ebp
	xor	edi, edi
	xor	esi, esi
	call	_BIO_new_file
	add	esp, 8
	mov	DWORD PTR _in_bio$1$[esp+20], eax
	test	eax, eax
	je	SHORT $end$16
; Line 958
	push	esi
	push	eax
	cmp	DWORD PTR _token_in$[esp+24], ebx
	je	SHORT $LN3@verify_com
	call	_d2i_PKCS7_bio
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
; Line 960
	jmp	SHORT $LN13@verify_com
$LN3@verify_com:
; Line 961
	call	_d2i_TS_RESP_bio
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
$LN13@verify_com:
	je	SHORT $end$16
; Line 965
	push	DWORD PTR _untrusted$[esp+16]
	push	DWORD PTR _ca_file$[esp+20]
	push	DWORD PTR _ca_path$[esp+24]
	push	DWORD PTR _queryfile$[esp+28]
	push	DWORD PTR _digest$[esp+32]
	push	DWORD PTR _data$[esp+36]
	call	_create_verify_ctx
	mov	edi, eax
	add	esp, 24					; 00000018H
	test	edi, edi
	je	SHORT $end$16
; Line 970
	cmp	DWORD PTR _token_in$[esp+16], esi
	je	SHORT $LN11@verify_com
	push	ebx
	push	edi
	call	_TS_RESP_verify_token
	jmp	SHORT $LN14@verify_com
$LN11@verify_com:
	push	ebp
	push	edi
	call	_TS_RESP_verify_response
$LN14@verify_com:
	mov	esi, eax
	add	esp, 8
$end$16:
; Line 975
	push	OFFSET ??_C@_0P@EEGBFCKN@Verification?3?5?$AA@
	call	_printf
	add	esp, 4
; Line 976
	test	esi, esi
	je	SHORT $LN8@verify_com
; Line 977
	push	OFFSET ??_C@_03JLOMOCCD@OK?6?$AA@
	call	_printf
	add	esp, 4
	jmp	SHORT $LN9@verify_com
$LN8@verify_com:
; Line 979
	push	OFFSET ??_C@_07DLBBOEE@FAILED?6?$AA@
	call	_printf
; Line 981
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 8
$LN9@verify_com:
; Line 985
	push	DWORD PTR _in_bio$1$[esp+20]
	call	_BIO_free_all
; Line 986
	push	ebx
	call	_PKCS7_free
; Line 987
	push	ebp
	call	_TS_RESP_free
; Line 988
	push	edi
	call	_TS_VERIFY_CTX_free
	add	esp, 16					; 00000010H
; Line 989
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 990
	pop	ecx
	ret	0
_verify_command ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _save_ts_serial
_TEXT	SEGMENT
_serialfile$ = 8					; size = 4
_serial$ = 12						; size = 4
_save_ts_serial PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 921
	push	esi
	push	edi
; Line 925
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	DWORD PTR _serialfile$[esp+8]
	xor	edi, edi
	call	_BIO_new_file
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	SHORT $LN7@save_ts_se
; Line 927
	push	DWORD PTR _serial$[esp+4]
	push	esi
	call	_i2a_ASN1_INTEGER
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN7@save_ts_se
; Line 929
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN7@save_ts_se
; Line 936
	push	esi
	mov	edi, 1
	call	_BIO_free_all
	add	esp, 4
; Line 937
	mov	eax, edi
	pop	edi
	pop	esi
; Line 938
	ret	0
$LN7@save_ts_se:
; Line 934
	push	DWORD PTR _serialfile$[esp+4]
	push	OFFSET ??_C@_0CE@BDGKPNBC@could?5not?5save?5serial?5number?5to?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 936
	push	esi
	call	_BIO_free_all
	add	esp, 4
; Line 937
	mov	eax, edi
	pop	edi
	pop	esi
; Line 938
	ret	0
_save_ts_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _next_serial
_TEXT	SEGMENT
_buf$1 = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_serialfile$ = 8					; size = 4
_next_serial PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 878
	mov	eax, 1028				; 00000404H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1028], eax
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _serialfile$[esp+1032]
; Line 880
	xor	ebx, ebx
	push	esi
	push	edi
; Line 882
	xor	edi, edi
; Line 884
	call	_ASN1_INTEGER_new
	mov	esi, eax
	test	esi, esi
	je	$LN12@next_seria
; Line 887
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	ebp
	call	_BIO_new_file
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	jne	SHORT $LN3@next_seria
; Line 888
	call	_ERR_clear_error
; Line 889
	push	ebp
	push	OFFSET ??_C@_0EF@LGJIOGOJ@Warning?3?5could?5not?5open?5file?5?$CFs?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 891
	push	1
	push	esi
	call	_ASN1_INTEGER_set
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN12@next_seria
; Line 893
	jmp	SHORT $LN10@next_seria
$LN3@next_seria:
; Line 895
	push	1024					; 00000400H
	lea	eax, DWORD PTR _buf$1[esp+1048]
	push	eax
	push	esi
	push	ebx
	call	_a2i_ASN1_INTEGER
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN6@next_seria
; Line 896
	push	ebp
	push	OFFSET ??_C@_0BP@IBMKHAAI@unable?5to?5load?5number?5from?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 898
	jmp	SHORT $LN12@next_seria
$LN6@next_seria:
; Line 900
	push	0
	push	esi
	call	_ASN1_INTEGER_to_BN
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN12@next_seria
; Line 902
	push	esi
	call	_ASN1_INTEGER_free
; Line 904
	push	1
	push	edi
	xor	esi, esi
	call	_BN_add_word
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN12@next_seria
; Line 906
	push	esi
	push	edi
	call	_BN_to_ASN1_INTEGER
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	jne	SHORT $LN10@next_seria
$LN12@next_seria:
; Line 912
	push	esi
	call	_ASN1_INTEGER_free
	add	esp, 4
; Line 913
	xor	esi, esi
$LN10@next_seria:
; Line 915
	push	ebx
	call	_BIO_free_all
; Line 916
	push	edi
	call	_BN_free
; Line 918
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1052]
	add	esp, 8
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1028				; 00000404H
	ret	0
_next_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _serial_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_data$ = 12						; size = 4
_serial_cb PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 862
	push	esi
; Line 864
	mov	esi, DWORD PTR _data$[esp]
	push	edi
	push	esi
	call	_next_serial
	mov	edi, eax
	add	esp, 4
; Line 866
	test	edi, edi
	jne	SHORT $LN2@serial_cb
; Line 867
	mov	esi, DWORD PTR _ctx$[esp+4]
	push	OFFSET ??_C@_0CH@IKKNJBOJ@Error?5during?5serial?5number?5gener@
	push	2
	push	esi
	call	_TS_RESP_CTX_set_status_info
; Line 870
	push	17					; 00000011H
	push	esi
	call	_TS_RESP_CTX_add_failure_info
	add	esp, 20					; 00000014H
; Line 874
	mov	eax, edi
	pop	edi
	pop	esi
; Line 875
	ret	0
$LN2@serial_cb:
; Line 872
	push	edi
	push	esi
	call	_save_ts_serial
	add	esp, 8
; Line 874
	mov	eax, edi
	pop	edi
	pop	esi
; Line 875
	ret	0
_serial_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _create_response
_TEXT	SEGMENT
_query_bio$1$ = -4					; size = 4
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_engine$ = 16						; size = 4
_queryfile$ = 20					; size = 4
_passin$ = 24						; size = 4
_inkey$ = 28						; size = 4
_signer$ = 32						; size = 4
_chain$ = 36						; size = 4
_policy$ = 40						; size = 4
_create_response PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 775
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 781
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	DWORD PTR _queryfile$[esp+20]
	xor	ebp, ebp
	xor	esi, esi
	call	_BIO_new_file
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _query_bio$1$[esp+20], ebx
	test	ebx, ebx
	je	$LN21@create_res
; Line 785
	push	DWORD PTR _section$[esp+16]
	mov	edi, DWORD PTR _conf$[esp+20]
	push	edi
	call	_TS_CONF_get_tsa_section
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN36@create_res
; Line 789
	call	_TS_RESP_CTX_new
	mov	esi, eax
	test	esi, esi
	je	$LN36@create_res
; Line 793
	push	esi
	push	OFFSET _serial_cb
	push	ebx
	push	edi
	call	_TS_CONF_set_serial
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN36@create_res
; Line 797
	push	DWORD PTR _engine$[esp+16]
	push	ebx
	push	edi
	call	_TS_CONF_set_crypto_device
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN36@create_res
; Line 802
	push	esi
	push	DWORD PTR _signer$[esp+20]
	push	ebx
	push	edi
	call	_TS_CONF_set_signer_cert
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN36@create_res
; Line 806
	push	esi
	push	DWORD PTR _chain$[esp+20]
	push	ebx
	push	edi
	call	_TS_CONF_set_certs
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN36@create_res
; Line 810
	push	esi
	push	DWORD PTR _passin$[esp+20]
	push	DWORD PTR _inkey$[esp+24]
	push	ebx
	push	edi
	call	_TS_CONF_set_signer_key
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN36@create_res
; Line 814
	push	esi
	push	DWORD PTR _policy$[esp+20]
	push	ebx
	push	edi
	call	_TS_CONF_set_def_policy
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN36@create_res
; Line 818
	push	esi
	push	ebx
	push	edi
	call	_TS_CONF_set_policies
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN36@create_res
; Line 822
	push	esi
	push	ebx
	push	edi
	call	_TS_CONF_set_digests
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN36@create_res
; Line 826
	push	esi
	push	ebx
	push	edi
	call	_TS_CONF_set_accuracy
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN36@create_res
; Line 830
	push	esi
	push	ebx
	push	edi
	call	_TS_CONF_set_clock_precision_digits
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN36@create_res
; Line 834
	push	esi
	push	ebx
	push	edi
	call	_TS_CONF_set_ordering
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN36@create_res
; Line 838
	push	esi
	push	ebx
	push	edi
	call	_TS_CONF_set_tsa_name
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN36@create_res
; Line 842
	push	esi
	push	ebx
	push	edi
	call	_TS_CONF_set_ess_cert_id_chain
; Line 846
	mov	ebx, DWORD PTR _query_bio$1$[esp+32]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN21@create_res
	push	ebx
	push	esi
	call	_TS_RESP_create_response
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	jne	SHORT $LN19@create_res
	jmp	SHORT $LN21@create_res
$LN36@create_res:
	mov	ebx, DWORD PTR _query_bio$1$[esp+20]
$LN21@create_res:
; Line 852
	push	ebp
	call	_TS_RESP_free
	add	esp, 4
; Line 853
	xor	ebp, ebp
$LN19@create_res:
; Line 855
	push	esi
	call	_TS_RESP_CTX_free
; Line 856
	push	ebx
	call	_BIO_free_all
	add	esp, 8
; Line 858
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 859
	pop	ecx
	ret	0
_create_response ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _read_PKCS7
_TEXT	SEGMENT
_ret$1$ = -4						; size = 4
_in_bio$ = 8						; size = 4
_read_PKCS7 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 730
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 735
	xor	edi, edi
	mov	DWORD PTR _ret$1$[esp+20], 0
; Line 738
	push	edi
	push	DWORD PTR _in_bio$[esp+20]
	xor	ebx, ebx
	xor	esi, esi
	call	_d2i_PKCS7_bio
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	SHORT $end$11
; Line 740
	push	ebp
	call	_PKCS7_to_TS_TST_INFO
	mov	ebx, eax
	add	esp, 4
	test	ebx, ebx
	je	SHORT $end$11
; Line 744
	call	_TS_RESP_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $end$11
; Line 748
	call	_TS_STATUS_INFO_new
	mov	edi, eax
	test	edi, edi
	je	SHORT $end$11
; Line 750
	push	0
	push	DWORD PTR [edi]
	call	_ASN1_INTEGER_set
	add	esp, 8
	test	eax, eax
	je	SHORT $end$11
; Line 752
	push	edi
	push	esi
	call	_TS_RESP_set_status_info
	add	esp, 8
	test	eax, eax
	je	SHORT $end$11
; Line 756
	push	ebx
	push	ebp
	push	esi
	call	_TS_RESP_set_tst_info
	add	esp, 12					; 0000000cH
; Line 760
	mov	DWORD PTR _ret$1$[esp+20], 1
	xor	ebp, ebp
	xor	ebx, ebx
$end$11:
; Line 762
	push	ebp
	call	_PKCS7_free
; Line 763
	push	ebx
	call	_TS_TST_INFO_free
	add	esp, 8
; Line 764
	cmp	DWORD PTR _ret$1$[esp+20], 0
	jne	SHORT $LN8@read_PKCS7
; Line 765
	push	esi
	call	_TS_RESP_free
	add	esp, 4
; Line 766
	xor	esi, esi
$LN8@read_PKCS7:
; Line 768
	push	edi
	call	_TS_STATUS_INFO_free
	add	esp, 4
; Line 769
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 770
	pop	ecx
	ret	0
_read_PKCS7 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _reply_command
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_engine$ = 16						; size = 4
_queryfile$ = 20					; size = 4
_passin$ = 24						; size = 4
_inkey$ = 28						; size = 4
_signer$ = 32						; size = 4
_chain$ = 36						; size = 4
_policy$ = 40						; size = 4
_in$ = 44						; size = 4
_token_in$ = 48						; size = 4
_out$ = 52						; size = 4
_token_out$ = 56					; size = 4
_text$ = 60						; size = 4
_reply_command PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 663
	mov	eax, DWORD PTR _in$[esp-4]
	push	ebx
	push	ebp
	push	esi
	push	edi
	xor	ebp, ebp
	xor	esi, esi
	xor	ebx, ebx
	xor	edi, edi
	test	eax, eax
	je	SHORT $LN2@reply_comm
; Line 664
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	eax
	call	_BIO_new_file
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$end$32
; Line 666
	cmp	DWORD PTR _token_in$[esp+12], esi
	je	SHORT $LN5@reply_comm
; Line 671
	push	ebx
	call	_read_PKCS7
	add	esp, 4
	mov	esi, eax
; Line 672
	jmp	SHORT $LN8@reply_comm
$LN5@reply_comm:
; Line 674
	push	0
	push	ebx
	call	_d2i_TS_RESP_bio
	mov	esi, eax
; Line 676
	jmp	SHORT $LN26@reply_comm
$LN2@reply_comm:
; Line 677
	push	DWORD PTR _policy$[esp+12]
	push	DWORD PTR _chain$[esp+16]
	push	DWORD PTR _signer$[esp+20]
	push	DWORD PTR _inkey$[esp+24]
	push	DWORD PTR _passin$[esp+28]
	push	DWORD PTR _queryfile$[esp+32]
	push	DWORD PTR _engine$[esp+36]
	push	DWORD PTR _section$[esp+40]
	push	DWORD PTR _conf$[esp+44]
	call	_create_response
	mov	esi, eax
	add	esp, 36					; 00000024H
; Line 679
	test	esi, esi
	je	$LN7@reply_comm
; Line 680
	push	OFFSET ??_C@_0BO@CJJOIHDP@Response?5has?5been?5generated?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
$LN26@reply_comm:
	add	esp, 8
$LN8@reply_comm:
; Line 684
	test	esi, esi
	je	$end$32
; Line 688
	push	1
	call	DWORD PTR __imp____acrt_iob_func
; Line 489
	mov	ecx, DWORD PTR _out$[esp+16]
; Line 688
	add	esp, 4
; Line 489
	test	ecx, ecx
	jne	SHORT $LN24@reply_comm
	push	ecx
	push	eax
	call	_BIO_new_fp
	jmp	SHORT $LN27@reply_comm
$LN24@reply_comm:
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	ecx
	call	_BIO_new_file
$LN27@reply_comm:
	mov	edi, eax
	add	esp, 8
; Line 688
	test	edi, edi
	je	SHORT $end$32
; Line 693
	push	esi
	cmp	DWORD PTR _text$[esp+16], ebp
	je	SHORT $LN11@reply_comm
; Line 692
	cmp	DWORD PTR _token_out$[esp+16], ebp
	je	SHORT $LN13@reply_comm
; Line 693
	call	_TS_RESP_get_tst_info
; Line 694
	push	eax
	push	edi
	call	_TS_TST_INFO_print_bio
	add	esp, 12					; 0000000cH
; Line 696
	jmp	SHORT $LN29@reply_comm
$LN13@reply_comm:
; Line 697
	push	edi
	call	_TS_RESP_print_bio
; Line 700
	jmp	SHORT $LN30@reply_comm
$LN11@reply_comm:
; Line 702
	cmp	DWORD PTR _token_out$[esp+16], ebp
	je	SHORT $LN17@reply_comm
; Line 703
	call	_TS_RESP_get_token
; Line 704
	push	eax
	push	edi
	call	_i2d_PKCS7_bio
	add	esp, 12					; 0000000cH
; Line 706
	jmp	SHORT $LN29@reply_comm
$LN17@reply_comm:
; Line 707
	push	edi
	call	_i2d_TS_RESP_bio
$LN30@reply_comm:
	add	esp, 8
$LN29@reply_comm:
	test	eax, eax
	je	SHORT $end$32
; Line 712
	mov	ebp, 1
	jmp	SHORT $end$32
$LN7@reply_comm:
; Line 682
	push	OFFSET ??_C@_0BM@IBMCAENB@Response?5is?5not?5generated?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$end$32:
; Line 715
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 718
	push	ebx
	call	_BIO_free_all
; Line 719
	push	0
	call	_BIO_free_all
; Line 720
	push	0
	call	_BIO_free_all
; Line 721
	push	0
	call	_BIO_free_all
; Line 722
	push	edi
	call	_BIO_free_all
; Line 723
	push	esi
	call	_TS_RESP_free
	add	esp, 28					; 0000001cH
; Line 725
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 726
	ret	0
_reply_command ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _create_nonce
_TEXT	SEGMENT
_buf$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_bits$ = 8						; size = 4
_create_nonce PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 614
	mov	eax, 24					; 00000018H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+24], eax
; Line 617
	mov	eax, DWORD PTR _bits$[esp+20]
	dec	eax
	cdq
	push	ebx
	and	edx, 7
	xor	ebx, ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [edx+eax]
	sar	edi, 3
	inc	edi
; Line 621
	cmp	edi, 20					; 00000014H
	jg	SHORT $err$16
; Line 623
	lea	eax, DWORD PTR _buf$[esp+36]
	push	edi
	push	eax
	call	_RAND_bytes
	add	esp, 8
	test	eax, eax
	jle	SHORT $err$16
; Line 627
	xor	esi, esi
	test	edi, edi
	jle	SHORT $LN14@create_non
$LL4@create_non:
	cmp	BYTE PTR _buf$[esp+esi+36], bl
	jne	SHORT $LN14@create_non
	inc	esi
	cmp	esi, edi
	jl	SHORT $LL4@create_non
$LN14@create_non:
; Line 628
	call	_ASN1_INTEGER_new
	mov	ebx, eax
	test	ebx, ebx
	je	SHORT $err$16
; Line 630
	push	DWORD PTR [ebx+8]
	call	_CRYPTO_free
; Line 632
	sub	edi, esi
; Line 633
	push	633					; 00000279H
	push	OFFSET ??_C@_0M@MKEPFLFH@?4?2apps?2ts?4c?$AA@
	mov	DWORD PTR [ebx], edi
	lea	eax, DWORD PTR [edi+1]
	push	eax
	call	_CRYPTO_malloc
	add	esp, 16					; 00000010H
	mov	DWORD PTR [ebx+8], eax
	test	eax, eax
	je	SHORT $err$16
; Line 635
	push	DWORD PTR [ebx]
	lea	ecx, DWORD PTR _buf$[esp+40]
	add	ecx, esi
	push	ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 637
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 642
	mov	ecx, DWORD PTR __$ArrayPad$[esp+24]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
$err$16:
; Line 639
	push	OFFSET ??_C@_0BI@FECAGFBO@could?5not?5create?5nonce?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 640
	push	ebx
	call	_ASN1_INTEGER_free
; Line 642
	mov	ecx, DWORD PTR __$ArrayPad$[esp+48]
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
_create_nonce ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _create_digest
_TEXT	SEGMENT
_digest$GSCopy$1$ = -4132				; size = 4
_digest_len$1 = -4128					; size = 4
_md_ctx$2 = -4124					; size = 24
_buffer$3 = -4100					; size = 4096
__$ArrayPad$ = -4					; size = 4
_input$ = 8						; size = 4
_digest$ = 12						; size = 4
_md$ = 16						; size = 4
_md_value$ = 20						; size = 4
_create_digest PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 574
	mov	eax, 4132				; 00001024H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+4132], eax
	mov	eax, DWORD PTR _digest$[esp+4128]
	push	ebx
	mov	ebx, DWORD PTR _md_value$[esp+4132]
	push	ebp
	mov	ebp, DWORD PTR _md$[esp+4136]
	push	esi
	push	edi
	mov	edi, DWORD PTR _input$[esp+4144]
; Line 577
	push	ebp
	mov	DWORD PTR _digest$GSCopy$1$[esp+4152], eax
	call	_EVP_MD_size
	mov	esi, eax
	add	esp, 4
; Line 578
	test	esi, esi
	js	$err$16
; Line 580
	test	edi, edi
	je	SHORT $LN5@create_dig
; Line 586
	push	586					; 0000024aH
	push	OFFSET ??_C@_0M@MKEPFLFH@?4?2apps?2ts?4c?$AA@
	push	esi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ebx], eax
; Line 587
	test	eax, eax
	je	$err$16
; Line 590
	lea	eax, DWORD PTR _md_ctx$2[esp+4148]
	push	ebp
	push	eax
	call	_EVP_DigestInit
; Line 591
	push	4096					; 00001000H
	lea	eax, DWORD PTR _buffer$3[esp+4160]
	push	eax
	push	edi
	call	_BIO_read
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $LN3@create_dig
$LL2@create_dig:
; Line 592
	push	eax
	lea	eax, DWORD PTR _buffer$3[esp+4152]
	push	eax
	lea	eax, DWORD PTR _md_ctx$2[esp+4156]
	push	eax
	call	_EVP_DigestUpdate
	push	4096					; 00001000H
	lea	eax, DWORD PTR _buffer$3[esp+4164]
	push	eax
	push	edi
	call	_BIO_read
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LL2@create_dig
$LN3@create_dig:
; Line 594
	push	0
	push	DWORD PTR [ebx]
	lea	eax, DWORD PTR _md_ctx$2[esp+4156]
	push	eax
	call	_EVP_DigestFinal
	add	esp, 12					; 0000000cH
; Line 608
	mov	eax, esi
	jmp	SHORT $LN1@create_dig
$LN5@create_dig:
; Line 598
	lea	eax, DWORD PTR _digest_len$1[esp+4148]
	push	eax
	push	DWORD PTR _digest$GSCopy$1$[esp+4152]
	call	_string_to_hex
	add	esp, 8
	mov	DWORD PTR [ebx], eax
; Line 599
	test	eax, eax
	je	SHORT $LN9@create_dig
	cmp	esi, DWORD PTR _digest_len$1[esp+4148]
	jne	SHORT $LN9@create_dig
; Line 608
	mov	eax, esi
	jmp	SHORT $LN1@create_dig
$LN9@create_dig:
; Line 600
	push	eax
	call	_CRYPTO_free
; Line 602
	push	esi
	mov	DWORD PTR [ebx], 0
	push	OFFSET ??_C@_0CI@GKJPONPL@bad?5digest?0?5?$CFd?5bytes?5must?5be?5spe@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$err$16:
; Line 610
	xor	eax, eax
$LN1@create_dig:
; Line 611
	mov	ecx, DWORD PTR __$ArrayPad$[esp+4148]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 4132				; 00001024H
	ret	0
_create_digest ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _create_query
_TEXT	SEGMENT
_data$ = -12						; size = 4
_policy_obj$1$ = -8					; size = 4
_nonce_asn1$1$ = -4					; size = 4
_data_bio$ = 8						; size = 4
_digest$ = 12						; size = 4
_md$ = 16						; size = 4
_policy$ = 20						; size = 4
_no_nonce$ = 24						; size = 4
_cert$ = 28						; size = 4
_create_query PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 495
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
; Line 506
	mov	ebx, DWORD PTR _md$[esp+12]
	push	ebp
	push	esi
	xor	esi, esi
	xor	ebp, ebp
	push	edi
	xor	edi, edi
	mov	DWORD PTR _data$[esp+28], esi
	mov	DWORD PTR _policy_obj$1$[esp+28], esi
	mov	DWORD PTR _nonce_asn1$1$[esp+28], esi
	test	ebx, ebx
	jne	SHORT $LN2@create_que
	push	OFFSET ??_C@_04PGHFOLLE@sha1?$AA@
	call	_EVP_get_digestbyname
	mov	ebx, eax
	add	esp, 4
	test	ebx, ebx
	je	$LN31@create_que
$LN2@create_que:
; Line 510
	call	_TS_REQ_new
	mov	esi, eax
	test	esi, esi
	je	$LN31@create_que
; Line 514
	push	1
	push	esi
	call	_TS_REQ_set_version
	add	esp, 8
	test	eax, eax
	je	$LN31@create_que
; Line 518
	call	_TS_MSG_IMPRINT_new
	mov	edi, eax
	test	edi, edi
	je	$LN31@create_que
; Line 522
	call	_X509_ALGOR_new
	mov	ebp, eax
	test	ebp, ebp
	je	$LN31@create_que
; Line 524
	push	ebx
	call	_EVP_MD_type
	push	eax
	call	_OBJ_nid2obj
	add	esp, 8
	mov	DWORD PTR [ebp], eax
	test	eax, eax
	je	$LN31@create_que
; Line 526
	call	_ASN1_TYPE_new
	mov	DWORD PTR [ebp+4], eax
	test	eax, eax
	je	$LN31@create_que
; Line 529
	push	ebp
	push	edi
	mov	DWORD PTR [eax], 5
	call	_TS_MSG_IMPRINT_set_algo
	add	esp, 8
	test	eax, eax
	je	$LN31@create_que
; Line 533
	lea	eax, DWORD PTR _data$[esp+28]
	push	eax
	push	ebx
	push	DWORD PTR _digest$[esp+32]
	push	DWORD PTR _data_bio$[esp+36]
	call	_create_digest
; Line 535
	mov	ebx, DWORD PTR _data$[esp+44]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN22@create_que
	push	eax
	push	ebx
	push	edi
	call	_TS_MSG_IMPRINT_set_msg
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN22@create_que
; Line 538
	push	edi
	push	esi
	call	_TS_REQ_set_msg_imprint
	add	esp, 8
	test	eax, eax
	je	SHORT $LN22@create_que
; Line 542
	mov	eax, DWORD PTR _policy$[esp+24]
	test	eax, eax
	je	SHORT $LN14@create_que
	push	eax
	call	_txt2obj
	add	esp, 4
	mov	DWORD PTR _policy_obj$1$[esp+28], eax
	test	eax, eax
	je	SHORT $LN22@create_que
; Line 544
	push	eax
	push	esi
	call	_TS_REQ_set_policy_id
	add	esp, 8
	test	eax, eax
	je	SHORT $LN22@create_que
$LN14@create_que:
; Line 548
	cmp	DWORD PTR _no_nonce$[esp+24], 0
	jne	SHORT $LN16@create_que
	push	64					; 00000040H
	call	_create_nonce
	add	esp, 4
	mov	DWORD PTR _nonce_asn1$1$[esp+28], eax
	test	eax, eax
	je	SHORT $LN22@create_que
; Line 550
	push	eax
	push	esi
	call	_TS_REQ_set_nonce
	add	esp, 8
	test	eax, eax
	je	SHORT $LN22@create_que
$LN16@create_que:
; Line 554
	push	DWORD PTR _cert$[esp+24]
	push	esi
	call	_TS_REQ_set_cert_req
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN18@create_que
	jmp	SHORT $LN22@create_que
$LN31@create_que:
	mov	ebx, DWORD PTR _data$[esp+28]
$LN22@create_que:
; Line 560
	push	esi
	call	_TS_REQ_free
; Line 562
	push	OFFSET ??_C@_0BI@ONLCPDDL@could?5not?5create?5query?6?$AA@
	push	DWORD PTR _bio_err
	xor	esi, esi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN18@create_que:
; Line 564
	push	edi
	call	_TS_MSG_IMPRINT_free
; Line 565
	push	ebp
	call	_X509_ALGOR_free
; Line 566
	push	ebx
	call	_CRYPTO_free
; Line 567
	push	DWORD PTR _policy_obj$1$[esp+40]
	call	_ASN1_OBJECT_free
; Line 568
	push	DWORD PTR _nonce_asn1$1$[esp+44]
	call	_ASN1_INTEGER_free
	add	esp, 20					; 00000014H
; Line 569
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 570
	add	esp, 12					; 0000000cH
	ret	0
_create_query ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_open_with_default
_TEXT	SEGMENT
_file$ = 8						; size = 4
_mode$ = 12						; size = 4
_default_fp$ = 16					; size = 4
_BIO_open_with_default PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 489
	mov	eax, DWORD PTR _file$[esp-4]
	test	eax, eax
	jne	SHORT $LN3@BIO_open_w
	push	eax
	push	DWORD PTR _default_fp$[esp]
	call	_BIO_new_fp
	add	esp, 8
; Line 491
	ret	0
$LN3@BIO_open_w:
; Line 489
	push	DWORD PTR _mode$[esp-4]
	push	eax
	call	_BIO_new_file
	add	esp, 8
; Line 491
	ret	0
_BIO_open_with_default ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _query_command
_TEXT	SEGMENT
_ret$1$ = -4						; size = 4
_data$ = 8						; size = 4
_digest$ = 12						; size = 4
_md$ = 16						; size = 4
_policy$ = 20						; size = 4
_no_nonce$ = 24						; size = 4
_cert$ = 28						; size = 4
_in$ = 32						; size = 4
_out$ = 36						; size = 4
_text$ = 40						; size = 4
_query_command PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 434
	mov	eax, 4
	call	__chkstk
; Line 442
	mov	eax, DWORD PTR _in$[esp]
	push	ebx
	push	ebp
	push	esi
	push	edi
	xor	edi, edi
	mov	DWORD PTR _ret$1$[esp+20], 0
	xor	ebp, ebp
	xor	ebx, ebx
	xor	esi, esi
	test	eax, eax
	je	SHORT $LN2@query_comm
; Line 443
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	eax
	call	_BIO_new_file
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	je	$end$27
; Line 445
	push	esi
	push	ebp
	call	_d2i_TS_REQ_bio
	add	esp, 8
; Line 446
	jmp	SHORT $LN21@query_comm
$LN2@query_comm:
; Line 450
	mov	eax, DWORD PTR _digest$[esp+16]
	test	eax, eax
	jne	SHORT $LN5@query_comm
	push	eax
	call	DWORD PTR __imp____acrt_iob_func
; Line 489
	mov	ecx, DWORD PTR _data$[esp+20]
; Line 450
	add	esp, 4
; Line 489
	test	ecx, ecx
	jne	SHORT $LN15@query_comm
	push	ecx
	push	eax
	call	_BIO_new_fp
	jmp	SHORT $LN22@query_comm
$LN15@query_comm:
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	ecx
	call	_BIO_new_file
$LN22@query_comm:
	mov	ebx, eax
	add	esp, 8
; Line 450
	test	ebx, ebx
	je	SHORT $end$27
	mov	eax, DWORD PTR _digest$[esp+16]
$LN5@query_comm:
; Line 453
	push	DWORD PTR _cert$[esp+16]
	push	DWORD PTR _no_nonce$[esp+20]
	push	DWORD PTR _policy$[esp+24]
	push	DWORD PTR _md$[esp+28]
	push	eax
	push	ebx
	call	_create_query
	add	esp, 24					; 00000018H
$LN21@query_comm:
	mov	edi, eax
; Line 456
	test	edi, edi
	je	SHORT $end$27
; Line 460
	push	1
	call	DWORD PTR __imp____acrt_iob_func
; Line 489
	mov	ecx, DWORD PTR _out$[esp+20]
; Line 460
	add	esp, 4
; Line 489
	test	ecx, ecx
	jne	SHORT $LN19@query_comm
	push	ecx
	push	eax
	call	_BIO_new_fp
	jmp	SHORT $LN23@query_comm
$LN19@query_comm:
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	push	ecx
	call	_BIO_new_file
$LN23@query_comm:
	mov	esi, eax
	add	esp, 8
; Line 460
	test	esi, esi
	je	SHORT $end$27
; Line 462
	cmp	DWORD PTR _text$[esp+16], 0
; Line 464
	push	edi
	push	esi
	je	SHORT $LN8@query_comm
	call	_TS_REQ_print_bio
; Line 466
	jmp	SHORT $LN25@query_comm
$LN8@query_comm:
; Line 468
	call	_i2d_TS_REQ_bio
$LN25@query_comm:
	add	esp, 8
	test	eax, eax
	je	SHORT $end$27
; Line 472
	mov	DWORD PTR _ret$1$[esp+20], 1
$end$27:
; Line 475
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 478
	push	ebp
	call	_BIO_free_all
; Line 479
	push	ebx
	call	_BIO_free_all
; Line 480
	push	esi
	call	_BIO_free_all
; Line 481
	push	edi
	call	_TS_REQ_free
; Line 483
	mov	eax, DWORD PTR _ret$1$[esp+40]
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 484
	pop	ecx
	ret	0
_query_command ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_config_file
_TEXT	SEGMENT
_errorline$ = -4					; size = 4
_configfile$ = 8					; size = 4
_load_config_file PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 386
	mov	eax, 4
	call	__chkstk
	push	esi
; Line 390
	mov	esi, DWORD PTR _configfile$[esp+4]
	mov	DWORD PTR _errorline$[esp+8], -1
	push	edi
	test	esi, esi
	jne	SHORT $LN15@load_confi
; Line 391
	mov	edi, DWORD PTR __imp__getenv
	push	OFFSET ??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@
	call	edi
	mov	esi, eax
	add	esp, 4
; Line 392
	test	esi, esi
	jne	SHORT $LN15@load_confi
; Line 393
	push	OFFSET ??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@
	call	edi
	mov	esi, eax
	add	esp, 4
; Line 395
	test	esi, esi
	jne	SHORT $LN15@load_confi
	pop	edi
	pop	esi
; Line 425
	pop	ecx
	ret	0
$LN15@load_confi:
; Line 395
	push	0
	call	_NCONF_new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	SHORT $LN5@load_confi
	lea	eax, DWORD PTR _errorline$[esp+12]
	push	eax
	push	esi
	push	edi
	call	_NCONF_load
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LN7@load_confi
$LN5@load_confi:
; Line 398
	mov	eax, DWORD PTR _errorline$[esp+12]
; Line 399
	push	esi
	test	eax, eax
	jg	SHORT $LN6@load_confi
	push	OFFSET ??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@load_confi
$LN6@load_confi:
; Line 402
	push	eax
	push	OFFSET ??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN7@load_confi:
; Line 406
	test	edi, edi
	je	$LN17@load_confi
; Line 409
	push	esi
	push	OFFSET ??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 410
	push	OFFSET ??_C@_08NOLCFLKC@oid_file?$AA@
	push	0
	push	edi
	call	_NCONF_get_string
	add	esp, 24					; 00000018H
; Line 411
	test	eax, eax
	je	SHORT $LN9@load_confi
; Line 412
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	eax
	call	_BIO_new_file
	mov	esi, eax
	add	esp, 8
; Line 413
	test	esi, esi
	jne	SHORT $LN11@load_confi
; Line 414
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
	jmp	SHORT $LN10@load_confi
$LN11@load_confi:
; Line 416
	push	esi
	call	_OBJ_create_objects
; Line 417
	push	esi
	call	_BIO_free_all
	add	esp, 8
; Line 419
	jmp	SHORT $LN10@load_confi
$LN9@load_confi:
; Line 420
	call	_ERR_clear_error
$LN10@load_confi:
; Line 421
	push	edi
	push	DWORD PTR _bio_err
	call	_add_oid_section
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@load_confi
; Line 422
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN17@load_confi:
; Line 424
	mov	eax, edi
	pop	edi
	pop	esi
; Line 425
	pop	ecx
	ret	0
_load_config_file ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _txt2obj
_TEXT	SEGMENT
_oid$ = 8						; size = 4
_txt2obj PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ts.c
; Line 376
	push	esi
; Line 379
	push	0
	push	DWORD PTR _oid$[esp+4]
	call	_OBJ_txt2obj
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	jne	SHORT $LN2@txt2obj
; Line 380
	push	DWORD PTR _oid$[esp]
	push	OFFSET ??_C@_0BK@FNHFJPIO@cannot?5convert?5?$CFs?5to?5OID?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 382
	mov	eax, esi
$LN2@txt2obj:
	pop	esi
; Line 383
	ret	0
_txt2obj ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

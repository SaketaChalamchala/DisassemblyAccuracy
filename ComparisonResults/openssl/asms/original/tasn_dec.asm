; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_tag2bit DD	00H
	DD	00H
	DD	00H
	DD	0400H
	DD	0200H
	DD	00H
	DD	00H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	02000H
	DD	01000H
	DD	01000H
	DD	01000H
	DD	010000H
	DD	00H
	DD	01H
	DD	02H
	DD	04H
	DD	08H
	DD	010H
	DD	04000H
	DD	08000H
	DD	020H
	DD	040H
	DD	080H
	DD	0100H
	DD	01000H
	DD	0800H
	DD	01000H
CONST	ENDS
PUBLIC	_ASN1_tag2bit
PUBLIC	_ASN1_item_d2i
PUBLIC	_ASN1_template_d2i
PUBLIC	_ASN1_item_ex_d2i
PUBLIC	_asn1_ex_c2i
PUBLIC	??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@ ; `string'
PUBLIC	??_C@_07NHKPEHKF@?0?5Type?$DN?$AA@		; `string'
PUBLIC	??_C@_06GPKHKFJE@Field?$DN?$AA@			; `string'
PUBLIC	??_C@_05GCCLHHOK@Type?$DN?$AA@			; `string'
EXTRN	_sk_num:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_push:PROC
EXTRN	_sk_pop:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ASN1_TYPE_new:PROC
EXTRN	_ASN1_TYPE_free:PROC
EXTRN	_ASN1_TYPE_set:PROC
EXTRN	_c2i_ASN1_OBJECT:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_STRING_set:PROC
EXTRN	_c2i_ASN1_BIT_STRING:PROC
EXTRN	_c2i_ASN1_INTEGER:PROC
EXTRN	_ASN1_get_object:PROC
EXTRN	_ASN1_item_ex_new:PROC
EXTRN	_ASN1_item_ex_free:PROC
EXTRN	_ASN1_template_free:PROC
EXTRN	_asn1_get_choice_selector:PROC
EXTRN	_asn1_set_choice_selector:PROC
EXTRN	_asn1_get_field_ptr:PROC
EXTRN	_asn1_do_adb:PROC
EXTRN	_asn1_enc_save:PROC
EXTRN	_BUF_MEM_grow_clean:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_05GCCLHHOK@Type?$DN?$AA@
CONST	SEGMENT
??_C@_05GCCLHHOK@Type?$DN?$AA@ DB 'Type=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPKHKFJE@Field?$DN?$AA@
CONST	SEGMENT
??_C@_06GPKHKFJE@Field?$DN?$AA@ DB 'Field=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NHKPEHKF@?0?5Type?$DN?$AA@
CONST	SEGMENT
??_C@_07NHKPEHKF@?0?5Type?$DN?$AA@ DB ', Type=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@ DB '.\crypto\asn1\t'
	DB	'asn_dec.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_d2i_ex_primitive
_TEXT	SEGMENT
_free_cont$ = -26					; size = 1
_cst$ = -25						; size = 1
_oclass$1 = -25						; size = 1
_p$ = -24						; size = 4
_plen$ = -20						; size = 4
_utype$ = -20						; size = 4
_inf$ = -16						; size = 1
_buf$ = -12						; size = 12
_pval$ = 8						; size = 4
_in$ = 12						; size = 4
_inlen$ = 16						; size = 4
_it$ = 20						; size = 4
_tag$ = 24						; size = 4
_aclass$ = 28						; size = 4
_opt$ = 32						; size = 1
_ctx$ = 36						; size = 4
_asn1_d2i_ex_primitive PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 715
	mov	eax, 28					; 0000001cH
	call	__chkstk
; Line 723
	cmp	DWORD PTR _pval$[esp+24], 0
	mov	BYTE PTR _free_cont$[esp+28], 0
	mov	DWORD PTR _buf$[esp+28], 0
	mov	DWORD PTR _buf$[esp+32], 0
	mov	DWORD PTR _buf$[esp+36], 0
	jne	SHORT $LN2@asn1_d2i_e
; Line 724
	push	724					; 000002d4H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	125					; 0000007dH
	push	108					; 0000006cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 725
	xor	eax, eax
; Line 841
	add	esp, 28					; 0000001cH
	ret	0
$LN2@asn1_d2i_e:
; Line 728
	mov	eax, DWORD PTR _it$[esp+24]
	push	esi
	push	edi
	cmp	BYTE PTR [eax], 5
	jne	SHORT $LN3@asn1_d2i_e
; Line 729
	mov	esi, DWORD PTR _tag$[esp+32]
; Line 730
	or	edi, -1
; Line 731
	jmp	SHORT $LN42@asn1_d2i_e
$LN3@asn1_d2i_e:
; Line 732
	mov	esi, DWORD PTR [eax+4]
	mov	edi, DWORD PTR _tag$[esp+32]
$LN42@asn1_d2i_e:
; Line 734
	mov	edx, DWORD PTR _opt$[esp+32]
	mov	DWORD PTR _utype$[esp+36], esi
	push	ebx
	mov	ebx, DWORD PTR _ctx$[esp+36]
	push	ebp
	cmp	esi, -4					; fffffffcH
	jne	$LN37@asn1_d2i_e
; Line 737
	test	edi, edi
	js	SHORT $LN6@asn1_d2i_e
; Line 738
	push	738					; 000002e2H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	127					; 0000007fH
; Line 765
	push	108					; 0000006cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 766
	xor	eax, eax
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 841
	add	esp, 28					; 0000001cH
	ret	0
$LN6@asn1_d2i_e:
; Line 741
	test	dl, dl
	je	SHORT $LN7@asn1_d2i_e
; Line 742
	push	743					; 000002e7H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	126					; 0000007eH
; Line 765
	push	108					; 0000006cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 766
	xor	eax, eax
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 841
	add	esp, 28					; 0000001cH
	ret	0
$LN7@asn1_d2i_e:
; Line 746
	mov	ebp, DWORD PTR _in$[esp+40]
; Line 747
	push	ebx
	push	0
	push	0
	mov	eax, DWORD PTR [ebp]
	push	-1
	push	DWORD PTR _inlen$[esp+56]
	mov	DWORD PTR _p$[esp+64], eax
	lea	eax, DWORD PTR _p$[esp+64]
	push	eax
	push	0
	push	0
	lea	eax, DWORD PTR _oclass$1[esp+76]
	push	eax
	lea	eax, DWORD PTR _utype$[esp+80]
	push	eax
	push	0
	call	_asn1_check_tlen
	add	esp, 44					; 0000002cH
; Line 749
	test	eax, eax
	jne	SHORT $LN8@asn1_d2i_e
; Line 750
	push	750					; 000002eeH
; Line 751
	jmp	SHORT $LN43@asn1_d2i_e
$LN8@asn1_d2i_e:
; Line 753
	cmp	BYTE PTR _oclass$1[esp+44], 0
	mov	eax, -3					; fffffffdH
	mov	esi, DWORD PTR _utype$[esp+44]
	mov	edx, DWORD PTR _opt$[esp+40]
	cmovne	esi, eax
	jmp	SHORT $LN9@asn1_d2i_e
$LN37@asn1_d2i_e:
	mov	ebp, DWORD PTR _in$[esp+40]
$LN9@asn1_d2i_e:
; Line 756
	cmp	edi, -1
	jne	SHORT $LN34@asn1_d2i_e
; Line 757
	mov	edi, esi
; Line 758
	xor	ecx, ecx
	jmp	SHORT $LN10@asn1_d2i_e
$LN34@asn1_d2i_e:
	mov	ecx, DWORD PTR _aclass$[esp+40]
$LN10@asn1_d2i_e:
; Line 760
	mov	eax, DWORD PTR [ebp]
; Line 762
	push	ebx
	push	edx
	push	ecx
	push	edi
	push	DWORD PTR _inlen$[esp+56]
	mov	DWORD PTR _p$[esp+64], eax
	lea	eax, DWORD PTR _p$[esp+64]
	push	eax
	lea	eax, DWORD PTR _cst$[esp+68]
	push	eax
	lea	eax, DWORD PTR _inf$[esp+72]
	push	eax
	push	0
	lea	eax, DWORD PTR _plen$[esp+80]
	push	0
	push	eax
	call	_asn1_check_tlen
	add	esp, 44					; 0000002cH
; Line 764
	test	eax, eax
	jne	SHORT $LN11@asn1_d2i_e
; Line 765
	push	765					; 000002fdH
$LN43@asn1_d2i_e:
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	push	108					; 0000006cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 766
	xor	eax, eax
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 841
	add	esp, 28					; 0000001cH
	ret	0
$LN11@asn1_d2i_e:
; Line 767
	cmp	eax, -1
	jne	SHORT $LN13@asn1_d2i_e
; Line 768
	pop	ebp
	pop	ebx
	pop	edi
	or	eax, eax
	pop	esi
; Line 841
	add	esp, 28					; 0000001cH
	ret	0
$LN13@asn1_d2i_e:
; Line 769
	xor	ebp, ebp
; Line 772
	cmp	esi, 16					; 00000010H
	je	$LN16@asn1_d2i_e
	cmp	esi, 17					; 00000011H
	je	$LN16@asn1_d2i_e
	cmp	esi, -3					; fffffffdH
	je	$LN33@asn1_d2i_e
; Line 797
	cmp	BYTE PTR _cst$[esp+44], 0
	je	$LN24@asn1_d2i_e
; Line 800
	cmp	esi, 5
	je	$LN27@asn1_d2i_e
	cmp	esi, 1
	je	$LN27@asn1_d2i_e
	cmp	esi, 6
	je	$LN27@asn1_d2i_e
	cmp	esi, 2
	je	SHORT $LN27@asn1_d2i_e
	cmp	esi, 10					; 0000000aH
	je	SHORT $LN27@asn1_d2i_e
; Line 813
	push	ebp
	push	ebp
	push	-1
	push	DWORD PTR _inf$[esp+56]
	lea	eax, DWORD PTR _p$[esp+60]
	mov	BYTE PTR _free_cont$[esp+60], 1
	push	DWORD PTR _plen$[esp+60]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+68]
	push	eax
	call	_asn1_collect
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$err$46
; Line 816
	mov	edi, DWORD PTR _buf$[esp+44]
; Line 818
	lea	eax, DWORD PTR [edi+1]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+48]
	push	eax
	call	_BUF_MEM_grow_clean
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN29@asn1_d2i_e
; Line 819
	push	819					; 00000333H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	65					; 00000041H
	push	108					; 0000006cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 820
	jmp	$err$46
$LN29@asn1_d2i_e:
; Line 822
	mov	eax, DWORD PTR _buf$[esp+48]
; Line 824
	mov	ebx, DWORD PTR _p$[esp+44]
	mov	BYTE PTR [edi+eax], 0
	mov	ebp, DWORD PTR _buf$[esp+48]
	jmp	$LN22@asn1_d2i_e
$LN27@asn1_d2i_e:
; Line 801
	push	801					; 00000321H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	218					; 000000daH
	push	108					; 0000006cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 802
	xor	eax, eax
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 841
	add	esp, 28					; 0000001cH
	ret	0
$LN24@asn1_d2i_e:
; Line 825
	mov	ebx, DWORD PTR _p$[esp+44]
	mov	ebp, ebx
; Line 826
	mov	edi, DWORD PTR _plen$[esp+44]
; Line 827
	add	ebx, edi
	jmp	SHORT $LN22@asn1_d2i_e
$LN16@asn1_d2i_e:
; Line 777
	cmp	esi, -3					; fffffffdH
	jne	SHORT $LN17@asn1_d2i_e
$LN33@asn1_d2i_e:
; Line 778
	test	ebx, ebx
	je	SHORT $LN20@asn1_d2i_e
	mov	BYTE PTR [ebx], 0
$LN20@asn1_d2i_e:
; Line 787
	mov	ebp, DWORD PTR _in$[esp+40]
; Line 789
	mov	eax, DWORD PTR _inf$[esp+44]
	mov	ebp, DWORD PTR [ebp]
	test	al, al
	je	SHORT $LN21@asn1_d2i_e
; Line 790
	push	eax
	push	DWORD PTR _plen$[esp+48]
	lea	eax, DWORD PTR _p$[esp+52]
	push	eax
	call	_asn1_find_end
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN36@asn1_d2i_e
; Line 792
	mov	ebx, DWORD PTR _p$[esp+44]
	mov	edi, ebx
	sub	edi, ebp
; Line 793
	jmp	SHORT $LN22@asn1_d2i_e
$LN17@asn1_d2i_e:
; Line 781
	cmp	BYTE PTR _cst$[esp+44], 0
	jne	SHORT $LN20@asn1_d2i_e
; Line 782
	push	783					; 0000030fH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	156					; 0000009cH
	push	108					; 0000006cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 784
	xor	eax, eax
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 841
	add	esp, 28					; 0000001cH
	ret	0
$LN21@asn1_d2i_e:
; Line 794
	mov	edi, DWORD PTR _plen$[esp+44]
	mov	ebx, DWORD PTR _p$[esp+44]
	sub	edi, ebp
	add	edi, ebx
; Line 795
	add	ebx, DWORD PTR _plen$[esp+44]
$LN22@asn1_d2i_e:
; Line 832
	push	DWORD PTR _it$[esp+40]
	lea	eax, DWORD PTR _free_cont$[esp+48]
	push	eax
	push	esi
	push	edi
	push	ebp
	push	DWORD PTR _pval$[esp+60]
	call	_asn1_ex_c2i
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN36@asn1_d2i_e
; Line 835
	mov	eax, DWORD PTR _in$[esp+40]
; Line 836
	mov	ebp, 1
	mov	DWORD PTR [eax], ebx
	jmp	SHORT $err$46
$LN36@asn1_d2i_e:
	xor	ebp, ebp
$err$46:
; Line 838
	cmp	BYTE PTR _free_cont$[esp+44], 0
	je	SHORT $LN31@asn1_d2i_e
	mov	ecx, DWORD PTR _buf$[esp+48]
	test	ecx, ecx
	je	SHORT $LN31@asn1_d2i_e
; Line 839
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN31@asn1_d2i_e:
; Line 840
	mov	eax, ebp
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 841
	add	esp, 28					; 0000001cH
	ret	0
_asn1_d2i_ex_primitive ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_template_noexp_d2i
_TEXT	SEGMENT
_p$ = -8						; size = 4
_skfield$1 = -4						; size = 4
_vtmp$2 = -4						; size = 4
_sk_eoc$3 = 8						; size = 1
_val$ = 8						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_tt$ = 20						; size = 4
_opt$ = 24						; size = 1
_ctx$ = 28						; size = 4
_asn1_template_noexp_d2i PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 596
	mov	eax, 8
	call	__chkstk
	push	ebx
; Line 600
	mov	ebx, DWORD PTR _val$[esp+8]
	test	ebx, ebx
	jne	SHORT $LN6@asn1_templ
; Line 601
	xor	eax, eax
	pop	ebx
; Line 709
	add	esp, 8
	ret	0
$LN6@asn1_templ:
; Line 605
	mov	eax, DWORD PTR _in$[esp+8]
	push	ebp
	mov	ebp, DWORD PTR _tt$[esp+12]
	push	esi
	mov	eax, DWORD PTR [eax]
	push	edi
	mov	ecx, DWORD PTR [ebp]
	mov	edx, ecx
	and	edx, 192				; 000000c0H
	mov	DWORD PTR _p$[esp+24], eax
; Line 608
	test	cl, 6
	je	$LN7@asn1_templ
; Line 613
	test	cl, 8
	je	SHORT $LN9@asn1_templ
; Line 614
	mov	eax, DWORD PTR [ebp+4]
; Line 616
	jmp	SHORT $LN11@asn1_templ
$LN9@asn1_templ:
; Line 618
	movsx	eax, cl
	xor	edx, edx
	and	eax, 2
	or	eax, 32					; 00000020H
	shr	eax, 1
$LN11@asn1_templ:
; Line 624
	push	DWORD PTR _ctx$[esp+20]
	push	DWORD PTR _opt$[esp+24]
	push	edx
	push	eax
	push	DWORD PTR _len$[esp+36]
	lea	eax, DWORD PTR _p$[esp+44]
	push	eax
	push	0
	lea	eax, DWORD PTR _sk_eoc$3[esp+48]
	push	eax
	push	0
	lea	eax, DWORD PTR _len$[esp+56]
	push	0
	push	eax
	call	_asn1_check_tlen
	add	esp, 44					; 0000002cH
; Line 626
	test	eax, eax
	jne	SHORT $LN13@asn1_templ
; Line 627
	push	627					; 00000273H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	push	131					; 00000083H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 628
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 709
	add	esp, 8
	ret	0
$LN13@asn1_templ:
; Line 629
	cmp	eax, -1
	je	$LN56@asn1_templ
; Line 631
	mov	esi, DWORD PTR [ebx]
	test	esi, esi
	jne	SHORT $LN16@asn1_templ
; Line 632
	call	_sk_new_null
	mov	DWORD PTR [ebx], eax
	jmp	SHORT $LN3@asn1_templ
$LN16@asn1_templ:
; Line 639
	push	esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@asn1_templ
	npad	1
$LL2@asn1_templ:
; Line 640
	push	esi
	call	_sk_pop
	mov	DWORD PTR _vtmp$2[esp+28], eax
; Line 641
	mov	eax, DWORD PTR [ebp+16]
	call	eax
	push	eax
	lea	eax, DWORD PTR _vtmp$2[esp+32]
	push	eax
	call	_ASN1_item_ex_free
	push	esi
	call	_sk_num
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LL2@asn1_templ
$LN3@asn1_templ:
; Line 645
	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN38@asn1_templ
; Line 646
	push	646					; 00000286H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	65					; 00000041H
; Line 647
	jmp	$LN54@asn1_templ
$LN38@asn1_templ:
; Line 651
	mov	edi, DWORD PTR _len$[esp+20]
	test	edi, edi
	jle	SHORT $LN5@asn1_templ
$LL4@asn1_templ:
; Line 653
	mov	esi, DWORD PTR _p$[esp+24]
; Line 1128
	cmp	edi, 2
	jl	SHORT $LN35@asn1_templ
; Line 1131
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LN35@asn1_templ
	cmp	BYTE PTR [esi+1], 0
	je	SHORT $LN48@asn1_templ
$LN35@asn1_templ:
; Line 666
	push	DWORD PTR _ctx$[esp+20]
	mov	eax, DWORD PTR [ebp+16]
	push	0
	push	0
	push	-1
	mov	DWORD PTR _skfield$1[esp+40], 0
	call	eax
	push	eax
	push	edi
	lea	eax, DWORD PTR _p$[esp+48]
	push	eax
	lea	eax, DWORD PTR _skfield$1[esp+52]
	push	eax
	call	_ASN1_item_ex_d2i
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN40@asn1_templ
; Line 673
	push	DWORD PTR _skfield$1[esp+24]
	sub	esi, DWORD PTR _p$[esp+28]
	push	DWORD PTR [ebx]
	add	edi, esi
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN41@asn1_templ
; Line 651
	test	edi, edi
	jg	SHORT $LL4@asn1_templ
$LN5@asn1_templ:
; Line 678
	cmp	BYTE PTR _sk_eoc$3[esp+20], 0
	je	$LN50@asn1_templ
; Line 679
	push	679					; 000002a7H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	137					; 00000089H
; Line 680
	jmp	$LN54@asn1_templ
$LN48@asn1_templ:
; Line 1132
	add	esi, 2
; Line 656
	cmp	BYTE PTR _sk_eoc$3[esp+20], 0
; Line 1132
	mov	DWORD PTR _p$[esp+24], esi
; Line 656
	jne	$LN31@asn1_templ
; Line 657
	push	658					; 00000292H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	159					; 0000009fH
; Line 659
	jmp	SHORT $LN54@asn1_templ
$LN41@asn1_templ:
; Line 674
	push	674					; 000002a2H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	65					; 00000041H
; Line 675
	jmp	SHORT $LN54@asn1_templ
$LN40@asn1_templ:
; Line 668
	push	669					; 0000029dH
; Line 670
	jmp	SHORT $LN55@asn1_templ
$LN7@asn1_templ:
; Line 684
	mov	eax, DWORD PTR [ebp+16]
	push	DWORD PTR _ctx$[esp+20]
	push	DWORD PTR _opt$[esp+24]
	test	cl, 8
	je	SHORT $LN24@asn1_templ
	push	edx
	push	DWORD PTR [ebp+4]
	call	eax
	push	eax
	push	DWORD PTR _len$[esp+40]
	lea	eax, DWORD PTR _p$[esp+48]
	push	eax
	push	ebx
	call	_ASN1_item_ex_d2i
	add	esp, 32					; 00000020H
; Line 687
	test	eax, eax
	jne	SHORT $LN29@asn1_templ
; Line 688
	push	688					; 000002b0H
; Line 689
	jmp	SHORT $LN55@asn1_templ
$LN24@asn1_templ:
; Line 694
	and	ecx, 1024				; 00000400H
	push	ecx
	push	-1
	call	eax
	push	eax
	push	DWORD PTR _len$[esp+40]
	lea	eax, DWORD PTR _p$[esp+48]
	push	eax
	push	ebx
	call	_ASN1_item_ex_d2i
	add	esp, 32					; 00000020H
; Line 696
	test	eax, eax
	jne	SHORT $LN29@asn1_templ
; Line 697
	push	697					; 000002b9H
$LN55@asn1_templ:
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
$LN54@asn1_templ:
	push	131					; 00000083H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$58:
; Line 707
	push	ebp
	push	ebx
	call	_ASN1_template_free
	add	esp, 8
; Line 708
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 709
	add	esp, 8
	ret	0
$LN29@asn1_templ:
; Line 699
	cmp	eax, -1
	jne	SHORT $LN50@asn1_templ
$LN56@asn1_templ:
	pop	edi
	pop	esi
	pop	ebp
; Line 700
	or	eax, -1
	pop	ebx
; Line 709
	add	esp, 8
	ret	0
$LN50@asn1_templ:
; Line 700
	mov	esi, DWORD PTR _p$[esp+24]
$LN31@asn1_templ:
; Line 703
	mov	eax, DWORD PTR _in$[esp+20]
	pop	edi
	mov	DWORD PTR [eax], esi
; Line 704
	mov	eax, 1
	pop	esi
	pop	ebp
	pop	ebx
; Line 709
	add	esp, 8
	ret	0
_asn1_template_noexp_d2i ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_template_ex_d2i
_TEXT	SEGMENT
_exp_eoc$ = -13						; size = 1
_p$ = -12						; size = 4
_len$ = -8						; size = 4
_q$1$ = -4						; size = 4
_cst$1 = 8						; size = 1
_val$ = 8						; size = 4
_in$ = 12						; size = 4
_inlen$ = 16						; size = 4
_tt$ = 20						; size = 4
_opt$ = 24						; size = 1
_ctx$ = 28						; size = 4
_asn1_template_ex_d2i PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 524
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	edi
; Line 530
	mov	edi, DWORD PTR _val$[esp+16]
	test	edi, edi
	jne	SHORT $LN2@asn1_templ
; Line 531
	xor	eax, eax
	pop	edi
; Line 590
	add	esp, 16					; 00000010H
	ret	0
$LN2@asn1_templ:
	push	ebx
; Line 532
	mov	ebx, DWORD PTR _tt$[esp+20]
	push	ebp
; Line 535
	mov	ebp, DWORD PTR _in$[esp+24]
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _p$[esp+28], eax
; Line 538
	test	cl, 16					; 00000010H
	je	$LN3@asn1_templ
; Line 544
	push	esi
	mov	esi, DWORD PTR _ctx$[esp+28]
	lea	eax, DWORD PTR _p$[esp+32]
	push	esi
	push	DWORD PTR _opt$[esp+32]
	and	ecx, 192				; 000000c0H
	push	ecx
	push	DWORD PTR [ebx+4]
	push	DWORD PTR _inlen$[esp+44]
	push	eax
	lea	eax, DWORD PTR _cst$1[esp+52]
	push	eax
	lea	eax, DWORD PTR _exp_eoc$[esp+60]
	push	eax
	push	0
	lea	eax, DWORD PTR _len$[esp+68]
	push	0
	push	eax
	call	_asn1_check_tlen
; Line 546
	mov	ecx, DWORD PTR _p$[esp+76]
	add	esp, 44					; 0000002cH
	mov	DWORD PTR _q$1$[esp+32], ecx
; Line 547
	test	eax, eax
	jne	SHORT $LN5@asn1_templ
; Line 548
	push	548					; 00000224H
; Line 549
	jmp	SHORT $LN21@asn1_templ
$LN5@asn1_templ:
; Line 550
	cmp	eax, -1
	jne	SHORT $LN7@asn1_templ
; Line 551
	pop	esi
	pop	ebp
	pop	ebx
	or	eax, eax
	pop	edi
; Line 590
	add	esp, 16					; 00000010H
	ret	0
$LN7@asn1_templ:
; Line 552
	cmp	BYTE PTR _cst$1[esp+28], 0
	jne	SHORT $LN8@asn1_templ
; Line 553
	push	554					; 0000022aH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	120					; 00000078H
; Line 555
	jmp	SHORT $LN20@asn1_templ
$LN8@asn1_templ:
; Line 558
	push	esi
	mov	esi, DWORD PTR _len$[esp+36]
	lea	eax, DWORD PTR _p$[esp+36]
	push	0
	push	ebx
	push	esi
	push	eax
	push	edi
	call	_asn1_template_noexp_d2i
	add	esp, 24					; 00000018H
; Line 559
	test	eax, eax
	jne	SHORT $LN9@asn1_templ
; Line 560
	push	560					; 00000230H
$LN21@asn1_templ:
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
$LN20@asn1_templ:
	push	132					; 00000084H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 561
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi
; Line 590
	add	esp, 16					; 00000010H
	ret	0
$LN9@asn1_templ:
; Line 564
	mov	ecx, DWORD PTR _q$1$[esp+32]
	mov	eax, DWORD PTR _p$[esp+32]
	sub	ecx, eax
	add	esi, ecx
; Line 565
	cmp	BYTE PTR _exp_eoc$[esp+32], 0
	je	SHORT $LN10@asn1_templ
; Line 567
	lea	eax, DWORD PTR _p$[esp+32]
	push	esi
	push	eax
	call	_asn1_check_eoc
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN15@asn1_templ
; Line 568
	push	568					; 00000238H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	137					; 00000089H
; Line 569
	jmp	SHORT $LN19@asn1_templ
$LN15@asn1_templ:
; Line 589
	mov	eax, DWORD PTR _p$[esp+32]
$LN13@asn1_templ:
	pop	esi
; Line 584
	mov	DWORD PTR [ebp], eax
; Line 585
	mov	eax, 1
	pop	ebp
	pop	ebx
	pop	edi
; Line 590
	add	esp, 16					; 00000010H
	ret	0
$LN10@asn1_templ:
; Line 575
	test	esi, esi
	je	SHORT $LN13@asn1_templ
; Line 576
	push	577					; 00000241H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	119					; 00000077H
$LN19@asn1_templ:
	push	132					; 00000084H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$24:
; Line 588
	push	ebx
	push	edi
	call	_ASN1_template_free
	add	esp, 8
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi
; Line 590
	add	esp, 16					; 00000010H
	ret	0
$LN3@asn1_templ:
; Line 582
	push	DWORD PTR _ctx$[esp+24]
	push	DWORD PTR _opt$[esp+28]
	push	ebx
	push	DWORD PTR _inlen$[esp+36]
	push	ebp
	push	edi
	call	_asn1_template_noexp_d2i
	add	esp, 24					; 00000018H
	pop	ebp
	pop	ebx
	pop	edi
; Line 590
	add	esp, 16					; 00000010H
	ret	0
_asn1_template_ex_d2i ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_check_tlen
_TEXT	SEGMENT
_p$ = -20						; size = 4
_plen$ = -16						; size = 4
_pclass$ = -12						; size = 4
_ptag$ = -8						; size = 4
_q$1$ = -4						; size = 4
_olen$ = 8						; size = 4
_otag$ = 12						; size = 4
_oclass$ = 16						; size = 4
_inf$ = 20						; size = 4
_cst$ = 24						; size = 4
_in$ = 28						; size = 4
_len$ = 32						; size = 4
_exptag$ = 36						; size = 4
_expclass$ = 40						; size = 4
_opt$ = 44						; size = 1
_pclass$1$ = 48						; size = 4
_ctx$ = 48						; size = 4
_asn1_check_tlen PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 1149
	mov	eax, 20					; 00000014H
	call	__chkstk
; Line 1154
	mov	ecx, DWORD PTR _in$[esp+16]
	push	ebx
	push	ebp
	push	esi
	mov	ecx, DWORD PTR [ecx]
; Line 1157
	mov	esi, DWORD PTR _ctx$[esp+28]
	mov	DWORD PTR _p$[esp+32], ecx
	mov	DWORD PTR _q$1$[esp+32], ecx
	push	edi
	test	esi, esi
	je	SHORT $LN2@asn1_check
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN2@asn1_check
; Line 1160
	mov	eax, DWORD PTR [esi+16]
; Line 1162
	add	ecx, DWORD PTR [esi+20]
	mov	edx, DWORD PTR [esi+8]
	mov	edi, DWORD PTR [esi+12]
	mov	ebx, DWORD PTR [esi+4]
	mov	DWORD PTR _plen$[esp+36], edx
	mov	DWORD PTR _pclass$1$[esp+32], eax
	mov	DWORD PTR _pclass$[esp+36], eax
	mov	DWORD PTR _ptag$[esp+36], edi
	mov	DWORD PTR _p$[esp+36], ecx
; Line 1163
	jmp	$LN5@asn1_check
$LN2@asn1_check:
; Line 1164
	push	DWORD PTR _len$[esp+32]
	lea	eax, DWORD PTR _pclass$[esp+40]
	push	eax
	lea	eax, DWORD PTR _ptag$[esp+44]
	push	eax
	lea	eax, DWORD PTR _plen$[esp+48]
	push	eax
	lea	eax, DWORD PTR _p$[esp+52]
	push	eax
	call	_ASN1_get_object
; Line 1167
	mov	edx, DWORD PTR _plen$[esp+56]
	add	esp, 20					; 00000014H
; Line 1169
	mov	edi, DWORD PTR _ptag$[esp+36]
	mov	ebx, eax
	mov	eax, DWORD PTR _pclass$[esp+36]
; Line 1170
	mov	ecx, DWORD PTR _p$[esp+36]
	mov	DWORD PTR _pclass$1$[esp+32], eax
	test	esi, esi
	je	SHORT $LN5@asn1_check
	mov	ebp, ecx
	mov	DWORD PTR [esi+4], ebx
	sub	ebp, DWORD PTR _q$1$[esp+36]
	mov	DWORD PTR [esi+8], edx
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+12], edi
	mov	DWORD PTR [esi+20], ebp
; Line 1171
	mov	BYTE PTR [esi], 1
; Line 1176
	test	bl, -127				; ffffff81H
	jne	SHORT $LN5@asn1_check
	lea	eax, DWORD PTR [edx+ebp]
	cmp	eax, DWORD PTR _len$[esp+32]
	jle	SHORT $LN23@asn1_check
; Line 1177
	push	1177					; 00000499H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	155					; 0000009bH
	push	104					; 00000068H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1178
	mov	BYTE PTR [esi], 0
; Line 1179
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1227
	add	esp, 20					; 00000014H
	ret	0
$LN23@asn1_check:
	mov	eax, DWORD PTR _pclass$1$[esp+32]
$LN5@asn1_check:
; Line 1184
	test	bl, bl
	jns	SHORT $LN7@asn1_check
; Line 1185
	push	1185					; 000004a1H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	102					; 00000066H
	push	104					; 00000068H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1186
	test	esi, esi
	je	SHORT $LN8@asn1_check
	mov	BYTE PTR [esi], 0
$LN8@asn1_check:
	pop	edi
	pop	esi
	pop	ebp
; Line 1187
	xor	eax, eax
	pop	ebx
; Line 1227
	add	esp, 20					; 00000014H
	ret	0
$LN7@asn1_check:
; Line 1189
	mov	ebp, DWORD PTR _exptag$[esp+32]
	test	ebp, ebp
	js	SHORT $LN14@asn1_check
; Line 1190
	cmp	ebp, edi
	jne	SHORT $LN11@asn1_check
	cmp	DWORD PTR _expclass$[esp+32], eax
	jne	SHORT $LN11@asn1_check
; Line 1204
	test	esi, esi
	je	SHORT $LN14@asn1_check
	mov	BYTE PTR [esi], 0
$LN14@asn1_check:
; Line 1207
	test	bl, 1
	je	SHORT $LN15@asn1_check
; Line 1208
	mov	edx, DWORD PTR _q$1$[esp+36]
	sub	edx, ecx
	add	edx, DWORD PTR _len$[esp+32]
$LN15@asn1_check:
; Line 1210
	mov	esi, DWORD PTR _inf$[esp+32]
	test	esi, esi
	je	SHORT $LN16@asn1_check
; Line 1211
	mov	al, bl
	and	al, 1
	mov	BYTE PTR [esi], al
$LN16@asn1_check:
; Line 1213
	mov	eax, DWORD PTR _cst$[esp+32]
	test	eax, eax
	je	SHORT $LN17@asn1_check
; Line 1214
	and	bl, 32					; 00000020H
	mov	BYTE PTR [eax], bl
$LN17@asn1_check:
; Line 1216
	mov	eax, DWORD PTR _olen$[esp+32]
	test	eax, eax
	je	SHORT $LN18@asn1_check
; Line 1217
	mov	DWORD PTR [eax], edx
$LN18@asn1_check:
; Line 1219
	mov	eax, DWORD PTR _oclass$[esp+32]
	test	eax, eax
	je	SHORT $LN19@asn1_check
; Line 1220
	mov	edx, DWORD PTR _pclass$1$[esp+32]
	mov	BYTE PTR [eax], dl
$LN19@asn1_check:
; Line 1222
	mov	eax, DWORD PTR _otag$[esp+32]
	test	eax, eax
	je	SHORT $LN20@asn1_check
; Line 1223
	mov	DWORD PTR [eax], edi
$LN20@asn1_check:
; Line 1225
	mov	eax, DWORD PTR _in$[esp+32]
	pop	edi
	pop	esi
	pop	ebp
	mov	DWORD PTR [eax], ecx
; Line 1226
	mov	eax, 1
	pop	ebx
; Line 1227
	add	esp, 20					; 00000014H
	ret	0
$LN11@asn1_check:
; Line 1194
	cmp	BYTE PTR _opt$[esp+32], 0
	je	SHORT $LN12@asn1_check
; Line 1195
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 1227
	add	esp, 20					; 00000014H
	ret	0
$LN12@asn1_check:
; Line 1196
	test	esi, esi
	je	SHORT $LN13@asn1_check
	mov	BYTE PTR [esi], 0
$LN13@asn1_check:
; Line 1197
	push	1197					; 000004adH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	168					; 000000a8H
	push	104					; 00000068H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1198
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1227
	add	esp, 20					; 00000014H
	ret	0
_asn1_check_tlen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _collect_data
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_p$ = 12						; size = 4
_plen$ = 16						; size = 4
_collect_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 1109
	push	ebx
; Line 1111
	mov	ebx, DWORD PTR _plen$[esp]
	push	ebp
	push	esi
	mov	esi, DWORD PTR _buf$[esp+8]
	push	edi
	mov	edi, DWORD PTR _p$[esp+12]
	test	esi, esi
	je	SHORT $LN2@collect_da
; Line 1112
	mov	ebp, DWORD PTR [esi]
; Line 1113
	lea	eax, DWORD PTR [ebx+ebp]
	push	eax
	push	esi
	call	_BUF_MEM_grow_clean
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@collect_da
; Line 1114
	push	1114					; 0000045aH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	65					; 00000041H
	push	140					; 0000008cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1115
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1121
	ret	0
$LN3@collect_da:
; Line 1117
	mov	eax, DWORD PTR [esi+4]
	push	ebx
	push	DWORD PTR [edi]
	add	eax, ebp
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@collect_da:
; Line 1119
	add	DWORD PTR [edi], ebx
; Line 1120
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1121
	ret	0
_collect_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_collect
_TEXT	SEGMENT
_p$ = -24						; size = 4
_plen$1 = -20						; size = 4
_ptag$2 = -16						; size = 4
_pclass$3 = -12						; size = 4
_ininf$ = -8						; size = 1
_q$1$ = -4						; size = 4
_p$4 = 8						; size = 4
_buf$ = 8						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_inf$ = 20						; size = 1
_tag$ = 24						; size = 4
_aclass$ = 28						; size = 4
_depth$ = 32						; size = 4
_asn1_collect PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 1053
	mov	eax, 28					; 0000001cH
	call	__chkstk
; Line 1057
	mov	edx, DWORD PTR _in$[esp+24]
; Line 1058
	mov	al, BYTE PTR _inf$[esp+24]
	push	ebx
; Line 1063
	mov	ebx, DWORD PTR _buf$[esp+28]
	and	al, 1
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR _p$[esp+32], ecx
	mov	BYTE PTR _inf$[esp+28], al
	test	ebx, ebx
	jne	SHORT $LN44@asn1_colle
	test	al, al
	jne	SHORT $LN44@asn1_colle
; Line 1064
	mov	eax, DWORD PTR _len$[esp+28]
	add	eax, ecx
	mov	DWORD PTR [edx], eax
; Line 1065
	lea	eax, DWORD PTR [ebx+1]
	pop	ebx
; Line 1106
	add	esp, 28					; 0000001cH
	ret	0
$LN44@asn1_colle:
	push	ebp
	push	esi
	push	edi
; Line 1067
	mov	edi, DWORD PTR _len$[esp+40]
	test	edi, edi
	jle	$LN3@asn1_colle
	npad	6
$LL2@asn1_colle:
; Line 1068
	mov	ebp, ecx
	mov	DWORD PTR _q$1$[esp+44], ebp
; Line 1128
	cmp	edi, 2
	jl	SHORT $LN17@asn1_colle
; Line 1131
	cmp	BYTE PTR [ecx], 0
	jne	SHORT $LN17@asn1_colle
	cmp	BYTE PTR [ecx+1], 0
	je	$LN55@asn1_colle
$LN17@asn1_colle:
; Line 1164
	push	edi
	lea	eax, DWORD PTR _pclass$3[esp+48]
	mov	DWORD PTR _p$4[esp+44], ecx
	push	eax
	lea	eax, DWORD PTR _ptag$2[esp+52]
	mov	esi, ecx
	push	eax
	lea	eax, DWORD PTR _plen$1[esp+56]
	push	eax
	lea	eax, DWORD PTR _p$4[esp+56]
	push	eax
	call	_ASN1_get_object
	mov	edx, eax
	add	esp, 20					; 00000014H
; Line 1184
	test	dl, dl
	js	$LN57@asn1_colle
; Line 1189
	mov	eax, DWORD PTR _tag$[esp+40]
	test	eax, eax
	js	SHORT $LN32@asn1_colle
; Line 1190
	cmp	eax, DWORD PTR _ptag$2[esp+44]
	jne	$LN29@asn1_colle
	mov	eax, DWORD PTR _aclass$[esp+40]
	cmp	eax, DWORD PTR _pclass$3[esp+44]
	jne	$LN29@asn1_colle
$LN32@asn1_colle:
; Line 1207
	mov	ecx, DWORD PTR _p$4[esp+40]
	test	dl, 1
	je	SHORT $LN59@asn1_colle
; Line 1208
	sub	esi, ecx
	add	esi, edi
	mov	DWORD PTR _plen$1[esp+44], esi
	jmp	SHORT $LN33@asn1_colle
$LN59@asn1_colle:
	mov	esi, DWORD PTR _plen$1[esp+44]
$LN33@asn1_colle:
; Line 1211
	mov	al, dl
; Line 1225
	mov	DWORD PTR _p$[esp+44], ecx
	and	al, 1
	mov	BYTE PTR _ininf$[esp+44], al
	and	dl, 32					; 00000020H
; Line 1089
	je	SHORT $LN8@asn1_colle
; Line 1090
	mov	eax, DWORD PTR _depth$[esp+40]
	cmp	eax, 5
	jge	$LN47@asn1_colle
; Line 1094
	inc	eax
	push	eax
	push	DWORD PTR _aclass$[esp+44]
	lea	eax, DWORD PTR _p$[esp+52]
	push	DWORD PTR _tag$[esp+48]
	push	DWORD PTR _ininf$[esp+56]
	push	esi
	push	eax
	push	ebx
	call	_asn1_collect
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	SHORT $LN48@asn1_colle
; Line 1096
	mov	ecx, DWORD PTR _p$[esp+44]
	jmp	SHORT $LN12@asn1_colle
$LN8@asn1_colle:
	test	esi, esi
	je	SHORT $LN12@asn1_colle
; Line 1111
	test	ebx, ebx
	je	SHORT $LN41@asn1_colle
; Line 1112
	mov	ebp, DWORD PTR [ebx]
; Line 1113
	lea	eax, DWORD PTR [esi+ebp]
	push	eax
	push	ebx
	call	_BUF_MEM_grow_clean
	add	esp, 8
	test	eax, eax
	je	$LN58@asn1_colle
; Line 1117
	mov	eax, DWORD PTR [ebx+4]
	push	esi
	push	DWORD PTR _p$[esp+48]
	add	eax, ebp
	push	eax
	call	_memcpy
	mov	ecx, DWORD PTR _p$[esp+56]
	add	esp, 12					; 0000000cH
	mov	ebp, DWORD PTR _q$1$[esp+44]
$LN41@asn1_colle:
; Line 1119
	add	ecx, esi
	mov	DWORD PTR _p$[esp+44], ecx
$LN12@asn1_colle:
; Line 1098
	sub	ebp, ecx
	add	edi, ebp
	test	edi, edi
	jg	$LL2@asn1_colle
	mov	al, BYTE PTR _inf$[esp+40]
	mov	edx, DWORD PTR _in$[esp+40]
$LN3@asn1_colle:
; Line 1100
	test	al, al
	je	$LN13@asn1_colle
; Line 1101
	push	1101					; 0000044dH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	137					; 00000089H
	push	106					; 0000006aH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN48@asn1_colle:
; Line 1102
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 1106
	add	esp, 28					; 0000001cH
	ret	0
$LN55@asn1_colle:
; Line 1132
	add	ecx, 2
; Line 1074
	cmp	BYTE PTR _inf$[esp+40], 0
; Line 1132
	mov	DWORD PTR _p$[esp+44], ecx
; Line 1074
	jne	$LN61@asn1_colle
; Line 1075
	push	1075					; 00000433H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	159					; 0000009fH
	push	106					; 0000006aH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1076
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1106
	add	esp, 28					; 0000001cH
	ret	0
$LN29@asn1_colle:
; Line 1197
	push	1197					; 000004adH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	168					; 000000a8H
; Line 1198
	jmp	SHORT $LN65@asn1_colle
$LN47@asn1_colle:
; Line 1091
	push	1091					; 00000443H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	197					; 000000c5H
	push	106					; 0000006aH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1092
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1106
	add	esp, 28					; 0000001cH
	ret	0
$LN58@asn1_colle:
; Line 1114
	push	1114					; 0000045aH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	65					; 00000041H
	push	140					; 0000008cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1097
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1106
	add	esp, 28					; 0000001cH
	ret	0
$LN57@asn1_colle:
; Line 1185
	push	1185					; 000004a1H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	102					; 00000066H
$LN65@asn1_colle:
	push	104					; 00000068H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1084
	push	1084					; 0000043cH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	push	106					; 0000006aH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1085
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1106
	add	esp, 28					; 0000001cH
	ret	0
$LN61@asn1_colle:
	mov	edx, DWORD PTR _in$[esp+40]
$LN13@asn1_colle:
	pop	edi
	pop	esi
	pop	ebp
; Line 1104
	mov	DWORD PTR [edx], ecx
; Line 1105
	mov	eax, 1
	pop	ebx
; Line 1106
	add	esp, 28					; 0000001cH
	ret	0
_asn1_collect ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_find_end
_TEXT	SEGMENT
_p$1 = -16						; size = 4
_plen$2 = -12						; size = 4
_pclass$3 = -8						; size = 4
_ptag$4 = -4						; size = 4
_in$ = 8						; size = 4
_len$ = 12						; size = 4
_inf$ = 16						; size = 1
_asn1_find_end PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 990
	mov	eax, 16					; 00000010H
	call	__chkstk
; Line 995
	cmp	BYTE PTR _inf$[esp+12], 0
	mov	ecx, DWORD PTR _in$[esp+12]
	push	esi
	mov	esi, DWORD PTR [ecx]
	jne	SHORT $LN4@asn1_find_
; Line 996
	mov	eax, DWORD PTR _len$[esp+16]
	add	eax, esi
	mov	DWORD PTR [ecx], eax
; Line 997
	mov	eax, 1
	pop	esi
; Line 1033
	add	esp, 16					; 00000010H
	ret	0
$LN4@asn1_find_:
	push	ebx
	push	ebp
	push	edi
; Line 1006
	mov	edi, DWORD PTR _len$[esp+28]
	mov	ebx, 1
	test	edi, edi
	jle	$LN44@asn1_find_
	npad	2
$LL2@asn1_find_:
; Line 1128
	cmp	edi, 2
	jl	SHORT $LN5@asn1_find_
; Line 1131
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LN5@asn1_find_
	cmp	BYTE PTR [esi+1], 0
	jne	SHORT $LN5@asn1_find_
; Line 1132
	add	esi, 2
; Line 1008
	sub	ebx, 1
; Line 1009
	je	SHORT $LN10@asn1_find_
; Line 1011
	sub	edi, 2
; Line 1012
	jmp	SHORT $LN41@asn1_find_
$LN5@asn1_find_:
; Line 1164
	push	edi
	lea	eax, DWORD PTR _pclass$3[esp+36]
	mov	DWORD PTR _p$1[esp+36], esi
	push	eax
	lea	eax, DWORD PTR _ptag$4[esp+40]
; Line 1014
	mov	ebp, esi
; Line 1164
	push	eax
	lea	eax, DWORD PTR _plen$2[esp+44]
	push	eax
	lea	eax, DWORD PTR _p$1[esp+48]
	push	eax
	call	_ASN1_get_object
	add	esp, 20					; 00000014H
; Line 1184
	test	al, al
	js	SHORT $LN47@asn1_find_
; Line 1207
	mov	ecx, DWORD PTR _p$1[esp+32]
	test	al, 1
	je	SHORT $LN49@asn1_find_
; Line 1208
	sub	esi, ecx
	lea	edx, DWORD PTR [edi+esi]
	mov	DWORD PTR _plen$2[esp+32], edx
	jmp	SHORT $LN30@asn1_find_
$LN49@asn1_find_:
	mov	edx, DWORD PTR _plen$2[esp+32]
$LN30@asn1_find_:
; Line 1225
	mov	esi, ecx
	and	al, 1
; Line 1021
	je	SHORT $LN8@asn1_find_
; Line 1022
	inc	ebx
	jmp	SHORT $LN9@asn1_find_
$LN8@asn1_find_:
; Line 1024
	lea	esi, DWORD PTR [edx+ecx]
$LN9@asn1_find_:
; Line 1025
	sub	ebp, esi
	add	edi, ebp
$LN41@asn1_find_:
; Line 1006
	test	edi, edi
	jg	SHORT $LL2@asn1_find_
; Line 1027
	test	ebx, ebx
	jne	SHORT $LN44@asn1_find_
$LN10@asn1_find_:
; Line 1031
	mov	eax, DWORD PTR _in$[esp+28]
	pop	edi
	pop	ebp
	pop	ebx
	mov	DWORD PTR [eax], esi
; Line 1032
	mov	eax, 1
	pop	esi
; Line 1033
	add	esp, 16					; 00000010H
	ret	0
$LN47@asn1_find_:
; Line 1185
	push	1185					; 000004a1H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	102					; 00000066H
	push	104					; 00000068H
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 1018
	push	1018					; 000003faH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	push	190					; 000000beH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 40					; 00000028H
; Line 1029
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1033
	add	esp, 16					; 00000010H
	ret	0
$LN44@asn1_find_:
; Line 1028
	push	1028					; 00000404H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	137					; 00000089H
	push	190					; 000000beH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1029
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1033
	add	esp, 16					; 00000010H
	ret	0
_asn1_find_end ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_check_eoc
_TEXT	SEGMENT
_in$ = 8						; size = 4
_len$ = 12						; size = 4
_asn1_check_eoc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 1128
	cmp	DWORD PTR _len$[esp-4], 2
	jl	SHORT $LN3@asn1_check
; Line 1130
	mov	ecx, DWORD PTR _in$[esp-4]
	mov	eax, DWORD PTR [ecx]
; Line 1131
	cmp	BYTE PTR [eax], 0
	jne	SHORT $LN3@asn1_check
	cmp	BYTE PTR [eax+1], 0
	jne	SHORT $LN3@asn1_check
; Line 1132
	add	eax, 2
	mov	DWORD PTR [ecx], eax
; Line 1133
	mov	eax, 1
; Line 1136
	ret	0
$LN3@asn1_check:
; Line 1135
	xor	eax, eax
; Line 1136
	ret	0
_asn1_check_eoc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_ex_c2i
_TEXT	SEGMENT
_opval$1$ = -4						; size = 4
_pval$ = 8						; size = 4
_cont$ = 12						; size = 4
_len$ = 16						; size = 4
_utype$ = 20						; size = 4
_free_cont$ = 24					; size = 4
_it$ = 28						; size = 4
_asn1_ex_c2i PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 847
	mov	eax, 4
	call	__chkstk
; Line 854
	mov	eax, DWORD PTR _it$[esp]
	push	ebx
	push	esi
	xor	esi, esi
	mov	DWORD PTR _opval$1$[esp+12], 0
	mov	ecx, DWORD PTR [eax+16]
	xor	ebx, ebx
; Line 856
	test	ecx, ecx
	je	SHORT $LN4@asn1_ex_c2
	mov	ecx, DWORD PTR [ecx+20]
	test	ecx, ecx
	je	SHORT $LN4@asn1_ex_c2
; Line 857
	push	eax
	push	DWORD PTR _free_cont$[esp+12]
	push	DWORD PTR _utype$[esp+16]
	push	DWORD PTR _len$[esp+20]
	push	DWORD PTR _cont$[esp+24]
	push	DWORD PTR _pval$[esp+28]
	call	ecx
	add	esp, 24					; 00000018H
	pop	esi
	pop	ebx
; Line 980
	pop	ecx
	ret	0
$LN4@asn1_ex_c2:
; Line 859
	cmp	DWORD PTR [eax+4], -4			; fffffffcH
	push	ebp
	mov	ebp, DWORD PTR _utype$[esp+12]
	push	edi
; Line 860
	mov	edi, DWORD PTR _pval$[esp+16]
	jne	SHORT $LN5@asn1_ex_c2
	mov	esi, DWORD PTR [edi]
	test	esi, esi
	jne	SHORT $LN6@asn1_ex_c2
; Line 861
	call	_ASN1_TYPE_new
	mov	esi, eax
; Line 862
	test	esi, esi
	je	$LN35@asn1_ex_c2
; Line 864
	mov	DWORD PTR [edi], esi
$LN6@asn1_ex_c2:
; Line 868
	cmp	ebp, DWORD PTR [esi]
	je	SHORT $LN9@asn1_ex_c2
; Line 869
	push	0
	push	ebp
	push	esi
	call	_ASN1_TYPE_set
	add	esp, 12					; 0000000cH
$LN9@asn1_ex_c2:
; Line 870
	mov	DWORD PTR _opval$1$[esp+20], edi
; Line 871
	lea	edi, DWORD PTR [esi+4]
$LN5@asn1_ex_c2:
; Line 873
	lea	eax, DWORD PTR [ebp-1]
	cmp	eax, 9
	ja	$LN21@asn1_ex_c2
	jmp	DWORD PTR $LN40@asn1_ex_c2[eax*4]
$LN10@asn1_ex_c2:
; Line 875
	push	DWORD PTR _len$[esp+16]
	lea	eax, DWORD PTR _cont$[esp+20]
	push	eax
	push	edi
	call	_c2i_ASN1_OBJECT
$LN38@asn1_ex_c2:
; Line 899
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN35@asn1_ex_c2
$LN30@asn1_ex_c2:
; Line 969
	test	esi, esi
	je	SHORT $LN31@asn1_ex_c2
	cmp	ebp, 5
	jne	SHORT $LN31@asn1_ex_c2
; Line 970
	mov	DWORD PTR [esi+4], 0
$LN31@asn1_ex_c2:
; Line 972
	mov	ebx, 1
$LN33@asn1_ex_c2:
	pop	edi
	pop	ebp
	pop	esi
; Line 979
	mov	eax, ebx
	pop	ebx
; Line 980
	pop	ecx
	ret	0
$LN12@asn1_ex_c2:
; Line 880
	cmp	DWORD PTR _len$[esp+16], ebx
	je	SHORT $LN13@asn1_ex_c2
; Line 881
	push	881					; 00000371H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	144					; 00000090H
	push	204					; 000000ccH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 882
	jmp	$LN35@asn1_ex_c2
$LN13@asn1_ex_c2:
; Line 884
	mov	DWORD PTR [edi], 1
; Line 885
	jmp	SHORT $LN30@asn1_ex_c2
$LN14@asn1_ex_c2:
; Line 888
	cmp	DWORD PTR _len$[esp+16], 1
	je	SHORT $LN15@asn1_ex_c2
; Line 889
	push	889					; 00000379H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	106					; 0000006aH
	push	204					; 000000ccH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 890
	jmp	$LN35@asn1_ex_c2
$LN15@asn1_ex_c2:
; Line 894
	mov	eax, DWORD PTR _cont$[esp+16]
	movzx	eax, BYTE PTR [eax]
	mov	DWORD PTR [edi], eax
; Line 896
	jmp	SHORT $LN30@asn1_ex_c2
$LN17@asn1_ex_c2:
; Line 899
	push	DWORD PTR _len$[esp+16]
	lea	eax, DWORD PTR _cont$[esp+20]
	push	eax
	push	edi
	call	_c2i_ASN1_BIT_STRING
; Line 901
	jmp	$LN38@asn1_ex_c2
$LN19@asn1_ex_c2:
; Line 906
	push	DWORD PTR _len$[esp+16]
	lea	eax, DWORD PTR _cont$[esp+20]
	push	eax
	push	edi
	call	_c2i_ASN1_INTEGER
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN35@asn1_ex_c2
; Line 909
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ecx+4]
	and	eax, 256				; 00000100H
	or	eax, ebp
	mov	DWORD PTR [ecx+4], eax
; Line 910
	jmp	$LN30@asn1_ex_c2
$LN21@asn1_ex_c2:
; Line 930
	cmp	ebp, 30					; 0000001eH
	jne	SHORT $LN22@asn1_ex_c2
	test	BYTE PTR _len$[esp+16], 1
	je	SHORT $LN23@asn1_ex_c2
; Line 931
	push	931					; 000003a3H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	214					; 000000d6H
	push	204					; 000000ccH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 932
	jmp	$LN35@asn1_ex_c2
$LN22@asn1_ex_c2:
; Line 934
	cmp	ebp, 28					; 0000001cH
	jne	SHORT $LN23@asn1_ex_c2
	test	BYTE PTR _len$[esp+16], 3
	je	SHORT $LN23@asn1_ex_c2
; Line 935
	push	936					; 000003a8H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	215					; 000000d7H
	push	204					; 000000ccH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 937
	jmp	$LN35@asn1_ex_c2
$LN23@asn1_ex_c2:
; Line 940
	mov	ebx, DWORD PTR [edi]
	test	ebx, ebx
	jne	SHORT $LN24@asn1_ex_c2
; Line 941
	push	ebp
	call	_ASN1_STRING_type_new
	mov	ebx, eax
	add	esp, 4
; Line 942
	test	ebx, ebx
	jne	SHORT $LN26@asn1_ex_c2
; Line 943
	push	943					; 000003afH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	65					; 00000041H
	push	204					; 000000ccH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 944
	jmp	SHORT $LN37@asn1_ex_c2
$LN26@asn1_ex_c2:
; Line 946
	mov	DWORD PTR [edi], ebx
; Line 947
	jmp	SHORT $LN25@asn1_ex_c2
$LN24@asn1_ex_c2:
; Line 949
	mov	DWORD PTR [ebx+4], ebp
$LN25@asn1_ex_c2:
; Line 952
	mov	eax, DWORD PTR _free_cont$[esp+16]
	cmp	BYTE PTR [eax], 0
	je	SHORT $LN27@asn1_ex_c2
; Line 953
	mov	eax, DWORD PTR [ebx+8]
	test	eax, eax
	je	SHORT $LN29@asn1_ex_c2
; Line 954
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN29@asn1_ex_c2:
; Line 955
	mov	eax, DWORD PTR _cont$[esp+16]
	mov	DWORD PTR [ebx+8], eax
; Line 956
	mov	eax, DWORD PTR _len$[esp+16]
	mov	DWORD PTR [ebx], eax
; Line 957
	mov	eax, DWORD PTR _free_cont$[esp+16]
	mov	BYTE PTR [eax], 0
; Line 958
	jmp	$LN30@asn1_ex_c2
$LN27@asn1_ex_c2:
; Line 959
	push	DWORD PTR _len$[esp+16]
	push	DWORD PTR _cont$[esp+20]
	push	ebx
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN30@asn1_ex_c2
; Line 960
	push	960					; 000003c0H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	65					; 00000041H
	push	204					; 000000ccH
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 961
	push	ebx
	call	_ASN1_STRING_free
	add	esp, 24					; 00000018H
; Line 962
	mov	DWORD PTR [edi], 0
$LN37@asn1_ex_c2:
	xor	ebx, ebx
$LN35@asn1_ex_c2:
; Line 975
	push	esi
	call	_ASN1_TYPE_free
; Line 976
	mov	eax, DWORD PTR _opval$1$[esp+24]
	add	esp, 4
	test	eax, eax
	je	$LN33@asn1_ex_c2
; Line 977
	pop	edi
	pop	ebp
	mov	DWORD PTR [eax], 0
; Line 979
	mov	eax, ebx
	pop	esi
	pop	ebx
; Line 980
	pop	ecx
	ret	0
	npad	1
$LN40@asn1_ex_c2:
	DD	$LN14@asn1_ex_c2
	DD	$LN19@asn1_ex_c2
	DD	$LN17@asn1_ex_c2
	DD	$LN21@asn1_ex_c2
	DD	$LN12@asn1_ex_c2
	DD	$LN10@asn1_ex_c2
	DD	$LN21@asn1_ex_c2
	DD	$LN21@asn1_ex_c2
	DD	$LN21@asn1_ex_c2
	DD	$LN19@asn1_ex_c2
_asn1_ex_c2i ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_ex_d2i
_TEXT	SEGMENT
_p$ = -32						; size = 4
_len$5$ = -28						; size = 4
_asn1_cb$1$ = -24					; size = 4
_tt$4$ = -20						; size = 4
_wp$1$ = -20						; size = 4
_isopt$ = -16						; size = 1
_pseqval$1$ = -12					; size = 4
_q$1$ = -8						; size = 4
_combine$1$ = -4					; size = 4
_seqtt$1$ = 8						; size = 4
_i$3$ = 8						; size = 4
_cst$ = 8						; size = 1
_pval$ = 8						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_imphack$1$ = 20					; size = 1
_seq_eoc$ = 20						; size = 1
_oclass$ = 20						; size = 1
_it$ = 20						; size = 4
_tag$ = 24						; size = 4
_seq_nolen$1$ = 28					; size = 1
_otag$ = 28						; size = 4
_aclass$ = 28						; size = 4
_opt$ = 32						; size = 1
_ctx$ = 36						; size = 4
_ASN1_item_ex_d2i PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 168
	mov	eax, 32					; 00000020H
	call	__chkstk
; Line 183
	mov	ecx, DWORD PTR _aclass$[esp+28]
	xor	eax, eax
	push	ebx
; Line 185
	mov	ebx, DWORD PTR _pval$[esp+32]
	mov	edx, ecx
	push	esi
	push	edi
	mov	edi, DWORD PTR _it$[esp+40]
	and	edx, 1024				; 00000400H
	and	ecx, -1025				; fffffbffH
	mov	DWORD PTR _wp$1$[esp+44], eax
	mov	BYTE PTR _imphack$1$[esp+40], al
	mov	DWORD PTR _combine$1$[esp+44], edx
	mov	esi, DWORD PTR [edi+16]
	test	ebx, ebx
	jne	SHORT $LN16@ASN1_item_
	pop	edi
	pop	esi
	pop	ebx
; Line 513
	add	esp, 32					; 00000020H
	ret	0
$LN16@ASN1_item_:
	push	ebp
; Line 187
	test	esi, esi
	je	SHORT $LN17@ASN1_item_
	mov	ebp, DWORD PTR [esi+16]
	mov	DWORD PTR _asn1_cb$1$[esp+48], ebp
	test	ebp, ebp
	jne	SHORT $LN18@ASN1_item_
$LN17@ASN1_item_:
; Line 190
	xor	ebp, ebp
	mov	DWORD PTR _asn1_cb$1$[esp+48], ebp
$LN18@ASN1_item_:
; Line 192
	movsx	edx, BYTE PTR [edi]
	cmp	edx, 6
	ja	$LN78@ASN1_item_
	jmp	DWORD PTR $LN119@ASN1_item_[edx*4]
$LN19@ASN1_item_:
; Line 194
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN20@ASN1_item_
; Line 201
	cmp	DWORD PTR _tag$[esp+44], -1
	jne	SHORT $LN22@ASN1_item_
	cmp	BYTE PTR _opt$[esp+44], 0
	jne	SHORT $LN22@ASN1_item_
; Line 206
	push	DWORD PTR _ctx$[esp+44]
	push	0
	push	eax
	push	DWORD PTR _len$[esp+56]
	push	DWORD PTR _in$[esp+60]
	push	ebx
	call	_asn1_template_ex_d2i
	add	esp, 24					; 00000018H
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 513
	add	esp, 32					; 00000020H
	ret	0
$LN22@ASN1_item_:
; Line 202
	push	203					; 000000cbH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	170					; 000000aaH
; Line 204
	jmp	$LN117@ASN1_item_
$LN20@ASN1_item_:
; Line 209
	push	DWORD PTR _ctx$[esp+44]
	push	DWORD PTR _opt$[esp+48]
	push	ecx
	push	DWORD PTR _tag$[esp+56]
	push	edi
	push	DWORD PTR _len$[esp+64]
	push	DWORD PTR _in$[esp+68]
	push	ebx
	call	_asn1_d2i_ex_primitive
	add	esp, 32					; 00000020H
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 513
	add	esp, 32					; 00000020H
	ret	0
$LN23@ASN1_item_:
; Line 216
	push	DWORD PTR _ctx$[esp+44]
	mov	ebp, DWORD PTR _in$[esp+48]
	push	1
	push	0
	push	-1
	push	DWORD PTR _len$[esp+60]
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _p$[esp+68], eax
	lea	eax, DWORD PTR _p$[esp+68]
	push	eax
	push	0
	push	0
	lea	eax, DWORD PTR _oclass$[esp+76]
	push	eax
	lea	eax, DWORD PTR _otag$[esp+80]
	push	eax
	push	0
	call	_asn1_check_tlen
	add	esp, 44					; 0000002cH
; Line 218
	test	eax, eax
	jne	SHORT $LN24@ASN1_item_
; Line 219
	push	219					; 000000dbH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
; Line 220
	jmp	$LN117@ASN1_item_
$LN24@ASN1_item_:
; Line 224
	cmp	BYTE PTR _oclass$[esp+44], 0
	je	SHORT $LN25@ASN1_item_
; Line 226
	cmp	BYTE PTR _opt$[esp+44], 0
	jne	$LN116@ASN1_item_
; Line 228
	push	228					; 000000e4H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	139					; 0000008bH
; Line 229
	jmp	$LN117@ASN1_item_
$LN25@ASN1_item_:
; Line 232
	mov	esi, DWORD PTR _otag$[esp+44]
	push	esi
	call	_ASN1_tag2bit
	add	esp, 4
	test	eax, DWORD PTR [edi+4]
	jne	SHORT $LN27@ASN1_item_
; Line 234
	cmp	BYTE PTR _opt$[esp+44], 0
	jne	$LN116@ASN1_item_
; Line 236
	push	236					; 000000ecH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	140					; 0000008cH
; Line 237
	jmp	$LN117@ASN1_item_
$LN27@ASN1_item_:
; Line 239
	push	DWORD PTR _ctx$[esp+44]
	push	0
	push	0
	push	esi
	push	edi
	push	DWORD PTR _len$[esp+64]
	push	ebp
	push	ebx
	call	_asn1_d2i_ex_primitive
	add	esp, 32					; 00000020H
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 513
	add	esp, 32					; 00000020H
	ret	0
$LN29@ASN1_item_:
; Line 244
	push	DWORD PTR _ctx$[esp+44]
	mov	eax, DWORD PTR [esi+16]
	push	DWORD PTR _opt$[esp+48]
	push	ecx
	push	DWORD PTR _tag$[esp+56]
	push	edi
	push	DWORD PTR _len$[esp+64]
	push	DWORD PTR _in$[esp+68]
	push	ebx
	call	eax
	add	esp, 32					; 00000020H
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 513
	add	esp, 32					; 00000020H
	ret	0
$LN30@ASN1_item_:
; Line 251
	mov	ebp, DWORD PTR _tag$[esp+44]
	cmp	BYTE PTR _opt$[esp+44], al
	je	SHORT $LN35@ASN1_item_
; Line 253
	mov	eax, DWORD PTR _in$[esp+44]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _p$[esp+48], eax
; Line 254
	cmp	ebp, -1
	jne	SHORT $LN32@ASN1_item_
; Line 255
	mov	eax, DWORD PTR [edi+4]
	jmp	SHORT $LN33@ASN1_item_
$LN32@ASN1_item_:
; Line 257
	mov	eax, ebp
$LN33@ASN1_item_:
; Line 262
	push	DWORD PTR _ctx$[esp+44]
	push	1
	push	ecx
	push	eax
	push	DWORD PTR _len$[esp+60]
	lea	eax, DWORD PTR _p$[esp+68]
	push	eax
	push	0
	push	0
	push	0
	push	0
	push	0
	call	_asn1_check_tlen
	add	esp, 44					; 0000002cH
; Line 264
	test	eax, eax
	jne	SHORT $LN34@ASN1_item_
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	jmp	$LN117@ASN1_item_
$LN34@ASN1_item_:
; Line 268
	cmp	eax, -1
	je	$LN116@ASN1_item_
; Line 269
	mov	eax, DWORD PTR _p$[esp+48]
$LN35@ASN1_item_:
; Line 284
	cmp	ebp, -1
	je	SHORT $LN36@ASN1_item_
; Line 285
	mov	ecx, DWORD PTR _in$[esp+44]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR _wp$1$[esp+48], ecx
; Line 286
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _imphack$1$[esp+44], dl
; Line 287
	test	eax, eax
	jne	SHORT $LN37@ASN1_item_
; Line 288
	push	288					; 00000120H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	jmp	$LN117@ASN1_item_
$LN37@ASN1_item_:
; Line 291
	mov	al, BYTE PTR [eax]
	and	al, 32					; 00000020H
	or	al, BYTE PTR [edi+4]
	mov	BYTE PTR [ecx], al
$LN36@ASN1_item_:
; Line 295
	push	DWORD PTR _len$[esp+44]
	mov	eax, DWORD PTR [esi+8]
	push	DWORD PTR _in$[esp+48]
	push	ebx
	call	eax
	add	esp, 12					; 0000000cH
; Line 297
	cmp	ebp, -1
	je	SHORT $LN38@ASN1_item_
; Line 298
	mov	ecx, DWORD PTR _wp$1$[esp+48]
	mov	dl, BYTE PTR _imphack$1$[esp+44]
	mov	BYTE PTR [ecx], dl
$LN38@ASN1_item_:
; Line 300
	test	eax, eax
	jne	$LN115@ASN1_item_
; Line 303
	push	303					; 0000012fH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	jmp	$LN117@ASN1_item_
$LN40@ASN1_item_:
; Line 307
	test	ebp, ebp
	je	SHORT $LN41@ASN1_item_
	push	0
	push	edi
	push	ebx
	push	4
	call	ebp
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$auxerr$120
$LN41@ASN1_item_:
; Line 309
	cmp	DWORD PTR [ebx], 0
; Line 311
	push	edi
	push	ebx
	je	$LN42@ASN1_item_
	call	_asn1_get_choice_selector
	add	esp, 8
; Line 312
	test	eax, eax
	js	SHORT $LN45@ASN1_item_
	cmp	eax, DWORD PTR [edi+12]
	jge	SHORT $LN45@ASN1_item_
; Line 313
	lea	ecx, DWORD PTR [eax+eax*4]
	mov	eax, DWORD PTR [edi+8]
	lea	esi, DWORD PTR [eax+ecx*4]
; Line 314
	push	esi
	push	ebx
	call	_asn1_get_field_ptr
; Line 315
	push	esi
	push	eax
	call	_ASN1_template_free
; Line 316
	push	edi
	push	-1
	push	ebx
	call	_asn1_set_choice_selector
	add	esp, 28					; 0000001cH
$LN45@ASN1_item_:
; Line 323
	mov	eax, DWORD PTR _in$[esp+44]
; Line 324
	xor	ebp, ebp
	mov	esi, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _p$[esp+48], eax
	cmp	ebp, DWORD PTR [edi+12]
	jge	SHORT $LN111@ASN1_item_
$LL6@ASN1_item_:
; Line 325
	push	esi
	push	ebx
	call	_asn1_get_field_ptr
; Line 329
	push	DWORD PTR _ctx$[esp+52]
	lea	ecx, DWORD PTR _p$[esp+60]
	push	1
	push	esi
	push	DWORD PTR _len$[esp+64]
	push	ecx
	push	eax
	call	_asn1_template_ex_d2i
	add	esp, 32					; 00000020H
; Line 331
	cmp	eax, -1
	jne	SHORT $LN46@ASN1_item_
; Line 324
	inc	ebp
	add	esi, 20					; 00000014H
	cmp	ebp, DWORD PTR [edi+12]
	jl	SHORT $LL6@ASN1_item_
$LN105@ASN1_item_:
; Line 343
	cmp	ebp, DWORD PTR [edi+12]
$LN111@ASN1_item_:
	jne	SHORT $LN48@ASN1_item_
; Line 345
	cmp	BYTE PTR _opt$[esp+44], 0
	je	SHORT $LN49@ASN1_item_
; Line 347
	push	edi
	push	ebx
	call	_ASN1_item_ex_free
	add	esp, 8
$LN116@ASN1_item_:
; Line 348
	pop	ebp
	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
; Line 513
	add	esp, 32					; 00000020H
	ret	0
$LN42@ASN1_item_:
; Line 318
	call	_ASN1_item_ex_new
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN45@ASN1_item_
; Line 319
	push	319					; 0000013fH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	jmp	$LN117@ASN1_item_
$LN46@ASN1_item_:
; Line 334
	test	eax, eax
	jg	SHORT $LN105@ASN1_item_
; Line 338
	push	338					; 00000152H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	push	120					; 00000078H
	push	13					; 0000000dH
	mov	ebp, esi
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 339
	jmp	$err$121
$LN49@ASN1_item_:
; Line 350
	push	350					; 0000015eH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	143					; 0000008fH
; Line 351
	jmp	$LN117@ASN1_item_
$LN48@ASN1_item_:
; Line 354
	push	edi
	push	ebp
	push	ebx
	call	_asn1_set_choice_selector
; Line 355
	mov	eax, DWORD PTR _asn1_cb$1$[esp+60]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN50@ASN1_item_
	push	0
	push	edi
	push	ebx
	push	5
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$auxerr$120
$LN50@ASN1_item_:
; Line 357
	mov	ecx, DWORD PTR _in$[esp+44]
	mov	eax, DWORD PTR _p$[esp+48]
	pop	ebp
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
; Line 358
	mov	eax, 1
	pop	ebx
; Line 513
	add	esp, 32					; 00000020H
	ret	0
$LN51@ASN1_item_:
; Line 362
	mov	eax, DWORD PTR _in$[esp+44]
; Line 363
	mov	ebp, DWORD PTR _len$[esp+44]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _p$[esp+48], eax
; Line 366
	mov	eax, DWORD PTR _tag$[esp+44]
	cmp	eax, -1
	jne	SHORT $LN52@ASN1_item_
; Line 367
	mov	eax, 16					; 00000010H
; Line 368
	xor	ecx, ecx
$LN52@ASN1_item_:
; Line 371
	push	DWORD PTR _ctx$[esp+44]
	push	DWORD PTR _opt$[esp+48]
	push	ecx
	push	eax
	push	ebp
	lea	eax, DWORD PTR _p$[esp+68]
	push	eax
	lea	eax, DWORD PTR _cst$[esp+68]
	push	eax
	lea	eax, DWORD PTR _seq_eoc$[esp+72]
	push	eax
	push	0
	lea	eax, DWORD PTR _len$[esp+80]
	push	0
	push	eax
	call	_asn1_check_tlen
	add	esp, 44					; 0000002cH
; Line 373
	test	eax, eax
	jne	SHORT $LN53@ASN1_item_
; Line 374
	push	374					; 00000176H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	jmp	$LN117@ASN1_item_
$LN53@ASN1_item_:
; Line 376
	cmp	eax, -1
	je	$LN116@ASN1_item_
; Line 378
	test	esi, esi
	je	SHORT $LN56@ASN1_item_
	test	BYTE PTR [esi+4], 4
	je	SHORT $LN56@ASN1_item_
; Line 379
	mov	eax, DWORD PTR _in$[esp+44]
; Line 380
	mov	BYTE PTR _seq_nolen$1$[esp+44], 1
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR _p$[esp+48]
	add	eax, ebp
; Line 381
	jmp	SHORT $LN112@ASN1_item_
$LN56@ASN1_item_:
; Line 384
	mov	al, BYTE PTR _seq_eoc$[esp+44]
	mov	BYTE PTR _seq_nolen$1$[esp+44], al
	mov	eax, DWORD PTR _len$[esp+44]
$LN112@ASN1_item_:
; Line 385
	cmp	BYTE PTR _cst$[esp+44], 0
	mov	DWORD PTR _len$5$[esp+48], eax
	jne	SHORT $LN58@ASN1_item_
; Line 386
	push	386					; 00000182H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	149					; 00000095H
; Line 387
	jmp	$LN117@ASN1_item_
$LN58@ASN1_item_:
; Line 390
	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN59@ASN1_item_
	push	edi
	push	ebx
	call	_ASN1_item_ex_new
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN59@ASN1_item_
; Line 391
	push	391					; 00000187H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	58					; 0000003aH
	jmp	$LN117@ASN1_item_
$LN59@ASN1_item_:
; Line 395
	mov	eax, DWORD PTR _asn1_cb$1$[esp+48]
	test	eax, eax
	je	SHORT $LN60@ASN1_item_
	push	0
	push	edi
	push	ebx
	push	4
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$auxerr$120
$LN60@ASN1_item_:
; Line 399
	mov	ebp, DWORD PTR [edi+8]
	xor	eax, eax
	mov	DWORD PTR _i$3$[esp+44], eax
	cmp	DWORD PTR [edi+12], eax
	jle	SHORT $LN8@ASN1_item_
	npad	4
$LL9@ASN1_item_:
; Line 400
	test	DWORD PTR [ebp], 768			; 00000300H
	je	SHORT $LN7@ASN1_item_
; Line 403
	push	1
	push	ebp
	push	ebx
	call	_asn1_do_adb
	mov	esi, eax
; Line 404
	push	esi
	push	ebx
	call	_asn1_get_field_ptr
; Line 405
	push	esi
	push	eax
	call	_ASN1_template_free
	mov	eax, DWORD PTR _i$3$[esp+72]
	add	esp, 28					; 0000001cH
$LN7@ASN1_item_:
; Line 399
	inc	eax
	add	ebp, 20					; 00000014H
	mov	DWORD PTR _i$3$[esp+44], eax
	cmp	eax, DWORD PTR [edi+12]
	jl	SHORT $LL9@ASN1_item_
$LN8@ASN1_item_:
; Line 410
	mov	esi, DWORD PTR [edi+8]
	xor	ebp, ebp
	mov	DWORD PTR _tt$4$[esp+48], esi
	cmp	DWORD PTR [edi+12], ebp
	jle	$LN107@ASN1_item_
$LL12@ASN1_item_:
; Line 413
	push	1
	push	esi
	push	ebx
	call	_asn1_do_adb
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _seqtt$1$[esp+44], eax
; Line 414
	test	eax, eax
	je	$LN109@ASN1_item_
; Line 416
	push	eax
	push	ebx
	call	_asn1_get_field_ptr
; Line 418
	mov	edx, DWORD PTR _len$5$[esp+56]
	add	esp, 8
	mov	DWORD PTR _pseqval$1$[esp+48], eax
	test	edx, edx
	je	$LN11@ASN1_item_
; Line 420
	mov	eax, DWORD PTR _p$[esp+48]
	mov	DWORD PTR _q$1$[esp+48], eax
; Line 421
	lea	eax, DWORD PTR _p$[esp+48]
	push	edx
	push	eax
	call	_asn1_check_eoc
	add	esp, 8
	test	eax, eax
	jne	$LN89@ASN1_item_
; Line 437
	mov	eax, DWORD PTR [edi+12]
; Line 438
	mov	ecx, DWORD PTR _seqtt$1$[esp+44]
	dec	eax
	cmp	ebp, eax
	jne	SHORT $LN66@ASN1_item_
	mov	BYTE PTR _isopt$[esp+48], 0
	jmp	SHORT $LN67@ASN1_item_
$LN66@ASN1_item_:
; Line 440
	mov	al, BYTE PTR [ecx]
	and	al, 1
	mov	BYTE PTR _isopt$[esp+48], al
$LN67@ASN1_item_:
; Line 445
	push	DWORD PTR _ctx$[esp+44]
	lea	eax, DWORD PTR _p$[esp+52]
	push	DWORD PTR _isopt$[esp+52]
	push	ecx
	push	edx
	push	eax
	push	DWORD PTR _pseqval$1$[esp+68]
	call	_asn1_template_ex_d2i
	add	esp, 24					; 00000018H
; Line 446
	test	eax, eax
	je	SHORT $LN90@ASN1_item_
; Line 449
	cmp	eax, -1
	jne	SHORT $LN70@ASN1_item_
; Line 453
	push	DWORD PTR _seqtt$1$[esp+44]
	push	DWORD PTR _pseqval$1$[esp+52]
	call	_ASN1_template_free
; Line 454
	mov	edx, DWORD PTR _len$5$[esp+56]
	add	esp, 8
	jmp	SHORT $LN10@ASN1_item_
$LN70@ASN1_item_:
; Line 457
	mov	eax, DWORD PTR _q$1$[esp+48]
	mov	edx, DWORD PTR _len$5$[esp+48]
	sub	eax, DWORD PTR _p$[esp+48]
	add	edx, eax
	mov	DWORD PTR _len$5$[esp+48], edx
$LN10@ASN1_item_:
; Line 410
	inc	ebp
	add	esi, 20					; 00000014H
	mov	DWORD PTR _tt$4$[esp+48], esi
	cmp	ebp, DWORD PTR [edi+12]
	jl	$LL12@ASN1_item_
; Line 479
	jmp	SHORT $LN11@ASN1_item_
$LN90@ASN1_item_:
; Line 447
	mov	ebp, DWORD PTR _seqtt$1$[esp+44]
; Line 448
	jmp	$err$121
$LN89@ASN1_item_:
; Line 422
	cmp	BYTE PTR _seq_eoc$[esp+44], 0
	jne	SHORT $LN65@ASN1_item_
; Line 423
	push	423					; 000001a7H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	159					; 0000009fH
; Line 424
	jmp	$LN117@ASN1_item_
$LN65@ASN1_item_:
; Line 426
	mov	eax, DWORD PTR _q$1$[esp+48]
	sub	eax, DWORD PTR _p$[esp+48]
	add	edx, eax
$LN106@ASN1_item_:
; Line 466
	cmp	BYTE PTR _seq_nolen$1$[esp+44], 0
	jne	SHORT $LN72@ASN1_item_
	test	edx, edx
	je	SHORT $LN72@ASN1_item_
; Line 467
	push	467					; 000001d3H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	148					; 00000094H
; Line 468
	jmp	$LN117@ASN1_item_
$LN107@ASN1_item_:
	mov	edx, DWORD PTR _len$5$[esp+48]
$LN11@ASN1_item_:
; Line 461
	cmp	BYTE PTR _seq_eoc$[esp+44], 0
	je	SHORT $LN106@ASN1_item_
	lea	eax, DWORD PTR _p$[esp+48]
	push	edx
	push	eax
	call	_asn1_check_eoc
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN106@ASN1_item_
; Line 462
	push	462					; 000001ceH
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	137					; 00000089H
; Line 463
	jmp	$LN117@ASN1_item_
$LN72@ASN1_item_:
; Line 476
	cmp	ebp, DWORD PTR [edi+12]
	jge	SHORT $LN14@ASN1_item_
$LL15@ASN1_item_:
; Line 478
	push	1
	push	esi
	push	ebx
	call	_asn1_do_adb
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 479
	test	esi, esi
	je	$LN109@ASN1_item_
; Line 481
	test	BYTE PTR [esi], 1
	je	SHORT $LN74@ASN1_item_
; Line 483
	push	esi
	push	ebx
	call	_asn1_get_field_ptr
; Line 484
	push	esi
	push	eax
	call	_ASN1_template_free
	mov	esi, DWORD PTR _tt$4$[esp+64]
	inc	ebp
	add	esi, 20					; 00000014H
	add	esp, 16					; 00000010H
	mov	DWORD PTR _tt$4$[esp+48], esi
	cmp	ebp, DWORD PTR [edi+12]
	jl	SHORT $LL15@ASN1_item_
$LN14@ASN1_item_:
; Line 492
	mov	esi, DWORD PTR _in$[esp+44]
	mov	ebp, DWORD PTR _p$[esp+48]
	mov	eax, ebp
	push	edi
	mov	ecx, DWORD PTR [esi]
	sub	eax, ecx
	push	eax
	push	ecx
	push	ebx
	call	_asn1_enc_save
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $auxerr$120
; Line 494
	mov	eax, DWORD PTR _asn1_cb$1$[esp+48]
	test	eax, eax
	je	SHORT $LN77@ASN1_item_
	push	0
	push	edi
	push	ebx
	push	5
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $auxerr$120
$LN77@ASN1_item_:
; Line 496
	mov	DWORD PTR [esi], ebp
$LN115@ASN1_item_:
	pop	ebp
	pop	edi
	pop	esi
; Line 497
	mov	eax, 1
	pop	ebx
; Line 513
	add	esp, 32					; 00000020H
	ret	0
$LN74@ASN1_item_:
; Line 487
	push	487					; 000001e7H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	121					; 00000079H
	push	120					; 00000078H
	push	13					; 0000000dH
	mov	ebp, esi
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 488
	jmp	SHORT $err$121
$auxerr$120:
; Line 503
	push	503					; 000001f7H
	push	OFFSET ??_C@_0BJ@KPAPPHAC@?4?2crypto?2asn1?2tasn_dec?4c?$AA@
	push	100					; 00000064H
$LN117@ASN1_item_:
	push	120					; 00000078H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN109@ASN1_item_:
	xor	ebp, ebp
$err$121:
; Line 505
	cmp	DWORD PTR _combine$1$[esp+48], 0
	jne	SHORT $LN79@ASN1_item_
; Line 506
	push	edi
	push	ebx
	call	_ASN1_item_ex_free
	add	esp, 8
$LN79@ASN1_item_:
; Line 508
	push	DWORD PTR [edi+24]
	test	ebp, ebp
	je	SHORT $LN80@ASN1_item_
	push	OFFSET ??_C@_07NHKPEHKF@?0?5Type?$DN?$AA@
	push	DWORD PTR [ebp+12]
	push	OFFSET ??_C@_06GPKHKFJE@Field?$DN?$AA@
	push	4
	call	_ERR_add_error_data
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 513
	add	esp, 32					; 00000020H
	ret	0
$LN80@ASN1_item_:
; Line 511
	push	OFFSET ??_C@_05GCCLHHOK@Type?$DN?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 12					; 0000000cH
$LN78@ASN1_item_:
; Line 500
	pop	ebp
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 513
	add	esp, 32					; 00000020H
	ret	0
	npad	2
$LN119@ASN1_item_:
	DD	$LN19@ASN1_item_
	DD	$LN51@ASN1_item_
	DD	$LN40@ASN1_item_
	DD	$LN30@ASN1_item_
	DD	$LN29@ASN1_item_
	DD	$LN23@ASN1_item_
	DD	$LN51@ASN1_item_
_ASN1_item_ex_d2i ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_template_d2i
_TEXT	SEGMENT
_c$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_pval$ = 8						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_tt$ = 20						; size = 4
_ASN1_template_d2i PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 154
	mov	eax, 28					; 0000001cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+28], eax
	mov	eax, DWORD PTR _tt$[esp+24]
	mov	ecx, DWORD PTR _in$[esp+24]
	mov	edx, DWORD PTR _pval$[esp+24]
	push	esi
; Line 157
	lea	esi, DWORD PTR _c$[esp+32]
	mov	BYTE PTR _c$[esp+32], 0
	push	esi
	push	0
	push	eax
	push	DWORD PTR _len$[esp+40]
	push	ecx
	push	edx
	call	_asn1_template_ex_d2i
; Line 158
	mov	ecx, DWORD PTR __$ArrayPad$[esp+56]
	add	esp, 24					; 00000018H
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	ret	0
_ASN1_template_d2i ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_d2i
_TEXT	SEGMENT
_ptmpval$ = -32						; size = 4
_c$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_pval$ = 8						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_it$ = 20						; size = 4
_ASN1_item_d2i PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 140
	mov	eax, 32					; 00000020H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+32], eax
	mov	eax, DWORD PTR _pval$[esp+28]
; Line 143
	test	eax, eax
	mov	ecx, DWORD PTR _it$[esp+28]
	mov	edx, DWORD PTR _in$[esp+28]
	push	esi
	lea	esi, DWORD PTR _ptmpval$[esp+36]
	mov	DWORD PTR _ptmpval$[esp+36], 0
	cmovne	esi, eax
; Line 145
	mov	BYTE PTR _c$[esp+36], 0
; Line 146
	lea	eax, DWORD PTR _c$[esp+36]
	push	eax
	push	0
	push	0
	push	-1
	push	ecx
	push	DWORD PTR _len$[esp+52]
	push	edx
	push	esi
	call	_ASN1_item_ex_d2i
	add	esp, 32					; 00000020H
	test	eax, eax
	jle	SHORT $LN3@ASN1_item_
; Line 147
	mov	eax, DWORD PTR [esi]
	pop	esi
; Line 149
	mov	ecx, DWORD PTR __$ArrayPad$[esp+32]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	ret	0
$LN3@ASN1_item_:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	xor	eax, eax
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	ret	0
_ASN1_item_d2i ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_tag2bit
_TEXT	SEGMENT
_tag$ = 8						; size = 4
_ASN1_tag2bit PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_dec.c
; Line 119
	mov	eax, DWORD PTR _tag$[esp-4]
	cmp	eax, 30					; 0000001eH
	ja	SHORT $LN3@ASN1_tag2b
; Line 121
	mov	eax, DWORD PTR _tag2bit[eax*4]
; Line 122
	ret	0
$LN3@ASN1_tag2b:
; Line 120
	xor	eax, eax
; Line 122
	ret	0
_ASN1_tag2bit ENDP
_TEXT	ENDS
END

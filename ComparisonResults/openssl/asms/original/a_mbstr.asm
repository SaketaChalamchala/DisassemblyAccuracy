; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_mbstring_copy
PUBLIC	_ASN1_mbstring_ncopy
PUBLIC	??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@ ; `string'
PUBLIC	??_C@_03JALODAI@?$CFld?$AA@			; `string'
PUBLIC	??_C@_08JJBFGKFE@minsize?$DN?$AA@		; `string'
PUBLIC	??_C@_08EOPONIBF@maxsize?$DN?$AA@		; `string'
PUBLIC	??_C@_0M@PCEPOGPN@?8?$CI?$CJ?$CL?0?9?4?1?3?$DN?$DP?$AA@ ; `string'
EXTRN	__imp__strchr:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_STRING_set:PROC
EXTRN	_UTF8_getc:PROC
EXTRN	_UTF8_putc:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0M@PCEPOGPN@?8?$CI?$CJ?$CL?0?9?4?1?3?$DN?$DP?$AA@
CONST	SEGMENT
??_C@_0M@PCEPOGPN@?8?$CI?$CJ?$CL?0?9?4?1?3?$DN?$DP?$AA@ DB '''()+,-./:=?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EOPONIBF@maxsize?$DN?$AA@
CONST	SEGMENT
??_C@_08EOPONIBF@maxsize?$DN?$AA@ DB 'maxsize=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JJBFGKFE@minsize?$DN?$AA@
CONST	SEGMENT
??_C@_08JJBFGKFE@minsize?$DN?$AA@ DB 'minsize=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03JALODAI@?$CFld?$AA@
CONST	SEGMENT
??_C@_03JALODAI@?$CFld?$AA@ DB '%ld', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
CONST	SEGMENT
??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@ DB '.\crypto\asn1\a_'
	DB	'mbstr.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _is_printable
_TEXT	SEGMENT
_value$ = 8						; size = 4
_is_printable PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 396
	mov	ecx, DWORD PTR _value$[esp-4]
	cmp	ecx, 127				; 0000007fH
	jbe	SHORT $LN2@is_printab
$LN9@is_printab:
; Line 397
	xor	eax, eax
; Line 423
	ret	0
$LN2@is_printab:
; Line 404
	lea	eax, DWORD PTR [ecx-97]
	cmp	eax, 25					; 00000019H
	jbe	SHORT $LN7@is_printab
; Line 406
	lea	eax, DWORD PTR [ecx-65]
	cmp	eax, 25					; 00000019H
	jbe	SHORT $LN7@is_printab
; Line 408
	lea	eax, DWORD PTR [ecx-48]
	cmp	eax, 9
	jbe	SHORT $LN7@is_printab
; Line 410
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN7@is_printab
	push	ecx
	push	OFFSET ??_C@_0M@PCEPOGPN@?8?$CI?$CJ?$CL?0?9?4?1?3?$DN?$DP?$AA@
	call	DWORD PTR __imp__strchr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@is_printab
$LN7@is_printab:
; Line 411
	mov	eax, 1
; Line 423
	ret	0
_is_printable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cpy_utf8
_TEXT	SEGMENT
_value$ = 8						; size = 4
_arg$ = 12						; size = 4
_cpy_utf8 PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 382
	push	esi
; Line 387
	push	DWORD PTR _value$[esp]
	mov	esi, DWORD PTR _arg$[esp+4]
	push	255					; 000000ffH
	push	DWORD PTR [esi]
	call	_UTF8_putc
; Line 388
	add	DWORD PTR [esi], eax
	add	esp, 12					; 0000000cH
; Line 389
	mov	eax, 1
	pop	esi
; Line 390
	ret	0
_cpy_utf8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cpy_univ
_TEXT	SEGMENT
_value$ = 8						; size = 4
_arg$ = 12						; size = 4
_cpy_univ PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 371
	mov	ecx, DWORD PTR _value$[esp-4]
	mov	eax, ecx
	push	esi
	mov	esi, DWORD PTR _arg$[esp]
	shr	eax, 24					; 00000018H
	mov	edx, DWORD PTR [esi]
	mov	BYTE PTR [edx], al
; Line 372
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+1], al
; Line 373
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+2], al
; Line 376
	mov	eax, 1
	mov	BYTE PTR [edx+3], cl
	add	DWORD PTR [esi], 4
	pop	esi
; Line 377
	ret	0
_cpy_univ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cpy_bmp
_TEXT	SEGMENT
_value$ = 8						; size = 4
_arg$ = 12						; size = 4
_cpy_bmp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 358
	mov	ecx, DWORD PTR _value$[esp-4]
	mov	eax, ecx
	push	esi
	mov	esi, DWORD PTR _arg$[esp]
	shr	eax, 8
	mov	edx, DWORD PTR [esi]
	mov	BYTE PTR [edx], al
; Line 361
	mov	eax, 1
	mov	BYTE PTR [edx+1], cl
	add	DWORD PTR [esi], 2
	pop	esi
; Line 362
	ret	0
_cpy_bmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cpy_asc
_TEXT	SEGMENT
_value$ = 8						; size = 4
_arg$ = 12						; size = 4
_cpy_asc PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 345
	mov	edx, DWORD PTR _arg$[esp-4]
; Line 346
	mov	al, BYTE PTR _value$[esp-4]
	mov	ecx, DWORD PTR [edx]
	mov	BYTE PTR [ecx], al
; Line 348
	mov	eax, 1
	inc	DWORD PTR [edx]
; Line 349
	ret	0
_cpy_asc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _type_str
_TEXT	SEGMENT
_value$ = 8						; size = 4
_arg$ = 12						; size = 4
_type_str PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 322
	push	ebx
	push	esi
; Line 325
	mov	esi, DWORD PTR _value$[esp+4]
	push	edi
	mov	edi, DWORD PTR _arg$[esp+8]
	mov	ebx, DWORD PTR [edi]
	test	bl, 2
	je	SHORT $LN2@type_str
; Line 396
	cmp	esi, 127				; 0000007fH
	ja	SHORT $LN16@type_str
; Line 404
	lea	eax, DWORD PTR [esi-97]
	cmp	eax, 25					; 00000019H
	jbe	SHORT $LN2@type_str
; Line 406
	lea	eax, DWORD PTR [esi-65]
	cmp	eax, 25					; 00000019H
	jbe	SHORT $LN2@type_str
; Line 408
	lea	eax, DWORD PTR [esi-48]
	cmp	eax, 9
	jbe	SHORT $LN2@type_str
; Line 410
	cmp	esi, 32					; 00000020H
	je	SHORT $LN2@type_str
	push	esi
	push	OFFSET ??_C@_0M@PCEPOGPN@?8?$CI?$CJ?$CL?0?9?4?1?3?$DN?$DP?$AA@
	call	DWORD PTR __imp__strchr
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@type_str
$LN16@type_str:
; Line 326
	and	ebx, -3					; fffffffdH
$LN2@type_str:
; Line 327
	test	bl, 16					; 00000010H
	je	SHORT $LN3@type_str
	cmp	esi, 127				; 0000007fH
	jbe	SHORT $LN3@type_str
; Line 328
	and	ebx, -17				; ffffffefH
$LN3@type_str:
; Line 329
	test	bl, 4
	je	SHORT $LN4@type_str
	cmp	esi, 255				; 000000ffH
	jbe	SHORT $LN4@type_str
; Line 330
	and	ebx, -5					; fffffffbH
$LN4@type_str:
; Line 331
	test	ebx, 2048				; 00000800H
	je	SHORT $LN5@type_str
	cmp	esi, 65535				; 0000ffffH
	jbe	SHORT $LN5@type_str
; Line 332
	and	ebx, -2049				; fffff7ffH
$LN5@type_str:
; Line 333
	test	ebx, ebx
	jne	SHORT $LN6@type_str
; Line 334
	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
; Line 337
	ret	0
$LN6@type_str:
; Line 335
	mov	DWORD PTR [edi], ebx
; Line 336
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
; Line 337
	ret	0
_type_str ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _out_utf8
_TEXT	SEGMENT
_value$ = 8						; size = 4
_arg$ = 12						; size = 4
_out_utf8 PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 312
	push	DWORD PTR _value$[esp-4]
	push	-1
	push	0
	call	_UTF8_putc
	mov	ecx, DWORD PTR _arg$[esp+8]
	add	esp, 12					; 0000000cH
	add	DWORD PTR [ecx], eax
; Line 313
	mov	eax, 1
; Line 314
	ret	0
_out_utf8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _in_utf8
_TEXT	SEGMENT
_value$ = 8						; size = 4
_arg$ = 12						; size = 4
_in_utf8 PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 302
	mov	eax, DWORD PTR _arg$[esp-4]
	inc	DWORD PTR [eax]
; Line 303
	mov	eax, 1
; Line 304
	ret	0
_in_utf8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _traverse_string
_TEXT	SEGMENT
_p$ = 8							; size = 4
_value$ = 12						; size = 4
_len$ = 12						; size = 4
_inform$ = 16						; size = 4
_rfunc$ = 20						; size = 4
_arg$ = 24						; size = 4
_traverse_string PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 261
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 264
	mov	edi, DWORD PTR _len$[esp+12]
	test	edi, edi
	je	$LN3@traverse_s
	mov	ebp, DWORD PTR _rfunc$[esp+12]
	mov	ebx, DWORD PTR _inform$[esp+12]
	mov	esi, DWORD PTR _p$[esp+12]
	npad	4
$LL2@traverse_s:
; Line 265
	cmp	ebx, 4097				; 00001001H
	jne	SHORT $LN4@traverse_s
; Line 266
	movzx	ecx, BYTE PTR [esi]
	inc	esi
	mov	DWORD PTR _value$[esp+12], ecx
; Line 267
	dec	edi
	jmp	SHORT $LN9@traverse_s
$LN4@traverse_s:
; Line 268
	cmp	ebx, 4098				; 00001002H
	jne	SHORT $LN6@traverse_s
; Line 269
	movzx	ecx, BYTE PTR [esi]
	shl	ecx, 8
	mov	DWORD PTR _value$[esp+12], ecx
; Line 270
	movzx	eax, BYTE PTR [esi+1]
	add	esi, 2
	or	ecx, eax
; Line 271
	sub	edi, 2
	mov	DWORD PTR _value$[esp+12], ecx
	jmp	SHORT $LN9@traverse_s
$LN6@traverse_s:
; Line 272
	cmp	ebx, 4100				; 00001004H
	jne	SHORT $LN8@traverse_s
; Line 273
	movzx	ecx, BYTE PTR [esi]
	shl	ecx, 24					; 00000018H
	mov	DWORD PTR _value$[esp+12], ecx
; Line 274
	movzx	eax, BYTE PTR [esi+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	DWORD PTR _value$[esp+12], ecx
; Line 275
	movzx	eax, BYTE PTR [esi+2]
	shl	eax, 8
	or	ecx, eax
	mov	DWORD PTR _value$[esp+12], ecx
; Line 276
	movzx	eax, BYTE PTR [esi+3]
	add	esi, 4
	or	ecx, eax
; Line 277
	sub	edi, 4
	mov	DWORD PTR _value$[esp+12], ecx
; Line 278
	jmp	SHORT $LN9@traverse_s
$LN8@traverse_s:
; Line 279
	lea	eax, DWORD PTR _value$[esp+12]
	push	eax
	push	edi
	push	esi
	call	_UTF8_getc
	add	esp, 12					; 0000000cH
; Line 280
	test	eax, eax
	js	SHORT $LN15@traverse_s
; Line 283
	mov	ecx, DWORD PTR _value$[esp+12]
	sub	edi, eax
	add	esi, eax
$LN9@traverse_s:
; Line 285
	test	ebp, ebp
	je	SHORT $LN12@traverse_s
; Line 286
	push	DWORD PTR _arg$[esp+12]
	push	ecx
	call	ebp
	add	esp, 8
; Line 287
	test	eax, eax
	jle	SHORT $LN1@traverse_s
$LN12@traverse_s:
; Line 264
	test	edi, edi
	jne	$LL2@traverse_s
$LN3@traverse_s:
; Line 291
	mov	eax, 1
$LN1@traverse_s:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 292
	ret	0
$LN15@traverse_s:
	pop	edi
	pop	esi
	pop	ebp
; Line 281
	or	eax, -1
	pop	ebx
; Line 292
	ret	0
_traverse_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_mbstring_ncopy
_TEXT	SEGMENT
_free_out$1$ = -61					; size = 1
_in$GSCopy$1$ = -60					; size = 4
_outlen$ = -56						; size = 4
_cpyfunc$1$ = -52					; size = 4
_outform$1$ = -48					; size = 4
_value$1 = -48						; size = 4
_out$GSCopy$1$ = -44					; size = 4
_p$ = -40						; size = 4
_strbuf$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_out$ = 8						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_inform$ = 20						; size = 4
_mask$ = 24						; size = 4
_minsize$ = 28						; size = 4
_maxsize$ = 32						; size = 4
_ASN1_mbstring_ncopy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 95
	mov	eax, 64					; 00000040H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+64], eax
	mov	edx, DWORD PTR _in$[esp+60]
	push	ebx
; Line 105
	mov	ebx, DWORD PTR _len$[esp+64]
	mov	DWORD PTR _in$GSCopy$1$[esp+68], edx
	mov	DWORD PTR _outlen$[esp+68], 0
	mov	DWORD PTR _cpyfunc$1$[esp+68], 0
	push	ebp
	mov	ebp, DWORD PTR _out$[esp+68]
	mov	DWORD PTR _out$GSCopy$1$[esp+72], ebp
	push	esi
	push	edi
	cmp	ebx, -1
	jne	SHORT $LN6@ASN1_mbstr
; Line 106
	mov	ebx, edx
	lea	ecx, DWORD PTR [ebx+1]
$LL64@ASN1_mbstr:
	mov	al, BYTE PTR [ebx]
	inc	ebx
	test	al, al
	jne	SHORT $LL64@ASN1_mbstr
	sub	ebx, ecx
$LN6@ASN1_mbstr:
; Line 107
	mov	eax, DWORD PTR _mask$[esp+76]
	mov	ecx, 10246				; 00002806H
	test	eax, eax
	cmove	eax, ecx
; Line 111
	mov	ecx, DWORD PTR _inform$[esp+76]
	mov	DWORD PTR _mask$[esp+76], eax
	lea	eax, DWORD PTR [ecx-4096]
	cmp	eax, 4
	ja	$LN15@ASN1_mbstr
	jmp	DWORD PTR $LN72@ASN1_mbstr[eax*4]
$LN8@ASN1_mbstr:
; Line 114
	test	bl, 1
	je	SHORT $LN9@ASN1_mbstr
; Line 115
	push	116					; 00000074H
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	129					; 00000081H
; Line 117
	jmp	$LN69@ASN1_mbstr
$LN9@ASN1_mbstr:
; Line 119
	mov	esi, ebx
	sar	esi, 1
; Line 120
	jmp	SHORT $LN2@ASN1_mbstr
$LN10@ASN1_mbstr:
; Line 123
	test	bl, 3
	je	SHORT $LN11@ASN1_mbstr
; Line 124
	push	125					; 0000007dH
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	133					; 00000085H
; Line 126
	jmp	$LN69@ASN1_mbstr
$LN11@ASN1_mbstr:
; Line 128
	mov	esi, ebx
	sar	esi, 2
; Line 129
	jmp	SHORT $LN2@ASN1_mbstr
$LN12@ASN1_mbstr:
; Line 132
	xor	esi, esi
; Line 134
	mov	edi, ebx
	mov	ebp, edx
; Line 264
	test	ebx, ebx
	je	SHORT $LN68@ASN1_mbstr
	npad	1
$LL44@ASN1_mbstr:
; Line 279
	lea	eax, DWORD PTR _value$1[esp+80]
	push	eax
	push	edi
	push	ebp
	call	_UTF8_getc
	add	esp, 12					; 0000000cH
; Line 280
	test	eax, eax
	js	SHORT $LN63@ASN1_mbstr
; Line 282
	sub	edi, eax
; Line 283
	add	ebp, eax
; Line 285
	mov	eax, OFFSET _in_utf8
	test	eax, eax
	je	SHORT $LN54@ASN1_mbstr
; Line 302
	inc	esi
$LN54@ASN1_mbstr:
; Line 264
	test	edi, edi
	jne	SHORT $LL44@ASN1_mbstr
; Line 287
	mov	edx, DWORD PTR _in$GSCopy$1$[esp+80]
	mov	ecx, DWORD PTR _inform$[esp+76]
$LN68@ASN1_mbstr:
	mov	ebp, DWORD PTR _out$GSCopy$1$[esp+80]
$LN2@ASN1_mbstr:
; Line 150
	mov	edi, DWORD PTR _minsize$[esp+76]
	test	edi, edi
	jle	SHORT $LN16@ASN1_mbstr
	cmp	esi, edi
	jge	SHORT $LN16@ASN1_mbstr
; Line 151
	push	151					; 00000097H
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	152					; 00000098H
	push	122					; 0000007aH
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 152
	push	edi
	push	OFFSET ??_C@_03JALODAI@?$CFld?$AA@
	lea	eax, DWORD PTR _strbuf$[esp+108]
	push	32					; 00000020H
	push	eax
	call	_BIO_snprintf
; Line 153
	lea	eax, DWORD PTR _strbuf$[esp+116]
	push	eax
	push	OFFSET ??_C@_08JJBFGKFE@minsize?$DN?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 48					; 00000030H
; Line 154
	jmp	$LN70@ASN1_mbstr
$LN63@ASN1_mbstr:
; Line 136
	push	136					; 00000088H
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	134					; 00000086H
; Line 137
	jmp	$LN69@ASN1_mbstr
$LN14@ASN1_mbstr:
; Line 142
	mov	esi, ebx
	jmp	SHORT $LN2@ASN1_mbstr
$LN16@ASN1_mbstr:
; Line 157
	mov	edi, DWORD PTR _maxsize$[esp+76]
	test	edi, edi
	jle	SHORT $LN17@ASN1_mbstr
	cmp	esi, edi
	jle	SHORT $LN17@ASN1_mbstr
; Line 158
	push	158					; 0000009eH
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	151					; 00000097H
	push	122					; 0000007aH
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 159
	push	edi
	push	OFFSET ??_C@_03JALODAI@?$CFld?$AA@
	lea	eax, DWORD PTR _strbuf$[esp+108]
	push	32					; 00000020H
	push	eax
	call	_BIO_snprintf
; Line 160
	lea	eax, DWORD PTR _strbuf$[esp+116]
	push	eax
	push	OFFSET ??_C@_08EOPONIBF@maxsize?$DN?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 48					; 00000030H
; Line 161
	jmp	$LN70@ASN1_mbstr
$LN17@ASN1_mbstr:
; Line 165
	lea	eax, DWORD PTR _mask$[esp+76]
	push	eax
	push	OFFSET _type_str
	push	ecx
	push	ebx
	push	edx
	call	_traverse_string
	add	esp, 20					; 00000014H
	test	eax, eax
	jns	SHORT $LN18@ASN1_mbstr
; Line 166
	push	166					; 000000a6H
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	124					; 0000007cH
; Line 167
	jmp	$LN69@ASN1_mbstr
$LN18@ASN1_mbstr:
; Line 172
	mov	eax, DWORD PTR _mask$[esp+76]
	mov	DWORD PTR _outform$1$[esp+80], 4097	; 00001001H
	test	al, 2
	je	SHORT $LN19@ASN1_mbstr
; Line 173
	mov	edi, 19					; 00000013H
	jmp	SHORT $LN28@ASN1_mbstr
$LN19@ASN1_mbstr:
; Line 174
	test	al, 16					; 00000010H
	je	SHORT $LN21@ASN1_mbstr
; Line 175
	mov	edi, 22					; 00000016H
	jmp	SHORT $LN28@ASN1_mbstr
$LN21@ASN1_mbstr:
; Line 176
	test	al, 4
	je	SHORT $LN23@ASN1_mbstr
; Line 177
	mov	edi, 20					; 00000014H
	jmp	SHORT $LN28@ASN1_mbstr
$LN23@ASN1_mbstr:
; Line 178
	test	eax, 2048				; 00000800H
	je	SHORT $LN25@ASN1_mbstr
; Line 179
	mov	edi, 30					; 0000001eH
; Line 180
	mov	DWORD PTR _outform$1$[esp+80], 4098	; 00001002H
	jmp	SHORT $LN28@ASN1_mbstr
$LN25@ASN1_mbstr:
; Line 181
	test	eax, 256				; 00000100H
	je	SHORT $LN27@ASN1_mbstr
; Line 182
	mov	edi, 28					; 0000001cH
; Line 183
	mov	DWORD PTR _outform$1$[esp+80], 4100	; 00001004H
; Line 184
	jmp	SHORT $LN28@ASN1_mbstr
$LN27@ASN1_mbstr:
; Line 185
	mov	edi, 12					; 0000000cH
; Line 186
	mov	DWORD PTR _outform$1$[esp+80], 4096	; 00001000H
$LN28@ASN1_mbstr:
; Line 188
	test	ebp, ebp
	je	$LN35@ASN1_mbstr
; Line 190
	mov	ebp, DWORD PTR [ebp]
	test	ebp, ebp
	je	SHORT $LN30@ASN1_mbstr
; Line 193
	mov	eax, DWORD PTR [ebp+8]
	mov	BYTE PTR _free_out$1$[esp+80], 0
	test	eax, eax
	je	SHORT $LN32@ASN1_mbstr
; Line 195
	push	eax
	mov	DWORD PTR [ebp], 0
	call	_CRYPTO_free
	add	esp, 4
; Line 196
	mov	DWORD PTR [ebp+8], 0
$LN32@ASN1_mbstr:
; Line 198
	mov	DWORD PTR [ebp+4], edi
; Line 199
	jmp	SHORT $LN31@ASN1_mbstr
$LN30@ASN1_mbstr:
; Line 201
	push	edi
	mov	BYTE PTR _free_out$1$[esp+84], 1
	call	_ASN1_STRING_type_new
	mov	ebp, eax
	add	esp, 4
; Line 202
	test	ebp, ebp
	jne	SHORT $LN33@ASN1_mbstr
; Line 203
	push	203					; 000000cbH
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	65					; 00000041H
; Line 204
	jmp	$LN69@ASN1_mbstr
$LN33@ASN1_mbstr:
; Line 206
	mov	eax, DWORD PTR _out$GSCopy$1$[esp+80]
	mov	DWORD PTR [eax], ebp
$LN31@ASN1_mbstr:
; Line 209
	mov	eax, DWORD PTR _outform$1$[esp+80]
	mov	ecx, DWORD PTR _inform$[esp+76]
	cmp	ecx, eax
	jne	SHORT $LN34@ASN1_mbstr
; Line 210
	mov	esi, DWORD PTR _in$GSCopy$1$[esp+80]
	push	ebx
	push	esi
	push	ebp
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN35@ASN1_mbstr
; Line 211
	push	211					; 000000d3H
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	65					; 00000041H
; Line 212
	jmp	$LN69@ASN1_mbstr
$LN34@ASN1_mbstr:
; Line 218
	add	eax, -4096				; fffff000H
	cmp	eax, 4
	ja	SHORT $LN67@ASN1_mbstr
	jmp	DWORD PTR $LN73@ASN1_mbstr[eax*4]
$LN36@ASN1_mbstr:
; Line 220
	mov	DWORD PTR _outlen$[esp+80], esi
; Line 221
	mov	DWORD PTR _cpyfunc$1$[esp+80], OFFSET _cpy_asc
$LN67@ASN1_mbstr:
	mov	esi, DWORD PTR _in$GSCopy$1$[esp+80]
$LN65@ASN1_mbstr:
; Line 240
	mov	eax, DWORD PTR _outlen$[esp+80]
	push	240					; 000000f0H
	inc	eax
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$[esp+80], eax
	test	eax, eax
	jne	SHORT $LN40@ASN1_mbstr
; Line 241
	cmp	BYTE PTR _free_out$1$[esp+80], al
	je	SHORT $LN41@ASN1_mbstr
; Line 242
	push	ebp
	call	_ASN1_STRING_free
	add	esp, 4
$LN41@ASN1_mbstr:
; Line 243
	push	243					; 000000f3H
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	65					; 00000041H
; Line 244
	jmp	$LN69@ASN1_mbstr
$LN37@ASN1_mbstr:
; Line 225
	lea	eax, DWORD PTR [esi+esi]
; Line 226
	mov	DWORD PTR _cpyfunc$1$[esp+80], OFFSET _cpy_bmp
	mov	DWORD PTR _outlen$[esp+80], eax
; Line 227
	jmp	SHORT $LN67@ASN1_mbstr
$LN38@ASN1_mbstr:
; Line 230
	lea	eax, DWORD PTR [esi*4]
; Line 231
	mov	DWORD PTR _cpyfunc$1$[esp+80], OFFSET _cpy_univ
	mov	DWORD PTR _outlen$[esp+80], eax
; Line 232
	jmp	SHORT $LN67@ASN1_mbstr
$LN39@ASN1_mbstr:
; Line 236
	mov	esi, DWORD PTR _in$GSCopy$1$[esp+80]
	lea	eax, DWORD PTR _outlen$[esp+80]
	push	eax
	push	OFFSET _out_utf8
	push	ecx
	push	ebx
	push	esi
	mov	DWORD PTR _outlen$[esp+100], 0
	call	_traverse_string
	add	esp, 20					; 00000014H
; Line 237
	mov	DWORD PTR _cpyfunc$1$[esp+80], OFFSET _cpy_utf8
	jmp	$LN65@ASN1_mbstr
$LN40@ASN1_mbstr:
; Line 246
	mov	eax, DWORD PTR _outlen$[esp+80]
	mov	DWORD PTR [ebp], eax
; Line 247
	mov	eax, DWORD PTR _p$[esp+80]
	mov	DWORD PTR [ebp+8], eax
; Line 248
	mov	eax, DWORD PTR _p$[esp+80]
	mov	ecx, DWORD PTR _outlen$[esp+80]
	mov	BYTE PTR [eax+ecx], 0
; Line 249
	lea	eax, DWORD PTR _p$[esp+80]
	push	eax
	push	DWORD PTR _cpyfunc$1$[esp+84]
	push	DWORD PTR _inform$[esp+84]
	push	ebx
	push	esi
	call	_traverse_string
	add	esp, 20					; 00000014H
$LN35@ASN1_mbstr:
; Line 250
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 251
	mov	ecx, DWORD PTR __$ArrayPad$[esp+64]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
$LN15@ASN1_mbstr:
; Line 146
	push	146					; 00000092H
	push	OFFSET ??_C@_0BI@LIGHHEPI@?4?2crypto?2asn1?2a_mbstr?4c?$AA@
	push	160					; 000000a0H
$LN69@ASN1_mbstr:
	push	122					; 0000007aH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN70@ASN1_mbstr:
; Line 251
	mov	ecx, DWORD PTR __$ArrayPad$[esp+80]
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
	npad	3
$LN72@ASN1_mbstr:
	DD	$LN12@ASN1_mbstr
	DD	$LN14@ASN1_mbstr
	DD	$LN8@ASN1_mbstr
	DD	$LN15@ASN1_mbstr
	DD	$LN10@ASN1_mbstr
$LN73@ASN1_mbstr:
	DD	$LN39@ASN1_mbstr
	DD	$LN36@ASN1_mbstr
	DD	$LN37@ASN1_mbstr
	DD	$LN67@ASN1_mbstr
	DD	$LN38@ASN1_mbstr
_ASN1_mbstring_ncopy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_mbstring_copy
_TEXT	SEGMENT
_out$ = 8						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_inform$ = 20						; size = 4
_mask$ = 24						; size = 4
_ASN1_mbstring_copy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_mbstr.c
; Line 89
	push	0
	push	0
	push	DWORD PTR _mask$[esp+4]
	push	DWORD PTR _inform$[esp+8]
	push	DWORD PTR _len$[esp+12]
	push	DWORD PTR _in$[esp+16]
	push	DWORD PTR _out$[esp+20]
	call	_ASN1_mbstring_ncopy
	add	esp, 28					; 0000001cH
; Line 90
	ret	0
_ASN1_mbstring_copy ENDP
_TEXT	ENDS
END

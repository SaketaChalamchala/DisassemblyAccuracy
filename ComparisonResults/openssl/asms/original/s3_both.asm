; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ssl_cert_type
PUBLIC	_ssl_verify_alarm_type
PUBLIC	_ssl3_get_finished
PUBLIC	_ssl3_send_change_cipher_spec
PUBLIC	_ssl3_do_write
PUBLIC	_ssl3_get_message
PUBLIC	_ssl3_send_finished
PUBLIC	_ssl3_output_cert_chain
PUBLIC	_ssl3_setup_buffers
PUBLIC	_ssl3_setup_read_buffer
PUBLIC	_ssl3_setup_write_buffer
PUBLIC	_ssl3_release_read_buffer
PUBLIC	_ssl3_release_write_buffer
PUBLIC	??_C@_0BF@MDPNEINP@i?5?$DM?$DN?5EVP_MAX_MD_SIZE?$AA@ ; `string'
PUBLIC	??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@	; `string'
EXTRN	_BUF_MEM_grow_clean:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OpenSSLDie:PROC
EXTRN	_CRYPTO_memcmp:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_X509_certificate_type:PROC
EXTRN	_ssl_add_cert_chain:PROC
EXTRN	_ssl3_send_alert:PROC
EXTRN	_ssl3_write_bytes:PROC
EXTRN	_ssl3_finish_mac:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
CONST	SEGMENT
??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@ DB '.\ssl\s3_both.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MDPNEINP@i?5?$DM?$DN?5EVP_MAX_MD_SIZE?$AA@
CONST	SEGMENT
??_C@_0BF@MDPNEINP@i?5?$DM?$DN?5EVP_MAX_MD_SIZE?$AA@ DB 'i <= EVP_MAX_MD_'
	DB	'SIZE', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _freelist_insert
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_for_read$ = 12						; size = 4
_sz$ = 16						; size = 4
_mem$ = 20						; size = 4
_freelist_insert PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 624
	push	624					; 00000270H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	push	12					; 0000000cH
	push	9
	call	_CRYPTO_lock
; Line 625
	mov	ecx, DWORD PTR _ctx$[esp+12]
	add	esp, 16					; 00000010H
	cmp	DWORD PTR _for_read$[esp-4], 0
	je	SHORT $LN6@freelist_i
	mov	edx, DWORD PTR [ecx+352]
	jmp	SHORT $LN7@freelist_i
$LN6@freelist_i:
	mov	edx, DWORD PTR [ecx+348]
$LN7@freelist_i:
	push	esi
; Line 628
	test	edx, edx
	je	SHORT $LN8@freelist_i
	mov	eax, DWORD PTR [edx]
	mov	esi, DWORD PTR _sz$[esp]
	cmp	esi, eax
	je	SHORT $LN3@freelist_i
	test	eax, eax
	jne	SHORT $LN8@freelist_i
$LN3@freelist_i:
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR [ecx+344]
	jae	SHORT $LN8@freelist_i
	cmp	esi, 4
	jb	SHORT $LN8@freelist_i
; Line 631
	mov	ecx, DWORD PTR _mem$[esp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [edx], esi
	mov	DWORD PTR [ecx], eax
; Line 633
	inc	DWORD PTR [edx+4]
; Line 634
	xor	esi, esi
	mov	DWORD PTR [edx+8], ecx
	jmp	SHORT $LN2@freelist_i
$LN8@freelist_i:
	mov	esi, DWORD PTR _mem$[esp]
$LN2@freelist_i:
; Line 637
	push	637					; 0000027dH
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	push	12					; 0000000cH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 638
	test	esi, esi
	je	SHORT $LN4@freelist_i
; Line 639
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN4@freelist_i:
	pop	esi
; Line 640
	ret	0
_freelist_insert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _freelist_extract
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_for_read$ = 12						; size = 4
_sz$ = 16						; size = 4
_freelist_extract PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 598
	push	esi
	push	edi
; Line 603
	push	603					; 0000025bH
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	push	12					; 0000000cH
	push	9
	xor	esi, esi
	call	_CRYPTO_lock
; Line 604
	mov	eax, DWORD PTR _ctx$[esp+20]
	add	esp, 16					; 00000010H
	cmp	DWORD PTR _for_read$[esp+4], esi
	je	SHORT $LN7@freelist_e
	mov	ecx, DWORD PTR [eax+352]
	jmp	SHORT $LN8@freelist_e
$LN7@freelist_e:
	mov	ecx, DWORD PTR [eax+348]
$LN8@freelist_e:
; Line 605
	mov	edi, DWORD PTR _sz$[esp+4]
	test	ecx, ecx
	je	SHORT $LN4@freelist_e
	cmp	edi, DWORD PTR [ecx]
	jne	SHORT $LN4@freelist_e
; Line 606
	mov	edx, DWORD PTR [ecx+8]
; Line 607
	test	edx, edx
	je	SHORT $LN4@freelist_e
; Line 608
	mov	eax, DWORD PTR [edx]
; Line 609
	mov	esi, edx
; Line 610
	add	DWORD PTR [ecx+4], -1
	mov	DWORD PTR [ecx+8], eax
	jne	SHORT $LN4@freelist_e
; Line 611
	mov	DWORD PTR [ecx], 0
$LN4@freelist_e:
; Line 613
	push	613					; 00000265H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	push	12					; 0000000cH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 614
	test	esi, esi
	jne	SHORT $LN9@freelist_e
; Line 615
	push	615					; 00000267H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
; Line 617
	ret	0
$LN9@freelist_e:
	pop	edi
; Line 616
	mov	eax, esi
	pop	esi
; Line 617
	ret	0
_freelist_extract ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_take_mac
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl3_take_mac PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 211
	push	esi
; Line 218
	mov	esi, DWORD PTR _s$[esp]
	mov	edx, DWORD PTR [esi+88]
	cmp	DWORD PTR [edx+836], 0
	je	SHORT $LN1@ssl3_take_
; Line 220
	test	DWORD PTR [esi+52], 4096		; 00001000H
; Line 221
	mov	eax, DWORD PTR [esi+8]
	push	ebx
	push	edi
	mov	eax, DWORD PTR [eax+100]
	je	SHORT $LN3@ssl3_take_
	mov	edi, DWORD PTR [eax+40]
; Line 222
	mov	ebx, DWORD PTR [eax+44]
; Line 223
	jmp	SHORT $LN4@ssl3_take_
$LN3@ssl3_take_:
; Line 224
	mov	edi, DWORD PTR [eax+32]
; Line 225
	mov	ebx, DWORD PTR [eax+36]
$LN4@ssl3_take_:
; Line 228
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [eax+100]
	lea	eax, DWORD PTR [edx+696]
	push	eax
	push	ebx
	push	edi
	mov	eax, DWORD PTR [ecx+20]
	push	esi
	call	eax
	mov	ecx, DWORD PTR [esi+88]
	add	esp, 16					; 00000010H
	pop	edi
	mov	DWORD PTR [ecx+824], eax
	pop	ebx
$LN1@ssl3_take_:
	pop	esi
; Line 232
	ret	0
_ssl3_take_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_release_write_buffer
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl3_release_write_buffer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 732
	push	esi
; Line 733
	mov	esi, DWORD PTR _s$[esp]
	mov	eax, DWORD PTR [esi+88]
	mov	ecx, DWORD PTR [eax+252]
	test	ecx, ecx
	je	SHORT $LN4@ssl3_relea
; Line 734
	push	ecx
	push	DWORD PTR [eax+256]
	push	0
	push	DWORD PTR [esi+228]
	call	_freelist_insert
; Line 735
	mov	eax, DWORD PTR [esi+88]
	add	esp, 16					; 00000010H
	mov	DWORD PTR [eax+252], 0
$LN4@ssl3_relea:
; Line 737
	mov	eax, 1
	pop	esi
; Line 738
	ret	0
_ssl3_release_write_buffer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_release_read_buffer
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl3_release_read_buffer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 741
	push	esi
; Line 742
	mov	esi, DWORD PTR _s$[esp]
	mov	eax, DWORD PTR [esi+88]
	mov	ecx, DWORD PTR [eax+236]
	test	ecx, ecx
	je	SHORT $LN4@ssl3_relea
; Line 743
	push	ecx
	push	DWORD PTR [eax+240]
	push	1
	push	DWORD PTR [esi+228]
	call	_freelist_insert
; Line 744
	mov	eax, DWORD PTR [esi+88]
	add	esp, 16					; 00000010H
	mov	DWORD PTR [eax+236], 0
$LN4@ssl3_relea:
; Line 746
	mov	eax, 1
	pop	esi
; Line 747
	ret	0
_ssl3_release_read_buffer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_setup_write_buffer
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl3_setup_write_buffer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 686
	push	esi
	push	edi
; Line 690
	mov	edi, DWORD PTR _s$[esp+4]
	mov	ecx, 5
	mov	eax, DWORD PTR [edi+8]
	mov	eax, DWORD PTR [eax+100]
	test	BYTE PTR [eax+56], 8
	mov	eax, 14					; 0000000eH
	cmovne	ecx, eax
; Line 699
	mov	eax, DWORD PTR [edi+88]
	cmp	DWORD PTR [eax+252], 0
	jne	SHORT $LN4@ssl3_setup
; Line 700
	mov	esi, DWORD PTR [edi+276]
; Line 703
	mov	eax, DWORD PTR [edi+256]
	add	esi, 83					; 00000053H
	add	esi, ecx
	test	eax, 131072				; 00020000H
	jne	SHORT $LN5@ssl3_setup
; Line 704
	add	esi, 1024				; 00000400H
$LN5@ssl3_setup:
; Line 706
	test	eax, 2048				; 00000800H
	jne	SHORT $LN6@ssl3_setup
; Line 707
	add	esi, 83					; 00000053H
	add	esi, ecx
$LN6@ssl3_setup:
; Line 709
	push	esi
	push	0
	push	DWORD PTR [edi+228]
	call	_freelist_extract
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	test	ecx, ecx
	jne	SHORT $LN7@ssl3_setup
$err$10:
; Line 718
	push	718					; 000002ceH
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	push	65					; 00000041H
	push	291					; 00000123H
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 719
	xor	eax, eax
	pop	edi
	pop	esi
; Line 720
	ret	0
$LN7@ssl3_setup:
; Line 711
	mov	eax, DWORD PTR [edi+88]
	mov	DWORD PTR [eax+252], ecx
; Line 712
	mov	eax, DWORD PTR [edi+88]
	mov	DWORD PTR [eax+256], esi
$LN4@ssl3_setup:
; Line 715
	pop	edi
	mov	eax, 1
	pop	esi
; Line 720
	ret	0
_ssl3_setup_write_buffer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_setup_read_buffer
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl3_setup_read_buffer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 647
	push	esi
; Line 651
	mov	esi, DWORD PTR _s$[esp]
	push	edi
	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax+100]
	movzx	edi, BYTE PTR [eax+56]
; Line 660
	mov	eax, DWORD PTR [esi+88]
	and	edi, 8
	or	edi, 5
	cmp	DWORD PTR [eax+236], 0
	jne	SHORT $LN4@ssl3_setup
; Line 661
	add	edi, 16707				; 00004143H
; Line 663
	test	BYTE PTR [esi+256], 32			; 00000020H
	je	SHORT $LN5@ssl3_setup
; Line 664
	mov	DWORD PTR [eax+232], 1
; Line 665
	add	edi, 16384				; 00004000H
$LN5@ssl3_setup:
; Line 668
	test	DWORD PTR [esi+256], 131072		; 00020000H
	jne	SHORT $LN6@ssl3_setup
; Line 669
	add	edi, 1024				; 00000400H
$LN6@ssl3_setup:
; Line 671
	push	edi
	push	1
	push	DWORD PTR [esi+228]
	call	_freelist_extract
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	test	ecx, ecx
	jne	SHORT $LN7@ssl3_setup
$err$10:
; Line 681
	push	681					; 000002a9H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	push	65					; 00000041H
	push	156					; 0000009cH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 682
	xor	eax, eax
	pop	edi
	pop	esi
; Line 683
	ret	0
$LN7@ssl3_setup:
; Line 673
	mov	eax, DWORD PTR [esi+88]
	mov	DWORD PTR [eax+236], ecx
; Line 674
	mov	eax, DWORD PTR [esi+88]
	mov	DWORD PTR [eax+240], edi
$LN4@ssl3_setup:
; Line 677
	mov	eax, DWORD PTR [esi+88]
	pop	edi
	mov	eax, DWORD PTR [eax+236]
	mov	DWORD PTR [esi+76], eax
; Line 678
	mov	eax, 1
	pop	esi
; Line 683
	ret	0
_ssl3_setup_read_buffer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_setup_buffers
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ssl3_setup_buffers PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 724
	push	DWORD PTR _s$[esp-4]
	call	_ssl3_setup_read_buffer
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@ssl3_setup
; Line 729
	ret	0
$LN2@ssl3_setup:
; Line 726
	push	DWORD PTR _s$[esp-4]
	call	_ssl3_setup_write_buffer
	add	esp, 4
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 729
	ret	0
_ssl3_setup_buffers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_output_cert_chain
_TEXT	SEGMENT
_l$ = 8							; size = 4
_s$ = 8							; size = 4
_cpk$ = 12						; size = 4
_ssl3_output_cert_chain PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 323
	push	esi
; Line 325
	mov	esi, DWORD PTR _s$[esp]
	mov	eax, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [eax+100]
	mov	eax, DWORD PTR [eax+60]
	add	eax, 3
	mov	DWORD PTR _l$[esp], eax
; Line 327
	lea	eax, DWORD PTR _l$[esp]
	push	eax
	push	DWORD PTR _cpk$[esp+4]
	push	esi
	call	_ssl_add_cert_chain
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@ssl3_outpu
	pop	esi
; Line 336
	ret	0
$LN2@ssl3_outpu:
; Line 330
	mov	edx, DWORD PTR [esi+8]
	mov	ecx, -3					; fffffffdH
	push	ebx
	mov	ebx, DWORD PTR _l$[esp+4]
	mov	eax, DWORD PTR [edx+100]
	sub	ecx, DWORD PTR [eax+60]
; Line 331
	mov	eax, DWORD PTR [esi+60]
	add	ebx, ecx
	mov	DWORD PTR _l$[esp+4], ebx
	mov	ecx, DWORD PTR [edx+100]
; Line 332
	shr	ebx, 16					; 00000010H
	mov	edx, DWORD PTR [eax+4]
	add	edx, DWORD PTR [ecx+60]
	mov	BYTE PTR [edx], bl
	mov	eax, DWORD PTR _l$[esp+4]
	shr	eax, 8
	mov	BYTE PTR [edx+1], al
	mov	al, BYTE PTR _l$[esp+4]
	mov	BYTE PTR [edx+2], al
; Line 333
	mov	ecx, DWORD PTR _l$[esp+4]
; Line 334
	mov	eax, DWORD PTR [esi+8]
	add	ecx, 3
	mov	DWORD PTR _l$[esp+4], ecx
	push	ecx
	push	11					; 0000000bH
	mov	eax, DWORD PTR [eax+100]
	push	esi
	mov	eax, DWORD PTR [eax+64]
	call	eax
; Line 335
	mov	eax, DWORD PTR [esi+8]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax+100]
	pop	ebx
	pop	esi
	mov	eax, DWORD PTR [eax+60]
	add	eax, DWORD PTR _l$[esp-4]
; Line 336
	ret	0
_ssl3_output_cert_chain ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_send_finished
_TEXT	SEGMENT
_s$ = 8							; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_sender$ = 20						; size = 4
_slen$ = 24						; size = 4
_ssl3_send_finished PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 160
	push	ebx
	push	esi
; Line 165
	mov	esi, DWORD PTR _s$[esp+4]
	push	edi
	mov	eax, DWORD PTR [esi+52]
	cmp	eax, DWORD PTR _a$[esp+8]
	jne	$LN2@ssl3_send_
; Line 166
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [eax+100]
	mov	eax, DWORD PTR [esi+60]
	mov	edi, DWORD PTR [eax+4]
; Line 168
	mov	eax, DWORD PTR [esi+88]
	add	edi, DWORD PTR [ecx+60]
	add	eax, 564				; 00000234H
	push	eax
	push	DWORD PTR _slen$[esp+12]
	mov	eax, DWORD PTR [ecx+20]
	push	DWORD PTR _sender$[esp+16]
	push	esi
	call	eax
	mov	ebx, eax
	add	esp, 16					; 00000010H
; Line 171
	test	ebx, ebx
	jg	SHORT $LN3@ssl3_send_
; Line 172
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 203
	ret	0
$LN3@ssl3_send_:
; Line 173
	mov	eax, DWORD PTR [esi+88]
; Line 174
	push	ebx
	mov	DWORD PTR [eax+692], ebx
	mov	eax, DWORD PTR [esi+88]
	add	eax, 564				; 00000234H
	push	eax
	push	edi
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 180
	cmp	DWORD PTR [esi+4], 4096			; 00001000H
	jne	SHORT $LN4@ssl3_send_
; Line 181
	cmp	ebx, 64					; 00000040H
	jle	SHORT $LN8@ssl3_send_
	push	OFFSET ??_C@_0BF@MDPNEINP@i?5?$DM?$DN?5EVP_MAX_MD_SIZE?$AA@
	push	181					; 000000b5H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN8@ssl3_send_:
; Line 182
	mov	ecx, DWORD PTR [esi+88]
	push	ebx
	lea	eax, DWORD PTR [ecx+564]
	push	eax
	lea	eax, DWORD PTR [ecx+916]
	push	eax
	call	_memcpy
; Line 183
	mov	eax, DWORD PTR [esi+88]
	mov	BYTE PTR [eax+980], bl
; Line 184
	jmp	SHORT $LN11@ssl3_send_
$LN4@ssl3_send_:
; Line 185
	cmp	ebx, 64					; 00000040H
	jle	SHORT $LN10@ssl3_send_
	push	OFFSET ??_C@_0BF@MDPNEINP@i?5?$DM?$DN?5EVP_MAX_MD_SIZE?$AA@
	push	185					; 000000b9H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN10@ssl3_send_:
; Line 186
	mov	ecx, DWORD PTR [esi+88]
	push	ebx
	lea	eax, DWORD PTR [ecx+564]
	push	eax
	lea	eax, DWORD PTR [ecx+981]
	push	eax
	call	_memcpy
; Line 187
	mov	eax, DWORD PTR [esi+88]
	mov	BYTE PTR [eax+1045], bl
$LN11@ssl3_send_:
; Line 197
	mov	eax, DWORD PTR [esi+8]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR [eax+100]
	push	ebx
	push	20					; 00000014H
	push	esi
	mov	eax, DWORD PTR [eax+64]
	call	eax
; Line 198
	mov	eax, DWORD PTR _b$[esp+20]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+52], eax
$LN2@ssl3_send_:
; Line 202
	mov	eax, DWORD PTR [esi+8]
	push	esi
	mov	eax, DWORD PTR [eax+100]
	mov	eax, DWORD PTR [eax+68]
	call	eax
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
; Line 203
	ret	0
_ssl3_send_finished ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_get_message
_TEXT	SEGMENT
_s$ = 8							; size = 4
_st1$ = 12						; size = 4
_stn$ = 16						; size = 4
_mt$ = 20						; size = 4
_max$ = 24						; size = 4
_ok$ = 28						; size = 4
_ssl3_get_message PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 344
	push	ebx
	push	esi
; Line 350
	mov	esi, DWORD PTR _s$[esp+4]
	push	edi
	mov	eax, DWORD PTR [esi+88]
	cmp	DWORD PTR [eax+852], 0
	je	SHORT $LN9@ssl3_get_m
; Line 352
	mov	ecx, DWORD PTR _mt$[esp+8]
	mov	DWORD PTR [eax+852], 0
	test	ecx, ecx
	js	SHORT $LN10@ssl3_get_m
	mov	eax, DWORD PTR [esi+88]
	cmp	DWORD PTR [eax+832], ecx
	je	SHORT $LN10@ssl3_get_m
; Line 354
	push	354					; 00000162H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	mov	edi, 10					; 0000000aH
	push	244					; 000000f4H
; Line 355
	jmp	$LN40@ssl3_get_m
$LN10@ssl3_get_m:
; Line 357
	mov	eax, DWORD PTR _ok$[esp+8]
	pop	edi
	mov	DWORD PTR [eax], 1
; Line 358
	mov	eax, DWORD PTR _stn$[esp+4]
	mov	DWORD PTR [esi+52], eax
; Line 359
	mov	eax, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [eax+4]
	add	eax, 4
	mov	DWORD PTR [esi+64], eax
; Line 360
	mov	eax, DWORD PTR [esi+88]
	mov	eax, DWORD PTR [eax+828]
	mov	DWORD PTR [esi+68], eax
	pop	esi
	pop	ebx
; Line 470
	ret	0
$LN9@ssl3_get_m:
; Line 364
	mov	eax, DWORD PTR [esi+60]
	mov	edi, DWORD PTR [eax+4]
; Line 366
	mov	eax, DWORD PTR [esi+52]
	cmp	eax, DWORD PTR _st1$[esp+8]
	jne	$LN11@ssl3_get_m
	npad	7
$LL4@ssl3_get_m:
; Line 370
	cmp	DWORD PTR [esi+68], 4
	jge	SHORT $LN6@ssl3_get_m
	npad	10
$LL5@ssl3_get_m:
; Line 371
	mov	ecx, DWORD PTR [esi+68]
	mov	eax, 4
	mov	edx, DWORD PTR [esi+8]
	sub	eax, ecx
	push	0
	push	eax
	lea	eax, DWORD PTR [ecx+edi]
	push	eax
	mov	eax, DWORD PTR [edx+52]
	push	22					; 00000016H
	push	esi
	call	eax
	mov	ecx, eax
	add	esp, 20					; 00000014H
; Line 374
	test	ecx, ecx
	jle	SHORT $LN28@ssl3_get_m
; Line 379
	add	DWORD PTR [esi+68], ecx
	cmp	DWORD PTR [esi+68], 4
	jl	SHORT $LL5@ssl3_get_m
$LN6@ssl3_get_m:
; Line 383
	cmp	DWORD PTR [esi+36], 0
	jne	SHORT $LN29@ssl3_get_m
; Line 384
	cmp	BYTE PTR [edi], 0
	jne	SHORT $LN29@ssl3_get_m
; Line 391
	cmp	BYTE PTR [edi+1], 0
	jne	SHORT $LN29@ssl3_get_m
	cmp	BYTE PTR [edi+2], 0
	jne	SHORT $LN29@ssl3_get_m
	cmp	BYTE PTR [edi+3], 0
	jne	SHORT $LN29@ssl3_get_m
; Line 395
	mov	eax, DWORD PTR [esi+100]
	mov	DWORD PTR [esi+68], 0
	test	eax, eax
	je	SHORT $LL4@ssl3_get_m
; Line 396
	push	DWORD PTR [esi+104]
	push	esi
	push	4
	push	edi
	push	22					; 00000016H
	push	DWORD PTR [esi]
	push	0
	call	eax
	add	esp, 28					; 0000001cH
; Line 400
	jmp	SHORT $LL4@ssl3_get_m
$LN28@ssl3_get_m:
; Line 376
	mov	eax, DWORD PTR _ok$[esp+8]
	pop	edi
	mov	DWORD PTR [esi+24], 3
	pop	esi
	mov	DWORD PTR [eax], 0
; Line 377
	mov	eax, ecx
	pop	ebx
; Line 470
	ret	0
$LN29@ssl3_get_m:
; Line 404
	mov	ecx, DWORD PTR _mt$[esp+8]
	test	ecx, ecx
	js	SHORT $LN17@ssl3_get_m
	movzx	eax, BYTE PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN17@ssl3_get_m
; Line 406
	push	406					; 00000196H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	mov	edi, 10					; 0000000aH
	push	244					; 000000f4H
; Line 407
	jmp	SHORT $LN40@ssl3_get_m
$LN17@ssl3_get_m:
; Line 410
	mov	eax, DWORD PTR [esi+88]
	movzx	ecx, BYTE PTR [edi]
	mov	DWORD PTR [eax+832], ecx
; Line 412
	movzx	eax, BYTE PTR [edi+1]
	movzx	ebx, BYTE PTR [edi+2]
	shl	eax, 8
	or	ebx, eax
	movzx	eax, BYTE PTR [edi+3]
	shl	ebx, 8
	or	ebx, eax
; Line 413
	cmp	ebx, DWORD PTR _max$[esp+8]
	jbe	SHORT $LN18@ssl3_get_m
; Line 415
	push	415					; 0000019fH
; Line 416
	jmp	SHORT $LN41@ssl3_get_m
$LN18@ssl3_get_m:
; Line 418
	cmp	ebx, 2147483643				; 7ffffffbH
	jbe	SHORT $LN19@ssl3_get_m
; Line 420
	push	420					; 000001a4H
$LN41@ssl3_get_m:
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	push	152					; 00000098H
	mov	edi, 47					; 0000002fH
$LN40@ssl3_get_m:
	push	142					; 0000008eH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$f_err$43:
; Line 466
	push	edi
	push	2
	push	esi
	call	_ssl3_send_alert
; Line 468
	mov	eax, DWORD PTR _ok$[esp+20]
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], 0
; Line 469
	or	eax, -1
	pop	ebx
; Line 470
	ret	0
$LN19@ssl3_get_m:
; Line 423
	test	ebx, ebx
	je	SHORT $LN20@ssl3_get_m
	lea	eax, DWORD PTR [ebx+4]
	push	eax
	push	DWORD PTR [esi+60]
	call	_BUF_MEM_grow_clean
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN20@ssl3_get_m
; Line 424
	push	424					; 000001a8H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	push	7
	push	142					; 0000008eH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$44:
; Line 468
	mov	eax, DWORD PTR _ok$[esp+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], 0
; Line 469
	or	eax, -1
; Line 470
	ret	0
$LN20@ssl3_get_m:
; Line 427
	mov	eax, DWORD PTR [esi+88]
	mov	DWORD PTR [eax+828], ebx
; Line 428
	mov	eax, DWORD PTR _stn$[esp+8]
	mov	DWORD PTR [esi+52], eax
; Line 430
	mov	eax, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [eax+4]
	add	eax, 4
; Line 431
	mov	DWORD PTR [esi+68], 0
	mov	DWORD PTR [esi+64], eax
$LN11@ssl3_get_m:
; Line 436
	mov	eax, DWORD PTR [esi+88]
	mov	ebx, DWORD PTR [esi+64]
	mov	edi, DWORD PTR [eax+828]
	sub	edi, DWORD PTR [esi+68]
; Line 437
	test	edi, edi
	jle	SHORT $LN8@ssl3_get_m
	npad	7
$LL7@ssl3_get_m:
; Line 438
	mov	eax, DWORD PTR [esi+68]
	mov	ecx, DWORD PTR [esi+8]
	add	eax, ebx
	push	0
	push	edi
	push	eax
	mov	eax, DWORD PTR [ecx+52]
	push	22					; 00000016H
	push	esi
	call	eax
	mov	ecx, eax
	add	esp, 20					; 00000014H
; Line 440
	test	ecx, ecx
	jle	$LN28@ssl3_get_m
; Line 445
	add	DWORD PTR [esi+68], ecx
; Line 446
	sub	edi, ecx
	test	edi, edi
	jg	SHORT $LL7@ssl3_get_m
$LN8@ssl3_get_m:
; Line 454
	mov	eax, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [eax+4]
	cmp	BYTE PTR [eax], 20			; 00000014H
	jne	SHORT $LN22@ssl3_get_m
; Line 455
	push	esi
	call	_ssl3_take_mac
	add	esp, 4
$LN22@ssl3_get_m:
; Line 459
	mov	eax, DWORD PTR [esi+68]
	add	eax, 4
	push	eax
	mov	eax, DWORD PTR [esi+60]
	push	DWORD PTR [eax+4]
	push	esi
	call	_ssl3_finish_mac
; Line 460
	mov	ecx, DWORD PTR [esi+100]
	add	esp, 12					; 0000000cH
	test	ecx, ecx
	je	SHORT $LN23@ssl3_get_m
; Line 461
	push	DWORD PTR [esi+104]
	mov	eax, DWORD PTR [esi+68]
	push	esi
	add	eax, 4
	push	eax
	mov	eax, DWORD PTR [esi+60]
	push	DWORD PTR [eax+4]
	push	22					; 00000016H
	push	DWORD PTR [esi]
	push	0
	call	ecx
	add	esp, 28					; 0000001cH
$LN23@ssl3_get_m:
; Line 463
	mov	eax, DWORD PTR _ok$[esp+8]
	pop	edi
	mov	DWORD PTR [eax], 1
; Line 464
	mov	eax, DWORD PTR [esi+68]
	pop	esi
	pop	ebx
; Line 470
	ret	0
_ssl3_get_message ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_do_write
_TEXT	SEGMENT
_s$ = 8							; size = 4
_type$ = 12						; size = 4
_ssl3_do_write PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 132
	push	ebx
; Line 135
	mov	ebx, DWORD PTR _type$[esp]
	push	esi
	mov	esi, DWORD PTR _s$[esp+4]
	push	edi
	mov	eax, DWORD PTR [esi+60]
	push	DWORD PTR [esi+68]
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR [esi+72]
	push	eax
	push	ebx
	push	esi
	call	_ssl3_write_bytes
	mov	edi, eax
	add	esp, 16					; 00000010H
; Line 137
	test	edi, edi
	jns	SHORT $LN2@ssl3_do_wr
; Line 138
	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
; Line 157
	ret	0
$LN2@ssl3_do_wr:
; Line 139
	cmp	ebx, 22					; 00000016H
	jne	SHORT $LN3@ssl3_do_wr
; Line 144
	mov	eax, DWORD PTR [esi+60]
	push	edi
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR [esi+72]
	push	eax
	push	esi
	call	_ssl3_finish_mac
	add	esp, 12					; 0000000cH
$LN3@ssl3_do_wr:
; Line 147
	mov	ecx, DWORD PTR [esi+68]
	cmp	edi, ecx
	jne	SHORT $LN4@ssl3_do_wr
; Line 148
	mov	edx, DWORD PTR [esi+100]
	test	edx, edx
	je	SHORT $LN5@ssl3_do_wr
; Line 149
	push	DWORD PTR [esi+104]
	mov	eax, DWORD PTR [esi+72]
	push	esi
	add	eax, ecx
	push	eax
	mov	eax, DWORD PTR [esi+60]
	push	DWORD PTR [eax+4]
	push	ebx
	push	DWORD PTR [esi]
	push	1
	call	edx
	add	esp, 28					; 0000001cH
$LN5@ssl3_do_wr:
; Line 152
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 157
	ret	0
$LN4@ssl3_do_wr:
; Line 154
	add	DWORD PTR [esi+72], edi
; Line 155
	sub	ecx, edi
	pop	edi
	mov	DWORD PTR [esi+68], ecx
; Line 156
	xor	eax, eax
	pop	esi
	pop	ebx
; Line 157
	ret	0
_ssl3_do_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_send_change_cipher_spec
_TEXT	SEGMENT
_s$ = 8							; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_ssl3_send_change_cipher_spec PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 306
	push	esi
; Line 309
	mov	esi, DWORD PTR _s$[esp]
	mov	eax, DWORD PTR [esi+52]
	cmp	eax, DWORD PTR _a$[esp]
	jne	SHORT $LN2@ssl3_send_
; Line 310
	mov	eax, DWORD PTR [esi+60]
	mov	eax, DWORD PTR [eax+4]
; Line 311
	mov	BYTE PTR [eax], 1
; Line 315
	mov	eax, DWORD PTR _b$[esp]
	mov	DWORD PTR [esi+68], 1
	mov	DWORD PTR [esi+72], 0
	mov	DWORD PTR [esi+52], eax
$LN2@ssl3_send_:
; Line 135
	mov	eax, DWORD PTR [esi+60]
	push	DWORD PTR [esi+68]
	mov	eax, DWORD PTR [eax+4]
	add	eax, DWORD PTR [esi+72]
	push	eax
	push	20					; 00000014H
	push	esi
	call	_ssl3_write_bytes
	add	esp, 16					; 00000010H
; Line 137
	test	eax, eax
	jns	SHORT $LN5@ssl3_send_
; Line 319
	or	eax, -1
	pop	esi
; Line 320
	ret	0
$LN5@ssl3_send_:
; Line 147
	mov	ecx, DWORD PTR [esi+68]
	cmp	eax, ecx
	jne	SHORT $LN7@ssl3_send_
; Line 148
	mov	edx, DWORD PTR [esi+100]
	test	edx, edx
	je	SHORT $LN8@ssl3_send_
; Line 149
	push	DWORD PTR [esi+104]
	mov	eax, DWORD PTR [esi+72]
	push	esi
	add	eax, ecx
	push	eax
	mov	eax, DWORD PTR [esi+60]
	push	DWORD PTR [eax+4]
	push	20					; 00000014H
	push	DWORD PTR [esi]
	push	1
	call	edx
	add	esp, 28					; 0000001cH
$LN8@ssl3_send_:
; Line 319
	mov	eax, 1
	pop	esi
; Line 320
	ret	0
$LN7@ssl3_send_:
; Line 154
	add	DWORD PTR [esi+72], eax
; Line 155
	sub	ecx, eax
	mov	DWORD PTR [esi+68], ecx
; Line 319
	xor	eax, eax
	pop	esi
; Line 320
	ret	0
_ssl3_send_change_cipher_spec ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl3_get_finished
_TEXT	SEGMENT
_ok$ = 8						; size = 4
_s$ = 8							; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_ssl3_get_finished PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 236
	push	esi
; Line 249
	mov	esi, DWORD PTR _s$[esp]
	lea	ecx, DWORD PTR _ok$[esp]
	push	ecx
	push	64					; 00000040H
	push	20					; 00000014H
	push	DWORD PTR _b$[esp+12]
	mov	eax, DWORD PTR [esi+8]
	push	DWORD PTR _a$[esp+16]
	push	esi
	mov	eax, DWORD PTR [eax+48]
	call	eax
	add	esp, 24					; 00000018H
	mov	ecx, eax
; Line 251
	cmp	DWORD PTR _ok$[esp], 0
	je	$LN1@ssl3_get_f
; Line 255
	mov	eax, DWORD PTR [esi+88]
	push	ebx
	push	edi
	cmp	DWORD PTR [eax+384], 0
	jne	SHORT $LN3@ssl3_get_f
; Line 257
	push	257					; 00000101H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	mov	edi, 10					; 0000000aH
	push	154					; 0000009aH
; Line 258
	jmp	SHORT $LN15@ssl3_get_f
$LN3@ssl3_get_f:
; Line 260
	mov	DWORD PTR [eax+384], 0
; Line 263
	mov	eax, DWORD PTR [esi+88]
	mov	ebx, DWORD PTR [eax+824]
; Line 265
	cmp	ebx, ecx
	je	SHORT $LN4@ssl3_get_f
; Line 267
	push	267					; 0000010bH
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	mov	edi, 50					; 00000032H
	push	111					; 0000006fH
; Line 268
	jmp	SHORT $LN15@ssl3_get_f
$LN4@ssl3_get_f:
; Line 271
	push	ebx
	add	eax, 696				; 000002b8H
	push	eax
	push	DWORD PTR [esi+64]
	call	_CRYPTO_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@ssl3_get_f
; Line 273
	push	273					; 00000111H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	mov	edi, 51					; 00000033H
	push	149					; 00000095H
$LN15@ssl3_get_f:
	push	140					; 0000008cH
	push	20					; 00000014H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$f_err$18:
; Line 292
	push	edi
	push	2
	push	esi
	call	_ssl3_send_alert
	add	esp, 12					; 0000000cH
; Line 293
	xor	eax, eax
	pop	edi
	pop	ebx
	pop	esi
; Line 294
	ret	0
$LN5@ssl3_get_f:
; Line 280
	cmp	DWORD PTR [esi+4], 8192			; 00002000H
	jne	SHORT $LN6@ssl3_get_f
; Line 281
	cmp	ebx, 64					; 00000040H
	jle	SHORT $LN10@ssl3_get_f
	push	OFFSET ??_C@_0BF@MDPNEINP@i?5?$DM?$DN?5EVP_MAX_MD_SIZE?$AA@
	push	281					; 00000119H
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN10@ssl3_get_f:
; Line 282
	mov	ecx, DWORD PTR [esi+88]
	push	ebx
	lea	eax, DWORD PTR [ecx+696]
	push	eax
	lea	eax, DWORD PTR [ecx+916]
	push	eax
	call	_memcpy
; Line 283
	mov	eax, DWORD PTR [esi+88]
; Line 286
	add	esp, 12					; 0000000cH
	pop	edi
	mov	BYTE PTR [eax+980], bl
; Line 290
	mov	eax, 1
	pop	ebx
	pop	esi
; Line 294
	ret	0
$LN6@ssl3_get_f:
; Line 285
	cmp	ebx, 64					; 00000040H
	jle	SHORT $LN12@ssl3_get_f
	push	OFFSET ??_C@_0BF@MDPNEINP@i?5?$DM?$DN?5EVP_MAX_MD_SIZE?$AA@
	push	285					; 0000011dH
	push	OFFSET ??_C@_0BA@MMNFJFNM@?4?2ssl?2s3_both?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN12@ssl3_get_f:
; Line 286
	mov	ecx, DWORD PTR [esi+88]
	push	ebx
	lea	eax, DWORD PTR [ecx+696]
	push	eax
	lea	eax, DWORD PTR [ecx+981]
	push	eax
	call	_memcpy
; Line 287
	mov	eax, DWORD PTR [esi+88]
	add	esp, 12					; 0000000cH
	mov	BYTE PTR [eax+1045], bl
; Line 290
	mov	eax, 1
	pop	edi
	pop	ebx
$LN1@ssl3_get_f:
	pop	esi
; Line 294
	ret	0
_ssl3_get_finished ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_verify_alarm_type
_TEXT	SEGMENT
_type$ = 8						; size = 4
_ssl_verify_alarm_type PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 521
	mov	eax, DWORD PTR _type$[esp-4]
	add	eax, -2					; fffffffeH
	cmp	eax, 48					; 00000030H
	ja	SHORT $LN13@ssl_verify
	movzx	eax, BYTE PTR $LN15@ssl_verify[eax]
	jmp	DWORD PTR $LN17@ssl_verify[eax*4]
$LN4@ssl_verify:
; Line 525
	mov	eax, 48					; 00000030H
; Line 574
	ret	0
$LN5@ssl_verify:
; Line 538
	mov	eax, 42					; 0000002aH
; Line 574
	ret	0
$LN6@ssl_verify:
; Line 542
	mov	eax, 51					; 00000033H
; Line 574
	ret	0
$LN7@ssl_verify:
; Line 546
	mov	eax, 45					; 0000002dH
; Line 574
	ret	0
$LN8@ssl_verify:
; Line 549
	mov	eax, 44					; 0000002cH
; Line 574
	ret	0
$LN9@ssl_verify:
; Line 552
	mov	eax, 80					; 00000050H
; Line 574
	ret	0
$LN11@ssl_verify:
; Line 564
	mov	eax, 40					; 00000028H
; Line 574
	ret	0
$LN12@ssl_verify:
; Line 567
	mov	eax, 43					; 0000002bH
; Line 574
	ret	0
$LN13@ssl_verify:
; Line 570
	mov	eax, 46					; 0000002eH
; Line 574
	ret	0
$LN17@ssl_verify:
	DD	$LN4@ssl_verify
	DD	$LN5@ssl_verify
	DD	$LN6@ssl_verify
	DD	$LN7@ssl_verify
	DD	$LN9@ssl_verify
	DD	$LN8@ssl_verify
	DD	$LN12@ssl_verify
	DD	$LN11@ssl_verify
	DD	$LN13@ssl_verify
$LN15@ssl_verify:
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	2
	DB	2
	DB	1
	DB	3
	DB	1
	DB	3
	DB	1
	DB	1
	DB	1
	DB	1
	DB	4
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	5
	DB	0
	DB	0
	DB	6
	DB	1
	DB	1
	DB	8
	DB	8
	DB	8
	DB	8
	DB	0
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	7
_ssl_verify_alarm_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_cert_type
_TEXT	SEGMENT
_x$ = 8							; size = 4
_pkey$ = 12						; size = 4
_ssl_cert_type PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\s3_both.c
; Line 473
	push	ebx
; Line 477
	mov	ebx, DWORD PTR _pkey$[esp]
	push	ebp
	mov	ebp, DWORD PTR _x$[esp+4]
	push	esi
	or	esi, -1
	push	edi
	test	ebx, ebx
	jne	SHORT $LN2@ssl_cert_t
; Line 478
	push	ebp
	call	_X509_get_pubkey
	add	esp, 4
	mov	edi, eax
	jmp	SHORT $LN3@ssl_cert_t
$LN2@ssl_cert_t:
; Line 480
	mov	edi, ebx
$LN3@ssl_cert_t:
; Line 481
	test	edi, edi
	je	$err$26
; Line 484
	mov	eax, DWORD PTR [edi]
; Line 485
	cmp	eax, 6
	jne	SHORT $LN5@ssl_cert_t
; Line 486
	xor	esi, esi
	jmp	SHORT $err$26
$LN5@ssl_cert_t:
; Line 487
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN7@ssl_cert_t
; Line 488
	lea	esi, DWORD PTR [eax-114]
; Line 489
	jmp	SHORT $err$26
$LN7@ssl_cert_t:
; Line 491
	cmp	eax, 408				; 00000198H
	jne	SHORT $LN9@ssl_cert_t
; Line 492
	mov	esi, 5
; Line 493
	jmp	SHORT $err$26
$LN9@ssl_cert_t:
; Line 495
	cmp	eax, 812				; 0000032cH
	je	SHORT $LN13@ssl_cert_t
	cmp	eax, 850				; 00000352H
	je	SHORT $LN13@ssl_cert_t
; Line 497
	cmp	eax, 811				; 0000032bH
	je	SHORT $LN16@ssl_cert_t
	cmp	eax, 851				; 00000353H
	je	SHORT $LN16@ssl_cert_t
; Line 499
	test	ebp, ebp
	je	SHORT $err$26
	cmp	eax, 28					; 0000001cH
	je	SHORT $LN18@ssl_cert_t
	cmp	eax, 920				; 00000398H
	jne	SHORT $err$26
$LN18@ssl_cert_t:
; Line 504
	push	edi
	push	ebp
	call	_X509_certificate_type
	add	esp, 8
; Line 505
	test	eax, 256				; 00000100H
	je	SHORT $LN19@ssl_cert_t
; Line 506
	mov	esi, 3
	jmp	SHORT $err$26
$LN19@ssl_cert_t:
; Line 507
	test	eax, 512				; 00000200H
	je	SHORT $err$26
; Line 508
	mov	esi, 4
	jmp	SHORT $err$26
$LN16@ssl_cert_t:
; Line 498
	mov	esi, 7
	jmp	SHORT $err$26
$LN13@ssl_cert_t:
; Line 496
	mov	esi, 6
$err$26:
; Line 512
	test	ebx, ebx
	jne	SHORT $LN24@ssl_cert_t
; Line 513
	push	edi
	call	_EVP_PKEY_free
	add	esp, 4
$LN24@ssl_cert_t:
; Line 514
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 515
	ret	0
_ssl_cert_type ENDP
_TEXT	ENDS
END

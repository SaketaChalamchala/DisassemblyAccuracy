; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

EXTRN	_rsa_asn1_meths:BYTE
EXTRN	_dsa_asn1_meths:BYTE
EXTRN	_dh_asn1_meth:BYTE
EXTRN	_dhx_asn1_meth:BYTE
EXTRN	_eckey_asn1_meth:BYTE
EXTRN	_hmac_asn1_meth:BYTE
EXTRN	_cmac_asn1_meth:BYTE
_BSS	SEGMENT
_app_methods DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_standard_methods DD FLAT:_rsa_asn1_meths
	DD	FLAT:_rsa_asn1_meths+108
	DD	FLAT:_dh_asn1_meth
	DD	FLAT:_dsa_asn1_meths
	DD	FLAT:_dsa_asn1_meths+108
	DD	FLAT:_dsa_asn1_meths+216
	DD	FLAT:_dsa_asn1_meths+324
	DD	FLAT:_dsa_asn1_meths+432
	DD	FLAT:_eckey_asn1_meth
	DD	FLAT:_hmac_asn1_meth
	DD	FLAT:_cmac_asn1_meth
	DD	FLAT:_dhx_asn1_meth
_DATA	ENDS
PUBLIC	_EVP_PKEY_asn1_get_count
PUBLIC	_EVP_PKEY_asn1_get0
PUBLIC	_EVP_PKEY_asn1_find
PUBLIC	_EVP_PKEY_asn1_find_str
PUBLIC	_EVP_PKEY_asn1_add0
PUBLIC	_EVP_PKEY_asn1_add_alias
PUBLIC	_EVP_PKEY_asn1_get0_info
PUBLIC	_EVP_PKEY_get0_asn1
PUBLIC	_EVP_PKEY_asn1_new
PUBLIC	_EVP_PKEY_asn1_copy
PUBLIC	_EVP_PKEY_asn1_free
PUBLIC	_EVP_PKEY_asn1_set_public
PUBLIC	_EVP_PKEY_asn1_set_private
PUBLIC	_EVP_PKEY_asn1_set_param
PUBLIC	_EVP_PKEY_asn1_set_free
PUBLIC	_EVP_PKEY_asn1_set_ctrl
PUBLIC	_EVP_PKEY_asn1_set_item
PUBLIC	??_C@_0BK@MMNNHMGH@?4?2crypto?2asn1?2ameth_lib?4c?$AA@ ; `string'
EXTRN	__imp___strnicmp:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new:PROC
EXTRN	_sk_find:PROC
EXTRN	_sk_push:PROC
EXTRN	_sk_sort:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_OBJ_bsearch_:PROC
EXTRN	_ENGINE_free:PROC
EXTRN	_ENGINE_get_pkey_asn1_meth:PROC
EXTRN	_ENGINE_pkey_asn1_find_str:PROC
EXTRN	_ENGINE_init:PROC
EXTRN	_ENGINE_get_pkey_asn1_meth_engine:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BK@MMNNHMGH@?4?2crypto?2asn1?2ameth_lib?4c?$AA@
CONST	SEGMENT
??_C@_0BK@MMNNHMGH@?4?2crypto?2asn1?2ameth_lib?4c?$AA@ DB '.\crypto\asn1\'
	DB	'ameth_lib.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_asn1_find
_TEXT	SEGMENT
_t$ = -112						; size = 4
_tmp$ = -108						; size = 108
_type$ = 8						; size = 4
_pkey_asn1_find PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 150
	mov	eax, 112				; 00000070H
	call	__chkstk
; Line 152
	lea	eax, DWORD PTR _tmp$[esp+112]
	mov	DWORD PTR _t$[esp+112], eax
; Line 153
	mov	eax, DWORD PTR _type$[esp+108]
	mov	DWORD PTR _tmp$[esp+112], eax
; Line 154
	mov	eax, DWORD PTR _app_methods
	test	eax, eax
	je	SHORT $LN3@pkey_asn1_
; Line 156
	lea	ecx, DWORD PTR _tmp$[esp+112]
	push	ecx
	push	eax
	call	_sk_find
	add	esp, 8
; Line 157
	test	eax, eax
	js	SHORT $LN3@pkey_asn1_
; Line 158
	push	eax
	push	DWORD PTR _app_methods
	call	_sk_value
	add	esp, 8
; Line 165
	add	esp, 112				; 00000070H
	ret	0
$LN3@pkey_asn1_:
; Line 127
	push	OFFSET _ameth_cmp_BSEARCH_CMP_FN
	push	4
	push	12					; 0000000cH
	lea	eax, DWORD PTR _t$[esp+124]
	push	OFFSET _standard_methods
	push	eax
	call	_OBJ_bsearch_
	add	esp, 20					; 00000014H
; Line 162
	test	eax, eax
	je	SHORT $LN5@pkey_asn1_
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	jne	SHORT $LN1@pkey_asn1_
$LN5@pkey_asn1_:
; Line 163
	xor	eax, eax
$LN1@pkey_asn1_:
; Line 165
	add	esp, 112				; 00000070H
	ret	0
_pkey_asn1_find ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OBJ_bsearch_ameth
_TEXT	SEGMENT
_key$ = 8						; size = 4
_base$ = 12						; size = 4
_num$ = 16						; size = 4
_OBJ_bsearch_ameth PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 127
	push	OFFSET _ameth_cmp_BSEARCH_CMP_FN
	push	4
	push	DWORD PTR _num$[esp+4]
	push	DWORD PTR _base$[esp+8]
	push	DWORD PTR _key$[esp+12]
	call	_OBJ_bsearch_
	add	esp, 20					; 00000014H
; Line 128
	ret	0
_OBJ_bsearch_ameth ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ameth_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_ameth_cmp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 124
	mov	eax, DWORD PTR _a$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _b$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx]
	sub	eax, DWORD PTR [ecx]
; Line 125
	ret	0
_ameth_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ameth_cmp_BSEARCH_CMP_FN
_TEXT	SEGMENT
_a_$ = 8						; size = 4
_b_$ = 12						; size = 4
_ameth_cmp_BSEARCH_CMP_FN PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 124
	mov	eax, DWORD PTR _a_$[esp-4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _b_$[esp-4]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx]
	sub	eax, DWORD PTR [ecx]
; Line 128
	ret	0
_ameth_cmp_BSEARCH_CMP_FN ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_set_item
_TEXT	SEGMENT
_ameth$ = 8						; size = 4
_item_verify$ = 12					; size = 4
_item_sign$ = 16					; size = 4
_EVP_PKEY_asn1_set_item PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 482
	mov	ecx, DWORD PTR _ameth$[esp-4]
	mov	eax, DWORD PTR _item_sign$[esp-4]
	mov	DWORD PTR [ecx+104], eax
; Line 483
	mov	eax, DWORD PTR _item_verify$[esp-4]
	mov	DWORD PTR [ecx+100], eax
; Line 484
	ret	0
_EVP_PKEY_asn1_set_item ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_set_ctrl
_TEXT	SEGMENT
_ameth$ = 8						; size = 4
_pkey_ctrl$ = 12					; size = 4
_EVP_PKEY_asn1_set_ctrl PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 465
	mov	eax, DWORD PTR _ameth$[esp-4]
	mov	ecx, DWORD PTR _pkey_ctrl$[esp-4]
	mov	DWORD PTR [eax+88], ecx
; Line 466
	ret	0
_EVP_PKEY_asn1_set_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_set_free
_TEXT	SEGMENT
_ameth$ = 8						; size = 4
_pkey_free$ = 12					; size = 4
_EVP_PKEY_asn1_set_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 458
	mov	eax, DWORD PTR _ameth$[esp-4]
	mov	ecx, DWORD PTR _pkey_free$[esp-4]
	mov	DWORD PTR [eax+84], ecx
; Line 459
	ret	0
_EVP_PKEY_asn1_set_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_set_param
_TEXT	SEGMENT
_ameth$ = 8						; size = 4
_param_decode$ = 12					; size = 4
_param_encode$ = 16					; size = 4
_param_missing$ = 20					; size = 4
_param_copy$ = 24					; size = 4
_param_cmp$ = 28					; size = 4
_param_print$ = 32					; size = 4
_EVP_PKEY_asn1_set_param PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 447
	mov	ecx, DWORD PTR _ameth$[esp-4]
	mov	eax, DWORD PTR _param_decode$[esp-4]
	mov	DWORD PTR [ecx+56], eax
; Line 448
	mov	eax, DWORD PTR _param_encode$[esp-4]
	mov	DWORD PTR [ecx+60], eax
; Line 449
	mov	eax, DWORD PTR _param_missing$[esp-4]
	mov	DWORD PTR [ecx+64], eax
; Line 450
	mov	eax, DWORD PTR _param_copy$[esp-4]
	mov	DWORD PTR [ecx+68], eax
; Line 451
	mov	eax, DWORD PTR _param_cmp$[esp-4]
	mov	DWORD PTR [ecx+72], eax
; Line 452
	mov	eax, DWORD PTR _param_print$[esp-4]
	mov	DWORD PTR [ecx+76], eax
; Line 453
	ret	0
_EVP_PKEY_asn1_set_param ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_set_private
_TEXT	SEGMENT
_ameth$ = 8						; size = 4
_priv_decode$ = 12					; size = 4
_priv_encode$ = 16					; size = 4
_priv_print$ = 20					; size = 4
_EVP_PKEY_asn1_set_private PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 427
	mov	ecx, DWORD PTR _ameth$[esp-4]
	mov	eax, DWORD PTR _priv_decode$[esp-4]
	mov	DWORD PTR [ecx+36], eax
; Line 428
	mov	eax, DWORD PTR _priv_encode$[esp-4]
	mov	DWORD PTR [ecx+40], eax
; Line 429
	mov	eax, DWORD PTR _priv_print$[esp-4]
	mov	DWORD PTR [ecx+44], eax
; Line 430
	ret	0
_EVP_PKEY_asn1_set_private ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_set_public
_TEXT	SEGMENT
_ameth$ = 8						; size = 4
_pub_decode$ = 12					; size = 4
_pub_encode$ = 16					; size = 4
_pub_cmp$ = 20						; size = 4
_pub_print$ = 24					; size = 4
_pkey_size$ = 28					; size = 4
_pkey_bits$ = 32					; size = 4
_EVP_PKEY_asn1_set_public PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 408
	mov	ecx, DWORD PTR _ameth$[esp-4]
	mov	eax, DWORD PTR _pub_decode$[esp-4]
	mov	DWORD PTR [ecx+20], eax
; Line 409
	mov	eax, DWORD PTR _pub_encode$[esp-4]
	mov	DWORD PTR [ecx+24], eax
; Line 410
	mov	eax, DWORD PTR _pub_cmp$[esp-4]
	mov	DWORD PTR [ecx+28], eax
; Line 411
	mov	eax, DWORD PTR _pub_print$[esp-4]
	mov	DWORD PTR [ecx+32], eax
; Line 412
	mov	eax, DWORD PTR _pkey_size$[esp-4]
	mov	DWORD PTR [ecx+48], eax
; Line 413
	mov	eax, DWORD PTR _pkey_bits$[esp-4]
	mov	DWORD PTR [ecx+52], eax
; Line 414
	ret	0
_EVP_PKEY_asn1_set_public ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_free
_TEXT	SEGMENT
_ameth$ = 8						; size = 4
_EVP_PKEY_asn1_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 385
	push	esi
; Line 386
	mov	esi, DWORD PTR _ameth$[esp]
	test	esi, esi
	je	SHORT $LN2@EVP_PKEY_a
	test	BYTE PTR [esi+8], 2
	je	SHORT $LN2@EVP_PKEY_a
; Line 387
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_a
; Line 388
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@EVP_PKEY_a:
; Line 389
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN4@EVP_PKEY_a
; Line 390
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN4@EVP_PKEY_a:
; Line 391
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN2@EVP_PKEY_a:
	pop	esi
; Line 393
	ret	0
_EVP_PKEY_asn1_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_copy
_TEXT	SEGMENT
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_EVP_PKEY_asn1_copy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 354
	mov	edx, DWORD PTR _src$[esp-4]
	mov	ecx, DWORD PTR _dst$[esp-4]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax
; Line 355
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
; Line 356
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx+28], eax
; Line 357
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+32], eax
; Line 359
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+36], eax
; Line 360
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ecx+40], eax
; Line 361
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR [ecx+44], eax
; Line 363
	mov	eax, DWORD PTR [edx+96]
	mov	DWORD PTR [ecx+96], eax
; Line 364
	mov	eax, DWORD PTR [edx+92]
	mov	DWORD PTR [ecx+92], eax
; Line 366
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR [ecx+48], eax
; Line 367
	mov	eax, DWORD PTR [edx+52]
	mov	DWORD PTR [ecx+52], eax
; Line 369
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR [ecx+56], eax
; Line 370
	mov	eax, DWORD PTR [edx+60]
	mov	DWORD PTR [ecx+60], eax
; Line 371
	mov	eax, DWORD PTR [edx+64]
	mov	DWORD PTR [ecx+64], eax
; Line 372
	mov	eax, DWORD PTR [edx+68]
	mov	DWORD PTR [ecx+68], eax
; Line 373
	mov	eax, DWORD PTR [edx+72]
	mov	DWORD PTR [ecx+72], eax
; Line 374
	mov	eax, DWORD PTR [edx+76]
	mov	DWORD PTR [ecx+76], eax
; Line 376
	mov	eax, DWORD PTR [edx+84]
	mov	DWORD PTR [ecx+84], eax
; Line 377
	mov	eax, DWORD PTR [edx+88]
	mov	DWORD PTR [ecx+88], eax
; Line 379
	mov	eax, DWORD PTR [edx+104]
	mov	DWORD PTR [ecx+104], eax
; Line 380
	mov	eax, DWORD PTR [edx+100]
	mov	DWORD PTR [ecx+100], eax
; Line 382
	ret	0
_EVP_PKEY_asn1_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_new
_TEXT	SEGMENT
_id$ = 8						; size = 4
_flags$ = 12						; size = 4
_pem_str$ = 16						; size = 4
_info$ = 20						; size = 4
_EVP_PKEY_asn1_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 287
	push	esi
; Line 289
	push	289					; 00000121H
	push	OFFSET ??_C@_0BK@MMNNHMGH@?4?2crypto?2asn1?2ameth_lib?4c?$AA@
	push	108					; 0000006cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 290
	test	esi, esi
	je	$LN11@EVP_PKEY_a
; Line 293
	push	108					; 0000006cH
	push	0
	push	esi
	call	_memset
; Line 295
	mov	eax, DWORD PTR _id$[esp+12]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi], eax
; Line 296
	mov	DWORD PTR [esi+4], eax
; Line 297
	mov	eax, DWORD PTR _flags$[esp]
	or	eax, 2
	mov	DWORD PTR [esi+8], eax
; Line 299
	mov	eax, DWORD PTR _info$[esp]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_a
; Line 300
	push	eax
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR [esi+16], eax
; Line 301
	test	eax, eax
	je	SHORT $err$16
; Line 303
	jmp	SHORT $LN4@EVP_PKEY_a
$LN3@EVP_PKEY_a:
; Line 304
	mov	DWORD PTR [esi+16], 0
$LN4@EVP_PKEY_a:
; Line 306
	mov	eax, DWORD PTR _pem_str$[esp]
	test	eax, eax
	je	SHORT $LN6@EVP_PKEY_a
; Line 307
	push	eax
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR [esi+12], eax
; Line 308
	test	eax, eax
	jne	SHORT $LN7@EVP_PKEY_a
$err$16:
; Line 386
	test	BYTE PTR [esi+8], 2
	je	SHORT $LN11@EVP_PKEY_a
; Line 387
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN12@EVP_PKEY_a
; Line 388
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN12@EVP_PKEY_a:
; Line 389
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN13@EVP_PKEY_a
; Line 390
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN13@EVP_PKEY_a:
; Line 391
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN11@EVP_PKEY_a:
; Line 346
	xor	eax, eax
	pop	esi
; Line 348
	ret	0
$LN6@EVP_PKEY_a:
; Line 311
	mov	DWORD PTR [esi+12], 0
$LN7@EVP_PKEY_a:
; Line 313
	mov	DWORD PTR [esi+20], 0
; Line 341
	mov	eax, esi
	mov	DWORD PTR [esi+24], 0
	mov	DWORD PTR [esi+28], 0
	mov	DWORD PTR [esi+32], 0
	mov	DWORD PTR [esi+36], 0
	mov	DWORD PTR [esi+40], 0
	mov	DWORD PTR [esi+44], 0
	mov	DWORD PTR [esi+96], 0
	mov	DWORD PTR [esi+92], 0
	mov	DWORD PTR [esi+100], 0
	mov	DWORD PTR [esi+104], 0
	mov	DWORD PTR [esi+48], 0
	mov	DWORD PTR [esi+52], 0
	mov	DWORD PTR [esi+56], 0
	mov	DWORD PTR [esi+60], 0
	mov	DWORD PTR [esi+64], 0
	mov	DWORD PTR [esi+68], 0
	mov	DWORD PTR [esi+72], 0
	mov	DWORD PTR [esi+76], 0
	mov	DWORD PTR [esi+84], 0
	mov	DWORD PTR [esi+88], 0
	pop	esi
; Line 348
	ret	0
_EVP_PKEY_asn1_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_get0_asn1
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_EVP_PKEY_get0_asn1 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 282
	mov	eax, DWORD PTR _pkey$[esp-4]
	mov	eax, DWORD PTR [eax+12]
; Line 283
	ret	0
_EVP_PKEY_get0_asn1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_get0_info
_TEXT	SEGMENT
_ppkey_id$ = 8						; size = 4
_ppkey_base_id$ = 12					; size = 4
_ppkey_flags$ = 16					; size = 4
_pinfo$ = 20						; size = 4
_ppem_str$ = 24						; size = 4
_ameth$ = 28						; size = 4
_EVP_PKEY_asn1_get0_info PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 265
	mov	ecx, DWORD PTR _ameth$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN2@EVP_PKEY_a
; Line 266
	xor	eax, eax
; Line 278
	ret	0
$LN2@EVP_PKEY_a:
; Line 267
	mov	edx, DWORD PTR _ppkey_id$[esp-4]
	test	edx, edx
	je	SHORT $LN3@EVP_PKEY_a
; Line 268
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
$LN3@EVP_PKEY_a:
; Line 269
	mov	edx, DWORD PTR _ppkey_base_id$[esp-4]
	test	edx, edx
	je	SHORT $LN4@EVP_PKEY_a
; Line 270
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN4@EVP_PKEY_a:
; Line 271
	mov	edx, DWORD PTR _ppkey_flags$[esp-4]
	test	edx, edx
	je	SHORT $LN5@EVP_PKEY_a
; Line 272
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx], eax
$LN5@EVP_PKEY_a:
; Line 273
	mov	edx, DWORD PTR _pinfo$[esp-4]
	test	edx, edx
	je	SHORT $LN6@EVP_PKEY_a
; Line 274
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx], eax
$LN6@EVP_PKEY_a:
; Line 275
	mov	edx, DWORD PTR _ppem_str$[esp-4]
	test	edx, edx
	je	SHORT $LN7@EVP_PKEY_a
; Line 276
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx], eax
$LN7@EVP_PKEY_a:
; Line 277
	mov	eax, 1
; Line 278
	ret	0
_EVP_PKEY_asn1_get0_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_add_alias
_TEXT	SEGMENT
_to$ = 8						; size = 4
_from$ = 12						; size = 4
_EVP_PKEY_asn1_add_alias PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 247
	push	esi
; Line 249
	push	0
	push	0
	push	1
	push	DWORD PTR _from$[esp+12]
	call	_EVP_PKEY_asn1_new
	mov	esi, eax
	add	esp, 16					; 00000010H
; Line 250
	test	esi, esi
	je	SHORT $LN11@EVP_PKEY_a
; Line 252
	mov	eax, DWORD PTR _to$[esp]
	mov	DWORD PTR [esi+4], eax
; Line 235
	mov	eax, DWORD PTR _app_methods
	test	eax, eax
	jne	SHORT $LN7@EVP_PKEY_a
; Line 236
	push	OFFSET _ameth_cmp
	call	_sk_new
	add	esp, 4
	mov	DWORD PTR _app_methods, eax
; Line 237
	test	eax, eax
	je	SHORT $LN15@EVP_PKEY_a
$LN7@EVP_PKEY_a:
; Line 240
	push	esi
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@EVP_PKEY_a
; Line 242
	push	DWORD PTR _app_methods
	call	_sk_sort
	add	esp, 4
; Line 257
	mov	eax, 1
	pop	esi
; Line 258
	ret	0
$LN15@EVP_PKEY_a:
; Line 386
	test	BYTE PTR [esi+8], 2
	je	SHORT $LN11@EVP_PKEY_a
; Line 387
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN12@EVP_PKEY_a
; Line 388
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN12@EVP_PKEY_a:
; Line 389
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN13@EVP_PKEY_a
; Line 390
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN13@EVP_PKEY_a:
; Line 391
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN11@EVP_PKEY_a:
; Line 255
	xor	eax, eax
	pop	esi
; Line 258
	ret	0
_EVP_PKEY_asn1_add_alias ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_add0
_TEXT	SEGMENT
_ameth$ = 8						; size = 4
_EVP_PKEY_asn1_add0 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 235
	mov	eax, DWORD PTR _app_methods
	test	eax, eax
	jne	SHORT $LN3@EVP_PKEY_a
; Line 236
	push	OFFSET _ameth_cmp
	call	_sk_new
	add	esp, 4
	mov	DWORD PTR _app_methods, eax
; Line 237
	test	eax, eax
	jne	SHORT $LN3@EVP_PKEY_a
$LN6@EVP_PKEY_a:
; Line 238
	xor	eax, eax
; Line 244
	ret	0
$LN3@EVP_PKEY_a:
; Line 240
	push	DWORD PTR _ameth$[esp-4]
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@EVP_PKEY_a
; Line 242
	push	DWORD PTR _app_methods
	call	_sk_sort
	add	esp, 4
; Line 243
	mov	eax, 1
; Line 244
	ret	0
_EVP_PKEY_asn1_add0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_find_str
_TEXT	SEGMENT
_pe$ = 8						; size = 4
_str$ = 12						; size = 4
_e$1 = 16						; size = 4
_len$ = 16						; size = 4
_EVP_PKEY_asn1_find_str PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 203
	mov	eax, DWORD PTR _str$[esp-4]
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR _len$[esp+12]
	cmp	edi, -1
	jne	SHORT $LN5@EVP_PKEY_a
; Line 204
	mov	edi, eax
	lea	ecx, DWORD PTR [edi+1]
$LL23@EVP_PKEY_a:
	mov	al, BYTE PTR [edi]
	inc	edi
	test	al, al
	jne	SHORT $LL23@EVP_PKEY_a
	mov	eax, DWORD PTR _str$[esp+12]
	sub	edi, ecx
$LN5@EVP_PKEY_a:
; Line 205
	mov	ebx, DWORD PTR _pe$[esp+12]
	test	ebx, ebx
	je	SHORT $LN6@EVP_PKEY_a
; Line 208
	push	edi
	push	eax
	lea	eax, DWORD PTR _e$1[esp+20]
	push	eax
	call	_ENGINE_pkey_asn1_find_str
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 209
	test	ebp, ebp
	je	SHORT $LN7@EVP_PKEY_a
; Line 213
	push	DWORD PTR _e$1[esp+12]
	call	_ENGINE_init
; Line 215
	push	DWORD PTR _e$1[esp+16]
	neg	eax
	sbb	esi, esi
	and	esi, ebp
	call	_ENGINE_free
; Line 216
	mov	ecx, DWORD PTR _e$1[esp+20]
	add	esp, 8
; Line 217
	mov	eax, esi
	mov	DWORD PTR [ebx], ecx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 231
	ret	0
$LN7@EVP_PKEY_a:
; Line 220
	mov	DWORD PTR [ebx], 0
$LN6@EVP_PKEY_a:
; Line 222
	xor	esi, esi
$LL4@EVP_PKEY_a:
; Line 133
	mov	ecx, DWORD PTR _app_methods
	mov	eax, 12					; 0000000cH
	test	ecx, ecx
	je	SHORT $LN13@EVP_PKEY_a
; Line 134
	push	ecx
	call	_sk_num
	add	esp, 4
	add	eax, 12					; 0000000cH
$LN13@EVP_PKEY_a:
; Line 222
	cmp	esi, eax
	jge	SHORT $LN3@EVP_PKEY_a
; Line 141
	test	esi, esi
	jns	SHORT $LN16@EVP_PKEY_a
; Line 142
	xor	ebx, ebx
	jmp	SHORT $LN15@EVP_PKEY_a
$LN16@EVP_PKEY_a:
; Line 143
	cmp	esi, 12					; 0000000cH
	jge	SHORT $LN17@EVP_PKEY_a
; Line 144
	mov	ebx, DWORD PTR _standard_methods[esi*4]
	jmp	SHORT $LN15@EVP_PKEY_a
$LN17@EVP_PKEY_a:
; Line 146
	lea	eax, DWORD PTR [esi-12]
	push	eax
	push	DWORD PTR _app_methods
	call	_sk_value
	add	esp, 8
	mov	ebx, eax
$LN15@EVP_PKEY_a:
; Line 224
	test	BYTE PTR [ebx+8], 1
	jne	SHORT $LN2@EVP_PKEY_a
; Line 226
	mov	edx, DWORD PTR [ebx+12]
	mov	ecx, edx
	lea	ebp, DWORD PTR [ecx+1]
$LL24@EVP_PKEY_a:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL24@EVP_PKEY_a
	sub	ecx, ebp
	cmp	ecx, edi
	jne	SHORT $LN2@EVP_PKEY_a
	push	edi
	push	DWORD PTR _str$[esp+16]
	push	edx
	call	DWORD PTR __imp___strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN20@EVP_PKEY_a
$LN2@EVP_PKEY_a:
; Line 222
	inc	esi
	jmp	SHORT $LL4@EVP_PKEY_a
$LN20@EVP_PKEY_a:
	pop	edi
	pop	esi
	pop	ebp
; Line 228
	mov	eax, ebx
	pop	ebx
; Line 231
	ret	0
$LN3@EVP_PKEY_a:
	pop	edi
	pop	esi
	pop	ebp
; Line 230
	xor	eax, eax
	pop	ebx
; Line 231
	ret	0
_EVP_PKEY_asn1_find_str ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_find
_TEXT	SEGMENT
_tmp$1 = -108						; size = 108
_pe$ = 8						; size = 4
_t$2 = 12						; size = 4
_type$ = 12						; size = 4
_EVP_PKEY_asn1_find PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 174
	mov	eax, 108				; 0000006cH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR _type$[esp+116]
	npad	12
$LL2@EVP_PKEY_a:
; Line 152
	lea	eax, DWORD PTR _tmp$1[esp+120]
; Line 153
	mov	DWORD PTR _tmp$1[esp+120], edi
	mov	DWORD PTR _t$2[esp+116], eax
; Line 154
	mov	eax, DWORD PTR _app_methods
	test	eax, eax
	je	SHORT $LN12@EVP_PKEY_a
; Line 156
	lea	ecx, DWORD PTR _tmp$1[esp+120]
	push	ecx
	push	eax
	call	_sk_find
	add	esp, 8
; Line 157
	test	eax, eax
	js	SHORT $LN12@EVP_PKEY_a
; Line 158
	push	eax
	push	DWORD PTR _app_methods
	call	_sk_value
	add	esp, 8
	mov	esi, eax
	jmp	SHORT $LN10@EVP_PKEY_a
$LN12@EVP_PKEY_a:
; Line 127
	push	OFFSET _ameth_cmp_BSEARCH_CMP_FN
	push	4
	push	12					; 0000000cH
	lea	eax, DWORD PTR _t$2[esp+128]
	push	OFFSET _standard_methods
	push	eax
	call	_OBJ_bsearch_
	add	esp, 20					; 00000014H
; Line 162
	test	eax, eax
	je	SHORT $LN14@EVP_PKEY_a
	mov	esi, DWORD PTR [eax]
	test	esi, esi
	je	SHORT $LN14@EVP_PKEY_a
$LN10@EVP_PKEY_a:
; Line 179
	test	esi, esi
	je	SHORT $LN19@EVP_PKEY_a
	test	BYTE PTR [esi+8], 1
	je	SHORT $LN19@EVP_PKEY_a
; Line 181
	mov	edi, DWORD PTR [esi+4]
; Line 182
	jmp	SHORT $LL2@EVP_PKEY_a
$LN14@EVP_PKEY_a:
; Line 163
	xor	esi, esi
$LN19@EVP_PKEY_a:
; Line 183
	mov	ebx, DWORD PTR _pe$[esp+116]
	test	ebx, ebx
	je	SHORT $LN7@EVP_PKEY_a
; Line 187
	push	edi
	call	_ENGINE_get_pkey_asn1_meth_engine
	add	esp, 4
; Line 188
	test	eax, eax
	je	SHORT $LN8@EVP_PKEY_a
; Line 190
	push	edi
	push	eax
	mov	DWORD PTR [ebx], eax
	call	_ENGINE_get_pkey_asn1_meth
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
; Line 196
	add	esp, 108				; 0000006cH
	ret	0
$LN8@EVP_PKEY_a:
; Line 193
	mov	DWORD PTR [ebx], 0
$LN7@EVP_PKEY_a:
	pop	edi
; Line 195
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 196
	add	esp, 108				; 0000006cH
	ret	0
_EVP_PKEY_asn1_find ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_get0
_TEXT	SEGMENT
_idx$ = 8						; size = 4
_EVP_PKEY_asn1_get0 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 141
	mov	eax, DWORD PTR _idx$[esp-4]
	test	eax, eax
	jns	SHORT $LN2@EVP_PKEY_a
; Line 142
	xor	eax, eax
; Line 147
	ret	0
$LN2@EVP_PKEY_a:
; Line 143
	cmp	eax, 12					; 0000000cH
	jge	SHORT $LN3@EVP_PKEY_a
; Line 144
	mov	eax, DWORD PTR _standard_methods[eax*4]
; Line 147
	ret	0
$LN3@EVP_PKEY_a:
; Line 145
	add	eax, -12				; fffffff4H
; Line 146
	push	eax
	push	DWORD PTR _app_methods
	call	_sk_value
	add	esp, 8
; Line 147
	ret	0
_EVP_PKEY_asn1_get0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_asn1_get_count
_TEXT	SEGMENT
_EVP_PKEY_asn1_get_count PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\ameth_lib.c
; Line 133
	mov	eax, DWORD PTR _app_methods
	test	eax, eax
	je	SHORT $LN4@EVP_PKEY_a
; Line 134
	push	eax
	call	_sk_num
	add	esp, 4
	add	eax, 12					; 0000000cH
; Line 136
	ret	0
$LN4@EVP_PKEY_a:
; Line 135
	mov	eax, 12					; 0000000cH
; Line 136
	ret	0
_EVP_PKEY_asn1_get_count ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\v3_akey.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_v3_akey_id
EXTRN	_AUTHORITY_KEYID_it:PROC
CONST	SEGMENT
_v3_akey_id DD	05aH
	DD	04H
	DD	FLAT:_AUTHORITY_KEYID_it
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_i2v_AUTHORITY_KEYID
	DD	FLAT:_v2i_AUTHORITY_KEYID
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	??_C@_05CNHMOIOC@keyid?$AA@			; `string'
PUBLIC	??_C@_06KCELPKEE@serial?$AA@			; `string'
PUBLIC	??_C@_06KHDOHNKC@always?$AA@			; `string'
PUBLIC	??_C@_06EAINIONG@issuer?$AA@			; `string'
PUBLIC	??_C@_0BK@HJDALMFN@?4?2crypto?2x509v3?2v3_akey?4c?$AA@ ; `string'
PUBLIC	??_C@_05DFCJAACA@name?$DN?$AA@			; `string'
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_dup:PROC
EXTRN	_X509_NAME_dup:PROC
EXTRN	_X509_NAME_free:PROC
EXTRN	_X509_get_serialNumber:PROC
EXTRN	_X509_get_issuer_name:PROC
EXTRN	_X509_get_ext_by_NID:PROC
EXTRN	_X509_get_ext:PROC
EXTRN	_AUTHORITY_KEYID_new:PROC
EXTRN	_GENERAL_NAME_new:PROC
EXTRN	_i2v_GENERAL_NAMES:PROC
EXTRN	_X509V3_add_value:PROC
EXTRN	_X509V3_EXT_d2i:PROC
EXTRN	_hex_to_string:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_05DFCJAACA@name?$DN?$AA@
CONST	SEGMENT
??_C@_05DFCJAACA@name?$DN?$AA@ DB 'name=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HJDALMFN@?4?2crypto?2x509v3?2v3_akey?4c?$AA@
CONST	SEGMENT
??_C@_0BK@HJDALMFN@?4?2crypto?2x509v3?2v3_akey?4c?$AA@ DB '.\crypto\x509v'
	DB	'3\v3_akey.c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06EAINIONG@issuer?$AA@
CONST	SEGMENT
??_C@_06EAINIONG@issuer?$AA@ DB 'issuer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KHDOHNKC@always?$AA@
CONST	SEGMENT
??_C@_06KHDOHNKC@always?$AA@ DB 'always', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KCELPKEE@serial?$AA@
CONST	SEGMENT
??_C@_06KCELPKEE@serial?$AA@ DB 'serial', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CNHMOIOC@keyid?$AA@
CONST	SEGMENT
??_C@_05CNHMOIOC@keyid?$AA@ DB 'keyid', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _v2i_AUTHORITY_KEYID
_TEXT	SEGMENT
_keyid$1$ = -17						; size = 1
tv211 = -16						; size = 4
_ikeyid$1$ = -12					; size = 4
_gens$1$ = -8						; size = 4
_serial$1$ = -4						; size = 4
_method$ = 8						; size = 4
_ctx$ = 12						; size = 4
_values$ = 16						; size = 4
_v2i_AUTHORITY_KEYID PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\v3_akey.c
; Line 119
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
	push	ebp
; Line 132
	mov	ebp, DWORD PTR _values$[esp+24]
	xor	bl, bl
	push	esi
	push	edi
	push	ebp
	mov	BYTE PTR _keyid$1$[esp+40], 0
	xor	edi, edi
	mov	DWORD PTR tv211[esp+40], ebx
	mov	DWORD PTR _ikeyid$1$[esp+40], 0
	mov	DWORD PTR _gens$1$[esp+40], 0
	mov	DWORD PTR _serial$1$[esp+40], 0
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN3@v2i_AUTHOR
$LL4@v2i_AUTHOR:
; Line 133
	push	edi
	push	ebp
	call	_sk_value
	mov	esi, eax
	add	esp, 8
; Line 134
	mov	ecx, OFFSET ??_C@_05CNHMOIOC@keyid?$AA@
	mov	edx, DWORD PTR [esi+4]
	mov	eax, edx
	npad	2
$LL31@v2i_AUTHOR:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [ecx]
	jne	SHORT $LN32@v2i_AUTHOR
	test	bl, bl
	je	SHORT $LN33@v2i_AUTHOR
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [ecx+1]
	jne	SHORT $LN32@v2i_AUTHOR
	add	eax, 2
	add	ecx, 2
	test	bl, bl
	jne	SHORT $LL31@v2i_AUTHOR
$LN33@v2i_AUTHOR:
	xor	eax, eax
	jmp	SHORT $LN34@v2i_AUTHOR
$LN32@v2i_AUTHOR:
	sbb	eax, eax
	or	eax, 1
$LN34@v2i_AUTHOR:
	test	eax, eax
	jne	SHORT $LN5@v2i_AUTHOR
; Line 136
	mov	eax, DWORD PTR [esi+8]
	mov	BYTE PTR _keyid$1$[esp+36], 1
	test	eax, eax
	je	$LN48@v2i_AUTHOR
	mov	ecx, OFFSET ??_C@_06KHDOHNKC@always?$AA@
	npad	2
$LL35@v2i_AUTHOR:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN36@v2i_AUTHOR
	test	dl, dl
	je	SHORT $LN37@v2i_AUTHOR
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN36@v2i_AUTHOR
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL35@v2i_AUTHOR
$LN37@v2i_AUTHOR:
	xor	eax, eax
	jmp	SHORT $LN38@v2i_AUTHOR
$LN36@v2i_AUTHOR:
	sbb	eax, eax
	or	eax, 1
$LN38@v2i_AUTHOR:
; Line 138
	mov	ebx, DWORD PTR tv211[esp+36]
	test	eax, eax
	jne	$LN2@v2i_AUTHOR
; Line 137
	mov	BYTE PTR _keyid$1$[esp+36], 2
; Line 138
	jmp	$LN2@v2i_AUTHOR
$LN5@v2i_AUTHOR:
	mov	eax, OFFSET ??_C@_06EAINIONG@issuer?$AA@
$LL39@v2i_AUTHOR:
	mov	cl, BYTE PTR [edx]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN40@v2i_AUTHOR
	test	cl, cl
	je	SHORT $LN41@v2i_AUTHOR
	mov	cl, BYTE PTR [edx+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN40@v2i_AUTHOR
	add	edx, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL39@v2i_AUTHOR
$LN41@v2i_AUTHOR:
	xor	eax, eax
	jmp	SHORT $LN42@v2i_AUTHOR
$LN40@v2i_AUTHOR:
	sbb	eax, eax
	or	eax, 1
$LN42@v2i_AUTHOR:
	test	eax, eax
	jne	$LN8@v2i_AUTHOR
; Line 140
	mov	eax, DWORD PTR [esi+8]
	mov	bl, 1
	mov	DWORD PTR tv211[esp+36], ebx
	test	eax, eax
	je	SHORT $LN2@v2i_AUTHOR
	mov	ecx, OFFSET ??_C@_06KHDOHNKC@always?$AA@
	npad	1
$LL43@v2i_AUTHOR:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN44@v2i_AUTHOR
	test	dl, dl
	je	SHORT $LN45@v2i_AUTHOR
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN44@v2i_AUTHOR
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL43@v2i_AUTHOR
$LN45@v2i_AUTHOR:
	xor	eax, eax
	jmp	SHORT $LN46@v2i_AUTHOR
$LN44@v2i_AUTHOR:
	sbb	eax, eax
	or	eax, 1
$LN46@v2i_AUTHOR:
	test	eax, eax
	movzx	ebx, bl
	mov	eax, 2
	cmove	ebx, eax
	mov	DWORD PTR tv211[esp+36], ebx
	jmp	SHORT $LN2@v2i_AUTHOR
$LN48@v2i_AUTHOR:
	mov	ebx, DWORD PTR tv211[esp+36]
$LN2@v2i_AUTHOR:
; Line 132
	push	ebp
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	$LL4@v2i_AUTHOR
$LN3@v2i_AUTHOR:
; Line 149
	mov	eax, DWORD PTR _ctx$[esp+32]
	test	eax, eax
	je	$LN13@v2i_AUTHOR
	mov	esi, DWORD PTR [eax+4]
	test	esi, esi
	je	$LN12@v2i_AUTHOR
; Line 159
	cmp	BYTE PTR _keyid$1$[esp+36], 0
	je	$LN16@v2i_AUTHOR
; Line 160
	push	-1
	push	82					; 00000052H
	push	esi
	call	_X509_get_ext_by_NID
	add	esp, 12					; 0000000cH
; Line 161
	test	eax, eax
	js	SHORT $LN51@v2i_AUTHOR
	push	eax
	push	esi
	call	_X509_get_ext
	add	esp, 8
	test	eax, eax
	je	SHORT $LN51@v2i_AUTHOR
; Line 162
	push	eax
	call	_X509V3_EXT_d2i
	add	esp, 4
	mov	DWORD PTR _ikeyid$1$[esp+36], eax
	jmp	SHORT $LN15@v2i_AUTHOR
$LN8@v2i_AUTHOR:
; Line 143
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BK@HJDALMFN@?4?2crypto?2x509v3?2v3_akey?4c?$AA@
	push	120					; 00000078H
	push	119					; 00000077H
	push	34					; 00000022H
	call	_ERR_put_error
; Line 144
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_05DFCJAACA@name?$DN?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 32					; 00000020H
; Line 154
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 205
	add	esp, 20					; 00000014H
	ret	0
$LN51@v2i_AUTHOR:
	xor	eax, eax
$LN15@v2i_AUTHOR:
; Line 163
	cmp	BYTE PTR _keyid$1$[esp+36], 2
	jne	SHORT $LN16@v2i_AUTHOR
	test	eax, eax
	jne	SHORT $LN16@v2i_AUTHOR
; Line 164
	push	165					; 000000a5H
	push	OFFSET ??_C@_0BK@HJDALMFN@?4?2crypto?2x509v3?2v3_akey?4c?$AA@
	push	123					; 0000007bH
; Line 166
	jmp	$LN56@v2i_AUTHOR
$LN16@v2i_AUTHOR:
; Line 170
	mov	ebp, DWORD PTR _ikeyid$1$[esp+36]
	test	bl, bl
	je	SHORT $LN19@v2i_AUTHOR
	test	ebp, ebp
	je	SHORT $LN18@v2i_AUTHOR
$LN19@v2i_AUTHOR:
	cmp	bl, 2
	jne	SHORT $LN52@v2i_AUTHOR
$LN18@v2i_AUTHOR:
; Line 171
	push	esi
	call	_X509_get_issuer_name
	push	eax
	call	_X509_NAME_dup
; Line 172
	push	esi
	mov	ebx, eax
	call	_X509_get_serialNumber
	push	eax
	call	_ASN1_STRING_dup
	add	esp, 16					; 00000010H
	mov	DWORD PTR _serial$1$[esp+36], eax
; Line 173
	test	ebx, ebx
	je	SHORT $LN21@v2i_AUTHOR
	test	eax, eax
	jne	SHORT $LN20@v2i_AUTHOR
$LN21@v2i_AUTHOR:
; Line 174
	push	175					; 000000afH
	push	OFFSET ??_C@_0BK@HJDALMFN@?4?2crypto?2x509v3?2v3_akey?4c?$AA@
	push	122					; 0000007aH
$LN57@v2i_AUTHOR:
; Line 187
	push	119					; 00000077H
	push	34					; 00000022H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$59:
; Line 201
	push	ebx
	call	_X509_NAME_free
; Line 202
	mov	eax, DWORD PTR _serial$1$[esp+40]
	push	eax
	call	_ASN1_STRING_free
; Line 203
	push	ebp
	call	_ASN1_STRING_free
	add	esp, 12					; 0000000cH
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 205
	add	esp, 20					; 00000014H
	ret	0
$LN52@v2i_AUTHOR:
	xor	ebx, ebx
$LN20@v2i_AUTHOR:
; Line 180
	call	_AUTHORITY_KEYID_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $err$59
; Line 183
	test	ebx, ebx
	je	SHORT $LN23@v2i_AUTHOR
; Line 186
	call	_sk_new_null
	mov	DWORD PTR _gens$1$[esp+36], eax
	test	eax, eax
	je	SHORT $LN25@v2i_AUTHOR
	call	_GENERAL_NAME_new
	mov	edi, eax
	test	edi, edi
	je	SHORT $LN25@v2i_AUTHOR
	push	edi
	push	DWORD PTR _gens$1$[esp+40]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN25@v2i_AUTHOR
; Line 190
	mov	DWORD PTR [edi], 4
; Line 191
	mov	DWORD PTR [edi+4], ebx
$LN23@v2i_AUTHOR:
; Line 194
	mov	eax, DWORD PTR _gens$1$[esp+36]
	mov	DWORD PTR [esi+4], eax
; Line 195
	mov	eax, DWORD PTR _serial$1$[esp+36]
	pop	edi
	mov	DWORD PTR [esi+8], eax
; Line 198
	mov	eax, esi
	mov	DWORD PTR [esi], ebp
	pop	esi
	pop	ebp
	pop	ebx
; Line 205
	add	esp, 20					; 00000014H
	ret	0
$LN25@v2i_AUTHOR:
; Line 187
	push	187					; 000000bbH
	push	OFFSET ??_C@_0BK@HJDALMFN@?4?2crypto?2x509v3?2v3_akey?4c?$AA@
	push	65					; 00000041H
	jmp	$LN57@v2i_AUTHOR
$LN12@v2i_AUTHOR:
; Line 150
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN13@v2i_AUTHOR
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 205
	add	esp, 20					; 00000014H
; Line 151
	jmp	_AUTHORITY_KEYID_new
$LN13@v2i_AUTHOR:
; Line 152
	push	153					; 00000099H
	push	OFFSET ??_C@_0BK@HJDALMFN@?4?2crypto?2x509v3?2v3_akey?4c?$AA@
	push	121					; 00000079H
$LN56@v2i_AUTHOR:
	push	119					; 00000077H
	push	34					; 00000022H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 154
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 205
	add	esp, 20					; 00000014H
	ret	0
_v2i_AUTHORITY_KEYID ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2v_AUTHORITY_KEYID
_TEXT	SEGMENT
_method$ = 8						; size = 4
_akeyid$ = 12						; size = 4
_extlist$ = 16						; size = 4
_i2v_AUTHORITY_KEYID PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\v3_akey.c
; Line 90
	push	esi
	push	edi
; Line 92
	mov	edi, DWORD PTR _akeyid$[esp+4]
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN2@i2v_AUTHOR
; Line 93
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+8]
	call	_hex_to_string
	mov	esi, eax
; Line 94
	lea	eax, DWORD PTR _extlist$[esp+12]
	push	eax
	push	esi
	push	OFFSET ??_C@_05CNHMOIOC@keyid?$AA@
	call	_X509V3_add_value
; Line 95
	push	esi
	call	_CRYPTO_free
	add	esp, 24					; 00000018H
$LN2@i2v_AUTHOR:
; Line 97
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN7@i2v_AUTHOR
; Line 98
	push	DWORD PTR _extlist$[esp+4]
	push	eax
	push	0
	call	_i2v_GENERAL_NAMES
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _extlist$[esp+4], eax
	jmp	SHORT $LN3@i2v_AUTHOR
$LN7@i2v_AUTHOR:
	mov	eax, DWORD PTR _extlist$[esp+4]
$LN3@i2v_AUTHOR:
; Line 99
	mov	ecx, DWORD PTR [edi+8]
	test	ecx, ecx
	je	SHORT $LN4@i2v_AUTHOR
; Line 100
	push	DWORD PTR [ecx]
	push	DWORD PTR [ecx+8]
	call	_hex_to_string
	mov	esi, eax
; Line 101
	lea	eax, DWORD PTR _extlist$[esp+12]
	push	eax
	push	esi
	push	OFFSET ??_C@_06KCELPKEE@serial?$AA@
	call	_X509V3_add_value
; Line 102
	push	esi
	call	_CRYPTO_free
; Line 104
	mov	eax, DWORD PTR _extlist$[esp+28]
	add	esp, 24					; 00000018H
$LN4@i2v_AUTHOR:
; Line 105
	pop	edi
	pop	esi
	ret	0
_i2v_AUTHORITY_KEYID ENDP
_TEXT	ENDS
END

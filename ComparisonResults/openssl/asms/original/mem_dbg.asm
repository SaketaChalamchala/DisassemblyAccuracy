; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_mh_mode DD	01H DUP (?)
_order	DD	01H DUP (?)
_mh	DD	01H DUP (?)
_amih	DD	01H DUP (?)
_options DD	01H DUP (?)
_num_disable DD	01H DUP (?)
_break_order_num DD 01H DUP (?)
_BSS	ENDS
PUBLIC	_CRYPTO_mem_ctrl
PUBLIC	_CRYPTO_is_mem_check_on
PUBLIC	_CRYPTO_push_info_
PUBLIC	_CRYPTO_pop_info
PUBLIC	_CRYPTO_remove_all_info
PUBLIC	_CRYPTO_dbg_malloc
PUBLIC	_CRYPTO_dbg_realloc
PUBLIC	_CRYPTO_dbg_free
PUBLIC	_CRYPTO_dbg_set_options
PUBLIC	_CRYPTO_dbg_get_options
PUBLIC	_CRYPTO_mem_leaks_fp
PUBLIC	_CRYPTO_mem_leaks
PUBLIC	_CRYPTO_mem_leaks_cb
PUBLIC	??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@	; `string'
PUBLIC	??_C@_0BC@MALIEGMD@?$FL?$CF02d?3?$CF02d?3?$CF02d?$FN?5?$AA@ ; `string'
PUBLIC	??_C@_0BI@OFHOPHMO@?$CF5lu?5file?$DN?$CFs?0?5line?$DN?$CFd?0?5?$AA@ ; `string'
PUBLIC	??_C@_0N@BAIEKLOK@thread?$DN?$CFlu?0?5?$AA@	; `string'
PUBLIC	??_C@_0BK@MHANPPFK@number?$DN?$CFd?0?5address?$DN?$CF08lX?6?$AA@ ; `string'
PUBLIC	??_C@_0CG@LFPKBHEM@?5thread?$DN?$CFlu?0?5file?$DN?$CFs?0?5line?$DN?$CFd?0?5i@ ; `string'
PUBLIC	??_C@_02MBJIFMOJ@?$CC?6?$AA@			; `string'
PUBLIC	??_C@_0BP@JOECODN@?$CFld?5bytes?5leaked?5in?5?$CFd?5chunks?6?$AA@ ; `string'
EXTRN	__imp___localtime64:PROC
EXTRN	__imp___time64:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_THREADID_current:PROC
EXTRN	_CRYPTO_THREADID_cmp:PROC
EXTRN	_CRYPTO_THREADID_cpy:PROC
EXTRN	_CRYPTO_THREADID_hash:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_lh_new:PROC
EXTRN	_lh_free:PROC
EXTRN	_lh_insert:PROC
EXTRN	_lh_delete:PROC
EXTRN	_lh_retrieve:PROC
EXTRN	_lh_doall_arg:PROC
EXTRN	_lh_num_items:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_disabling_threadid DQ 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0BP@JOECODN@?$CFld?5bytes?5leaked?5in?5?$CFd?5chunks?6?$AA@
CONST	SEGMENT
??_C@_0BP@JOECODN@?$CFld?5bytes?5leaked?5in?5?$CFd?5chunks?6?$AA@ DB '%ld'
	DB	' bytes leaked in %d chunks', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02MBJIFMOJ@?$CC?6?$AA@
CONST	SEGMENT
??_C@_02MBJIFMOJ@?$CC?6?$AA@ DB '"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LFPKBHEM@?5thread?$DN?$CFlu?0?5file?$DN?$CFs?0?5line?$DN?$CFd?0?5i@
CONST	SEGMENT
??_C@_0CG@LFPKBHEM@?5thread?$DN?$CFlu?0?5file?$DN?$CFs?0?5line?$DN?$CFd?0?5i@ DB ' '
	DB	'thread=%lu, file=%s, line=%d, info="', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MHANPPFK@number?$DN?$CFd?0?5address?$DN?$CF08lX?6?$AA@
CONST	SEGMENT
??_C@_0BK@MHANPPFK@number?$DN?$CFd?0?5address?$DN?$CF08lX?6?$AA@ DB 'numb'
	DB	'er=%d, address=%08lX', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BAIEKLOK@thread?$DN?$CFlu?0?5?$AA@
CONST	SEGMENT
??_C@_0N@BAIEKLOK@thread?$DN?$CFlu?0?5?$AA@ DB 'thread=%lu, ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OFHOPHMO@?$CF5lu?5file?$DN?$CFs?0?5line?$DN?$CFd?0?5?$AA@
CONST	SEGMENT
??_C@_0BI@OFHOPHMO@?$CF5lu?5file?$DN?$CFs?0?5line?$DN?$CFd?0?5?$AA@ DB '%'
	DB	'5lu file=%s, line=%d, ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MALIEGMD@?$FL?$CF02d?3?$CF02d?3?$CF02d?$FN?5?$AA@
CONST	SEGMENT
??_C@_0BC@MALIEGMD@?$FL?$CF02d?3?$CF02d?3?$CF02d?$FN?5?$AA@ DB '[%02d:%02'
	DB	'd:%02d] ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
CONST	SEGMENT
??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@ DB '.\crypto\mem_dbg.c', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cb_leak_LHASH_DOALL_ARG
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_cb_leak_LHASH_DOALL_ARG PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 817
	mov	eax, DWORD PTR _arg1$[esp-4]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax+12]
	push	DWORD PTR [eax+8]
	push	DWORD PTR [eax+24]
	mov	eax, DWORD PTR _arg2$[esp+16]
	mov	eax, DWORD PTR [eax]
	call	eax
	add	esp, 20					; 00000014H
; Line 820
	ret	0
_cb_leak_LHASH_DOALL_ARG ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cb_leak_doall_arg
_TEXT	SEGMENT
_m$ = 8							; size = 4
_cb$ = 12						; size = 4
_cb_leak_doall_arg PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 817
	mov	eax, DWORD PTR _m$[esp-4]
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax+12]
	push	DWORD PTR [eax+8]
	push	DWORD PTR [eax+24]
	mov	eax, DWORD PTR _cb$[esp+16]
	mov	eax, DWORD PTR [eax]
	call	eax
	add	esp, 20					; 00000014H
; Line 818
	ret	0
_cb_leak_doall_arg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_leak_LHASH_DOALL_ARG
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_print_leak_LHASH_DOALL_ARG PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 711
	jmp	_print_leak_doall_arg
_print_leak_LHASH_DOALL_ARG ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_leak_doall_arg
_TEXT	SEGMENT
_l$GSCopy$1$ = -1040					; size = 4
_ti$ = -1036						; size = 8
_buf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_m$ = 8							; size = 4
_l$ = 12						; size = 4
_print_leak_doall_arg PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 630
	mov	eax, 1040				; 00000410H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1040], eax
	push	ebx
	mov	ebx, DWORD PTR _l$[esp+1040]
	push	esi
	push	edi
	mov	edi, DWORD PTR _m$[esp+1048]
; Line 632
	lea	esi, DWORD PTR _buf$[esp+1052]
	mov	DWORD PTR _l$GSCopy$1$[esp+1052], ebx
; Line 640
	mov	eax, DWORD PTR [edi]
	cmp	eax, DWORD PTR [ebx]
	je	$LN3@print_leak
; Line 643
	test	BYTE PTR _options, 1
	je	SHORT $LN6@print_leak
; Line 644
	lea	eax, DWORD PTR [edi+32]
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 511
	push	eax
	call	DWORD PTR __imp___localtime64
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 646
	push	DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax+8]
	mov	eax, esi
	push	OFFSET ??_C@_0BC@MALIEGMD@?$FL?$CF02d?3?$CF02d?3?$CF02d?$FN?5?$AA@
	push	1024					; 00000400H
	push	eax
	call	_BIO_snprintf
; Line 648
	mov	ecx, esi
	add	esp, 28					; 0000001cH
	lea	edx, DWORD PTR [ecx+1]
$LL18@print_leak:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL18@print_leak
	sub	ecx, edx
	lea	esi, DWORD PTR _buf$[esp+1052]
	add	esi, ecx
$LN6@print_leak:
; Line 651
	push	DWORD PTR [edi+12]
	lea	eax, DWORD PTR _buf$[esp+2080]
	push	DWORD PTR [edi+8]
	sub	eax, esi
	push	DWORD PTR [edi+24]
	push	OFFSET ??_C@_0BI@OFHOPHMO@?$CF5lu?5file?$DN?$CFs?0?5line?$DN?$CFd?0?5?$AA@
	push	eax
	push	esi
	call	_BIO_snprintf
; Line 653
	mov	ecx, esi
	add	esp, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+1]
$LL19@print_leak:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL19@print_leak
	sub	ecx, edx
	add	esi, ecx
; Line 655
	test	BYTE PTR _options, 2
	je	SHORT $LN7@print_leak
; Line 656
	lea	eax, DWORD PTR [edi+16]
	push	eax
	call	_CRYPTO_THREADID_hash
	push	eax
	lea	eax, DWORD PTR _buf$[esp+2084]
	push	OFFSET ??_C@_0N@BAIEKLOK@thread?$DN?$CFlu?0?5?$AA@
	sub	eax, esi
	push	eax
	push	esi
	call	_BIO_snprintf
; Line 658
	mov	ecx, esi
	add	esp, 20					; 00000014H
	lea	edx, DWORD PTR [ecx+1]
$LL20@print_leak:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL20@print_leak
	sub	ecx, edx
	add	esi, ecx
$LN7@print_leak:
; Line 661
	push	ebp
	push	DWORD PTR [edi]
	lea	eax, DWORD PTR _buf$[esp+2084]
	push	DWORD PTR [edi+4]
	sub	eax, esi
	push	OFFSET ??_C@_0BK@MHANPPFK@number?$DN?$CFd?0?5address?$DN?$CF08lX?6?$AA@
	push	eax
	push	esi
	call	_BIO_snprintf
; Line 665
	lea	eax, DWORD PTR _buf$[esp+1076]
	push	eax
	push	DWORD PTR [ebx]
	call	_BIO_puts
; Line 667
	inc	DWORD PTR [ebx+4]
	add	esp, 28					; 0000001cH
; Line 668
	mov	eax, DWORD PTR [edi+4]
; Line 671
	xor	ebp, ebp
	add	DWORD PTR [ebx+8], eax
	mov	esi, DWORD PTR [edi+40]
; Line 672
	test	esi, esi
	je	$LN24@print_leak
; Line 674
	lea	eax, DWORD PTR _ti$[esp+1056]
	push	esi
	push	eax
	call	_CRYPTO_THREADID_cpy
	add	esp, 8
	npad	7
$LL4@print_leak:
; Line 680
	inc	ebp
; Line 681
	lea	eax, DWORD PTR _buf$[esp+1056]
	push	ebp
	push	62					; 0000003eH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 682
	push	DWORD PTR [esi+12]
	push	DWORD PTR [esi+8]
	push	esi
	call	_CRYPTO_THREADID_hash
	add	esp, 4
	push	eax
	mov	eax, 1024				; 00000400H
	sub	eax, ebp
	push	OFFSET ??_C@_0CG@LFPKBHEM@?5thread?$DN?$CFlu?0?5file?$DN?$CFs?0?5line?$DN?$CFd?0?5i@
	push	eax
	lea	eax, DWORD PTR _buf$[esp+1076]
	add	eax, ebp
	push	eax
	call	_BIO_snprintf
; Line 686
	lea	ecx, DWORD PTR _buf$[esp+1080]
	add	esp, 24					; 00000018H
	lea	edx, DWORD PTR [ecx+1]
$LL21@print_leak:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL21@print_leak
; Line 687
	mov	edi, DWORD PTR [esi+16]
	sub	ecx, edx
	mov	edx, edi
	lea	ebx, DWORD PTR [edx+1]
$LL22@print_leak:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL22@print_leak
; Line 688
	mov	eax, 125				; 0000007dH
	sub	edx, ebx
	sub	eax, ecx
	cmp	eax, edx
	jge	SHORT $LN9@print_leak
; Line 689
	mov	eax, 125				; 0000007dH
	sub	eax, ecx
	push	eax
	lea	eax, DWORD PTR _buf$[esp+1060]
	add	eax, ecx
	push	edi
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 690
	mov	eax, 125				; 0000007dH
; Line 691
	jmp	SHORT $LN10@print_leak
$LN9@print_leak:
; Line 692
	mov	eax, 1024				; 00000400H
	sub	eax, ecx
	push	eax
	lea	eax, DWORD PTR _buf$[esp+1060]
	add	eax, ecx
	push	edi
	push	eax
	call	_BUF_strlcpy
; Line 693
	lea	eax, DWORD PTR _buf$[esp+1068]
	add	esp, 12					; 0000000cH
	lea	edx, DWORD PTR [eax+1]
$LL23@print_leak:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL23@print_leak
	sub	eax, edx
$LN10@print_leak:
; Line 695
	mov	ecx, 1024				; 00000400H
	sub	ecx, eax
	push	OFFSET ??_C@_02MBJIFMOJ@?$CC?6?$AA@
	push	ecx
	lea	ecx, DWORD PTR _buf$[esp+1064]
	add	eax, ecx
	push	eax
	call	_BIO_snprintf
; Line 697
	lea	eax, DWORD PTR _buf$[esp+1068]
	push	eax
	mov	eax, DWORD PTR _l$GSCopy$1$[esp+1072]
	push	DWORD PTR [eax]
	call	_BIO_puts
; Line 699
	mov	esi, DWORD PTR [esi+20]
	add	esp, 20					; 00000014H
; Line 701
	test	esi, esi
	je	SHORT $LN24@print_leak
	lea	eax, DWORD PTR _ti$[esp+1056]
	push	eax
	push	esi
	call	_CRYPTO_THREADID_cmp
	add	esp, 8
	test	eax, eax
	je	$LL4@print_leak
$LN24@print_leak:
	pop	ebp
$LN3@print_leak:
; Line 709
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1052]
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1040				; 00000410H
	ret	0
_print_leak_doall_arg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pop_info
_TEXT	SEGMENT
_tmp$ = -28						; size = 28
_pop_info PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 356
	mov	eax, 28					; 0000001cH
	call	__chkstk
; Line 360
	cmp	DWORD PTR _amih, 0
	je	SHORT $LN10@pop_info
; Line 361
	lea	eax, DWORD PTR _tmp$[esp+28]
	push	esi
	push	eax
	call	_CRYPTO_THREADID_current
; Line 362
	lea	eax, DWORD PTR _tmp$[esp+36]
	push	eax
	push	DWORD PTR _amih
	call	_lh_delete
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN11@pop_info
; Line 363
	push	edi
	mov	edi, DWORD PTR [esi+20]
; Line 365
	test	edi, edi
	je	SHORT $LN4@pop_info
; Line 366
	inc	DWORD PTR [edi+24]
; Line 367
	push	edi
	push	DWORD PTR _amih
	call	_lh_insert
	add	esp, 8
$LN4@pop_info:
; Line 378
	dec	DWORD PTR [esi+24]
	cmp	DWORD PTR [esi+24], 0
	jg	SHORT $LN8@pop_info
; Line 379
	mov	DWORD PTR [esi+20], 0
; Line 380
	test	edi, edi
	je	SHORT $LN6@pop_info
; Line 381
	dec	DWORD PTR [edi+24]
$LN6@pop_info:
; Line 382
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN8@pop_info:
; Line 386
	mov	eax, esi
	pop	edi
$LN11@pop_info:
	pop	esi
; Line 387
	add	esp, 28					; 0000001cH
	ret	0
$LN10@pop_info:
; Line 386
	xor	eax, eax
; Line 387
	add	esp, 28					; 0000001cH
	ret	0
_pop_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_info_LHASH_HASH
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_app_info_LHASH_HASH PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 353
	push	esi
; Line 347
	push	DWORD PTR _arg$[esp]
	call	_CRYPTO_THREADID_hash
	mov	esi, eax
	add	esp, 4
; Line 349
	mov	edx, esi
	mov	ecx, esi
	shr	ecx, 4
	shr	edx, 14					; 0000000eH
	imul	eax, ecx, 251
	lea	ecx, DWORD PTR [edx*8]
	sub	ecx, edx
	add	eax, ecx
	imul	ecx, esi, 17851
	pop	esi
	add	eax, ecx
; Line 353
	ret	0
_app_info_LHASH_HASH ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_info_hash
_TEXT	SEGMENT
_a$ = 8							; size = 4
_app_info_hash PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 344
	push	esi
; Line 347
	push	DWORD PTR _a$[esp]
	call	_CRYPTO_THREADID_hash
	mov	esi, eax
	add	esp, 4
; Line 349
	mov	edx, esi
	mov	ecx, esi
	shr	ecx, 4
	shr	edx, 14					; 0000000eH
	imul	eax, ecx, 251
	lea	ecx, DWORD PTR [edx*8]
	sub	ecx, edx
	add	eax, ecx
	imul	ecx, esi, 17851
	pop	esi
	add	eax, ecx
; Line 351
	ret	0
_app_info_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_info_LHASH_COMP
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_app_info_LHASH_COMP PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 337
	jmp	_CRYPTO_THREADID_cmp
_app_info_LHASH_COMP ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_info_cmp
_TEXT	SEGMENT
_a_void$ = 8						; size = 4
_b_void$ = 12						; size = 4
_app_info_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 337
	jmp	_CRYPTO_THREADID_cmp
_app_info_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mem_LHASH_HASH
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_mem_LHASH_HASH PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 326
	mov	eax, DWORD PTR _arg$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 328
	mov	edx, esi
	mov	eax, esi
	shr	edx, 14					; 0000000eH
	shr	eax, 4
	imul	eax, eax, 251
	lea	ecx, DWORD PTR [edx*8]
	sub	ecx, edx
	add	eax, ecx
	imul	ecx, esi, 17851
	pop	esi
	add	eax, ecx
; Line 332
	ret	0
_mem_LHASH_HASH ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mem_hash
_TEXT	SEGMENT
_a$ = 8							; size = 4
_mem_hash PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 326
	mov	eax, DWORD PTR _a$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 328
	mov	edx, esi
	mov	eax, esi
	shr	edx, 14					; 0000000eH
	shr	eax, 4
	imul	eax, eax, 251
	lea	ecx, DWORD PTR [edx*8]
	sub	ecx, edx
	add	eax, ecx
	imul	ecx, esi, 17851
	pop	esi
	add	eax, ecx
; Line 330
	ret	0
_mem_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mem_LHASH_COMP
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_mem_LHASH_COMP PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 316
	mov	eax, DWORD PTR _arg1$[esp-4]
	mov	ecx, DWORD PTR _arg2$[esp-4]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx]
; Line 320
	ret	0
_mem_LHASH_COMP ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mem_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_mem_cmp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 316
	mov	eax, DWORD PTR _a$[esp-4]
	mov	ecx, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx]
; Line 318
	ret	0
_mem_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_info_free
_TEXT	SEGMENT
_inf$ = 8						; size = 4
_app_info_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 199
	push	esi
; Line 200
	mov	esi, DWORD PTR _inf$[esp]
	dec	DWORD PTR [esi+24]
	cmp	DWORD PTR [esi+24], 0
	jg	SHORT $LN2@app_info_f
; Line 201
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN3@app_info_f
; Line 202
	push	eax
	call	_app_info_free
	add	esp, 4
$LN3@app_info_f:
; Line 204
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN2@app_info_f:
	pop	esi
; Line 206
	ret	0
_app_info_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_mem_leaks_cb
_TEXT	SEGMENT
_cb$ = 8						; size = 4
_CRYPTO_mem_leaks_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 824
	cmp	DWORD PTR _mh, 0
	je	SHORT $LN1@CRYPTO_mem
; Line 826
	push	826					; 0000033aH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	27					; 0000001bH
	push	9
	call	_CRYPTO_lock
; Line 827
	lea	eax, DWORD PTR _cb$[esp+12]
	push	eax
	push	OFFSET _cb_leak_LHASH_DOALL_ARG
	push	DWORD PTR _mh
	call	_lh_doall_arg
; Line 829
	push	829					; 0000033dH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	27					; 0000001bH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 44					; 0000002cH
$LN1@CRYPTO_mem:
; Line 830
	ret	0
_CRYPTO_mem_leaks_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_mem_leaks
_TEXT	SEGMENT
_cur$1 = -20						; size = 8
_ml$ = -12						; size = 12
_b$ = 8							; size = 4
_CRYPTO_mem_leaks PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 714
	mov	eax, 20					; 00000014H
	call	__chkstk
; Line 717
	cmp	DWORD PTR _mh, 0
	jne	SHORT $LN2@CRYPTO_mem
	cmp	DWORD PTR _amih, 0
	je	$LN1@CRYPTO_mem
$LN2@CRYPTO_mem:
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 230
	test	BYTE PTR _mh_mode, 1
	je	$LN16@CRYPTO_mem
; Line 232
	lea	eax, DWORD PTR _cur$1[esp+20]
	push	eax
	call	_CRYPTO_THREADID_current
	add	esp, 4
; Line 235
	cmp	DWORD PTR _num_disable, 0
	je	SHORT $LN18@CRYPTO_mem
	lea	eax, DWORD PTR _cur$1[esp+20]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN17@CRYPTO_mem
$LN18@CRYPTO_mem:
; Line 244
	push	244					; 000000f4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 251
	push	251					; 000000fbH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	27					; 0000001bH
	push	9
	call	_CRYPTO_lock
; Line 252
	push	252					; 000000fcH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 253
	and	DWORD PTR _mh_mode, -3			; fffffffdH
; Line 254
	lea	eax, DWORD PTR _cur$1[esp+68]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cpy
	add	esp, 56					; 00000038H
$LN17@CRYPTO_mem:
; Line 256
	inc	DWORD PTR _num_disable
$LN16@CRYPTO_mem:
	push	esi
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 725
	mov	eax, DWORD PTR _mh
; Line 274
	add	esp, 16					; 00000010H
; Line 722
	mov	esi, DWORD PTR _b$[esp+20]
	mov	DWORD PTR _ml$[esp+24], esi
; Line 723
	mov	DWORD PTR _ml$[esp+32], 0
; Line 724
	mov	DWORD PTR _ml$[esp+28], 0
; Line 725
	test	eax, eax
	je	SHORT $LN4@CRYPTO_mem
; Line 726
	lea	ecx, DWORD PTR _ml$[esp+24]
	push	ecx
	push	OFFSET _print_leak_LHASH_DOALL_ARG
	push	eax
	call	_lh_doall_arg
; Line 727
	mov	eax, DWORD PTR _ml$[esp+40]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@CRYPTO_mem
; Line 728
	push	eax
	push	DWORD PTR _ml$[esp+36]
	push	OFFSET ??_C@_0BP@JOECODN@?$CFld?5bytes?5leaked?5in?5?$CFd?5chunks?6?$AA@
	push	esi
	call	_BIO_printf
; Line 732
	jmp	$LN40@CRYPTO_mem
$LN4@CRYPTO_mem:
; Line 747
	push	747					; 000002ebH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 756
	mov	eax, DWORD PTR _mh
	add	esp, 16					; 00000010H
	mov	esi, DWORD PTR _mh_mode
	mov	DWORD PTR _mh_mode, 0
	test	eax, eax
	je	SHORT $LN6@CRYPTO_mem
; Line 757
	push	eax
	call	_lh_free
	add	esp, 4
; Line 758
	mov	DWORD PTR _mh, 0
$LN6@CRYPTO_mem:
; Line 760
	mov	eax, DWORD PTR _amih
	test	eax, eax
	je	SHORT $LN8@CRYPTO_mem
; Line 761
	push	eax
	call	_lh_num_items
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN8@CRYPTO_mem
; Line 762
	push	DWORD PTR _amih
	call	_lh_free
	add	esp, 4
; Line 763
	mov	DWORD PTR _amih, 0
$LN8@CRYPTO_mem:
; Line 768
	push	768					; 00000300H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	mov	DWORD PTR _mh_mode, esi
	call	_CRYPTO_lock
$LN40@CRYPTO_mem:
	add	esp, 16					; 00000010H
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 260
	mov	eax, DWORD PTR _mh_mode
	add	esp, 16					; 00000010H
	pop	esi
	test	al, 1
	je	SHORT $LN37@CRYPTO_mem
; Line 261
	mov	ecx, DWORD PTR _num_disable
	test	ecx, ecx
	je	SHORT $LN37@CRYPTO_mem
; Line 262
	sub	ecx, 1
	mov	DWORD PTR _num_disable, ecx
; Line 263
	jne	SHORT $LN37@CRYPTO_mem
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	or	eax, 2
	push	27					; 0000001bH
	push	10					; 0000000aH
	mov	DWORD PTR _mh_mode, eax
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN37@CRYPTO_mem:
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN1@CRYPTO_mem:
; Line 771
	add	esp, 20					; 00000014H
	ret	0
_CRYPTO_mem_leaks ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_mem_leaks_fp
_TEXT	SEGMENT
_cur$1 = -8						; size = 8
_fp$ = 8						; size = 4
_CRYPTO_mem_leaks_fp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 775
	mov	eax, 8
	call	__chkstk
; Line 778
	cmp	DWORD PTR _mh, 0
	je	$LN1@CRYPTO_mem
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 230
	test	BYTE PTR _mh_mode, 1
	je	$LN11@CRYPTO_mem
; Line 232
	lea	eax, DWORD PTR _cur$1[esp+8]
	push	eax
	call	_CRYPTO_THREADID_current
	add	esp, 4
; Line 235
	cmp	DWORD PTR _num_disable, 0
	je	SHORT $LN13@CRYPTO_mem
	lea	eax, DWORD PTR _cur$1[esp+8]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@CRYPTO_mem
$LN13@CRYPTO_mem:
; Line 244
	push	244					; 000000f4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 251
	push	251					; 000000fbH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	27					; 0000001bH
	push	9
	call	_CRYPTO_lock
; Line 252
	push	252					; 000000fcH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 253
	and	DWORD PTR _mh_mode, -3			; fffffffdH
; Line 254
	lea	eax, DWORD PTR _cur$1[esp+56]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cpy
	add	esp, 56					; 00000038H
$LN12@CRYPTO_mem:
; Line 256
	inc	DWORD PTR _num_disable
$LN11@CRYPTO_mem:
	push	esi
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 786
	call	_BIO_s_file
	push	eax
	call	_BIO_new
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
; Line 786
	mov	esi, eax
; Line 212
	call	_CRYPTO_lock
; Line 260
	mov	eax, DWORD PTR _mh_mode
	add	esp, 36					; 00000024H
	test	al, 1
	je	SHORT $LN32@CRYPTO_mem
; Line 261
	mov	ecx, DWORD PTR _num_disable
	test	ecx, ecx
	je	SHORT $LN32@CRYPTO_mem
; Line 262
	sub	ecx, 1
	mov	DWORD PTR _num_disable, ecx
; Line 263
	jne	SHORT $LN32@CRYPTO_mem
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	or	eax, 2
	push	27					; 0000001bH
	push	10					; 0000000aH
	mov	DWORD PTR _mh_mode, eax
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN32@CRYPTO_mem:
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 788
	test	esi, esi
	je	SHORT $LN35@CRYPTO_mem
; Line 790
	push	DWORD PTR _fp$[esp+8]
	push	0
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
; Line 791
	push	esi
	call	_CRYPTO_mem_leaks
; Line 792
	push	esi
	call	_BIO_free
	add	esp, 24					; 00000018H
$LN35@CRYPTO_mem:
	pop	esi
$LN1@CRYPTO_mem:
; Line 793
	add	esp, 8
	ret	0
_CRYPTO_mem_leaks_fp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_dbg_get_options
_TEXT	SEGMENT
_CRYPTO_dbg_get_options PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 302
	mov	eax, DWORD PTR _options
; Line 303
	ret	0
_CRYPTO_dbg_get_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_dbg_set_options
_TEXT	SEGMENT
_bits$ = 8						; size = 4
_CRYPTO_dbg_set_options PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 297
	mov	eax, DWORD PTR _bits$[esp-4]
	mov	DWORD PTR _options, eax
; Line 298
	ret	0
_CRYPTO_dbg_set_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_dbg_free
_TEXT	SEGMENT
_m$ = -48						; size = 48
_addr$ = 8						; size = 4
_before_p$ = 12						; size = 4
_CRYPTO_dbg_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 544
	mov	eax, 48					; 00000030H
	call	__chkstk
; Line 547
	cmp	DWORD PTR _before_p$[esp+44], 0
	jne	$LN6@CRYPTO_dbg
; Line 549
	push	esi
	mov	esi, DWORD PTR _addr$[esp+48]
	test	esi, esi
	je	$LN26@CRYPTO_dbg
; Line 552
	call	_CRYPTO_is_mem_check_on
	test	eax, eax
	je	$LN26@CRYPTO_dbg
	cmp	DWORD PTR _mh, 0
	je	$LN26@CRYPTO_dbg
; Line 553
	push	3
	call	_CRYPTO_mem_ctrl
; Line 556
	lea	eax, DWORD PTR _m$[esp+56]
	mov	DWORD PTR _m$[esp+56], esi
	push	eax
	push	DWORD PTR _mh
	call	_lh_delete
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 557
	test	esi, esi
	je	SHORT $LN7@CRYPTO_dbg
; Line 562
	mov	eax, DWORD PTR [esi+40]
	test	eax, eax
	je	SHORT $LN8@CRYPTO_dbg
; Line 563
	push	eax
	call	_app_info_free
	add	esp, 4
$LN8@CRYPTO_dbg:
; Line 564
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN7@CRYPTO_dbg:
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 260
	mov	eax, DWORD PTR _mh_mode
	add	esp, 16					; 00000010H
	test	al, 1
	je	SHORT $LN23@CRYPTO_dbg
; Line 261
	mov	ecx, DWORD PTR _num_disable
	test	ecx, ecx
	je	SHORT $LN23@CRYPTO_dbg
; Line 262
	sub	ecx, 1
	mov	DWORD PTR _num_disable, ecx
; Line 263
	jne	SHORT $LN23@CRYPTO_dbg
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	or	eax, 2
	push	27					; 0000001bH
	push	10					; 0000000aH
	mov	DWORD PTR _mh_mode, eax
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN23@CRYPTO_dbg:
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN26@CRYPTO_dbg:
	pop	esi
$LN6@CRYPTO_dbg:
; Line 574
	add	esp, 48					; 00000030H
	ret	0
_CRYPTO_dbg_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_dbg_realloc
_TEXT	SEGMENT
_m$ = -48						; size = 48
_addr1$ = 8						; size = 4
_addr2$ = 12						; size = 4
_num$ = 16						; size = 4
_file$ = 20						; size = 4
_line$ = 24						; size = 4
_before_p$ = 28						; size = 4
_CRYPTO_dbg_realloc PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 578
	mov	eax, 48					; 00000030H
	call	__chkstk
; Line 587
	sub	DWORD PTR _before_p$[esp+44], 1
	jne	$LN8@CRYPTO_dbg
; Line 591
	push	esi
	mov	esi, DWORD PTR _addr2$[esp+48]
	test	esi, esi
	je	$LN26@CRYPTO_dbg
; Line 594
	push	edi
	mov	edi, DWORD PTR _addr1$[esp+52]
	test	edi, edi
	jne	SHORT $LN7@CRYPTO_dbg
; Line 595
	push	129					; 00000081H
	push	DWORD PTR _line$[esp+56]
	push	DWORD PTR _file$[esp+60]
	push	DWORD PTR _num$[esp+64]
	push	esi
	call	_CRYPTO_dbg_malloc
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
; Line 621
	add	esp, 48					; 00000030H
	ret	0
$LN7@CRYPTO_dbg:
; Line 599
	call	_CRYPTO_is_mem_check_on
	test	eax, eax
	je	$LN27@CRYPTO_dbg
; Line 600
	push	3
	call	_CRYPTO_mem_ctrl
; Line 603
	lea	eax, DWORD PTR _m$[esp+60]
	mov	DWORD PTR _m$[esp+60], edi
	push	eax
	push	DWORD PTR _mh
	call	_lh_delete
	add	esp, 12					; 0000000cH
; Line 604
	test	eax, eax
	je	SHORT $LN9@CRYPTO_dbg
; Line 611
	mov	ecx, DWORD PTR _num$[esp+52]
; Line 612
	push	eax
	push	DWORD PTR _mh
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], ecx
	call	_lh_insert
	add	esp, 8
$LN9@CRYPTO_dbg:
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 260
	mov	eax, DWORD PTR _mh_mode
	add	esp, 16					; 00000010H
	test	al, 1
	je	SHORT $LN23@CRYPTO_dbg
; Line 261
	mov	ecx, DWORD PTR _num_disable
	test	ecx, ecx
	je	SHORT $LN23@CRYPTO_dbg
; Line 262
	sub	ecx, 1
	mov	DWORD PTR _num_disable, ecx
; Line 263
	jne	SHORT $LN23@CRYPTO_dbg
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	or	eax, 2
	push	27					; 0000001bH
	push	10					; 0000000aH
	mov	DWORD PTR _mh_mode, eax
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN23@CRYPTO_dbg:
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN27@CRYPTO_dbg:
	pop	edi
$LN26@CRYPTO_dbg:
	pop	esi
$LN8@CRYPTO_dbg:
; Line 621
	add	esp, 48					; 00000030H
	ret	0
_CRYPTO_dbg_realloc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_dbg_malloc
_TEXT	SEGMENT
_tmp$ = -28						; size = 28
_addr$ = 8						; size = 4
_num$ = 12						; size = 4
_file$ = 16						; size = 4
_line$ = 20						; size = 4
_before_p$ = 24						; size = 4
_CRYPTO_dbg_malloc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 468
	mov	eax, 28					; 0000001cH
	call	__chkstk
; Line 472
	mov	eax, DWORD PTR _before_p$[esp+24]
	and	eax, 127				; 0000007fH
	sub	eax, 1
	jne	$LN7@CRYPTO_dbg
; Line 476
	push	edi
	mov	edi, DWORD PTR _addr$[esp+28]
	test	edi, edi
	je	$LN52@CRYPTO_dbg
; Line 479
	call	_CRYPTO_is_mem_check_on
	test	eax, eax
	je	$LN52@CRYPTO_dbg
; Line 480
	push	esi
	push	3
	call	_CRYPTO_mem_ctrl
; Line 481
	push	481					; 000001e1H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	48					; 00000030H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 16					; 00000010H
	test	esi, esi
	jne	SHORT $LN8@CRYPTO_dbg
; Line 482
	push	edi
	call	_CRYPTO_free
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
	add	esp, 20					; 00000014H
; Line 485
	jmp	$LN58@CRYPTO_dbg
$LN8@CRYPTO_dbg:
; Line 487
	cmp	DWORD PTR _mh, 0
	jne	SHORT $LN10@CRYPTO_dbg
; Line 488
	push	OFFSET _mem_LHASH_COMP
	push	OFFSET _mem_LHASH_HASH
	call	_lh_new
	add	esp, 8
	mov	DWORD PTR _mh, eax
	test	eax, eax
	jne	SHORT $LN10@CRYPTO_dbg
; Line 489
	push	edi
	call	_CRYPTO_free
; Line 490
	push	esi
	call	_CRYPTO_free
	add	esp, 8
; Line 492
	jmp	$err$60
$LN10@CRYPTO_dbg:
; Line 497
	mov	eax, DWORD PTR _file$[esp+32]
; Line 500
	mov	ecx, DWORD PTR _options
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR _line$[esp+32]
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR _num$[esp+32]
	mov	DWORD PTR [esi], edi
	mov	DWORD PTR [esi+4], eax
	test	cl, 2
	je	SHORT $LN11@CRYPTO_dbg
; Line 501
	lea	eax, DWORD PTR [esi+16]
	push	eax
	call	_CRYPTO_THREADID_current
	mov	ecx, DWORD PTR _options
	add	esp, 4
	jmp	SHORT $LN12@CRYPTO_dbg
$LN11@CRYPTO_dbg:
	xorps	xmm0, xmm0
; Line 503
	movq	QWORD PTR [esi+16], xmm0
$LN12@CRYPTO_dbg:
; Line 505
	mov	eax, DWORD PTR _order
	cmp	eax, DWORD PTR _break_order_num
	jne	SHORT $LN13@CRYPTO_dbg
; Line 507
	mov	DWORD PTR [esi+24], eax
$LN13@CRYPTO_dbg:
; Line 509
	mov	DWORD PTR [esi+24], eax
	inc	eax
	mov	DWORD PTR _order, eax
; Line 514
	test	cl, 1
	je	SHORT $LN14@CRYPTO_dbg
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	push	0
	call	DWORD PTR __imp___time64
	add	esp, 4
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 515
	mov	DWORD PTR [esi+32], eax
	mov	DWORD PTR [esi+36], edx
	jmp	SHORT $LN15@CRYPTO_dbg
$LN14@CRYPTO_dbg:
; Line 517
	mov	DWORD PTR [esi+32], 0
	mov	DWORD PTR [esi+36], 0
$LN15@CRYPTO_dbg:
; Line 519
	lea	eax, DWORD PTR _tmp$[esp+36]
	push	eax
	call	_CRYPTO_THREADID_current
; Line 522
	mov	eax, DWORD PTR _amih
	add	esp, 4
	mov	DWORD PTR [esi+40], 0
	test	eax, eax
	je	SHORT $LN16@CRYPTO_dbg
	lea	ecx, DWORD PTR _tmp$[esp+36]
	push	ecx
	push	eax
	call	_lh_retrieve
	add	esp, 8
	test	eax, eax
	je	SHORT $LN16@CRYPTO_dbg
; Line 523
	mov	DWORD PTR [esi+40], eax
; Line 524
	inc	DWORD PTR [eax+24]
$LN16@CRYPTO_dbg:
; Line 527
	push	esi
	push	DWORD PTR _mh
	call	_lh_insert
	add	esp, 8
	test	eax, eax
	je	SHORT $err$60
; Line 529
	mov	ecx, DWORD PTR [eax+40]
	test	ecx, ecx
	je	SHORT $LN18@CRYPTO_dbg
; Line 530
	dec	DWORD PTR [ecx+24]
$LN18@CRYPTO_dbg:
; Line 532
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$err$60:
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN58@CRYPTO_dbg:
; Line 260
	mov	eax, DWORD PTR _mh_mode
	test	al, 1
	je	SHORT $LN49@CRYPTO_dbg
; Line 261
	mov	ecx, DWORD PTR _num_disable
	test	ecx, ecx
	je	SHORT $LN49@CRYPTO_dbg
; Line 262
	sub	ecx, 1
	mov	DWORD PTR _num_disable, ecx
; Line 263
	jne	SHORT $LN49@CRYPTO_dbg
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	27					; 0000001bH
	or	eax, 2
	push	10					; 0000000aH
	mov	DWORD PTR _mh_mode, eax
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN49@CRYPTO_dbg:
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
	pop	esi
$LN52@CRYPTO_dbg:
	pop	edi
$LN7@CRYPTO_dbg:
; Line 541
	add	esp, 28					; 0000001cH
	ret	0
_CRYPTO_dbg_malloc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_remove_all_info
_TEXT	SEGMENT
_cur$1 = -36						; size = 8
_tmp$2 = -28						; size = 28
_CRYPTO_remove_all_info PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 451
	mov	eax, 36					; 00000024H
	call	__chkstk
	push	ebx
; Line 452
	xor	ebx, ebx
; Line 454
	call	_CRYPTO_is_mem_check_on
	test	eax, eax
	je	$LN46@CRYPTO_rem
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 230
	test	BYTE PTR _mh_mode, 1
	je	$LN12@CRYPTO_rem
; Line 232
	lea	eax, DWORD PTR _cur$1[esp+40]
	push	eax
	call	_CRYPTO_THREADID_current
	add	esp, 4
; Line 235
	cmp	DWORD PTR _num_disable, ebx
	je	SHORT $LN14@CRYPTO_rem
	lea	eax, DWORD PTR _cur$1[esp+40]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN13@CRYPTO_rem
$LN14@CRYPTO_rem:
; Line 244
	push	244					; 000000f4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 251
	push	251					; 000000fbH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	27					; 0000001bH
	push	9
	call	_CRYPTO_lock
; Line 252
	push	252					; 000000fcH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 253
	and	DWORD PTR _mh_mode, -3			; fffffffdH
; Line 254
	lea	eax, DWORD PTR _cur$1[esp+88]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cpy
	add	esp, 56					; 00000038H
$LN13@CRYPTO_rem:
; Line 256
	inc	DWORD PTR _num_disable
$LN12@CRYPTO_rem:
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
	push	esi
	push	edi
	npad	8
$LL2@CRYPTO_rem:
; Line 360
	cmp	DWORD PTR _amih, 0
	je	SHORT $LN3@CRYPTO_rem
; Line 361
	lea	eax, DWORD PTR _tmp$2[esp+48]
	push	eax
	call	_CRYPTO_THREADID_current
; Line 362
	lea	eax, DWORD PTR _tmp$2[esp+52]
	push	eax
	push	DWORD PTR _amih
	call	_lh_delete
	mov	edi, eax
	add	esp, 12					; 0000000cH
	test	edi, edi
	je	SHORT $LN3@CRYPTO_rem
; Line 363
	mov	esi, DWORD PTR [edi+20]
; Line 365
	test	esi, esi
	je	SHORT $LN24@CRYPTO_rem
; Line 366
	inc	DWORD PTR [esi+24]
; Line 367
	push	esi
	push	DWORD PTR _amih
	call	_lh_insert
	add	esp, 8
$LN24@CRYPTO_rem:
; Line 378
	dec	DWORD PTR [edi+24]
	cmp	DWORD PTR [edi+24], 0
	jg	SHORT $LN25@CRYPTO_rem
; Line 379
	mov	DWORD PTR [edi+20], 0
; Line 380
	test	esi, esi
	je	SHORT $LN26@CRYPTO_rem
; Line 381
	dec	DWORD PTR [esi+24]
$LN26@CRYPTO_rem:
; Line 382
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN25@CRYPTO_rem:
; Line 458
	inc	ebx
	jmp	SHORT $LL2@CRYPTO_rem
$LN3@CRYPTO_rem:
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 260
	mov	eax, DWORD PTR _mh_mode
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	test	al, 1
	je	SHORT $LN40@CRYPTO_rem
; Line 261
	mov	ecx, DWORD PTR _num_disable
	test	ecx, ecx
	je	SHORT $LN40@CRYPTO_rem
; Line 262
	sub	ecx, 1
	mov	DWORD PTR _num_disable, ecx
; Line 263
	jne	SHORT $LN40@CRYPTO_rem
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	or	eax, 2
	push	27					; 0000001bH
	push	10					; 0000000aH
	mov	DWORD PTR _mh_mode, eax
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN40@CRYPTO_rem:
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN46@CRYPTO_rem:
; Line 462
	mov	eax, ebx
	pop	ebx
; Line 463
	add	esp, 36					; 00000024H
	ret	0
_CRYPTO_remove_all_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_pop_info
_TEXT	SEGMENT
_cur$1 = -8						; size = 8
_CRYPTO_pop_info PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 436
	mov	eax, 8
	call	__chkstk
; Line 439
	call	_CRYPTO_is_mem_check_on
	test	eax, eax
	je	$LN34@CRYPTO_pop
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 230
	test	BYTE PTR _mh_mode, 1
	je	$LN10@CRYPTO_pop
; Line 232
	lea	eax, DWORD PTR _cur$1[esp+8]
	push	eax
	call	_CRYPTO_THREADID_current
	add	esp, 4
; Line 235
	cmp	DWORD PTR _num_disable, 0
	je	SHORT $LN12@CRYPTO_pop
	lea	eax, DWORD PTR _cur$1[esp+8]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN11@CRYPTO_pop
$LN12@CRYPTO_pop:
; Line 244
	push	244					; 000000f4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 251
	push	251					; 000000fbH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	27					; 0000001bH
	push	9
	call	_CRYPTO_lock
; Line 252
	push	252					; 000000fcH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 253
	and	DWORD PTR _mh_mode, -3			; fffffffdH
; Line 254
	lea	eax, DWORD PTR _cur$1[esp+56]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cpy
	add	esp, 56					; 00000038H
$LN11@CRYPTO_pop:
; Line 256
	inc	DWORD PTR _num_disable
$LN10@CRYPTO_pop:
	push	esi
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 443
	call	_pop_info
; Line 212
	push	212					; 000000d4H
; Line 443
	neg	eax
; Line 212
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
; Line 443
	sbb	esi, esi
; Line 212
	push	20					; 00000014H
	push	9
; Line 443
	neg	esi
; Line 212
	call	_CRYPTO_lock
; Line 260
	mov	eax, DWORD PTR _mh_mode
	add	esp, 32					; 00000020H
	test	al, 1
	je	SHORT $LN31@CRYPTO_pop
; Line 261
	mov	ecx, DWORD PTR _num_disable
	test	ecx, ecx
	je	SHORT $LN31@CRYPTO_pop
; Line 262
	sub	ecx, 1
	mov	DWORD PTR _num_disable, ecx
; Line 263
	jne	SHORT $LN31@CRYPTO_pop
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	or	eax, 2
	push	27					; 0000001bH
	push	10					; 0000000aH
	mov	DWORD PTR _mh_mode, eax
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN31@CRYPTO_pop:
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 447
	mov	eax, esi
	pop	esi
; Line 448
	add	esp, 8
	ret	0
$LN34@CRYPTO_pop:
; Line 447
	xor	eax, eax
; Line 448
	add	esp, 8
	ret	0
_CRYPTO_pop_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_push_info_
_TEXT	SEGMENT
_cur$1 = -8						; size = 8
_info$ = 8						; size = 4
_file$ = 12						; size = 4
_line$ = 16						; size = 4
_CRYPTO_push_info_ PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 390
	mov	eax, 8
	call	__chkstk
; Line 394
	call	_CRYPTO_is_mem_check_on
	test	eax, eax
	je	$LN38@CRYPTO_pus
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 230
	test	BYTE PTR _mh_mode, 1
	je	$LN14@CRYPTO_pus
; Line 232
	lea	eax, DWORD PTR _cur$1[esp+8]
	push	eax
	call	_CRYPTO_THREADID_current
	add	esp, 4
; Line 235
	cmp	DWORD PTR _num_disable, 0
	je	SHORT $LN16@CRYPTO_pus
	lea	eax, DWORD PTR _cur$1[esp+8]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@CRYPTO_pus
$LN16@CRYPTO_pus:
; Line 244
	push	244					; 000000f4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 251
	push	251					; 000000fbH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	27					; 0000001bH
	push	9
	call	_CRYPTO_lock
; Line 252
	push	252					; 000000fcH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 253
	and	DWORD PTR _mh_mode, -3			; fffffffdH
; Line 254
	lea	eax, DWORD PTR _cur$1[esp+56]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cpy
	add	esp, 56					; 00000038H
$LN15@CRYPTO_pus:
; Line 256
	inc	DWORD PTR _num_disable
$LN14@CRYPTO_pus:
	push	esi
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 397
	push	397					; 0000018dH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	28					; 0000001cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 28					; 0000001cH
	test	esi, esi
	je	SHORT $err$40
; Line 401
	cmp	DWORD PTR _amih, 0
	jne	SHORT $LN5@CRYPTO_pus
; Line 402
	push	OFFSET _app_info_LHASH_COMP
	push	OFFSET _app_info_LHASH_HASH
	call	_lh_new
	add	esp, 8
	mov	DWORD PTR _amih, eax
	test	eax, eax
	jne	SHORT $LN5@CRYPTO_pus
; Line 403
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 405
	jmp	SHORT $err$40
$LN5@CRYPTO_pus:
; Line 409
	push	esi
	call	_CRYPTO_THREADID_current
; Line 410
	mov	eax, DWORD PTR _file$[esp+12]
	mov	DWORD PTR [esi+8], eax
; Line 411
	mov	eax, DWORD PTR _line$[esp+12]
; Line 416
	push	esi
	push	DWORD PTR _amih
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR _info$[esp+20]
	mov	DWORD PTR [esi+16], eax
	mov	DWORD PTR [esi+24], 1
	mov	DWORD PTR [esi+20], 0
	call	_lh_insert
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$40
; Line 426
	mov	DWORD PTR [esi+20], eax
$err$40:
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 260
	mov	eax, DWORD PTR _mh_mode
	add	esp, 16					; 00000010H
	pop	esi
	test	al, 1
	je	SHORT $LN35@CRYPTO_pus
; Line 261
	mov	ecx, DWORD PTR _num_disable
	test	ecx, ecx
	je	SHORT $LN35@CRYPTO_pus
; Line 262
	sub	ecx, 1
	mov	DWORD PTR _num_disable, ecx
; Line 263
	jne	SHORT $LN35@CRYPTO_pus
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	or	eax, 2
	push	27					; 0000001bH
	push	10					; 0000000aH
	mov	DWORD PTR _mh_mode, eax
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN35@CRYPTO_pus:
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN38@CRYPTO_pus:
; Line 432
	xor	eax, eax
; Line 433
	add	esp, 8
	ret	0
_CRYPTO_push_info_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_is_mem_check_on
_TEXT	SEGMENT
_cur$1 = -8						; size = 8
_CRYPTO_is_mem_check_on PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 279
	mov	eax, 8
	call	__chkstk
; Line 282
	test	BYTE PTR _mh_mode, 1
	je	SHORT $LN6@CRYPTO_is_
; Line 284
	lea	eax, DWORD PTR _cur$1[esp+8]
	push	esi
	push	eax
	call	_CRYPTO_THREADID_current
; Line 285
	push	285					; 0000011dH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	5
	call	_CRYPTO_lock
	add	esp, 20					; 00000014H
; Line 287
	test	BYTE PTR _mh_mode, 2
	jne	SHORT $LN4@CRYPTO_is_
	lea	eax, DWORD PTR _cur$1[esp+12]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@CRYPTO_is_
	xor	esi, esi
	jmp	SHORT $LN5@CRYPTO_is_
$LN4@CRYPTO_is_:
	mov	esi, 1
$LN5@CRYPTO_is_:
; Line 290
	push	290					; 00000122H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	6
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 292
	mov	eax, esi
	pop	esi
; Line 293
	add	esp, 8
	ret	0
$LN6@CRYPTO_is_:
; Line 292
	xor	eax, eax
; Line 293
	add	esp, 8
	ret	0
_CRYPTO_is_mem_check_on ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_mem_ctrl
_TEXT	SEGMENT
_cur$1 = -8						; size = 8
_mode$ = 8						; size = 4
_CRYPTO_mem_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem_dbg.c
; Line 209
	mov	eax, 8
	call	__chkstk
	push	esi
; Line 210
	mov	esi, DWORD PTR _mh_mode
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 213
	mov	eax, DWORD PTR _mode$[esp+24]
	add	esp, 16					; 00000010H
	cmp	eax, 3
	ja	$LN13@CRYPTO_mem
	jmp	DWORD PTR $LN17@CRYPTO_mem[eax*4]
$LN4@CRYPTO_mem:
; Line 219
	mov	DWORD PTR _mh_mode, 3
; Line 220
	mov	DWORD PTR _num_disable, 0
; Line 221
	jmp	$LN13@CRYPTO_mem
$LN5@CRYPTO_mem:
; Line 223
	mov	DWORD PTR _mh_mode, 0
; Line 224
	mov	DWORD PTR _num_disable, 0
; Line 226
	jmp	$LN13@CRYPTO_mem
$LN6@CRYPTO_mem:
; Line 230
	test	BYTE PTR _mh_mode, 1
	je	$LN13@CRYPTO_mem
; Line 232
	lea	eax, DWORD PTR _cur$1[esp+12]
	push	eax
	call	_CRYPTO_THREADID_current
	add	esp, 4
; Line 235
	cmp	DWORD PTR _num_disable, 0
	je	SHORT $LN9@CRYPTO_mem
	lea	eax, DWORD PTR _cur$1[esp+12]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@CRYPTO_mem
$LN9@CRYPTO_mem:
; Line 244
	push	244					; 000000f4H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 251
	push	251					; 000000fbH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	27					; 0000001bH
	push	9
	call	_CRYPTO_lock
; Line 252
	push	252					; 000000fcH
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	9
	call	_CRYPTO_lock
; Line 253
	and	DWORD PTR _mh_mode, -3			; fffffffdH
; Line 254
	lea	eax, DWORD PTR _cur$1[esp+60]
	push	eax
	push	OFFSET _disabling_threadid
	call	_CRYPTO_THREADID_cpy
	add	esp, 56					; 00000038H
$LN8@CRYPTO_mem:
; Line 256
	inc	DWORD PTR _num_disable
; Line 258
	jmp	SHORT $LN13@CRYPTO_mem
$LN10@CRYPTO_mem:
; Line 260
	mov	eax, DWORD PTR _mh_mode
	test	al, 1
	je	SHORT $LN13@CRYPTO_mem
; Line 261
	mov	ecx, DWORD PTR _num_disable
	test	ecx, ecx
	je	SHORT $LN13@CRYPTO_mem
; Line 262
	sub	ecx, 1
	mov	DWORD PTR _num_disable, ecx
; Line 263
	jne	SHORT $LN13@CRYPTO_mem
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	or	eax, 2
	push	27					; 0000001bH
	push	10					; 0000000aH
	mov	DWORD PTR _mh_mode, eax
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN13@CRYPTO_mem:
; Line 274
	push	274					; 00000112H
	push	OFFSET ??_C@_0BD@KJPFNPNE@?4?2crypto?2mem_dbg?4c?$AA@
	push	20					; 00000014H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 275
	mov	eax, esi
	pop	esi
; Line 276
	add	esp, 8
	ret	0
	npad	3
$LN17@CRYPTO_mem:
	DD	$LN5@CRYPTO_mem
	DD	$LN4@CRYPTO_mem
	DD	$LN10@CRYPTO_mem
	DD	$LN6@CRYPTO_mem
_CRYPTO_mem_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	jmp	DWORD PTR __imp___time64
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _localtime
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 511
	jmp	DWORD PTR __imp___localtime64
_localtime ENDP
_TEXT	ENDS
END

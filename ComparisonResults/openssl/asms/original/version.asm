; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\version.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_version_main
PUBLIC	??_C@_02EJEOCNCO@?9v?$AA@			; `string'
PUBLIC	??_C@_02GHOAPKHL@?9b?$AA@			; `string'
PUBLIC	??_C@_02DIMDPHP@?9f?$AA@			; `string'
PUBLIC	??_C@_02NCEOIEDG@?9o?$AA@			; `string'
PUBLIC	??_C@_02BPBEIKKI@?9p?$AA@			; `string'
PUBLIC	??_C@_02DBLKFNPN@?9d?$AA@			; `string'
PUBLIC	??_C@_02EMMNKJLI@?9a?$AA@			; `string'
PUBLIC	??_C@_0BK@EHBJPEFH@usage?3version?5?9?$FLavbofpd?$FN?6?$AA@ ; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@ ; `string'
PUBLIC	??_C@_0BC@CDAAJBFG@?$CFs?5?$CILibrary?3?5?$CFs?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0L@NLDCIC@options?3?5?5?$AA@		; `string'
PUBLIC	??_C@_03IKGEINEE@?$CFs?5?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	_SSLeay_version:PROC
EXTRN	_SSLeay:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_options:PROC
EXTRN	_RC4_options:PROC
EXTRN	_DES_options:PROC
EXTRN	_idea_options:PROC
EXTRN	_BF_options:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKGEINEE@?$CFs?5?$AA@
CONST	SEGMENT
??_C@_03IKGEINEE@?$CFs?5?$AA@ DB '%s ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NLDCIC@options?3?5?5?$AA@
CONST	SEGMENT
??_C@_0L@NLDCIC@options?3?5?5?$AA@ DB 'options:  ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CDAAJBFG@?$CFs?5?$CILibrary?3?5?$CFs?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BC@CDAAJBFG@?$CFs?5?$CILibrary?3?5?$CFs?$CJ?6?$AA@ DB '%s (Library'
	DB	': %s)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@
CONST	SEGMENT
??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@ DB 'OpenSSL 1.0'
	DB	'.2h  3 May 2016', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EHBJPEFH@usage?3version?5?9?$FLavbofpd?$FN?6?$AA@
CONST	SEGMENT
??_C@_0BK@EHBJPEFH@usage?3version?5?9?$FLavbofpd?$FN?6?$AA@ DB 'usage:ver'
	DB	'sion -[avbofpd]', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02EMMNKJLI@?9a?$AA@
CONST	SEGMENT
??_C@_02EMMNKJLI@?9a?$AA@ DB '-a', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DBLKFNPN@?9d?$AA@
CONST	SEGMENT
??_C@_02DBLKFNPN@?9d?$AA@ DB '-d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BPBEIKKI@?9p?$AA@
CONST	SEGMENT
??_C@_02BPBEIKKI@?9p?$AA@ DB '-p', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NCEOIEDG@?9o?$AA@
CONST	SEGMENT
??_C@_02NCEOIEDG@?9o?$AA@ DB '-o', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DIMDPHP@?9f?$AA@
CONST	SEGMENT
??_C@_02DIMDPHP@?9f?$AA@ DB '-f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GHOAPKHL@?9b?$AA@
CONST	SEGMENT
??_C@_02GHOAPKHL@?9b?$AA@ DB '-b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02EJEOCNCO@?9v?$AA@
CONST	SEGMENT
??_C@_02EJEOCNCO@?9v?$AA@ DB '-v', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _version_main
_TEXT	SEGMENT
_platform$1$ = -16					; size = 4
_options$1$ = -12					; size = 4
_cflags$1$ = -8						; size = 4
_i$1$ = -4						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_version_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\version.c
; Line 141
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 143
	xor	ebx, ebx
	mov	DWORD PTR _cflags$1$[esp+28], 0
	push	edi
	xor	esi, esi
	mov	DWORD PTR _options$1$[esp+32], ebx
	xor	ebp, ebp
	mov	DWORD PTR _platform$1$[esp+32], esi
	xor	edi, edi
; Line 147
	cmp	DWORD PTR _bio_err, ebx
	jne	SHORT $LN6@version_ma
; Line 148
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN6@version_ma
; Line 149
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN6@version_ma:
; Line 151
	mov	eax, 1
	cmp	DWORD PTR _argc$[esp+28], eax
; Line 153
	mov	DWORD PTR _i$1$[esp+32], eax
	cmove	ebx, eax
	jle	$LN3@version_ma
	npad	10
$LL4@version_ma:
; Line 154
	mov	ecx, DWORD PTR _argv$[esp+28]
	mov	esi, DWORD PTR [ecx+eax*4]
	mov	ecx, OFFSET ??_C@_02EJEOCNCO@?9v?$AA@
	mov	eax, esi
	npad	2
$LL35@version_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN36@version_ma
	test	dl, dl
	je	SHORT $LN37@version_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN36@version_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL35@version_ma
$LN37@version_ma:
	xor	eax, eax
	jmp	SHORT $LN38@version_ma
$LN36@version_ma:
	sbb	eax, eax
	or	eax, 1
$LN38@version_ma:
	test	eax, eax
	jne	SHORT $LN8@version_ma
; Line 155
	mov	esi, DWORD PTR _platform$1$[esp+32]
	lea	ebx, DWORD PTR [eax+1]
	jmp	$LN2@version_ma
$LN8@version_ma:
; Line 156
	mov	ecx, OFFSET ??_C@_02GHOAPKHL@?9b?$AA@
	mov	eax, esi
	npad	4
$LL39@version_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN40@version_ma
	test	dl, dl
	je	SHORT $LN41@version_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN40@version_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL39@version_ma
$LN41@version_ma:
	xor	eax, eax
	jmp	SHORT $LN42@version_ma
$LN40@version_ma:
	sbb	eax, eax
	or	eax, 1
$LN42@version_ma:
	test	eax, eax
	jne	SHORT $LN10@version_ma
; Line 157
	mov	esi, DWORD PTR _platform$1$[esp+32]
	lea	ebp, DWORD PTR [eax+1]
	jmp	$LN2@version_ma
$LN10@version_ma:
; Line 158
	mov	ecx, OFFSET ??_C@_02DIMDPHP@?9f?$AA@
	mov	eax, esi
	npad	4
$LL43@version_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN44@version_ma
	test	dl, dl
	je	SHORT $LN45@version_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN44@version_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL43@version_ma
$LN45@version_ma:
	xor	eax, eax
	jmp	SHORT $LN46@version_ma
$LN44@version_ma:
	sbb	eax, eax
	or	eax, 1
$LN46@version_ma:
	test	eax, eax
	jne	SHORT $LN12@version_ma
; Line 159
	mov	esi, DWORD PTR _platform$1$[esp+32]
	mov	DWORD PTR _cflags$1$[esp+32], 1
	jmp	$LN2@version_ma
$LN12@version_ma:
; Line 160
	mov	ecx, OFFSET ??_C@_02NCEOIEDG@?9o?$AA@
	mov	eax, esi
$LL47@version_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN48@version_ma
	test	dl, dl
	je	SHORT $LN49@version_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN48@version_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL47@version_ma
$LN49@version_ma:
	xor	eax, eax
	jmp	SHORT $LN50@version_ma
$LN48@version_ma:
	sbb	eax, eax
	or	eax, 1
$LN50@version_ma:
	test	eax, eax
	jne	SHORT $LN14@version_ma
; Line 161
	mov	esi, DWORD PTR _platform$1$[esp+32]
	mov	DWORD PTR _options$1$[esp+32], 1
	jmp	$LN2@version_ma
$LN14@version_ma:
; Line 162
	mov	ecx, OFFSET ??_C@_02BPBEIKKI@?9p?$AA@
	mov	eax, esi
$LL51@version_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN52@version_ma
	test	dl, dl
	je	SHORT $LN53@version_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN52@version_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL51@version_ma
$LN53@version_ma:
	xor	eax, eax
	jmp	SHORT $LN54@version_ma
$LN52@version_ma:
	sbb	eax, eax
	or	eax, 1
$LN54@version_ma:
	test	eax, eax
	jne	SHORT $LN16@version_ma
; Line 163
	lea	esi, DWORD PTR [eax+1]
	jmp	SHORT $LN64@version_ma
$LN16@version_ma:
; Line 164
	mov	ecx, OFFSET ??_C@_02DBLKFNPN@?9d?$AA@
	mov	eax, esi
$LL55@version_ma:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN56@version_ma
	test	dl, dl
	je	SHORT $LN57@version_ma
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN56@version_ma
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL55@version_ma
$LN57@version_ma:
	xor	eax, eax
	jmp	SHORT $LN58@version_ma
$LN56@version_ma:
	sbb	eax, eax
	or	eax, 1
$LN58@version_ma:
	test	eax, eax
	jne	SHORT $LN18@version_ma
; Line 165
	mov	esi, DWORD PTR _platform$1$[esp+32]
	lea	edi, DWORD PTR [eax+1]
	jmp	SHORT $LN2@version_ma
$LN18@version_ma:
; Line 166
	mov	eax, OFFSET ??_C@_02EMMNKJLI@?9a?$AA@
	npad	2
$LL59@version_ma:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN60@version_ma
	test	cl, cl
	je	SHORT $LN61@version_ma
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN60@version_ma
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL59@version_ma
$LN61@version_ma:
	xor	eax, eax
	jmp	SHORT $LN62@version_ma
$LN60@version_ma:
	sbb	eax, eax
	or	eax, 1
$LN62@version_ma:
	test	eax, eax
	jne	SHORT $LN20@version_ma
; Line 167
	mov	edi, 1
	mov	esi, edi
	mov	ebx, esi
	mov	DWORD PTR _options$1$[esp+32], esi
	mov	DWORD PTR _cflags$1$[esp+32], esi
	mov	ebp, ebx
$LN64@version_ma:
	mov	DWORD PTR _platform$1$[esp+32], esi
$LN2@version_ma:
; Line 153
	mov	eax, DWORD PTR _i$1$[esp+32]
	inc	eax
	mov	DWORD PTR _i$1$[esp+32], eax
	cmp	eax, DWORD PTR _argc$[esp+28]
	jl	$LL4@version_ma
$LN3@version_ma:
; Line 175
	test	ebx, ebx
	je	SHORT $LN24@version_ma
; Line 176
	call	_SSLeay
; Line 177
	push	0
	cmp	eax, 268443791				; 1000208fH
	jne	SHORT $LN23@version_ma
	call	_SSLeay_version
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 178
	jmp	SHORT $LN24@version_ma
$LN20@version_ma:
; Line 169
	push	OFFSET ??_C@_0BK@EHBJPEFH@usage?3version?5?9?$FLavbofpd?$FN?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 213
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 214
	add	esp, 16					; 00000010H
	ret	0
$LN23@version_ma:
; Line 179
	call	_SSLeay_version
	push	eax
	push	OFFSET ??_C@_0BL@EECJKKOB@OpenSSL?51?40?42h?5?53?5May?52016?$AA@
	push	OFFSET ??_C@_0BC@CDAAJBFG@?$CFs?5?$CILibrary?3?5?$CFs?$CJ?6?$AA@
	call	_printf
	add	esp, 16					; 00000010H
$LN24@version_ma:
; Line 183
	test	ebp, ebp
	je	SHORT $LN25@version_ma
; Line 184
	push	3
	call	_SSLeay_version
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	_printf
	add	esp, 12					; 0000000cH
$LN25@version_ma:
; Line 185
	test	esi, esi
	je	SHORT $LN26@version_ma
; Line 186
	push	4
	call	_SSLeay_version
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	_printf
	add	esp, 12					; 0000000cH
$LN26@version_ma:
; Line 187
	cmp	DWORD PTR _options$1$[esp+32], 0
	je	SHORT $LN27@version_ma
; Line 188
	push	OFFSET ??_C@_0L@NLDCIC@options?3?5?5?$AA@
	call	_printf
; Line 189
	call	_BN_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
; Line 194
	call	_RC4_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
; Line 197
	call	_DES_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
; Line 200
	call	_idea_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
; Line 203
	call	_BF_options
	push	eax
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	_printf
; Line 205
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
	add	esp, 48					; 00000030H
$LN27@version_ma:
; Line 207
	cmp	DWORD PTR _cflags$1$[esp+32], 0
	je	SHORT $LN28@version_ma
; Line 208
	push	2
	call	_SSLeay_version
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	_printf
	add	esp, 12					; 0000000cH
$LN28@version_ma:
; Line 209
	test	edi, edi
	je	SHORT $LN63@version_ma
; Line 210
	push	5
	call	_SSLeay_version
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	_printf
	add	esp, 12					; 0000000cH
$LN63@version_ma:
; Line 213
	xor	eax, eax
$end$66:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 214
	add	esp, 16					; 00000010H
	ret	0
_version_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

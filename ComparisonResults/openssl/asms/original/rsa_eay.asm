; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BI@NFPKAKEA@Eric?5Young?8s?5PKCS?$CD1?5RSA?$AA@ ; `string'
EXTRN	_BN_mod_exp_mont:PROC
;	COMDAT ??_C@_0BI@NFPKAKEA@Eric?5Young?8s?5PKCS?$CD1?5RSA?$AA@
CONST	SEGMENT
??_C@_0BI@NFPKAKEA@Eric?5Young?8s?5PKCS?$CD1?5RSA?$AA@ DB 'Eric Young''s '
	DB	'PKCS#1 RSA', 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
_rsa_pkcs1_eay_meth DD FLAT:??_C@_0BI@NFPKAKEA@Eric?5Young?8s?5PKCS?$CD1?5RSA?$AA@
	DD	FLAT:_RSA_eay_public_encrypt
	DD	FLAT:_RSA_eay_public_decrypt
	DD	FLAT:_RSA_eay_private_encrypt
	DD	FLAT:_RSA_eay_private_decrypt
	DD	FLAT:_RSA_eay_mod_exp
	DD	FLAT:_BN_mod_exp_mont
	DD	FLAT:_RSA_eay_init
	DD	FLAT:_RSA_eay_finish
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
PUBLIC	_RSA_PKCS1_SSLeay
PUBLIC	??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@ ; `string'
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_THREADID_current:PROC
EXTRN	_CRYPTO_THREADID_cmp:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_CTX_start:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_CTX_end:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_init:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_sub:PROC
EXTRN	_BN_add:PROC
EXTRN	_BN_mul:PROC
EXTRN	_BN_div:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_ucmp:PROC
EXTRN	_BN_MONT_CTX_free:PROC
EXTRN	_BN_MONT_CTX_set_locked:PROC
EXTRN	_BN_BLINDING_convert_ex:PROC
EXTRN	_BN_BLINDING_invert_ex:PROC
EXTRN	_BN_BLINDING_thread_id:PROC
EXTRN	_RSA_setup_blinding:PROC
EXTRN	_RSA_padding_add_PKCS1_type_1:PROC
EXTRN	_RSA_padding_check_PKCS1_type_1:PROC
EXTRN	_RSA_padding_add_PKCS1_type_2:PROC
EXTRN	_RSA_padding_check_PKCS1_type_2:PROC
EXTRN	_RSA_padding_add_PKCS1_OAEP:PROC
EXTRN	_RSA_padding_check_PKCS1_OAEP:PROC
EXTRN	_RSA_padding_add_SSLv23:PROC
EXTRN	_RSA_padding_check_SSLv23:PROC
EXTRN	_RSA_padding_add_none:PROC
EXTRN	_RSA_padding_check_none:PROC
EXTRN	_RSA_padding_add_X931:PROC
EXTRN	_RSA_padding_check_X931:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
CONST	SEGMENT
??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@ DB '.\crypto\rsa\rsa_'
	DB	'eay.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_blinding_invert
_TEXT	SEGMENT
_b$ = 8							; size = 4
_f$ = 12						; size = 4
_unblind$ = 16						; size = 4
_ctx$ = 20						; size = 4
_rsa_blinding_invert PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 344
	push	DWORD PTR _ctx$[esp-4]
	push	DWORD PTR _b$[esp]
	push	DWORD PTR _unblind$[esp+4]
	push	DWORD PTR _f$[esp+8]
	call	_BN_BLINDING_invert_ex
	add	esp, 16					; 00000010H
; Line 345
	ret	0
_rsa_blinding_invert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_blinding_convert
_TEXT	SEGMENT
_b$ = 8							; size = 4
_f$ = 12						; size = 4
_unblind$ = 16						; size = 4
_ctx$ = 20						; size = 4
_rsa_blinding_convert PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 315
	push	esi
; Line 316
	mov	esi, DWORD PTR _unblind$[esp]
	test	esi, esi
	jne	SHORT $LN2@rsa_blindi
; Line 320
	push	DWORD PTR _ctx$[esp]
	push	DWORD PTR _b$[esp+4]
	push	esi
	push	DWORD PTR _f$[esp+12]
	call	_BN_BLINDING_convert_ex
	add	esp, 16					; 00000010H
	pop	esi
; Line 331
	ret	0
$LN2@rsa_blindi:
; Line 326
	push	326					; 00000146H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	25					; 00000019H
	push	9
	call	_CRYPTO_lock
; Line 327
	push	DWORD PTR _ctx$[esp+16]
	push	DWORD PTR _b$[esp+20]
	push	esi
	push	DWORD PTR _f$[esp+28]
	call	_BN_BLINDING_convert_ex
; Line 328
	push	328					; 00000148H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	25					; 00000019H
	push	10					; 0000000aH
	mov	esi, eax
	call	_CRYPTO_lock
	add	esp, 48					; 00000030H
; Line 329
	mov	eax, esi
	pop	esi
; Line 331
	ret	0
_rsa_blinding_convert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_get_blinding
_TEXT	SEGMENT
_cur$ = -8						; size = 8
_rsa$ = 8						; size = 4
_local$ = 12						; size = 4
_ctx$ = 16						; size = 4
_rsa_get_blinding PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 257
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 262
	push	262					; 00000106H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	9
	push	5
	xor	ebx, ebx
	call	_CRYPTO_lock
; Line 264
	mov	esi, DWORD PTR _rsa$[esp+32]
	add	esp, 16					; 00000010H
	cmp	DWORD PTR [esi+80], ebx
	jne	SHORT $LN3@rsa_get_bl
; Line 265
	push	265					; 00000109H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	9
	push	6
	call	_CRYPTO_lock
; Line 266
	push	266					; 0000010aH
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	9
	push	9
	call	_CRYPTO_lock
	add	esp, 32					; 00000020H
; Line 267
	mov	ebx, 1
; Line 269
	cmp	DWORD PTR [esi+80], 0
	jne	SHORT $LN3@rsa_get_bl
; Line 270
	push	DWORD PTR _ctx$[esp+16]
	push	esi
	call	_RSA_setup_blinding
	add	esp, 8
	mov	DWORD PTR [esi+80], eax
$LN3@rsa_get_bl:
; Line 273
	mov	edi, DWORD PTR [esi+80]
; Line 274
	test	edi, edi
	je	$err$15
; Line 277
	lea	eax, DWORD PTR _cur$[esp+20]
	push	eax
	call	_CRYPTO_THREADID_current
; Line 278
	push	edi
	call	_BN_BLINDING_thread_id
	push	eax
	lea	eax, DWORD PTR _cur$[esp+32]
	push	eax
	call	_CRYPTO_THREADID_cmp
	add	esp, 16					; 00000010H
	test	eax, eax
; Line 281
	mov	eax, DWORD PTR _local$[esp+16]
	jne	SHORT $LN5@rsa_get_bl
	mov	DWORD PTR [eax], 1
; Line 282
	jmp	SHORT $err$15
$LN5@rsa_get_bl:
; Line 290
	mov	DWORD PTR [eax], 0
; Line 292
	cmp	DWORD PTR [esi+84], 0
	jne	SHORT $LN9@rsa_get_bl
; Line 293
	test	ebx, ebx
	jne	SHORT $LN8@rsa_get_bl
; Line 294
	push	294					; 00000126H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	9
	push	6
	call	_CRYPTO_lock
; Line 295
	push	295					; 00000127H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	9
	push	9
	call	_CRYPTO_lock
	add	esp, 32					; 00000020H
; Line 296
	mov	ebx, 1
$LN8@rsa_get_bl:
; Line 299
	cmp	DWORD PTR [esi+84], 0
	jne	SHORT $LN9@rsa_get_bl
; Line 300
	push	DWORD PTR _ctx$[esp+16]
	push	esi
	call	_RSA_setup_blinding
	add	esp, 8
	mov	DWORD PTR [esi+84], eax
$LN9@rsa_get_bl:
; Line 302
	mov	edi, DWORD PTR [esi+84]
$err$15:
; Line 306
	test	ebx, ebx
	je	SHORT $LN10@rsa_get_bl
; Line 307
	push	307					; 00000133H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	9
	push	10					; 0000000aH
; Line 309
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 310
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 311
	add	esp, 8
	ret	0
$LN10@rsa_get_bl:
; Line 309
	push	309					; 00000135H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	9
	push	6
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 310
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 311
	add	esp, 8
	ret	0
_rsa_get_blinding ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_eay_finish
_TEXT	SEGMENT
_rsa$ = 8						; size = 4
_RSA_eay_finish PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 894
	push	esi
; Line 895
	mov	esi, DWORD PTR _rsa$[esp]
	mov	eax, DWORD PTR [esi+64]
	test	eax, eax
	je	SHORT $LN2@RSA_eay_fi
; Line 896
	push	eax
	call	_BN_MONT_CTX_free
	add	esp, 4
$LN2@RSA_eay_fi:
; Line 897
	mov	eax, DWORD PTR [esi+68]
	test	eax, eax
	je	SHORT $LN3@RSA_eay_fi
; Line 898
	push	eax
	call	_BN_MONT_CTX_free
	add	esp, 4
$LN3@RSA_eay_fi:
; Line 899
	mov	eax, DWORD PTR [esi+72]
	pop	esi
	test	eax, eax
	je	SHORT $LN6@RSA_eay_fi
; Line 900
	push	eax
	call	_BN_MONT_CTX_free
	add	esp, 4
$LN6@RSA_eay_fi:
; Line 901
	mov	eax, 1
; Line 902
	ret	0
_RSA_eay_finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_eay_init
_TEXT	SEGMENT
_rsa$ = 8						; size = 4
_RSA_eay_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 889
	mov	eax, DWORD PTR _rsa$[esp-4]
	or	DWORD PTR [eax+60], 6
; Line 890
	mov	eax, 1
; Line 891
	ret	0
_RSA_eay_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_eay_mod_exp
_TEXT	SEGMENT
_vrfy$1$ = -136						; size = 4
_m1$1$ = -132						; size = 4
_q$1$ = -128						; size = 4
_ret$1$ = -124						; size = 4
_local_d$1 = -120					; size = 20
_local_q$2 = -120					; size = 20
_local_c$ = -100					; size = 20
_local_p$3 = -80					; size = 20
_local_dmq1$ = -60					; size = 20
_local_dmp1$ = -40					; size = 20
_local_r1$ = -20					; size = 20
_r0$ = 8						; size = 4
_I$ = 12						; size = 4
_rsa$ = 16						; size = 4
_ctx$ = 20						; size = 4
_RSA_eay_mod_exp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 720
	mov	eax, 136				; 00000088H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 726
	mov	edi, DWORD PTR _ctx$[esp+148]
	push	edi
	mov	DWORD PTR _ret$1$[esp+156], 0
	call	_BN_CTX_start
; Line 727
	push	edi
	call	_BN_CTX_get
; Line 728
	push	edi
	mov	ebp, eax
	call	_BN_CTX_get
; Line 729
	push	edi
	mov	DWORD PTR _m1$1$[esp+168], eax
	call	_BN_CTX_get
; Line 739
	mov	esi, DWORD PTR _rsa$[esp+164]
	add	esp, 16					; 00000010H
	mov	DWORD PTR _vrfy$1$[esp+152], eax
	test	DWORD PTR [esi+60], 256			; 00000100H
	jne	$LN2@RSA_eay_mo
; Line 740
	lea	eax, DWORD PTR _local_p$3[esp+152]
	push	eax
	call	_BN_init
; Line 742
	mov	ecx, DWORD PTR [esi+28]
	lea	ebx, DWORD PTR _local_p$3[esp+156]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _local_p$3[esp+156], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _local_p$3[esp+160], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _local_p$3[esp+164], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _local_p$3[esp+168], eax
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _local_p$3[esp+172]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
; Line 744
	lea	eax, DWORD PTR _local_q$2[esp+156]
	or	ecx, 6
	push	eax
	mov	DWORD PTR _local_p$3[esp+176], ecx
	call	_BN_init
; Line 746
	mov	ecx, DWORD PTR [esi+32]
	lea	edx, DWORD PTR _local_q$2[esp+160]
	add	esp, 8
	mov	DWORD PTR _q$1$[esp+152], edx
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _local_q$2[esp+152], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _local_q$2[esp+156], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _local_q$2[esp+160], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _local_q$2[esp+164], eax
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _local_q$2[esp+168]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_q$2[esp+168], ecx
; Line 747
	jmp	SHORT $LN3@RSA_eay_mo
$LN2@RSA_eay_mo:
; Line 749
	mov	eax, DWORD PTR [esi+32]
	mov	ebx, DWORD PTR [esi+28]
	mov	DWORD PTR _q$1$[esp+152], eax
$LN3@RSA_eay_mo:
; Line 752
	test	BYTE PTR [esi+60], 4
	je	SHORT $LN6@RSA_eay_mo
; Line 753
	push	edi
	push	ebx
	lea	eax, DWORD PTR [esi+68]
	push	9
	push	eax
	call	_BN_MONT_CTX_set_locked
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$50
; Line 756
	push	edi
	push	DWORD PTR _q$1$[esp+156]
	lea	eax, DWORD PTR [esi+72]
	push	9
	push	eax
	call	_BN_MONT_CTX_set_locked
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$50
$LN6@RSA_eay_mo:
; Line 762
	test	BYTE PTR [esi+60], 2
	je	SHORT $LN8@RSA_eay_mo
; Line 763
	push	edi
	push	DWORD PTR [esi+16]
	lea	eax, DWORD PTR [esi+64]
	push	9
	push	eax
	call	_BN_MONT_CTX_set_locked
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$50
$LN8@RSA_eay_mo:
; Line 768
	test	DWORD PTR [esi+60], 256			; 00000100H
; Line 770
	mov	ebx, DWORD PTR _I$[esp+148]
; Line 771
	push	edi
	push	DWORD PTR [esi+32]
	jne	SHORT $LN9@RSA_eay_mo
; Line 770
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ebx+16]
	mov	DWORD PTR _local_c$[esp+160], eax
	and	ecx, -2					; fffffffeH
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR _local_c$[esp+164], eax
	mov	eax, DWORD PTR [ebx+8]
	mov	DWORD PTR _local_c$[esp+168], eax
	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR _local_c$[esp+172], eax
	mov	eax, DWORD PTR _local_c$[esp+176]
	and	eax, 1
	or	ecx, eax
; Line 771
	lea	eax, DWORD PTR _local_c$[esp+160]
	or	ecx, 6
	mov	DWORD PTR _local_c$[esp+176], ecx
	push	eax
; Line 773
	jmp	SHORT $LN46@RSA_eay_mo
$LN9@RSA_eay_mo:
; Line 774
	push	ebx
$LN46@RSA_eay_mo:
	push	ebp
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$50
; Line 779
	test	DWORD PTR [esi+60], 256			; 00000100H
	jne	SHORT $LN13@RSA_eay_mo
; Line 781
	mov	ecx, DWORD PTR [esi+40]
	lea	edx, DWORD PTR _local_dmq1$[esp+152]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _local_dmq1$[esp+152], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _local_dmq1$[esp+156], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _local_dmq1$[esp+160], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _local_dmq1$[esp+164], eax
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _local_dmq1$[esp+168]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_dmq1$[esp+168], ecx
; Line 782
	jmp	SHORT $LN14@RSA_eay_mo
$LN13@RSA_eay_mo:
; Line 783
	mov	edx, DWORD PTR [esi+40]
$LN14@RSA_eay_mo:
; Line 784
	push	DWORD PTR [esi+72]
	mov	eax, DWORD PTR [esi+8]
	push	edi
	push	DWORD PTR [esi+32]
	mov	eax, DWORD PTR [eax+24]
	push	edx
	push	ebp
	push	DWORD PTR _m1$1$[esp+172]
	call	eax
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$err$50
; Line 788
	test	DWORD PTR [esi+60], 256			; 00000100H
; Line 791
	push	edi
	push	DWORD PTR [esi+28]
	jne	SHORT $LN16@RSA_eay_mo
; Line 790
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [ebx+16]
	mov	DWORD PTR _local_c$[esp+160], eax
	and	ecx, -2					; fffffffeH
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR _local_c$[esp+164], eax
	mov	eax, DWORD PTR [ebx+8]
	mov	DWORD PTR _local_c$[esp+168], eax
	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR _local_c$[esp+172], eax
	mov	eax, DWORD PTR _local_c$[esp+176]
	and	eax, 1
	or	ecx, eax
; Line 791
	lea	eax, DWORD PTR _local_c$[esp+160]
	or	ecx, 6
	mov	DWORD PTR _local_c$[esp+176], ecx
	push	eax
; Line 793
	jmp	SHORT $LN48@RSA_eay_mo
$LN16@RSA_eay_mo:
; Line 794
	push	ebx
$LN48@RSA_eay_mo:
	push	ebp
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$50
; Line 799
	test	DWORD PTR [esi+60], 256			; 00000100H
	jne	SHORT $LN20@RSA_eay_mo
; Line 801
	mov	ecx, DWORD PTR [esi+36]
	lea	edx, DWORD PTR _local_dmp1$[esp+152]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _local_dmp1$[esp+152], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _local_dmp1$[esp+156], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _local_dmp1$[esp+160], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _local_dmp1$[esp+164], eax
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _local_dmp1$[esp+168]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_dmp1$[esp+168], ecx
; Line 802
	jmp	SHORT $LN21@RSA_eay_mo
$LN20@RSA_eay_mo:
; Line 803
	mov	edx, DWORD PTR [esi+36]
$LN21@RSA_eay_mo:
; Line 804
	push	DWORD PTR [esi+68]
	mov	eax, DWORD PTR [esi+8]
	mov	ebx, DWORD PTR _r0$[esp+152]
	push	edi
	push	DWORD PTR [esi+28]
	mov	eax, DWORD PTR [eax+24]
	push	edx
	push	ebp
	push	ebx
	call	eax
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$err$50
; Line 807
	push	DWORD PTR _m1$1$[esp+152]
	push	ebx
	push	ebx
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$50
; Line 813
	cmp	DWORD PTR [ebx+12], 0
	je	SHORT $LN25@RSA_eay_mo
; Line 814
	push	DWORD PTR [esi+28]
	push	ebx
	push	ebx
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$50
$LN25@RSA_eay_mo:
; Line 817
	push	edi
	push	DWORD PTR [esi+44]
	push	ebx
	push	ebp
	call	_BN_mul
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$50
; Line 821
	test	DWORD PTR [esi+60], 256			; 00000100H
	jne	SHORT $LN27@RSA_eay_mo
; Line 823
	mov	eax, DWORD PTR [ebp]
	lea	edx, DWORD PTR _local_r1$[esp+152]
	mov	DWORD PTR _local_r1$[esp+152], eax
	mov	eax, DWORD PTR [ebp+4]
	mov	DWORD PTR _local_r1$[esp+156], eax
	mov	eax, DWORD PTR [ebp+8]
	mov	DWORD PTR _local_r1$[esp+160], eax
	mov	eax, DWORD PTR [ebp+12]
	mov	DWORD PTR _local_r1$[esp+164], eax
	mov	ecx, DWORD PTR [ebp+16]
	mov	eax, DWORD PTR _local_r1$[esp+168]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_r1$[esp+168], ecx
; Line 824
	jmp	SHORT $LN28@RSA_eay_mo
$LN27@RSA_eay_mo:
; Line 825
	mov	edx, ebp
$LN28@RSA_eay_mo:
; Line 826
	push	edi
	push	DWORD PTR [esi+28]
	push	edx
	push	ebx
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$50
; Line 836
	cmp	DWORD PTR [ebx+12], 0
	je	SHORT $LN31@RSA_eay_mo
; Line 837
	push	DWORD PTR [esi+28]
	push	ebx
	push	ebx
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$50
$LN31@RSA_eay_mo:
; Line 839
	push	edi
	push	DWORD PTR [esi+32]
	push	ebx
	push	ebp
	call	_BN_mul
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$50
; Line 841
	push	DWORD PTR _m1$1$[esp+152]
	push	ebp
	push	ebx
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$50
; Line 844
	mov	ecx, DWORD PTR [esi+20]
	test	ecx, ecx
	je	$LN43@RSA_eay_mo
	mov	edx, DWORD PTR [esi+16]
	test	edx, edx
	je	$LN43@RSA_eay_mo
; Line 845
	push	DWORD PTR [esi+64]
	mov	eax, DWORD PTR [esi+8]
	push	edi
	push	edx
	push	ecx
	mov	eax, DWORD PTR [eax+24]
	push	ebx
	push	DWORD PTR _vrfy$1$[esp+172]
	call	eax
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$err$50
; Line 854
	mov	ebp, DWORD PTR _I$[esp+148]
	mov	eax, DWORD PTR _vrfy$1$[esp+152]
	push	ebp
	push	eax
	push	eax
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$50
; Line 856
	mov	eax, DWORD PTR _vrfy$1$[esp+152]
	push	edi
	push	DWORD PTR [esi+16]
	push	eax
	push	eax
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$50
; Line 858
	mov	eax, DWORD PTR _vrfy$1$[esp+152]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN39@RSA_eay_mo
; Line 859
	push	DWORD PTR [esi+16]
	push	eax
	push	eax
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$50
	mov	eax, DWORD PTR _vrfy$1$[esp+152]
$LN39@RSA_eay_mo:
; Line 861
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN43@RSA_eay_mo
; Line 871
	test	DWORD PTR [esi+60], 256			; 00000100H
	jne	SHORT $LN41@RSA_eay_mo
; Line 873
	mov	ecx, DWORD PTR [esi+24]
	lea	edx, DWORD PTR _local_d$1[esp+152]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _local_d$1[esp+152], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _local_d$1[esp+156], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _local_d$1[esp+160], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _local_d$1[esp+164], eax
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _local_d$1[esp+168]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_d$1[esp+168], ecx
; Line 874
	jmp	SHORT $LN42@RSA_eay_mo
$LN41@RSA_eay_mo:
; Line 875
	mov	edx, DWORD PTR [esi+24]
$LN42@RSA_eay_mo:
; Line 876
	push	DWORD PTR [esi+64]
	mov	eax, DWORD PTR [esi+8]
	push	edi
	push	DWORD PTR [esi+16]
	mov	eax, DWORD PTR [eax+24]
	push	edx
	push	ebp
	push	ebx
	call	eax
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $err$50
$LN43@RSA_eay_mo:
; Line 881
	mov	DWORD PTR _ret$1$[esp+152], 1
$err$50:
; Line 883
	push	edi
	call	_BN_CTX_end
; Line 884
	mov	eax, DWORD PTR _ret$1$[esp+156]
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 885
	add	esp, 136				; 00000088H
	ret	0
_RSA_eay_mod_exp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_eay_private_decrypt
_TEXT	SEGMENT
_buf$1$ = -44						; size = 4
_f$1$ = -40						; size = 4
_ret$1$ = -36						; size = 4
_blinding$1$ = -32					; size = 4
_unblind$1$ = -28					; size = 4
_d$1$ = -24						; size = 4
_local_blinding$ = -24					; size = 4
_local_d$1 = -20					; size = 20
_flen$ = 8						; size = 4
_from$ = 12						; size = 4
_to$ = 16						; size = 4
_rsa$ = 20						; size = 4
_padding$ = 24						; size = 4
_RSA_eay_private_decrypt PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 485
	mov	eax, 44					; 0000002cH
	call	__chkstk
	push	ebx
	push	ebp
; Line 487
	or	ebp, -1
; Line 491
	mov	DWORD PTR _local_blinding$[esp+52], 0
; Line 497
	mov	DWORD PTR _unblind$1$[esp+52], 0
; Line 498
	mov	DWORD PTR _blinding$1$[esp+52], 0
; Line 500
	call	_BN_CTX_new
	mov	ebx, eax
	test	ebx, ebx
	je	$LN39@RSA_eay_pr
; Line 502
	push	esi
	push	edi
	push	ebx
	call	_BN_CTX_start
; Line 503
	push	ebx
	call	_BN_CTX_get
; Line 504
	push	ebx
	mov	DWORD PTR _f$1$[esp+72], eax
	call	_BN_CTX_get
; Line 505
	mov	esi, DWORD PTR _rsa$[esp+68]
	mov	DWORD PTR _ret$1$[esp+72], eax
	push	DWORD PTR [esi+16]
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
; Line 506
	push	506					; 000001faH
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	lea	edi, DWORD PTR [edx+eax]
	sar	edi, 3
	push	edi
	call	_CRYPTO_malloc
; Line 507
	mov	ecx, DWORD PTR _f$1$[esp+88]
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _buf$1$[esp+60], eax
	test	ecx, ecx
	je	$LN6@RSA_eay_pr
	cmp	DWORD PTR _ret$1$[esp+60], 0
	je	$LN6@RSA_eay_pr
	test	eax, eax
	je	$LN6@RSA_eay_pr
; Line 516
	mov	eax, DWORD PTR _flen$[esp+56]
	cmp	eax, edi
	jle	SHORT $LN7@RSA_eay_pr
; Line 517
	push	518					; 00000206H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	108					; 0000006cH
; Line 519
	jmp	$LN50@RSA_eay_pr
$LN7@RSA_eay_pr:
; Line 523
	push	ecx
	push	eax
	push	DWORD PTR _from$[esp+64]
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN44@RSA_eay_pr
; Line 526
	push	DWORD PTR [esi+16]
	push	DWORD PTR _f$1$[esp+64]
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN9@RSA_eay_pr
; Line 527
	push	528					; 00000210H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	132					; 00000084H
; Line 529
	jmp	$LN50@RSA_eay_pr
$LN9@RSA_eay_pr:
; Line 532
	test	BYTE PTR [esi+60], -128			; ffffff80H
	jne	SHORT $LN14@RSA_eay_pr
; Line 533
	push	ebx
	lea	eax, DWORD PTR _local_blinding$[esp+64]
	push	eax
	push	esi
	call	_rsa_get_blinding
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _blinding$1$[esp+60], eax
; Line 534
	test	eax, eax
	jne	SHORT $LN37@RSA_eay_pr
; Line 535
	push	535					; 00000217H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	68					; 00000044H
; Line 536
	jmp	$LN50@RSA_eay_pr
$LN37@RSA_eay_pr:
; Line 541
	cmp	DWORD PTR _local_blinding$[esp+60], 0
	jne	SHORT $LN13@RSA_eay_pr
	push	ebx
	call	_BN_CTX_get
	add	esp, 4
	mov	DWORD PTR _unblind$1$[esp+60], eax
	test	eax, eax
	jne	SHORT $LN45@RSA_eay_pr
; Line 542
	push	542					; 0000021eH
; Line 543
	jmp	$LN51@RSA_eay_pr
$LN45@RSA_eay_pr:
	mov	eax, DWORD PTR _blinding$1$[esp+60]
$LN13@RSA_eay_pr:
; Line 545
	push	ebx
	push	DWORD PTR _unblind$1$[esp+64]
	push	DWORD PTR _f$1$[esp+68]
	push	eax
	call	_rsa_blinding_convert
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN44@RSA_eay_pr
$LN14@RSA_eay_pr:
; Line 550
	mov	edx, DWORD PTR [esi+60]
	test	dl, 32					; 00000020H
	jne	$LN17@RSA_eay_pr
	cmp	DWORD PTR [esi+28], 0
	je	SHORT $LN15@RSA_eay_pr
	cmp	DWORD PTR [esi+32], 0
	je	SHORT $LN15@RSA_eay_pr
	cmp	DWORD PTR [esi+36], 0
	je	SHORT $LN15@RSA_eay_pr
	cmp	DWORD PTR [esi+40], 0
	je	SHORT $LN15@RSA_eay_pr
	cmp	DWORD PTR [esi+44], 0
	jne	$LN17@RSA_eay_pr
$LN15@RSA_eay_pr:
; Line 560
	test	edx, 256				; 00000100H
	jne	SHORT $LN19@RSA_eay_pr
; Line 562
	mov	ecx, DWORD PTR [esi+24]
	lea	eax, DWORD PTR _local_d$1[esp+60]
	mov	DWORD PTR _d$1$[esp+60], eax
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _local_d$1[esp+60], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _local_d$1[esp+64], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _local_d$1[esp+68], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _local_d$1[esp+72], eax
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _local_d$1[esp+76]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_d$1[esp+76], ecx
; Line 563
	jmp	SHORT $LN20@RSA_eay_pr
$LN19@RSA_eay_pr:
; Line 564
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR _d$1$[esp+60], eax
$LN20@RSA_eay_pr:
; Line 566
	test	dl, 2
	je	SHORT $LN22@RSA_eay_pr
; Line 567
	push	ebx
	push	DWORD PTR [esi+16]
	lea	eax, DWORD PTR [esi+64]
	push	9
	push	eax
	call	_BN_MONT_CTX_set_locked
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN44@RSA_eay_pr
$LN22@RSA_eay_pr:
; Line 570
	push	DWORD PTR [esi+64]
	mov	eax, DWORD PTR [esi+8]
	push	ebx
	push	DWORD PTR [esi+16]
	mov	esi, DWORD PTR _ret$1$[esp+72]
	push	DWORD PTR _d$1$[esp+72]
	mov	eax, DWORD PTR [eax+24]
	push	DWORD PTR _f$1$[esp+76]
	push	esi
	call	eax
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN18@RSA_eay_pr
; Line 572
	jmp	$LN44@RSA_eay_pr
$LN17@RSA_eay_pr:
; Line 554
	mov	eax, DWORD PTR [esi+8]
	push	ebx
	push	esi
	push	DWORD PTR _f$1$[esp+68]
	mov	esi, DWORD PTR _ret$1$[esp+72]
	mov	eax, DWORD PTR [eax+20]
	push	esi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN44@RSA_eay_pr
$LN18@RSA_eay_pr:
; Line 575
	mov	eax, DWORD PTR _blinding$1$[esp+60]
	test	eax, eax
	je	SHORT $LN25@RSA_eay_pr
; Line 344
	push	ebx
	push	eax
	push	DWORD PTR _unblind$1$[esp+68]
	push	esi
	call	_BN_BLINDING_invert_ex
	add	esp, 16					; 00000010H
; Line 576
	test	eax, eax
	je	$LN44@RSA_eay_pr
$LN25@RSA_eay_pr:
; Line 580
	mov	esi, DWORD PTR _buf$1$[esp+60]
	push	esi
	push	DWORD PTR _ret$1$[esp+64]
	call	_BN_bn2bin
	mov	ecx, eax
	add	esp, 8
; Line 582
	mov	eax, DWORD PTR _padding$[esp+56]
	dec	eax
	cmp	eax, 3
	ja	SHORT $LN30@RSA_eay_pr
	jmp	DWORD PTR $LN53@RSA_eay_pr[eax*4]
$LN26@RSA_eay_pr:
; Line 584
	push	edi
	push	ecx
	push	esi
	push	edi
	push	DWORD PTR _to$[esp+72]
	call	_RSA_padding_check_PKCS1_type_2
; Line 585
	jmp	SHORT $LN48@RSA_eay_pr
$LN27@RSA_eay_pr:
; Line 588
	push	0
	push	0
	push	edi
	push	ecx
	push	esi
	push	edi
	push	DWORD PTR _to$[esp+80]
	call	_RSA_padding_check_PKCS1_OAEP
	add	esp, 28					; 0000001cH
; Line 589
	jmp	SHORT $LN49@RSA_eay_pr
$LN28@RSA_eay_pr:
; Line 592
	push	edi
	push	ecx
	push	esi
	push	edi
	push	DWORD PTR _to$[esp+72]
	call	_RSA_padding_check_SSLv23
; Line 593
	jmp	SHORT $LN48@RSA_eay_pr
$LN29@RSA_eay_pr:
; Line 595
	push	edi
	push	ecx
	push	esi
	push	edi
	push	DWORD PTR _to$[esp+72]
	call	_RSA_padding_check_none
$LN48@RSA_eay_pr:
	add	esp, 20					; 00000014H
$LN49@RSA_eay_pr:
	mov	ebp, eax
; Line 601
	test	ebp, ebp
	jns	SHORT $err$54
; Line 602
	push	602					; 0000025aH
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	114					; 00000072H
	push	101					; 00000065H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	SHORT $err$54
$LN30@RSA_eay_pr:
; Line 598
	push	598					; 00000256H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	118					; 00000076H
	push	101					; 00000065H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 599
	jmp	SHORT $err$54
$LN6@RSA_eay_pr:
; Line 508
	push	508					; 000001fcH
$LN51@RSA_eay_pr:
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	65					; 00000041H
$LN50@RSA_eay_pr:
	push	101					; 00000065H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN44@RSA_eay_pr:
	mov	esi, DWORD PTR _buf$1$[esp+60]
$err$54:
; Line 606
	push	ebx
	call	_BN_CTX_end
; Line 607
	push	ebx
	call	_BN_CTX_free
	add	esp, 8
; Line 609
	test	esi, esi
	je	SHORT $LN38@RSA_eay_pr
; Line 610
	push	edi
	push	esi
	call	_OPENSSL_cleanse
; Line 611
	push	esi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN38@RSA_eay_pr:
; Line 613
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 614
	add	esp, 44					; 0000002cH
	ret	0
$LN39@RSA_eay_pr:
; Line 613
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 614
	add	esp, 44					; 0000002cH
	ret	0
	npad	1
$LN53@RSA_eay_pr:
	DD	$LN26@RSA_eay_pr
	DD	$LN28@RSA_eay_pr
	DD	$LN29@RSA_eay_pr
	DD	$LN27@RSA_eay_pr
_RSA_eay_private_decrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_eay_public_decrypt
_TEXT	SEGMENT
_f$1$ = -8						; size = 4
_ctx$1$ = -4						; size = 4
_flen$ = 8						; size = 4
_from$ = 12						; size = 4
_to$ = 16						; size = 4
_ret$1$ = 20						; size = 4
_rsa$ = 20						; size = 4
_padding$ = 24						; size = 4
_RSA_eay_public_decrypt PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 619
	mov	eax, 8
	call	__chkstk
	push	esi
; Line 626
	mov	esi, DWORD PTR _rsa$[esp+8]
	push	edi
	or	edi, -1
	push	DWORD PTR [esi+16]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 16384				; 00004000H
	jle	SHORT $LN4@RSA_eay_pu
; Line 627
	push	627					; 00000273H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	105					; 00000069H
	push	103					; 00000067H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 628
	or	eax, edi
	pop	edi
	pop	esi
; Line 717
	add	esp, 8
	ret	0
$LN4@RSA_eay_pu:
; Line 631
	push	DWORD PTR [esi+20]
	push	DWORD PTR [esi+16]
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	jg	SHORT $LN5@RSA_eay_pu
; Line 632
	push	632					; 00000278H
$LN34@RSA_eay_pu:
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	101					; 00000065H
	push	103					; 00000067H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 633
	or	eax, -1
	pop	edi
	pop	esi
; Line 717
	add	esp, 8
	ret	0
$LN5@RSA_eay_pu:
; Line 637
	push	DWORD PTR [esi+16]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 3072				; 00000c00H
	jle	SHORT $LN7@RSA_eay_pu
; Line 638
	push	DWORD PTR [esi+20]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 64					; 00000040H
	jle	SHORT $LN7@RSA_eay_pu
; Line 639
	push	639					; 0000027fH
; Line 640
	jmp	SHORT $LN34@RSA_eay_pu
$LN7@RSA_eay_pu:
	push	ebx
; Line 644
	call	_BN_CTX_new
	mov	ebx, eax
	mov	DWORD PTR _ctx$1$[esp+20], ebx
	test	ebx, ebx
	je	$LN25@RSA_eay_pu
; Line 646
	push	ebp
	push	ebx
	call	_BN_CTX_start
; Line 647
	push	ebx
	call	_BN_CTX_get
; Line 648
	push	ebx
	mov	DWORD PTR _f$1$[esp+36], eax
	call	_BN_CTX_get
; Line 649
	push	DWORD PTR [esi+16]
	mov	DWORD PTR _ret$1$[esp+36], eax
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
; Line 650
	push	650					; 0000028aH
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	lea	ebx, DWORD PTR [edx+eax]
	sar	ebx, 3
	push	ebx
	call	_CRYPTO_malloc
; Line 651
	mov	ecx, DWORD PTR _f$1$[esp+52]
	add	esp, 28					; 0000001cH
	mov	ebp, eax
	test	ecx, ecx
	je	$LN10@RSA_eay_pu
	cmp	DWORD PTR _ret$1$[esp+20], 0
	je	$LN10@RSA_eay_pu
	test	ebp, ebp
	je	$LN10@RSA_eay_pu
; Line 660
	mov	eax, DWORD PTR _flen$[esp+20]
	cmp	eax, ebx
	jle	SHORT $LN11@RSA_eay_pu
; Line 661
	push	661					; 00000295H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	108					; 0000006cH
	push	103					; 00000067H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 662
	jmp	$err$36
$LN11@RSA_eay_pu:
; Line 665
	push	ecx
	push	eax
	push	DWORD PTR _from$[esp+28]
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$36
; Line 668
	push	DWORD PTR [esi+16]
	push	DWORD PTR _f$1$[esp+28]
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN13@RSA_eay_pu
; Line 669
	push	670					; 0000029eH
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	132					; 00000084H
	push	103					; 00000067H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 671
	jmp	$err$36
$LN13@RSA_eay_pu:
; Line 674
	test	BYTE PTR [esi+60], 2
; Line 675
	mov	edi, DWORD PTR _ctx$1$[esp+24]
	je	SHORT $LN15@RSA_eay_pu
	push	edi
	push	DWORD PTR [esi+16]
	lea	eax, DWORD PTR [esi+64]
	push	9
	push	eax
	call	_BN_MONT_CTX_set_locked
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN30@RSA_eay_pu
$LN15@RSA_eay_pu:
; Line 679
	push	DWORD PTR [esi+64]
	mov	eax, DWORD PTR [esi+8]
	push	edi
	push	DWORD PTR [esi+16]
	push	DWORD PTR [esi+20]
	mov	eax, DWORD PTR [eax+24]
	push	DWORD PTR _f$1$[esp+40]
	push	DWORD PTR _ret$1$[esp+40]
	call	eax
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN30@RSA_eay_pu
; Line 683
	mov	edi, DWORD PTR _padding$[esp+20]
	cmp	edi, 5
	jne	SHORT $LN18@RSA_eay_pu
	mov	eax, DWORD PTR _ret$1$[esp+20]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	and	eax, 15					; 0000000fH
	cmp	al, 12					; 0000000cH
	je	SHORT $LN18@RSA_eay_pu
; Line 684
	mov	eax, DWORD PTR _ret$1$[esp+20]
	push	eax
	push	DWORD PTR [esi+16]
	push	eax
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN30@RSA_eay_pu
$LN18@RSA_eay_pu:
; Line 688
	push	ebp
	push	DWORD PTR _ret$1$[esp+24]
	call	_BN_bn2bin
	add	esp, 8
; Line 690
	sub	edi, 1
	je	SHORT $LN19@RSA_eay_pu
	sub	edi, 2
	je	SHORT $LN21@RSA_eay_pu
	sub	edi, 2
	je	SHORT $LN20@RSA_eay_pu
; Line 701
	push	701					; 000002bdH
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	118					; 00000076H
	push	103					; 00000067H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN30@RSA_eay_pu:
	or	edi, -1
$err$36:
; Line 709
	mov	esi, DWORD PTR _ctx$1$[esp+24]
	push	esi
	call	_BN_CTX_end
; Line 710
	push	esi
	call	_BN_CTX_free
	add	esp, 8
; Line 712
	test	ebp, ebp
	je	SHORT $LN31@RSA_eay_pu
; Line 713
	push	ebx
	push	ebp
	call	_OPENSSL_cleanse
; Line 714
	push	ebp
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN31@RSA_eay_pu:
	pop	ebp
$LN25@RSA_eay_pu:
	pop	ebx
; Line 716
	mov	eax, edi
	pop	edi
	pop	esi
; Line 717
	add	esp, 8
	ret	0
$LN20@RSA_eay_pu:
; Line 695
	push	ebx
	push	eax
	push	ebp
	push	ebx
	push	DWORD PTR _to$[esp+36]
	call	_RSA_padding_check_X931
; Line 696
	jmp	SHORT $LN32@RSA_eay_pu
$LN21@RSA_eay_pu:
; Line 698
	push	ebx
	push	eax
	push	ebp
	push	ebx
	push	DWORD PTR _to$[esp+36]
	call	_RSA_padding_check_none
; Line 699
	jmp	SHORT $LN32@RSA_eay_pu
$LN19@RSA_eay_pu:
; Line 692
	push	ebx
	push	eax
	push	ebp
	push	ebx
	push	DWORD PTR _to$[esp+36]
	call	_RSA_padding_check_PKCS1_type_1
$LN32@RSA_eay_pu:
	mov	edi, eax
	add	esp, 20					; 00000014H
; Line 704
	test	edi, edi
	jns	SHORT $err$36
; Line 705
	push	705					; 000002c1H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	114					; 00000072H
	push	103					; 00000067H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	SHORT $err$36
$LN10@RSA_eay_pu:
; Line 652
	push	652					; 0000028cH
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	65					; 00000041H
	push	103					; 00000067H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	$err$36
_RSA_eay_public_decrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_eay_private_encrypt
_TEXT	SEGMENT
_num$1$ = -40						; size = 4
_f$1$ = -36						; size = 4
_blinding$1$ = -32					; size = 4
_unblind$1$ = -28					; size = 4
_d$1$ = -24						; size = 4
_local_blinding$ = -24					; size = 4
_local_d$1 = -20					; size = 20
_flen$ = 8						; size = 4
_from$ = 12						; size = 4
_to$ = 16						; size = 4
_rsa$ = 20						; size = 4
_padding$ = 24						; size = 4
_RSA_eay_private_encrypt PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 350
	mov	eax, 40					; 00000028H
	call	__chkstk
	push	ebx
; Line 355
	mov	DWORD PTR _local_blinding$[esp+44], 0
; Line 361
	mov	DWORD PTR _unblind$1$[esp+44], 0
; Line 362
	mov	DWORD PTR _blinding$1$[esp+44], 0
; Line 364
	call	_BN_CTX_new
	mov	ebx, eax
	test	ebx, ebx
	je	$LN48@RSA_eay_pr
; Line 366
	push	ebp
	push	esi
	push	edi
	push	ebx
	call	_BN_CTX_start
; Line 367
	push	ebx
	call	_BN_CTX_get
; Line 368
	push	ebx
	mov	DWORD PTR _f$1$[esp+68], eax
	call	_BN_CTX_get
; Line 369
	mov	esi, DWORD PTR _rsa$[esp+64]
	mov	edi, eax
	push	DWORD PTR [esi+16]
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
; Line 370
	push	370					; 00000172H
	sar	eax, 3
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	eax
	mov	DWORD PTR _num$1$[esp+84], eax
	call	_CRYPTO_malloc
	add	esp, 28					; 0000001cH
	mov	ebp, eax
; Line 371
	cmp	DWORD PTR _f$1$[esp+56], 0
	je	$LN9@RSA_eay_pr
	test	edi, edi
	je	$LN9@RSA_eay_pr
	test	ebp, ebp
	je	$LN9@RSA_eay_pr
; Line 376
	mov	eax, DWORD PTR _padding$[esp+52]
	sub	eax, 1
	je	SHORT $LN10@RSA_eay_pr
	sub	eax, 2
	je	SHORT $LN12@RSA_eay_pr
	sub	eax, 2
	je	SHORT $LN11@RSA_eay_pr
; Line 388
	push	388					; 00000184H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	118					; 00000076H
; Line 389
	jmp	$LN60@RSA_eay_pr
$LN11@RSA_eay_pr:
; Line 381
	push	DWORD PTR _flen$[esp+52]
	push	DWORD PTR _from$[esp+56]
	push	DWORD PTR _num$1$[esp+64]
	push	ebp
	call	_RSA_padding_add_X931
; Line 382
	jmp	SHORT $LN59@RSA_eay_pr
$LN12@RSA_eay_pr:
; Line 384
	push	DWORD PTR _flen$[esp+52]
	push	DWORD PTR _from$[esp+56]
	push	DWORD PTR _num$1$[esp+64]
	push	ebp
	call	_RSA_padding_add_none
; Line 385
	jmp	SHORT $LN59@RSA_eay_pr
$LN10@RSA_eay_pr:
; Line 378
	push	DWORD PTR _flen$[esp+52]
	push	DWORD PTR _from$[esp+56]
	push	DWORD PTR _num$1$[esp+64]
	push	ebp
	call	_RSA_padding_add_PKCS1_type_1
$LN59@RSA_eay_pr:
	add	esp, 16					; 00000010H
; Line 391
	test	eax, eax
	jle	$LN54@RSA_eay_pr
; Line 394
	push	DWORD PTR _f$1$[esp+56]
	push	DWORD PTR _num$1$[esp+60]
	push	ebp
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN54@RSA_eay_pr
; Line 397
	push	DWORD PTR [esi+16]
	push	DWORD PTR _f$1$[esp+60]
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN16@RSA_eay_pr
; Line 399
	push	400					; 00000190H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	132					; 00000084H
; Line 401
	jmp	$LN60@RSA_eay_pr
$LN16@RSA_eay_pr:
; Line 404
	test	BYTE PTR [esi+60], -128			; ffffff80H
	jne	SHORT $LN21@RSA_eay_pr
; Line 405
	push	ebx
	lea	eax, DWORD PTR _local_blinding$[esp+60]
	push	eax
	push	esi
	call	_rsa_get_blinding
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _blinding$1$[esp+56], eax
; Line 406
	test	eax, eax
	jne	SHORT $LN46@RSA_eay_pr
; Line 407
	push	407					; 00000197H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	68					; 00000044H
; Line 408
	jmp	$LN60@RSA_eay_pr
$LN46@RSA_eay_pr:
; Line 413
	cmp	DWORD PTR _local_blinding$[esp+56], 0
	jne	SHORT $LN20@RSA_eay_pr
	push	ebx
	call	_BN_CTX_get
	add	esp, 4
	mov	DWORD PTR _unblind$1$[esp+56], eax
	test	eax, eax
	jne	SHORT $LN55@RSA_eay_pr
; Line 414
	push	414					; 0000019eH
; Line 415
	jmp	$LN61@RSA_eay_pr
$LN55@RSA_eay_pr:
	mov	eax, DWORD PTR _blinding$1$[esp+56]
$LN20@RSA_eay_pr:
; Line 417
	push	ebx
	push	DWORD PTR _unblind$1$[esp+60]
	push	DWORD PTR _f$1$[esp+64]
	push	eax
	call	_rsa_blinding_convert
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN54@RSA_eay_pr
$LN21@RSA_eay_pr:
; Line 421
	mov	eax, DWORD PTR [esi+60]
	test	al, 32					; 00000020H
	jne	$LN24@RSA_eay_pr
	cmp	DWORD PTR [esi+28], 0
	je	SHORT $LN22@RSA_eay_pr
	cmp	DWORD PTR [esi+32], 0
	je	SHORT $LN22@RSA_eay_pr
	cmp	DWORD PTR [esi+36], 0
	je	SHORT $LN22@RSA_eay_pr
	cmp	DWORD PTR [esi+40], 0
	je	SHORT $LN22@RSA_eay_pr
	cmp	DWORD PTR [esi+44], 0
	jne	$LN24@RSA_eay_pr
$LN22@RSA_eay_pr:
; Line 431
	test	eax, 256				; 00000100H
	jne	SHORT $LN26@RSA_eay_pr
; Line 432
	lea	eax, DWORD PTR _local_d$1[esp+56]
	push	eax
	call	_BN_init
; Line 434
	mov	ecx, DWORD PTR [esi+24]
	lea	edx, DWORD PTR _local_d$1[esp+60]
	add	esp, 4
	mov	DWORD PTR _d$1$[esp+56], edx
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _local_d$1[esp+56], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _local_d$1[esp+60], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _local_d$1[esp+64], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _local_d$1[esp+68], eax
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _local_d$1[esp+72]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_d$1[esp+72], ecx
; Line 435
	jmp	SHORT $LN27@RSA_eay_pr
$LN26@RSA_eay_pr:
; Line 436
	mov	eax, DWORD PTR [esi+24]
	mov	DWORD PTR _d$1$[esp+56], eax
$LN27@RSA_eay_pr:
; Line 438
	test	BYTE PTR [esi+60], 2
	je	SHORT $LN29@RSA_eay_pr
; Line 439
	push	ebx
	push	DWORD PTR [esi+16]
	lea	eax, DWORD PTR [esi+64]
	push	9
	push	eax
	call	_BN_MONT_CTX_set_locked
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN54@RSA_eay_pr
$LN29@RSA_eay_pr:
; Line 443
	push	DWORD PTR [esi+64]
	mov	eax, DWORD PTR [esi+8]
	push	ebx
	push	DWORD PTR [esi+16]
	push	DWORD PTR _d$1$[esp+68]
	mov	eax, DWORD PTR [eax+24]
	push	DWORD PTR _f$1$[esp+72]
	push	edi
	call	eax
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN25@RSA_eay_pr
; Line 445
	jmp	$LN54@RSA_eay_pr
$LN24@RSA_eay_pr:
; Line 425
	mov	eax, DWORD PTR [esi+8]
	push	ebx
	push	esi
	push	DWORD PTR _f$1$[esp+64]
	mov	eax, DWORD PTR [eax+20]
	push	edi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN54@RSA_eay_pr
$LN25@RSA_eay_pr:
; Line 448
	mov	eax, DWORD PTR _blinding$1$[esp+56]
	test	eax, eax
	je	SHORT $LN32@RSA_eay_pr
; Line 344
	push	ebx
	push	eax
	push	DWORD PTR _unblind$1$[esp+64]
	push	edi
	call	_BN_BLINDING_invert_ex
	add	esp, 16					; 00000010H
; Line 449
	test	eax, eax
	je	$LN54@RSA_eay_pr
$LN32@RSA_eay_pr:
; Line 452
	cmp	DWORD PTR _padding$[esp+52], 5
	jne	SHORT $LN33@RSA_eay_pr
; Line 453
	push	edi
	push	DWORD PTR [esi+16]
	mov	esi, DWORD PTR _f$1$[esp+64]
	push	esi
	call	_BN_sub
; Line 454
	push	esi
	push	edi
	call	_BN_cmp
	add	esp, 20					; 00000014H
	test	eax, eax
	cmovg	edi, esi
$LN33@RSA_eay_pr:
; Line 465
	push	edi
	call	_BN_num_bits
; Line 467
	mov	esi, DWORD PTR _num$1$[esp+60]
	add	eax, 7
	cdq
	mov	ecx, esi
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	sub	ecx, eax
	add	ecx, DWORD PTR _to$[esp+56]
	push	ecx
	push	edi
	call	_BN_bn2bin
	mov	ecx, esi
	add	esp, 12					; 0000000cH
	sub	ecx, eax
	test	ecx, ecx
	jle	SHORT $LN5@RSA_eay_pr
; Line 468
	mov	edi, DWORD PTR _to$[esp+52]
	mov	edx, ecx
	shr	ecx, 2
	xor	eax, eax
	rep stosd
	mov	ecx, edx
	and	ecx, 3
	rep stosb
$LN5@RSA_eay_pr:
; Line 470
	mov	edi, esi
	jmp	SHORT $err$63
$LN9@RSA_eay_pr:
; Line 372
	push	372					; 00000174H
$LN61@RSA_eay_pr:
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	65					; 00000041H
$LN60@RSA_eay_pr:
	push	102					; 00000066H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN54@RSA_eay_pr:
	mov	esi, DWORD PTR _num$1$[esp+56]
	or	edi, -1
$err$63:
; Line 473
	push	ebx
	call	_BN_CTX_end
; Line 474
	push	ebx
	call	_BN_CTX_free
	add	esp, 8
; Line 476
	test	ebp, ebp
	je	SHORT $LN47@RSA_eay_pr
; Line 477
	push	esi
	push	ebp
	call	_OPENSSL_cleanse
; Line 478
	push	ebp
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN47@RSA_eay_pr:
; Line 480
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 481
	add	esp, 40					; 00000028H
	ret	0
$LN48@RSA_eay_pr:
; Line 480
	or	eax, -1
	pop	ebx
; Line 481
	add	esp, 40					; 00000028H
	ret	0
_RSA_eay_private_encrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_eay_public_encrypt
_TEXT	SEGMENT
_ret$1$ = -12						; size = 4
_r$1$ = -8						; size = 4
_ctx$1$ = -4						; size = 4
_flen$ = 8						; size = 4
_from$ = 12						; size = 4
_to$ = 16						; size = 4
_f$1$ = 20						; size = 4
_rsa$ = 20						; size = 4
_padding$ = 24						; size = 4
_RSA_eay_public_encrypt PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 157
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	esi
; Line 163
	mov	esi, DWORD PTR _rsa$[esp+12]
	mov	DWORD PTR _r$1$[esp+16], -1
	push	DWORD PTR [esi+16]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 16384				; 00004000H
	jle	SHORT $LN7@RSA_eay_pu
; Line 164
	push	164					; 000000a4H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	105					; 00000069H
	push	104					; 00000068H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 165
	or	eax, -1
	pop	esi
; Line 254
	add	esp, 12					; 0000000cH
	ret	0
$LN7@RSA_eay_pu:
; Line 168
	push	DWORD PTR [esi+20]
	push	DWORD PTR [esi+16]
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	jg	SHORT $LN8@RSA_eay_pu
; Line 169
	push	169					; 000000a9H
$LN36@RSA_eay_pu:
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	101					; 00000065H
	push	104					; 00000068H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 170
	or	eax, -1
	pop	esi
; Line 254
	add	esp, 12					; 0000000cH
	ret	0
$LN8@RSA_eay_pu:
; Line 174
	push	DWORD PTR [esi+16]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 3072				; 00000c00H
	jle	SHORT $LN10@RSA_eay_pu
; Line 175
	push	DWORD PTR [esi+20]
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 64					; 00000040H
	jle	SHORT $LN10@RSA_eay_pu
; Line 176
	push	176					; 000000b0H
; Line 177
	jmp	SHORT $LN36@RSA_eay_pu
$LN10@RSA_eay_pu:
	push	edi
; Line 181
	call	_BN_CTX_new
	mov	edi, eax
	mov	DWORD PTR _ctx$1$[esp+20], edi
	test	edi, edi
	je	$LN26@RSA_eay_pu
; Line 183
	push	ebx
	push	ebp
	push	edi
	call	_BN_CTX_start
; Line 184
	push	edi
	call	_BN_CTX_get
; Line 185
	push	edi
	mov	DWORD PTR _f$1$[esp+36], eax
	call	_BN_CTX_get
; Line 186
	push	DWORD PTR [esi+16]
	mov	DWORD PTR _ret$1$[esp+44], eax
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
; Line 187
	push	187					; 000000bbH
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	lea	ebp, DWORD PTR [edx+eax]
	sar	ebp, 3
	push	ebp
	call	_CRYPTO_malloc
	add	esp, 28					; 0000001cH
	mov	ebx, eax
; Line 188
	cmp	DWORD PTR _f$1$[esp+24], 0
	je	$LN13@RSA_eay_pu
	cmp	DWORD PTR _ret$1$[esp+28], 0
	je	$LN13@RSA_eay_pu
	test	ebx, ebx
	je	$LN13@RSA_eay_pu
; Line 193
	mov	eax, DWORD PTR _padding$[esp+24]
	dec	eax
	cmp	eax, 3
	ja	$LN18@RSA_eay_pu
	jmp	DWORD PTR $LN38@RSA_eay_pu[eax*4]
$LN14@RSA_eay_pu:
; Line 195
	push	DWORD PTR _flen$[esp+24]
	push	DWORD PTR _from$[esp+28]
	push	ebp
	push	ebx
	call	_RSA_padding_add_PKCS1_type_2
; Line 196
	jmp	SHORT $LN34@RSA_eay_pu
$LN15@RSA_eay_pu:
; Line 199
	push	0
	push	0
	push	DWORD PTR _flen$[esp+32]
	push	DWORD PTR _from$[esp+36]
	push	ebp
	push	ebx
	call	_RSA_padding_add_PKCS1_OAEP
	add	esp, 24					; 00000018H
; Line 200
	jmp	SHORT $LN2@RSA_eay_pu
$LN16@RSA_eay_pu:
; Line 203
	push	DWORD PTR _flen$[esp+24]
	push	DWORD PTR _from$[esp+28]
	push	ebp
	push	ebx
	call	_RSA_padding_add_SSLv23
; Line 204
	jmp	SHORT $LN34@RSA_eay_pu
$LN17@RSA_eay_pu:
; Line 206
	push	DWORD PTR _flen$[esp+24]
	push	DWORD PTR _from$[esp+28]
	push	ebp
	push	ebx
	call	_RSA_padding_add_none
$LN34@RSA_eay_pu:
	add	esp, 16					; 00000010H
$LN2@RSA_eay_pu:
; Line 212
	test	eax, eax
	jle	$err$39
; Line 215
	push	DWORD PTR _f$1$[esp+24]
	push	ebp
	push	ebx
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$39
; Line 218
	push	DWORD PTR [esi+16]
	push	DWORD PTR _f$1$[esp+28]
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN21@RSA_eay_pu
; Line 220
	push	221					; 000000ddH
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	132					; 00000084H
; Line 222
	jmp	$LN35@RSA_eay_pu
$LN21@RSA_eay_pu:
; Line 225
	test	BYTE PTR [esi+60], 2
	je	SHORT $LN23@RSA_eay_pu
; Line 226
	push	edi
	push	DWORD PTR [esi+16]
	lea	eax, DWORD PTR [esi+64]
	push	9
	push	eax
	call	_BN_MONT_CTX_set_locked
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$39
$LN23@RSA_eay_pu:
; Line 230
	push	DWORD PTR [esi+64]
	mov	eax, DWORD PTR [esi+8]
	push	edi
	push	DWORD PTR [esi+16]
	push	DWORD PTR [esi+20]
	mov	esi, DWORD PTR _ret$1$[esp+44]
	push	DWORD PTR _f$1$[esp+40]
	mov	eax, DWORD PTR [eax+24]
	push	esi
	call	eax
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $err$39
; Line 238
	push	esi
	call	_BN_num_bits
	add	eax, 7
; Line 240
	mov	ecx, ebp
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	sub	ecx, eax
	add	ecx, DWORD PTR _to$[esp+28]
	push	ecx
	push	esi
	call	_BN_bn2bin
	mov	ecx, ebp
	add	esp, 12					; 0000000cH
	sub	ecx, eax
	test	ecx, ecx
	jle	SHORT $LN5@RSA_eay_pu
; Line 241
	mov	edi, DWORD PTR _to$[esp+24]
	mov	edx, ecx
	shr	ecx, 2
	xor	eax, eax
	rep stosd
	mov	ecx, edx
	and	ecx, 3
	rep stosb
	mov	edi, DWORD PTR _ctx$1$[esp+28]
$LN5@RSA_eay_pu:
; Line 243
	mov	DWORD PTR _r$1$[esp+28], ebp
	jmp	SHORT $err$39
$LN18@RSA_eay_pu:
; Line 209
	push	209					; 000000d1H
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	118					; 00000076H
; Line 210
	jmp	SHORT $LN35@RSA_eay_pu
$LN13@RSA_eay_pu:
; Line 189
	push	189					; 000000bdH
	push	OFFSET ??_C@_0BH@FEEKPMJH@?4?2crypto?2rsa?2rsa_eay?4c?$AA@
	push	65					; 00000041H
$LN35@RSA_eay_pu:
	push	104					; 00000068H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$39:
; Line 246
	push	edi
	call	_BN_CTX_end
; Line 247
	push	edi
	call	_BN_CTX_free
	add	esp, 8
; Line 249
	test	ebx, ebx
	je	SHORT $LN32@RSA_eay_pu
; Line 250
	push	ebp
	push	ebx
	call	_OPENSSL_cleanse
; Line 251
	push	ebx
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN32@RSA_eay_pu:
	pop	ebp
	pop	ebx
$LN26@RSA_eay_pu:
; Line 253
	mov	eax, DWORD PTR _r$1$[esp+20]
	pop	edi
	pop	esi
; Line 254
	add	esp, 12					; 0000000cH
	ret	0
	npad	1
$LN38@RSA_eay_pu:
	DD	$LN14@RSA_eay_pu
	DD	$LN16@RSA_eay_pu
	DD	$LN17@RSA_eay_pu
	DD	$LN15@RSA_eay_pu
_RSA_eay_public_encrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_PKCS1_SSLeay
_TEXT	SEGMENT
_RSA_PKCS1_SSLeay PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_eay.c
; Line 152
	mov	eax, OFFSET _rsa_pkcs1_eay_meth
; Line 153
	ret	0
_RSA_PKCS1_SSLeay ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ec_GFp_simple_group_init
PUBLIC	_ec_GFp_simple_group_finish
PUBLIC	_ec_GFp_simple_group_clear_finish
PUBLIC	_ec_GFp_simple_group_copy
PUBLIC	_ec_GFp_simple_group_set_curve
PUBLIC	_ec_GFp_simple_group_get_curve
PUBLIC	_ec_GFp_simple_group_get_degree
PUBLIC	_ec_GFp_simple_group_check_discriminant
PUBLIC	_ec_GFp_simple_point_init
PUBLIC	_ec_GFp_simple_point_finish
PUBLIC	_ec_GFp_simple_point_clear_finish
PUBLIC	_ec_GFp_simple_point_copy
PUBLIC	_ec_GFp_simple_point_set_to_infinity
PUBLIC	_ec_GFp_simple_set_Jprojective_coordinates_GFp
PUBLIC	_ec_GFp_simple_get_Jprojective_coordinates_GFp
PUBLIC	_ec_GFp_simple_point_set_affine_coordinates
PUBLIC	_ec_GFp_simple_point_get_affine_coordinates
PUBLIC	_ec_GFp_simple_add
PUBLIC	_ec_GFp_simple_dbl
PUBLIC	_ec_GFp_simple_invert
PUBLIC	_ec_GFp_simple_is_at_infinity
PUBLIC	_ec_GFp_simple_is_on_curve
PUBLIC	_ec_GFp_simple_cmp
PUBLIC	_ec_GFp_simple_make_affine
PUBLIC	_ec_GFp_simple_points_make_affine
PUBLIC	_ec_GFp_simple_field_mul
PUBLIC	_ec_GFp_simple_field_sqr
CONST	SEGMENT
?ret@?1??EC_GFp_simple_method@@9@9 DD 01H		; `EC_GFp_simple_method'::`2'::ret
	DD	0196H
	DD	FLAT:_ec_GFp_simple_group_init
	DD	FLAT:_ec_GFp_simple_group_finish
	DD	FLAT:_ec_GFp_simple_group_clear_finish
	DD	FLAT:_ec_GFp_simple_group_copy
	DD	FLAT:_ec_GFp_simple_group_set_curve
	DD	FLAT:_ec_GFp_simple_group_get_curve
	DD	FLAT:_ec_GFp_simple_group_get_degree
	DD	FLAT:_ec_GFp_simple_group_check_discriminant
	DD	FLAT:_ec_GFp_simple_point_init
	DD	FLAT:_ec_GFp_simple_point_finish
	DD	FLAT:_ec_GFp_simple_point_clear_finish
	DD	FLAT:_ec_GFp_simple_point_copy
	DD	FLAT:_ec_GFp_simple_point_set_to_infinity
	DD	FLAT:_ec_GFp_simple_set_Jprojective_coordinates_GFp
	DD	FLAT:_ec_GFp_simple_get_Jprojective_coordinates_GFp
	DD	FLAT:_ec_GFp_simple_point_set_affine_coordinates
	DD	FLAT:_ec_GFp_simple_point_get_affine_coordinates
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_ec_GFp_simple_add
	DD	FLAT:_ec_GFp_simple_dbl
	DD	FLAT:_ec_GFp_simple_invert
	DD	FLAT:_ec_GFp_simple_is_at_infinity
	DD	FLAT:_ec_GFp_simple_is_on_curve
	DD	FLAT:_ec_GFp_simple_cmp
	DD	FLAT:_ec_GFp_simple_make_affine
	DD	FLAT:_ec_GFp_simple_points_make_affine
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_ec_GFp_simple_field_mul
	DD	FLAT:_ec_GFp_simple_field_sqr
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	_EC_GFp_simple_method
PUBLIC	??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_value_one:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_CTX_start:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_CTX_end:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_init:PROC
EXTRN	_BN_clear_free:PROC
EXTRN	_BN_copy:PROC
EXTRN	_BN_usub:PROC
EXTRN	_BN_add:PROC
EXTRN	_BN_set_negative:PROC
EXTRN	_BN_nnmod:PROC
EXTRN	_BN_mod_add:PROC
EXTRN	_BN_mod_add_quick:PROC
EXTRN	_BN_mod_sub_quick:PROC
EXTRN	_BN_mod_mul:PROC
EXTRN	_BN_mod_sqr:PROC
EXTRN	_BN_mod_lshift1_quick:PROC
EXTRN	_BN_mod_lshift_quick:PROC
EXTRN	_BN_mul_word:PROC
EXTRN	_BN_add_word:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_lshift:PROC
EXTRN	_BN_rshift1:PROC
EXTRN	_BN_ucmp:PROC
EXTRN	_BN_mod_inverse:PROC
EXTRN	_EC_POINT_copy:PROC
EXTRN	_EC_POINT_set_Jprojective_coordinates_GFp:PROC
EXTRN	_EC_POINT_set_affine_coordinates_GFp:PROC
EXTRN	_EC_POINT_get_affine_coordinates_GFp:PROC
EXTRN	_EC_POINT_dbl:PROC
EXTRN	_EC_POINT_is_at_infinity:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@
CONST	SEGMENT
??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@ DB '.\crypto\ec\ecp_s'
	DB	'mpl.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_field_sqr
_TEXT	SEGMENT
_group$ = 8						; size = 4
_r$ = 12						; size = 4
_a$ = 16						; size = 4
_ctx$ = 20						; size = 4
_ec_GFp_simple_field_sqr PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 1417
	push	DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _group$[esp]
	add	eax, 72					; 00000048H
	push	eax
	push	DWORD PTR _a$[esp+4]
	push	DWORD PTR _r$[esp+8]
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
; Line 1418
	ret	0
_ec_GFp_simple_field_sqr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_field_mul
_TEXT	SEGMENT
_group$ = 8						; size = 4
_r$ = 12						; size = 4
_a$ = 16						; size = 4
_b$ = 20						; size = 4
_ctx$ = 24						; size = 4
_ec_GFp_simple_field_mul PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 1411
	push	DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _group$[esp]
	add	eax, 72					; 00000048H
	push	eax
	push	DWORD PTR _b$[esp+4]
	push	DWORD PTR _a$[esp+8]
	push	DWORD PTR _r$[esp+12]
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
; Line 1412
	ret	0
_ec_GFp_simple_field_mul ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_points_make_affine
_TEXT	SEGMENT
_prod_Z$1$ = -20					; size = 4
tv717 = -16						; size = 4
_i$2$ = -16						; size = 4
_i$4$ = -12						; size = 4
_tmp_Z$1$ = -12						; size = 4
_new_ctx$1$ = -8					; size = 4
tv719 = -4						; size = 4
_group$ = 8						; size = 4
_num$ = 12						; size = 4
_points$ = 16						; size = 4
_ctx$ = 20						; size = 4
_ec_GFp_simple_points_make_affine PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 1251
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebp
; Line 1258
	mov	ebp, DWORD PTR _num$[esp+20]
	mov	DWORD PTR _new_ctx$1$[esp+24], 0
	mov	DWORD PTR _prod_Z$1$[esp+24], 0
	test	ebp, ebp
	jne	SHORT $LN17@ec_GFp_sim
; Line 1259
	lea	eax, DWORD PTR [ebp+1]
	pop	ebp
; Line 1406
	add	esp, 20					; 00000014H
	ret	0
$LN17@ec_GFp_sim:
	push	esi
	push	edi
; Line 1261
	mov	edi, DWORD PTR _ctx$[esp+28]
	test	edi, edi
	jne	SHORT $LN19@ec_GFp_sim
; Line 1262
	call	_BN_CTX_new
	mov	esi, eax
	mov	DWORD PTR _new_ctx$1$[esp+32], esi
	mov	edi, esi
; Line 1263
	test	esi, esi
	jne	SHORT $LN19@ec_GFp_sim
	pop	edi
	pop	esi
	pop	ebp
; Line 1406
	add	esp, 20					; 00000014H
	ret	0
$LN19@ec_GFp_sim:
	push	ebx
; Line 1267
	push	edi
	call	_BN_CTX_start
; Line 1268
	push	edi
	call	_BN_CTX_get
; Line 1269
	push	edi
	mov	ebx, eax
	call	_BN_CTX_get
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _tmp_Z$1$[esp+36], eax
; Line 1270
	test	ebx, ebx
	je	$LN112@ec_GFp_sim
	test	eax, eax
	je	$LN112@ec_GFp_sim
; Line 1273
	push	1273					; 000004f9H
	lea	eax, DWORD PTR [ebp*4]
	push	OFFSET ??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _prod_Z$1$[esp+36], ecx
; Line 1274
	test	ecx, ecx
	je	$LN112@ec_GFp_sim
; Line 1276
	xor	esi, esi
	test	ebp, ebp
	je	SHORT $LN3@ec_GFp_sim
$LL4@ec_GFp_sim:
; Line 1277
	call	_BN_new
	mov	ecx, DWORD PTR _prod_Z$1$[esp+36]
	mov	DWORD PTR [ecx+esi*4], eax
; Line 1278
	test	eax, eax
	je	$LN112@ec_GFp_sim
; Line 1276
	inc	esi
	cmp	esi, ebp
	jb	SHORT $LL4@ec_GFp_sim
$LN3@ec_GFp_sim:
; Line 1287
	mov	eax, DWORD PTR _points$[esp+32]
	mov	esi, DWORD PTR _group$[esp+32]
	mov	eax, DWORD PTR [eax]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN24@ec_GFp_sim
; Line 1288
	add	eax, 44					; 0000002cH
	push	eax
	push	DWORD PTR [ecx]
	call	_BN_copy
; Line 1290
	jmp	SHORT $LN117@ec_GFp_sim
$LN24@ec_GFp_sim:
; Line 1291
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+152]
	test	eax, eax
	je	SHORT $LN27@ec_GFp_sim
; Line 1292
	push	edi
	push	DWORD PTR [ecx]
	push	esi
	call	eax
	add	esp, 12					; 0000000cH
; Line 1294
	jmp	SHORT $LN118@ec_GFp_sim
$LN27@ec_GFp_sim:
; Line 1295
	push	1
	push	DWORD PTR [ecx]
	call	_BN_set_word
$LN117@ec_GFp_sim:
	add	esp, 8
$LN118@ec_GFp_sim:
	test	eax, eax
	je	$LN112@ec_GFp_sim
; Line 1300
	mov	DWORD PTR _i$2$[esp+36], 1
	cmp	ebp, 1
	jbe	SHORT $LN6@ec_GFp_sim
	mov	eax, DWORD PTR _prod_Z$1$[esp+36]
	mov	ecx, DWORD PTR _points$[esp+32]
	sub	ecx, eax
	mov	DWORD PTR tv719[esp+36], ecx
	lea	ebp, DWORD PTR [eax+4]
$LL7@ec_GFp_sim:
; Line 1301
	mov	eax, DWORD PTR [ecx+ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN31@ec_GFp_sim
; Line 1302
	mov	ecx, DWORD PTR [esi]
	add	eax, 44					; 0000002cH
	push	edi
	push	eax
	push	DWORD PTR [ebp-4]
	mov	eax, DWORD PTR [ecx+132]
	push	DWORD PTR [ebp]
	push	esi
	call	eax
	add	esp, 20					; 00000014H
; Line 1305
	jmp	SHORT $LN120@ec_GFp_sim
$LN31@ec_GFp_sim:
; Line 1306
	push	DWORD PTR [ebp-4]
	push	DWORD PTR [ebp]
	call	_BN_copy
	add	esp, 8
$LN120@ec_GFp_sim:
	test	eax, eax
	je	SHORT $LN112@ec_GFp_sim
; Line 1300
	mov	ecx, DWORD PTR _i$2$[esp+36]
	add	ebp, 4
	inc	ecx
	cmp	ecx, DWORD PTR _num$[esp+32]
	mov	DWORD PTR _i$2$[esp+36], ecx
	mov	ecx, DWORD PTR tv719[esp+36]
	jb	SHORT $LL7@ec_GFp_sim
	mov	ebp, DWORD PTR _num$[esp+32]
$LN6@ec_GFp_sim:
; Line 1316
	push	edi
	lea	eax, DWORD PTR [esi+72]
	push	eax
	mov	eax, DWORD PTR _prod_Z$1$[esp+44]
	push	DWORD PTR [eax+ebp*4-4]
	push	ebx
	call	_BN_mod_inverse
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN35@ec_GFp_sim
; Line 1317
	push	1317					; 00000525H
	push	OFFSET ??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@
	push	3
	push	137					; 00000089H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN112@ec_GFp_sim:
	xor	ebp, ebp
$err$124:
; Line 1394
	push	edi
	call	_BN_CTX_end
; Line 1395
	mov	eax, DWORD PTR _new_ctx$1$[esp+40]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN54@ec_GFp_sim
; Line 1396
	push	eax
	call	_BN_CTX_free
	add	esp, 4
$LN54@ec_GFp_sim:
; Line 1397
	mov	ecx, DWORD PTR _prod_Z$1$[esp+36]
	test	ecx, ecx
	je	SHORT $LN55@ec_GFp_sim
; Line 1398
	mov	ebx, DWORD PTR _num$[esp+32]
	xor	esi, esi
	test	ebx, ebx
	je	SHORT $LN91@ec_GFp_sim
	npad	3
$LL16@ec_GFp_sim:
; Line 1399
	mov	eax, DWORD PTR [ecx+esi*4]
	test	eax, eax
	je	SHORT $LN91@ec_GFp_sim
; Line 1401
	push	eax
	call	_BN_clear_free
	mov	ecx, DWORD PTR _prod_Z$1$[esp+40]
	inc	esi
	add	esp, 4
	cmp	esi, ebx
	jb	SHORT $LL16@ec_GFp_sim
$LN91@ec_GFp_sim:
; Line 1403
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN55@ec_GFp_sim:
; Line 1405
	pop	ebx
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
; Line 1406
	add	esp, 20					; 00000014H
	ret	0
$LN35@ec_GFp_sim:
; Line 1320
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+144]
	test	eax, eax
	je	SHORT $LN38@ec_GFp_sim
; Line 1326
	push	edi
	push	ebx
	push	ebx
	push	esi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN112@ec_GFp_sim
; Line 1328
	mov	eax, DWORD PTR [esi]
	push	edi
	push	ebx
	push	ebx
	mov	eax, DWORD PTR [eax+144]
	push	esi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN112@ec_GFp_sim
$LN38@ec_GFp_sim:
; Line 1332
	add	ebp, -1
	je	$LN9@ec_GFp_sim
	mov	ecx, DWORD PTR _prod_Z$1$[esp+36]
	add	ecx, -4					; fffffffcH
	lea	ecx, DWORD PTR [ecx+ebp*4]
	mov	DWORD PTR tv717[esp+36], ecx
$LL10@ec_GFp_sim:
; Line 1337
	mov	eax, DWORD PTR _points$[esp+32]
	mov	eax, DWORD PTR [eax+ebp*4]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN8@ec_GFp_sim
; Line 1342
	mov	eax, DWORD PTR [esi]
	push	edi
	push	ebx
	push	DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+132]
	push	DWORD PTR _tmp_Z$1$[esp+48]
	push	esi
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN112@ec_GFp_sim
; Line 1348
	mov	eax, DWORD PTR _points$[esp+32]
	mov	ecx, DWORD PTR [esi]
	push	edi
	mov	eax, DWORD PTR [eax+ebp*4]
	add	eax, 44					; 0000002cH
	push	eax
	mov	eax, DWORD PTR [ecx+132]
	push	ebx
	push	ebx
	push	esi
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN112@ec_GFp_sim
; Line 1351
	mov	eax, DWORD PTR _points$[esp+32]
	push	DWORD PTR _tmp_Z$1$[esp+36]
	mov	eax, DWORD PTR [eax+ebp*4]
	add	eax, 44					; 0000002cH
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN112@ec_GFp_sim
	mov	ecx, DWORD PTR tv717[esp+36]
$LN8@ec_GFp_sim:
; Line 1332
	sub	ecx, 4
	mov	DWORD PTR tv717[esp+36], ecx
	sub	ebp, 1
	jne	SHORT $LL10@ec_GFp_sim
$LN9@ec_GFp_sim:
; Line 1356
	mov	edx, DWORD PTR _points$[esp+32]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN44@ec_GFp_sim
; Line 1358
	add	eax, 44					; 0000002cH
	push	ebx
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN112@ec_GFp_sim
	mov	edx, DWORD PTR _points$[esp+32]
$LN44@ec_GFp_sim:
; Line 1364
	mov	eax, DWORD PTR _num$[esp+32]
	xor	ecx, ecx
	mov	DWORD PTR _i$4$[esp+36], ecx
	test	eax, eax
	je	$LN12@ec_GFp_sim
	npad	6
$LL13@ec_GFp_sim:
; Line 1365
	mov	ebp, DWORD PTR [edx+ecx*4]
; Line 1367
	cmp	DWORD PTR [ebp+48], 0
	je	$LN11@ec_GFp_sim
; Line 1370
	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [ebp+44]
	push	edi
	push	ecx
	push	ebx
	mov	eax, DWORD PTR [eax+136]
	push	esi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN112@ec_GFp_sim
; Line 1372
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [ebp+4]
	push	edi
	push	ebx
	push	eax
	push	eax
	mov	eax, DWORD PTR [ecx+132]
	push	esi
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN112@ec_GFp_sim
; Line 1375
	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [ebp+44]
	push	edi
	push	ecx
	push	ebx
	mov	eax, DWORD PTR [eax+132]
	push	ebx
	push	esi
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN112@ec_GFp_sim
; Line 1377
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [ebp+24]
	push	edi
	push	ebx
	push	eax
	push	eax
	mov	eax, DWORD PTR [ecx+132]
	push	esi
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN112@ec_GFp_sim
; Line 1380
	mov	eax, DWORD PTR [esi]
	mov	ecx, DWORD PTR [eax+152]
; Line 1381
	lea	eax, DWORD PTR [ebp+44]
	test	ecx, ecx
	je	SHORT $LN50@ec_GFp_sim
	push	edi
	push	eax
	push	esi
	call	ecx
	add	esp, 12					; 0000000cH
; Line 1383
	jmp	SHORT $LN122@ec_GFp_sim
$LN50@ec_GFp_sim:
; Line 1384
	push	1
	push	eax
	call	_BN_set_word
	add	esp, 8
$LN122@ec_GFp_sim:
	test	eax, eax
	je	$LN112@ec_GFp_sim
; Line 1387
	mov	eax, DWORD PTR _num$[esp+32]
	mov	ecx, DWORD PTR _i$4$[esp+36]
	mov	edx, DWORD PTR _points$[esp+32]
	mov	DWORD PTR [ebp+64], 1
$LN11@ec_GFp_sim:
; Line 1364
	inc	ecx
	mov	DWORD PTR _i$4$[esp+36], ecx
	cmp	ecx, eax
	jb	$LL13@ec_GFp_sim
$LN12@ec_GFp_sim:
; Line 1391
	mov	ebp, 1
	jmp	$err$124
_ec_GFp_simple_points_make_affine ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_make_affine
_TEXT	SEGMENT
_y$1$ = -4						; size = 4
_group$ = 8						; size = 4
_x$1$ = 12						; size = 4
_point$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ec_GFp_simple_make_affine PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 1211
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 1216
	mov	ebx, DWORD PTR _point$[esp+4]
	push	ebp
	push	edi
	xor	edi, edi
	xor	ebp, ebp
	cmp	DWORD PTR [ebx+64], edi
	jne	$LN3@ec_GFp_sim
	push	ebx
	push	DWORD PTR _group$[esp+16]
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	jne	$LN3@ec_GFp_sim
; Line 1219
	push	esi
	mov	esi, DWORD PTR _ctx$[esp+16]
	test	esi, esi
	jne	SHORT $LN5@ec_GFp_sim
; Line 1220
	call	_BN_CTX_new
	mov	edi, eax
	mov	esi, edi
; Line 1221
	test	edi, edi
	jne	SHORT $LN5@ec_GFp_sim
	pop	esi
	pop	edi
	pop	ebp
	pop	ebx
; Line 1247
	pop	ecx
	ret	0
$LN5@ec_GFp_sim:
; Line 1225
	push	esi
	call	_BN_CTX_start
; Line 1226
	push	esi
	call	_BN_CTX_get
; Line 1227
	push	esi
	mov	DWORD PTR _x$1$[esp+28], eax
	call	_BN_CTX_get
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _y$1$[esp+20], eax
; Line 1228
	test	eax, eax
	je	SHORT $err$14
; Line 1231
	push	esi
	push	eax
	push	DWORD PTR _x$1$[esp+24]
	push	ebx
	push	DWORD PTR _group$[esp+32]
	call	_EC_POINT_get_affine_coordinates_GFp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$14
; Line 1233
	push	esi
	push	DWORD PTR _y$1$[esp+24]
	push	DWORD PTR _x$1$[esp+24]
	push	ebx
	push	DWORD PTR _group$[esp+32]
	call	_EC_POINT_set_affine_coordinates_GFp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$14
; Line 1235
	cmp	DWORD PTR [ebx+64], ebp
	jne	SHORT $LN9@ec_GFp_sim
; Line 1236
	push	1236					; 000004d4H
	push	OFFSET ??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@
	push	68					; 00000044H
	push	102					; 00000066H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1237
	jmp	SHORT $err$14
$LN9@ec_GFp_sim:
; Line 1240
	mov	ebp, 1
$err$14:
; Line 1243
	push	esi
	call	_BN_CTX_end
	add	esp, 4
; Line 1244
	test	edi, edi
	je	SHORT $LN10@ec_GFp_sim
; Line 1245
	push	edi
	call	_BN_CTX_free
	add	esp, 4
$LN10@ec_GFp_sim:
; Line 1246
	pop	esi
	pop	edi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 1247
	pop	ecx
	ret	0
$LN3@ec_GFp_sim:
	pop	edi
	pop	ebp
; Line 1217
	mov	eax, 1
	pop	ebx
; Line 1247
	pop	ecx
	ret	0
_ec_GFp_simple_make_affine ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_cmp
_TEXT	SEGMENT
_field_mul$1$ = -32					; size = 4
_Za23$1$ = -28						; size = 4
_tmp1_$1$ = -24						; size = 4
_Zb23$1$ = -20						; size = 4
_tmp1$1$ = -16						; size = 4
_tmp2$1$ = -12						; size = 4
_tmp2_$1$ = -8						; size = 4
_field_sqr$1$ = -8					; size = 4
_new_ctx$1$ = -4					; size = 4
_group$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_ctx$ = 20						; size = 4
_ec_GFp_simple_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 1101
	mov	eax, 32					; 00000020H
	call	__chkstk
	push	ebx
; Line 1117
	mov	ebx, DWORD PTR _a$[esp+32]
	push	ebp
	mov	ebp, DWORD PTR _group$[esp+36]
	push	esi
	push	ebx
	push	ebp
	mov	DWORD PTR _new_ctx$1$[esp+52], 0
	or	esi, -1
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@ec_GFp_sim
; Line 1118
	push	DWORD PTR _b$[esp+40]
	push	ebp
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	neg	eax
	sbb	eax, eax
	inc	eax
	pop	esi
	pop	ebp
	pop	ebx
; Line 1207
	add	esp, 32					; 00000020H
	ret	0
$LN2@ec_GFp_sim:
	push	edi
; Line 1121
	mov	edi, DWORD PTR _b$[esp+44]
	push	edi
	push	ebp
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN28@ec_GFp_sim
; Line 1124
	cmp	DWORD PTR [ebx+64], eax
	je	SHORT $LN4@ec_GFp_sim
	cmp	DWORD PTR [edi+64], eax
	je	SHORT $LN4@ec_GFp_sim
; Line 1125
	lea	eax, DWORD PTR [edi+4]
	push	eax
	lea	eax, DWORD PTR [ebx+4]
	push	eax
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN28@ec_GFp_sim
	lea	eax, DWORD PTR [edi+24]
	push	eax
	lea	eax, DWORD PTR [ebx+24]
	push	eax
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN28@ec_GFp_sim
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1207
	add	esp, 32					; 00000020H
	ret	0
$LN28@ec_GFp_sim:
	pop	edi
	pop	esi
	pop	ebp
; Line 1125
	mov	eax, 1
	pop	ebx
; Line 1207
	add	esp, 32					; 00000020H
	ret	0
$LN4@ec_GFp_sim:
; Line 1129
	mov	eax, DWORD PTR [ebp]
	mov	ecx, DWORD PTR [eax+132]
; Line 1130
	mov	eax, DWORD PTR [eax+136]
	mov	DWORD PTR _field_sqr$1$[esp+48], eax
; Line 1132
	mov	eax, DWORD PTR _ctx$[esp+44]
	mov	DWORD PTR _field_mul$1$[esp+48], ecx
	test	eax, eax
	jne	SHORT $LN6@ec_GFp_sim
; Line 1133
	call	_BN_CTX_new
	mov	ecx, eax
	mov	DWORD PTR _ctx$[esp+44], eax
	mov	DWORD PTR _new_ctx$1$[esp+48], ecx
; Line 1134
	test	ecx, ecx
	jne	SHORT $LN6@ec_GFp_sim
; Line 1135
	pop	edi
	pop	esi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 1207
	add	esp, 32					; 00000020H
	ret	0
$LN6@ec_GFp_sim:
; Line 1138
	push	eax
	call	_BN_CTX_start
; Line 1139
	push	DWORD PTR _ctx$[esp+48]
	call	_BN_CTX_get
; Line 1140
	push	DWORD PTR _ctx$[esp+52]
	mov	DWORD PTR _tmp1$1$[esp+60], eax
	call	_BN_CTX_get
; Line 1141
	push	DWORD PTR _ctx$[esp+56]
	mov	DWORD PTR _tmp2$1$[esp+64], eax
	call	_BN_CTX_get
; Line 1142
	push	DWORD PTR _ctx$[esp+60]
	mov	DWORD PTR _Za23$1$[esp+68], eax
	call	_BN_CTX_get
	add	esp, 20					; 00000014H
	mov	DWORD PTR _Zb23$1$[esp+48], eax
; Line 1143
	test	eax, eax
	je	$end$34
; Line 1153
	cmp	DWORD PTR [edi+64], 0
	jne	SHORT $LN8@ec_GFp_sim
; Line 1154
	push	DWORD PTR _ctx$[esp+44]
	lea	ecx, DWORD PTR [edi+44]
	push	ecx
	push	eax
	push	ebp
	call	DWORD PTR _field_sqr$1$[esp+64]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$end$34
; Line 1156
	push	DWORD PTR _ctx$[esp+44]
	lea	eax, DWORD PTR [ebx+4]
	push	DWORD PTR _Zb23$1$[esp+52]
	push	eax
	push	DWORD PTR _tmp1$1$[esp+60]
	push	ebp
	call	DWORD PTR _field_mul$1$[esp+68]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$end$34
; Line 1158
	mov	eax, DWORD PTR _tmp1$1$[esp+48]
; Line 1159
	jmp	SHORT $LN31@ec_GFp_sim
$LN8@ec_GFp_sim:
; Line 1160
	lea	eax, DWORD PTR [ebx+4]
$LN31@ec_GFp_sim:
; Line 1161
	cmp	DWORD PTR [ebx+64], 0
	mov	DWORD PTR _tmp1_$1$[esp+48], eax
	jne	SHORT $LN12@ec_GFp_sim
; Line 1162
	push	DWORD PTR _ctx$[esp+44]
	lea	eax, DWORD PTR [ebx+44]
	push	eax
	push	DWORD PTR _Za23$1$[esp+56]
	push	ebp
	call	DWORD PTR _field_sqr$1$[esp+64]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$end$34
; Line 1164
	push	DWORD PTR _ctx$[esp+44]
	lea	eax, DWORD PTR [edi+4]
	push	DWORD PTR _Za23$1$[esp+52]
	push	eax
	push	DWORD PTR _tmp2$1$[esp+60]
	push	ebp
	call	DWORD PTR _field_mul$1$[esp+68]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$end$34
; Line 1166
	mov	eax, DWORD PTR _tmp2$1$[esp+48]
; Line 1167
	jmp	SHORT $LN32@ec_GFp_sim
$LN12@ec_GFp_sim:
; Line 1168
	lea	eax, DWORD PTR [edi+4]
$LN32@ec_GFp_sim:
; Line 1171
	push	eax
	push	DWORD PTR _tmp1_$1$[esp+52]
	mov	DWORD PTR _tmp2_$1$[esp+56], eax
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN16@ec_GFp_sim
; Line 1172
	mov	esi, 1
; Line 1173
	jmp	$end$34
$LN16@ec_GFp_sim:
; Line 1176
	cmp	DWORD PTR [edi+64], 0
	jne	SHORT $LN17@ec_GFp_sim
; Line 1177
	push	DWORD PTR _ctx$[esp+44]
	lea	eax, DWORD PTR [edi+44]
	push	eax
	mov	eax, DWORD PTR _Zb23$1$[esp+56]
	push	eax
	push	eax
	push	ebp
	call	DWORD PTR _field_mul$1$[esp+68]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $end$34
; Line 1179
	push	DWORD PTR _ctx$[esp+44]
	lea	eax, DWORD PTR [ebx+24]
	push	DWORD PTR _Zb23$1$[esp+52]
	push	eax
	push	DWORD PTR _tmp1$1$[esp+60]
	push	ebp
	call	DWORD PTR _field_mul$1$[esp+68]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $end$34
; Line 1182
	jmp	SHORT $LN18@ec_GFp_sim
$LN17@ec_GFp_sim:
; Line 1183
	lea	eax, DWORD PTR [ebx+24]
	mov	DWORD PTR _tmp1_$1$[esp+48], eax
$LN18@ec_GFp_sim:
; Line 1184
	cmp	DWORD PTR [ebx+64], 0
	jne	SHORT $LN21@ec_GFp_sim
; Line 1185
	push	DWORD PTR _ctx$[esp+44]
	lea	eax, DWORD PTR [ebx+44]
	mov	ebx, DWORD PTR _field_mul$1$[esp+52]
	push	eax
	mov	eax, DWORD PTR _Za23$1$[esp+56]
	push	eax
	push	eax
	push	ebp
	call	ebx
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $end$34
; Line 1187
	push	DWORD PTR _ctx$[esp+44]
	lea	eax, DWORD PTR [edi+24]
	push	DWORD PTR _Za23$1$[esp+52]
	push	eax
	push	DWORD PTR _tmp2$1$[esp+60]
	push	ebp
	call	ebx
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $end$34
; Line 1190
	mov	edi, DWORD PTR _tmp2_$1$[esp+48]
	jmp	SHORT $LN22@ec_GFp_sim
$LN21@ec_GFp_sim:
; Line 1191
	add	edi, 24					; 00000018H
$LN22@ec_GFp_sim:
; Line 1194
	push	edi
	push	DWORD PTR _tmp1_$1$[esp+52]
	call	_BN_cmp
	add	esp, 8
	mov	esi, eax
	neg	esi
	sbb	esi, esi
	neg	esi
$end$34:
; Line 1203
	push	DWORD PTR _ctx$[esp+44]
	call	_BN_CTX_end
; Line 1204
	mov	eax, DWORD PTR _new_ctx$1$[esp+52]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN26@ec_GFp_sim
; Line 1205
	push	eax
	call	_BN_CTX_free
	add	esp, 4
$LN26@ec_GFp_sim:
; Line 1206
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1207
	add	esp, 32					; 00000020H
	ret	0
_ec_GFp_simple_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_is_on_curve
_TEXT	SEGMENT
_tmp$1$ = -28						; size = 4
_field_mul$1$ = -24					; size = 4
_Z4$1$ = -20						; size = 4
_field_sqr$1$ = -16					; size = 4
tv293 = -12						; size = 4
_Z6$1$ = -8						; size = 4
_new_ctx$1$ = -4					; size = 4
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ec_GFp_simple_is_on_curve PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 997
	mov	eax, 28					; 0000001cH
	call	__chkstk
	push	ebp
	push	esi
; Line 1006
	push	DWORD PTR _point$[esp+32]
	mov	esi, DWORD PTR _group$[esp+36]
	or	ebp, -1
	push	esi
	mov	DWORD PTR _new_ctx$1$[esp+44], 0
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@ec_GFp_sim
; Line 1007
	pop	esi
	lea	eax, DWORD PTR [ebp+2]
	pop	ebp
; Line 1097
	add	esp, 28					; 0000001cH
	ret	0
$LN2@ec_GFp_sim:
; Line 1009
	mov	eax, DWORD PTR [esi]
	push	ebx
; Line 1013
	mov	ebx, DWORD PTR _ctx$[esp+36]
	mov	ecx, DWORD PTR [eax+132]
	mov	eax, DWORD PTR [eax+136]
	mov	DWORD PTR _field_mul$1$[esp+40], ecx
	mov	DWORD PTR _field_sqr$1$[esp+40], eax
	test	ebx, ebx
	jne	SHORT $LN4@ec_GFp_sim
; Line 1014
	call	_BN_CTX_new
	mov	DWORD PTR _new_ctx$1$[esp+40], eax
	mov	ebx, eax
; Line 1015
	test	eax, eax
	jne	SHORT $LN4@ec_GFp_sim
; Line 1016
	pop	ebx
	pop	esi
	or	eax, -1
	pop	ebp
; Line 1097
	add	esp, 28					; 0000001cH
	ret	0
$LN4@ec_GFp_sim:
	push	edi
; Line 1019
	push	ebx
	call	_BN_CTX_start
; Line 1020
	push	ebx
	call	_BN_CTX_get
; Line 1021
	push	ebx
	mov	edi, eax
	call	_BN_CTX_get
; Line 1022
	push	ebx
	mov	DWORD PTR _tmp$1$[esp+60], eax
	call	_BN_CTX_get
; Line 1023
	push	ebx
	mov	DWORD PTR _Z4$1$[esp+64], eax
	call	_BN_CTX_get
	add	esp, 20					; 00000014H
	mov	DWORD PTR _Z6$1$[esp+44], eax
; Line 1024
	test	eax, eax
	je	$err$36
; Line 1038
	mov	eax, DWORD PTR _point$[esp+40]
	add	eax, 4
	push	ebx
	push	eax
	push	edi
	push	esi
	mov	DWORD PTR tv293[esp+60], eax
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$36
; Line 1041
	mov	eax, DWORD PTR _point$[esp+40]
	cmp	DWORD PTR [eax+64], 0
	jne	$LN7@ec_GFp_sim
; Line 1042
	push	ebx
	add	eax, 44					; 0000002cH
	push	eax
	push	DWORD PTR _tmp$1$[esp+52]
	push	esi
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$36
; Line 1044
	push	ebx
	push	DWORD PTR _tmp$1$[esp+48]
	push	DWORD PTR _Z4$1$[esp+52]
	push	esi
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$36
; Line 1046
	push	ebx
	push	DWORD PTR _tmp$1$[esp+48]
	push	DWORD PTR _Z4$1$[esp+52]
	push	DWORD PTR _Z6$1$[esp+56]
	push	esi
	call	DWORD PTR _field_mul$1$[esp+64]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$36
; Line 1050
	cmp	DWORD PTR [esi+156], 0
	je	SHORT $LN12@ec_GFp_sim
; Line 1051
	lea	eax, DWORD PTR [esi+72]
	push	eax
	push	DWORD PTR _Z4$1$[esp+48]
	push	DWORD PTR _tmp$1$[esp+52]
	call	_BN_mod_lshift1_quick
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$36
; Line 1053
	lea	eax, DWORD PTR [esi+72]
	push	eax
	push	DWORD PTR _Z4$1$[esp+48]
	mov	eax, DWORD PTR _tmp$1$[esp+52]
	push	eax
	push	eax
	call	_BN_mod_add_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$36
; Line 1055
	lea	eax, DWORD PTR [esi+72]
	push	eax
	push	DWORD PTR _tmp$1$[esp+48]
	push	edi
	push	edi
	call	_BN_mod_sub_quick
; Line 1059
	jmp	SHORT $LN32@ec_GFp_sim
$LN12@ec_GFp_sim:
; Line 1060
	push	ebx
	lea	eax, DWORD PTR [esi+116]
	push	eax
	push	DWORD PTR _Z4$1$[esp+52]
	push	DWORD PTR _tmp$1$[esp+56]
	push	esi
	call	DWORD PTR _field_mul$1$[esp+64]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$36
; Line 1062
	lea	eax, DWORD PTR [esi+72]
	push	eax
	push	DWORD PTR _tmp$1$[esp+48]
	push	edi
	push	edi
	call	_BN_mod_add_quick
$LN32@ec_GFp_sim:
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$36
; Line 1064
	push	ebx
	push	DWORD PTR tv293[esp+48]
	push	edi
	push	edi
	push	esi
	call	DWORD PTR _field_mul$1$[esp+64]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$36
; Line 1069
	push	ebx
	push	DWORD PTR _Z6$1$[esp+48]
	lea	eax, DWORD PTR [esi+136]
	push	eax
	push	DWORD PTR _tmp$1$[esp+56]
	push	esi
	call	DWORD PTR _field_mul$1$[esp+64]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$36
; Line 1071
	lea	eax, DWORD PTR [esi+72]
	push	eax
	push	DWORD PTR _tmp$1$[esp+48]
; Line 1073
	jmp	SHORT $LN34@ec_GFp_sim
$LN7@ec_GFp_sim:
; Line 1077
	lea	eax, DWORD PTR [esi+72]
	push	eax
	lea	eax, DWORD PTR [esi+116]
	push	eax
	push	edi
	push	edi
	call	_BN_mod_add_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$36
; Line 1079
	push	ebx
	push	DWORD PTR tv293[esp+48]
	push	edi
	push	edi
	push	esi
	call	DWORD PTR _field_mul$1$[esp+64]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$36
; Line 1082
	lea	eax, DWORD PTR [esi+72]
	push	eax
	lea	eax, DWORD PTR [esi+136]
	push	eax
$LN34@ec_GFp_sim:
	push	edi
	push	edi
	call	_BN_mod_add_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$36
; Line 1087
	mov	eax, DWORD PTR _point$[esp+40]
	push	ebx
	add	eax, 24					; 00000018H
	push	eax
	push	DWORD PTR _tmp$1$[esp+52]
	push	esi
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$36
; Line 1090
	push	edi
	push	DWORD PTR _tmp$1$[esp+48]
	call	_BN_ucmp
	add	esp, 8
	mov	ebp, eax
	neg	ebp
	sbb	ebp, ebp
	inc	ebp
$err$36:
; Line 1093
	push	ebx
	call	_BN_CTX_end
; Line 1094
	mov	eax, DWORD PTR _new_ctx$1$[esp+48]
	add	esp, 4
	pop	edi
	test	eax, eax
	je	SHORT $LN27@ec_GFp_sim
; Line 1095
	push	eax
	call	_BN_CTX_free
	add	esp, 4
$LN27@ec_GFp_sim:
; Line 1096
	pop	ebx
	pop	esi
	mov	eax, ebp
	pop	ebp
; Line 1097
	add	esp, 28					; 0000001cH
	ret	0
_ec_GFp_simple_is_on_curve ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_is_at_infinity
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_ec_GFp_simple_is_at_infinity PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 992
	mov	ecx, DWORD PTR _point$[esp-4]
	xor	eax, eax
	cmp	DWORD PTR [ecx+48], eax
	sete	al
; Line 993
	ret	0
_ec_GFp_simple_is_at_infinity ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_invert
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_ctx$ = 16						; size = 4
_ec_GFp_simple_invert PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 982
	push	esi
; Line 983
	mov	esi, DWORD PTR _point$[esp]
	push	edi
	mov	edi, DWORD PTR _group$[esp+4]
	push	esi
	push	edi
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@ec_GFp_sim
	cmp	DWORD PTR [esi+28], eax
	je	SHORT $LN3@ec_GFp_sim
; Line 987
	lea	ecx, DWORD PTR [esi+24]
	push	ecx
	lea	eax, DWORD PTR [edi+72]
	push	eax
	push	ecx
	call	_BN_usub
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
; Line 988
	ret	0
$LN3@ec_GFp_sim:
	pop	edi
; Line 985
	mov	eax, 1
	pop	esi
; Line 988
	ret	0
_ec_GFp_simple_invert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_dbl
_TEXT	SEGMENT
_field_sqr$1$ = -28					; size = 4
_n2$1$ = -24						; size = 4
_field_mul$1$ = -20					; size = 4
_n3$1$ = -16						; size = 4
tv389 = -12						; size = 4
tv388 = -8						; size = 4
_new_ctx$1$ = -4					; size = 4
_group$ = 8						; size = 4
_r$ = 12						; size = 4
_a$ = 16						; size = 4
_ctx$ = 20						; size = 4
_ec_GFp_simple_dbl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 840
	mov	eax, 28					; 0000001cH
	call	__chkstk
; Line 849
	mov	eax, DWORD PTR _a$[esp+24]
	push	ebx
	mov	ebx, DWORD PTR _group$[esp+28]
	push	esi
	push	eax
	push	ebx
	mov	DWORD PTR _new_ctx$1$[esp+44], 0
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@ec_GFp_sim
; Line 850
	mov	esi, DWORD PTR _r$[esp+32]
	push	0
	lea	eax, DWORD PTR [esi+44]
	push	eax
	call	_BN_set_word
	add	esp, 8
; Line 851
	mov	DWORD PTR [esi+64], 0
; Line 852
	mov	eax, 1
	pop	esi
	pop	ebx
; Line 979
	add	esp, 28					; 0000001cH
	ret	0
$LN2@ec_GFp_sim:
; Line 855
	mov	eax, DWORD PTR [ebx]
	push	edi
; Line 859
	mov	edi, DWORD PTR _ctx$[esp+36]
	mov	ecx, DWORD PTR [eax+132]
	mov	eax, DWORD PTR [eax+136]
	mov	DWORD PTR _field_mul$1$[esp+40], ecx
	mov	DWORD PTR _field_sqr$1$[esp+40], eax
	test	edi, edi
	jne	SHORT $LN4@ec_GFp_sim
; Line 860
	call	_BN_CTX_new
	mov	DWORD PTR _new_ctx$1$[esp+40], eax
	mov	edi, eax
; Line 861
	test	eax, eax
	jne	SHORT $LN4@ec_GFp_sim
	pop	edi
	pop	esi
	pop	ebx
; Line 979
	add	esp, 28					; 0000001cH
	ret	0
$LN4@ec_GFp_sim:
	push	ebp
; Line 865
	push	edi
	call	_BN_CTX_start
; Line 866
	push	edi
	call	_BN_CTX_get
; Line 867
	push	edi
	mov	esi, eax
	call	_BN_CTX_get
; Line 868
	push	edi
	mov	ebp, eax
	call	_BN_CTX_get
; Line 869
	push	edi
	mov	DWORD PTR _n2$1$[esp+64], eax
	call	_BN_CTX_get
	add	esp, 20					; 00000014H
	mov	DWORD PTR _n3$1$[esp+44], eax
; Line 870
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 880
	mov	eax, DWORD PTR _a$[esp+40]
; Line 881
	push	edi
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN6@ec_GFp_sim
	add	eax, 4
	push	eax
	push	esi
	push	ebx
	mov	DWORD PTR tv389[esp+60], eax
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 883
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	esi
	push	ebp
	call	_BN_mod_lshift1_quick
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 885
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	ebp
	push	esi
	push	esi
	call	_BN_mod_add_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 887
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	lea	eax, DWORD PTR [ebx+116]
	push	eax
	push	esi
; Line 890
	jmp	$LN79@ec_GFp_sim
$LN6@ec_GFp_sim:
	cmp	DWORD PTR [ebx+156], 0
	je	$LN12@ec_GFp_sim
; Line 891
	add	eax, 44					; 0000002cH
	push	eax
	push	ebp
	push	ebx
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 893
	mov	ecx, DWORD PTR _a$[esp+40]
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	add	ecx, 4
	push	ebp
	push	ecx
	push	esi
	mov	DWORD PTR tv389[esp+60], ecx
	call	_BN_mod_add_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 895
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	ebp
	push	DWORD PTR tv389[esp+52]
	push	DWORD PTR _n2$1$[esp+56]
	call	_BN_mod_sub_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 897
	push	edi
	push	DWORD PTR _n2$1$[esp+48]
	push	esi
	push	ebp
	push	ebx
	call	DWORD PTR _field_mul$1$[esp+64]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 899
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	ebp
	push	esi
	call	_BN_mod_lshift1_quick
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 901
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	ebp
	push	esi
; Line 907
	jmp	$LN79@ec_GFp_sim
$LN12@ec_GFp_sim:
; Line 908
	add	eax, 4
	push	eax
	push	esi
	push	ebx
	mov	DWORD PTR tv389[esp+60], eax
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 910
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	esi
	push	ebp
	call	_BN_mod_lshift1_quick
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 912
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	ebp
	push	esi
	push	esi
	call	_BN_mod_add_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 914
	mov	eax, DWORD PTR _a$[esp+40]
	push	edi
	add	eax, 44					; 0000002cH
	push	eax
	push	ebp
	push	ebx
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 916
	push	edi
	push	ebp
	push	ebp
	push	ebx
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 918
	push	edi
	lea	eax, DWORD PTR [ebx+116]
	push	eax
	push	ebp
	push	ebp
	push	ebx
	call	DWORD PTR _field_mul$1$[esp+64]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 920
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	esi
	push	ebp
$LN79@ec_GFp_sim:
	push	ebp
	call	_BN_mod_add_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 926
	mov	eax, DWORD PTR _a$[esp+40]
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN27@ec_GFp_sim
; Line 927
	add	eax, 24					; 00000018H
	push	eax
	push	esi
	mov	DWORD PTR tv388[esp+52], eax
	call	_BN_copy
	add	esp, 8
; Line 929
	jmp	SHORT $LN81@ec_GFp_sim
$LN27@ec_GFp_sim:
; Line 930
	lea	ecx, DWORD PTR [eax+24]
	add	eax, 44					; 0000002cH
	push	edi
	push	eax
	push	ecx
	push	esi
	push	ebx
	mov	DWORD PTR tv388[esp+64], ecx
	call	DWORD PTR _field_mul$1$[esp+64]
	add	esp, 20					; 00000014H
$LN81@ec_GFp_sim:
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 933
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	mov	eax, DWORD PTR _r$[esp+44]
	add	eax, 44					; 0000002cH
	push	esi
	push	eax
	call	_BN_mod_lshift1_quick
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 935
	mov	eax, DWORD PTR _r$[esp+40]
; Line 939
	push	edi
	push	DWORD PTR tv388[esp+48]
	push	DWORD PTR _n3$1$[esp+52]
	mov	DWORD PTR [eax+64], 0
	push	ebx
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 941
	push	edi
	push	DWORD PTR _n3$1$[esp+48]
	push	DWORD PTR tv389[esp+52]
	push	DWORD PTR _n2$1$[esp+56]
	push	ebx
	call	DWORD PTR _field_mul$1$[esp+64]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 943
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	mov	eax, DWORD PTR _n2$1$[esp+48]
	push	2
	push	eax
	push	eax
	call	_BN_mod_lshift_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 948
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	DWORD PTR _n2$1$[esp+48]
	push	esi
	call	_BN_mod_lshift1_quick
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 950
	mov	eax, DWORD PTR _r$[esp+40]
	push	edi
	add	eax, 4
	push	ebp
	push	eax
	push	ebx
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN75@ec_GFp_sim
; Line 952
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	mov	eax, DWORD PTR _r$[esp+44]
	add	eax, 4
	push	esi
	push	eax
	push	eax
	call	_BN_mod_sub_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN75@ec_GFp_sim
; Line 957
	push	edi
	push	DWORD PTR _n3$1$[esp+48]
	push	esi
	push	ebx
	call	DWORD PTR _field_sqr$1$[esp+60]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN75@ec_GFp_sim
; Line 959
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	3
	push	esi
	push	DWORD PTR _n3$1$[esp+56]
	call	_BN_mod_lshift_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN75@ec_GFp_sim
; Line 964
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	mov	eax, DWORD PTR _r$[esp+44]
	add	eax, 4
	push	eax
	push	DWORD PTR _n2$1$[esp+52]
	push	esi
	call	_BN_mod_sub_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN75@ec_GFp_sim
; Line 966
	push	edi
	push	esi
	push	ebp
	push	esi
	push	ebx
	call	DWORD PTR _field_mul$1$[esp+64]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN75@ec_GFp_sim
; Line 968
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	DWORD PTR _n3$1$[esp+48]
	mov	eax, DWORD PTR _r$[esp+48]
	add	eax, 24					; 00000018H
	push	esi
	push	eax
	call	_BN_mod_sub_quick
	xor	ebx, ebx
	add	esp, 16					; 00000010H
	test	eax, eax
	mov	ecx, 1
	cmovne	ebx, ecx
	jmp	SHORT $err$83
$LN75@ec_GFp_sim:
	xor	ebx, ebx
$err$83:
; Line 975
	push	edi
	call	_BN_CTX_end
; Line 976
	mov	eax, DWORD PTR _new_ctx$1$[esp+48]
	add	esp, 4
	pop	ebp
	test	eax, eax
	je	SHORT $LN43@ec_GFp_sim
; Line 977
	push	eax
	call	_BN_CTX_free
	add	esp, 4
$LN43@ec_GFp_sim:
; Line 978
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 979
	add	esp, 28					; 0000001cH
	ret	0
_ec_GFp_simple_dbl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_add
_TEXT	SEGMENT
_n3$1$ = -40						; size = 4
_n4$1$ = -36						; size = 4
_n5$1$ = -32						; size = 4
_n1$1$ = -28						; size = 4
_n2$1$ = -24						; size = 4
_field_sqr$1$ = -20					; size = 4
_n6$1$ = -16						; size = 4
_new_ctx$1$ = -12					; size = 4
tv522 = -8						; size = 4
_p$1$ = -4						; size = 4
_group$ = 8						; size = 4
_r$ = 12						; size = 4
_field_mul$1$ = 16					; size = 4
_a$ = 16						; size = 4
tv518 = 20						; size = 4
_b$ = 20						; size = 4
_ctx$ = 24						; size = 4
_ec_GFp_simple_add PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 653
	mov	eax, 40					; 00000028H
	call	__chkstk
	push	ebp
; Line 662
	mov	ebp, DWORD PTR _a$[esp+40]
	push	esi
	mov	esi, DWORD PTR _b$[esp+44]
	mov	DWORD PTR _new_ctx$1$[esp+48], 0
	cmp	ebp, esi
	jne	SHORT $LN2@ec_GFp_sim
; Line 663
	push	DWORD PTR _ctx$[esp+44]
	push	ebp
	push	DWORD PTR _r$[esp+52]
	push	DWORD PTR _group$[esp+56]
	call	_EC_POINT_dbl
	add	esp, 16					; 00000010H
	pop	esi
	pop	ebp
; Line 836
	add	esp, 40					; 00000028H
	ret	0
$LN2@ec_GFp_sim:
	push	ebx
; Line 664
	mov	ebx, DWORD PTR _group$[esp+48]
	push	ebp
	push	ebx
	call	_EC_POINT_is_at_infinity
	add	esp, 8
; Line 665
	push	esi
	test	eax, eax
	jne	SHORT $LN95@ec_GFp_sim
; Line 666
	push	ebx
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@ec_GFp_sim
; Line 667
	push	ebp
$LN95@ec_GFp_sim:
	push	DWORD PTR _r$[esp+52]
	call	_EC_POINT_copy
	add	esp, 8
	pop	ebx
	pop	esi
	pop	ebp
; Line 836
	add	esp, 40					; 00000028H
	ret	0
$LN4@ec_GFp_sim:
; Line 669
	mov	eax, DWORD PTR [ebx]
	push	edi
; Line 673
	mov	edi, DWORD PTR _ctx$[esp+52]
	mov	ecx, DWORD PTR [eax+132]
	mov	eax, DWORD PTR [eax+136]
	mov	DWORD PTR _field_sqr$1$[esp+56], eax
	lea	eax, DWORD PTR [ebx+72]
	mov	DWORD PTR _field_mul$1$[esp+52], ecx
	mov	DWORD PTR _p$1$[esp+56], eax
	test	edi, edi
	jne	SHORT $LN6@ec_GFp_sim
; Line 674
	call	_BN_CTX_new
	mov	DWORD PTR _new_ctx$1$[esp+56], eax
	mov	edi, eax
; Line 675
	test	eax, eax
	jne	SHORT $LN6@ec_GFp_sim
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp
; Line 836
	add	esp, 40					; 00000028H
	ret	0
$LN6@ec_GFp_sim:
; Line 679
	push	edi
	call	_BN_CTX_start
; Line 680
	push	edi
	call	_BN_CTX_get
; Line 681
	push	edi
	mov	esi, eax
	call	_BN_CTX_get
; Line 682
	push	edi
	mov	DWORD PTR _n1$1$[esp+72], eax
	call	_BN_CTX_get
; Line 683
	push	edi
	mov	DWORD PTR _n2$1$[esp+76], eax
	call	_BN_CTX_get
; Line 684
	push	edi
	mov	DWORD PTR _n3$1$[esp+80], eax
	call	_BN_CTX_get
; Line 685
	push	edi
	mov	DWORD PTR _n4$1$[esp+84], eax
	call	_BN_CTX_get
; Line 686
	push	edi
	mov	DWORD PTR _n5$1$[esp+88], eax
	call	_BN_CTX_get
	add	esp, 32					; 00000020H
	mov	DWORD PTR _n6$1$[esp+56], eax
; Line 687
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 697
	mov	eax, DWORD PTR _b$[esp+52]
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN8@ec_GFp_sim
; Line 698
	lea	ecx, DWORD PTR [ebp+4]
	push	ecx
	push	DWORD PTR _n1$1$[esp+60]
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 700
	lea	eax, DWORD PTR [ebp+24]
	push	eax
	push	DWORD PTR _n2$1$[esp+60]
	call	_BN_copy
	add	esp, 8
; Line 704
	jmp	SHORT $LN97@ec_GFp_sim
$LN8@ec_GFp_sim:
; Line 705
	add	eax, 44					; 0000002cH
	push	edi
	push	eax
	push	esi
	push	ebx
	mov	DWORD PTR tv522[esp+72], eax
	call	DWORD PTR _field_sqr$1$[esp+72]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 707
	push	edi
	push	esi
	lea	eax, DWORD PTR [ebp+4]
	push	eax
	push	DWORD PTR _n1$1$[esp+68]
	push	ebx
	call	DWORD PTR _field_mul$1$[esp+72]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 711
	push	edi
	push	DWORD PTR tv522[esp+60]
	push	esi
	push	esi
	push	ebx
	call	DWORD PTR _field_mul$1$[esp+72]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 713
	push	edi
	push	esi
	lea	eax, DWORD PTR [ebp+24]
	push	eax
	push	DWORD PTR _n2$1$[esp+68]
	push	ebx
	call	DWORD PTR _field_mul$1$[esp+72]
	add	esp, 20					; 00000014H
$LN97@ec_GFp_sim:
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 719
	cmp	DWORD PTR [ebp+64], 0
	je	SHORT $LN16@ec_GFp_sim
; Line 720
	mov	eax, DWORD PTR _b$[esp+52]
	add	eax, 4
	push	eax
	push	DWORD PTR _n3$1$[esp+60]
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 722
	mov	eax, DWORD PTR _b$[esp+52]
	add	eax, 24					; 00000018H
	push	eax
	push	DWORD PTR _n4$1$[esp+60]
	call	_BN_copy
	add	esp, 8
; Line 726
	jmp	SHORT $LN99@ec_GFp_sim
$LN16@ec_GFp_sim:
; Line 727
	push	edi
	lea	eax, DWORD PTR [ebp+44]
	push	eax
	push	esi
	push	ebx
	call	DWORD PTR _field_sqr$1$[esp+72]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 729
	mov	eax, DWORD PTR _b$[esp+52]
	push	edi
	push	esi
	add	eax, 4
	push	eax
	push	DWORD PTR _n3$1$[esp+68]
	push	ebx
	call	DWORD PTR _field_mul$1$[esp+72]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 733
	push	edi
	lea	eax, DWORD PTR [ebp+44]
	push	eax
	push	esi
	push	esi
	push	ebx
	call	DWORD PTR _field_mul$1$[esp+72]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 735
	mov	eax, DWORD PTR _b$[esp+52]
	push	edi
	push	esi
	add	eax, 24					; 00000018H
	push	eax
	push	DWORD PTR _n4$1$[esp+68]
	push	ebx
	call	DWORD PTR _field_mul$1$[esp+72]
	add	esp, 20					; 00000014H
$LN99@ec_GFp_sim:
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 741
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	DWORD PTR _n3$1$[esp+60]
	push	DWORD PTR _n1$1$[esp+64]
	push	DWORD PTR _n5$1$[esp+68]
	call	_BN_mod_sub_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 743
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	DWORD PTR _n4$1$[esp+60]
	push	DWORD PTR _n2$1$[esp+64]
	push	DWORD PTR _n6$1$[esp+68]
	call	_BN_mod_sub_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 748
	mov	eax, DWORD PTR _n5$1$[esp+56]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN28@ec_GFp_sim
; Line 749
	mov	eax, DWORD PTR _n6$1$[esp+56]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN27@ec_GFp_sim
; Line 751
	push	edi
	call	_BN_CTX_end
; Line 752
	push	edi
	push	ebp
	push	DWORD PTR _r$[esp+64]
	push	ebx
	call	_EC_POINT_dbl
	add	esp, 20					; 00000014H
	mov	ebx, eax
; Line 754
	jmp	$LN55@ec_GFp_sim
$LN27@ec_GFp_sim:
; Line 757
	mov	esi, DWORD PTR _r$[esp+52]
	push	0
	lea	eax, DWORD PTR [esi+44]
	push	eax
	call	_BN_set_word
	add	esp, 8
; Line 758
	mov	DWORD PTR [esi+64], 0
; Line 759
	mov	ebx, 1
; Line 760
	jmp	$end$103
$LN28@ec_GFp_sim:
; Line 765
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	DWORD PTR _n3$1$[esp+60]
	mov	eax, DWORD PTR _n1$1$[esp+64]
	push	eax
	push	eax
	call	_BN_mod_add_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 767
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	DWORD PTR _n4$1$[esp+60]
	mov	eax, DWORD PTR _n2$1$[esp+64]
	push	eax
	push	eax
	call	_BN_mod_add_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 773
	mov	ecx, DWORD PTR [ebp+64]
	mov	eax, DWORD PTR _b$[esp+52]
	test	ecx, ecx
	je	SHORT $LN34@ec_GFp_sim
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN31@ec_GFp_sim
; Line 774
	mov	eax, DWORD PTR _r$[esp+52]
	push	DWORD PTR _n5$1$[esp+56]
	add	eax, 44					; 0000002cH
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 776
	mov	ebp, DWORD PTR _field_mul$1$[esp+52]
	jmp	SHORT $LN41@ec_GFp_sim
$LN31@ec_GFp_sim:
; Line 777
	test	ecx, ecx
	je	SHORT $LN34@ec_GFp_sim
; Line 778
	add	eax, 44					; 0000002cH
; Line 780
	jmp	SHORT $LN101@ec_GFp_sim
$LN34@ec_GFp_sim:
	cmp	DWORD PTR [eax+64], 0
	je	SHORT $LN37@ec_GFp_sim
; Line 781
	lea	eax, DWORD PTR [ebp+44]
$LN101@ec_GFp_sim:
	push	eax
	push	esi
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 783
	mov	ebp, DWORD PTR _field_mul$1$[esp+52]
	jmp	SHORT $LN40@ec_GFp_sim
$LN37@ec_GFp_sim:
; Line 784
	push	edi
	add	eax, 44					; 0000002cH
	push	eax
	lea	eax, DWORD PTR [ebp+44]
	mov	ebp, DWORD PTR _field_mul$1$[esp+60]
	push	eax
	push	esi
	push	ebx
	call	ebp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN91@ec_GFp_sim
$LN40@ec_GFp_sim:
; Line 787
	mov	eax, DWORD PTR _r$[esp+52]
	push	edi
	push	DWORD PTR _n5$1$[esp+60]
	add	eax, 44					; 0000002cH
	push	esi
	push	eax
	push	ebx
	call	ebp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN91@ec_GFp_sim
$LN41@ec_GFp_sim:
; Line 790
	mov	eax, DWORD PTR _r$[esp+52]
; Line 794
	push	edi
	push	DWORD PTR _n6$1$[esp+60]
	push	esi
	push	ebx
	mov	DWORD PTR [eax+64], 0
	call	DWORD PTR _field_sqr$1$[esp+72]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 796
	push	edi
	push	DWORD PTR _n5$1$[esp+60]
	push	DWORD PTR _n4$1$[esp+64]
	push	ebx
	call	DWORD PTR _field_sqr$1$[esp+72]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 798
	push	edi
	push	DWORD PTR _n4$1$[esp+60]
	push	DWORD PTR _n1$1$[esp+64]
	push	DWORD PTR _n3$1$[esp+68]
	push	ebx
	call	ebp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 800
	mov	ecx, DWORD PTR _r$[esp+52]
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	DWORD PTR _n3$1$[esp+60]
	add	ecx, 4
	push	esi
	push	ecx
	mov	DWORD PTR tv518[esp+68], ecx
	call	_BN_mod_sub_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 805
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	DWORD PTR tv518[esp+56]
	push	esi
	call	_BN_mod_lshift1_quick
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 807
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	esi
	push	DWORD PTR _n3$1$[esp+64]
	push	esi
	call	_BN_mod_sub_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN91@ec_GFp_sim
; Line 812
	push	edi
	push	DWORD PTR _n6$1$[esp+60]
	push	esi
	push	esi
	push	ebx
	call	ebp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN91@ec_GFp_sim
; Line 814
	mov	eax, DWORD PTR _n5$1$[esp+56]
	push	edi
	push	eax
	push	DWORD PTR _n4$1$[esp+64]
	push	eax
	push	ebx
	call	ebp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN91@ec_GFp_sim
; Line 816
	push	edi
	push	DWORD PTR _n5$1$[esp+60]
	push	DWORD PTR _n2$1$[esp+64]
	push	DWORD PTR _n1$1$[esp+68]
	push	ebx
	call	ebp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN91@ec_GFp_sim
; Line 818
	mov	ebx, DWORD PTR _p$1$[esp+56]
	push	ebx
	push	DWORD PTR _n1$1$[esp+60]
	push	esi
	push	esi
	call	_BN_mod_sub_quick
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN91@ec_GFp_sim
; Line 820
	cmp	DWORD PTR [esi+4], 0
	jle	SHORT $LN53@ec_GFp_sim
	mov	eax, DWORD PTR [esi]
	test	BYTE PTR [eax], 1
	je	SHORT $LN53@ec_GFp_sim
; Line 821
	push	ebx
	push	esi
	push	esi
	call	_BN_add
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN91@ec_GFp_sim
$LN53@ec_GFp_sim:
; Line 824
	mov	eax, DWORD PTR _r$[esp+52]
	add	eax, 24					; 00000018H
	push	esi
	push	eax
	call	_BN_rshift1
	xor	ebx, ebx
	add	esp, 8
	test	eax, eax
	mov	ecx, 1
	cmovne	ebx, ecx
	jmp	SHORT $end$103
$LN91@ec_GFp_sim:
	xor	ebx, ebx
$end$103:
; Line 831
	test	edi, edi
	je	SHORT $LN55@ec_GFp_sim
; Line 832
	push	edi
	call	_BN_CTX_end
	add	esp, 4
$LN55@ec_GFp_sim:
; Line 833
	mov	eax, DWORD PTR _new_ctx$1$[esp+56]
	test	eax, eax
	je	SHORT $LN56@ec_GFp_sim
; Line 834
	push	eax
	call	_BN_CTX_free
	add	esp, 4
$LN56@ec_GFp_sim:
; Line 835
	pop	edi
	mov	eax, ebx
	pop	ebx
	pop	esi
	pop	ebp
; Line 836
	add	esp, 40					; 00000028H
	ret	0
_ec_GFp_simple_add ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_point_get_affine_coordinates
_TEXT	SEGMENT
_Z_2$1$ = -16						; size = 4
_Z_3$1$ = -12						; size = 4
_new_ctx$1$ = -8					; size = 4
_Z_1$1$ = -4						; size = 4
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_ctx$ = 24						; size = 4
_ec_GFp_simple_point_get_affine_coordinates PROC	; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 540
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
; Line 546
	mov	ebx, DWORD PTR _point$[esp+16]
	push	edi
	mov	edi, DWORD PTR _group$[esp+20]
	push	ebx
	push	edi
	mov	DWORD PTR _new_ctx$1$[esp+32], 0
	call	_EC_POINT_is_at_infinity
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@ec_GFp_sim
; Line 547
	push	548					; 00000224H
	push	OFFSET ??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@
	push	106					; 0000006aH
	push	167					; 000000a7H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 549
	xor	eax, eax
	pop	edi
	pop	ebx
; Line 649
	add	esp, 16					; 00000010H
	ret	0
$LN2@ec_GFp_sim:
	push	esi
; Line 552
	mov	esi, DWORD PTR _ctx$[esp+24]
	test	esi, esi
	jne	SHORT $LN4@ec_GFp_sim
; Line 553
	call	_BN_CTX_new
	mov	DWORD PTR _new_ctx$1$[esp+28], eax
	mov	esi, eax
; Line 554
	test	eax, eax
	jne	SHORT $LN4@ec_GFp_sim
	pop	esi
	pop	edi
	pop	ebx
; Line 649
	add	esp, 16					; 00000010H
	ret	0
$LN4@ec_GFp_sim:
	push	ebp
; Line 558
	push	esi
	call	_BN_CTX_start
; Line 559
	push	esi
	call	_BN_CTX_get
; Line 560
	push	esi
	mov	ebp, eax
	call	_BN_CTX_get
; Line 561
	push	esi
	mov	DWORD PTR _Z_1$1$[esp+48], eax
	call	_BN_CTX_get
; Line 562
	push	esi
	mov	DWORD PTR _Z_2$1$[esp+52], eax
	call	_BN_CTX_get
	add	esp, 20					; 00000014H
	mov	DWORD PTR _Z_3$1$[esp+32], eax
; Line 563
	test	eax, eax
	je	SHORT $LN49@ec_GFp_sim
; Line 568
	mov	ecx, DWORD PTR [edi]
	mov	ecx, DWORD PTR [ecx+148]
	test	ecx, ecx
	je	SHORT $LN6@ec_GFp_sim
; Line 569
	push	esi
	lea	eax, DWORD PTR [ebx+44]
	push	eax
	push	ebp
	push	edi
	call	ecx
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN7@ec_GFp_sim
$LN49@ec_GFp_sim:
	xor	ebx, ebx
$err$59:
; Line 645
	push	esi
	call	_BN_CTX_end
; Line 646
	mov	eax, DWORD PTR _new_ctx$1$[esp+36]
	add	esp, 4
	pop	ebp
	test	eax, eax
	je	SHORT $LN36@ec_GFp_sim
; Line 647
	push	eax
	call	_BN_CTX_free
	add	esp, 4
$LN36@ec_GFp_sim:
; Line 648
	pop	esi
	pop	edi
	mov	eax, ebx
	pop	ebx
; Line 649
	add	esp, 16					; 00000010H
	ret	0
$LN6@ec_GFp_sim:
; Line 573
	lea	ebp, DWORD PTR [ebx+44]
$LN7@ec_GFp_sim:
; Line 576
	cmp	DWORD PTR [ebp+4], 1
	jne	$LN12@ec_GFp_sim
	mov	eax, DWORD PTR [ebp]
	cmp	DWORD PTR [eax], 1
	jne	$LN12@ec_GFp_sim
	cmp	DWORD PTR [ebp+12], 0
	jne	$LN12@ec_GFp_sim
; Line 577
	mov	eax, DWORD PTR [edi]
; Line 578
	mov	ecx, DWORD PTR _x$[esp+28]
	mov	edx, DWORD PTR [eax+148]
	test	edx, edx
	je	SHORT $LN13@ec_GFp_sim
	test	ecx, ecx
	je	SHORT $LN16@ec_GFp_sim
; Line 579
	push	esi
	lea	eax, DWORD PTR [ebx+4]
	push	eax
	push	ecx
	push	edi
	call	edx
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN49@ec_GFp_sim
$LN16@ec_GFp_sim:
; Line 582
	mov	edx, DWORD PTR _y$[esp+28]
	test	edx, edx
	je	$LN35@ec_GFp_sim
; Line 583
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [ebx+24]
	push	esi
	push	eax
	push	edx
	mov	eax, DWORD PTR [ecx+148]
	push	edi
	call	eax
	add	esp, 16					; 00000010H
; Line 586
	jmp	$LN53@ec_GFp_sim
$LN13@ec_GFp_sim:
; Line 587
	test	ecx, ecx
	je	SHORT $LN20@ec_GFp_sim
; Line 588
	lea	eax, DWORD PTR [ebx+4]
	push	eax
	push	ecx
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN49@ec_GFp_sim
$LN20@ec_GFp_sim:
; Line 591
	mov	ecx, DWORD PTR _y$[esp+28]
	test	ecx, ecx
	je	$LN35@ec_GFp_sim
; Line 592
	lea	eax, DWORD PTR [ebx+24]
	push	eax
	push	ecx
	call	_BN_copy
	add	esp, 8
; Line 596
	jmp	$LN53@ec_GFp_sim
$LN12@ec_GFp_sim:
; Line 597
	push	esi
	lea	eax, DWORD PTR [edi+72]
	push	eax
	push	ebp
	mov	ebp, DWORD PTR _Z_1$1$[esp+44]
	push	ebp
	call	_BN_mod_inverse
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN23@ec_GFp_sim
; Line 598
	push	599					; 00000257H
	push	OFFSET ??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@
	push	3
	push	167					; 000000a7H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 600
	jmp	$LN49@ec_GFp_sim
$LN23@ec_GFp_sim:
; Line 603
	mov	eax, DWORD PTR [edi]
; Line 605
	push	esi
	cmp	DWORD PTR [eax+144], 0
	jne	SHORT $LN24@ec_GFp_sim
	mov	eax, DWORD PTR [eax+136]
	push	ebp
	push	DWORD PTR _Z_2$1$[esp+40]
	push	edi
	call	eax
; Line 607
	jmp	SHORT $LN55@ec_GFp_sim
$LN24@ec_GFp_sim:
; Line 608
	lea	eax, DWORD PTR [edi+72]
	push	eax
	push	ebp
	push	DWORD PTR _Z_2$1$[esp+44]
	call	_BN_mod_sqr
$LN55@ec_GFp_sim:
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN49@ec_GFp_sim
; Line 612
	mov	edx, DWORD PTR _x$[esp+28]
	test	edx, edx
	je	SHORT $LN29@ec_GFp_sim
; Line 617
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [ebx+4]
	push	esi
	push	DWORD PTR _Z_2$1$[esp+36]
	push	eax
	mov	eax, DWORD PTR [ecx+132]
	push	edx
	push	edi
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN49@ec_GFp_sim
$LN29@ec_GFp_sim:
; Line 621
	cmp	DWORD PTR _y$[esp+28], 0
	je	SHORT $LN35@ec_GFp_sim
; Line 622
	mov	eax, DWORD PTR [edi]
; Line 626
	push	esi
	cmp	DWORD PTR [eax+144], 0
	jne	SHORT $LN31@ec_GFp_sim
	mov	eax, DWORD PTR [eax+132]
	push	ebp
	push	DWORD PTR _Z_2$1$[esp+40]
	mov	ebp, DWORD PTR _Z_3$1$[esp+44]
	push	ebp
	push	edi
	call	eax
; Line 628
	jmp	SHORT $LN57@ec_GFp_sim
$LN31@ec_GFp_sim:
; Line 629
	lea	eax, DWORD PTR [edi+72]
	push	eax
	push	ebp
	push	DWORD PTR _Z_2$1$[esp+44]
	mov	ebp, DWORD PTR _Z_3$1$[esp+48]
	push	ebp
	call	_BN_mod_mul
$LN57@ec_GFp_sim:
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN49@ec_GFp_sim
; Line 637
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [ebx+24]
	push	esi
	push	ebp
	push	eax
	push	DWORD PTR _y$[esp+40]
	mov	eax, DWORD PTR [ecx+132]
	push	edi
	call	eax
	add	esp, 20					; 00000014H
$LN53@ec_GFp_sim:
	test	eax, eax
	je	$LN49@ec_GFp_sim
$LN35@ec_GFp_sim:
; Line 642
	mov	ebx, 1
	jmp	$err$59
_ec_GFp_simple_point_get_affine_coordinates ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_point_set_affine_coordinates
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_ctx$ = 24						; size = 4
_ec_GFp_simple_point_set_affine_coordinates PROC	; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 523
	cmp	DWORD PTR _x$[esp-4], 0
	je	SHORT $LN3@ec_GFp_sim
	cmp	DWORD PTR _y$[esp-4], 0
	je	SHORT $LN3@ec_GFp_sim
; Line 532
	push	DWORD PTR _ctx$[esp-4]
	call	_BN_value_one
	push	eax
	push	DWORD PTR _y$[esp+4]
	push	DWORD PTR _x$[esp+8]
	push	DWORD PTR _point$[esp+12]
	push	DWORD PTR _group$[esp+16]
	call	_EC_POINT_set_Jprojective_coordinates_GFp
	add	esp, 24					; 00000018H
; Line 534
	ret	0
$LN3@ec_GFp_sim:
; Line 527
	push	528					; 00000210H
	push	OFFSET ??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@
	push	67					; 00000043H
	push	168					; 000000a8H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 529
	xor	eax, eax
; Line 534
	ret	0
_ec_GFp_simple_point_set_affine_coordinates ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_get_Jprojective_coordinates_GFp
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_z$ = 24						; size = 4
_ctx$ = 28						; size = 4
_ec_GFp_simple_get_Jprojective_coordinates_GFp PROC	; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 472
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 476
	mov	edi, DWORD PTR _group$[esp+12]
	xor	esi, esi
	xor	ebp, ebp
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+148], esi
	je	$LN2@ec_GFp_sim
; Line 477
	mov	ebx, DWORD PTR _ctx$[esp+12]
	test	ebx, ebx
	jne	SHORT $LN5@ec_GFp_sim
; Line 478
	call	_BN_CTX_new
	mov	esi, eax
	mov	ebx, esi
; Line 479
	test	esi, esi
	jne	SHORT $LN5@ec_GFp_sim
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 516
	ret	0
$LN5@ec_GFp_sim:
; Line 483
	mov	edx, DWORD PTR _x$[esp+12]
	test	edx, edx
	je	SHORT $LN7@ec_GFp_sim
; Line 484
	mov	eax, DWORD PTR _point$[esp+12]
	mov	ecx, DWORD PTR [edi]
	add	eax, 4
	push	ebx
	push	eax
	push	edx
	mov	eax, DWORD PTR [ecx+148]
	push	edi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$21
$LN7@ec_GFp_sim:
; Line 487
	mov	edx, DWORD PTR _y$[esp+12]
	test	edx, edx
	je	SHORT $LN9@ec_GFp_sim
; Line 488
	mov	eax, DWORD PTR _point$[esp+12]
	mov	ecx, DWORD PTR [edi]
	add	eax, 24					; 00000018H
	push	ebx
	push	eax
	push	edx
	mov	eax, DWORD PTR [ecx+148]
	push	edi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$21
$LN9@ec_GFp_sim:
; Line 491
	mov	edx, DWORD PTR _z$[esp+12]
	test	edx, edx
	je	SHORT $LN17@ec_GFp_sim
; Line 492
	mov	eax, DWORD PTR _point$[esp+12]
	mov	ecx, DWORD PTR [edi]
	add	eax, 44					; 0000002cH
	push	ebx
	push	eax
	push	edx
	mov	eax, DWORD PTR [ecx+148]
	push	edi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$21
; Line 495
	jmp	SHORT $LN17@ec_GFp_sim
$LN2@ec_GFp_sim:
; Line 496
	mov	ecx, DWORD PTR _x$[esp+12]
	mov	edi, DWORD PTR _point$[esp+12]
	test	ecx, ecx
	je	SHORT $LN13@ec_GFp_sim
; Line 497
	lea	eax, DWORD PTR [edi+4]
	push	eax
	push	ecx
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN18@ec_GFp_sim
$LN13@ec_GFp_sim:
; Line 500
	mov	ecx, DWORD PTR _y$[esp+12]
	test	ecx, ecx
	je	SHORT $LN15@ec_GFp_sim
; Line 501
	lea	eax, DWORD PTR [edi+24]
	push	eax
	push	ecx
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN18@ec_GFp_sim
$LN15@ec_GFp_sim:
; Line 504
	mov	ecx, DWORD PTR _z$[esp+12]
	test	ecx, ecx
	je	SHORT $LN17@ec_GFp_sim
; Line 505
	lea	eax, DWORD PTR [edi+44]
	push	eax
	push	ecx
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN18@ec_GFp_sim
$LN17@ec_GFp_sim:
; Line 510
	mov	ebp, 1
$err$21:
; Line 513
	test	esi, esi
	je	SHORT $LN18@ec_GFp_sim
; Line 514
	push	esi
	call	_BN_CTX_free
	add	esp, 4
$LN18@ec_GFp_sim:
; Line 515
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 516
	ret	0
_ec_GFp_simple_get_Jprojective_coordinates_GFp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_set_Jprojective_coordinates_GFp
_TEXT	SEGMENT
tv275 = -4						; size = 4
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_z$ = 24						; size = 4
_Z_is_one$1$ = 28					; size = 4
_ctx$ = 28						; size = 4
_ec_GFp_simple_set_Jprojective_coordinates_GFp PROC	; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 413
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	esi
; Line 417
	mov	esi, DWORD PTR _ctx$[esp+8]
	xor	ebx, ebx
	test	esi, esi
	jne	SHORT $LN3@ec_GFp_sim
; Line 418
	call	_BN_CTX_new
	mov	ebx, eax
	mov	esi, ebx
; Line 419
	test	ebx, ebx
	jne	SHORT $LN3@ec_GFp_sim
	pop	esi
	pop	ebx
; Line 466
	pop	ecx
	ret	0
$LN3@ec_GFp_sim:
; Line 423
	mov	ecx, DWORD PTR _x$[esp+8]
	push	ebp
	mov	ebp, DWORD PTR _point$[esp+12]
	push	edi
	mov	edi, DWORD PTR _group$[esp+16]
	test	ecx, ecx
	je	SHORT $LN7@ec_GFp_sim
; Line 424
	push	esi
	lea	eax, DWORD PTR [edi+72]
	push	eax
	lea	edx, DWORD PTR [ebp+4]
	push	ecx
	push	edx
	call	_BN_nnmod
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN32@ec_GFp_sim
; Line 426
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+144]
	test	ecx, ecx
	je	SHORT $LN7@ec_GFp_sim
; Line 427
	push	esi
	lea	eax, DWORD PTR [ebp+4]
	push	eax
	push	eax
	push	edi
	call	ecx
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN32@ec_GFp_sim
$LN7@ec_GFp_sim:
; Line 432
	mov	ecx, DWORD PTR _y$[esp+16]
	test	ecx, ecx
	je	SHORT $LN11@ec_GFp_sim
; Line 433
	push	esi
	lea	eax, DWORD PTR [edi+72]
	push	eax
	lea	edx, DWORD PTR [ebp+24]
	push	ecx
	push	edx
	call	_BN_nnmod
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN32@ec_GFp_sim
; Line 435
	mov	eax, DWORD PTR [edi]
	mov	ecx, DWORD PTR [eax+144]
	test	ecx, ecx
	je	SHORT $LN11@ec_GFp_sim
; Line 436
	push	esi
	lea	eax, DWORD PTR [ebp+24]
	push	eax
	push	eax
	push	edi
	call	ecx
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN32@ec_GFp_sim
$LN11@ec_GFp_sim:
; Line 441
	mov	edx, DWORD PTR _z$[esp+16]
	test	edx, edx
	je	SHORT $LN12@ec_GFp_sim
; Line 444
	push	esi
	lea	eax, DWORD PTR [edi+72]
	push	eax
	lea	ecx, DWORD PTR [ebp+44]
	push	edx
	push	ecx
	call	_BN_nnmod
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN32@ec_GFp_sim
; Line 446
	cmp	DWORD PTR [ebp+48], 1
	lea	ecx, DWORD PTR [ebp+44]
	jne	SHORT $LN21@ec_GFp_sim
	mov	eax, DWORD PTR [ecx]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN21@ec_GFp_sim
	cmp	DWORD PTR [ebp+56], 0
	jne	SHORT $LN21@ec_GFp_sim
	mov	eax, 1
	jmp	SHORT $LN33@ec_GFp_sim
$LN21@ec_GFp_sim:
	xor	eax, eax
$LN33@ec_GFp_sim:
; Line 447
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR _Z_is_one$1$[esp+16], eax
	mov	ebp, DWORD PTR [edx+144]
	test	ebp, ebp
	mov	DWORD PTR tv275[esp+20], ebp
	mov	ebp, DWORD PTR _point$[esp+16]
	je	SHORT $LN18@ec_GFp_sim
; Line 448
	test	eax, eax
	je	SHORT $LN15@ec_GFp_sim
	mov	eax, DWORD PTR [edx+152]
	test	eax, eax
	je	SHORT $LN15@ec_GFp_sim
; Line 449
	push	esi
	push	ecx
	push	edi
	call	eax
	add	esp, 12					; 0000000cH
; Line 451
	jmp	SHORT $LN36@ec_GFp_sim
$LN15@ec_GFp_sim:
; Line 452
	push	esi
	push	ecx
	push	ecx
	push	edi
	call	DWORD PTR tv275[esp+36]
	add	esp, 16					; 00000010H
$LN36@ec_GFp_sim:
	test	eax, eax
	je	SHORT $LN32@ec_GFp_sim
$LN18@ec_GFp_sim:
; Line 457
	mov	eax, DWORD PTR _Z_is_one$1$[esp+16]
	mov	DWORD PTR [ebp+64], eax
$LN12@ec_GFp_sim:
; Line 460
	mov	ebp, 1
	jmp	SHORT $err$38
$LN32@ec_GFp_sim:
	xor	ebp, ebp
$err$38:
; Line 463
	test	ebx, ebx
	je	SHORT $LN19@ec_GFp_sim
; Line 464
	push	ebx
	call	_BN_CTX_free
	add	esp, 4
$LN19@ec_GFp_sim:
; Line 465
	pop	edi
	mov	eax, ebp
	pop	ebp
	pop	esi
	pop	ebx
; Line 466
	pop	ecx
	ret	0
_ec_GFp_simple_set_Jprojective_coordinates_GFp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_point_set_to_infinity
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_ec_GFp_simple_point_set_to_infinity PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 402
	mov	eax, DWORD PTR _point$[esp-4]
; Line 403
	push	0
	mov	DWORD PTR [eax+64], 0
	add	eax, 44					; 0000002cH
	push	eax
	call	_BN_set_word
	add	esp, 8
; Line 404
	mov	eax, 1
; Line 405
	ret	0
_ec_GFp_simple_point_set_to_infinity ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_point_copy
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_ec_GFp_simple_point_copy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 387
	push	esi
; Line 388
	mov	esi, DWORD PTR _src$[esp]
	push	edi
	mov	edi, DWORD PTR _dest$[esp+4]
	lea	eax, DWORD PTR [esi+4]
	push	eax
	lea	eax, DWORD PTR [edi+4]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@ec_GFp_sim
$LN6@ec_GFp_sim:
	pop	edi
; Line 389
	xor	eax, eax
	pop	esi
; Line 397
	ret	0
$LN2@ec_GFp_sim:
; Line 390
	lea	eax, DWORD PTR [esi+24]
	push	eax
	lea	eax, DWORD PTR [edi+24]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@ec_GFp_sim
; Line 392
	lea	eax, DWORD PTR [esi+44]
	push	eax
	lea	eax, DWORD PTR [edi+44]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@ec_GFp_sim
; Line 394
	mov	eax, DWORD PTR [esi+64]
	mov	DWORD PTR [edi+64], eax
; Line 396
	mov	eax, 1
	pop	edi
	pop	esi
; Line 397
	ret	0
_ec_GFp_simple_point_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_point_clear_finish
_TEXT	SEGMENT
_point$ = 8						; size = 4
_ec_GFp_simple_point_clear_finish PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 379
	push	esi
; Line 380
	mov	esi, DWORD PTR _point$[esp]
	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	_BN_clear_free
; Line 381
	lea	eax, DWORD PTR [esi+24]
	push	eax
	call	_BN_clear_free
; Line 382
	lea	eax, DWORD PTR [esi+44]
	push	eax
	call	_BN_clear_free
	add	esp, 12					; 0000000cH
; Line 383
	mov	DWORD PTR [esi+64], 0
	pop	esi
; Line 384
	ret	0
_ec_GFp_simple_point_clear_finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_point_finish
_TEXT	SEGMENT
_point$ = 8						; size = 4
_ec_GFp_simple_point_finish PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 372
	push	esi
; Line 373
	mov	esi, DWORD PTR _point$[esp]
	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	_BN_free
; Line 374
	lea	eax, DWORD PTR [esi+24]
	push	eax
	call	_BN_free
	add	esp, 8
; Line 375
	lea	eax, DWORD PTR [esi+44]
	pop	esi
	mov	DWORD PTR _point$[esp-4], eax
	jmp	_BN_free
_ec_GFp_simple_point_finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_point_init
_TEXT	SEGMENT
_point$ = 8						; size = 4
_ec_GFp_simple_point_init PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 362
	push	esi
; Line 363
	mov	esi, DWORD PTR _point$[esp]
	lea	eax, DWORD PTR [esi+4]
	push	eax
	call	_BN_init
; Line 364
	lea	eax, DWORD PTR [esi+24]
	push	eax
	call	_BN_init
; Line 365
	lea	eax, DWORD PTR [esi+44]
	push	eax
	call	_BN_init
	add	esp, 12					; 0000000cH
; Line 366
	mov	DWORD PTR [esi+64], 0
; Line 368
	mov	eax, 1
	pop	esi
; Line 369
	ret	0
_ec_GFp_simple_point_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_group_check_discriminant
_TEXT	SEGMENT
_b$1$ = -8						; size = 4
_tmp_2$1$ = -4						; size = 4
_p$1$ = 8						; size = 4
_group$ = 8						; size = 4
_tmp_1$1$ = 12						; size = 4
_ctx$ = 12						; size = 4
_ec_GFp_simple_group_check_discriminant PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 288
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	esi
; Line 294
	mov	esi, DWORD PTR _ctx$[esp+12]
	xor	ebx, ebx
	push	edi
	mov	edi, DWORD PTR _group$[esp+16]
	lea	eax, DWORD PTR [edi+72]
	mov	DWORD PTR _p$1$[esp+16], eax
	test	esi, esi
	jne	SHORT $LN3@ec_GFp_sim
; Line 295
	call	_BN_CTX_new
	mov	ebx, eax
	mov	esi, ebx
; Line 296
	test	ebx, ebx
	jne	SHORT $LN3@ec_GFp_sim
; Line 297
	push	298					; 0000012aH
	push	OFFSET ??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@
	push	65					; 00000041H
	push	165					; 000000a5H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 358
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 359
	add	esp, 8
	ret	0
$LN3@ec_GFp_sim:
	push	ebp
; Line 302
	push	esi
	call	_BN_CTX_start
; Line 303
	push	esi
	call	_BN_CTX_get
; Line 304
	push	esi
	mov	ebp, eax
	call	_BN_CTX_get
; Line 305
	push	esi
	mov	DWORD PTR _b$1$[esp+40], eax
	call	_BN_CTX_get
; Line 306
	push	esi
	mov	DWORD PTR _tmp_1$1$[esp+40], eax
	call	_BN_CTX_get
; Line 307
	push	esi
	mov	DWORD PTR _tmp_2$1$[esp+48], eax
	call	_BN_CTX_get
	add	esp, 24					; 00000018H
; Line 308
	test	eax, eax
	je	$LN38@ec_GFp_sim
; Line 311
	mov	ecx, DWORD PTR [edi]
; Line 312
	lea	eax, DWORD PTR [edi+116]
	mov	ecx, DWORD PTR [ecx+148]
	test	ecx, ecx
	je	SHORT $LN5@ec_GFp_sim
	push	esi
	push	eax
	push	ebp
	push	edi
	call	ecx
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN38@ec_GFp_sim
; Line 314
	mov	ecx, DWORD PTR [edi]
	lea	eax, DWORD PTR [edi+136]
	push	esi
	push	eax
	push	DWORD PTR _b$1$[esp+32]
	mov	eax, DWORD PTR [ecx+148]
	push	edi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN38@ec_GFp_sim
; Line 316
	mov	edi, DWORD PTR _b$1$[esp+24]
	jmp	SHORT $LN10@ec_GFp_sim
$LN5@ec_GFp_sim:
; Line 317
	push	eax
	push	ebp
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN38@ec_GFp_sim
; Line 319
	lea	eax, DWORD PTR [edi+136]
	mov	edi, DWORD PTR _b$1$[esp+24]
	push	eax
	push	edi
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN38@ec_GFp_sim
$LN10@ec_GFp_sim:
; Line 328
	cmp	DWORD PTR [ebp+4], 0
	jne	SHORT $LN11@ec_GFp_sim
; Line 329
	cmp	DWORD PTR [edi+4], 0
; Line 331
	jmp	$LN41@ec_GFp_sim
$LN11@ec_GFp_sim:
	cmp	DWORD PTR [edi+4], 0
	je	$LN21@ec_GFp_sim
; Line 332
	push	esi
	push	DWORD PTR _p$1$[esp+24]
	push	ebp
	push	DWORD PTR _tmp_1$1$[esp+32]
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN38@ec_GFp_sim
; Line 334
	push	esi
	push	DWORD PTR _p$1$[esp+24]
	push	ebp
	push	DWORD PTR _tmp_1$1$[esp+32]
	push	DWORD PTR _tmp_2$1$[esp+40]
	call	_BN_mod_mul
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN38@ec_GFp_sim
; Line 336
	push	2
	push	DWORD PTR _tmp_2$1$[esp+28]
	push	DWORD PTR _tmp_1$1$[esp+28]
	call	_BN_lshift
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN38@ec_GFp_sim
; Line 340
	push	esi
	push	DWORD PTR _p$1$[esp+24]
	push	edi
	mov	edi, DWORD PTR _tmp_2$1$[esp+36]
	push	edi
	call	_BN_mod_sqr
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN38@ec_GFp_sim
; Line 342
	push	27					; 0000001bH
	push	edi
	call	_BN_mul_word
	add	esp, 8
	test	eax, eax
	je	SHORT $LN38@ec_GFp_sim
; Line 346
	push	esi
	push	DWORD PTR _p$1$[esp+24]
	push	edi
	push	DWORD PTR _tmp_1$1$[esp+32]
	push	ebp
	call	_BN_mod_add
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN38@ec_GFp_sim
; Line 348
	cmp	DWORD PTR [ebp+4], 0
$LN41@ec_GFp_sim:
	je	SHORT $LN38@ec_GFp_sim
$LN21@ec_GFp_sim:
; Line 351
	mov	ebp, 1
	jmp	SHORT $err$43
$LN38@ec_GFp_sim:
	xor	ebp, ebp
$err$43:
; Line 354
	test	esi, esi
	je	SHORT $LN22@ec_GFp_sim
; Line 355
	push	esi
	call	_BN_CTX_end
	add	esp, 4
$LN22@ec_GFp_sim:
; Line 356
	test	ebx, ebx
	je	SHORT $LN25@ec_GFp_sim
; Line 357
	push	ebx
	call	_BN_CTX_free
	add	esp, 4
$LN25@ec_GFp_sim:
; Line 358
	mov	eax, ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 359
	add	esp, 8
	ret	0
_ec_GFp_simple_group_check_discriminant ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_group_get_degree
_TEXT	SEGMENT
_group$ = 8						; size = 4
_ec_GFp_simple_group_get_degree PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 284
	mov	eax, DWORD PTR _group$[esp-4]
	add	eax, 72					; 00000048H
	mov	DWORD PTR _group$[esp-4], eax
	jmp	_BN_num_bits
_ec_GFp_simple_group_get_degree ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_group_get_curve
_TEXT	SEGMENT
_ret$1$ = -4						; size = 4
_group$ = 8						; size = 4
_p$ = 12						; size = 4
_a$ = 16						; size = 4
_b$ = 20						; size = 4
_ctx$ = 24						; size = 4
_ec_GFp_simple_group_get_curve PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 238
	mov	eax, 4
	call	__chkstk
; Line 242
	mov	ecx, DWORD PTR _p$[esp]
	push	esi
	mov	esi, DWORD PTR _group$[esp+4]
	push	edi
	xor	edi, edi
	mov	DWORD PTR _ret$1$[esp+12], 0
	test	ecx, ecx
	je	SHORT $LN3@ec_GFp_sim
; Line 243
	lea	eax, DWORD PTR [esi+72]
	push	eax
	push	ecx
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@ec_GFp_sim
	pop	edi
	pop	esi
; Line 280
	pop	ecx
	ret	0
$LN3@ec_GFp_sim:
	push	ebx
; Line 247
	mov	ebx, DWORD PTR _b$[esp+12]
	push	ebp
	mov	ebp, DWORD PTR _a$[esp+16]
	test	ebp, ebp
	jne	SHORT $LN5@ec_GFp_sim
	test	ebx, ebx
	je	$LN17@ec_GFp_sim
$LN5@ec_GFp_sim:
; Line 248
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+148], edi
	je	SHORT $LN6@ec_GFp_sim
; Line 249
	mov	eax, DWORD PTR _ctx$[esp+16]
	test	eax, eax
	jne	SHORT $LN9@ec_GFp_sim
; Line 250
	call	_BN_CTX_new
	mov	edi, eax
	mov	DWORD PTR _ctx$[esp+16], eax
; Line 251
	test	edi, edi
	jne	SHORT $LN9@ec_GFp_sim
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 280
	pop	ecx
	ret	0
$LN9@ec_GFp_sim:
; Line 254
	test	ebp, ebp
	je	SHORT $LN11@ec_GFp_sim
; Line 255
	mov	ecx, DWORD PTR [esi]
	push	eax
	lea	eax, DWORD PTR [esi+116]
	push	eax
	mov	eax, DWORD PTR [ecx+148]
	push	ebp
	push	esi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$23
$LN11@ec_GFp_sim:
; Line 258
	test	ebx, ebx
	je	SHORT $LN17@ec_GFp_sim
; Line 259
	push	DWORD PTR _ctx$[esp+16]
	mov	ecx, DWORD PTR [esi]
	lea	eax, DWORD PTR [esi+136]
	push	eax
	push	ebx
	push	esi
	mov	eax, DWORD PTR [ecx+148]
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$23
; Line 262
	jmp	SHORT $LN17@ec_GFp_sim
$LN6@ec_GFp_sim:
; Line 263
	test	ebp, ebp
	je	SHORT $LN15@ec_GFp_sim
; Line 264
	lea	eax, DWORD PTR [esi+116]
	push	eax
	push	ebp
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN18@ec_GFp_sim
$LN15@ec_GFp_sim:
; Line 267
	test	ebx, ebx
	je	SHORT $LN17@ec_GFp_sim
; Line 268
	lea	eax, DWORD PTR [esi+136]
	push	eax
	push	ebx
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN18@ec_GFp_sim
$LN17@ec_GFp_sim:
; Line 274
	mov	DWORD PTR _ret$1$[esp+20], 1
$err$23:
; Line 277
	test	edi, edi
	je	SHORT $LN18@ec_GFp_sim
; Line 278
	push	edi
	call	_BN_CTX_free
	add	esp, 4
$LN18@ec_GFp_sim:
; Line 279
	mov	eax, DWORD PTR _ret$1$[esp+20]
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 280
	pop	ecx
	ret	0
_ec_GFp_simple_group_get_curve ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_group_set_curve
_TEXT	SEGMENT
_tmp_a$1$ = -4						; size = 4
_group$ = 8						; size = 4
_p$ = 12						; size = 4
_a$ = 16						; size = 4
_b$ = 20						; size = 4
_ctx$ = 24						; size = 4
_ec_GFp_simple_group_set_curve PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 179
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	edi
; Line 185
	mov	edi, DWORD PTR _p$[esp+12]
	xor	ebx, ebx
	push	edi
	xor	ebp, ebp
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 2
	jle	$LN4@ec_GFp_sim
	cmp	DWORD PTR [edi+4], ebx
	jle	$LN4@ec_GFp_sim
	mov	eax, DWORD PTR [edi]
	test	BYTE PTR [eax], 1
	je	$LN4@ec_GFp_sim
; Line 190
	push	esi
	mov	esi, DWORD PTR _ctx$[esp+16]
	test	esi, esi
	jne	SHORT $LN6@ec_GFp_sim
; Line 191
	call	_BN_CTX_new
	mov	ebp, eax
	mov	esi, ebp
; Line 192
	test	ebp, ebp
	jne	SHORT $LN6@ec_GFp_sim
	pop	esi
	pop	edi
	pop	ebp
	pop	ebx
; Line 234
	pop	ecx
	ret	0
$LN6@ec_GFp_sim:
; Line 196
	push	esi
	call	_BN_CTX_start
; Line 197
	push	esi
	call	_BN_CTX_get
	add	esp, 8
	mov	DWORD PTR _tmp_a$1$[esp+20], eax
; Line 198
	test	eax, eax
	je	$err$32
; Line 202
	mov	ebx, DWORD PTR _group$[esp+16]
	push	edi
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	$LN26@ec_GFp_sim
; Line 204
	lea	eax, DWORD PTR [ebx+72]
	push	0
	push	eax
	call	_BN_set_negative
; Line 207
	push	esi
	push	edi
	push	DWORD PTR _a$[esp+32]
	push	DWORD PTR _tmp_a$1$[esp+40]
	call	_BN_nnmod
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN26@ec_GFp_sim
; Line 209
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+144]
; Line 210
	lea	eax, DWORD PTR [ebx+116]
	test	ecx, ecx
	je	SHORT $LN10@ec_GFp_sim
	push	esi
	push	DWORD PTR _tmp_a$1$[esp+24]
	push	eax
	push	ebx
	call	ecx
	add	esp, 16					; 00000010H
; Line 212
	jmp	SHORT $LN30@ec_GFp_sim
$LN10@ec_GFp_sim:
	push	DWORD PTR _tmp_a$1$[esp+20]
	push	eax
	call	_BN_copy
	add	esp, 8
$LN30@ec_GFp_sim:
	test	eax, eax
	je	SHORT $LN26@ec_GFp_sim
; Line 216
	push	esi
	push	edi
	push	DWORD PTR _b$[esp+24]
	lea	eax, DWORD PTR [ebx+136]
	push	eax
	call	_BN_nnmod
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN26@ec_GFp_sim
; Line 218
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+144]
	test	ecx, ecx
	je	SHORT $LN16@ec_GFp_sim
; Line 219
	push	esi
	lea	eax, DWORD PTR [ebx+136]
	push	eax
	push	eax
	push	ebx
	call	ecx
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN26@ec_GFp_sim
$LN16@ec_GFp_sim:
; Line 223
	mov	edi, DWORD PTR _tmp_a$1$[esp+20]
	push	3
	push	edi
	call	_BN_add_word
	add	esp, 8
	test	eax, eax
	je	SHORT $LN26@ec_GFp_sim
; Line 225
	lea	eax, DWORD PTR [ebx+72]
	push	eax
	push	edi
	call	_BN_cmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	inc	eax
	mov	DWORD PTR [ebx+156], eax
; Line 227
	mov	ebx, 1
	jmp	SHORT $err$32
$LN26@ec_GFp_sim:
	xor	ebx, ebx
$err$32:
; Line 230
	push	esi
	call	_BN_CTX_end
	add	esp, 4
; Line 231
	test	ebp, ebp
	je	SHORT $LN18@ec_GFp_sim
; Line 232
	push	ebp
	call	_BN_CTX_free
	add	esp, 4
$LN18@ec_GFp_sim:
; Line 233
	pop	esi
	pop	edi
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 234
	pop	ecx
	ret	0
$LN4@ec_GFp_sim:
; Line 186
	push	186					; 000000baH
	push	OFFSET ??_C@_0BH@IFDMNBNE@?4?2crypto?2ec?2ecp_smpl?4c?$AA@
	push	103					; 00000067H
	push	166					; 000000a6H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 187
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
; Line 234
	pop	ecx
	ret	0
_ec_GFp_simple_group_set_curve ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_group_copy
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_ec_GFp_simple_group_copy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 163
	push	esi
; Line 164
	mov	esi, DWORD PTR _src$[esp]
	push	edi
	mov	edi, DWORD PTR _dest$[esp+4]
	lea	eax, DWORD PTR [esi+72]
	push	eax
	lea	eax, DWORD PTR [edi+72]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@ec_GFp_sim
$LN6@ec_GFp_sim:
	pop	edi
; Line 165
	xor	eax, eax
	pop	esi
; Line 174
	ret	0
$LN2@ec_GFp_sim:
; Line 166
	lea	eax, DWORD PTR [esi+116]
	push	eax
	lea	eax, DWORD PTR [edi+116]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@ec_GFp_sim
; Line 168
	lea	eax, DWORD PTR [esi+136]
	push	eax
	lea	eax, DWORD PTR [edi+136]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@ec_GFp_sim
; Line 171
	mov	eax, DWORD PTR [esi+156]
	mov	DWORD PTR [edi+156], eax
; Line 173
	mov	eax, 1
	pop	edi
	pop	esi
; Line 174
	ret	0
_ec_GFp_simple_group_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_group_clear_finish
_TEXT	SEGMENT
_group$ = 8						; size = 4
_ec_GFp_simple_group_clear_finish PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 156
	push	esi
; Line 157
	mov	esi, DWORD PTR _group$[esp]
	lea	eax, DWORD PTR [esi+72]
	push	eax
	call	_BN_clear_free
; Line 158
	lea	eax, DWORD PTR [esi+116]
	push	eax
	call	_BN_clear_free
	add	esp, 8
; Line 159
	lea	eax, DWORD PTR [esi+136]
	pop	esi
	mov	DWORD PTR _group$[esp-4], eax
	jmp	_BN_clear_free
_ec_GFp_simple_group_clear_finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_group_finish
_TEXT	SEGMENT
_group$ = 8						; size = 4
_ec_GFp_simple_group_finish PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 149
	push	esi
; Line 150
	mov	esi, DWORD PTR _group$[esp]
	lea	eax, DWORD PTR [esi+72]
	push	eax
	call	_BN_free
; Line 151
	lea	eax, DWORD PTR [esi+116]
	push	eax
	call	_BN_free
	add	esp, 8
; Line 152
	lea	eax, DWORD PTR [esi+136]
	pop	esi
	mov	DWORD PTR _group$[esp-4], eax
	jmp	_BN_free
_ec_GFp_simple_group_finish ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_GFp_simple_group_init
_TEXT	SEGMENT
_group$ = 8						; size = 4
_ec_GFp_simple_group_init PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 140
	push	esi
; Line 141
	mov	esi, DWORD PTR _group$[esp]
	lea	eax, DWORD PTR [esi+72]
	push	eax
	call	_BN_init
; Line 142
	lea	eax, DWORD PTR [esi+116]
	push	eax
	call	_BN_init
; Line 143
	lea	eax, DWORD PTR [esi+136]
	push	eax
	call	_BN_init
	add	esp, 12					; 0000000cH
; Line 144
	mov	DWORD PTR [esi+156], 0
; Line 145
	mov	eax, 1
	pop	esi
; Line 146
	ret	0
_ec_GFp_simple_group_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GFp_simple_method
_TEXT	SEGMENT
_EC_GFp_simple_method PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ecp_smpl.c
; Line 122
	mov	eax, OFFSET ?ret@?1??EC_GFp_simple_method@@9@9
; Line 123
	ret	0
_EC_GFp_simple_method ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\rand.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_scanf_options
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	_rand_main
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_05LGFPCDPE@?9rand?$AA@			; `string'
PUBLIC	??_C@_07OGJCBNJ@?9base64?$AA@			; `string'
PUBLIC	??_C@_04FHOEMGIO@?9hex?$AA@			; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_0BL@IANAEACK@Usage?3?5rand?5?$FLoptions?$FN?5num?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@	; `string'
PUBLIC	??_C@_0CH@OPFGEEJC@?9out?5file?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5write?5to@ ; `string'
PUBLIC	??_C@_0ED@MFPDJDLD@?9engine?5e?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5use?5engi@ ; `string'
PUBLIC	??_C@_0CO@LLFOPNBE@?9rand?5file?$CFcfile?$CFc?4?4?4?5?9?5seed?5PRN@ ; `string'
PUBLIC	??_C@_0CO@PPFLGDON@?9base64?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5base64?5e@ ; `string'
PUBLIC	??_C@_0CL@BBEFHDEG@?9hex?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5hex?5enco@ ; `string'
PUBLIC	??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; `string'
PUBLIC	??_C@_04NOJCDH@?$CF02x?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
EXTRN	__imp__isdigit:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_push:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BIO_f_base64:PROC
EXTRN	_RAND_bytes:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_write_file:PROC
EXTRN	_app_RAND_load_files:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NOJCDH@?$CF02x?$AA@
CONST	SEGMENT
??_C@_04NOJCDH@?$CF02x?$AA@ DB '%02x', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
CONST	SEGMENT
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ DB '%ld sem'
	DB	'i-random bytes loaded', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@BBEFHDEG@?9hex?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5hex?5enco@
CONST	SEGMENT
??_C@_0CL@BBEFHDEG@?9hex?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5hex?5enco@ DB '-'
	DB	'hex                  - hex encode output', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@PPFLGDON@?9base64?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5base64?5e@
CONST	SEGMENT
??_C@_0CO@PPFLGDON@?9base64?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5base64?5e@ DB '-'
	DB	'base64               - base64 encode output', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@LLFOPNBE@?9rand?5file?$CFcfile?$CFc?4?4?4?5?9?5seed?5PRN@
CONST	SEGMENT
??_C@_0CO@LLFOPNBE@?9rand?5file?$CFcfile?$CFc?4?4?4?5?9?5seed?5PRN@ DB '-'
	DB	'rand file%cfile%c... - seed PRNG from files', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@MFPDJDLD@?9engine?5e?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5use?5engi@
CONST	SEGMENT
??_C@_0ED@MFPDJDLD@?9engine?5e?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5use?5engi@ DB '-'
	DB	'engine e             - use engine e, possibly a hardware devi'
	DB	'ce.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OPFGEEJC@?9out?5file?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5write?5to@
CONST	SEGMENT
??_C@_0CH@OPFGEEJC@?9out?5file?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5write?5to@ DB '-'
	DB	'out file             - write to file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
CONST	SEGMENT
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ DB 'where options are', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IANAEACK@Usage?3?5rand?5?$FLoptions?$FN?5num?6?$AA@
CONST	SEGMENT
??_C@_0BL@IANAEACK@Usage?3?5rand?5?$FLoptions?$FN?5num?6?$AA@ DB 'Usage: '
	DB	'rand [options] num', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FHOEMGIO@?9hex?$AA@
CONST	SEGMENT
??_C@_04FHOEMGIO@?9hex?$AA@ DB '-hex', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OGJCBNJ@?9base64?$AA@
CONST	SEGMENT
??_C@_07OGJCBNJ@?9base64?$AA@ DB '-base64', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGFPCDPE@?9rand?$AA@
CONST	SEGMENT
??_C@_05LGFPCDPE@?9rand?$AA@ DB '-rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rand_main
_TEXT	SEGMENT
_base64$1$ = -4124					; size = 4
_engine$1$ = -4120					; size = 4
_num$ = -4116						; size = 4
_hex$1$ = -4112						; size = 4
_inrand$1$ = -4108					; size = 4
_outfile$1$ = -4104					; size = 4
_buf$1 = -4100						; size = 4096
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_rand_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\rand.c
; Line 80
	mov	eax, 4124				; 0000101cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+4124], eax
; Line 85
	xor	eax, eax
	mov	DWORD PTR _outfile$1$[esp+4124], 0
	push	ebx
	push	ebp
	mov	DWORD PTR _base64$1$[esp+4132], eax
; Line 87
	xor	ebx, ebx
	mov	DWORD PTR _hex$1$[esp+4132], eax
	mov	ebp, 1
; Line 90
	mov	DWORD PTR _engine$1$[esp+4132], eax
; Line 95
	mov	eax, DWORD PTR _bio_err
	mov	DWORD PTR _inrand$1$[esp+4132], 0
	mov	DWORD PTR _num$[esp+4132], -1
	push	esi
	mov	esi, DWORD PTR _argv$[esp+4132]
	test	eax, eax
	jne	SHORT $LN10@rand_main
; Line 96
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN10@rand_main
; Line 97
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN10@rand_main:
; Line 99
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$err$98
; Line 102
	xor	ebp, ebp
	xor	eax, eax
	push	edi
$LL2@rand_main:
; Line 104
	mov	edi, DWORD PTR [esi+4]
	add	esi, 4
	test	edi, edi
	je	$LN90@rand_main
; Line 105
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, edi
	npad	4
$LL68@rand_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN69@rand_main
	test	dl, dl
	je	SHORT $LN70@rand_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN69@rand_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL68@rand_main
$LN70@rand_main:
	xor	eax, eax
	jmp	SHORT $LN71@rand_main
$LN69@rand_main:
	sbb	eax, eax
	or	eax, 1
$LN71@rand_main:
	test	eax, eax
	jne	SHORT $LN12@rand_main
; Line 106
	cmp	DWORD PTR [esi+4], ebx
	je	$LN32@rand_main
	cmp	DWORD PTR _outfile$1$[esp+4140], ebx
	jne	$LN32@rand_main
; Line 107
	mov	eax, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _outfile$1$[esp+4140], eax
; Line 110
	mov	eax, DWORD PTR _base64$1$[esp+4140]
	jmp	SHORT $LL2@rand_main
$LN12@rand_main:
; Line 112
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, edi
$LL72@rand_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN73@rand_main
	test	dl, dl
	je	SHORT $LN74@rand_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN73@rand_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL72@rand_main
$LN74@rand_main:
	xor	eax, eax
	jmp	SHORT $LN75@rand_main
$LN73@rand_main:
	sbb	eax, eax
	or	eax, 1
$LN75@rand_main:
	test	eax, eax
	jne	SHORT $LN16@rand_main
; Line 113
	mov	ecx, DWORD PTR _engine$1$[esp+4140]
	cmp	DWORD PTR [esi+4], ebx
	je	$LN18@rand_main
	test	ecx, ecx
	jne	$LN18@rand_main
; Line 114
	mov	eax, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _engine$1$[esp+4140], eax
; Line 117
	mov	eax, DWORD PTR _base64$1$[esp+4140]
	jmp	$LL2@rand_main
$LN16@rand_main:
; Line 119
	mov	ecx, OFFSET ??_C@_05LGFPCDPE@?9rand?$AA@
	mov	eax, edi
	npad	5
$LL76@rand_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN77@rand_main
	test	dl, dl
	je	SHORT $LN78@rand_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN77@rand_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL76@rand_main
$LN78@rand_main:
	xor	eax, eax
	jmp	SHORT $LN79@rand_main
$LN77@rand_main:
	sbb	eax, eax
	or	eax, 1
$LN79@rand_main:
	test	eax, eax
	jne	SHORT $LN20@rand_main
; Line 120
	cmp	DWORD PTR [esi+4], ebx
	je	$LN32@rand_main
	cmp	DWORD PTR _inrand$1$[esp+4140], ebx
	jne	$LN32@rand_main
; Line 121
	mov	eax, DWORD PTR [esi+4]
	add	esi, 4
	mov	DWORD PTR _inrand$1$[esp+4140], eax
; Line 124
	mov	eax, DWORD PTR _base64$1$[esp+4140]
	jmp	$LL2@rand_main
$LN20@rand_main:
	mov	ecx, OFFSET ??_C@_07OGJCBNJ@?9base64?$AA@
	mov	eax, edi
$LL80@rand_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN81@rand_main
	test	dl, dl
	je	SHORT $LN82@rand_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN81@rand_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL80@rand_main
$LN82@rand_main:
	xor	eax, eax
	jmp	SHORT $LN83@rand_main
$LN81@rand_main:
	sbb	eax, eax
	or	eax, 1
$LN83@rand_main:
	test	eax, eax
	jne	SHORT $LN24@rand_main
; Line 125
	mov	eax, DWORD PTR _base64$1$[esp+4140]
	test	eax, eax
	jne	$LN26@rand_main
; Line 126
	mov	eax, 1
	mov	DWORD PTR _base64$1$[esp+4140], eax
; Line 129
	jmp	$LL2@rand_main
$LN24@rand_main:
	mov	ecx, OFFSET ??_C@_04FHOEMGIO@?9hex?$AA@
	mov	eax, edi
$LL84@rand_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN85@rand_main
	test	dl, dl
	je	SHORT $LN86@rand_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN85@rand_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL84@rand_main
$LN86@rand_main:
	xor	eax, eax
	jmp	SHORT $LN87@rand_main
$LN85@rand_main:
	sbb	eax, eax
	or	eax, 1
$LN87@rand_main:
	test	eax, eax
	jne	SHORT $LN28@rand_main
; Line 134
	mov	eax, DWORD PTR _base64$1$[esp+4140]
	cmp	DWORD PTR _hex$1$[esp+4140], ebx
	jne	SHORT $LN26@rand_main
; Line 131
	mov	DWORD PTR _hex$1$[esp+4140], 1
; Line 134
	jmp	$LL2@rand_main
$LN28@rand_main:
	movzx	eax, BYTE PTR [edi]
	push	eax
	call	DWORD PTR __imp__isdigit
	add	esp, 4
	test	eax, eax
	je	SHORT $LN32@rand_main
; Line 135
	cmp	DWORD PTR _num$[esp+4140], ebx
	jge	SHORT $LN32@rand_main
; Line 136
	lea	eax, DWORD PTR _num$[esp+4140]
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	push	DWORD PTR [esi]
	call	_sscanf
	add	esp, 12					; 0000000cH
; Line 137
	test	eax, eax
	je	SHORT $LN32@rand_main
	cmp	DWORD PTR _num$[esp+4140], ebx
	jl	SHORT $LN32@rand_main
; Line 104
	mov	eax, DWORD PTR _base64$1$[esp+4140]
	jmp	$LL2@rand_main
$LN18@rand_main:
; Line 117
	mov	eax, DWORD PTR _base64$1$[esp+4140]
	mov	ebp, 1
	jmp	SHORT $LN3@rand_main
$LN32@rand_main:
	mov	eax, DWORD PTR _base64$1$[esp+4140]
$LN26@rand_main:
; Line 142
	mov	ebp, 1
$LN90@rand_main:
	mov	ecx, DWORD PTR _engine$1$[esp+4140]
$LN3@rand_main:
; Line 145
	mov	esi, DWORD PTR _hex$1$[esp+4140]
	test	esi, esi
	je	SHORT $LN38@rand_main
	test	eax, eax
	mov	edx, 1
	cmovne	ebp, edx
$LN38@rand_main:
; Line 148
	cmp	DWORD PTR _num$[esp+4140], ebx
	jl	$LN67@rand_main
; Line 151
	test	ebp, ebp
	jne	$LN67@rand_main
; Line 166
	push	ebp
	push	ecx
	push	DWORD PTR _bio_err
	call	_setup_engine
; Line 169
	mov	ebx, DWORD PTR _inrand$1$[esp+4152]
	xor	eax, eax
	test	ebx, ebx
	setne	al
	push	eax
	push	DWORD PTR _bio_err
	push	ebp
	call	_app_RAND_load_file
	add	esp, 24					; 00000018H
; Line 170
	test	ebx, ebx
	je	SHORT $LN41@rand_main
; Line 171
	push	ebx
	call	_app_RAND_load_files
	push	eax
	push	OFFSET ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN41@rand_main:
; Line 174
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	ebx, eax
	add	esp, 4
; Line 175
	test	ebx, ebx
	je	$LN95@rand_main
; Line 177
	mov	eax, DWORD PTR _outfile$1$[esp+4140]
	test	eax, eax
	je	SHORT $LN43@rand_main
; Line 178
	push	eax
	push	5
	push	108					; 0000006cH
	push	ebx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	jmp	SHORT $LN44@rand_main
$LN43@rand_main:
; Line 180
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	ebx
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN44@rand_main:
; Line 188
	test	eax, eax
	jle	$LN95@rand_main
; Line 191
	mov	eax, DWORD PTR _base64$1$[esp+4140]
	test	eax, eax
	je	SHORT $LN56@rand_main
; Line 192
	call	_BIO_f_base64
	push	eax
	call	_BIO_new
	add	esp, 4
; Line 193
	test	eax, eax
	je	$LN95@rand_main
; Line 195
	push	ebx
	push	eax
	call	_BIO_push
	add	esp, 8
	mov	ebx, eax
$LN56@rand_main:
; Line 198
	mov	eax, DWORD PTR _num$[esp+4140]
	test	eax, eax
	jle	SHORT $LN5@rand_main
	mov	ebp, 4096				; 00001000H
$LL4@rand_main:
; Line 203
	cmp	eax, 4096				; 00001000H
	cmovg	eax, ebp
	mov	edi, eax
; Line 205
	lea	eax, DWORD PTR _buf$1[esp+4140]
	push	edi
	push	eax
	call	_RAND_bytes
	add	esp, 8
; Line 206
	test	eax, eax
	jle	$LN95@rand_main
; Line 208
	test	esi, esi
	jne	SHORT $LN50@rand_main
; Line 209
	push	edi
	lea	eax, DWORD PTR _buf$1[esp+4144]
	push	eax
	push	ebx
	call	_BIO_write
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@rand_main
$LN50@rand_main:
; Line 211
	xor	esi, esi
	test	edi, edi
	jle	SHORT $LN89@rand_main
$LL8@rand_main:
; Line 212
	movzx	eax, BYTE PTR _buf$1[esp+esi+4140]
	push	eax
	push	OFFSET ??_C@_04NOJCDH@?$CF02x?$AA@
	push	ebx
	call	_BIO_printf
	inc	esi
	add	esp, 12					; 0000000cH
	cmp	esi, edi
	jl	SHORT $LL8@rand_main
$LN89@rand_main:
	mov	esi, DWORD PTR _hex$1$[esp+4140]
$LN7@rand_main:
; Line 214
	mov	eax, DWORD PTR _num$[esp+4140]
	sub	eax, edi
	mov	DWORD PTR _num$[esp+4140], eax
	test	eax, eax
	jg	SHORT $LL4@rand_main
$LN5@rand_main:
; Line 216
	test	esi, esi
	je	SHORT $LN52@rand_main
; Line 217
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	ebx
	call	_BIO_puts
	add	esp, 8
$LN52@rand_main:
; Line 218
	push	0
	push	0
	push	11					; 0000000bH
	push	ebx
	call	_BIO_ctrl
; Line 220
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_write_file
	add	esp, 24					; 00000018H
; Line 221
	xor	ebp, ebp
	jmp	$LN96@rand_main
$LN67@rand_main:
; Line 152
	push	OFFSET ??_C@_0BL@IANAEACK@Usage?3?5rand?5?$FLoptions?$FN?5num?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 153
	push	OFFSET ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 154
	push	OFFSET ??_C@_0CH@OPFGEEJC@?9out?5file?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5write?5to@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 156
	push	OFFSET ??_C@_0ED@MFPDJDLD@?9engine?5e?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5use?5engi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 159
	push	59					; 0000003bH
	push	59					; 0000003bH
	push	OFFSET ??_C@_0CO@LLFOPNBE@?9rand?5file?$CFcfile?$CFc?4?4?4?5?9?5seed?5PRN@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 161
	push	OFFSET ??_C@_0CO@PPFLGDON@?9base64?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5base64?5e@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 162
	push	OFFSET ??_C@_0CL@BBEFHDEG@?9hex?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5hex?5enco@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
$LN95@rand_main:
	mov	ebp, 1
$LN96@rand_main:
	pop	edi
$err$98:
; Line 224
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 225
	test	ebx, ebx
	je	SHORT $LN88@rand_main
; Line 226
	push	ebx
	call	_BIO_free_all
	add	esp, 4
$LN88@rand_main:
; Line 229
	mov	ecx, DWORD PTR __$ArrayPad$[esp+4136]
	mov	eax, ebp
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 4124				; 0000101cH
	ret	0
_rand_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sscanf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2268
	ret	0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2170
	ret	0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 91
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
; Line 92
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
END

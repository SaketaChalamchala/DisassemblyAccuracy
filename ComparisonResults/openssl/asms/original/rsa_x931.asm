; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_x931.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_RSA_padding_add_X931
PUBLIC	_RSA_padding_check_X931
PUBLIC	_RSA_X931_hash_id
PUBLIC	??_C@_0BI@KEEABKFJ@?4?2crypto?2rsa?2rsa_x931?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BI@KEEABKFJ@?4?2crypto?2rsa?2rsa_x931?4c?$AA@
CONST	SEGMENT
??_C@_0BI@KEEABKFJ@?4?2crypto?2rsa?2rsa_x931?4c?$AA@ DB '.\crypto\rsa\rsa'
	DB	'_x931.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_X931_hash_id
_TEXT	SEGMENT
_nid$ = 8						; size = 4
_RSA_X931_hash_id PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_x931.c
; Line 152
	mov	eax, DWORD PTR _nid$[esp-4]
	cmp	eax, 673				; 000002a1H
	jg	SHORT $LN9@RSA_X931_h
	je	SHORT $LN6@RSA_X931_h
	cmp	eax, 64					; 00000040H
	je	SHORT $LN4@RSA_X931_h
	cmp	eax, 672				; 000002a0H
	jne	SHORT $LN2@RSA_X931_h
; Line 157
	mov	eax, 52					; 00000034H
; Line 167
	ret	0
$LN4@RSA_X931_h:
; Line 154
	mov	eax, 51					; 00000033H
; Line 167
	ret	0
$LN6@RSA_X931_h:
; Line 160
	mov	eax, 54					; 00000036H
; Line 167
	ret	0
$LN9@RSA_X931_h:
; Line 152
	cmp	eax, 674				; 000002a2H
	je	SHORT $LN7@RSA_X931_h
$LN2@RSA_X931_h:
; Line 166
	or	eax, -1
; Line 167
	ret	0
$LN7@RSA_X931_h:
; Line 163
	mov	eax, 53					; 00000035H
; Line 167
	ret	0
_RSA_X931_hash_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_padding_check_X931
_TEXT	SEGMENT
_to$ = 8						; size = 4
_tlen$ = 12						; size = 4
_from$ = 16						; size = 4
_flen$ = 20						; size = 4
_num$ = 24						; size = 4
_RSA_padding_check_X931 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_x931.c
; Line 106
	push	esi
; Line 111
	mov	esi, DWORD PTR _flen$[esp]
	cmp	DWORD PTR _num$[esp], esi
	jne	$LN6@RSA_paddin
	mov	ecx, DWORD PTR _from$[esp]
	mov	al, BYTE PTR [ecx]
	cmp	al, 106					; 0000006aH
	je	SHORT $LN5@RSA_paddin
	cmp	al, 107					; 0000006bH
	jne	$LN6@RSA_paddin
$LN5@RSA_paddin:
; Line 116
	inc	ecx
	cmp	al, 107					; 0000006bH
	jne	SHORT $LN7@RSA_paddin
; Line 117
	add	esi, -3					; fffffffdH
; Line 118
	xor	eax, eax
	test	esi, esi
	jle	SHORT $LN3@RSA_paddin
	npad	1
$LL4@RSA_paddin:
; Line 119
	mov	dl, BYTE PTR [ecx]
	inc	ecx
; Line 120
	cmp	dl, 186					; 000000baH
	je	SHORT $LN3@RSA_paddin
; Line 122
	cmp	dl, 187					; 000000bbH
	jne	SHORT $LN16@RSA_paddin
; Line 118
	inc	eax
	cmp	eax, esi
	jl	SHORT $LL4@RSA_paddin
$LN3@RSA_paddin:
; Line 128
	sub	esi, eax
; Line 130
	test	eax, eax
	jne	SHORT $LN8@RSA_paddin
; Line 131
	push	131					; 00000083H
	push	OFFSET ??_C@_0BI@KEEABKFJ@?4?2crypto?2rsa?2rsa_x931?4c?$AA@
	push	138					; 0000008aH
	push	128					; 00000080H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	or	eax, -1
	pop	esi
; Line 146
	ret	0
$LN16@RSA_paddin:
; Line 123
	push	123					; 0000007bH
	push	OFFSET ??_C@_0BI@KEEABKFJ@?4?2crypto?2rsa?2rsa_x931?4c?$AA@
	push	138					; 0000008aH
	push	128					; 00000080H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	or	eax, -1
	pop	esi
; Line 146
	ret	0
$LN7@RSA_paddin:
; Line 136
	add	esi, -2					; fffffffeH
$LN8@RSA_paddin:
; Line 138
	cmp	BYTE PTR [esi+ecx], 204			; 000000ccH
	je	SHORT $LN12@RSA_paddin
; Line 139
	push	139					; 0000008bH
	push	OFFSET ??_C@_0BI@KEEABKFJ@?4?2crypto?2rsa?2rsa_x931?4c?$AA@
	push	139					; 0000008bH
	push	128					; 00000080H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	or	eax, -1
	pop	esi
; Line 146
	ret	0
$LN12@RSA_paddin:
; Line 143
	push	esi
	push	ecx
	push	DWORD PTR _to$[esp+8]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 145
	mov	eax, esi
	pop	esi
; Line 146
	ret	0
$LN6@RSA_paddin:
; Line 112
	push	112					; 00000070H
	push	OFFSET ??_C@_0BI@KEEABKFJ@?4?2crypto?2rsa?2rsa_x931?4c?$AA@
	push	137					; 00000089H
	push	128					; 00000080H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 113
	or	eax, -1
	pop	esi
; Line 146
	ret	0
_RSA_padding_check_X931 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_padding_add_X931
_TEXT	SEGMENT
_to$ = 8						; size = 4
_tlen$ = 12						; size = 4
_from$ = 16						; size = 4
_flen$ = 20						; size = 4
_RSA_padding_add_X931 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_x931.c
; Line 69
	push	ebx
; Line 78
	mov	ebx, DWORD PTR _flen$[esp]
	push	edi
	mov	edi, DWORD PTR _tlen$[esp+4]
	sub	edi, ebx
	sub	edi, 2
; Line 80
	jns	SHORT $LN2@RSA_paddin
; Line 81
	push	81					; 00000051H
	push	OFFSET ??_C@_0BI@KEEABKFJ@?4?2crypto?2rsa?2rsa_x931?4c?$AA@
	push	110					; 0000006eH
	push	127					; 0000007fH
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 82
	or	eax, -1
	pop	edi
	pop	ebx
; Line 102
	ret	0
$LN2@RSA_paddin:
; Line 89
	mov	eax, DWORD PTR _to$[esp+4]
	push	esi
	lea	esi, DWORD PTR [eax+1]
	test	edi, edi
	jne	SHORT $LN3@RSA_paddin
	mov	BYTE PTR [eax], 106			; 0000006aH
	jmp	SHORT $LN4@RSA_paddin
$LN3@RSA_paddin:
; Line 91
	mov	BYTE PTR [eax], 107			; 0000006bH
; Line 92
	cmp	edi, 1
	jle	SHORT $LN5@RSA_paddin
; Line 93
	lea	eax, DWORD PTR [edi-1]
	push	eax
	push	187					; 000000bbH
	push	esi
	call	_memset
; Line 94
	dec	esi
	add	esp, 12					; 0000000cH
	add	esi, edi
$LN5@RSA_paddin:
; Line 96
	mov	BYTE PTR [esi], 186			; 000000baH
	inc	esi
$LN4@RSA_paddin:
; Line 98
	push	ebx
	push	DWORD PTR _from$[esp+12]
	push	esi
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 100
	mov	BYTE PTR [esi+ebx], 204			; 000000ccH
; Line 101
	mov	eax, 1
	pop	esi
	pop	edi
	pop	ebx
; Line 102
	ret	0
_RSA_padding_add_X931 ENDP
_TEXT	ENDS
END

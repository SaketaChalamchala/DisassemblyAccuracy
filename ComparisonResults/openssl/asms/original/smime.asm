; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\smime.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_smime_main
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_08CNCNOCCN@?9encrypt?$AA@			; `string'
PUBLIC	??_C@_08ODIALGEJ@?9decrypt?$AA@			; `string'
PUBLIC	??_C@_05LLLFPBKO@?9sign?$AA@			; `string'
PUBLIC	??_C@_07JFNKLBOA@?9resign?$AA@			; `string'
PUBLIC	??_C@_07FILEFCOC@?9verify?$AA@			; `string'
PUBLIC	??_C@_07BPNIONCJ@?9pk7out?$AA@			; `string'
PUBLIC	??_C@_05DHJJCNDB@?9des3?$AA@			; `string'
PUBLIC	??_C@_04POMGKAPN@?9des?$AA@			; `string'
PUBLIC	??_C@_05IAIHCPC@?9seed?$AA@			; `string'
PUBLIC	??_C@_07HIKEAMFN@?9rc2?940?$AA@			; `string'
PUBLIC	??_C@_08DGGHBBOC@?9rc2?9128?$AA@		; `string'
PUBLIC	??_C@_07BPEMBNDH@?9rc2?964?$AA@			; `string'
PUBLIC	??_C@_07ELMDAGHH@?9aes128?$AA@			; `string'
PUBLIC	??_C@_07LNHJABBM@?9aes192?$AA@			; `string'
PUBLIC	??_C@_07MCLKJCJC@?9aes256?$AA@			; `string'
PUBLIC	??_C@_0N@MALOKPBG@?9camellia128?$AA@		; `string'
PUBLIC	??_C@_0N@DGAEKIHN@?9camellia192?$AA@		; `string'
PUBLIC	??_C@_0N@EJMHDLPD@?9camellia256?$AA@		; `string'
PUBLIC	??_C@_05OEBEIMJA@?9text?$AA@			; `string'
PUBLIC	??_C@_09LLMNCLPN@?9nointern?$AA@		; `string'
PUBLIC	??_C@_09JLKGPCDL@?9noverify?$AA@		; `string'
PUBLIC	??_C@_08MKBHGHLI@?9nochain?$AA@			; `string'
PUBLIC	??_C@_08JLLJAHEH@?9nocerts?$AA@			; `string'
PUBLIC	??_C@_07NEHLGPOI@?9noattr?$AA@			; `string'
PUBLIC	??_C@_09HEABEDGI@?9nodetach?$AA@		; `string'
PUBLIC	??_C@_0M@BGBFCGLM@?9nosmimecap?$AA@		; `string'
PUBLIC	??_C@_07MHGMHDIE@?9binary?$AA@			; `string'
PUBLIC	??_C@_07GLFDAICA@?9nosigs?$AA@			; `string'
PUBLIC	??_C@_07KDDBNCBD@?9stream?$AA@			; `string'
PUBLIC	??_C@_06MPPEKNN@?9indef?$AA@			; `string'
PUBLIC	??_C@_08BCNBDCCA@?9noindef?$AA@			; `string'
PUBLIC	??_C@_0L@DMDFODFL@?9nooldmime?$AA@		; `string'
PUBLIC	??_C@_08KAKEAKLE@?9crlfeol?$AA@			; `string'
PUBLIC	??_C@_05LGFPCDPE@?9rand?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_03DNHOOAOE@?9to?$AA@			; `string'
PUBLIC	??_C@_05LBJDDLLJ@?9from?$AA@			; `string'
PUBLIC	??_C@_08GNEDOIFN@?9subject?$AA@			; `string'
PUBLIC	??_C@_07KJCLPKOH@?9signer?$AA@			; `string'
PUBLIC	??_C@_06JKGLPNJO@?9recip?$AA@			; `string'
PUBLIC	??_C@_03MNHNKBNA@?9md?$AA@			; `string'
PUBLIC	??_C@_0BD@MLPNFPFM@Unknown?5digest?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_06JJMGFEBF@?9inkey?$AA@			; `string'
PUBLIC	??_C@_0CA@DHJCDGB@Illegal?5?9inkey?5without?5?9signer?6?$AA@ ; `string'
PUBLIC	??_C@_08OAHLMBGP@?9keyform?$AA@			; `string'
PUBLIC	??_C@_09LJGMBFEA@?9certfile?$AA@		; `string'
PUBLIC	??_C@_07EAFCHGPO@?9CAfile?$AA@			; `string'
PUBLIC	??_C@_07MNNNLALG@?9CApath?$AA@			; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_07CGGPPMGB@?9inform?$AA@			; `string'
PUBLIC	??_C@_08LPHBEAIF@?9outform?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_08HCJMGADN@?9content?$AA@			; `string'
PUBLIC	??_C@_0CG@JIDLJHJP@Multiple?5signers?5or?5keys?5not?5all@ ; `string'
PUBLIC	??_C@_0CB@OFHFPLIP@No?5signer?5certificate?5specified?6@ ; `string'
PUBLIC	??_C@_0CL@LLEPGLLL@No?5recipient?5certificate?5or?5key?5@ ; `string'
PUBLIC	??_C@_0CK@PMIMDKMB@No?5recipient?$CIs?$CJ?5certificate?$CIs?$CJ?5s@ ; `string'
PUBLIC	??_C@_0CE@FDJDGLAJ@Usage?5smime?5?$FLoptions?$FN?5cert?4pem?5?4@ ; `string'
PUBLIC	??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@	; `string'
PUBLIC	??_C@_0CA@KGPHFLFP@?9encrypt?5?5?5?5?5?5?5encrypt?5message?6?$AA@ ; `string'
PUBLIC	??_C@_0CK@JCHKEHGG@?9decrypt?5?5?5?5?5?5?5decrypt?5encrypted@ ; `string'
PUBLIC	??_C@_0BN@HJPLAAFL@?9sign?5?5?5?5?5?5?5?5?5?5sign?5message?6?$AA@ ; `string'
PUBLIC	??_C@_0CG@DBJPEOLC@?9verify?5?5?5?5?5?5?5?5verify?5signed?5mes@ ; `string'
PUBLIC	??_C@_0CI@BCDMICAJ@?9pk7out?5?5?5?5?5?5?5?5output?5PKCS?$CD7?5str@ ; `string'
PUBLIC	??_C@_0CI@EOKKIBBM@?9des3?5?5?5?5?5?5?5?5?5?5encrypt?5with?5trip@ ; `string'
PUBLIC	??_C@_0CB@CIKFCINJ@?9des?5?5?5?5?5?5?5?5?5?5?5encrypt?5with?5DES?6@ ; `string'
PUBLIC	??_C@_0CC@GMBHMJIM@?9seed?5?5?5?5?5?5?5?5?5?5encrypt?5with?5SEED@ ; `string'
PUBLIC	??_C@_0CO@GEAPCENN@?9rc2?940?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ ; `string'
PUBLIC	??_C@_0CE@IJCAPJKJ@?9rc2?964?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ ; `string'
PUBLIC	??_C@_0CF@DDJHCDHN@?9rc2?9128?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ ; `string'
PUBLIC	??_C@_0BL@GNIGBBHO@?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ ; `string'
PUBLIC	??_C@_0DA@IEGKPLKF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ ; `string'
PUBLIC	??_C@_0CK@JDFMNIFI@?9camellia128?0?5?9camellia192?0?5?9cam@ ; `string'
PUBLIC	??_C@_0DF@GIPJKIKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ ; `string'
PUBLIC	??_C@_0EA@ILDIEJIB@?9nointern?5?5?5?5?5?5don?8t?5search?5cert@ ; `string'
PUBLIC	??_C@_0CP@OGDGBBOD@?9nosigs?5?5?5?5?5?5?5?5don?8t?5verify?5mess@ ; `string'
PUBLIC	??_C@_0DB@IKPMJHI@?9noverify?5?5?5?5?5?5don?8t?5verify?5sign@ ; `string'
PUBLIC	??_C@_0DP@JLIEKPEB@?9nocerts?5?5?5?5?5?5?5don?8t?5include?5sig@ ; `string'
PUBLIC	??_C@_0CD@CMFKNHBM@?9nodetach?5?5?5?5?5?5use?5opaque?5signin@ ; `string'
PUBLIC	??_C@_0DE@LJHNJDJA@?9noattr?5?5?5?5?5?5?5?5don?8t?5include?5any@ ; `string'
PUBLIC	??_C@_0DA@JNBHNMIH@?9binary?5?5?5?5?5?5?5?5don?8t?5translate?5m@ ; `string'
PUBLIC	??_C@_0CI@PNOBKEEO@?9certfile?5file?5other?5certificate@ ; `string'
PUBLIC	??_C@_0CI@GHNNMLJK@?9signer?5file?5?5?5signer?5certificat@ ; `string'
PUBLIC	??_C@_0DK@LNEKKJPP@?9recip?5?5file?5?5?5recipient?5certifi@ ; `string'
PUBLIC	??_C@_0BL@KOGAJAKN@?9in?5file?5?5?5?5?5?5?5input?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0DJ@NMGLJIAC@?9inform?5arg?5?5?5?5input?5format?5SMIM@ ; `string'
PUBLIC	??_C@_0DP@IGNGNBHA@?9inkey?5file?5?5?5?5input?5private?5key@ ; `string'
PUBLIC	??_C@_0DJ@ILJGCPGC@?9keyform?5arg?5?5?5input?5private?5key@ ; `string'
PUBLIC	??_C@_0BM@JJIAGAHD@?9out?5file?5?5?5?5?5?5output?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0DK@EOHMOJME@?9outform?5arg?5?5?5output?5format?5SMI@ ; `string'
PUBLIC	??_C@_0EC@NOADBLAP@?9content?5file?5?5supply?5or?5overrid@ ; `string'
PUBLIC	??_C@_0BL@DICPIKB@?9to?5addr?5?5?5?5?5?5?5to?5address?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@HNOMDABA@?9from?5ad?5?5?5?5?5?5?5from?5address?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@BOKAEOPI@?9subject?5s?5?5?5?5?5subject?6?$AA@ ; `string'
PUBLIC	??_C@_0DE@PMLHAFDG@?9text?5?5?5?5?5?5?5?5?5?5include?5or?5delete@ ; `string'
PUBLIC	??_C@_0CP@JIHEGMNP@?9CApath?5dir?5?5?5?5trusted?5certifica@ ; `string'
PUBLIC	??_C@_0CK@IHLPFGMK@?9CAfile?5file?5?5?5trusted?5certifica@ ; `string'
PUBLIC	??_C@_0EA@HHGKFHJO@?9no_alt_chains?5only?5ever?5use?5the@ ; `string'
PUBLIC	??_C@_0EL@MPJFONL@?9crl_check?5?5?5?5?5check?5revocation?5@ ; `string'
PUBLIC	??_C@_0FB@CNLELBFF@?9crl_check_all?5check?5revocation?5@ ; `string'
PUBLIC	??_C@_0DK@GCCGEDIN@?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5pos@ ; `string'
PUBLIC	??_C@_0CO@FMBLHPDC@?9passin?5arg?5?5?5?5input?5file?5pass?5p@ ; `string'
PUBLIC	??_C@_0BH@FIDOLEMP@?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0ED@JMAEPAFB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIor@ ; `string'
PUBLIC	??_C@_0CM@HMDFFJAF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number@ ; `string'
PUBLIC	??_C@_0DI@JOMJGAON@cert?4pem?5?5?5?5?5?5?5recipient?5certifi@ ; `string'
PUBLIC	??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@ ; `string'
PUBLIC	??_C@_0BB@ODBFPAJB@certificate?5file?$AA@	; `string'
PUBLIC	??_C@_0BB@DELANBNN@signing?5key?5file?$AA@	; `string'
PUBLIC	??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@HBFGMGJF@Bad?5input?5format?5for?5PKCS?$CD7?5file@ ; `string'
PUBLIC	??_C@_0BO@GBKLMPDP@Error?5reading?5S?1MIME?5message?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@FLJFKNGF@Can?8t?5read?5content?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@FNCKELBI@signer?5certificate?$AA@	; `string'
PUBLIC	??_C@_0CB@JGCGHEEA@Error?5creating?5PKCS?$CD7?5structure?6@ ; `string'
PUBLIC	??_C@_0CD@CBBKKHHG@Error?5decrypting?5PKCS?$CD7?5structur@ ; `string'
PUBLIC	??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@	; `string'
PUBLIC	??_C@_0BN@OODALNL@Error?5writing?5signers?5to?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_07GJNLILOG@To?3?5?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_09ONLKPOEP@From?3?5?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_0N@DJHMFCKN@Subject?3?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0CD@FBKFMBCI@Bad?5output?5format?5for?5PKCS?$CD7?5fil@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_EVP_des_cbc:PROC
EXTRN	_EVP_des_ede3_cbc:PROC
EXTRN	_EVP_rc2_cbc:PROC
EXTRN	_EVP_rc2_40_cbc:PROC
EXTRN	_EVP_rc2_64_cbc:PROC
EXTRN	_EVP_aes_128_cbc:PROC
EXTRN	_EVP_aes_192_cbc:PROC
EXTRN	_EVP_aes_256_cbc:PROC
EXTRN	_EVP_camellia_128_cbc:PROC
EXTRN	_EVP_camellia_192_cbc:PROC
EXTRN	_EVP_camellia_256_cbc:PROC
EXTRN	_EVP_seed_cbc:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_X509_STORE_free:PROC
EXTRN	_X509_STORE_set1_param:PROC
EXTRN	_X509_STORE_set_verify_cb:PROC
EXTRN	_X509_STORE_CTX_get_error:PROC
EXTRN	_X509_VERIFY_PARAM_free:PROC
EXTRN	_d2i_PKCS7_bio:PROC
EXTRN	_i2d_PKCS7_bio_stream:PROC
EXTRN	_PEM_write_bio_PKCS7_stream:PROC
EXTRN	_PKCS7_free:PROC
EXTRN	_PKCS7_add_certificate:PROC
EXTRN	_PKCS7_sign:PROC
EXTRN	_PKCS7_sign_add_signer:PROC
EXTRN	_PKCS7_final:PROC
EXTRN	_PKCS7_verify:PROC
EXTRN	_PKCS7_get0_signers:PROC
EXTRN	_PKCS7_encrypt:PROC
EXTRN	_PKCS7_decrypt:PROC
EXTRN	_SMIME_write_PKCS7:PROC
EXTRN	_SMIME_read_PKCS7:PROC
EXTRN	_X509_free:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_write_file:PROC
EXTRN	_app_RAND_load_files:PROC
EXTRN	_str2fmt:PROC
EXTRN	_app_passwd:PROC
EXTRN	_load_cert:PROC
EXTRN	_load_key:PROC
EXTRN	_load_certs:PROC
EXTRN	_setup_verify:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_args_verify:PROC
EXTRN	_policies_print:PROC
EXTRN	_PEM_write_bio_X509:PROC
EXTRN	_PEM_read_bio_PKCS7:PROC
EXTRN	_PEM_write_bio_PKCS7:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
;	COMDAT ??_C@_0CD@FBKFMBCI@Bad?5output?5format?5for?5PKCS?$CD7?5fil@
CONST	SEGMENT
??_C@_0CD@FBKFMBCI@Bad?5output?5format?5for?5PKCS?$CD7?5fil@ DB 'Bad outp'
	DB	'ut format for PKCS#7 file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DJHMFCKN@Subject?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0N@DJHMFCKN@Subject?3?5?$CFs?6?$AA@ DB 'Subject: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09ONLKPOEP@From?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_09ONLKPOEP@From?3?5?$CFs?6?$AA@ DB 'From: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GJNLILOG@To?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_07GJNLILOG@To?3?5?$CFs?6?$AA@ DB 'To: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OODALNL@Error?5writing?5signers?5to?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@OODALNL@Error?5writing?5signers?5to?5?$CFs?6?$AA@ DB 'Error wri'
	DB	'ting signers to %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@ DB 'Verification failure', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@
CONST	SEGMENT
??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@ DB 'Verification succe'
	DB	'ssful', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CBBKKHHG@Error?5decrypting?5PKCS?$CD7?5structur@
CONST	SEGMENT
??_C@_0CD@CBBKKHHG@Error?5decrypting?5PKCS?$CD7?5structur@ DB 'Error decr'
	DB	'ypting PKCS#7 structure', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JGCGHEEA@Error?5creating?5PKCS?$CD7?5structure?6@
CONST	SEGMENT
??_C@_0CB@JGCGHEEA@Error?5creating?5PKCS?$CD7?5structure?6@ DB 'Error cre'
	DB	'ating PKCS#7 structure', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FNCKELBI@signer?5certificate?$AA@
CONST	SEGMENT
??_C@_0BD@FNCKELBI@signer?5certificate?$AA@ DB 'signer certificate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@ DB 'Can''t op'
	DB	'en output file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FLJFKNGF@Can?8t?5read?5content?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BM@FLJFKNGF@Can?8t?5read?5content?5file?5?$CFs?6?$AA@ DB 'Can''t r'
	DB	'ead content file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GBKLMPDP@Error?5reading?5S?1MIME?5message?6?$AA@
CONST	SEGMENT
??_C@_0BO@GBKLMPDP@Error?5reading?5S?1MIME?5message?6?$AA@ DB 'Error read'
	DB	'ing S/MIME message', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HBFGMGJF@Bad?5input?5format?5for?5PKCS?$CD7?5file@
CONST	SEGMENT
??_C@_0CC@HBFGMGJF@Bad?5input?5format?5for?5PKCS?$CD7?5file@ DB 'Bad inpu'
	DB	't format for PKCS#7 file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@ DB 'Can''t ope'
	DB	'n input file %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DELANBNN@signing?5key?5file?$AA@
CONST	SEGMENT
??_C@_0BB@DELANBNN@signing?5key?5file?$AA@ DB 'signing key file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ODBFPAJB@certificate?5file?$AA@
CONST	SEGMENT
??_C@_0BB@ODBFPAJB@certificate?5file?$AA@ DB 'certificate file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@
CONST	SEGMENT
??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@ DB 'recipient certif'
	DB	'icate file', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
CONST	SEGMENT
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ DB '%ld sem'
	DB	'i-random bytes loaded', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
CONST	SEGMENT
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ DB 'Error getting pass'
	DB	'word', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@JOMJGAON@cert?4pem?5?5?5?5?5?5?5recipient?5certifi@
CONST	SEGMENT
??_C@_0DI@JOMJGAON@cert?4pem?5?5?5?5?5?5?5recipient?5certifi@ DB 'cert.pe'
	DB	'm       recipient certificate(s) for encryption', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@HMDFFJAF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number@
CONST	SEGMENT
??_C@_0CM@HMDFFJAF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number@ DB ' '
	DB	'              the random number generator', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@JMAEPAFB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIor@
CONST	SEGMENT
??_C@_0ED@JMAEPAFB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIor@ DB ' '
	DB	'              load the file (or the files in the directory) i'
	DB	'nto', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FIDOLEMP@?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BH@FIDOLEMP@?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ DB '-rand file'
	DB	'%cfile%c...', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FMBLHPDC@?9passin?5arg?5?5?5?5input?5file?5pass?5p@
CONST	SEGMENT
??_C@_0CO@FMBLHPDC@?9passin?5arg?5?5?5?5input?5file?5pass?5p@ DB '-passin'
	DB	' arg    input file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@GCCGEDIN@?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5pos@
CONST	SEGMENT
??_C@_0DK@GCCGEDIN@?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5pos@ DB '-eng'
	DB	'ine e      use engine e, possibly a hardware device.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FB@CNLELBFF@?9crl_check_all?5check?5revocation?5@
CONST	SEGMENT
??_C@_0FB@CNLELBFF@?9crl_check_all?5check?5revocation?5@ DB '-crl_check_a'
	DB	'll check revocation status of signer''s certificate chain usi'
	DB	'ng CRLs', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@MPJFONL@?9crl_check?5?5?5?5?5check?5revocation?5@
CONST	SEGMENT
??_C@_0EL@MPJFONL@?9crl_check?5?5?5?5?5check?5revocation?5@ DB '-crl_chec'
	DB	'k     check revocation status of signer''s certificate using '
	DB	'CRLs', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@HHGKFHJO@?9no_alt_chains?5only?5ever?5use?5the@
CONST	SEGMENT
??_C@_0EA@HHGKFHJO@?9no_alt_chains?5only?5ever?5use?5the@ DB '-no_alt_cha'
	DB	'ins only ever use the first certificate chain found', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IHLPFGMK@?9CAfile?5file?5?5?5trusted?5certifica@
CONST	SEGMENT
??_C@_0CK@IHLPFGMK@?9CAfile?5file?5?5?5trusted?5certifica@ DB '-CAfile fi'
	DB	'le   trusted certificates file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JIHEGMNP@?9CApath?5dir?5?5?5?5trusted?5certifica@
CONST	SEGMENT
??_C@_0CP@JIHEGMNP@?9CApath?5dir?5?5?5?5trusted?5certifica@ DB '-CApath d'
	DB	'ir    trusted certificates directory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@PMLHAFDG@?9text?5?5?5?5?5?5?5?5?5?5include?5or?5delete@
CONST	SEGMENT
??_C@_0DE@PMLHAFDG@?9text?5?5?5?5?5?5?5?5?5?5include?5or?5delete@ DB '-te'
	DB	'xt          include or delete text MIME headers', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BOKAEOPI@?9subject?5s?5?5?5?5?5subject?6?$AA@
CONST	SEGMENT
??_C@_0BI@BOKAEOPI@?9subject?5s?5?5?5?5?5subject?6?$AA@ DB '-subject s   '
	DB	'  subject', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HNOMDABA@?9from?5ad?5?5?5?5?5?5?5from?5address?6?$AA@
CONST	SEGMENT
??_C@_0BN@HNOMDABA@?9from?5ad?5?5?5?5?5?5?5from?5address?6?$AA@ DB '-from'
	DB	' ad       from address', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DICPIKB@?9to?5addr?5?5?5?5?5?5?5to?5address?6?$AA@
CONST	SEGMENT
??_C@_0BL@DICPIKB@?9to?5addr?5?5?5?5?5?5?5to?5address?6?$AA@ DB '-to addr'
	DB	'       to address', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@NOADBLAP@?9content?5file?5?5supply?5or?5overrid@
CONST	SEGMENT
??_C@_0EC@NOADBLAP@?9content?5file?5?5supply?5or?5overrid@ DB '-content f'
	DB	'ile  supply or override content for detached signature', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@EOHMOJME@?9outform?5arg?5?5?5output?5format?5SMI@
CONST	SEGMENT
??_C@_0DK@EOHMOJME@?9outform?5arg?5?5?5output?5format?5SMI@ DB '-outform '
	DB	'arg   output format SMIME (default), PEM or DER', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JJIAGAHD@?9out?5file?5?5?5?5?5?5output?5file?6?$AA@
CONST	SEGMENT
??_C@_0BM@JJIAGAHD@?9out?5file?5?5?5?5?5?5output?5file?6?$AA@ DB '-out fi'
	DB	'le      output file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@ILJGCPGC@?9keyform?5arg?5?5?5input?5private?5key@
CONST	SEGMENT
??_C@_0DJ@ILJGCPGC@?9keyform?5arg?5?5?5input?5private?5key@ DB '-keyform '
	DB	'arg   input private key format (PEM or ENGINE)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@IGNGNBHA@?9inkey?5file?5?5?5?5input?5private?5key@
CONST	SEGMENT
??_C@_0DP@IGNGNBHA@?9inkey?5file?5?5?5?5input?5private?5key@ DB '-inkey f'
	DB	'ile    input private key (if not signer or recipient)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@NMGLJIAC@?9inform?5arg?5?5?5?5input?5format?5SMIM@
CONST	SEGMENT
??_C@_0DJ@NMGLJIAC@?9inform?5arg?5?5?5?5input?5format?5SMIM@ DB '-inform '
	DB	'arg    input format SMIME (default), PEM or DER', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KOGAJAKN@?9in?5file?5?5?5?5?5?5?5input?5file?6?$AA@
CONST	SEGMENT
??_C@_0BL@KOGAJAKN@?9in?5file?5?5?5?5?5?5?5input?5file?6?$AA@ DB '-in fil'
	DB	'e       input file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@LNEKKJPP@?9recip?5?5file?5?5?5recipient?5certifi@
CONST	SEGMENT
??_C@_0DK@LNEKKJPP@?9recip?5?5file?5?5?5recipient?5certifi@ DB '-recip  f'
	DB	'ile   recipient certificate file for decryption', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GHNNMLJK@?9signer?5file?5?5?5signer?5certificat@
CONST	SEGMENT
??_C@_0CI@GHNNMLJK@?9signer?5file?5?5?5signer?5certificat@ DB '-signer fi'
	DB	'le   signer certificate file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PNOBKEEO@?9certfile?5file?5other?5certificate@
CONST	SEGMENT
??_C@_0CI@PNOBKEEO@?9certfile?5file?5other?5certificate@ DB '-certfile fi'
	DB	'le other certificates file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@JNBHNMIH@?9binary?5?5?5?5?5?5?5?5don?8t?5translate?5m@
CONST	SEGMENT
??_C@_0DA@JNBHNMIH@?9binary?5?5?5?5?5?5?5?5don?8t?5translate?5m@ DB '-bin'
	DB	'ary        don''t translate message to text', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@LJHNJDJA@?9noattr?5?5?5?5?5?5?5?5don?8t?5include?5any@
CONST	SEGMENT
??_C@_0DE@LJHNJDJA@?9noattr?5?5?5?5?5?5?5?5don?8t?5include?5any@ DB '-noa'
	DB	'ttr        don''t include any signed attributes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CMFKNHBM@?9nodetach?5?5?5?5?5?5use?5opaque?5signin@
CONST	SEGMENT
??_C@_0CD@CMFKNHBM@?9nodetach?5?5?5?5?5?5use?5opaque?5signin@ DB '-nodeta'
	DB	'ch      use opaque signing', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@JLIEKPEB@?9nocerts?5?5?5?5?5?5?5don?8t?5include?5sig@
CONST	SEGMENT
??_C@_0DP@JLIEKPEB@?9nocerts?5?5?5?5?5?5?5don?8t?5include?5sig@ DB '-noce'
	DB	'rts       don''t include signers certificate when signing', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@IKPMJHI@?9noverify?5?5?5?5?5?5don?8t?5verify?5sign@
CONST	SEGMENT
??_C@_0DB@IKPMJHI@?9noverify?5?5?5?5?5?5don?8t?5verify?5sign@ DB '-noveri'
	DB	'fy      don''t verify signers certificate', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OGDGBBOD@?9nosigs?5?5?5?5?5?5?5?5don?8t?5verify?5mess@
CONST	SEGMENT
??_C@_0CP@OGDGBBOD@?9nosigs?5?5?5?5?5?5?5?5don?8t?5verify?5mess@ DB '-nos'
	DB	'igs        don''t verify message signature', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@ILDIEJIB@?9nointern?5?5?5?5?5?5don?8t?5search?5cert@
CONST	SEGMENT
??_C@_0EA@ILDIEJIB@?9nointern?5?5?5?5?5?5don?8t?5search?5cert@ DB '-noint'
	DB	'ern      don''t search certificates in message for signer', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GIPJKIKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@
CONST	SEGMENT
??_C@_0DF@GIPJKIKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ DB ' '
	DB	'              encrypt PEM output with cbc camellia', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@JDFMNIFI@?9camellia128?0?5?9camellia192?0?5?9cam@
CONST	SEGMENT
??_C@_0CK@JDFMNIFI@?9camellia128?0?5?9camellia192?0?5?9cam@ DB '-camellia'
	DB	'128, -camellia192, -camellia256', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@IEGKPLKF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@
CONST	SEGMENT
??_C@_0DA@IEGKPLKF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@ DB ' '
	DB	'              encrypt PEM output with cbc aes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GNIGBBHO@?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
CONST	SEGMENT
??_C@_0BL@GNIGBBHO@?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ DB '-aes128, -'
	DB	'aes192, -aes256', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DDJHCDHN@?9rc2?9128?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
CONST	SEGMENT
??_C@_0CF@DDJHCDHN@?9rc2?9128?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ DB '-rc2'
	DB	'-128       encrypt with RC2-128', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IJCAPJKJ@?9rc2?964?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
CONST	SEGMENT
??_C@_0CE@IJCAPJKJ@?9rc2?964?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ DB '-rc'
	DB	'2-64        encrypt with RC2-64', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GEAPCENN@?9rc2?940?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
CONST	SEGMENT
??_C@_0CO@GEAPCENN@?9rc2?940?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@ DB '-rc'
	DB	'2-40        encrypt with RC2-40 (default)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GMBHMJIM@?9seed?5?5?5?5?5?5?5?5?5?5encrypt?5with?5SEED@
CONST	SEGMENT
??_C@_0CC@GMBHMJIM@?9seed?5?5?5?5?5?5?5?5?5?5encrypt?5with?5SEED@ DB '-se'
	DB	'ed          encrypt with SEED', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CIKFCINJ@?9des?5?5?5?5?5?5?5?5?5?5?5encrypt?5with?5DES?6@
CONST	SEGMENT
??_C@_0CB@CIKFCINJ@?9des?5?5?5?5?5?5?5?5?5?5?5encrypt?5with?5DES?6@ DB '-'
	DB	'des           encrypt with DES', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@EOKKIBBM@?9des3?5?5?5?5?5?5?5?5?5?5encrypt?5with?5trip@
CONST	SEGMENT
??_C@_0CI@EOKKIBBM@?9des3?5?5?5?5?5?5?5?5?5?5encrypt?5with?5trip@ DB '-de'
	DB	's3          encrypt with triple DES', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@BCDMICAJ@?9pk7out?5?5?5?5?5?5?5?5output?5PKCS?$CD7?5str@
CONST	SEGMENT
??_C@_0CI@BCDMICAJ@?9pk7out?5?5?5?5?5?5?5?5output?5PKCS?$CD7?5str@ DB '-p'
	DB	'k7out        output PKCS#7 structure', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DBJPEOLC@?9verify?5?5?5?5?5?5?5?5verify?5signed?5mes@
CONST	SEGMENT
??_C@_0CG@DBJPEOLC@?9verify?5?5?5?5?5?5?5?5verify?5signed?5mes@ DB '-veri'
	DB	'fy        verify signed message', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HJPLAAFL@?9sign?5?5?5?5?5?5?5?5?5?5sign?5message?6?$AA@
CONST	SEGMENT
??_C@_0BN@HJPLAAFL@?9sign?5?5?5?5?5?5?5?5?5?5sign?5message?6?$AA@ DB '-si'
	DB	'gn          sign message', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@JCHKEHGG@?9decrypt?5?5?5?5?5?5?5decrypt?5encrypted@
CONST	SEGMENT
??_C@_0CK@JCHKEHGG@?9decrypt?5?5?5?5?5?5?5decrypt?5encrypted@ DB '-decryp'
	DB	't       decrypt encrypted message', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KGPHFLFP@?9encrypt?5?5?5?5?5?5?5encrypt?5message?6?$AA@
CONST	SEGMENT
??_C@_0CA@KGPHFLFP@?9encrypt?5?5?5?5?5?5?5encrypt?5message?6?$AA@ DB '-en'
	DB	'crypt       encrypt message', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
CONST	SEGMENT
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ DB 'where options are', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FDJDGLAJ@Usage?5smime?5?$FLoptions?$FN?5cert?4pem?5?4@
CONST	SEGMENT
??_C@_0CE@FDJDGLAJ@Usage?5smime?5?$FLoptions?$FN?5cert?4pem?5?4@ DB 'Usag'
	DB	'e smime [options] cert.pem ...', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PMIMDKMB@No?5recipient?$CIs?$CJ?5certificate?$CIs?$CJ?5s@
CONST	SEGMENT
??_C@_0CK@PMIMDKMB@No?5recipient?$CIs?$CJ?5certificate?$CIs?$CJ?5s@ DB 'N'
	DB	'o recipient(s) certificate(s) specified', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@LLEPGLLL@No?5recipient?5certificate?5or?5key?5@
CONST	SEGMENT
??_C@_0CL@LLEPGLLL@No?5recipient?5certificate?5or?5key?5@ DB 'No recipien'
	DB	't certificate or key specified', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OFHFPLIP@No?5signer?5certificate?5specified?6@
CONST	SEGMENT
??_C@_0CB@OFHFPLIP@No?5signer?5certificate?5specified?6@ DB 'No signer ce'
	DB	'rtificate specified', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JIDLJHJP@Multiple?5signers?5or?5keys?5not?5all@
CONST	SEGMENT
??_C@_0CG@JIDLJHJP@Multiple?5signers?5or?5keys?5not?5all@ DB 'Multiple si'
	DB	'gners or keys not allowed', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HCJMGADN@?9content?$AA@
CONST	SEGMENT
??_C@_08HCJMGADN@?9content?$AA@ DB '-content', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LPHBEAIF@?9outform?$AA@
CONST	SEGMENT
??_C@_08LPHBEAIF@?9outform?$AA@ DB '-outform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGGPPMGB@?9inform?$AA@
CONST	SEGMENT
??_C@_07CGGPPMGB@?9inform?$AA@ DB '-inform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNNNLALG@?9CApath?$AA@
CONST	SEGMENT
??_C@_07MNNNLALG@?9CApath?$AA@ DB '-CApath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EAFCHGPO@?9CAfile?$AA@
CONST	SEGMENT
??_C@_07EAFCHGPO@?9CAfile?$AA@ DB '-CAfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LJGMBFEA@?9certfile?$AA@
CONST	SEGMENT
??_C@_09LJGMBFEA@?9certfile?$AA@ DB '-certfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAHLMBGP@?9keyform?$AA@
CONST	SEGMENT
??_C@_08OAHLMBGP@?9keyform?$AA@ DB '-keyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DHJCDGB@Illegal?5?9inkey?5without?5?9signer?6?$AA@
CONST	SEGMENT
??_C@_0CA@DHJCDGB@Illegal?5?9inkey?5without?5?9signer?6?$AA@ DB 'Illegal '
	DB	'-inkey without -signer', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JJMGFEBF@?9inkey?$AA@
CONST	SEGMENT
??_C@_06JJMGFEBF@?9inkey?$AA@ DB '-inkey', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MLPNFPFM@Unknown?5digest?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@MLPNFPFM@Unknown?5digest?5?$CFs?6?$AA@ DB 'Unknown digest %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_03MNHNKBNA@?9md?$AA@
CONST	SEGMENT
??_C@_03MNHNKBNA@?9md?$AA@ DB '-md', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JKGLPNJO@?9recip?$AA@
CONST	SEGMENT
??_C@_06JKGLPNJO@?9recip?$AA@ DB '-recip', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KJCLPKOH@?9signer?$AA@
CONST	SEGMENT
??_C@_07KJCLPKOH@?9signer?$AA@ DB '-signer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GNEDOIFN@?9subject?$AA@
CONST	SEGMENT
??_C@_08GNEDOIFN@?9subject?$AA@ DB '-subject', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LBJDDLLJ@?9from?$AA@
CONST	SEGMENT
??_C@_05LBJDDLLJ@?9from?$AA@ DB '-from', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DNHOOAOE@?9to?$AA@
CONST	SEGMENT
??_C@_03DNHOOAOE@?9to?$AA@ DB '-to', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGFPCDPE@?9rand?$AA@
CONST	SEGMENT
??_C@_05LGFPCDPE@?9rand?$AA@ DB '-rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KAKEAKLE@?9crlfeol?$AA@
CONST	SEGMENT
??_C@_08KAKEAKLE@?9crlfeol?$AA@ DB '-crlfeol', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DMDFODFL@?9nooldmime?$AA@
CONST	SEGMENT
??_C@_0L@DMDFODFL@?9nooldmime?$AA@ DB '-nooldmime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BCNBDCCA@?9noindef?$AA@
CONST	SEGMENT
??_C@_08BCNBDCCA@?9noindef?$AA@ DB '-noindef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MPPEKNN@?9indef?$AA@
CONST	SEGMENT
??_C@_06MPPEKNN@?9indef?$AA@ DB '-indef', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KDDBNCBD@?9stream?$AA@
CONST	SEGMENT
??_C@_07KDDBNCBD@?9stream?$AA@ DB '-stream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GLFDAICA@?9nosigs?$AA@
CONST	SEGMENT
??_C@_07GLFDAICA@?9nosigs?$AA@ DB '-nosigs', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MHGMHDIE@?9binary?$AA@
CONST	SEGMENT
??_C@_07MHGMHDIE@?9binary?$AA@ DB '-binary', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BGBFCGLM@?9nosmimecap?$AA@
CONST	SEGMENT
??_C@_0M@BGBFCGLM@?9nosmimecap?$AA@ DB '-nosmimecap', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HEABEDGI@?9nodetach?$AA@
CONST	SEGMENT
??_C@_09HEABEDGI@?9nodetach?$AA@ DB '-nodetach', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NEHLGPOI@?9noattr?$AA@
CONST	SEGMENT
??_C@_07NEHLGPOI@?9noattr?$AA@ DB '-noattr', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JLLJAHEH@?9nocerts?$AA@
CONST	SEGMENT
??_C@_08JLLJAHEH@?9nocerts?$AA@ DB '-nocerts', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MKBHGHLI@?9nochain?$AA@
CONST	SEGMENT
??_C@_08MKBHGHLI@?9nochain?$AA@ DB '-nochain', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JLKGPCDL@?9noverify?$AA@
CONST	SEGMENT
??_C@_09JLKGPCDL@?9noverify?$AA@ DB '-noverify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LLMNCLPN@?9nointern?$AA@
CONST	SEGMENT
??_C@_09LLMNCLPN@?9nointern?$AA@ DB '-nointern', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEBEIMJA@?9text?$AA@
CONST	SEGMENT
??_C@_05OEBEIMJA@?9text?$AA@ DB '-text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EJMHDLPD@?9camellia256?$AA@
CONST	SEGMENT
??_C@_0N@EJMHDLPD@?9camellia256?$AA@ DB '-camellia256', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DGAEKIHN@?9camellia192?$AA@
CONST	SEGMENT
??_C@_0N@DGAEKIHN@?9camellia192?$AA@ DB '-camellia192', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MALOKPBG@?9camellia128?$AA@
CONST	SEGMENT
??_C@_0N@MALOKPBG@?9camellia128?$AA@ DB '-camellia128', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MCLKJCJC@?9aes256?$AA@
CONST	SEGMENT
??_C@_07MCLKJCJC@?9aes256?$AA@ DB '-aes256', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LNHJABBM@?9aes192?$AA@
CONST	SEGMENT
??_C@_07LNHJABBM@?9aes192?$AA@ DB '-aes192', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07ELMDAGHH@?9aes128?$AA@
CONST	SEGMENT
??_C@_07ELMDAGHH@?9aes128?$AA@ DB '-aes128', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BPEMBNDH@?9rc2?964?$AA@
CONST	SEGMENT
??_C@_07BPEMBNDH@?9rc2?964?$AA@ DB '-rc2-64', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08DGGHBBOC@?9rc2?9128?$AA@
CONST	SEGMENT
??_C@_08DGGHBBOC@?9rc2?9128?$AA@ DB '-rc2-128', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIKEAMFN@?9rc2?940?$AA@
CONST	SEGMENT
??_C@_07HIKEAMFN@?9rc2?940?$AA@ DB '-rc2-40', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IAIHCPC@?9seed?$AA@
CONST	SEGMENT
??_C@_05IAIHCPC@?9seed?$AA@ DB '-seed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04POMGKAPN@?9des?$AA@
CONST	SEGMENT
??_C@_04POMGKAPN@?9des?$AA@ DB '-des', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DHJJCNDB@?9des3?$AA@
CONST	SEGMENT
??_C@_05DHJJCNDB@?9des3?$AA@ DB '-des3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BPNIONCJ@?9pk7out?$AA@
CONST	SEGMENT
??_C@_07BPNIONCJ@?9pk7out?$AA@ DB '-pk7out', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FILEFCOC@?9verify?$AA@
CONST	SEGMENT
??_C@_07FILEFCOC@?9verify?$AA@ DB '-verify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JFNKLBOA@?9resign?$AA@
CONST	SEGMENT
??_C@_07JFNKLBOA@?9resign?$AA@ DB '-resign', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LLLFPBKO@?9sign?$AA@
CONST	SEGMENT
??_C@_05LLLFPBKO@?9sign?$AA@ DB '-sign', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08ODIALGEJ@?9decrypt?$AA@
CONST	SEGMENT
??_C@_08ODIALGEJ@?9decrypt?$AA@ DB '-decrypt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CNCNOCCN@?9encrypt?$AA@
CONST	SEGMENT
??_C@_08CNCNOCCN@?9encrypt?$AA@ DB '-encrypt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _smime_main
_TEXT	SEGMENT
_args$ = -160						; size = 4
_out$1$ = -156						; size = 4
_keyfile$2$ = -156					; size = 4
_flags$1$ = -152					; size = 4
_key$1$ = -148						; size = 4
_engine$1$ = -144					; size = 4
_ret$1$ = -144						; size = 4
_operation$1$ = -140					; size = 4
_p7$1$ = -136						; size = 4
_sksigners$1$ = -132					; size = 4
_badarg$ = -128						; size = 4
_signerfile$1$ = -124					; size = 4
_skkeys$1$ = -120					; size = 4
_in$1$ = -116						; size = 4
_need_rand$1$ = -112					; size = 4
_indata$ = -108						; size = 4
_indef$1$ = -104					; size = 4
_signer$1$ = -100					; size = 4
_recipfile$1$ = -96					; size = 4
_outformat$1$ = -92					; size = 4
_encerts$1$ = -88					; size = 4
_other$1$ = -84						; size = 4
_passin$ = -80						; size = 4
_inmode$1$ = -76					; size = 4
_infile$1$ = -72					; size = 4
_informat$1$ = -68					; size = 4
_outmode$1$ = -64					; size = 4
_keyform$1$ = -60					; size = 4
_vpm$ = -56						; size = 4
_store$1$ = -52						; size = 4
_recip$1$ = -48						; size = 4
_passargin$1$ = -44					; size = 4
_inrand$1$ = -40					; size = 4
_certfile$1$ = -36					; size = 4
_contfile$1$ = -32					; size = 4
_outfile$1$ = -28					; size = 4
_CApath$1$ = -24					; size = 4
_CAfile$1$ = -20					; size = 4
_sign_md$1$ = -16					; size = 4
_to$1$ = -12						; size = 4
_from$1$ = -8						; size = 4
_subject$1$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_smime_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\smime.c
; Line 89
	mov	eax, 160				; 000000a0H
	call	__chkstk
; Line 123
	push	ebx
	push	ebp
	push	edi
; Line 91
	xor	eax, eax
; Line 94
	mov	DWORD PTR _inmode$1$[esp+172], OFFSET ??_C@_01KDCPPGHE@r?$AA@
	mov	DWORD PTR _operation$1$[esp+172], eax
; Line 95
	mov	DWORD PTR _infile$1$[esp+172], eax
	mov	DWORD PTR _outfile$1$[esp+172], eax
; Line 96
	mov	DWORD PTR _signerfile$1$[esp+172], eax
	mov	DWORD PTR _recipfile$1$[esp+172], eax
; Line 97
	mov	DWORD PTR _sksigners$1$[esp+172], eax
	mov	DWORD PTR _skkeys$1$[esp+172], eax
; Line 98
	mov	DWORD PTR _certfile$1$[esp+172], eax
	mov	DWORD PTR _keyfile$2$[esp+172], eax
	mov	DWORD PTR _contfile$1$[esp+172], eax
; Line 101
	mov	DWORD PTR _store$1$[esp+172], eax
; Line 102
	mov	DWORD PTR _recip$1$[esp+172], eax
	mov	DWORD PTR _signer$1$[esp+172], eax
; Line 103
	mov	DWORD PTR _key$1$[esp+172], eax
; Line 104
	mov	DWORD PTR _encerts$1$[esp+172], eax
	mov	DWORD PTR _other$1$[esp+172], eax
; Line 105
	mov	DWORD PTR _in$1$[esp+172], eax
	mov	DWORD PTR _indata$[esp+172], eax
; Line 106
	mov	DWORD PTR _badarg$[esp+172], eax
; Line 108
	mov	DWORD PTR _to$1$[esp+172], eax
	mov	DWORD PTR _from$1$[esp+172], eax
	mov	DWORD PTR _subject$1$[esp+172], eax
; Line 109
	mov	DWORD PTR _CAfile$1$[esp+172], eax
	mov	DWORD PTR _CApath$1$[esp+172], eax
; Line 110
	mov	DWORD PTR _passargin$1$[esp+172], eax
	mov	DWORD PTR _passin$[esp+172], eax
; Line 111
	mov	DWORD PTR _inrand$1$[esp+172], eax
; Line 112
	mov	DWORD PTR _need_rand$1$[esp+172], eax
; Line 113
	mov	DWORD PTR _indef$1$[esp+172], eax
; Line 114
	mov	DWORD PTR _sign_md$1$[esp+172], eax
; Line 118
	mov	DWORD PTR _engine$1$[esp+172], eax
; Line 121
	mov	DWORD PTR _vpm$[esp+172], eax
; Line 123
	mov	eax, DWORD PTR _argv$[esp+168]
	add	eax, 4
	mov	DWORD PTR _outmode$1$[esp+172], OFFSET ??_C@_01NOFIACDB@w?$AA@
	xor	edi, edi
	mov	DWORD PTR _args$[esp+172], eax
; Line 128
	mov	eax, DWORD PTR _bio_err
	xor	ebp, ebp
	mov	DWORD PTR _p7$1$[esp+172], edi
	mov	ebx, 64					; 00000040H
	mov	DWORD PTR _flags$1$[esp+172], ebx
	mov	DWORD PTR _informat$1$[esp+172], 6
	mov	DWORD PTR _outformat$1$[esp+172], 6
	mov	DWORD PTR _keyform$1$[esp+172], 3
	test	eax, eax
	jne	SHORT $LN13@smime_main
; Line 129
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN13@smime_main
; Line 130
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN13@smime_main:
; Line 133
	push	esi
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN530@smime_main
; Line 136
	mov	esi, DWORD PTR _args$[esp+176]
	cmp	DWORD PTR _badarg$[esp+176], edi
	jne	$LN306@smime_main
	npad	7
$LL2@smime_main:
	mov	edi, DWORD PTR [esi]
	test	edi, edi
	je	$LN306@smime_main
	cmp	BYTE PTR [edi], 45			; 0000002dH
	jne	$LN306@smime_main
; Line 137
	mov	ecx, OFFSET ??_C@_08CNCNOCCN@?9encrypt?$AA@
	mov	eax, edi
	npad	6
$LL307@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN308@smime_main
	test	dl, dl
	je	SHORT $LN309@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN308@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL307@smime_main
$LN309@smime_main:
	xor	eax, eax
	jmp	SHORT $LN310@smime_main
$LN308@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN310@smime_main:
	test	eax, eax
	jne	SHORT $LN15@smime_main
; Line 330
	add	esi, 4
	mov	DWORD PTR _operation$1$[esp+176], 17	; 00000011H
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN15@smime_main:
; Line 139
	mov	ecx, OFFSET ??_C@_08ODIALGEJ@?9decrypt?$AA@
	mov	eax, edi
$LL311@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN312@smime_main
	test	dl, dl
	je	SHORT $LN313@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN312@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL311@smime_main
$LN313@smime_main:
	xor	eax, eax
	jmp	SHORT $LN314@smime_main
$LN312@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN314@smime_main:
	test	eax, eax
	jne	SHORT $LN17@smime_main
; Line 330
	add	esi, 4
	mov	DWORD PTR _operation$1$[esp+176], 34	; 00000022H
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN17@smime_main:
; Line 141
	mov	ecx, OFFSET ??_C@_05LLLFPBKO@?9sign?$AA@
	mov	eax, edi
$LL315@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN316@smime_main
	test	dl, dl
	je	SHORT $LN317@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN316@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL315@smime_main
$LN317@smime_main:
	xor	eax, eax
	jmp	SHORT $LN318@smime_main
$LN316@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN318@smime_main:
	test	eax, eax
	jne	SHORT $LN19@smime_main
; Line 330
	add	esi, 4
	mov	DWORD PTR _operation$1$[esp+176], 83	; 00000053H
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN19@smime_main:
; Line 143
	mov	ecx, OFFSET ??_C@_07JFNKLBOA@?9resign?$AA@
	mov	eax, edi
	npad	4
$LL319@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN320@smime_main
	test	dl, dl
	je	SHORT $LN321@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN320@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL319@smime_main
$LN321@smime_main:
	xor	eax, eax
	jmp	SHORT $LN322@smime_main
$LN320@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN322@smime_main:
	test	eax, eax
	jne	SHORT $LN21@smime_main
; Line 330
	add	esi, 4
	mov	DWORD PTR _operation$1$[esp+176], 118	; 00000076H
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN21@smime_main:
; Line 145
	mov	ecx, OFFSET ??_C@_07FILEFCOC@?9verify?$AA@
	mov	eax, edi
$LL323@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN324@smime_main
	test	dl, dl
	je	SHORT $LN325@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN324@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL323@smime_main
$LN325@smime_main:
	xor	eax, eax
	jmp	SHORT $LN326@smime_main
$LN324@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN326@smime_main:
	test	eax, eax
	jne	SHORT $LN23@smime_main
; Line 330
	add	esi, 4
	mov	DWORD PTR _operation$1$[esp+176], 36	; 00000024H
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN23@smime_main:
; Line 147
	mov	ecx, OFFSET ??_C@_07BPNIONCJ@?9pk7out?$AA@
	mov	eax, edi
$LL327@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN328@smime_main
	test	dl, dl
	je	SHORT $LN329@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN328@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL327@smime_main
$LN329@smime_main:
	xor	eax, eax
	jmp	SHORT $LN330@smime_main
$LN328@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN330@smime_main:
	test	eax, eax
	jne	SHORT $LN25@smime_main
; Line 330
	add	esi, 4
	mov	DWORD PTR _operation$1$[esp+176], 53	; 00000035H
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN25@smime_main:
; Line 150
	mov	ecx, OFFSET ??_C@_05DHJJCNDB@?9des3?$AA@
	mov	eax, edi
	npad	4
$LL331@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN332@smime_main
	test	dl, dl
	je	SHORT $LN333@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN332@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL331@smime_main
$LN333@smime_main:
	xor	eax, eax
	jmp	SHORT $LN334@smime_main
$LN332@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN334@smime_main:
	test	eax, eax
	jne	SHORT $LN27@smime_main
; Line 151
	call	_EVP_des_ede3_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN27@smime_main:
; Line 152
	mov	ecx, OFFSET ??_C@_04POMGKAPN@?9des?$AA@
	mov	eax, edi
$LL335@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN336@smime_main
	test	dl, dl
	je	SHORT $LN337@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN336@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL335@smime_main
$LN337@smime_main:
	xor	eax, eax
	jmp	SHORT $LN338@smime_main
$LN336@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN338@smime_main:
	test	eax, eax
	jne	SHORT $LN29@smime_main
; Line 153
	call	_EVP_des_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN29@smime_main:
; Line 156
	mov	ecx, OFFSET ??_C@_05IAIHCPC@?9seed?$AA@
	mov	eax, edi
	npad	2
$LL339@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN340@smime_main
	test	dl, dl
	je	SHORT $LN341@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN340@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL339@smime_main
$LN341@smime_main:
	xor	eax, eax
	jmp	SHORT $LN342@smime_main
$LN340@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN342@smime_main:
	test	eax, eax
	jne	SHORT $LN31@smime_main
; Line 157
	call	_EVP_seed_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN31@smime_main:
; Line 160
	mov	ecx, OFFSET ??_C@_07HIKEAMFN@?9rc2?940?$AA@
	mov	eax, edi
$LL343@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN344@smime_main
	test	dl, dl
	je	SHORT $LN345@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN344@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL343@smime_main
$LN345@smime_main:
	xor	eax, eax
	jmp	SHORT $LN346@smime_main
$LN344@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN346@smime_main:
	test	eax, eax
	jne	SHORT $LN33@smime_main
; Line 161
	call	_EVP_rc2_40_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN33@smime_main:
; Line 162
	mov	ecx, OFFSET ??_C@_08DGGHBBOC@?9rc2?9128?$AA@
	mov	eax, edi
	npad	2
$LL347@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN348@smime_main
	test	dl, dl
	je	SHORT $LN349@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN348@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL347@smime_main
$LN349@smime_main:
	xor	eax, eax
	jmp	SHORT $LN350@smime_main
$LN348@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN350@smime_main:
	test	eax, eax
	jne	SHORT $LN35@smime_main
; Line 163
	call	_EVP_rc2_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN35@smime_main:
; Line 164
	mov	ecx, OFFSET ??_C@_07BPEMBNDH@?9rc2?964?$AA@
	mov	eax, edi
$LL351@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN352@smime_main
	test	dl, dl
	je	SHORT $LN353@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN352@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL351@smime_main
$LN353@smime_main:
	xor	eax, eax
	jmp	SHORT $LN354@smime_main
$LN352@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN354@smime_main:
	test	eax, eax
	jne	SHORT $LN37@smime_main
; Line 165
	call	_EVP_rc2_64_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN37@smime_main:
; Line 168
	mov	ecx, OFFSET ??_C@_07ELMDAGHH@?9aes128?$AA@
	mov	eax, edi
	npad	2
$LL355@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN356@smime_main
	test	dl, dl
	je	SHORT $LN357@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN356@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL355@smime_main
$LN357@smime_main:
	xor	eax, eax
	jmp	SHORT $LN358@smime_main
$LN356@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN358@smime_main:
	test	eax, eax
	jne	SHORT $LN39@smime_main
; Line 169
	call	_EVP_aes_128_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN39@smime_main:
; Line 170
	mov	ecx, OFFSET ??_C@_07LNHJABBM@?9aes192?$AA@
	mov	eax, edi
$LL359@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN360@smime_main
	test	dl, dl
	je	SHORT $LN361@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN360@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL359@smime_main
$LN361@smime_main:
	xor	eax, eax
	jmp	SHORT $LN362@smime_main
$LN360@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN362@smime_main:
	test	eax, eax
	jne	SHORT $LN41@smime_main
; Line 171
	call	_EVP_aes_192_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN41@smime_main:
; Line 172
	mov	ecx, OFFSET ??_C@_07MCLKJCJC@?9aes256?$AA@
	mov	eax, edi
	npad	2
$LL363@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN364@smime_main
	test	dl, dl
	je	SHORT $LN365@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN364@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL363@smime_main
$LN365@smime_main:
	xor	eax, eax
	jmp	SHORT $LN366@smime_main
$LN364@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN366@smime_main:
	test	eax, eax
	jne	SHORT $LN43@smime_main
; Line 173
	call	_EVP_aes_256_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN43@smime_main:
; Line 176
	mov	ecx, OFFSET ??_C@_0N@MALOKPBG@?9camellia128?$AA@
	mov	eax, edi
$LL367@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN368@smime_main
	test	dl, dl
	je	SHORT $LN369@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN368@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL367@smime_main
$LN369@smime_main:
	xor	eax, eax
	jmp	SHORT $LN370@smime_main
$LN368@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN370@smime_main:
	test	eax, eax
	jne	SHORT $LN45@smime_main
; Line 177
	call	_EVP_camellia_128_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN45@smime_main:
; Line 178
	mov	ecx, OFFSET ??_C@_0N@DGAEKIHN@?9camellia192?$AA@
	mov	eax, edi
	npad	2
$LL371@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN372@smime_main
	test	dl, dl
	je	SHORT $LN373@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN372@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL371@smime_main
$LN373@smime_main:
	xor	eax, eax
	jmp	SHORT $LN374@smime_main
$LN372@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN374@smime_main:
	test	eax, eax
	jne	SHORT $LN47@smime_main
; Line 179
	call	_EVP_camellia_192_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN47@smime_main:
; Line 180
	mov	ecx, OFFSET ??_C@_0N@EJMHDLPD@?9camellia256?$AA@
	mov	eax, edi
$LL375@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN376@smime_main
	test	dl, dl
	je	SHORT $LN377@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN376@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL375@smime_main
$LN377@smime_main:
	xor	eax, eax
	jmp	SHORT $LN378@smime_main
$LN376@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN378@smime_main:
	test	eax, eax
	jne	SHORT $LN49@smime_main
; Line 181
	call	_EVP_camellia_256_cbc
; Line 328
	mov	esi, DWORD PTR _args$[esp+176]
	mov	ebp, eax
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN49@smime_main:
; Line 183
	mov	ecx, OFFSET ??_C@_05OEBEIMJA@?9text?$AA@
	mov	eax, edi
	npad	2
$LL379@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN380@smime_main
	test	dl, dl
	je	SHORT $LN381@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN380@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL379@smime_main
$LN381@smime_main:
	xor	eax, eax
	jmp	SHORT $LN382@smime_main
$LN380@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN382@smime_main:
	test	eax, eax
	jne	SHORT $LN51@smime_main
; Line 184
	or	ebx, 1
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN51@smime_main:
; Line 185
	mov	ecx, OFFSET ??_C@_09LLMNCLPN@?9nointern?$AA@
	mov	eax, edi
$LL383@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN384@smime_main
	test	dl, dl
	je	SHORT $LN385@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN384@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL383@smime_main
$LN385@smime_main:
	xor	eax, eax
	jmp	SHORT $LN386@smime_main
$LN384@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN386@smime_main:
	test	eax, eax
	jne	SHORT $LN53@smime_main
; Line 186
	or	ebx, 16					; 00000010H
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN53@smime_main:
; Line 187
	mov	ecx, OFFSET ??_C@_09JLKGPCDL@?9noverify?$AA@
	mov	eax, edi
$LL387@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN388@smime_main
	test	dl, dl
	je	SHORT $LN389@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN388@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL387@smime_main
$LN389@smime_main:
	xor	eax, eax
	jmp	SHORT $LN390@smime_main
$LN388@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN390@smime_main:
	test	eax, eax
	jne	SHORT $LN55@smime_main
; Line 188
	or	ebx, 32					; 00000020H
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN55@smime_main:
; Line 189
	mov	ecx, OFFSET ??_C@_08MKBHGHLI@?9nochain?$AA@
	mov	eax, edi
	npad	7
$LL391@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN392@smime_main
	test	dl, dl
	je	SHORT $LN393@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN392@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL391@smime_main
$LN393@smime_main:
	xor	eax, eax
	jmp	SHORT $LN394@smime_main
$LN392@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN394@smime_main:
	test	eax, eax
	jne	SHORT $LN57@smime_main
; Line 190
	or	ebx, 8
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN57@smime_main:
; Line 191
	mov	ecx, OFFSET ??_C@_08JLLJAHEH@?9nocerts?$AA@
	mov	eax, edi
$LL395@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN396@smime_main
	test	dl, dl
	je	SHORT $LN397@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN396@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL395@smime_main
$LN397@smime_main:
	xor	eax, eax
	jmp	SHORT $LN398@smime_main
$LN396@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN398@smime_main:
	test	eax, eax
	jne	SHORT $LN59@smime_main
; Line 192
	or	ebx, 2
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN59@smime_main:
; Line 193
	mov	ecx, OFFSET ??_C@_07NEHLGPOI@?9noattr?$AA@
	mov	eax, edi
$LL399@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN400@smime_main
	test	dl, dl
	je	SHORT $LN401@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN400@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL399@smime_main
$LN401@smime_main:
	xor	eax, eax
	jmp	SHORT $LN402@smime_main
$LN400@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN402@smime_main:
	test	eax, eax
	jne	SHORT $LN61@smime_main
; Line 194
	or	ebx, 256				; 00000100H
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN61@smime_main:
; Line 195
	mov	ecx, OFFSET ??_C@_09HEABEDGI@?9nodetach?$AA@
	mov	eax, edi
	npad	4
$LL403@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN404@smime_main
	test	dl, dl
	je	SHORT $LN405@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN404@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL403@smime_main
$LN405@smime_main:
	xor	eax, eax
	jmp	SHORT $LN406@smime_main
$LN404@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN406@smime_main:
	test	eax, eax
	jne	SHORT $LN63@smime_main
; Line 196
	and	ebx, -65				; ffffffbfH
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN63@smime_main:
; Line 197
	mov	ecx, OFFSET ??_C@_0M@BGBFCGLM@?9nosmimecap?$AA@
	mov	eax, edi
$LL407@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN408@smime_main
	test	dl, dl
	je	SHORT $LN409@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN408@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL407@smime_main
$LN409@smime_main:
	xor	eax, eax
	jmp	SHORT $LN410@smime_main
$LN408@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN410@smime_main:
	test	eax, eax
	jne	SHORT $LN65@smime_main
; Line 198
	or	ebx, 512				; 00000200H
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN65@smime_main:
; Line 199
	mov	ecx, OFFSET ??_C@_07MHGMHDIE@?9binary?$AA@
	mov	eax, edi
	npad	7
$LL411@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN412@smime_main
	test	dl, dl
	je	SHORT $LN413@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN412@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL411@smime_main
$LN413@smime_main:
	xor	eax, eax
	jmp	SHORT $LN414@smime_main
$LN412@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN414@smime_main:
	test	eax, eax
	jne	SHORT $LN67@smime_main
; Line 200
	or	ebx, 128				; 00000080H
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN67@smime_main:
; Line 201
	mov	ecx, OFFSET ??_C@_07GLFDAICA@?9nosigs?$AA@
	mov	eax, edi
$LL415@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN416@smime_main
	test	dl, dl
	je	SHORT $LN417@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN416@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL415@smime_main
$LN417@smime_main:
	xor	eax, eax
	jmp	SHORT $LN418@smime_main
$LN416@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN418@smime_main:
	test	eax, eax
	jne	SHORT $LN69@smime_main
; Line 202
	or	ebx, 4
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN69@smime_main:
; Line 203
	mov	ecx, OFFSET ??_C@_07KDDBNCBD@?9stream?$AA@
	mov	eax, edi
	npad	7
$LL419@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN420@smime_main
	test	dl, dl
	je	SHORT $LN421@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN420@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL419@smime_main
$LN421@smime_main:
	xor	eax, eax
	jmp	SHORT $LN422@smime_main
$LN420@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN422@smime_main:
	test	eax, eax
	jne	SHORT $LN71@smime_main
; Line 330
	add	esi, 4
	mov	DWORD PTR _indef$1$[esp+176], 1
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN71@smime_main:
; Line 205
	mov	ecx, OFFSET ??_C@_06MPPEKNN@?9indef?$AA@
	mov	eax, edi
$LL423@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN424@smime_main
	test	dl, dl
	je	SHORT $LN425@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN424@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL423@smime_main
$LN425@smime_main:
	xor	eax, eax
	jmp	SHORT $LN426@smime_main
$LN424@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN426@smime_main:
	test	eax, eax
	jne	SHORT $LN73@smime_main
; Line 330
	add	esi, 4
	mov	DWORD PTR _indef$1$[esp+176], 1
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN73@smime_main:
; Line 207
	mov	ecx, OFFSET ??_C@_08BCNBDCCA@?9noindef?$AA@
	mov	eax, edi
$LL427@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN428@smime_main
	test	dl, dl
	je	SHORT $LN429@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN428@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL427@smime_main
$LN429@smime_main:
	xor	eax, eax
	jmp	SHORT $LN430@smime_main
$LN428@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN430@smime_main:
	test	eax, eax
	jne	SHORT $LN75@smime_main
; Line 330
	add	esi, 4
	mov	DWORD PTR _indef$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN75@smime_main:
; Line 209
	mov	ecx, OFFSET ??_C@_0L@DMDFODFL@?9nooldmime?$AA@
	mov	eax, edi
$LL431@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN432@smime_main
	test	dl, dl
	je	SHORT $LN433@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN432@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL431@smime_main
$LN433@smime_main:
	xor	eax, eax
	jmp	SHORT $LN434@smime_main
$LN432@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN434@smime_main:
	test	eax, eax
	jne	SHORT $LN77@smime_main
; Line 210
	or	ebx, 1024				; 00000400H
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN77@smime_main:
; Line 211
	mov	ecx, OFFSET ??_C@_08KAKEAKLE@?9crlfeol?$AA@
	mov	eax, edi
	npad	2
$LL435@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN436@smime_main
	test	dl, dl
	je	SHORT $LN437@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN436@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL435@smime_main
$LN437@smime_main:
	xor	eax, eax
	jmp	SHORT $LN438@smime_main
$LN436@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN438@smime_main:
	test	eax, eax
	jne	SHORT $LN79@smime_main
; Line 212
	or	ebx, 2048				; 00000800H
; Line 330
	add	esi, 4
	mov	DWORD PTR _flags$1$[esp+176], ebx
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN79@smime_main:
; Line 213
	mov	ecx, OFFSET ??_C@_05LGFPCDPE@?9rand?$AA@
	mov	eax, edi
$LL439@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN440@smime_main
	test	dl, dl
	je	SHORT $LN441@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN440@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL439@smime_main
$LN441@smime_main:
	xor	eax, eax
	jmp	SHORT $LN442@smime_main
$LN440@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN442@smime_main:
	test	eax, eax
	jne	SHORT $LN81@smime_main
; Line 214
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 216
	mov	DWORD PTR _args$[esp+176], esi
; Line 217
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _inrand$1$[esp+176], eax
	mov	DWORD PTR _need_rand$1$[esp+176], 1
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN81@smime_main:
; Line 221
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, edi
$LL443@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN444@smime_main
	test	dl, dl
	je	SHORT $LN445@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN444@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL443@smime_main
$LN445@smime_main:
	xor	eax, eax
	jmp	SHORT $LN446@smime_main
$LN444@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN446@smime_main:
	test	eax, eax
	jne	SHORT $LN84@smime_main
; Line 222
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 224
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _engine$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN84@smime_main:
; Line 227
	mov	ecx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	eax, edi
$LL447@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN448@smime_main
	test	dl, dl
	je	SHORT $LN449@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN448@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL447@smime_main
$LN449@smime_main:
	xor	eax, eax
	jmp	SHORT $LN450@smime_main
$LN448@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN450@smime_main:
	test	eax, eax
	jne	SHORT $LN87@smime_main
; Line 228
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 230
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _passargin$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN87@smime_main:
; Line 231
	mov	ecx, OFFSET ??_C@_03DNHOOAOE@?9to?$AA@
	mov	eax, edi
$LL451@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN452@smime_main
	test	dl, dl
	je	SHORT $LN453@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN452@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL451@smime_main
$LN453@smime_main:
	xor	eax, eax
	jmp	SHORT $LN454@smime_main
$LN452@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN454@smime_main:
	test	eax, eax
	jne	SHORT $LN90@smime_main
; Line 232
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 234
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _to$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN90@smime_main:
; Line 235
	mov	ecx, OFFSET ??_C@_05LBJDDLLJ@?9from?$AA@
	mov	eax, edi
	npad	5
$LL455@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN456@smime_main
	test	dl, dl
	je	SHORT $LN457@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN456@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL455@smime_main
$LN457@smime_main:
	xor	eax, eax
	jmp	SHORT $LN458@smime_main
$LN456@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN458@smime_main:
	test	eax, eax
	jne	SHORT $LN93@smime_main
; Line 236
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 238
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _from$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN93@smime_main:
; Line 239
	mov	ecx, OFFSET ??_C@_08GNEDOIFN@?9subject?$AA@
	mov	eax, edi
$LL459@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN460@smime_main
	test	dl, dl
	je	SHORT $LN461@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN460@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL459@smime_main
$LN461@smime_main:
	xor	eax, eax
	jmp	SHORT $LN462@smime_main
$LN460@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN462@smime_main:
	test	eax, eax
	jne	SHORT $LN96@smime_main
; Line 240
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 242
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _subject$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN96@smime_main:
; Line 243
	mov	ecx, OFFSET ??_C@_07KJCLPKOH@?9signer?$AA@
	mov	eax, edi
$LL463@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN464@smime_main
	test	dl, dl
	je	SHORT $LN465@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN464@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL463@smime_main
$LN465@smime_main:
	xor	eax, eax
	jmp	SHORT $LN466@smime_main
$LN464@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN466@smime_main:
	test	eax, eax
	jne	SHORT $LN99@smime_main
; Line 244
	cmp	DWORD PTR [esi+4], eax
	je	$argerr$550
; Line 248
	mov	edi, DWORD PTR _signerfile$1$[esp+176]
	test	edi, edi
	je	SHORT $LN102@smime_main
; Line 249
	mov	eax, DWORD PTR _sksigners$1$[esp+176]
	test	eax, eax
	jne	SHORT $LN103@smime_main
; Line 250
	call	_sk_new_null
	mov	DWORD PTR _sksigners$1$[esp+176], eax
$LN103@smime_main:
; Line 251
	push	edi
	push	eax
	call	_sk_push
; Line 252
	mov	esi, DWORD PTR _keyfile$2$[esp+184]
	add	esp, 8
; Line 254
	mov	eax, DWORD PTR _skkeys$1$[esp+176]
	test	esi, esi
	cmove	esi, edi
	test	eax, eax
	jne	SHORT $LN105@smime_main
; Line 255
	call	_sk_new_null
	mov	DWORD PTR _skkeys$1$[esp+176], eax
$LN105@smime_main:
; Line 256
	push	esi
	push	eax
	call	_sk_push
; Line 257
	mov	esi, DWORD PTR _args$[esp+184]
	add	esp, 8
	mov	DWORD PTR _keyfile$2$[esp+176], 0
$LN102@smime_main:
; Line 259
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _signerfile$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN99@smime_main:
; Line 260
	mov	ecx, OFFSET ??_C@_06JKGLPNJO@?9recip?$AA@
	mov	eax, edi
	npad	3
$LL467@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN468@smime_main
	test	dl, dl
	je	SHORT $LN469@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN468@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL467@smime_main
$LN469@smime_main:
	xor	eax, eax
	jmp	SHORT $LN470@smime_main
$LN468@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN470@smime_main:
	test	eax, eax
	jne	SHORT $LN106@smime_main
; Line 261
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 263
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _recipfile$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN106@smime_main:
; Line 264
	mov	ecx, OFFSET ??_C@_03MNHNKBNA@?9md?$AA@
	mov	eax, edi
$LL471@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN472@smime_main
	test	dl, dl
	je	SHORT $LN473@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN472@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL471@smime_main
$LN473@smime_main:
	xor	eax, eax
	jmp	SHORT $LN474@smime_main
$LN472@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN474@smime_main:
	test	eax, eax
	jne	SHORT $LN109@smime_main
; Line 265
	cmp	DWORD PTR [esi+4], 0
	lea	eax, DWORD PTR [esi+4]
	je	$argerr$550
; Line 267
	mov	DWORD PTR _args$[esp+176], eax
	push	DWORD PTR [eax]
	call	_EVP_get_digestbyname
	add	esp, 4
	mov	DWORD PTR _sign_md$1$[esp+176], eax
; Line 268
	test	eax, eax
	jne	$LN541@smime_main
; Line 269
	mov	eax, DWORD PTR _args$[esp+176]
	push	DWORD PTR [eax]
	push	OFFSET ??_C@_0BD@MLPNFPFM@Unknown?5digest?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 270
	jmp	$argerr$550
$LN109@smime_main:
; Line 272
	mov	ecx, OFFSET ??_C@_06JJMGFEBF@?9inkey?$AA@
	mov	eax, edi
	npad	7
$LL475@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN476@smime_main
	test	dl, dl
	je	SHORT $LN477@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN476@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL475@smime_main
$LN477@smime_main:
	xor	eax, eax
	jmp	SHORT $LN478@smime_main
$LN476@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN478@smime_main:
	test	eax, eax
	jne	SHORT $LN113@smime_main
; Line 273
	cmp	DWORD PTR [esi+4], eax
	je	$argerr$550
; Line 276
	mov	edi, DWORD PTR _keyfile$2$[esp+176]
	test	edi, edi
	je	SHORT $LN116@smime_main
; Line 277
	mov	esi, DWORD PTR _signerfile$1$[esp+176]
	test	esi, esi
	je	$LN276@smime_main
; Line 281
	mov	eax, DWORD PTR _sksigners$1$[esp+176]
	test	eax, eax
	jne	SHORT $LN118@smime_main
; Line 282
	call	_sk_new_null
	mov	DWORD PTR _sksigners$1$[esp+176], eax
$LN118@smime_main:
; Line 283
	push	esi
	push	eax
	call	_sk_push
; Line 285
	mov	eax, DWORD PTR _skkeys$1$[esp+184]
	add	esp, 8
	mov	DWORD PTR _signerfile$1$[esp+176], 0
	test	eax, eax
	jne	SHORT $LN119@smime_main
; Line 286
	call	_sk_new_null
	mov	DWORD PTR _skkeys$1$[esp+176], eax
$LN119@smime_main:
; Line 287
	push	edi
	push	eax
	call	_sk_push
	mov	esi, DWORD PTR _args$[esp+184]
	add	esp, 8
$LN116@smime_main:
; Line 289
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _keyfile$2$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN113@smime_main:
; Line 290
	mov	ecx, OFFSET ??_C@_08OAHLMBGP@?9keyform?$AA@
	mov	eax, edi
$LL479@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN480@smime_main
	test	dl, dl
	je	SHORT $LN481@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN480@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL479@smime_main
$LN481@smime_main:
	xor	eax, eax
	jmp	SHORT $LN482@smime_main
$LN480@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN482@smime_main:
	test	eax, eax
	jne	SHORT $LN120@smime_main
; Line 291
	cmp	DWORD PTR [esi+4], 0
	lea	eax, DWORD PTR [esi+4]
	je	$argerr$550
; Line 293
	mov	DWORD PTR _args$[esp+176], eax
	push	DWORD PTR [eax]
	call	_str2fmt
; Line 328
	mov	esi, DWORD PTR _args$[esp+180]
	add	esp, 4
; Line 330
	add	esi, 4
	mov	DWORD PTR _keyform$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN120@smime_main:
; Line 294
	mov	ecx, OFFSET ??_C@_09LJGMBFEA@?9certfile?$AA@
	mov	eax, edi
$LL483@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN484@smime_main
	test	dl, dl
	je	SHORT $LN485@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN484@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL483@smime_main
$LN485@smime_main:
	xor	eax, eax
	jmp	SHORT $LN486@smime_main
$LN484@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN486@smime_main:
	test	eax, eax
	jne	SHORT $LN123@smime_main
; Line 295
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 297
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _certfile$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN123@smime_main:
; Line 298
	mov	ecx, OFFSET ??_C@_07EAFCHGPO@?9CAfile?$AA@
	mov	eax, edi
	npad	5
$LL487@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN488@smime_main
	test	dl, dl
	je	SHORT $LN489@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN488@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL487@smime_main
$LN489@smime_main:
	xor	eax, eax
	jmp	SHORT $LN490@smime_main
$LN488@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN490@smime_main:
	test	eax, eax
	jne	SHORT $LN126@smime_main
; Line 299
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 301
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _CAfile$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN126@smime_main:
; Line 302
	mov	ecx, OFFSET ??_C@_07MNNNLALG@?9CApath?$AA@
	mov	eax, edi
$LL491@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN492@smime_main
	test	dl, dl
	je	SHORT $LN493@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN492@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL491@smime_main
$LN493@smime_main:
	xor	eax, eax
	jmp	SHORT $LN494@smime_main
$LN492@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN494@smime_main:
	test	eax, eax
	jne	SHORT $LN129@smime_main
; Line 303
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 305
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _CApath$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN129@smime_main:
; Line 306
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, edi
$LL495@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN496@smime_main
	test	dl, dl
	je	SHORT $LN497@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN496@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL495@smime_main
$LN497@smime_main:
	xor	eax, eax
	jmp	SHORT $LN498@smime_main
$LN496@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN498@smime_main:
	test	eax, eax
	jne	SHORT $LN132@smime_main
; Line 307
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 309
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _infile$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN132@smime_main:
; Line 310
	mov	ecx, OFFSET ??_C@_07CGGPPMGB@?9inform?$AA@
	mov	eax, edi
	npad	7
$LL499@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN500@smime_main
	test	dl, dl
	je	SHORT $LN501@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN500@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL499@smime_main
$LN501@smime_main:
	xor	eax, eax
	jmp	SHORT $LN502@smime_main
$LN500@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN502@smime_main:
	test	eax, eax
	jne	SHORT $LN135@smime_main
; Line 311
	cmp	DWORD PTR [esi+4], 0
	lea	eax, DWORD PTR [esi+4]
	je	$argerr$550
; Line 313
	mov	DWORD PTR _args$[esp+176], eax
	push	DWORD PTR [eax]
	call	_str2fmt
; Line 328
	mov	esi, DWORD PTR _args$[esp+180]
	add	esp, 4
; Line 330
	add	esi, 4
	mov	DWORD PTR _informat$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN135@smime_main:
; Line 314
	mov	ecx, OFFSET ??_C@_08LPHBEAIF@?9outform?$AA@
	mov	eax, edi
	npad	1
$LL503@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN504@smime_main
	test	dl, dl
	je	SHORT $LN505@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN504@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL503@smime_main
$LN505@smime_main:
	xor	eax, eax
	jmp	SHORT $LN506@smime_main
$LN504@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN506@smime_main:
	test	eax, eax
	jne	SHORT $LN138@smime_main
; Line 315
	cmp	DWORD PTR [esi+4], 0
	lea	eax, DWORD PTR [esi+4]
	je	$argerr$550
; Line 317
	mov	DWORD PTR _args$[esp+176], eax
	push	DWORD PTR [eax]
	call	_str2fmt
; Line 328
	mov	esi, DWORD PTR _args$[esp+180]
	add	esp, 4
; Line 330
	add	esi, 4
	mov	DWORD PTR _outformat$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN138@smime_main:
; Line 318
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, edi
	npad	1
$LL507@smime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN508@smime_main
	test	dl, dl
	je	SHORT $LN509@smime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN508@smime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL507@smime_main
$LN509@smime_main:
	xor	eax, eax
	jmp	SHORT $LN510@smime_main
$LN508@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN510@smime_main:
	test	eax, eax
	jne	SHORT $LN141@smime_main
; Line 319
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 321
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _outfile$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	$LN290@smime_main
$LN141@smime_main:
; Line 322
	mov	eax, OFFSET ??_C@_08HCJMGADN@?9content?$AA@
$LL511@smime_main:
	mov	cl, BYTE PTR [edi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN512@smime_main
	test	cl, cl
	je	SHORT $LN513@smime_main
	mov	cl, BYTE PTR [edi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN512@smime_main
	add	edi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL511@smime_main
$LN513@smime_main:
	xor	eax, eax
	jmp	SHORT $LN514@smime_main
$LN512@smime_main:
	sbb	eax, eax
	or	eax, 1
$LN514@smime_main:
	test	eax, eax
	jne	SHORT $LN144@smime_main
; Line 323
	add	esi, 4
	cmp	DWORD PTR [esi], eax
	je	$argerr$550
; Line 325
	mov	DWORD PTR _args$[esp+176], esi
	mov	eax, DWORD PTR [esi]
; Line 330
	add	esi, 4
	mov	DWORD PTR _contfile$1$[esp+176], eax
	mov	DWORD PTR _args$[esp+176], esi
	jmp	SHORT $LN290@smime_main
$LN144@smime_main:
; Line 326
	lea	eax, DWORD PTR _vpm$[esp+176]
	push	eax
	push	DWORD PTR _bio_err
	lea	eax, DWORD PTR _badarg$[esp+184]
	push	eax
	lea	eax, DWORD PTR _args$[esp+188]
	push	0
	push	eax
	call	_args_verify
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN516@smime_main
; Line 328
	mov	eax, DWORD PTR _args$[esp+176]
	mov	eax, DWORD PTR [eax]
	inc	eax
	push	eax
	call	_EVP_get_cipherbyname
	mov	ebp, eax
	add	esp, 4
	mov	eax, DWORD PTR _badarg$[esp+176]
	test	ebp, ebp
	mov	ecx, 1
	cmove	eax, ecx
	mov	DWORD PTR _badarg$[esp+176], eax
$LN541@smime_main:
	mov	esi, DWORD PTR _args$[esp+176]
; Line 330
	add	esi, 4
	mov	DWORD PTR _args$[esp+176], esi
	jmp	SHORT $LN290@smime_main
$LN516@smime_main:
	mov	esi, DWORD PTR _args$[esp+176]
$LN290@smime_main:
; Line 136
	cmp	DWORD PTR _badarg$[esp+176], 0
	je	$LL2@smime_main
$LN306@smime_main:
; Line 333
	mov	eax, DWORD PTR _operation$1$[esp+176]
	mov	edi, eax
	and	edi, 64					; 00000040H
	jne	SHORT $LN524@smime_main
	cmp	DWORD PTR _skkeys$1$[esp+176], edi
	jne	SHORT $LN151@smime_main
	mov	ecx, DWORD PTR _sksigners$1$[esp+176]
	test	ecx, ecx
	je	SHORT $LN150@smime_main
$LN151@smime_main:
; Line 334
	push	OFFSET ??_C@_0CG@JIDLJHJP@Multiple?5signers?5or?5keys?5not?5all@
	push	DWORD PTR _bio_err
	call	_BIO_puts
	add	esp, 8
; Line 335
	jmp	$argerr$550
$LN524@smime_main:
	mov	ecx, DWORD PTR _sksigners$1$[esp+176]
$LN150@smime_main:
; Line 338
	test	edi, edi
	je	$LN152@smime_main
; Line 340
	mov	ebx, DWORD PTR _keyfile$2$[esp+176]
	mov	esi, DWORD PTR _signerfile$1$[esp+176]
	test	ebx, ebx
	je	SHORT $LN154@smime_main
	test	esi, esi
	jne	SHORT $LN303@smime_main
$LN276@smime_main:
; Line 341
	push	OFFSET ??_C@_0CA@DHJCDGB@Illegal?5?9inkey?5without?5?9signer?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
	add	esp, 8
; Line 342
	jmp	$argerr$550
$LN154@smime_main:
; Line 344
	test	esi, esi
	je	SHORT $LN155@smime_main
$LN303@smime_main:
; Line 345
	test	ecx, ecx
	jne	SHORT $LN156@smime_main
; Line 346
	call	_sk_new_null
	mov	ecx, eax
	mov	DWORD PTR _sksigners$1$[esp+176], ecx
$LN156@smime_main:
; Line 347
	push	esi
	push	ecx
	call	_sk_push
; Line 348
	mov	eax, DWORD PTR _skkeys$1$[esp+184]
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN157@smime_main
; Line 349
	call	_sk_new_null
	mov	DWORD PTR _skkeys$1$[esp+176], eax
$LN157@smime_main:
; Line 350
	test	ebx, ebx
	cmove	ebx, esi
; Line 352
	push	ebx
	push	eax
	call	_sk_push
	add	esp, 8
$LN155@smime_main:
; Line 354
	mov	eax, DWORD PTR _sksigners$1$[esp+176]
	test	eax, eax
	jne	SHORT $LN159@smime_main
; Line 355
	push	OFFSET ??_C@_0CB@OFHFPLIP@No?5signer?5certificate?5specified?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 356
	mov	DWORD PTR _badarg$[esp+176], 1
$LN159@smime_main:
; Line 360
	mov	esi, 1
	mov	DWORD PTR _signerfile$1$[esp+176], 0
	mov	DWORD PTR _keyfile$2$[esp+176], 0
	mov	DWORD PTR _need_rand$1$[esp+176], esi
	jmp	SHORT $LN166@smime_main
$LN152@smime_main:
; Line 361
	cmp	eax, 34					; 00000022H
	jne	SHORT $LN160@smime_main
; Line 362
	cmp	DWORD PTR _recipfile$1$[esp+176], 0
	jne	SHORT $LN540@smime_main
	cmp	DWORD PTR _keyfile$2$[esp+176], 0
	jne	SHORT $LN540@smime_main
; Line 363
	push	OFFSET ??_C@_0CL@LLEPGLLL@No?5recipient?5certificate?5or?5key?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 365
	mov	DWORD PTR _badarg$[esp+176], 1
; Line 366
	jmp	SHORT $argerr$550
$LN160@smime_main:
; Line 367
	cmp	eax, 17					; 00000011H
	jne	SHORT $LN163@smime_main
; Line 368
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN165@smime_main
; Line 369
	push	OFFSET ??_C@_0CK@PMIMDKMB@No?5recipient?$CIs?$CJ?5certificate?$CIs?$CJ?5s@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 370
	mov	DWORD PTR _badarg$[esp+176], 1
$LN165@smime_main:
; Line 372
	mov	esi, 1
	mov	DWORD PTR _need_rand$1$[esp+176], esi
	jmp	SHORT $LN166@smime_main
$LN163@smime_main:
; Line 373
	test	eax, eax
	jne	SHORT $LN540@smime_main
; Line 374
	mov	DWORD PTR _badarg$[esp+176], 1
; Line 376
	jmp	SHORT $argerr$550
$LN540@smime_main:
	mov	esi, DWORD PTR _need_rand$1$[esp+176]
$LN166@smime_main:
	cmp	DWORD PTR _badarg$[esp+176], 0
	je	$LN167@smime_main
$argerr$550:
; Line 378
	push	OFFSET ??_C@_0CE@FDJDGLAJ@Usage?5smime?5?$FLoptions?$FN?5cert?4pem?5?4@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 379
	push	OFFSET ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 380
	push	OFFSET ??_C@_0CA@KGPHFLFP@?9encrypt?5?5?5?5?5?5?5encrypt?5message?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 381
	push	OFFSET ??_C@_0CK@JCHKEHGG@?9decrypt?5?5?5?5?5?5?5decrypt?5encrypted@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 382
	push	OFFSET ??_C@_0BN@HJPLAAFL@?9sign?5?5?5?5?5?5?5?5?5?5sign?5message?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 383
	push	OFFSET ??_C@_0CG@DBJPEOLC@?9verify?5?5?5?5?5?5?5?5verify?5signed?5mes@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 384
	push	OFFSET ??_C@_0CI@BCDMICAJ@?9pk7out?5?5?5?5?5?5?5?5output?5PKCS?$CD7?5str@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 386
	push	OFFSET ??_C@_0CI@EOKKIBBM@?9des3?5?5?5?5?5?5?5?5?5?5encrypt?5with?5trip@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 387
	push	OFFSET ??_C@_0CB@CIKFCINJ@?9des?5?5?5?5?5?5?5?5?5?5?5encrypt?5with?5DES?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 390
	push	OFFSET ??_C@_0CC@GMBHMJIM@?9seed?5?5?5?5?5?5?5?5?5?5encrypt?5with?5SEED@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 393
	push	OFFSET ??_C@_0CO@GEAPCENN@?9rc2?940?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 394
	push	OFFSET ??_C@_0CE@IJCAPJKJ@?9rc2?964?5?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 395
	push	OFFSET ??_C@_0CF@DDJHCDHN@?9rc2?9128?5?5?5?5?5?5?5encrypt?5with?5RC2?9@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 398
	push	OFFSET ??_C@_0BL@GNIGBBHO@?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 399
	push	OFFSET ??_C@_0DA@IEGKPLKF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 403
	push	OFFSET ??_C@_0CK@JDFMNIFI@?9camellia128?0?5?9camellia192?0?5?9cam@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 404
	push	OFFSET ??_C@_0DF@GIPJKIKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5outpu@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 407
	push	OFFSET ??_C@_0EA@ILDIEJIB@?9nointern?5?5?5?5?5?5don?8t?5search?5cert@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 409
	push	OFFSET ??_C@_0CP@OGDGBBOD@?9nosigs?5?5?5?5?5?5?5?5don?8t?5verify?5mess@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 411
	push	OFFSET ??_C@_0DB@IKPMJHI@?9noverify?5?5?5?5?5?5don?8t?5verify?5sign@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 413
	push	OFFSET ??_C@_0DP@JLIEKPEB@?9nocerts?5?5?5?5?5?5?5don?8t?5include?5sig@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 415
	push	OFFSET ??_C@_0CD@CMFKNHBM@?9nodetach?5?5?5?5?5?5use?5opaque?5signin@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 416
	push	OFFSET ??_C@_0DE@LJHNJDJA@?9noattr?5?5?5?5?5?5?5?5don?8t?5include?5any@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 418
	push	OFFSET ??_C@_0DA@JNBHNMIH@?9binary?5?5?5?5?5?5?5?5don?8t?5translate?5m@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 420
	push	OFFSET ??_C@_0CI@PNOBKEEO@?9certfile?5file?5other?5certificate@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 421
	push	OFFSET ??_C@_0CI@GHNNMLJK@?9signer?5file?5?5?5signer?5certificat@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 422
	push	OFFSET ??_C@_0DK@LNEKKJPP@?9recip?5?5file?5?5?5recipient?5certifi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 424
	push	OFFSET ??_C@_0BL@KOGAJAKN@?9in?5file?5?5?5?5?5?5?5input?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 425
	push	OFFSET ??_C@_0DJ@NMGLJIAC@?9inform?5arg?5?5?5?5input?5format?5SMIM@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 427
	push	OFFSET ??_C@_0DP@IGNGNBHA@?9inkey?5file?5?5?5?5input?5private?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 429
	push	OFFSET ??_C@_0DJ@ILJGCPGC@?9keyform?5arg?5?5?5input?5private?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 431
	push	OFFSET ??_C@_0BM@JJIAGAHD@?9out?5file?5?5?5?5?5?5output?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 432
	push	OFFSET ??_C@_0DK@EOHMOJME@?9outform?5arg?5?5?5output?5format?5SMI@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 434
	push	OFFSET ??_C@_0EC@NOADBLAP@?9content?5file?5?5supply?5or?5overrid@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 436
	push	OFFSET ??_C@_0BL@DICPIKB@?9to?5addr?5?5?5?5?5?5?5to?5address?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 437
	push	OFFSET ??_C@_0BN@HNOMDABA@?9from?5ad?5?5?5?5?5?5?5from?5address?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 438
	push	OFFSET ??_C@_0BI@BOKAEOPI@?9subject?5s?5?5?5?5?5subject?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 439
	push	OFFSET ??_C@_0DE@PMLHAFDG@?9text?5?5?5?5?5?5?5?5?5?5include?5or?5delete@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 441
	push	OFFSET ??_C@_0CP@JIHEGMNP@?9CApath?5dir?5?5?5?5trusted?5certifica@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 443
	push	OFFSET ??_C@_0CK@IHLPFGMK@?9CAfile?5file?5?5?5trusted?5certifica@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 444
	push	OFFSET ??_C@_0EA@HHGKFHJO@?9no_alt_chains?5only?5ever?5use?5the@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 446
	push	OFFSET ??_C@_0EL@MPJFONL@?9crl_check?5?5?5?5?5check?5revocation?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 448
	push	OFFSET ??_C@_0FB@CNLELBFF@?9crl_check_all?5check?5revocation?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 451
	push	OFFSET ??_C@_0DK@GCCGEDIN@?9engine?5e?5?5?5?5?5?5use?5engine?5e?0?5pos@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 454
	push	OFFSET ??_C@_0CO@FMBLHPDC@?9passin?5arg?5?5?5?5input?5file?5pass?5p@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 455
	push	59					; 0000003bH
	push	59					; 0000003bH
	push	OFFSET ??_C@_0BH@FIDOLEMP@?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 457
	push	OFFSET ??_C@_0ED@JMAEPAFB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CIor@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 459
	push	OFFSET ??_C@_0CM@HMDFFJAF@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5number@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 460
	push	OFFSET ??_C@_0DI@JOMJGAON@cert?4pem?5?5?5?5?5?5?5recipient?5certifi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 462
	xor	edi, edi
	add	esp, 16					; 00000010H
	xor	esi, esi
	xor	ebp, ebp
	lea	ebx, DWORD PTR [edi+1]
	jmp	$end$551
$LN167@smime_main:
; Line 465
	push	0
	push	DWORD PTR _engine$1$[esp+180]
	push	DWORD PTR _bio_err
	call	_setup_engine
; Line 468
	push	0
	mov	ebx, eax
	lea	eax, DWORD PTR _passin$[esp+192]
	push	eax
	push	0
	push	DWORD PTR _passargin$1$[esp+200]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN168@smime_main
; Line 469
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 470
	xor	edi, edi
	add	esp, 8
	xor	esi, esi
	xor	ebp, ebp
	lea	ebx, DWORD PTR [edi+1]
	jmp	$end$551
$LN168@smime_main:
; Line 473
	test	esi, esi
	je	SHORT $LN170@smime_main
; Line 474
	mov	esi, DWORD PTR _inrand$1$[esp+176]
	xor	eax, eax
	test	esi, esi
	setne	al
	push	eax
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_load_file
	add	esp, 12					; 0000000cH
; Line 475
	test	esi, esi
	je	SHORT $LN170@smime_main
; Line 476
	push	esi
	call	_app_RAND_load_files
	push	eax
	push	OFFSET ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN170@smime_main:
; Line 483
	mov	ecx, DWORD PTR _flags$1$[esp+176]
	mov	DWORD PTR _ret$1$[esp+176], 2
	test	edi, edi
	jne	SHORT $LN171@smime_main
	and	ecx, -65				; ffffffbfH
	mov	DWORD PTR _flags$1$[esp+176], ecx
$LN171@smime_main:
; Line 485
	mov	edx, DWORD PTR _operation$1$[esp+176]
	test	dl, 16					; 00000010H
	je	SHORT $LN172@smime_main
; Line 486
	cmp	DWORD PTR _outformat$1$[esp+176], 1
	jne	SHORT $LN175@smime_main
; Line 487
	mov	DWORD PTR _outmode$1$[esp+176], OFFSET ??_C@_02GMLFBBN@wb?$AA@
; Line 488
	jmp	SHORT $LN175@smime_main
$LN172@smime_main:
; Line 489
	test	cl, -128				; ffffff80H
	mov	eax, OFFSET ??_C@_02GMLFBBN@wb?$AA@
	mov	esi, OFFSET ??_C@_01NOFIACDB@w?$AA@
	cmove	eax, esi
	mov	DWORD PTR _outmode$1$[esp+176], eax
$LN175@smime_main:
; Line 493
	mov	esi, edx
	and	esi, 32					; 00000020H
	je	SHORT $LN176@smime_main
; Line 494
	cmp	DWORD PTR _informat$1$[esp+176], 1
	jne	SHORT $LN179@smime_main
; Line 495
	mov	DWORD PTR _inmode$1$[esp+176], OFFSET ??_C@_02JDPG@rb?$AA@
; Line 496
	jmp	SHORT $LN179@smime_main
$LN176@smime_main:
; Line 497
	test	cl, -128				; ffffff80H
	mov	eax, OFFSET ??_C@_02JDPG@rb?$AA@
	mov	ecx, OFFSET ??_C@_01KDCPPGHE@r?$AA@
	cmove	eax, ecx
	mov	DWORD PTR _inmode$1$[esp+176], eax
$LN179@smime_main:
; Line 501
	cmp	edx, 17					; 00000011H
	jne	SHORT $LN5@smime_main
; Line 502
	test	ebp, ebp
	jne	SHORT $LN181@smime_main
; Line 504
	call	_EVP_des_ede3_cbc
	mov	ebp, eax
$LN181@smime_main:
; Line 510
	call	_sk_new_null
	mov	DWORD PTR _encerts$1$[esp+176], eax
; Line 511
	mov	eax, DWORD PTR _args$[esp+176]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@smime_main
	npad	3
$LL4@smime_main:
; Line 512
	push	OFFSET ??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@
	push	ebx
	push	0
	push	3
	push	DWORD PTR [eax]
	push	DWORD PTR _bio_err
	call	_load_cert
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN527@smime_main
; Line 521
	push	eax
	push	DWORD PTR _encerts$1$[esp+180]
	call	_sk_push
; Line 523
	mov	eax, DWORD PTR _args$[esp+184]
	add	esp, 8
	add	eax, 4
	mov	DWORD PTR _args$[esp+176], eax
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LL4@smime_main
$LN5@smime_main:
; Line 527
	mov	eax, DWORD PTR _certfile$1$[esp+176]
	test	eax, eax
	je	SHORT $LN184@smime_main
; Line 528
	push	OFFSET ??_C@_0BB@ODBFPAJB@certificate?5file?$AA@
	push	ebx
	push	0
	push	3
	push	eax
	push	DWORD PTR _bio_err
	call	_load_certs
	add	esp, 24					; 00000018H
	mov	DWORD PTR _other$1$[esp+176], eax
	test	eax, eax
	jne	SHORT $LN184@smime_main
; Line 530
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN527@smime_main:
; Line 531
	xor	edi, edi
	xor	esi, esi
	xor	ebp, ebp
	jmp	$LN542@smime_main
$LN184@smime_main:
; Line 535
	mov	ecx, DWORD PTR _recipfile$1$[esp+176]
	mov	eax, DWORD PTR _operation$1$[esp+176]
	test	ecx, ecx
	je	SHORT $LN186@smime_main
	cmp	eax, 34					; 00000022H
	jne	SHORT $LN187@smime_main
; Line 536
	push	OFFSET ??_C@_0BL@GABNMKLO@recipient?5certificate?5file?$AA@
	push	ebx
	push	0
	push	3
	push	ecx
	push	DWORD PTR _bio_err
	call	_load_cert
	add	esp, 24					; 00000018H
	mov	DWORD PTR _recip$1$[esp+176], eax
	test	eax, eax
	jne	$LN536@smime_main
; Line 538
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 539
	xor	edi, edi
	xor	esi, esi
	xor	ebp, ebp
	jmp	$LN542@smime_main
$LN186@smime_main:
; Line 543
	cmp	eax, 34					; 00000022H
	je	$LN305@smime_main
$LN187@smime_main:
; Line 546
	cmp	eax, 83					; 00000053H
	jne	SHORT $LN194@smime_main
; Line 547
	mov	eax, DWORD PTR _keyfile$2$[esp+176]
	test	eax, eax
	jne	SHORT $LN302@smime_main
; Line 548
	mov	eax, DWORD PTR _signerfile$1$[esp+176]
$LN191@smime_main:
; Line 552
	test	eax, eax
	je	SHORT $LN194@smime_main
$LN302@smime_main:
; Line 553
	push	OFFSET ??_C@_0BB@DELANBNN@signing?5key?5file?$AA@
	push	ebx
	push	DWORD PTR _passin$[esp+184]
	push	0
	push	DWORD PTR _keyform$1$[esp+192]
	push	eax
	push	DWORD PTR _bio_err
	call	_load_key
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _key$1$[esp+176], eax
; Line 555
	test	eax, eax
	je	SHORT $LN529@smime_main
$LN194@smime_main:
; Line 559
	mov	eax, DWORD PTR _infile$1$[esp+176]
	test	eax, eax
	je	SHORT $LN195@smime_main
; Line 560
	mov	ecx, DWORD PTR _inmode$1$[esp+176]
	push	ecx
	push	eax
	call	_BIO_new_file
	add	esp, 8
	mov	DWORD PTR _in$1$[esp+176], eax
	test	eax, eax
	jne	SHORT $LN196@smime_main
; Line 561
	mov	eax, DWORD PTR _infile$1$[esp+176]
	push	eax
	push	OFFSET ??_C@_0BK@FBJDPEEG@Can?8t?5open?5input?5file?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN529@smime_main:
; Line 562
	xor	edi, edi
	xor	ebp, ebp
	jmp	$LN543@smime_main
$LN536@smime_main:
	mov	ecx, DWORD PTR _recipfile$1$[esp+176]
$LN305@smime_main:
; Line 544
	mov	eax, DWORD PTR _keyfile$2$[esp+176]
	test	eax, eax
	jne	SHORT $LN302@smime_main
; Line 545
	mov	eax, ecx
; Line 546
	jmp	SHORT $LN191@smime_main
$LN195@smime_main:
; Line 565
	push	0
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _in$1$[esp+176], eax
$LN196@smime_main:
; Line 567
	test	esi, esi
	je	$LN207@smime_main
; Line 568
	mov	ecx, DWORD PTR _informat$1$[esp+176]
	cmp	ecx, 6
	jne	SHORT $LN199@smime_main
; Line 569
	lea	ecx, DWORD PTR _indata$[esp+176]
	push	ecx
	push	eax
	call	_SMIME_read_PKCS7
	jmp	SHORT $LN544@smime_main
$LN199@smime_main:
; Line 570
	cmp	ecx, 3
	jne	SHORT $LN201@smime_main
; Line 571
	push	0
	push	0
	push	0
	push	eax
	call	_PEM_read_bio_PKCS7
	add	esp, 16					; 00000010H
	jmp	SHORT $LN545@smime_main
$LN201@smime_main:
; Line 572
	cmp	ecx, 1
	jne	SHORT $LN203@smime_main
; Line 573
	push	0
	push	eax
	call	_d2i_PKCS7_bio
$LN544@smime_main:
	add	esp, 8
$LN545@smime_main:
	mov	DWORD PTR _p7$1$[esp+176], eax
; Line 579
	test	eax, eax
	jne	SHORT $LN205@smime_main
; Line 580
	push	OFFSET ??_C@_0BO@GBKLMPDP@Error?5reading?5S?1MIME?5message?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 581
	mov	edi, DWORD PTR _p7$1$[esp+184]
	add	esp, 8
	xor	ebp, ebp
	jmp	$LN543@smime_main
$LN205@smime_main:
; Line 583
	mov	esi, DWORD PTR _contfile$1$[esp+176]
	test	esi, esi
	je	SHORT $LN207@smime_main
; Line 584
	push	DWORD PTR _indata$[esp+176]
	call	_BIO_free
; Line 585
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	push	esi
	call	_BIO_new_file
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _indata$[esp+176], eax
	test	eax, eax
	jne	SHORT $LN207@smime_main
; Line 586
	push	esi
	push	OFFSET ??_C@_0BM@FLJFKNGF@Can?8t?5read?5content?5file?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 587
	mov	edi, DWORD PTR _p7$1$[esp+188]
	add	esp, 12					; 0000000cH
	xor	ebp, ebp
	jmp	$LN543@smime_main
$LN203@smime_main:
; Line 575
	push	OFFSET ??_C@_0CC@HBFGMGJF@Bad?5input?5format?5for?5PKCS?$CD7?5file@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 576
	xor	edi, edi
	xor	ebp, ebp
	jmp	$LN543@smime_main
$LN207@smime_main:
; Line 592
	mov	esi, DWORD PTR _outfile$1$[esp+176]
	test	esi, esi
	je	SHORT $LN208@smime_main
; Line 593
	push	DWORD PTR _outmode$1$[esp+176]
	push	esi
	call	_BIO_new_file
	mov	ecx, eax
	add	esp, 8
	mov	DWORD PTR _out$1$[esp+176], ecx
	test	ecx, ecx
	jne	SHORT $LN209@smime_main
; Line 594
	push	esi
	push	OFFSET ??_C@_0BL@EIBBPFMA@Can?8t?5open?5output?5file?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN526@smime_main:
; Line 595
	mov	edi, DWORD PTR _p7$1$[esp+176]
	jmp	$LN533@smime_main
$LN208@smime_main:
; Line 598
	push	0
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _out$1$[esp+176], eax
$LN209@smime_main:
; Line 607
	mov	eax, DWORD PTR _operation$1$[esp+176]
	cmp	eax, 36					; 00000024H
	jne	SHORT $LN213@smime_main
; Line 608
	push	DWORD PTR _CApath$1$[esp+176]
	push	DWORD PTR _CAfile$1$[esp+180]
	push	DWORD PTR _bio_err
	call	_setup_verify
	mov	esi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _store$1$[esp+176], esi
	test	esi, esi
	je	SHORT $LN526@smime_main
; Line 610
	push	OFFSET _smime_cb
	push	esi
	call	_X509_STORE_set_verify_cb
; Line 611
	mov	eax, DWORD PTR _vpm$[esp+184]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN523@smime_main
; Line 612
	push	eax
	push	esi
	call	_X509_STORE_set1_param
	add	esp, 8
$LN523@smime_main:
	mov	eax, DWORD PTR _operation$1$[esp+176]
$LN213@smime_main:
; Line 615
	mov	DWORD PTR _ret$1$[esp+176], 3
; Line 617
	cmp	eax, 17					; 00000011H
	jne	SHORT $LN214@smime_main
; Line 618
	cmp	DWORD PTR _indef$1$[esp+176], 0
; Line 619
	mov	ebx, DWORD PTR _flags$1$[esp+176]
	je	SHORT $LN216@smime_main
	or	ebx, 4096				; 00001000H
$LN216@smime_main:
; Line 620
	mov	esi, DWORD PTR _in$1$[esp+176]
	push	ebx
	push	ebp
	push	esi
	push	DWORD PTR _encerts$1$[esp+188]
	call	_PKCS7_encrypt
	add	esp, 16					; 00000010H
	mov	edi, eax
$LN522@smime_main:
	mov	eax, DWORD PTR _operation$1$[esp+176]
$LN230@smime_main:
; Line 670
	test	edi, edi
	jne	$LN231@smime_main
; Line 671
	push	OFFSET ??_C@_0CB@JGCGHEEA@Error?5creating?5PKCS?$CD7?5structure?6@
; Line 672
	jmp	$LN547@smime_main
$LN214@smime_main:
; Line 621
	test	edi, edi
	je	$LN519@smime_main
; Line 627
	cmp	eax, 83					; 00000053H
	jne	SHORT $LN218@smime_main
; Line 628
	mov	eax, DWORD PTR _flags$1$[esp+176]
	test	al, 64					; 00000040H
	je	SHORT $LN220@smime_main
; Line 629
	cmp	DWORD PTR _outformat$1$[esp+176], 6
	jne	SHORT $LN223@smime_main
; Line 631
	jmp	SHORT $LN546@smime_main
$LN220@smime_main:
	cmp	DWORD PTR _indef$1$[esp+176], 0
	je	SHORT $LN223@smime_main
$LN546@smime_main:
; Line 632
	or	eax, 4096				; 00001000H
$LN223@smime_main:
; Line 634
	mov	ebp, DWORD PTR _other$1$[esp+176]
	or	eax, 16384				; 00004000H
	push	eax
	push	DWORD PTR _in$1$[esp+180]
	mov	DWORD PTR _flags$1$[esp+184], eax
	push	ebp
	push	0
	push	0
	call	_PKCS7_sign
	mov	edi, eax
	add	esp, 20					; 00000014H
	mov	DWORD PTR _p7$1$[esp+176], edi
; Line 635
	test	edi, edi
	je	$LN533@smime_main
; Line 637
	test	BYTE PTR _flags$1$[esp+176], 2
	je	SHORT $LN219@smime_main
; Line 638
	push	ebp
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN219@smime_main
$LL8@smime_main:
; Line 639
	push	esi
	push	ebp
	call	_sk_value
; Line 640
	push	eax
	push	edi
	call	_PKCS7_add_certificate
	push	ebp
	inc	esi
	call	_sk_num
	add	esp, 20					; 00000014H
	cmp	esi, eax
	jl	SHORT $LL8@smime_main
; Line 643
	jmp	SHORT $LN219@smime_main
$LN218@smime_main:
; Line 644
	or	DWORD PTR _flags$1$[esp+176], 32768	; 00008000H
	mov	edi, DWORD PTR _p7$1$[esp+176]
$LN219@smime_main:
; Line 645
	mov	ebp, DWORD PTR _sksigners$1$[esp+176]
	xor	esi, esi
	push	ebp
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN10@smime_main
$LL11@smime_main:
; Line 646
	push	esi
	push	ebp
	call	_sk_value
; Line 647
	push	esi
	push	DWORD PTR _skkeys$1$[esp+188]
	mov	ebp, eax
	mov	DWORD PTR _signerfile$1$[esp+192], ebp
	call	_sk_value
; Line 648
	push	OFFSET ??_C@_0BD@FNCKELBI@signer?5certificate?$AA@
	push	ebx
	push	0
	push	3
	push	ebp
	push	DWORD PTR _bio_err
	mov	edi, eax
	call	_load_cert
	add	esp, 40					; 00000028H
	mov	DWORD PTR _signer$1$[esp+176], eax
; Line 650
	test	eax, eax
	je	$LN526@smime_main
; Line 652
	push	OFFSET ??_C@_0BB@DELANBNN@signing?5key?5file?$AA@
	push	ebx
	push	DWORD PTR _passin$[esp+184]
	push	0
	push	DWORD PTR _keyform$1$[esp+192]
	push	edi
	push	DWORD PTR _bio_err
	call	_load_key
; Line 656
	mov	edi, DWORD PTR _p7$1$[esp+204]
	mov	ebp, eax
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _key$1$[esp+176], ebp
	test	ebp, ebp
	je	$LN533@smime_main
	push	DWORD PTR _flags$1$[esp+176]
	push	DWORD PTR _sign_md$1$[esp+180]
	push	ebp
	push	DWORD PTR _signer$1$[esp+188]
	push	edi
	call	_PKCS7_sign_add_signer
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN533@smime_main
; Line 658
	push	DWORD PTR _signer$1$[esp+176]
	call	_X509_free
; Line 660
	push	ebp
	mov	DWORD PTR _signer$1$[esp+184], 0
	call	_EVP_PKEY_free
	mov	ebp, DWORD PTR _sksigners$1$[esp+184]
	inc	esi
	push	ebp
; Line 661
	mov	DWORD PTR _key$1$[esp+188], 0
	call	_sk_num
	add	esp, 12					; 0000000cH
	cmp	esi, eax
	jl	$LL11@smime_main
$LN10@smime_main:
; Line 664
	mov	eax, DWORD PTR _operation$1$[esp+176]
	mov	ebx, DWORD PTR _flags$1$[esp+176]
	cmp	eax, 83					; 00000053H
	jne	SHORT $LN520@smime_main
; Line 665
	mov	esi, DWORD PTR _in$1$[esp+176]
	test	ebx, 4096				; 00001000H
	jne	$LN230@smime_main
	push	ebx
	push	esi
	push	edi
	call	_PKCS7_final
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN533@smime_main
	jmp	$LN522@smime_main
$LN519@smime_main:
	mov	ebx, DWORD PTR _flags$1$[esp+176]
	mov	edi, DWORD PTR _p7$1$[esp+176]
$LN520@smime_main:
	mov	esi, DWORD PTR _in$1$[esp+176]
	jmp	$LN230@smime_main
$LN231@smime_main:
; Line 677
	mov	ebp, DWORD PTR _out$1$[esp+176]
	mov	DWORD PTR _ret$1$[esp+176], 4
	cmp	eax, 34					; 00000022H
	jne	SHORT $LN232@smime_main
	mov	esi, DWORD PTR _key$1$[esp+176]
	push	ebx
	push	ebp
	push	DWORD PTR _recip$1$[esp+184]
	push	esi
	push	edi
	call	_PKCS7_decrypt
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN534@smime_main
; Line 678
	push	OFFSET ??_C@_0CD@CBBKKHHG@Error?5decrypting?5PKCS?$CD7?5structur@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 679
	jmp	$LN542@smime_main
$LN232@smime_main:
; Line 681
	cmp	eax, 36					; 00000024H
	jne	$LN235@smime_main
; Line 683
	mov	esi, DWORD PTR _other$1$[esp+176]
	push	ebx
	push	ebp
	push	DWORD PTR _indata$[esp+184]
	push	DWORD PTR _store$1$[esp+188]
	push	esi
	push	edi
	call	_PKCS7_verify
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN237@smime_main
; Line 684
	push	OFFSET ??_C@_0BJ@IAHNLOPG@Verification?5successful?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 689
	push	ebx
	push	esi
	push	edi
	call	_PKCS7_get0_signers
; Line 690
	mov	ebx, DWORD PTR _signerfile$1$[esp+196]
	mov	esi, eax
	push	esi
	push	ebx
	call	_save_certs
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN239@smime_main
; Line 691
	push	ebx
	push	OFFSET ??_C@_0BN@OODALNL@Error?5writing?5signers?5to?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 693
	mov	esi, DWORD PTR _key$1$[esp+188]
	add	esp, 12					; 0000000cH
	mov	ebx, 5
	jmp	$end$551
$LN239@smime_main:
; Line 695
	push	esi
	call	_sk_free
	mov	esi, DWORD PTR _key$1$[esp+180]
	add	esp, 4
; Line 719
	xor	ebx, ebx
	jmp	$end$551
$LN237@smime_main:
; Line 686
	push	OFFSET ??_C@_0BG@HDLEGBLC@Verification?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 687
	jmp	$LN543@smime_main
$LN235@smime_main:
; Line 696
	cmp	eax, 53					; 00000035H
	jne	SHORT $LN240@smime_main
; Line 697
	push	edi
	push	ebp
	call	_PEM_write_bio_PKCS7
	mov	esi, DWORD PTR _key$1$[esp+184]
	add	esp, 8
; Line 719
	xor	ebx, ebx
	jmp	$end$551
$LN240@smime_main:
; Line 699
	mov	eax, DWORD PTR _to$1$[esp+176]
	test	eax, eax
	je	SHORT $LN242@smime_main
; Line 700
	push	eax
	push	OFFSET ??_C@_07GJNLILOG@To?3?5?$CFs?6?$AA@
	push	ebp
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN242@smime_main:
; Line 701
	mov	eax, DWORD PTR _from$1$[esp+176]
	test	eax, eax
	je	SHORT $LN243@smime_main
; Line 702
	push	eax
	push	OFFSET ??_C@_09ONLKPOEP@From?3?5?$CFs?6?$AA@
	push	ebp
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN243@smime_main:
; Line 703
	mov	eax, DWORD PTR _subject$1$[esp+176]
	test	eax, eax
	je	SHORT $LN244@smime_main
; Line 704
	push	eax
	push	OFFSET ??_C@_0N@DJHMFCKN@Subject?3?5?$CFs?6?$AA@
	push	ebp
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN244@smime_main:
; Line 705
	mov	eax, DWORD PTR _outformat$1$[esp+176]
	cmp	eax, 6
	jne	SHORT $LN245@smime_main
; Line 706
	cmp	DWORD PTR _operation$1$[esp+176], 118	; 00000076H
; Line 707
	push	ebx
	jne	SHORT $LN247@smime_main
	push	DWORD PTR _indata$[esp+180]
	push	edi
	push	ebp
	call	_SMIME_write_PKCS7
	mov	esi, DWORD PTR _key$1$[esp+192]
; Line 713
	add	esp, 16					; 00000010H
	mov	ebp, DWORD PTR _out$1$[esp+176]
; Line 719
	xor	ebx, ebx
	jmp	SHORT $end$551
$LN247@smime_main:
; Line 709
	push	esi
	push	edi
	push	ebp
	call	_SMIME_write_PKCS7
	mov	esi, DWORD PTR _key$1$[esp+192]
; Line 713
	add	esp, 16					; 00000010H
	mov	ebp, DWORD PTR _out$1$[esp+176]
; Line 719
	xor	ebx, ebx
	jmp	SHORT $end$551
$LN245@smime_main:
; Line 710
	cmp	eax, 3
	jne	SHORT $LN249@smime_main
; Line 711
	push	ebx
	push	esi
	push	edi
	push	ebp
	call	_PEM_write_bio_PKCS7_stream
	mov	esi, DWORD PTR _key$1$[esp+192]
; Line 713
	add	esp, 16					; 00000010H
	mov	ebp, DWORD PTR _out$1$[esp+176]
; Line 719
	xor	ebx, ebx
	jmp	SHORT $end$551
$LN249@smime_main:
; Line 712
	cmp	eax, 1
	jne	SHORT $LN251@smime_main
; Line 713
	push	ebx
	push	esi
	push	edi
	push	ebp
	call	_i2d_PKCS7_bio_stream
	mov	esi, DWORD PTR _key$1$[esp+192]
	add	esp, 16					; 00000010H
$LN534@smime_main:
; Line 719
	mov	ebp, DWORD PTR _out$1$[esp+176]
	xor	ebx, ebx
	jmp	SHORT $end$551
$LN251@smime_main:
; Line 715
	push	OFFSET ??_C@_0CD@FBKFMBCI@Bad?5output?5format?5for?5PKCS?$CD7?5fil@
$LN547@smime_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN533@smime_main:
	mov	ebp, DWORD PTR _out$1$[esp+176]
$LN543@smime_main:
	mov	esi, DWORD PTR _key$1$[esp+176]
$LN542@smime_main:
	mov	ebx, DWORD PTR _ret$1$[esp+176]
$end$551:
; Line 721
	cmp	DWORD PTR _need_rand$1$[esp+176], 0
	je	SHORT $LN253@smime_main
; Line 722
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_write_file
	add	esp, 8
$LN253@smime_main:
; Line 723
	test	ebx, ebx
	je	SHORT $LN254@smime_main
	jmp	SHORT $LN304@smime_main
$LN530@smime_main:
	xor	esi, esi
	xor	ebp, ebp
	lea	ebx, DWORD PTR [esi+1]
$LN304@smime_main:
; Line 724
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN254@smime_main:
; Line 725
	push	OFFSET _X509_free
	push	DWORD PTR _encerts$1$[esp+180]
	call	_sk_pop_free
; Line 726
	push	OFFSET _X509_free
	push	DWORD PTR _other$1$[esp+188]
	call	_sk_pop_free
; Line 727
	mov	eax, DWORD PTR _vpm$[esp+192]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN255@smime_main
; Line 728
	push	eax
	call	_X509_VERIFY_PARAM_free
	add	esp, 4
$LN255@smime_main:
; Line 729
	mov	eax, DWORD PTR _sksigners$1$[esp+176]
	test	eax, eax
	je	SHORT $LN256@smime_main
; Line 730
	push	eax
	call	_sk_free
	add	esp, 4
$LN256@smime_main:
; Line 731
	mov	eax, DWORD PTR _skkeys$1$[esp+176]
	test	eax, eax
	je	SHORT $LN257@smime_main
; Line 732
	push	eax
	call	_sk_free
	add	esp, 4
$LN257@smime_main:
; Line 733
	push	DWORD PTR _store$1$[esp+176]
	call	_X509_STORE_free
; Line 734
	push	0
	call	_X509_free
; Line 735
	push	DWORD PTR _recip$1$[esp+184]
	call	_X509_free
; Line 736
	push	DWORD PTR _signer$1$[esp+188]
	call	_X509_free
; Line 737
	push	esi
	call	_EVP_PKEY_free
; Line 738
	push	edi
	call	_PKCS7_free
; Line 739
	push	DWORD PTR _in$1$[esp+200]
	call	_BIO_free
; Line 740
	push	DWORD PTR _indata$[esp+204]
	call	_BIO_free
; Line 741
	push	ebp
	call	_BIO_free_all
; Line 742
	mov	ecx, DWORD PTR _passin$[esp+212]
	add	esp, 36					; 00000024H
	pop	esi
	test	ecx, ecx
	je	SHORT $LN515@smime_main
; Line 743
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN515@smime_main:
; Line 744
	pop	edi
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 745
	add	esp, 160				; 000000a0H
	ret	0
_smime_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _smime_cb
_TEXT	SEGMENT
_ok$ = 8						; size = 4
_ctx$ = 12						; size = 4
_smime_cb PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\smime.c
; Line 765
	push	esi
; Line 768
	push	DWORD PTR _ctx$[esp]
	call	_X509_STORE_CTX_get_error
; Line 771
	mov	esi, DWORD PTR _ok$[esp+4]
	add	esp, 4
	cmp	eax, 43					; 0000002bH
	je	SHORT $LN2@smime_cb
	test	eax, eax
	jne	SHORT $LN3@smime_cb
	cmp	esi, 2
	jne	SHORT $LN3@smime_cb
$LN2@smime_cb:
; Line 774
	push	DWORD PTR _ctx$[esp]
	push	0
	call	_policies_print
	add	esp, 8
$LN3@smime_cb:
; Line 776
	mov	eax, esi
	pop	esi
; Line 778
	ret	0
_smime_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _save_certs
_TEXT	SEGMENT
_signerfile$ = 8					; size = 4
_signers$ = 12						; size = 4
_save_certs PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\smime.c
; Line 751
	mov	eax, DWORD PTR _signerfile$[esp-4]
	test	eax, eax
	jne	SHORT $LN5@save_certs
; Line 752
	mov	eax, 1
; Line 760
	ret	0
$LN5@save_certs:
	push	ebx
; Line 753
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	eax
	call	_BIO_new_file
	mov	ebx, eax
	add	esp, 8
; Line 754
	test	ebx, ebx
	jne	SHORT $LN6@save_certs
	pop	ebx
; Line 760
	ret	0
$LN6@save_certs:
	push	esi
	push	edi
; Line 756
	mov	edi, DWORD PTR _signers$[esp+8]
	xor	esi, esi
	push	edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@save_certs
	npad	6
$LL4@save_certs:
; Line 757
	push	esi
	push	edi
	call	_sk_value
	push	eax
	push	ebx
	call	_PEM_write_bio_X509
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 20					; 00000014H
	cmp	esi, eax
	jl	SHORT $LL4@save_certs
$LN3@save_certs:
; Line 758
	push	ebx
	call	_BIO_free
	add	esp, 4
; Line 759
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
; Line 760
	ret	0
_save_certs ENDP
_TEXT	ENDS
END

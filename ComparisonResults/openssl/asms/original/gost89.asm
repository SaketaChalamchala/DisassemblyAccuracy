; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_GostR3411_94_TestParamSet
PUBLIC	_GostR3411_94_CryptoProParamSet
PUBLIC	_Gost28147_TestParamSet
PUBLIC	_Gost28147_CryptoProParamSetA
PUBLIC	_Gost28147_CryptoProParamSetB
PUBLIC	_Gost28147_CryptoProParamSetC
PUBLIC	_Gost28147_CryptoProParamSetD
PUBLIC	_CryptoProKeyMeshingKey
CONST	SEGMENT
_CryptoProKeyMeshingKey DB 069H
	DB	00H
	DB	072H
	DB	022H
	DB	064H
	DB	0c9H
	DB	04H
	DB	023H
	DB	08dH
	DB	03aH
	DB	0dbH
	DB	096H
	DB	046H
	DB	0e9H
	DB	02aH
	DB	0c4H
	DB	018H
	DB	0feH
	DB	0acH
	DB	094H
	DB	00H
	DB	0edH
	DB	07H
	DB	012H
	DB	0c0H
	DB	086H
	DB	0dcH
	DB	0c2H
	DB	0efH
	DB	04cH
	DB	0a9H
	DB	02bH
CONST	ENDS
_DATA	SEGMENT
_GostR3411_94_TestParamSet DB 01H
	DB	0fH
	DB	0dH
	DB	00H
	DB	05H
	DB	07H
	DB	0aH
	DB	04H
	DB	09H
	DB	02H
	DB	03H
	DB	0eH
	DB	06H
	DB	0bH
	DB	08H
	DB	0cH
	DB	0dH
	DB	0bH
	DB	04H
	DB	01H
	DB	03H
	DB	0fH
	DB	05H
	DB	09H
	DB	00H
	DB	0aH
	DB	0eH
	DB	07H
	DB	06H
	DB	08H
	DB	02H
	DB	0cH
	DB	04H
	DB	0bH
	DB	0aH
	DB	00H
	DB	07H
	DB	02H
	DB	01H
	DB	0dH
	DB	03H
	DB	06H
	DB	08H
	DB	05H
	DB	09H
	DB	0cH
	DB	0fH
	DB	0eH
	DB	06H
	DB	0cH
	DB	07H
	DB	01H
	DB	05H
	DB	0fH
	DB	0dH
	DB	08H
	DB	04H
	DB	0aH
	DB	09H
	DB	0eH
	DB	00H
	DB	03H
	DB	0bH
	DB	02H
	DB	07H
	DB	0dH
	DB	0aH
	DB	01H
	DB	00H
	DB	08H
	DB	09H
	DB	0fH
	DB	0eH
	DB	04H
	DB	06H
	DB	0cH
	DB	0bH
	DB	02H
	DB	05H
	DB	03H
	DB	05H
	DB	08H
	DB	01H
	DB	0dH
	DB	0aH
	DB	03H
	DB	04H
	DB	02H
	DB	0eH
	DB	0fH
	DB	0cH
	DB	07H
	DB	06H
	DB	00H
	DB	09H
	DB	0bH
	DB	0eH
	DB	0bH
	DB	04H
	DB	0cH
	DB	06H
	DB	0dH
	DB	0fH
	DB	0aH
	DB	02H
	DB	03H
	DB	08H
	DB	01H
	DB	00H
	DB	07H
	DB	05H
	DB	09H
	DB	04H
	DB	0aH
	DB	09H
	DB	02H
	DB	0dH
	DB	08H
	DB	00H
	DB	0eH
	DB	06H
	DB	0bH
	DB	01H
	DB	0cH
	DB	07H
	DB	0fH
	DB	05H
	DB	03H
_GostR3411_94_CryptoProParamSet DB 01H
	DB	03H
	DB	0aH
	DB	09H
	DB	05H
	DB	0bH
	DB	04H
	DB	0fH
	DB	08H
	DB	06H
	DB	07H
	DB	0eH
	DB	0dH
	DB	00H
	DB	02H
	DB	0cH
	DB	0dH
	DB	0eH
	DB	04H
	DB	01H
	DB	07H
	DB	00H
	DB	05H
	DB	0aH
	DB	03H
	DB	0cH
	DB	08H
	DB	0fH
	DB	06H
	DB	02H
	DB	09H
	DB	0bH
	DB	07H
	DB	06H
	DB	02H
	DB	04H
	DB	0dH
	DB	09H
	DB	0fH
	DB	00H
	DB	0aH
	DB	01H
	DB	05H
	DB	0bH
	DB	08H
	DB	0eH
	DB	0cH
	DB	03H
	DB	07H
	DB	06H
	DB	04H
	DB	0bH
	DB	09H
	DB	0cH
	DB	02H
	DB	0aH
	DB	01H
	DB	08H
	DB	00H
	DB	0eH
	DB	0fH
	DB	0dH
	DB	03H
	DB	05H
	DB	04H
	DB	0aH
	DB	07H
	DB	0cH
	DB	00H
	DB	0fH
	DB	02H
	DB	08H
	DB	0eH
	DB	01H
	DB	06H
	DB	05H
	DB	0dH
	DB	0bH
	DB	09H
	DB	03H
	DB	07H
	DB	0fH
	DB	0cH
	DB	0eH
	DB	09H
	DB	04H
	DB	01H
	DB	00H
	DB	03H
	DB	0bH
	DB	05H
	DB	02H
	DB	06H
	DB	0aH
	DB	08H
	DB	0dH
	DB	05H
	DB	0fH
	DB	04H
	DB	00H
	DB	02H
	DB	0dH
	DB	0bH
	DB	09H
	DB	01H
	DB	07H
	DB	06H
	DB	03H
	DB	0cH
	DB	0eH
	DB	0aH
	DB	08H
	DB	0aH
	DB	04H
	DB	05H
	DB	06H
	DB	08H
	DB	01H
	DB	03H
	DB	07H
	DB	0dH
	DB	0cH
	DB	0eH
	DB	00H
	DB	09H
	DB	02H
	DB	0bH
	DB	0fH
_Gost28147_TestParamSet DB 0cH
	DB	06H
	DB	05H
	DB	02H
	DB	0bH
	DB	00H
	DB	09H
	DB	0dH
	DB	03H
	DB	0eH
	DB	07H
	DB	0aH
	DB	0fH
	DB	04H
	DB	01H
	DB	08H
	DB	09H
	DB	0bH
	DB	0cH
	DB	00H
	DB	03H
	DB	06H
	DB	07H
	DB	05H
	DB	04H
	DB	08H
	DB	0eH
	DB	0fH
	DB	01H
	DB	0aH
	DB	02H
	DB	0dH
	DB	08H
	DB	0fH
	DB	06H
	DB	0bH
	DB	01H
	DB	09H
	DB	0cH
	DB	05H
	DB	0dH
	DB	03H
	DB	07H
	DB	0aH
	DB	00H
	DB	0eH
	DB	02H
	DB	04H
	DB	03H
	DB	0eH
	DB	05H
	DB	09H
	DB	06H
	DB	08H
	DB	00H
	DB	0dH
	DB	0aH
	DB	0bH
	DB	07H
	DB	0cH
	DB	02H
	DB	01H
	DB	0fH
	DB	04H
	DB	0eH
	DB	09H
	DB	0bH
	DB	02H
	DB	05H
	DB	0fH
	DB	07H
	DB	01H
	DB	00H
	DB	0dH
	DB	0cH
	DB	06H
	DB	0aH
	DB	04H
	DB	03H
	DB	08H
	DB	0dH
	DB	08H
	DB	0eH
	DB	0cH
	DB	07H
	DB	03H
	DB	09H
	DB	0aH
	DB	01H
	DB	05H
	DB	02H
	DB	04H
	DB	06H
	DB	0fH
	DB	00H
	DB	0bH
	DB	0cH
	DB	09H
	DB	0fH
	DB	0eH
	DB	08H
	DB	01H
	DB	03H
	DB	0aH
	DB	02H
	DB	07H
	DB	04H
	DB	0dH
	DB	06H
	DB	00H
	DB	0bH
	DB	05H
	DB	04H
	DB	02H
	DB	0fH
	DB	05H
	DB	09H
	DB	01H
	DB	00H
	DB	08H
	DB	0eH
	DB	03H
	DB	0bH
	DB	0cH
	DB	0dH
	DB	07H
	DB	0aH
	DB	06H
_Gost28147_CryptoProParamSetA DB 0bH
	DB	0aH
	DB	0fH
	DB	05H
	DB	00H
	DB	0cH
	DB	0eH
	DB	08H
	DB	06H
	DB	02H
	DB	03H
	DB	09H
	DB	01H
	DB	07H
	DB	0dH
	DB	04H
	DB	01H
	DB	0dH
	DB	02H
	DB	09H
	DB	07H
	DB	0aH
	DB	06H
	DB	00H
	DB	08H
	DB	0cH
	DB	04H
	DB	05H
	DB	0fH
	DB	03H
	DB	0bH
	DB	0eH
	DB	03H
	DB	0aH
	DB	0dH
	DB	0cH
	DB	01H
	DB	02H
	DB	00H
	DB	0bH
	DB	07H
	DB	05H
	DB	09H
	DB	04H
	DB	08H
	DB	0fH
	DB	0eH
	DB	06H
	DB	0bH
	DB	05H
	DB	01H
	DB	09H
	DB	08H
	DB	0dH
	DB	0fH
	DB	00H
	DB	0eH
	DB	04H
	DB	02H
	DB	03H
	DB	0cH
	DB	07H
	DB	0aH
	DB	06H
	DB	0eH
	DB	07H
	DB	0aH
	DB	0cH
	DB	0dH
	DB	01H
	DB	03H
	DB	09H
	DB	00H
	DB	02H
	DB	0bH
	DB	04H
	DB	0fH
	DB	08H
	DB	05H
	DB	06H
	DB	0eH
	DB	04H
	DB	06H
	DB	02H
	DB	0bH
	DB	03H
	DB	0dH
	DB	08H
	DB	0cH
	DB	0fH
	DB	05H
	DB	0aH
	DB	00H
	DB	07H
	DB	01H
	DB	09H
	DB	03H
	DB	07H
	DB	0eH
	DB	09H
	DB	08H
	DB	0aH
	DB	0fH
	DB	00H
	DB	05H
	DB	02H
	DB	06H
	DB	0cH
	DB	0bH
	DB	04H
	DB	0dH
	DB	01H
	DB	09H
	DB	06H
	DB	03H
	DB	02H
	DB	08H
	DB	0bH
	DB	01H
	DB	07H
	DB	0aH
	DB	04H
	DB	0eH
	DB	0fH
	DB	0cH
	DB	00H
	DB	0dH
	DB	05H
_Gost28147_CryptoProParamSetB DB 00H
	DB	04H
	DB	0bH
	DB	0eH
	DB	08H
	DB	03H
	DB	07H
	DB	01H
	DB	0aH
	DB	02H
	DB	09H
	DB	06H
	DB	0fH
	DB	0dH
	DB	05H
	DB	0cH
	DB	05H
	DB	02H
	DB	0aH
	DB	0bH
	DB	09H
	DB	01H
	DB	0cH
	DB	03H
	DB	07H
	DB	04H
	DB	0dH
	DB	00H
	DB	06H
	DB	0fH
	DB	08H
	DB	0eH
	DB	08H
	DB	03H
	DB	02H
	DB	06H
	DB	04H
	DB	0dH
	DB	0eH
	DB	0bH
	DB	0cH
	DB	01H
	DB	07H
	DB	0fH
	DB	0aH
	DB	00H
	DB	09H
	DB	05H
	DB	02H
	DB	07H
	DB	0cH
	DB	0fH
	DB	09H
	DB	05H
	DB	0aH
	DB	0bH
	DB	01H
	DB	04H
	DB	00H
	DB	0dH
	DB	06H
	DB	08H
	DB	0eH
	DB	03H
	DB	07H
	DB	05H
	DB	00H
	DB	0dH
	DB	0bH
	DB	06H
	DB	01H
	DB	02H
	DB	03H
	DB	0aH
	DB	0cH
	DB	0fH
	DB	04H
	DB	0eH
	DB	09H
	DB	08H
	DB	0eH
	DB	0cH
	DB	00H
	DB	0aH
	DB	09H
	DB	02H
	DB	0dH
	DB	0bH
	DB	07H
	DB	05H
	DB	08H
	DB	0fH
	DB	03H
	DB	06H
	DB	01H
	DB	04H
	DB	00H
	DB	01H
	DB	02H
	DB	0aH
	DB	04H
	DB	0dH
	DB	05H
	DB	0cH
	DB	09H
	DB	07H
	DB	03H
	DB	0fH
	DB	0bH
	DB	08H
	DB	06H
	DB	0eH
	DB	08H
	DB	04H
	DB	0bH
	DB	01H
	DB	03H
	DB	05H
	DB	00H
	DB	09H
	DB	02H
	DB	0eH
	DB	0aH
	DB	0cH
	DB	0dH
	DB	06H
	DB	07H
	DB	0fH
_Gost28147_CryptoProParamSetC DB 07H
	DB	04H
	DB	00H
	DB	05H
	DB	0aH
	DB	02H
	DB	0fH
	DB	0eH
	DB	0cH
	DB	06H
	DB	01H
	DB	0bH
	DB	0dH
	DB	09H
	DB	03H
	DB	08H
	DB	0aH
	DB	09H
	DB	06H
	DB	08H
	DB	0dH
	DB	0eH
	DB	02H
	DB	00H
	DB	0fH
	DB	03H
	DB	05H
	DB	0bH
	DB	04H
	DB	01H
	DB	0cH
	DB	07H
	DB	0cH
	DB	09H
	DB	0bH
	DB	01H
	DB	08H
	DB	0eH
	DB	02H
	DB	04H
	DB	07H
	DB	03H
	DB	06H
	DB	05H
	DB	0aH
	DB	00H
	DB	0fH
	DB	0dH
	DB	08H
	DB	0dH
	DB	0bH
	DB	00H
	DB	04H
	DB	05H
	DB	01H
	DB	02H
	DB	09H
	DB	03H
	DB	0cH
	DB	0eH
	DB	06H
	DB	0fH
	DB	0aH
	DB	07H
	DB	03H
	DB	06H
	DB	00H
	DB	01H
	DB	05H
	DB	0dH
	DB	0aH
	DB	08H
	DB	0bH
	DB	02H
	DB	09H
	DB	07H
	DB	0eH
	DB	0fH
	DB	0cH
	DB	04H
	DB	08H
	DB	02H
	DB	05H
	DB	00H
	DB	04H
	DB	09H
	DB	0fH
	DB	0aH
	DB	03H
	DB	07H
	DB	0cH
	DB	0dH
	DB	06H
	DB	0eH
	DB	01H
	DB	0bH
	DB	00H
	DB	01H
	DB	07H
	DB	0dH
	DB	0bH
	DB	04H
	DB	05H
	DB	02H
	DB	08H
	DB	0eH
	DB	0fH
	DB	0cH
	DB	09H
	DB	0aH
	DB	06H
	DB	03H
	DB	01H
	DB	0bH
	DB	0cH
	DB	02H
	DB	09H
	DB	0dH
	DB	00H
	DB	0fH
	DB	04H
	DB	05H
	DB	08H
	DB	0eH
	DB	0aH
	DB	07H
	DB	06H
	DB	03H
_Gost28147_CryptoProParamSetD DB 01H
	DB	0aH
	DB	06H
	DB	08H
	DB	0fH
	DB	0bH
	DB	00H
	DB	04H
	DB	0cH
	DB	03H
	DB	05H
	DB	09H
	DB	07H
	DB	0dH
	DB	02H
	DB	0eH
	DB	03H
	DB	00H
	DB	06H
	DB	0fH
	DB	01H
	DB	0eH
	DB	09H
	DB	02H
	DB	0dH
	DB	08H
	DB	0cH
	DB	04H
	DB	0bH
	DB	0aH
	DB	05H
	DB	07H
	DB	08H
	DB	00H
	DB	0fH
	DB	03H
	DB	02H
	DB	05H
	DB	0eH
	DB	0bH
	DB	01H
	DB	0aH
	DB	04H
	DB	07H
	DB	0cH
	DB	09H
	DB	0dH
	DB	06H
	DB	00H
	DB	0cH
	DB	08H
	DB	09H
	DB	0dH
	DB	02H
	DB	0aH
	DB	0bH
	DB	07H
	DB	03H
	DB	06H
	DB	05H
	DB	04H
	DB	0eH
	DB	0fH
	DB	01H
	DB	01H
	DB	05H
	DB	0eH
	DB	0cH
	DB	0aH
	DB	07H
	DB	00H
	DB	0dH
	DB	06H
	DB	02H
	DB	0bH
	DB	04H
	DB	09H
	DB	03H
	DB	0fH
	DB	08H
	DB	01H
	DB	0cH
	DB	0bH
	DB	00H
	DB	0fH
	DB	0eH
	DB	06H
	DB	05H
	DB	0aH
	DB	0dH
	DB	04H
	DB	08H
	DB	09H
	DB	03H
	DB	07H
	DB	02H
	DB	0bH
	DB	06H
	DB	03H
	DB	04H
	DB	0cH
	DB	0fH
	DB	0eH
	DB	02H
	DB	07H
	DB	0dH
	DB	08H
	DB	00H
	DB	05H
	DB	0aH
	DB	09H
	DB	01H
	DB	0fH
	DB	0cH
	DB	02H
	DB	0aH
	DB	06H
	DB	04H
	DB	05H
	DB	00H
	DB	07H
	DB	09H
	DB	0eH
	DB	0dH
	DB	01H
	DB	0bH
	DB	08H
	DB	03H
_DATA	ENDS
PUBLIC	_gost_enc
PUBLIC	_gost_dec
PUBLIC	_gost_enc_cfb
PUBLIC	_gost_dec_cfb
PUBLIC	_gostcrypt
PUBLIC	_gostdecrypt
PUBLIC	_gost_key
PUBLIC	_gost_get_key
PUBLIC	_gost_init
PUBLIC	_gost_destroy
PUBLIC	_gost_enc_with_key
PUBLIC	_gost_mac
PUBLIC	_gost_mac_iv
PUBLIC	_mac_block
PUBLIC	_get_mac
PUBLIC	_cryptopro_key_meshing
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogtpy
;	COMDAT _f
_TEXT	SEGMENT
_c$ = 8							; size = 4
_x$ = 12						; size = 4
_f	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 234
	push	ebx
; Line 238
	mov	ebx, DWORD PTR _x$[esp]
	mov	eax, ebx
	shr	eax, 8
	movzx	edx, al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	push	esi
	mov	esi, DWORD PTR _c$[esp+4]
	movzx	ecx, al
	mov	eax, DWORD PTR [esi+edx*4+2080]
	or	eax, DWORD PTR [esi+ecx*4+1056]
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	or	eax, DWORD PTR [esi+ecx*4+32]
	movzx	ecx, bl
	or	eax, DWORD PTR [esi+ecx*4+3104]
	pop	esi
	rol	eax, 11					; 0000000bH
	pop	ebx
; Line 239
	ret	0
_f	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _kboxinit
_TEXT	SEGMENT
_c$ = 8							; size = 4
_b$ = 12						; size = 4
_kboxinit PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 223
	mov	eax, DWORD PTR _c$[esp-4]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _b$[esp+4]
	xor	ebx, ebx
	push	esi
	push	edi
	add	eax, 1056				; 00000420H
$LL4@kboxinit:
; Line 224
	mov	edi, ebx
	lea	eax, DWORD PTR [eax+4]
	sar	edi, 4
	mov	esi, ebx
	add	edi, ebp
	and	esi, 15					; 0000000fH
	add	esi, ebp
	inc	ebx
	movzx	edx, BYTE PTR [edi]
	movzx	ecx, BYTE PTR [esi+16]
	shl	edx, 4
	or	edx, ecx
	shl	edx, 24					; 00000018H
	mov	DWORD PTR [eax-1028], edx
; Line 225
	movzx	edx, BYTE PTR [edi+32]
	movzx	ecx, BYTE PTR [esi+48]
	shl	edx, 4
	or	edx, ecx
	shl	edx, 16					; 00000010H
	mov	DWORD PTR [eax-4], edx
; Line 226
	movzx	edx, BYTE PTR [edi+64]
	movzx	ecx, BYTE PTR [esi+80]
	shl	edx, 4
	or	edx, ecx
	shl	edx, 8
	mov	DWORD PTR [eax+1020], edx
; Line 227
	movzx	edx, BYTE PTR [edi+96]
	movzx	ecx, BYTE PTR [esi+112]
	shl	edx, 4
	or	edx, ecx
	mov	DWORD PTR [eax+2044], edx
	cmp	ebx, 256				; 00000100H
	jl	SHORT $LL4@kboxinit
; Line 230
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
_kboxinit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cryptopro_key_meshing
_TEXT	SEGMENT
_newiv$ = -44						; size = 8
_newkey$ = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_iv$ = 12						; size = 4
_cryptopro_key_meshing PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 566
	mov	eax, 44					; 0000002cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+44], eax
	push	ebx
	mov	ebx, DWORD PTR _ctx$[esp+44]
	push	ebp
	mov	ebp, DWORD PTR _iv$[esp+48]
	push	esi
; Line 363
	xor	esi, esi
	push	edi
	lea	edi, DWORD PTR [esi+4]
$LL6@cryptopro_:
; Line 364
	lea	eax, DWORD PTR _newkey$[esp+60]
	add	eax, esi
	push	eax
	lea	eax, DWORD PTR _CryptoProKeyMeshingKey[esi]
	push	eax
	push	ebx
	call	_gostdecrypt
	add	esp, 12					; 0000000cH
	add	esi, 8
; Line 363
	sub	edi, 1
	jne	SHORT $LL6@cryptopro_
; Line 572
	lea	eax, DWORD PTR _newkey$[esp+60]
	push	eax
	push	ebx
	call	_gost_key
; Line 574
	lea	eax, DWORD PTR _newiv$[esp+68]
	push	eax
	push	ebp
	push	ebx
	call	_gostcrypt
; Line 575
	mov	eax, DWORD PTR _newiv$[esp+80]
	add	esp, 20					; 00000014H
; Line 576
	mov	ecx, DWORD PTR __$ArrayPad$[esp+60]
	mov	DWORD PTR [ebp], eax
	mov	eax, DWORD PTR _newiv$[esp+64]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebp+4], eax
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 44					; 0000002cH
	ret	0
_cryptopro_key_meshing ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_mac
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
_nbits$ = 12						; size = 4
_out$ = 16						; size = 4
_get_mac PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 502
	push	ebx
	push	ebp
	push	esi
; Line 503
	mov	esi, DWORD PTR _nbits$[esp+8]
	mov	edx, esi
	sar	edx, 3
; Line 504
	and	esi, 7
; Line 505
	je	SHORT $LN7@get_mac
	xor	ebx, ebx
	cmp	esi, 1
	setg	bl
	dec	ebx
	jmp	SHORT $LN8@get_mac
$LN7@get_mac:
	xor	ebx, ebx
$LN8@get_mac:
; Line 507
	xor	ebp, ebp
	test	edx, edx
	jle	SHORT $LN3@get_mac
	mov	ecx, DWORD PTR _out$[esp+8]
	mov	ebp, edx
	push	edi
	mov	edi, DWORD PTR _buffer$[esp+12]
	sub	edi, ecx
$LL11@get_mac:
; Line 508
	mov	al, BYTE PTR [edi+ecx]
	lea	ecx, DWORD PTR [ecx+1]
	mov	BYTE PTR [ecx-1], al
	sub	edx, 1
	jne	SHORT $LL11@get_mac
	pop	edi
$LN3@get_mac:
; Line 509
	test	esi, esi
	je	SHORT $LN5@get_mac
; Line 510
	mov	eax, DWORD PTR _buffer$[esp+8]
	mov	ecx, DWORD PTR _out$[esp+8]
	mov	al, BYTE PTR [eax+ebp]
	and	al, bl
	mov	BYTE PTR [ecx+ebp], al
$LN5@get_mac:
; Line 511
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
_get_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mac_block
_TEXT	SEGMENT
_n1$1$ = -12						; size = 4
_n2$1$ = -8						; size = 4
tv2189 = -4						; size = 4
_c$ = 8							; size = 4
_buffer$ = 12						; size = 4
_block$ = 16						; size = 4
_mac_block PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 460
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 464
	mov	ecx, DWORD PTR _block$[esp+8]
	push	ebx
	push	ebp
	push	esi
	movzx	eax, BYTE PTR [ecx]
; Line 472
	mov	esi, DWORD PTR _c$[esp+20]
	push	edi
	mov	edi, DWORD PTR _buffer$[esp+24]
	xor	BYTE PTR [edi], al
	movzx	eax, BYTE PTR [ecx+1]
	xor	BYTE PTR [edi+1], al
	movzx	eax, BYTE PTR [ecx+2]
	xor	BYTE PTR [edi+2], al
	movzx	eax, BYTE PTR [ecx+3]
	xor	BYTE PTR [edi+3], al
	movzx	eax, BYTE PTR [ecx+4]
	xor	BYTE PTR [edi+4], al
	movzx	eax, BYTE PTR [ecx+5]
	xor	BYTE PTR [edi+5], al
	movzx	eax, BYTE PTR [ecx+6]
	xor	BYTE PTR [edi+6], al
	movzx	eax, BYTE PTR [ecx+7]
	xor	BYTE PTR [edi+7], al
	movzx	ecx, BYTE PTR [edi+3]
	movzx	eax, BYTE PTR [edi+2]
	shl	ecx, 8
	or	ecx, eax
	mov	edx, DWORD PTR [esi]
	movzx	eax, BYTE PTR [edi+1]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edi]
	shl	ecx, 8
	or	ecx, eax
	add	edx, ecx
	mov	DWORD PTR _n1$1$[esp+28], ecx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 472
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 473
	mov	edx, DWORD PTR [esi+4]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 468
	movzx	eax, BYTE PTR [edi+6]
; Line 472
	rol	ecx, 11					; 0000000bH
	mov	DWORD PTR _n2$1$[esp+28], ecx
	movzx	ecx, BYTE PTR [edi+7]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edi+5]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edi+4]
	mov	edi, DWORD PTR _n2$1$[esp+28]
	shl	ecx, 8
	or	ecx, eax
	xor	edi, ecx
; Line 473
	add	edx, edi
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 473
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 473
	rol	ecx, 11					; 0000000bH
	mov	ebx, DWORD PTR _n1$1$[esp+28]
; Line 474
	mov	edx, DWORD PTR [esi+8]
	xor	ebx, ecx
	add	edx, ebx
; Line 476
	mov	ebp, DWORD PTR [esi+16]
	mov	eax, edx
	mov	DWORD PTR tv2189[esp+28], ebp
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 474
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 475
	mov	edx, DWORD PTR [esi+12]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 474
	rol	ecx, 11					; 0000000bH
	xor	edi, ecx
; Line 475
	add	edx, edi
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 475
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 475
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
	mov	DWORD PTR _n1$1$[esp+28], ebx
; Line 476
	lea	edx, DWORD PTR [ebx+ebp]
; Line 477
	mov	ebx, DWORD PTR [esi+20]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 476
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 476
	rol	ecx, 11					; 0000000bH
	xor	edi, ecx
	mov	DWORD PTR _n2$1$[esp+28], edi
; Line 477
	lea	edx, DWORD PTR [ebx+edi]
; Line 478
	mov	edi, DWORD PTR [esi+24]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 477
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 477
	mov	eax, DWORD PTR _n1$1$[esp+28]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+28], eax
; Line 478
	lea	edx, DWORD PTR [edi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 478
	mov	eax, edx
; Line 235
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
; Line 478
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ebp, DWORD PTR _c$[esp+24]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 478
	mov	eax, DWORD PTR _n2$1$[esp+28]
; Line 479
	mov	esi, DWORD PTR [esi+28]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+28], eax
	lea	edx, DWORD PTR [esi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 479
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 479
	mov	ebp, DWORD PTR _n1$1$[esp+28]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 481
	mov	edx, DWORD PTR [edx]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n1$1$[esp+28], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+24]
; Line 481
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 481
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 481
	mov	ebp, DWORD PTR _n2$1$[esp+28]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 482
	mov	edx, DWORD PTR [edx+4]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n2$1$[esp+28], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+24]
; Line 482
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 482
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 482
	mov	ebp, DWORD PTR _n1$1$[esp+28]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 483
	mov	edx, DWORD PTR [edx+8]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n1$1$[esp+28], ebp
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
	mov	ebp, DWORD PTR _c$[esp+24]
; Line 483
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 483
	mov	ebp, DWORD PTR _n2$1$[esp+28]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 484
	mov	edx, DWORD PTR [edx+12]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n2$1$[esp+28], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+24]
; Line 484
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 484
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 484
	mov	eax, DWORD PTR _n1$1$[esp+28]
; Line 485
	mov	edx, DWORD PTR tv2189[esp+28]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	add	edx, eax
	mov	DWORD PTR _n1$1$[esp+28], eax
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 485
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [ebp+eax*4+3104]
; Line 485
	mov	eax, DWORD PTR _n2$1$[esp+28]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+28], eax
; Line 486
	lea	edx, DWORD PTR [ebx+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 486
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [ebp+eax*4+3104]
; Line 486
	mov	eax, DWORD PTR _n1$1$[esp+28]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+28], eax
; Line 487
	lea	edx, DWORD PTR [edi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 487
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
; Line 487
	mov	ebx, DWORD PTR _n2$1$[esp+28]
; Line 235
	shr	eax, 24					; 00000018H
	pop	edi
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [ebp+eax*4+3104]
; Line 487
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
; Line 488
	lea	edx, DWORD PTR [esi+ebx]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 488
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	pop	esi
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
; Line 488
	mov	edx, DWORD PTR _n1$1$[esp+20]
; Line 235
	or	ecx, DWORD PTR [ebp+eax*4+3104]
; Line 488
	rol	ecx, 11					; 0000000bH
	xor	edx, ecx
; Line 490
	mov	ecx, DWORD PTR _buffer$[esp+16]
; Line 491
	mov	eax, edx
	shr	eax, 8
	pop	ebp
	mov	BYTE PTR [ecx+1], al
; Line 492
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+2], al
; Line 495
	mov	eax, ebx
	shr	eax, 8
	mov	BYTE PTR [ecx+5], al
; Line 496
	mov	eax, ebx
	mov	BYTE PTR [ecx], dl
	shr	edx, 24					; 00000018H
	mov	BYTE PTR [ecx+4], bl
	shr	eax, 16					; 00000010H
; Line 497
	shr	ebx, 24					; 00000018H
	mov	BYTE PTR [ecx+7], bl
	mov	BYTE PTR [ecx+3], dl
	mov	BYTE PTR [ecx+6], al
	pop	ebx
; Line 498
	add	esp, 12					; 0000000cH
	ret	0
_mac_block ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_mac_iv
_TEXT	SEGMENT
_mac$GSCopy$1$ = -24					; size = 4
_data$GSCopy$1$ = -20					; size = 4
_buf2$ = -20						; size = 8
_buffer$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_mac_len$ = 12						; size = 4
_iv$ = 16						; size = 4
_data$ = 20						; size = 4
_data_len$ = 24						; size = 4
_mac$ = 28						; size = 4
_gost_mac_iv PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 543
	mov	eax, 24					; 00000018H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+24], eax
	mov	ecx, DWORD PTR _iv$[esp+20]
	mov	eax, DWORD PTR _mac$[esp+20]
	mov	edx, DWORD PTR _data$[esp+20]
	push	ebx
; Line 548
	mov	ebx, DWORD PTR _data_len$[esp+24]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+28]
	push	esi
	mov	DWORD PTR _mac$GSCopy$1$[esp+36], eax
	mov	eax, DWORD PTR [ecx]
	push	edi
	mov	DWORD PTR _buffer$[esp+40], eax
	xor	edi, edi
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _data$GSCopy$1$[esp+40], edx
	mov	DWORD PTR _buffer$[esp+44], eax
	cmp	ebx, 8
	jb	SHORT $LN3@gost_mac_i
	mov	esi, 8
	npad	2
$LL4@gost_mac_i:
	lea	eax, DWORD PTR [edx-8]
	add	eax, esi
; Line 549
	push	eax
	lea	eax, DWORD PTR _buffer$[esp+44]
	push	eax
	push	ebp
	call	_mac_block
	mov	edx, DWORD PTR _data$GSCopy$1$[esp+52]
	add	esi, 8
	add	esp, 12					; 0000000cH
	add	edi, 8
	cmp	esi, ebx
	jbe	SHORT $LL4@gost_mac_i
$LN3@gost_mac_i:
; Line 550
	cmp	edi, ebx
	jae	SHORT $LN5@gost_mac_i
; Line 552
	sub	ebx, edi
	lea	eax, DWORD PTR [edx+edi]
	push	ebx
	push	eax
	lea	eax, DWORD PTR _buf2$[esp+48]
	xorps	xmm0, xmm0
	push	eax
	movq	QWORD PTR _buf2$[esp+52], xmm0
	call	_memcpy
; Line 553
	lea	eax, DWORD PTR _buf2$[esp+52]
	push	eax
	lea	eax, DWORD PTR _buffer$[esp+56]
	push	eax
	push	ebp
	call	_mac_block
	add	esp, 24					; 00000018H
; Line 554
	add	edi, 8
$LN5@gost_mac_i:
; Line 556
	cmp	edi, 8
	jne	SHORT $LN6@gost_mac_i
; Line 558
	lea	eax, DWORD PTR _buf2$[esp+40]
	xorps	xmm0, xmm0
	push	eax
	lea	eax, DWORD PTR _buffer$[esp+44]
	movq	QWORD PTR _buf2$[esp+44], xmm0
	push	eax
	push	ebp
	call	_mac_block
	add	esp, 12					; 0000000cH
$LN6@gost_mac_i:
; Line 503
	mov	esi, DWORD PTR _mac_len$[esp+36]
	mov	edi, esi
	sar	edi, 3
; Line 504
	and	esi, 7
; Line 505
	je	SHORT $LN14@gost_mac_i
	xor	ebx, ebx
	cmp	esi, 1
	setg	bl
	dec	ebx
	jmp	SHORT $LN15@gost_mac_i
$LN14@gost_mac_i:
	xor	ebx, ebx
$LN15@gost_mac_i:
; Line 507
	mov	ebp, DWORD PTR _mac$GSCopy$1$[esp+40]
	xor	ecx, ecx
	test	edi, edi
	jle	SHORT $LN20@gost_mac_i
	push	edi
	lea	eax, DWORD PTR _buffer$[esp+44]
	push	eax
	push	ebp
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, edi
$LN20@gost_mac_i:
; Line 509
	test	esi, esi
	je	SHORT $LN26@gost_mac_i
; Line 510
	mov	al, BYTE PTR _buffer$[esp+ecx+40]
	and	al, bl
	mov	BYTE PTR [ecx+ebp], al
$LN26@gost_mac_i:
; Line 562
	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
_gost_mac_iv ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_mac
_TEXT	SEGMENT
_mac$GSCopy$1$ = -24					; size = 4
_buffer$ = -20						; size = 8
_data$GSCopy$1$ = -12					; size = 4
_buf2$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_mac_len$ = 12						; size = 4
_data$ = 16						; size = 4
_data_len$ = 20						; size = 4
_mac$ = 24						; size = 4
_gost_mac PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 519
	mov	eax, 24					; 00000018H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+24], eax
	mov	ecx, DWORD PTR _data$[esp+20]
	mov	eax, DWORD PTR _mac$[esp+20]
	push	ebx
; Line 523
	mov	ebx, DWORD PTR _data_len$[esp+24]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+28]
	push	esi
	push	edi
	xor	edi, edi
	mov	DWORD PTR _data$GSCopy$1$[esp+40], ecx
	mov	DWORD PTR _mac$GSCopy$1$[esp+40], eax
	mov	DWORD PTR _buffer$[esp+40], 0
	mov	DWORD PTR _buffer$[esp+44], 0
	cmp	ebx, 8
	jb	SHORT $LN3@gost_mac
	mov	esi, 8
	npad	3
$LL4@gost_mac:
	lea	eax, DWORD PTR [ecx-8]
	add	eax, esi
; Line 524
	push	eax
	lea	eax, DWORD PTR _buffer$[esp+44]
	push	eax
	push	ebp
	call	_mac_block
	mov	ecx, DWORD PTR _data$GSCopy$1$[esp+52]
	add	esi, 8
	add	esp, 12					; 0000000cH
	add	edi, 8
	cmp	esi, ebx
	jbe	SHORT $LL4@gost_mac
$LN3@gost_mac:
; Line 525
	cmp	edi, ebx
	jae	SHORT $LN5@gost_mac
; Line 527
	sub	ebx, edi
	lea	eax, DWORD PTR [ecx+edi]
	push	ebx
	push	eax
	lea	eax, DWORD PTR _buf2$[esp+48]
	xorps	xmm0, xmm0
	push	eax
	movq	QWORD PTR _buf2$[esp+52], xmm0
	call	_memcpy
; Line 528
	lea	eax, DWORD PTR _buf2$[esp+52]
	push	eax
	lea	eax, DWORD PTR _buffer$[esp+56]
	push	eax
	push	ebp
	call	_mac_block
	add	esp, 24					; 00000018H
; Line 529
	add	edi, 8
$LN5@gost_mac:
; Line 531
	cmp	edi, 8
	jne	SHORT $LN6@gost_mac
; Line 533
	lea	eax, DWORD PTR _buf2$[esp+40]
	xorps	xmm0, xmm0
	push	eax
	lea	eax, DWORD PTR _buffer$[esp+44]
	movq	QWORD PTR _buf2$[esp+44], xmm0
	push	eax
	push	ebp
	call	_mac_block
	add	esp, 12					; 0000000cH
$LN6@gost_mac:
; Line 503
	mov	esi, DWORD PTR _mac_len$[esp+36]
	mov	edi, esi
	sar	edi, 3
; Line 504
	and	esi, 7
; Line 505
	je	SHORT $LN14@gost_mac
	xor	ebx, ebx
	cmp	esi, 1
	setg	bl
	dec	ebx
	jmp	SHORT $LN15@gost_mac
$LN14@gost_mac:
	xor	ebx, ebx
$LN15@gost_mac:
; Line 507
	mov	ebp, DWORD PTR _mac$GSCopy$1$[esp+40]
	xor	ecx, ecx
	test	edi, edi
	jle	SHORT $LN20@gost_mac
	push	edi
	lea	eax, DWORD PTR _buffer$[esp+44]
	push	eax
	push	ebp
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	ecx, edi
$LN20@gost_mac:
; Line 509
	test	esi, esi
	je	SHORT $LN26@gost_mac
; Line 510
	mov	al, BYTE PTR _buffer$[esp+ecx+40]
	and	al, bl
	mov	BYTE PTR [ecx+ebp], al
$LN26@gost_mac:
; Line 537
	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
_gost_mac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_enc_with_key
_TEXT	SEGMENT
_c$ = 8							; size = 4
_key$ = 12						; size = 4
_inblock$ = 16						; size = 4
_outblock$ = 20						; size = 4
_gost_enc_with_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 410
	push	DWORD PTR _key$[esp-4]
	push	DWORD PTR _c$[esp]
	call	_gost_key
; Line 411
	push	DWORD PTR _outblock$[esp+4]
	push	DWORD PTR _inblock$[esp+8]
	push	DWORD PTR _c$[esp+12]
	call	_gostcrypt
	add	esp, 20					; 00000014H
; Line 412
	ret	0
_gost_enc_with_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_destroy
_TEXT	SEGMENT
_c$ = 8							; size = 4
_gost_destroy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 451
	mov	eax, DWORD PTR _c$[esp-4]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
	mov	DWORD PTR [eax+16], 0
	mov	DWORD PTR [eax+20], 0
	mov	DWORD PTR [eax+24], 0
	mov	DWORD PTR [eax+28], 0
; Line 452
	ret	0
_gost_destroy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_b$ = 12						; size = 4
_gost_init PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 440
	mov	eax, DWORD PTR _b$[esp-4]
	mov	ecx, OFFSET _GostR3411_94_TestParamSet
	test	eax, eax
	cmovne	ecx, eax
; Line 443
	mov	DWORD PTR _b$[esp-4], ecx
	jmp	_kboxinit
_gost_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_get_key
_TEXT	SEGMENT
_c$ = 8							; size = 4
_k$ = 12						; size = 4
_gost_get_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 430
	mov	edx, DWORD PTR _c$[esp-4]
	mov	ecx, DWORD PTR _k$[esp-4]
	movzx	eax, BYTE PTR [edx]
	mov	BYTE PTR [ecx], al
; Line 431
	movzx	eax, BYTE PTR [edx+1]
	mov	BYTE PTR [ecx+1], al
; Line 432
	movzx	eax, BYTE PTR [edx+2]
	mov	BYTE PTR [ecx+2], al
; Line 433
	movzx	eax, BYTE PTR [edx+3]
	mov	BYTE PTR [ecx+3], al
	movzx	eax, BYTE PTR [edx+4]
	mov	BYTE PTR [ecx+4], al
	movzx	eax, BYTE PTR [edx+5]
	mov	BYTE PTR [ecx+5], al
	movzx	eax, BYTE PTR [edx+6]
	mov	BYTE PTR [ecx+6], al
	movzx	eax, BYTE PTR [edx+7]
	mov	BYTE PTR [ecx+7], al
	movzx	eax, BYTE PTR [edx+8]
	mov	BYTE PTR [ecx+8], al
	movzx	eax, BYTE PTR [edx+9]
	mov	BYTE PTR [ecx+9], al
	movzx	eax, BYTE PTR [edx+10]
	mov	BYTE PTR [ecx+10], al
	movzx	eax, BYTE PTR [edx+11]
	mov	BYTE PTR [ecx+11], al
	movzx	eax, BYTE PTR [edx+12]
	mov	BYTE PTR [ecx+12], al
	movzx	eax, BYTE PTR [edx+13]
	mov	BYTE PTR [ecx+13], al
	movzx	eax, BYTE PTR [edx+14]
	mov	BYTE PTR [ecx+14], al
	movzx	eax, BYTE PTR [edx+15]
	mov	BYTE PTR [ecx+15], al
	movzx	eax, BYTE PTR [edx+16]
	mov	BYTE PTR [ecx+16], al
	movzx	eax, BYTE PTR [edx+17]
	mov	BYTE PTR [ecx+17], al
	movzx	eax, BYTE PTR [edx+18]
	mov	BYTE PTR [ecx+18], al
	movzx	eax, BYTE PTR [edx+19]
	mov	BYTE PTR [ecx+19], al
	movzx	eax, BYTE PTR [edx+20]
	mov	BYTE PTR [ecx+20], al
	movzx	eax, BYTE PTR [edx+21]
	mov	BYTE PTR [ecx+21], al
	movzx	eax, BYTE PTR [edx+22]
	mov	BYTE PTR [ecx+22], al
	movzx	eax, BYTE PTR [edx+23]
	mov	BYTE PTR [ecx+23], al
	movzx	eax, BYTE PTR [edx+24]
	mov	BYTE PTR [ecx+24], al
	movzx	eax, BYTE PTR [edx+25]
	mov	BYTE PTR [ecx+25], al
	movzx	eax, BYTE PTR [edx+26]
	mov	BYTE PTR [ecx+26], al
	movzx	eax, BYTE PTR [edx+27]
	mov	BYTE PTR [ecx+27], al
	movzx	eax, BYTE PTR [edx+28]
	mov	BYTE PTR [ecx+28], al
	movzx	eax, BYTE PTR [edx+29]
	mov	BYTE PTR [ecx+29], al
	movzx	eax, BYTE PTR [edx+30]
	mov	BYTE PTR [ecx+30], al
	movzx	eax, BYTE PTR [edx+31]
	mov	BYTE PTR [ecx+31], al
; Line 435
	ret	0
_gost_get_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_key
_TEXT	SEGMENT
_c$ = 8							; size = 4
_k$ = 12						; size = 4
_gost_key PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 419
	mov	edx, DWORD PTR _c$[esp-4]
	push	esi
	mov	esi, DWORD PTR _k$[esp]
	movzx	ecx, BYTE PTR [esi+3]
	shl	ecx, 8
	movzx	eax, BYTE PTR [esi+2]
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+1]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi]
	shl	ecx, 8
	or	ecx, eax
	mov	DWORD PTR [edx], ecx
	movzx	ecx, BYTE PTR [esi+7]
	shl	ecx, 8
	movzx	eax, BYTE PTR [esi+6]
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+5]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+4]
	shl	ecx, 8
	or	ecx, eax
	mov	DWORD PTR [edx+4], ecx
	movzx	ecx, BYTE PTR [esi+11]
	movzx	eax, BYTE PTR [esi+10]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+9]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+8]
	shl	ecx, 8
	or	ecx, eax
	mov	DWORD PTR [edx+8], ecx
	movzx	ecx, BYTE PTR [esi+15]
	movzx	eax, BYTE PTR [esi+14]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+13]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+12]
	shl	ecx, 8
	or	ecx, eax
	mov	DWORD PTR [edx+12], ecx
	movzx	ecx, BYTE PTR [esi+19]
	movzx	eax, BYTE PTR [esi+18]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+17]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+16]
	shl	ecx, 8
	or	ecx, eax
	mov	DWORD PTR [edx+16], ecx
	movzx	ecx, BYTE PTR [esi+23]
	movzx	eax, BYTE PTR [esi+22]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+21]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+20]
	shl	ecx, 8
	or	ecx, eax
	mov	DWORD PTR [edx+20], ecx
	movzx	ecx, BYTE PTR [esi+27]
	movzx	eax, BYTE PTR [esi+26]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+25]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+24]
	shl	ecx, 8
	or	ecx, eax
	mov	DWORD PTR [edx+24], ecx
	movzx	ecx, BYTE PTR [esi+31]
	movzx	eax, BYTE PTR [esi+30]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+29]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+28]
	shl	ecx, 8
	or	ecx, eax
	mov	DWORD PTR [edx+28], ecx
	pop	esi
; Line 423
	ret	0
_gost_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gostdecrypt
_TEXT	SEGMENT
_n2$1$ = -8						; size = 4
tv2596 = -4						; size = 4
_c$ = 8							; size = 4
_n1$1$ = 12						; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
_gostdecrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 297
	mov	eax, 8
	call	__chkstk
	push	ebx
; Line 302
	mov	ebx, DWORD PTR _c$[esp+8]
	push	ebp
	push	esi
	mov	esi, DWORD PTR _in$[esp+16]
	mov	edx, DWORD PTR [ebx]
	push	edi
	movzx	ecx, BYTE PTR [esi+3]
	movzx	eax, BYTE PTR [esi+2]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+1]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi]
	shl	ecx, 8
	or	ecx, eax
	add	edx, ecx
	mov	DWORD PTR _n1$1$[esp+20], ecx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 302
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	edi, DWORD PTR [ebx+ecx*4+2080]
; Line 300
	movzx	ecx, BYTE PTR [esi+7]
; Line 235
	or	edi, DWORD PTR [ebx+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
; Line 302
	shl	ecx, 8
; Line 235
	or	edi, DWORD PTR [ebx+eax*4+32]
	movzx	eax, dl
	or	edi, DWORD PTR [ebx+eax*4+3104]
; Line 300
	movzx	eax, BYTE PTR [esi+6]
; Line 302
	or	ecx, eax
	rol	edi, 11					; 0000000bH
	movzx	eax, BYTE PTR [esi+5]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+4]
	shl	ecx, 8
; Line 303
	mov	esi, ebx
	or	ecx, eax
	mov	ebx, DWORD PTR _n1$1$[esp+20]
	xor	edi, ecx
	mov	edx, DWORD PTR [esi+4]
	add	edx, edi
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 303
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 304
	mov	edx, DWORD PTR [esi+8]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 303
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
; Line 304
	add	edx, ebx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 304
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 304
	rol	ecx, 11					; 0000000bH
; Line 305
	mov	edx, DWORD PTR [esi+12]
	xor	edi, ecx
	add	edx, edi
; Line 306
	mov	ebp, DWORD PTR [esi+16]
	mov	eax, edx
	mov	DWORD PTR tv2596[esp+24], ebp
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 305
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 305
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
	mov	DWORD PTR _n1$1$[esp+20], ebx
; Line 306
	lea	edx, DWORD PTR [ebx+ebp]
; Line 307
	mov	ebx, DWORD PTR [esi+20]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 306
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 306
	rol	ecx, 11					; 0000000bH
	xor	edi, ecx
	mov	DWORD PTR _n2$1$[esp+24], edi
; Line 307
	lea	edx, DWORD PTR [ebx+edi]
; Line 308
	mov	edi, DWORD PTR [esi+24]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 307
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 307
	mov	eax, DWORD PTR _n1$1$[esp+20]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+20], eax
; Line 308
	lea	edx, DWORD PTR [edi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 308
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 308
	mov	eax, DWORD PTR _n2$1$[esp+24]
; Line 309
	mov	esi, DWORD PTR [esi+28]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+24], eax
	lea	edx, DWORD PTR [esi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 309
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 309
	mov	eax, DWORD PTR _n1$1$[esp+20]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+20], eax
; Line 311
	lea	edx, DWORD PTR [esi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 311
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 311
	mov	eax, DWORD PTR _n2$1$[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+24], eax
; Line 312
	lea	edx, DWORD PTR [edi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 312
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 312
	mov	eax, DWORD PTR _n1$1$[esp+20]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+20], eax
; Line 313
	lea	edx, DWORD PTR [ebx+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 313
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 313
	mov	eax, DWORD PTR _n2$1$[esp+24]
; Line 314
	mov	edx, DWORD PTR tv2596[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	add	edx, eax
	mov	DWORD PTR _n2$1$[esp+24], eax
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 314
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 314
	mov	ebp, DWORD PTR _n1$1$[esp+20]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 315
	mov	edx, DWORD PTR [edx+12]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n1$1$[esp+20], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 315
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 315
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 315
	mov	ebp, DWORD PTR _n2$1$[esp+24]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 316
	mov	edx, DWORD PTR [edx+8]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n2$1$[esp+24], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 316
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 316
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 316
	mov	ebp, DWORD PTR _n1$1$[esp+20]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 317
	mov	edx, DWORD PTR [edx+4]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n1$1$[esp+20], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 317
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 317
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 317
	mov	ebp, DWORD PTR _n2$1$[esp+24]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 318
	mov	edx, DWORD PTR [edx]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n2$1$[esp+24], ebp
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 318
	mov	eax, edx
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 318
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 318
	mov	eax, DWORD PTR _n1$1$[esp+20]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+20], eax
; Line 320
	lea	edx, DWORD PTR [esi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 320
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 320
	mov	eax, DWORD PTR _n2$1$[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+24], eax
; Line 321
	lea	edx, DWORD PTR [edi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 321
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 321
	mov	eax, DWORD PTR _n1$1$[esp+20]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+20], eax
; Line 322
	lea	edx, DWORD PTR [ebx+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 322
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 322
	mov	eax, DWORD PTR _n2$1$[esp+24]
; Line 323
	mov	edx, DWORD PTR tv2596[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	add	edx, eax
	mov	DWORD PTR _n2$1$[esp+24], eax
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 323
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 323
	mov	ebp, DWORD PTR _n1$1$[esp+20]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 324
	mov	edx, DWORD PTR [edx+12]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n1$1$[esp+20], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 324
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 324
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 324
	mov	ebp, DWORD PTR _n2$1$[esp+24]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 325
	mov	edx, DWORD PTR [edx+8]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n2$1$[esp+24], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 325
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 325
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 325
	mov	ebp, DWORD PTR _n1$1$[esp+20]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 326
	mov	edx, DWORD PTR [edx+4]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n1$1$[esp+20], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 326
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 326
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 326
	mov	ebp, DWORD PTR _n2$1$[esp+24]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 327
	mov	edx, DWORD PTR [edx]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n2$1$[esp+24], ebp
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 327
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ebp, DWORD PTR _c$[esp+20]
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 327
	mov	eax, DWORD PTR _n1$1$[esp+20]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+20], eax
; Line 329
	lea	edx, DWORD PTR [esi+eax]
; Line 235
	mov	esi, ebp
; Line 329
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 329
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 329
	mov	eax, DWORD PTR _n2$1$[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+24], eax
; Line 330
	lea	edx, DWORD PTR [edi+eax]
	mov	edi, DWORD PTR _n1$1$[esp+20]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 330
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 330
	rol	ecx, 11					; 0000000bH
	xor	edi, ecx
; Line 331
	lea	edx, DWORD PTR [ebx+edi]
	mov	ebx, DWORD PTR _n2$1$[esp+24]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 331
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 332
	mov	edx, DWORD PTR tv2596[esp+24]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 331
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
; Line 332
	add	edx, ebx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 332
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 333
	mov	edx, DWORD PTR [esi+12]
	rol	ecx, 11					; 0000000bH
	xor	edi, ecx
	add	edx, edi
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 333
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 334
	mov	edx, DWORD PTR [esi+8]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 333
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
; Line 334
	add	edx, ebx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 334
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 335
	mov	edx, DWORD PTR [esi+4]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 334
	rol	ecx, 11					; 0000000bH
	xor	edi, ecx
; Line 335
	add	edx, edi
	mov	DWORD PTR _n1$1$[esp+20], edi
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 335
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 336
	mov	edx, DWORD PTR [esi]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 335
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
; Line 336
	add	edx, ebx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 336
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 336
	mov	edx, edi
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 339
	mov	eax, ebx
	rol	ecx, 11					; 0000000bH
	xor	edx, ecx
	shr	eax, 8
	mov	ecx, DWORD PTR _out$[esp+20]
	mov	BYTE PTR [ecx+1], al
; Line 340
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx], bl
	mov	BYTE PTR [ecx+2], al
; Line 343
	mov	eax, edx
	shr	ebx, 24					; 00000018H
	shr	eax, 8
	pop	edi
	mov	BYTE PTR [ecx+5], al
; Line 344
	mov	eax, edx
	pop	esi
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+4], dl
; Line 345
	shr	edx, 24					; 00000018H
	pop	ebp
	mov	BYTE PTR [ecx+3], bl
	mov	BYTE PTR [ecx+6], al
	mov	BYTE PTR [ecx+7], dl
	pop	ebx
; Line 346
	add	esp, 8
	ret	0
_gostdecrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gostcrypt
_TEXT	SEGMENT
_n2$1$ = -8						; size = 4
tv2607 = -4						; size = 4
_c$ = 8							; size = 4
_n1$1$ = 12						; size = 4
_in$ = 12						; size = 4
_out$ = 16						; size = 4
_gostcrypt PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 243
	mov	eax, 8
	call	__chkstk
	push	ebx
; Line 249
	mov	ebx, DWORD PTR _c$[esp+8]
	push	ebp
	push	esi
	mov	esi, DWORD PTR _in$[esp+16]
	mov	edx, DWORD PTR [ebx]
	push	edi
	movzx	ecx, BYTE PTR [esi+3]
	movzx	eax, BYTE PTR [esi+2]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+1]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi]
	shl	ecx, 8
	or	ecx, eax
	add	edx, ecx
	mov	DWORD PTR _n1$1$[esp+20], ecx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 249
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	edi, DWORD PTR [ebx+ecx*4+2080]
; Line 246
	movzx	ecx, BYTE PTR [esi+7]
; Line 235
	or	edi, DWORD PTR [ebx+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
; Line 249
	shl	ecx, 8
; Line 235
	or	edi, DWORD PTR [ebx+eax*4+32]
	movzx	eax, dl
	or	edi, DWORD PTR [ebx+eax*4+3104]
; Line 246
	movzx	eax, BYTE PTR [esi+6]
; Line 249
	or	ecx, eax
	rol	edi, 11					; 0000000bH
	movzx	eax, BYTE PTR [esi+5]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+4]
	shl	ecx, 8
; Line 250
	mov	esi, ebx
	or	ecx, eax
	mov	ebx, DWORD PTR _n1$1$[esp+20]
	xor	edi, ecx
	mov	edx, DWORD PTR [esi+4]
	add	edx, edi
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 250
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 251
	mov	edx, DWORD PTR [esi+8]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 250
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
; Line 251
	add	edx, ebx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 251
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 251
	rol	ecx, 11					; 0000000bH
; Line 252
	mov	edx, DWORD PTR [esi+12]
	xor	edi, ecx
	add	edx, edi
; Line 253
	mov	ebp, DWORD PTR [esi+16]
	mov	eax, edx
	mov	DWORD PTR tv2607[esp+24], ebp
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 252
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 252
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
	mov	DWORD PTR _n1$1$[esp+20], ebx
; Line 253
	lea	edx, DWORD PTR [ebx+ebp]
; Line 254
	mov	ebx, DWORD PTR [esi+20]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 253
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 253
	rol	ecx, 11					; 0000000bH
	xor	edi, ecx
	mov	DWORD PTR _n2$1$[esp+24], edi
; Line 254
	lea	edx, DWORD PTR [ebx+edi]
; Line 255
	mov	edi, DWORD PTR [esi+24]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 254
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 254
	mov	eax, DWORD PTR _n1$1$[esp+20]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+20], eax
; Line 255
	lea	edx, DWORD PTR [edi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 255
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 255
	mov	eax, DWORD PTR _n2$1$[esp+24]
; Line 256
	mov	esi, DWORD PTR [esi+28]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+24], eax
	lea	edx, DWORD PTR [esi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 256
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 256
	mov	ebp, DWORD PTR _n1$1$[esp+20]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 258
	mov	edx, DWORD PTR [edx]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n1$1$[esp+20], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 258
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 258
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 258
	mov	ebp, DWORD PTR _n2$1$[esp+24]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 259
	mov	edx, DWORD PTR [edx+4]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n2$1$[esp+24], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 259
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 259
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 259
	mov	ebp, DWORD PTR _n1$1$[esp+20]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 260
	mov	edx, DWORD PTR [edx+8]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n1$1$[esp+20], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 260
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 260
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 260
	mov	ebp, DWORD PTR _n2$1$[esp+24]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 261
	mov	edx, DWORD PTR [edx+12]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	mov	DWORD PTR _n2$1$[esp+24], ebp
	add	edx, ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 261
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 261
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 261
	mov	eax, DWORD PTR _n1$1$[esp+20]
; Line 262
	mov	edx, DWORD PTR tv2607[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	add	edx, eax
	mov	DWORD PTR _n1$1$[esp+20], eax
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 262
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 262
	mov	eax, DWORD PTR _n2$1$[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+24], eax
; Line 263
	lea	edx, DWORD PTR [ebx+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 263
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 263
	mov	eax, DWORD PTR _n1$1$[esp+20]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+20], eax
; Line 264
	lea	edx, DWORD PTR [edi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 264
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 264
	mov	eax, DWORD PTR _n2$1$[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+24], eax
; Line 265
	lea	edx, DWORD PTR [esi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
; Line 265
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 265
	mov	ebp, DWORD PTR _n1$1$[esp+20]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 267
	mov	edx, DWORD PTR [edx]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n1$1$[esp+20], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 267
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 267
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 267
	mov	ebp, DWORD PTR _n2$1$[esp+24]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 268
	mov	edx, DWORD PTR [edx+4]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n2$1$[esp+24], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 268
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 268
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 268
	mov	ebp, DWORD PTR _n1$1$[esp+20]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 269
	mov	edx, DWORD PTR [edx+8]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n1$1$[esp+20], ebp
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 269
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 269
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
; Line 269
	mov	ebp, DWORD PTR _n2$1$[esp+24]
; Line 235
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 270
	mov	edx, DWORD PTR [edx+12]
	rol	ecx, 11					; 0000000bH
	xor	ebp, ecx
	add	edx, ebp
	mov	DWORD PTR _n2$1$[esp+24], ebp
	mov	eax, edx
; Line 235
	mov	ebp, DWORD PTR _c$[esp+20]
; Line 270
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 270
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 270
	mov	eax, DWORD PTR _n1$1$[esp+20]
; Line 271
	mov	edx, DWORD PTR tv2607[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	add	edx, eax
	mov	DWORD PTR _n1$1$[esp+20], eax
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 271
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 271
	mov	eax, DWORD PTR _n2$1$[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+24], eax
; Line 272
	lea	edx, DWORD PTR [ebx+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 272
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 272
	mov	eax, DWORD PTR _n1$1$[esp+20]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+20], eax
; Line 273
	lea	edx, DWORD PTR [edi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 273
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 273
	mov	eax, DWORD PTR _n2$1$[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+24], eax
; Line 274
	lea	edx, DWORD PTR [esi+eax]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 274
	mov	eax, edx
; Line 235
	mov	ecx, DWORD PTR [ebp+ecx*4+2080]
; Line 274
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	or	ecx, DWORD PTR [ebp+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [ebp+eax*4+32]
	movzx	eax, dl
	mov	edx, ebp
	or	ecx, DWORD PTR [edx+eax*4+3104]
; Line 274
	mov	eax, DWORD PTR _n1$1$[esp+20]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n1$1$[esp+20], eax
; Line 276
	lea	edx, DWORD PTR [esi+eax]
; Line 235
	mov	esi, ebp
; Line 276
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 276
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 276
	mov	eax, DWORD PTR _n2$1$[esp+24]
	rol	ecx, 11					; 0000000bH
	xor	eax, ecx
	mov	DWORD PTR _n2$1$[esp+24], eax
; Line 277
	lea	edx, DWORD PTR [edi+eax]
	mov	edi, DWORD PTR _n1$1$[esp+20]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 277
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 277
	rol	ecx, 11					; 0000000bH
	xor	edi, ecx
; Line 278
	lea	edx, DWORD PTR [ebx+edi]
	mov	ebx, DWORD PTR _n2$1$[esp+24]
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 278
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 279
	mov	edx, DWORD PTR tv2607[esp+24]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 278
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
; Line 279
	add	edx, ebx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 279
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 280
	mov	edx, DWORD PTR [esi+12]
	rol	ecx, 11					; 0000000bH
	xor	edi, ecx
	add	edx, edi
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 280
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 281
	mov	edx, DWORD PTR [esi+8]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 280
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
; Line 281
	add	edx, ebx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 281
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 282
	mov	edx, DWORD PTR [esi+4]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 281
	rol	ecx, 11					; 0000000bH
	xor	edi, ecx
; Line 282
	add	edx, edi
	mov	DWORD PTR _n1$1$[esp+20], edi
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 282
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 283
	mov	edx, DWORD PTR [esi]
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 282
	rol	ecx, 11					; 0000000bH
	xor	ebx, ecx
; Line 283
	add	edx, ebx
	mov	eax, edx
	shr	eax, 8
; Line 235
	movzx	ecx, al
; Line 283
	mov	eax, edx
	shr	eax, 16					; 00000010H
; Line 235
	movzx	eax, al
	mov	ecx, DWORD PTR [esi+ecx*4+2080]
	or	ecx, DWORD PTR [esi+eax*4+1056]
	mov	eax, edx
	shr	eax, 24					; 00000018H
	or	ecx, DWORD PTR [esi+eax*4+32]
	movzx	eax, dl
; Line 283
	mov	edx, edi
; Line 235
	or	ecx, DWORD PTR [esi+eax*4+3104]
; Line 286
	mov	eax, ebx
	rol	ecx, 11					; 0000000bH
	xor	edx, ecx
	shr	eax, 8
	mov	ecx, DWORD PTR _out$[esp+20]
	mov	BYTE PTR [ecx+1], al
; Line 287
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx], bl
	mov	BYTE PTR [ecx+2], al
; Line 290
	mov	eax, edx
	shr	ebx, 24					; 00000018H
	shr	eax, 8
	pop	edi
	mov	BYTE PTR [ecx+5], al
; Line 291
	mov	eax, edx
	pop	esi
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+4], dl
; Line 292
	shr	edx, 24					; 00000018H
	pop	ebp
	mov	BYTE PTR [ecx+3], bl
	mov	BYTE PTR [ecx+6], al
	mov	BYTE PTR [ecx+7], dl
	pop	ebx
; Line 293
	add	esp, 8
	ret	0
_gostcrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_dec_cfb
_TEXT	SEGMENT
_cur_iv$ = -20						; size = 8
_gamma$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_iv$ = 12						; size = 4
_cipher$ = 16						; size = 4
_clear$ = 20						; size = 4
_blocks$ = 24						; size = 4
_gost_dec_cfb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 391
	mov	eax, 20					; 00000014H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+20], eax
	mov	ecx, DWORD PTR _iv$[esp+16]
	push	ebx
; Line 398
	mov	ebx, DWORD PTR _blocks$[esp+20]
	push	ebp
	mov	eax, DWORD PTR [ecx]
	mov	ebp, DWORD PTR _ctx$[esp+24]
	mov	DWORD PTR _cur_iv$[esp+28], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _cur_iv$[esp+32], eax
	push	edi
	mov	edi, DWORD PTR _clear$[esp+28]
	test	ebx, ebx
	jle	SHORT $LN3@gost_dec_c
	push	esi
	mov	esi, DWORD PTR _cipher$[esp+32]
	lea	eax, DWORD PTR _cur_iv$[esp+36]
	sub	esi, eax
$LL4@gost_dec_c:
; Line 399
	lea	eax, DWORD PTR _gamma$[esp+36]
	push	eax
	lea	eax, DWORD PTR _cur_iv$[esp+40]
	push	eax
	push	ebp
	call	_gostcrypt
	add	esp, 12					; 0000000cH
; Line 400
	xor	eax, eax
	npad	7
$LL7@gost_dec_c:
; Line 401
	lea	ecx, DWORD PTR _cur_iv$[esp+36]
	add	ecx, eax
	mov	dl, BYTE PTR [esi+ecx]
	mov	BYTE PTR [ecx], dl
	mov	cl, BYTE PTR _gamma$[esp+eax+36]
	xor	cl, dl
	mov	BYTE PTR [edi+eax], cl
	inc	eax
	cmp	eax, 8
	jl	SHORT $LL7@gost_dec_c
; Line 398
	add	esi, 8
	add	edi, 8
	sub	ebx, 1
	jne	SHORT $LL4@gost_dec_c
	pop	esi
$LN3@gost_dec_c:
; Line 404
	mov	ecx, DWORD PTR __$ArrayPad$[esp+32]
	pop	edi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
_gost_dec_cfb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_enc_cfb
_TEXT	SEGMENT
_ctx$GSCopy$1$ = -24					; size = 4
_cur_iv$ = -20						; size = 8
_gamma$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_iv$ = 12						; size = 4
_clear$ = 16						; size = 4
_cipher$ = 20						; size = 4
_blocks$ = 24						; size = 4
_gost_enc_cfb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 373
	mov	eax, 24					; 00000018H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+24], eax
	mov	ecx, DWORD PTR _iv$[esp+20]
	mov	eax, DWORD PTR _ctx$[esp+20]
	mov	edx, DWORD PTR _cipher$[esp+20]
	mov	DWORD PTR _ctx$GSCopy$1$[esp+24], eax
; Line 379
	mov	eax, DWORD PTR [ecx]
	push	ebp
; Line 380
	mov	ebp, DWORD PTR _blocks$[esp+24]
	mov	DWORD PTR _cur_iv$[esp+28], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _cur_iv$[esp+32], eax
	test	ebp, ebp
	jle	$LN3@gost_enc_c
	push	ebx
	mov	ebx, DWORD PTR _clear$[esp+28]
	push	esi
	push	edi
	lea	esi, DWORD PTR [edx+2]
	lea	edi, DWORD PTR [ebx+3]
	sub	ebx, edx
	npad	3
$LL4@gost_enc_c:
; Line 381
	lea	eax, DWORD PTR _gamma$[esp+40]
	push	eax
	lea	eax, DWORD PTR _cur_iv$[esp+44]
	push	eax
	push	DWORD PTR _ctx$GSCopy$1$[esp+48]
	call	_gostcrypt
; Line 383
	movzx	ecx, BYTE PTR [edi-3]
	lea	edi, DWORD PTR [edi+8]
	movzx	eax, BYTE PTR _gamma$[esp+52]
	lea	esi, DWORD PTR [esi+8]
	xor	ecx, eax
	add	esp, 12					; 0000000cH
	movzx	eax, BYTE PTR _gamma$[esp+41]
	mov	BYTE PTR [esi-10], cl
	mov	BYTE PTR _cur_iv$[esp+40], cl
	movzx	ecx, BYTE PTR [edi-10]
	xor	ecx, eax
	movzx	eax, BYTE PTR _gamma$[esp+42]
	mov	BYTE PTR [esi-9], cl
	mov	BYTE PTR _cur_iv$[esp+41], cl
	movzx	ecx, BYTE PTR [esi+ebx-8]
	xor	ecx, eax
	movzx	eax, BYTE PTR _gamma$[esp+43]
	mov	BYTE PTR [esi-8], cl
	mov	BYTE PTR _cur_iv$[esp+42], cl
	movzx	ecx, BYTE PTR [edi-8]
	xor	ecx, eax
	movzx	eax, BYTE PTR _gamma$[esp+44]
	mov	BYTE PTR [esi-7], cl
	mov	BYTE PTR _cur_iv$[esp+43], cl
	movzx	ecx, BYTE PTR [edi-7]
	xor	ecx, eax
	movzx	eax, BYTE PTR _gamma$[esp+45]
	mov	BYTE PTR [esi-6], cl
	mov	BYTE PTR _cur_iv$[esp+44], cl
	movzx	ecx, BYTE PTR [edi-6]
	xor	ecx, eax
	movzx	eax, BYTE PTR _gamma$[esp+46]
	mov	BYTE PTR [esi-5], cl
	mov	BYTE PTR _cur_iv$[esp+45], cl
	movzx	ecx, BYTE PTR [edi-5]
	xor	ecx, eax
	movzx	eax, BYTE PTR _gamma$[esp+47]
	mov	BYTE PTR [esi-4], cl
	mov	BYTE PTR _cur_iv$[esp+46], cl
	movzx	ecx, BYTE PTR [edi-4]
	xor	ecx, eax
	mov	BYTE PTR [esi-3], cl
	mov	BYTE PTR _cur_iv$[esp+47], cl
	sub	ebp, 1
	jne	$LL4@gost_enc_c
	pop	edi
	pop	esi
	pop	ebx
$LN3@gost_enc_c:
; Line 386
	mov	ecx, DWORD PTR __$ArrayPad$[esp+28]
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 24					; 00000018H
	ret	0
_gost_enc_cfb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_dec
_TEXT	SEGMENT
_c$ = 8							; size = 4
_cipher$ = 12						; size = 4
_clear$ = 16						; size = 4
_blocks$ = 20						; size = 4
_gost_dec PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 361
	push	edi
; Line 363
	mov	edi, DWORD PTR _blocks$[esp]
	test	edi, edi
	jle	SHORT $LN3@gost_dec
	push	ebx
	mov	ebx, DWORD PTR _cipher$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR _c$[esp+8]
	push	esi
	mov	esi, DWORD PTR _clear$[esp+12]
	sub	ebx, esi
	npad	6
$LL4@gost_dec:
; Line 364
	push	esi
	lea	eax, DWORD PTR [ebx+esi]
	push	eax
	push	ebp
	call	_gostdecrypt
	add	esp, 12					; 0000000cH
; Line 365
	add	esi, 8
	sub	edi, 1
	jne	SHORT $LL4@gost_dec
	pop	esi
	pop	ebp
	pop	ebx
$LN3@gost_dec:
	pop	edi
; Line 368
	ret	0
_gost_dec ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gost_enc
_TEXT	SEGMENT
_c$ = 8							; size = 4
_clear$ = 12						; size = 4
_cipher$ = 16						; size = 4
_blocks$ = 20						; size = 4
_gost_enc PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\ccgost\gost89.c
; Line 350
	push	edi
; Line 352
	mov	edi, DWORD PTR _blocks$[esp]
	test	edi, edi
	jle	SHORT $LN3@gost_enc
	push	ebx
	mov	ebx, DWORD PTR _clear$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR _c$[esp+8]
	push	esi
	mov	esi, DWORD PTR _cipher$[esp+12]
	sub	ebx, esi
	npad	6
$LL4@gost_enc:
; Line 353
	push	esi
	lea	eax, DWORD PTR [ebx+esi]
	push	eax
	push	ebp
	call	_gostcrypt
	add	esp, 12					; 0000000cH
; Line 355
	add	esi, 8
	sub	edi, 1
	jne	SHORT $LL4@gost_enc
	pop	esi
	pop	ebp
	pop	ebx
$LN3@gost_enc:
	pop	edi
; Line 357
	ret	0
_gost_enc ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\des\ofb_enc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_DES_ofb_encrypt
EXTRN	_DES_encrypt1:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _DES_ofb_encrypt
_TEXT	SEGMENT
_d0$2$ = -52						; size = 4
_v0$1$ = -48						; size = 4
_n$1$ = -44						; size = 4
_mask0$1$ = -40						; size = 4
_mask1$1$ = -36						; size = 4
_ti$1$ = -32						; size = 4
tv578 = -28						; size = 4
_ti$2$ = -24						; size = 4
tv576 = -20						; size = 4
tv580 = -16						; size = 4
_iv$2$ = -12						; size = 4
_ti$ = -8						; size = 8
_in$ = 8						; size = 4
_out$ = 12						; size = 4
_numbits$ = 16						; size = 4
_length$ = 20						; size = 4
_schedule$ = 24						; size = 4
_ivec$ = 28						; size = 4
_DES_ofb_encrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\des\ofb_enc.c
; Line 70
	mov	eax, 52					; 00000034H
	call	__chkstk
	push	ebp
; Line 71
	mov	ebp, DWORD PTR _numbits$[esp+52]
	push	edi
	lea	eax, DWORD PTR [ebp+7]
	cdq
	and	edx, 7
	lea	edi, DWORD PTR [edx+eax]
	sar	edi, 3
	mov	DWORD PTR _n$1$[esp+60], edi
; Line 78
	cmp	ebp, 64					; 00000040H
	jg	$LN1@DES_ofb_en
; Line 80
	cmp	ebp, 32					; 00000020H
	jle	SHORT $LN42@DES_ofb_en
; Line 81
	mov	DWORD PTR _mask0$1$[esp+60], -1
; Line 82
	cmp	ebp, 64					; 00000040H
	jl	SHORT $LN11@DES_ofb_en
; Line 83
	mov	DWORD PTR _mask1$1$[esp+60], -1
	jmp	SHORT $LN10@DES_ofb_en
$LN11@DES_ofb_en:
; Line 85
	lea	ecx, DWORD PTR [ebp-32]
	mov	eax, 1
	shl	eax, cl
	dec	eax
	mov	DWORD PTR _mask1$1$[esp+60], eax
; Line 86
	jmp	SHORT $LN10@DES_ofb_en
$LN42@DES_ofb_en:
; Line 87
	jne	SHORT $LN13@DES_ofb_en
; Line 88
	mov	DWORD PTR _mask0$1$[esp+60], -1
	jmp	SHORT $LN14@DES_ofb_en
$LN13@DES_ofb_en:
; Line 90
	mov	eax, 1
	mov	ecx, ebp
	shl	eax, cl
	dec	eax
	mov	DWORD PTR _mask0$1$[esp+60], eax
$LN14@DES_ofb_en:
; Line 91
	mov	DWORD PTR _mask1$1$[esp+60], 0
$LN10@DES_ofb_en:
; Line 95
	mov	eax, DWORD PTR _ivec$[esp+56]
	push	ebx
	push	esi
	movzx	ecx, BYTE PTR [eax]
	lea	esi, DWORD PTR [eax+1]
	mov	edx, esi
	mov	DWORD PTR _iv$2$[esp+68], esi
	movzx	eax, BYTE PTR [edx]
; Line 96
	movzx	ebx, BYTE PTR [edx+3]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+4]
	mov	DWORD PTR _v0$1$[esp+68], ecx
	movzx	ecx, BYTE PTR [edx+6]
	shl	eax, 8
	or	ebx, eax
	shl	ecx, 8
	movzx	eax, BYTE PTR [edx+5]
; Line 97
	mov	edx, DWORD PTR _v0$1$[esp+68]
	or	ecx, eax
	shl	ecx, 16					; 00000010H
	or	ebx, ecx
	mov	DWORD PTR _ti$[esp+68], edx
; Line 99
	mov	ecx, DWORD PTR _length$[esp+64]
	mov	DWORD PTR _ti$[esp+72], ebx
	test	ecx, ecx
	jle	$LN39@DES_ofb_en
; Line 123
	mov	esi, DWORD PTR _in$[esp+64]
	mov	eax, 64					; 00000040H
	sub	eax, ebp
	mov	DWORD PTR tv578[esp+68], eax
	mov	eax, 32					; 00000020H
	sub	eax, ebp
	mov	DWORD PTR tv576[esp+68], eax
	lea	eax, DWORD PTR [edi-1]
	mov	edi, DWORD PTR _out$[esp+64]
	mov	DWORD PTR tv580[esp+68], eax
$LL2@DES_ofb_en:
; Line 102
	push	1
	push	DWORD PTR _schedule$[esp+68]
	lea	eax, DWORD PTR _ti$[esp+76]
	mov	DWORD PTR _ti$[esp+76], edx
	dec	ecx
	mov	DWORD PTR _ti$[esp+80], ebx
	push	eax
	mov	DWORD PTR _length$[esp+76], ecx
	call	_DES_encrypt1
; Line 105
	mov	eax, DWORD PTR _n$1$[esp+80]
	add	esp, 12					; 0000000cH
	add	esi, eax
	xor	edx, edx
	xor	ecx, ecx
	lea	ebp, DWORD PTR [eax-1]
	cmp	ebp, 7
	ja	SHORT $LN4@DES_ofb_en
	lea	ebp, DWORD PTR [eax-1]
	jmp	DWORD PTR $LN46@DES_ofb_en[ebp*4]
$LN15@DES_ofb_en:
	movzx	edx, BYTE PTR [esi-1]
	dec	esi
	shl	edx, 24					; 00000018H
$LN16@DES_ofb_en:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 16					; 00000010H
	or	edx, eax
$LN17@DES_ofb_en:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 8
	or	edx, eax
$LN18@DES_ofb_en:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	or	edx, eax
$LN19@DES_ofb_en:
	movzx	ecx, BYTE PTR [esi-1]
	dec	esi
	shl	ecx, 24					; 00000018H
$LN20@DES_ofb_en:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 16					; 00000010H
	or	ecx, eax
$LN21@DES_ofb_en:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 8
	or	ecx, eax
$LN22@DES_ofb_en:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	or	ecx, eax
	mov	eax, DWORD PTR _n$1$[esp+68]
$LN4@DES_ofb_en:
; Line 109
	add	edi, DWORD PTR _n$1$[esp+68]
	add	esi, eax
	mov	eax, DWORD PTR _ti$[esp+68]
	mov	DWORD PTR _d0$2$[esp+68], eax
	xor	DWORD PTR _d0$2$[esp+68], ecx
	mov	ecx, DWORD PTR _mask0$1$[esp+68]
	and	DWORD PTR _d0$2$[esp+68], ecx
	mov	ecx, DWORD PTR _ti$[esp+72]
	mov	DWORD PTR _ti$2$[esp+68], ecx
	xor	ecx, edx
	and	ecx, DWORD PTR _mask1$1$[esp+68]
	cmp	DWORD PTR tv580[esp+68], 7
	mov	edx, DWORD PTR _n$1$[esp+68]
	mov	DWORD PTR _ti$1$[esp+68], eax
	ja	SHORT $LN6@DES_ofb_en
	lea	ebp, DWORD PTR [edx-1]
	jmp	DWORD PTR $LN47@DES_ofb_en[ebp*4]
$LN23@DES_ofb_en:
	dec	edi
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edi], al
$LN24@DES_ofb_en:
	dec	edi
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edi], al
$LN25@DES_ofb_en:
	dec	edi
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edi], al
$LN26@DES_ofb_en:
	dec	edi
	mov	BYTE PTR [edi], cl
$LN27@DES_ofb_en:
	mov	eax, DWORD PTR _d0$2$[esp+68]
	dec	edi
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edi], al
$LN28@DES_ofb_en:
	mov	eax, DWORD PTR _d0$2$[esp+68]
	dec	edi
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edi], al
$LN29@DES_ofb_en:
	mov	eax, DWORD PTR _d0$2$[esp+68]
	dec	edi
	shr	eax, 8
	mov	BYTE PTR [edi], al
	mov	eax, DWORD PTR _ti$1$[esp+68]
$LN30@DES_ofb_en:
	mov	ecx, DWORD PTR _d0$2$[esp+68]
	dec	edi
	mov	BYTE PTR [edi], cl
$LN6@DES_ofb_en:
; Line 112
	mov	ebp, DWORD PTR _numbits$[esp+64]
	add	edi, edx
	cmp	ebp, 32					; 00000020H
	jne	SHORT $LN31@DES_ofb_en
; Line 113
	mov	edx, ebx
; Line 114
	mov	ebx, eax
	jmp	SHORT $LN43@DES_ofb_en
$LN31@DES_ofb_en:
; Line 115
	cmp	ebp, 64					; 00000040H
	jne	SHORT $LN33@DES_ofb_en
; Line 117
	mov	ebx, DWORD PTR _ti$2$[esp+68]
	mov	edx, eax
	jmp	SHORT $LN43@DES_ofb_en
$LN33@DES_ofb_en:
; Line 118
	cmp	ebp, 32					; 00000020H
	jle	SHORT $LN35@DES_ofb_en
; Line 119
	mov	edx, ebx
	lea	ecx, DWORD PTR [ebp-32]
; Line 120
	mov	ebx, DWORD PTR _ti$1$[esp+68]
	shr	edx, cl
	mov	ecx, DWORD PTR tv578[esp+68]
	shl	eax, cl
	lea	ecx, DWORD PTR [ebp-32]
	or	edx, eax
	shr	ebx, cl
	mov	eax, DWORD PTR _ti$2$[esp+68]
	mov	ecx, DWORD PTR tv578[esp+68]
	shl	eax, cl
; Line 121
	jmp	SHORT $LN44@DES_ofb_en
$LN35@DES_ofb_en:
; Line 123
	mov	ecx, DWORD PTR tv576[esp+68]
	mov	eax, ebx
	mov	edx, DWORD PTR _v0$1$[esp+68]
	shl	eax, cl
	mov	ecx, ebp
	shr	edx, cl
; Line 124
	mov	ecx, DWORD PTR tv576[esp+68]
	or	edx, eax
	mov	eax, DWORD PTR _ti$1$[esp+68]
	shl	eax, cl
	mov	ecx, ebp
	shr	ebx, cl
$LN44@DES_ofb_en:
	or	ebx, eax
$LN43@DES_ofb_en:
; Line 99
	mov	ecx, DWORD PTR _length$[esp+64]
; Line 123
	mov	DWORD PTR _v0$1$[esp+68], edx
	test	ecx, ecx
	jg	$LL2@DES_ofb_en
	mov	esi, DWORD PTR _iv$2$[esp+68]
$LN39@DES_ofb_en:
; Line 128
	mov	eax, DWORD PTR _ivec$[esp+64]
	mov	BYTE PTR [eax], dl
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+1], al
; Line 129
	mov	eax, ebx
	shr	edx, 24					; 00000018H
	mov	BYTE PTR [esi+2], dl
	mov	BYTE PTR [esi+3], bl
	shr	eax, 8
	mov	BYTE PTR [esi+4], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	shr	ebx, 24					; 00000018H
	mov	BYTE PTR [esi+5], al
	mov	BYTE PTR [esi+6], bl
	pop	esi
	pop	ebx
$LN1@DES_ofb_en:
	pop	edi
	pop	ebp
; Line 131
	add	esp, 52					; 00000034H
	ret	0
	npad	3
$LN46@DES_ofb_en:
	DD	$LN22@DES_ofb_en
	DD	$LN21@DES_ofb_en
	DD	$LN20@DES_ofb_en
	DD	$LN19@DES_ofb_en
	DD	$LN18@DES_ofb_en
	DD	$LN17@DES_ofb_en
	DD	$LN16@DES_ofb_en
	DD	$LN15@DES_ofb_en
$LN47@DES_ofb_en:
	DD	$LN30@DES_ofb_en
	DD	$LN29@DES_ofb_en
	DD	$LN28@DES_ofb_en
	DD	$LN27@DES_ofb_en
	DD	$LN26@DES_ofb_en
	DD	$LN25@DES_ofb_en
	DD	$LN24@DES_ofb_en
	DD	$LN23@DES_ofb_en
_DES_ofb_encrypt ENDP
_TEXT	ENDS
END

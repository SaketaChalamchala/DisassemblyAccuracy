; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\comp\c_rle.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BH@CAEIMNHD@run?5length?5compression?$AA@ ; `string'
;	COMDAT ??_C@_0BH@CAEIMNHD@run?5length?5compression?$AA@
CONST	SEGMENT
??_C@_0BH@CAEIMNHD@run?5length?5compression?$AA@ DB 'run length compressi'
	DB	'on', 00H					; `string'
CONST	ENDS
_DATA	SEGMENT
_rle_method DD	07cH
	DD	FLAT:??_C@_0BH@CAEIMNHD@run?5length?5compression?$AA@
	DD	00H
	DD	00H
	DD	FLAT:_rle_compress_block
	DD	FLAT:_rle_expand_block
	DD	00H
	DD	00H
_DATA	ENDS
PUBLIC	_COMP_rle
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtpy
;	COMDAT _rle_expand_block
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_olen$ = 16						; size = 4
_in$ = 20						; size = 4
_ilen$ = 24						; size = 4
_rle_expand_block PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\comp\c_rle.c
; Line 49
	push	esi
; Line 52
	mov	esi, DWORD PTR _ilen$[esp]
	dec	esi
	cmp	DWORD PTR _olen$[esp], esi
	jae	SHORT $LN2@rle_expand
; Line 54
	or	eax, -1
	pop	esi
; Line 62
	ret	0
$LN2@rle_expand:
; Line 58
	mov	ecx, DWORD PTR _in$[esp]
	cmp	BYTE PTR [ecx], 0
	jne	SHORT $LN3@rle_expand
; Line 59
	push	esi
	inc	ecx
	push	ecx
	push	DWORD PTR _out$[esp+8]
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN3@rle_expand:
; Line 61
	mov	eax, esi
	pop	esi
; Line 62
	ret	0
_rle_expand_block ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rle_compress_block
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_olen$ = 16						; size = 4
_in$ = 20						; size = 4
_ilen$ = 24						; size = 4
_rle_compress_block PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\comp\c_rle.c
; Line 33
	push	esi
; Line 36
	mov	esi, DWORD PTR _ilen$[esp]
	test	esi, esi
	je	SHORT $LN3@rle_compre
	lea	eax, DWORD PTR [esi-1]
	cmp	DWORD PTR _olen$[esp], eax
	jb	SHORT $LN3@rle_compre
; Line 41
	mov	eax, DWORD PTR _out$[esp]
; Line 42
	push	esi
	push	DWORD PTR _in$[esp+4]
	mov	BYTE PTR [eax], 0
	inc	eax
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 43
	lea	eax, DWORD PTR [esi+1]
	pop	esi
; Line 44
	ret	0
$LN3@rle_compre:
; Line 38
	or	eax, -1
	pop	esi
; Line 44
	ret	0
_rle_compress_block ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _COMP_rle
_TEXT	SEGMENT
_COMP_rle PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\comp\c_rle.c
; Line 27
	mov	eax, OFFSET _rle_method
; Line 28
	ret	0
_COMP_rle ENDP
_TEXT	ENDS
END

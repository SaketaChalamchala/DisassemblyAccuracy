; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_dup.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_dup
PUBLIC	_ASN1_item_dup
PUBLIC	??_C@_0BG@LIBBNHAF@?4?2crypto?2asn1?2a_dup?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_item_d2i:PROC
EXTRN	_ASN1_item_i2d:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BG@LIBBNHAF@?4?2crypto?2asn1?2a_dup?4c?$AA@
CONST	SEGMENT
??_C@_0BG@LIBBNHAF@?4?2crypto?2asn1?2a_dup?4c?$AA@ DB '.\crypto\asn1\a_du'
	DB	'p.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_dup
_TEXT	SEGMENT
_b$ = -4						; size = 4
_it$ = 8						; size = 4
_p$ = 12						; size = 4
_x$ = 12						; size = 4
_ASN1_item_dup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_dup.c
; Line 99
	mov	eax, 4
	call	__chkstk
; Line 105
	mov	eax, DWORD PTR _x$[esp]
	mov	DWORD PTR _b$[esp+4], 0
	test	eax, eax
	jne	SHORT $LN2@ASN1_item_
; Line 117
	pop	ecx
	ret	0
$LN2@ASN1_item_:
	push	esi
; Line 108
	mov	esi, DWORD PTR _it$[esp+4]
	lea	ecx, DWORD PTR _b$[esp+8]
	push	esi
	push	ecx
	push	eax
	call	_ASN1_item_i2d
; Line 109
	mov	ecx, DWORD PTR _b$[esp+20]
	add	esp, 12					; 0000000cH
	test	ecx, ecx
	jne	SHORT $LN3@ASN1_item_
; Line 110
	push	110					; 0000006eH
	push	OFFSET ??_C@_0BG@LIBBNHAF@?4?2crypto?2asn1?2a_dup?4c?$AA@
	push	65					; 00000041H
	push	191					; 000000bfH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 111
	xor	eax, eax
	pop	esi
; Line 117
	pop	ecx
	ret	0
$LN3@ASN1_item_:
; Line 114
	push	esi
	push	eax
	lea	eax, DWORD PTR _p$[esp+12]
	mov	DWORD PTR _p$[esp+12], ecx
	push	eax
	push	0
	call	_ASN1_item_d2i
; Line 115
	push	DWORD PTR _b$[esp+24]
	mov	esi, eax
	call	_CRYPTO_free
	add	esp, 20					; 00000014H
; Line 116
	mov	eax, esi
	pop	esi
; Line 117
	pop	ecx
	ret	0
_ASN1_item_dup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_dup
_TEXT	SEGMENT
_p2$ = -4						; size = 4
_i2d$ = 8						; size = 4
_d2i$ = 12						; size = 4
_p$ = 16						; size = 4
_x$ = 16						; size = 4
_ASN1_dup PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_dup.c
; Line 66
	mov	eax, 4
	call	__chkstk
	push	esi
; Line 72
	mov	esi, DWORD PTR _x$[esp+4]
	test	esi, esi
	jne	SHORT $LN2@ASN1_dup
; Line 73
	xor	eax, eax
	pop	esi
; Line 87
	pop	ecx
	ret	0
$LN2@ASN1_dup:
	push	edi
; Line 75
	push	0
	push	esi
	call	DWORD PTR _i2d$[esp+16]
; Line 76
	push	76					; 0000004cH
	add	eax, 10					; 0000000aH
	push	OFFSET ??_C@_0BG@LIBBNHAF@?4?2crypto?2asn1?2a_dup?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 20					; 00000014H
; Line 77
	test	edi, edi
	jne	SHORT $LN3@ASN1_dup
; Line 78
	push	78					; 0000004eH
	push	OFFSET ??_C@_0BG@LIBBNHAF@?4?2crypto?2asn1?2a_dup?4c?$AA@
	push	65					; 00000041H
	push	111					; 0000006fH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 79
	xor	eax, eax
	pop	edi
	pop	esi
; Line 87
	pop	ecx
	ret	0
$LN3@ASN1_dup:
; Line 82
	lea	eax, DWORD PTR _p$[esp+8]
	mov	DWORD PTR _p$[esp+8], edi
	push	eax
	push	esi
	call	DWORD PTR _i2d$[esp+16]
; Line 84
	push	eax
	lea	eax, DWORD PTR _p2$[esp+24]
	mov	DWORD PTR _p2$[esp+24], edi
	push	eax
	push	0
	call	DWORD PTR _d2i$[esp+28]
; Line 85
	push	edi
	mov	esi, eax
	call	_CRYPTO_free
	add	esp, 24					; 00000018H
; Line 86
	mov	eax, esi
	pop	edi
	pop	esi
; Line 87
	pop	ecx
	ret	0
_ASN1_dup ENDP
_TEXT	ENDS
END

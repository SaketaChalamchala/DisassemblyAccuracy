; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	__CONF_new_section
PUBLIC	__CONF_get_section
PUBLIC	__CONF_get_section_values
PUBLIC	__CONF_add_string
PUBLIC	__CONF_get_string
PUBLIC	__CONF_new_data
PUBLIC	__CONF_free_data
PUBLIC	??_C@_03OEJENCPE@ENV?$AA@			; `string'
PUBLIC	??_C@_07DLHCIBDH@default?$AA@			; `string'
PUBLIC	??_C@_0BJ@NNNPODKO@?4?2crypto?2conf?2conf_api?4c?$AA@ ; `string'
PUBLIC	??_C@_0L@BFMFELMC@vv?5?$DN?$DN?5NULL?$AA@	; `string'
EXTRN	__imp__getenv:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_delete_ptr:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OpenSSLDie:PROC
EXTRN	_lh_new:PROC
EXTRN	_lh_free:PROC
EXTRN	_lh_insert:PROC
EXTRN	_lh_delete:PROC
EXTRN	_lh_retrieve:PROC
EXTRN	_lh_doall:PROC
EXTRN	_lh_doall_arg:PROC
EXTRN	_lh_strhash:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0L@BFMFELMC@vv?5?$DN?$DN?5NULL?$AA@
CONST	SEGMENT
??_C@_0L@BFMFELMC@vv?5?$DN?$DN?5NULL?$AA@ DB 'vv == NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NNNPODKO@?4?2crypto?2conf?2conf_api?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@NNNPODKO@?4?2crypto?2conf?2conf_api?4c?$AA@ DB '.\crypto\conf\c'
	DB	'onf_api.c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLHCIBDH@default?$AA@
CONST	SEGMENT
??_C@_07DLHCIBDH@default?$AA@ DB 'default', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OEJENCPE@ENV?$AA@
CONST	SEGMENT
??_C@_03OEJENCPE@ENV?$AA@ DB 'ENV', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conf_value_LHASH_COMP
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_conf_value_LHASH_COMP PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 208
	jmp	_conf_value_cmp
_conf_value_LHASH_COMP ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conf_value_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_conf_value_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 190
	push	esi
; Line 193
	mov	esi, DWORD PTR _b$[esp]
	push	edi
	mov	edi, DWORD PTR _a$[esp+4]
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edi]
	cmp	eax, ecx
	je	SHORT $LN3@conf_value
$LL9@conf_value:
; Line 194
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN10@conf_value
	test	dl, dl
	je	SHORT $LN11@conf_value
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN10@conf_value
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL9@conf_value
$LN11@conf_value:
	xor	eax, eax
	jmp	SHORT $LN12@conf_value
$LN10@conf_value:
	sbb	eax, eax
	or	eax, 1
$LN12@conf_value:
; Line 195
	test	eax, eax
	jne	SHORT $LN7@conf_value
$LN3@conf_value:
; Line 199
	mov	ecx, DWORD PTR [edi+4]
	test	ecx, ecx
	je	SHORT $LN4@conf_value
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@conf_value
	npad	7
$LL13@conf_value:
; Line 200
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN14@conf_value
	test	dl, dl
	je	SHORT $LN15@conf_value
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN14@conf_value
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL13@conf_value
$LN15@conf_value:
	pop	edi
	xor	eax, eax
	pop	esi
; Line 206
	ret	0
$LN14@conf_value:
; Line 200
	sbb	eax, eax
	pop	edi
	or	eax, 1
	pop	esi
; Line 206
	ret	0
$LN4@conf_value:
; Line 203
	xor	eax, eax
	cmp	ecx, DWORD PTR [esi+4]
	je	SHORT $LN7@conf_value
; Line 205
	test	ecx, ecx
	setne	al
	lea	eax, DWORD PTR [eax*2-1]
$LN7@conf_value:
; Line 206
	pop	edi
	pop	esi
	ret	0
_conf_value_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conf_value_LHASH_HASH
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_conf_value_LHASH_HASH PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 187
	push	esi
; Line 184
	mov	esi, DWORD PTR _arg$[esp]
	push	edi
	push	DWORD PTR [esi+4]
	call	_lh_strhash
	push	DWORD PTR [esi]
	mov	edi, eax
	call	_lh_strhash
	add	esp, 8
	shl	eax, 2
	xor	eax, edi
	pop	edi
	pop	esi
; Line 187
	ret	0
_conf_value_LHASH_HASH ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conf_value_hash
_TEXT	SEGMENT
_v$ = 8							; size = 4
_conf_value_hash PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 183
	push	esi
; Line 184
	mov	esi, DWORD PTR _v$[esp]
	push	edi
	push	DWORD PTR [esi+4]
	call	_lh_strhash
	push	DWORD PTR [esi]
	mov	edi, eax
	call	_lh_strhash
	add	esp, 8
	shl	eax, 2
	xor	eax, edi
	pop	edi
	pop	esi
; Line 185
	ret	0
_conf_value_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _value_free_stack_LHASH_DOALL
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_value_free_stack_LHASH_DOALL PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 78
	jmp	_value_free_stack_doall
_value_free_stack_LHASH_DOALL ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _value_free_hash_LHASH_DOALL_ARG
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_value_free_hash_LHASH_DOALL_ARG PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 246
	mov	eax, DWORD PTR _arg1$[esp-4]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN4@value_free
; Line 247
	push	eax
	push	DWORD PTR _arg2$[esp]
	call	_lh_delete
	add	esp, 8
$LN4@value_free:
; Line 77
	ret	0
_value_free_hash_LHASH_DOALL_ARG ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _value_free_stack_doall
_TEXT	SEGMENT
_a$ = 8							; size = 4
_value_free_stack_doall PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 251
	push	ebp
; Line 256
	mov	ebp, DWORD PTR _a$[esp]
	cmp	DWORD PTR [ebp+4], 0
	jne	SHORT $LN1@value_free
; Line 259
	push	ebx
	mov	ebx, DWORD PTR [ebp+8]
	push	edi
; Line 260
	push	ebx
	call	_sk_num
	mov	edi, eax
	add	esp, 4
	sub	edi, 1
	js	SHORT $LN3@value_free
	push	esi
$LL4@value_free:
; Line 261
	push	edi
	push	ebx
	call	_sk_value
	mov	esi, eax
; Line 262
	push	DWORD PTR [esi+8]
	call	_CRYPTO_free
; Line 263
	push	DWORD PTR [esi+4]
	call	_CRYPTO_free
; Line 264
	push	esi
	call	_CRYPTO_free
	add	esp, 20					; 00000014H
	sub	edi, 1
	jns	SHORT $LL4@value_free
	pop	esi
$LN3@value_free:
; Line 266
	test	ebx, ebx
	je	SHORT $LN6@value_free
; Line 267
	push	ebx
	call	_sk_free
	add	esp, 4
$LN6@value_free:
; Line 268
	push	DWORD PTR [ebp]
	call	_CRYPTO_free
; Line 269
	push	ebp
	call	_CRYPTO_free
	add	esp, 8
	pop	edi
	pop	ebx
$LN1@value_free:
	pop	ebp
; Line 270
	ret	0
_value_free_stack_doall ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _value_free_hash_doall_arg
_TEXT	SEGMENT
_a$ = 8							; size = 4
_conf$ = 12						; size = 4
_value_free_hash_doall_arg PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 246
	mov	eax, DWORD PTR _a$[esp-4]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@value_free
; Line 247
	push	eax
	push	DWORD PTR _conf$[esp]
	call	_lh_delete
	add	esp, 8
$LN2@value_free:
; Line 248
	ret	0
_value_free_hash_doall_arg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __CONF_free_data
_TEXT	SEGMENT
_conf$ = 8						; size = 4
__CONF_free_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 223
	push	esi
; Line 224
	mov	esi, DWORD PTR _conf$[esp]
	test	esi, esi
	je	SHORT $LN3@CONF_free_
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN3@CONF_free_
; Line 227
	mov	DWORD PTR [eax+32], 0
; Line 230
	mov	eax, DWORD PTR [esi+8]
	push	eax
	push	OFFSET _value_free_hash_LHASH_DOALL_ARG
	push	eax
	call	_lh_doall_arg
; Line 239
	push	OFFSET _value_free_stack_LHASH_DOALL
	push	DWORD PTR [esi+8]
	call	_lh_doall
; Line 240
	push	DWORD PTR [esi+8]
	call	_lh_free
	add	esp, 24					; 00000018H
$LN3@CONF_free_:
	pop	esi
; Line 241
	ret	0
__CONF_free_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __CONF_new_data
_TEXT	SEGMENT
_conf$ = 8						; size = 4
__CONF_new_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 211
	push	esi
; Line 212
	mov	esi, DWORD PTR _conf$[esp]
	test	esi, esi
	jne	SHORT $LN2@CONF_new_d
$LN6@CONF_new_d:
; Line 213
	xor	eax, eax
	pop	esi
; Line 220
	ret	0
$LN2@CONF_new_d:
; Line 215
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN4@CONF_new_d
; Line 216
	push	OFFSET _conf_value_LHASH_COMP
	push	OFFSET _conf_value_LHASH_HASH
	call	_lh_new
	add	esp, 8
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	je	SHORT $LN6@CONF_new_d
$LN4@CONF_new_d:
; Line 219
	mov	eax, 1
	pop	esi
; Line 220
	ret	0
__CONF_new_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __CONF_get_string
_TEXT	SEGMENT
_vv$ = -12						; size = 12
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_name$ = 16						; size = 4
__CONF_get_string PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 130
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	edi
; Line 134
	mov	edi, DWORD PTR _name$[esp+12]
	test	edi, edi
	jne	SHORT $LN2@CONF_get_s
; Line 135
	xor	eax, eax
	pop	edi
; Line 158
	add	esp, 12					; 0000000cH
	ret	0
$LN2@CONF_get_s:
	push	ebx
; Line 136
	mov	ebx, DWORD PTR _conf$[esp+16]
	test	ebx, ebx
	je	$LN3@CONF_get_s
; Line 137
	push	esi
	mov	esi, DWORD PTR _section$[esp+20]
	test	esi, esi
	je	SHORT $LN8@CONF_get_s
; Line 140
	lea	eax, DWORD PTR _vv$[esp+24]
	mov	DWORD PTR _vv$[esp+28], edi
	push	eax
	push	DWORD PTR [ebx+8]
	mov	DWORD PTR _vv$[esp+32], esi
	call	_lh_retrieve
	add	esp, 8
; Line 141
	test	eax, eax
	jne	SHORT $LN18@CONF_get_s
; Line 143
	mov	eax, OFFSET ??_C@_03OEJENCPE@ENV?$AA@
$LL12@CONF_get_s:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN13@CONF_get_s
	test	cl, cl
	je	SHORT $LN14@CONF_get_s
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN13@CONF_get_s
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL12@CONF_get_s
$LN14@CONF_get_s:
	xor	eax, eax
	jmp	SHORT $LN15@CONF_get_s
$LN13@CONF_get_s:
	sbb	eax, eax
	or	eax, 1
$LN15@CONF_get_s:
	test	eax, eax
	jne	SHORT $LN8@CONF_get_s
; Line 144
	push	edi
	call	DWORD PTR __imp__getenv
	add	esp, 4
; Line 145
	test	eax, eax
	jne	SHORT $LN17@CONF_get_s
$LN8@CONF_get_s:
; Line 151
	lea	eax, DWORD PTR _vv$[esp+24]
	mov	DWORD PTR _vv$[esp+24], OFFSET ??_C@_07DLHCIBDH@default?$AA@
	push	eax
	push	DWORD PTR [ebx+8]
	mov	DWORD PTR _vv$[esp+36], edi
	call	_lh_retrieve
	add	esp, 8
; Line 152
	test	eax, eax
	je	SHORT $LN9@CONF_get_s
$LN18@CONF_get_s:
; Line 153
	mov	eax, DWORD PTR [eax+8]
$LN17@CONF_get_s:
	pop	esi
	pop	ebx
	pop	edi
; Line 158
	add	esp, 12					; 0000000cH
	ret	0
$LN9@CONF_get_s:
	pop	esi
	pop	ebx
; Line 155
	xor	eax, eax
	pop	edi
; Line 158
	add	esp, 12					; 0000000cH
	ret	0
$LN3@CONF_get_s:
; Line 157
	push	edi
	call	DWORD PTR __imp__getenv
	add	esp, 4
	pop	ebx
	pop	edi
; Line 158
	add	esp, 12					; 0000000cH
	ret	0
__CONF_get_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __CONF_add_string
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
_value$ = 16						; size = 4
__CONF_add_string PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 111
	mov	eax, DWORD PTR _section$[esp-4]
	push	esi
; Line 113
	mov	esi, DWORD PTR _value$[esp]
	push	edi
	mov	edi, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax]
; Line 114
	push	esi
	push	edi
	mov	DWORD PTR [esi], eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@CONF_add_s
	pop	edi
	pop	esi
; Line 126
	ret	0
$LN2@CONF_add_s:
; Line 118
	mov	eax, DWORD PTR _conf$[esp+4]
	push	esi
	push	DWORD PTR [eax+8]
	call	_lh_insert
	mov	esi, eax
	add	esp, 8
; Line 119
	test	esi, esi
	je	SHORT $LN3@CONF_add_s
; Line 120
	push	esi
	push	edi
	call	_sk_delete_ptr
; Line 121
	push	DWORD PTR [esi+4]
	call	_CRYPTO_free
; Line 122
	push	DWORD PTR [esi+8]
	call	_CRYPTO_free
; Line 123
	push	esi
	call	_CRYPTO_free
	add	esp, 20					; 00000014H
$LN3@CONF_add_s:
; Line 125
	pop	edi
	mov	eax, 1
	pop	esi
; Line 126
	ret	0
__CONF_add_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __CONF_get_section_values
_TEXT	SEGMENT
_vv$1 = -12						; size = 12
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
__CONF_get_section_values PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 96
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 85
	mov	eax, DWORD PTR _conf$[esp+8]
	test	eax, eax
	je	SHORT $LN2@CONF_get_s
	mov	ecx, DWORD PTR _section$[esp+8]
	test	ecx, ecx
	je	SHORT $LN2@CONF_get_s
; Line 88
	mov	DWORD PTR _vv$1[esp+12], ecx
; Line 89
	lea	ecx, DWORD PTR _vv$1[esp+12]
	push	ecx
	push	DWORD PTR [eax+8]
	mov	DWORD PTR _vv$1[esp+24], 0
	call	_lh_retrieve
	add	esp, 8
; Line 100
	test	eax, eax
	je	SHORT $LN2@CONF_get_s
; Line 101
	mov	eax, DWORD PTR [eax+8]
; Line 104
	add	esp, 12					; 0000000cH
	ret	0
$LN2@CONF_get_s:
; Line 103
	xor	eax, eax
; Line 104
	add	esp, 12					; 0000000cH
	ret	0
__CONF_get_section_values ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __CONF_get_section
_TEXT	SEGMENT
_vv$ = -12						; size = 12
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
__CONF_get_section PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 82
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 85
	mov	eax, DWORD PTR _conf$[esp+8]
	test	eax, eax
	je	SHORT $LN3@CONF_get_s
	mov	ecx, DWORD PTR _section$[esp+8]
	test	ecx, ecx
	je	SHORT $LN3@CONF_get_s
; Line 88
	mov	DWORD PTR _vv$[esp+12], ecx
; Line 89
	lea	ecx, DWORD PTR _vv$[esp+12]
	push	ecx
	push	DWORD PTR [eax+8]
	mov	DWORD PTR _vv$[esp+24], 0
	call	_lh_retrieve
	add	esp, 8
; Line 91
	add	esp, 12					; 0000000cH
	ret	0
$LN3@CONF_get_s:
; Line 86
	xor	eax, eax
; Line 91
	add	esp, 12					; 0000000cH
	ret	0
__CONF_get_section ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __CONF_new_section
_TEXT	SEGMENT
_conf$ = 8						; size = 4
_section$ = 12						; size = 4
__CONF_new_section PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\conf\conf_api.c
; Line 274
	push	ebp
	push	esi
	push	edi
; Line 279
	call	_sk_new_null
	mov	edi, eax
	test	edi, edi
	je	$LN7@CONF_new_s
; Line 281
	push	281					; 00000119H
	push	OFFSET ??_C@_0BJ@NNNPODKO@?4?2crypto?2conf?2conf_api?4c?$AA@
	push	12					; 0000000cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN11@CONF_new_s
; Line 283
	mov	ecx, DWORD PTR _section$[esp+8]
	lea	edx, DWORD PTR [ecx+1]
$LL12@CONF_new_s:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL12@CONF_new_s
	sub	ecx, edx
; Line 284
	push	284					; 0000011cH
	push	OFFSET ??_C@_0BJ@NNNPODKO@?4?2crypto?2conf?2conf_api?4c?$AA@
	lea	ebp, DWORD PTR [ecx+1]
	push	ebp
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi], eax
	test	eax, eax
	je	SHORT $LN11@CONF_new_s
; Line 287
	push	ebp
	push	DWORD PTR _section$[esp+12]
	push	eax
	call	_memcpy
; Line 291
	mov	eax, DWORD PTR _conf$[esp+20]
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+8], edi
	push	esi
	push	DWORD PTR [eax+8]
	call	_lh_insert
	add	esp, 20					; 00000014H
; Line 292
	test	eax, eax
	je	SHORT $LN13@CONF_new_s
	push	OFFSET ??_C@_0L@BFMFELMC@vv?5?$DN?$DN?5NULL?$AA@
	push	292					; 00000124H
	push	OFFSET ??_C@_0BJ@NNNPODKO@?4?2crypto?2conf?2conf_api?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN13@CONF_new_s:
; Line 302
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
; Line 303
	ret	0
$LN11@CONF_new_s:
; Line 297
	push	edi
	call	_sk_free
	add	esp, 4
; Line 298
	test	esi, esi
	je	SHORT $LN7@CONF_new_s
; Line 299
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN7@CONF_new_s:
; Line 302
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebp
; Line 303
	ret	0
__CONF_new_section ENDP
_TEXT	ENDS
END

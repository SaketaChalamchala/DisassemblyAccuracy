; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\mdc2\mdc2test.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BJ@NDCLICOI@Now?5is?5the?5time?5for?5all?5?$AA@ ; `string'
;	COMDAT ??_C@_0BJ@NDCLICOI@Now?5is?5the?5time?5for?5all?5?$AA@
CONST	SEGMENT
??_C@_0BJ@NDCLICOI@Now?5is?5the?5time?5for?5all?5?$AA@ DB 'Now is the tim'
	DB	'e for all ', 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
_pad1	DB	042H
	DB	0e5H
	DB	0cH
	DB	0d2H
	DB	024H
	DB	0baH
	DB	0ceH
	DB	0baH
	DB	076H
	DB	0bH
	DB	0ddH
	DB	02bH
	DB	0d4H
	DB	09H
	DB	028H
	DB	01aH
_pad2	DB	02eH
	DB	046H
	DB	079H
	DB	0b5H
	DB	0adH
	DB	0d9H
	DB	0caH
	DB	075H
	DB	035H
	DB	0d8H
	DB	07aH
	DB	0feH
	DB	0abH
	DB	033H
	DB	0beH
	DB	0e2H
?text@?1??main@@9@9 DD FLAT:??_C@_0BJ@NDCLICOI@Now?5is?5the?5time?5for?5all?5?$AA@ ; `main'::`2'::text
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
PUBLIC	??_C@_04JFFKLGJF@?$CF02X?$AA@			; `string'
PUBLIC	??_C@_0P@ICOGIILP@?5?$DM?9?5generated?6?$AA@	; `string'
PUBLIC	??_C@_0N@NAONKCGF@?5?$DM?9?5correct?6?$AA@	; `string'
PUBLIC	??_C@_0L@HEPBNLIL@pad1?5?9?5ok?6?$AA@		; `string'
PUBLIC	??_C@_0L@PKHONMGI@pad2?5?9?5ok?6?$AA@		; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__exit:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_mdc2:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0L@PKHONMGI@pad2?5?9?5ok?6?$AA@
CONST	SEGMENT
??_C@_0L@PKHONMGI@pad2?5?9?5ok?6?$AA@ DB 'pad2 - ok', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HEPBNLIL@pad1?5?9?5ok?6?$AA@
CONST	SEGMENT
??_C@_0L@HEPBNLIL@pad1?5?9?5ok?6?$AA@ DB 'pad1 - ok', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NAONKCGF@?5?$DM?9?5correct?6?$AA@
CONST	SEGMENT
??_C@_0N@NAONKCGF@?5?$DM?9?5correct?6?$AA@ DB ' <- correct', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ICOGIILP@?5?$DM?9?5generated?6?$AA@
CONST	SEGMENT
??_C@_0P@ICOGIILP@?5?$DM?9?5generated?6?$AA@ DB ' <- generated', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFFKLGJF@?$CF02X?$AA@
CONST	SEGMENT
??_C@_04JFFKLGJF@?$CF02X?$AA@ DB '%02X', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_c$ = -44						; size = 24
_md$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mdc2\mdc2test.c
; Line 94
	mov	eax, 44					; 0000002cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+44], eax
	push	esi
	push	edi
; Line 105
	lea	eax, DWORD PTR _c$[esp+52]
	xor	edi, edi
	push	eax
	call	_EVP_MD_CTX_init
	add	esp, 4
; Line 106
	push	edi
	call	_EVP_mdc2
	push	eax
	lea	eax, DWORD PTR _c$[esp+60]
	push	eax
	call	_EVP_DigestInit_ex
; Line 107
	mov	edx, DWORD PTR ?text@?1??main@@9@9
	add	esp, 12					; 0000000cH
	mov	ecx, edx
	lea	esi, DWORD PTR [ecx+1]
$LL35@main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL35@main
	sub	ecx, esi
	lea	eax, DWORD PTR _c$[esp+52]
	push	ecx
	push	edx
	push	eax
	call	_EVP_DigestUpdate
; Line 108
	push	0
	lea	eax, DWORD PTR _md$[esp+68]
	push	eax
	lea	eax, DWORD PTR _c$[esp+72]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 24					; 00000018H
; Line 110
	lea	ecx, DWORD PTR _md$[esp+52]
	mov	edx, OFFSET _pad1
	mov	esi, 12					; 0000000cH
	npad	4
$LL38@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN37@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL38@main
; Line 119
	push	OFFSET ??_C@_0L@HEPBNLIL@pad1?5?9?5ok?6?$AA@
	call	_printf
	jmp	SHORT $LN44@main
$LN37@main:
; Line 111
	xor	esi, esi
	npad	1
$LL4@main:
; Line 112
	movzx	eax, BYTE PTR _md$[esp+esi+52]
	push	eax
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 16					; 00000010H
	jl	SHORT $LL4@main
; Line 113
	push	OFFSET ??_C@_0P@ICOGIILP@?5?$DM?9?5generated?6?$AA@
	call	_printf
	add	esp, 4
; Line 114
	xor	esi, esi
	npad	8
$LL7@main:
; Line 115
	movzx	eax, BYTE PTR _pad1[esi]
	push	eax
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 16					; 00000010H
	jl	SHORT $LL7@main
; Line 116
	push	OFFSET ??_C@_0N@NAONKCGF@?5?$DM?9?5correct?6?$AA@
	call	_printf
; Line 117
	mov	edi, 1
$LN44@main:
; Line 121
	add	esp, 4
	push	0
	call	_EVP_mdc2
	push	eax
	lea	eax, DWORD PTR _c$[esp+60]
	push	eax
	call	_EVP_DigestInit_ex
; Line 124
	mov	edx, DWORD PTR ?text@?1??main@@9@9
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _c$[esp+64]
	mov	ecx, edx
	mov	DWORD PTR [eax+28], 2
	lea	esi, DWORD PTR [ecx+1]
$LL39@main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL39@main
	sub	ecx, esi
	lea	eax, DWORD PTR _c$[esp+52]
	push	ecx
	push	edx
	push	eax
	call	_EVP_DigestUpdate
; Line 125
	push	0
	lea	eax, DWORD PTR _md$[esp+68]
	push	eax
	lea	eax, DWORD PTR _c$[esp+72]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 24					; 00000018H
; Line 127
	lea	ecx, DWORD PTR _md$[esp+52]
	mov	edx, OFFSET _pad2
	mov	esi, 12					; 0000000cH
	npad	1
$LL42@main:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN41@main
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL42@main
; Line 136
	push	OFFSET ??_C@_0L@PKHONMGI@pad2?5?9?5ok?6?$AA@
	call	_printf
	jmp	SHORT $LN45@main
$LN41@main:
; Line 128
	xor	esi, esi
	npad	1
$LL10@main:
; Line 129
	movzx	eax, BYTE PTR _md$[esp+esi+52]
	push	eax
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 16					; 00000010H
	jl	SHORT $LL10@main
; Line 130
	push	OFFSET ??_C@_0P@ICOGIILP@?5?$DM?9?5generated?6?$AA@
	call	_printf
	add	esp, 4
; Line 131
	xor	esi, esi
	npad	8
$LL13@main:
; Line 132
	movzx	eax, BYTE PTR _pad2[esi]
	push	eax
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	call	_printf
	inc	esi
	add	esp, 8
	cmp	esi, 16					; 00000010H
	jl	SHORT $LL13@main
; Line 133
	push	OFFSET ??_C@_0N@NAONKCGF@?5?$DM?9?5correct?6?$AA@
	call	_printf
; Line 134
	mov	edi, 1
$LN45@main:
; Line 138
	add	esp, 4
	lea	eax, DWORD PTR _c$[esp+52]
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 143
	push	edi
	call	DWORD PTR __imp__exit
	pop	edi
	pop	esi
$LN46@main:
$LN43@main:
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

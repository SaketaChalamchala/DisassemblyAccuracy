; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_psk_key
PUBLIC	??_C@_0L@GEPJCEMB@server?4pem?$AA@		; `string'
PUBLIC	??_C@_0M@KGLHFLLH@server2?4pem?$AA@		; `string'
PUBLIC	_s_crlf
PUBLIC	??_C@_0BA@ENIBCIEA@Client_identity?$AA@		; `string'
PUBLIC	??_C@_0BM@KAILKIHH@Lets?5print?5some?5clear?5text?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@IFNCPDLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@ ; `string'
PUBLIC	??_C@_0CO@JCGCJBGH@HTTP?11?40?5200?5ok?$AN?6Content?9type?3?5t@ ; `string'
_BSS	SEGMENT
_psk_key DD	01H DUP (?)
_s_server_verify DD 01H DUP (?)
_s_key_file DD	01H DUP (?)
_s_chain_file DD 01H DUP (?)
_s_key_file2 DD	01H DUP (?)
_s_dcert_file DD 01H DUP (?)
_s_dkey_file DD	01H DUP (?)
_s_dchain_file DD 01H DUP (?)
_s_nbio	DD	01H DUP (?)
_s_nbio_test DD	01H DUP (?)
_s_crlf	DD	01H DUP (?)
_ctx	DD	01H DUP (?)
_ctx2	DD	01H DUP (?)
_www	DD	01H DUP (?)
_bio_s_out DD	01H DUP (?)
_bio_s_msg DD	01H DUP (?)
_s_debug DD	01H DUP (?)
_s_tlsextdebug DD 01H DUP (?)
_s_tlsextstatus DD 01H DUP (?)
_no_resume_ephemeral DD 01H DUP (?)
_s_msg	DD	01H DUP (?)
_s_quiet DD	01H DUP (?)
_s_ign_eof DD	01H DUP (?)
_s_brief DD	01H DUP (?)
_keymatexportlabel DD 01H DUP (?)
_hack	DD	01H DUP (?)
_engine_id DD	01H DUP (?)
_session_id_prefix DD 01H DUP (?)
_enable_timeouts DD 01H DUP (?)
_cert_chain DD	01H DUP (?)
_serverinfo_in DD 01H DUP (?)
_s_serverinfo_file DD 01H DUP (?)
_local_argc DD	01H DUP (?)
_srtp_profiles DD 01H DUP (?)
?psk_identity_hint@?1??s_server_main@@9@9 DD 01H DUP (?) ; `s_server_main'::`2'::psk_identity_hint
?rsa_tmp@?1??tmp_rsa_cb@@9@9 DD 01H DUP (?)		; `tmp_rsa_cb'::`2'::rsa_tmp
_first	DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0CO@JCGCJBGH@HTTP?11?40?5200?5ok?$AN?6Content?9type?3?5t@
CONST	SEGMENT
??_C@_0CO@JCGCJBGH@HTTP?11?40?5200?5ok?$AN?6Content?9type?3?5t@ DB 'HTTP/'
	DB	'1.0 200 ok', 0dH, 0aH, 'Content-type: text/plain', 0dH, 0aH, 0dH
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IFNCPDLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BL@IFNCPDLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@ DB ' '
	DB	'                         ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KAILKIHH@Lets?5print?5some?5clear?5text?6?$AA@
CONST	SEGMENT
??_C@_0BM@KAILKIHH@Lets?5print?5some?5clear?5text?6?$AA@ DB 'Lets print s'
	DB	'ome clear text', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ENIBCIEA@Client_identity?$AA@
CONST	SEGMENT
??_C@_0BA@ENIBCIEA@Client_identity?$AA@ DB 'Client_identity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KGLHFLLH@server2?4pem?$AA@
CONST	SEGMENT
??_C@_0M@KGLHFLLH@server2?4pem?$AA@ DB 'server2.pem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GEPJCEMB@server?4pem?$AA@
CONST	SEGMENT
??_C@_0L@GEPJCEMB@server?4pem?$AA@ DB 'server.pem', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
_dh2048_p DB	0f6H
	DB	042H
	DB	057H
	DB	0b7H
	DB	08H
	DB	07fH
	DB	08H
	DB	017H
	DB	072H
	DB	0a2H
	DB	0baH
	DB	0d6H
	DB	0a9H
	DB	042H
	DB	0f3H
	DB	05H
	DB	0e8H
	DB	0f9H
	DB	053H
	DB	011H
	DB	039H
	DB	04fH
	DB	0b6H
	DB	0f1H
	DB	06eH
	DB	0b9H
	DB	04bH
	DB	038H
	DB	020H
	DB	0daH
	DB	01H
	DB	0a7H
	DB	056H
	DB	0a3H
	DB	014H
	DB	0e9H
	DB	08fH
	DB	040H
	DB	055H
	DB	0f3H
	DB	0d0H
	DB	07H
	DB	0c6H
	DB	0cbH
	DB	043H
	DB	0a9H
	DB	094H
	DB	0adH
	DB	0f7H
	DB	04cH
	DB	064H
	DB	086H
	DB	049H
	DB	0f8H
	DB	0cH
	DB	083H
	DB	0bdH
	DB	065H
	DB	0e9H
	DB	017H
	DB	0d4H
	DB	0a1H
	DB	0d3H
	DB	050H
	DB	0f8H
	DB	0f5H
	DB	059H
	DB	05fH
	DB	0dcH
	DB	076H
	DB	052H
	DB	04fH
	DB	03dH
	DB	03dH
	DB	08dH
	DB	0dbH
	DB	0ceH
	DB	099H
	DB	0e1H
	DB	057H
	DB	092H
	DB	059H
	DB	0cdH
	DB	0fdH
	DB	0b8H
	DB	0aeH
	DB	074H
	DB	04fH
	DB	0c5H
	DB	0fcH
	DB	076H
	DB	0bcH
	DB	083H
	DB	0c5H
	DB	047H
	DB	030H
	DB	061H
	DB	0ceH
	DB	07cH
	DB	0c9H
	DB	066H
	DB	0ffH
	DB	015H
	DB	0f9H
	DB	0bbH
	DB	0fdH
	DB	091H
	DB	05eH
	DB	0c7H
	DB	01H
	DB	0aaH
	DB	0d3H
	DB	05bH
	DB	09eH
	DB	08dH
	DB	0a0H
	DB	0a5H
	DB	072H
	DB	03aH
	DB	0d4H
	DB	01aH
	DB	0f0H
	DB	0bfH
	DB	046H
	DB	00H
	DB	058H
	DB	02bH
	DB	0e5H
	DB	0f4H
	DB	088H
	DB	0fdH
	DB	058H
	DB	04eH
	DB	049H
	DB	0dbH
	DB	0cdH
	DB	020H
	DB	0b4H
	DB	09dH
	DB	0e4H
	DB	091H
	DB	07H
	DB	036H
	DB	06bH
	DB	033H
	DB	06cH
	DB	038H
	DB	0dH
	DB	045H
	DB	01dH
	DB	0fH
	DB	07cH
	DB	088H
	DB	0b3H
	DB	01cH
	DB	07cH
	DB	05bH
	DB	02dH
	DB	08eH
	DB	0f6H
	DB	0f3H
	DB	0c9H
	DB	023H
	DB	0c0H
	DB	043H
	DB	0f0H
	DB	0a5H
	DB	05bH
	DB	018H
	DB	08dH
	DB	08eH
	DB	0bbH
	DB	055H
	DB	08cH
	DB	0b8H
	DB	05dH
	DB	038H
	DB	0d3H
	DB	034H
	DB	0fdH
	DB	07cH
	DB	017H
	DB	057H
	DB	043H
	DB	0a3H
	DB	01dH
	DB	018H
	DB	06cH
	DB	0deH
	DB	033H
	DB	021H
	DB	02cH
	DB	0b5H
	DB	02aH
	DB	0ffH
	DB	03cH
	DB	0e1H
	DB	0b1H
	DB	029H
	DB	040H
	DB	018H
	DB	011H
	DB	08dH
	DB	07cH
	DB	084H
	DB	0a7H
	DB	0aH
	DB	072H
	DB	0d6H
	DB	086H
	DB	0c4H
	DB	03H
	DB	019H
	DB	0c8H
	DB	07H
	DB	029H
	DB	07aH
	DB	0caH
	DB	095H
	DB	0cH
	DB	0d9H
	DB	096H
	DB	09fH
	DB	0abH
	DB	0d0H
	DB	0aH
	DB	050H
	DB	09bH
	DB	02H
	DB	046H
	DB	0d3H
	DB	08H
	DB	03dH
	DB	066H
	DB	0a4H
	DB	05dH
	DB	041H
	DB	09fH
	DB	09cH
	DB	07cH
	DB	0bdH
	DB	089H
	DB	04bH
	DB	022H
	DB	019H
	DB	026H
	DB	0baH
	DB	0abH
	DB	0a2H
	DB	05eH
	DB	0c3H
	DB	055H
	DB	0e9H
	DB	032H
	DB	0bH
	DB	03bH
_dh2048_g DB	02H
	ORG $+3
_bufsize DD	04000H
_accept_socket DD 0ffffffffH
_s_server_session_id_context DD 01H
_s_cert_file DD	FLAT:??_C@_0L@GEPJCEMB@server?4pem?$AA@
_s_cert_file2 DD FLAT:??_C@_0M@KGLHFLLH@server2?4pem?$AA@
_keymatexportlen DD 014H
_psk_identity DD FLAT:??_C@_0BA@ENIBCIEA@Client_identity?$AA@
?str@?CI@??sv_body@@9@9 DD FLAT:??_C@_0BM@KAILKIHH@Lets?5print?5some?5clear?5text?6?$AA@ ; `sv_body'::`40'::str
_tlscstatp DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	00H
?space@?BC@??www_body@@9@9 DD FLAT:??_C@_0BL@IFNCPDLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@ ; `www_body'::`18'::space
?text@?BM@??www_body@@9@9 DD FLAT:??_C@_0CO@JCGCJBGH@HTTP?11?40?5200?5ok?$AN?6Content?9type?3?5t@ ; `www_body'::`28'::text
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_s_server_main
PUBLIC	??_C@_0P@EGMHKAJD@psk_server_cb?6?$AA@		; `string'
PUBLIC	??_C@_0CJ@GFNDBAPP@Error?3?5client?5did?5not?5send?5PSK?5i@ ; `string'
PUBLIC	??_C@_0BN@LDLODOD@identity_len?$DN?$CFd?5identity?$DN?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0DP@MFHEMHOG@PSK?5error?3?5client?5identity?5not?5f@ ; `string'
PUBLIC	??_C@_0BL@JFIDPFC@PSK?5client?5identity?5found?6?$AA@ ; `string'
PUBLIC	??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@ ; `string'
PUBLIC	??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@ ; `string'
PUBLIC	??_C@_0BE@NPIEHMJD@fetched?5PSK?5len?$DN?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@MCPCBAJ@Error?5in?5PSK?5server?5callback?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@DJBBDCJN@SRP?5username?5?$DN?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0BH@EHOAHANM@User?5?$CFs?5doesn?8t?5exist?6?$AA@ ; `string'
PUBLIC	??_C@_0DA@IDIINJEG@SRP?5parameters?5set?3?5username?5?$DN?5?$CC@ ; `string'
PUBLIC	??_C@_0BM@EFKLHHDL@usage?3?5s_server?5?$FLargs?5?4?4?4?$FN?6?$AA@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0DE@CDLIKOHM@?5?9accept?5arg?5?5?5?9?5port?5to?5accept?5@ ; `string'
PUBLIC	??_C@_0EA@PAPKIBFG@?5?9verify_hostname?5host?5?9?5check?5p@ ; `string'
PUBLIC	??_C@_0DP@DJCBKCN@?5?9verify_email?5email?5?9?5check?5pee@ ; `string'
PUBLIC	??_C@_0DO@GNFHPCIL@?5?9verify_ip?5ipaddr?5?9?5check?5peer?5@ ; `string'
PUBLIC	??_C@_0CJ@GMMJKDHE@?5?9context?5arg?5?5?9?5set?5session?5ID?5@ ; `string'
PUBLIC	??_C@_0DI@EHAJMJGI@?5?9verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@ ; `string'
PUBLIC	??_C@_0EL@EMDCAGKF@?5?9Verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@ ; `string'
PUBLIC	??_C@_0DE@GOBPIMCB@?5?9verify_return_error?5?9?5return?5v@ ; `string'
PUBLIC	??_C@_0CK@KDBCENND@?5?9cert?5arg?5?5?5?5?5?9?5certificate?5fil@ ; `string'
PUBLIC	??_C@_0CC@GANAEPBK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CIdefault?5is?5?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_0DI@EDDMMMHG@?5?9serverinfo?5arg?5?9?5PEM?5serverinf@ ; `string'
PUBLIC	??_C@_0FM@DFNGBAIE@?5?9auth?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5send?5and?5@ ; `string'
PUBLIC	??_C@_0EM@KLDCHMKH@?5?9auth_require_reneg?5?9?5Do?5not?5se@ ; `string'
PUBLIC	??_C@_0FD@DCIIMPCM@?5?9no_resumption_on_reneg?5?9?5set?5S@ ; `string'
PUBLIC	??_C@_0IO@PAKPLPCJ@?5?9crl_check?5?5?5?5?9?5check?5the?5peer?5@ ; `string'
PUBLIC	??_C@_0MB@HBNHEKMC@?5?9crl_check_all?5?9?5check?5the?5peer@ ; `string'
PUBLIC	??_C@_0DO@ILODNPNH@?5?9certform?5arg?5?9?5certificate?5for@ ; `string'
PUBLIC	??_C@_0DL@LCPKKIAF@?5?9key?5arg?5?5?5?5?5?5?9?5Private?5Key?5fil@ ; `string'
PUBLIC	??_C@_0DA@DKGPEDCO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5not?5specified?5?$CI@ ; `string'
PUBLIC	??_C@_0DO@FPHKBDMN@?5?9keyform?5arg?5?5?9?5key?5format?5?$CIPEM@ ; `string'
PUBLIC	??_C@_0DG@BFMFFOFA@?5?9pass?5arg?5?5?5?5?5?9?5private?5key?5fil@ ; `string'
PUBLIC	??_C@_0ED@EPNBHDKA@?5?9dcert?5arg?5?5?5?5?9?5second?5certific@ ; `string'
PUBLIC	??_C@_0EF@PPLJKHJC@?5?9dcertform?5x?5?5?9?5second?5certific@ ; `string'
PUBLIC	??_C@_0ED@JFBFPBFK@?5?9dkey?5arg?5?5?5?5?5?9?5second?5private?5@ ; `string'
PUBLIC	??_C@_0EF@NPPBEAHP@?5?9dkeyform?5arg?5?9?5second?5key?5form@ ; `string'
PUBLIC	??_C@_0DN@JKCGHIGO@?5?9dpass?5arg?5?5?5?5?9?5second?5private?5@ ; `string'
PUBLIC	??_C@_0EK@KKOMNAMH@?5?9dhparam?5arg?5?5?9?5DH?5parameter?5fi@ ; `string'
PUBLIC	??_C@_0DJ@CPBNPMMP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5or?5a?5default?5se@ ; `string'
PUBLIC	??_C@_0LE@HMGNCDPA@?5?9named_curve?5arg?5?5?9?5Elliptic?5cu@ ; `string'
PUBLIC	??_C@_0CL@DKKNEEF@?5?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9bl@ ; `string'
PUBLIC	??_C@_0DG@BIAPMNCG@?5?9nbio_test?5?5?5?5?9?5test?5with?5the?5n@ ; `string'
PUBLIC	??_C@_0DF@NJANHEED@?5?9crlf?5?5?5?5?5?5?5?5?5?9?5convert?5LF?5from@ ; `string'
PUBLIC	??_C@_0CE@KMFKDDAD@?5?9debug?5?5?5?5?5?5?5?5?9?5Print?5more?5outp@ ; `string'
PUBLIC	??_C@_0CJ@PGHHBNJL@?5?9msg?5?5?5?5?5?5?5?5?5?5?9?5Show?5protocol?5m@ ; `string'
PUBLIC	??_C@_0CH@MJMFOODH@?5?9state?5?5?5?5?5?5?5?5?9?5Print?5the?5SSL?5s@ ; `string'
PUBLIC	??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@ ; `string'
PUBLIC	??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@ ; `string'
PUBLIC	??_C@_0ED@DIMIHAHA@?5?9no_alt_chains?5?9?5only?5ever?5use?5@ ; `string'
PUBLIC	??_C@_0DH@OCGPNBII@?5?9nocert?5?5?5?5?5?5?5?9?5Don?8t?5use?5any?5c@ ; `string'
PUBLIC	??_C@_0EE@LKODDGDH@?5?9cipher?5arg?5?5?5?9?5play?5with?5?8open@ ; `string'
PUBLIC	??_C@_0DC@EAODFDCE@?5?9serverpref?5?5?5?9?5Use?5server?8s?5ci@ ; `string'
PUBLIC	??_C@_0CD@HCKCHAJP@?5?9quiet?5?5?5?5?5?5?5?5?9?5No?5server?5outpu@ ; `string'
PUBLIC	??_C@_0DA@ONPEIANK@?5?9no_tmp_rsa?5?5?5?9?5Do?5not?5generate@ ; `string'
PUBLIC	??_C@_0CL@HHGBLNKK@?5?9psk_hint?5arg?5?9?5PSK?5identity?5hi@ ; `string'
PUBLIC	??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@ ; `string'
PUBLIC	??_C@_0DC@GEBNJGIF@?5?9srpvfile?5file?5?5?5?5?5?5?9?5The?5verif@ ; `string'
PUBLIC	??_C@_0DP@BGCKAGPH@?5?9srpuserseed?5string?5?9?5A?5seed?5st@ ; `string'
PUBLIC	??_C@_0CC@IFKIHPCF@?5?9ssl2?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5SSLv2@ ; `string'
PUBLIC	??_C@_0CC@OHGNMMDG@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5SSLv3@ ; `string'
PUBLIC	??_C@_0CE@BGDPIMBG@?5?9tls1_2?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@ ; `string'
PUBLIC	??_C@_0CE@LBHBFJCD@?5?9tls1_1?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@ ; `string'
PUBLIC	??_C@_0CC@DKKOMIC@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@ ; `string'
PUBLIC	??_C@_0CD@BHDDFFPP@?5?9dtls1?5?5?5?5?5?5?5?5?9?5Just?5talk?5DTLSv@ ; `string'
PUBLIC	??_C@_0CF@DOBDJEBM@?5?9dtls1_2?5?5?5?5?5?5?9?5Just?5talk?5DTLSv@ ; `string'
PUBLIC	??_C@_0CC@JMMJAEFK@?5?9timeout?5?5?5?5?5?5?9?5Enable?5timeouts@ ; `string'
PUBLIC	??_C@_0CF@BDGDGBPN@?5?9mtu?5?5?5?5?5?5?5?5?5?5?9?5Set?5link?5layer?5@ ; `string'
PUBLIC	??_C@_0CL@FPJLPAPI@?5?9chain?5?5?5?5?5?5?5?5?9?5Read?5a?5certific@ ; `string'
PUBLIC	??_C@_0CF@BAHAENBC@?5?9no_ssl2?5?5?5?5?5?5?9?5Just?5disable?5SS@ ; `string'
PUBLIC	??_C@_0CF@HCLFPOAB@?5?9no_ssl3?5?5?5?5?5?5?9?5Just?5disable?5SS@ ; `string'
PUBLIC	??_C@_0CF@JGHCNOLF@?5?9no_tls1?5?5?5?5?5?5?9?5Just?5disable?5TL@ ; `string'
PUBLIC	??_C@_0CH@OJKBDNEP@?5?9no_tls1_1?5?5?5?5?9?5Just?5disable?5TL@ ; `string'
PUBLIC	??_C@_0CH@EOOPOIHK@?5?9no_tls1_2?5?5?5?5?9?5Just?5disable?5TL@ ; `string'
PUBLIC	??_C@_0CH@HKBECHLI@?5?9no_dhe?5?5?5?5?5?5?5?9?5Disable?5ephemer@ ; `string'
PUBLIC	??_C@_0CJ@HCENCPIP@?5?9no_ecdhe?5?5?5?5?5?9?5Disable?5ephemer@ ; `string'
PUBLIC	??_C@_0DA@BLOMEAPO@?5?9bugs?5?5?5?5?5?5?5?5?5?9?5Turn?5on?5SSL?5bug@ ; `string'
PUBLIC	??_C@_0DF@OGLMLECP@?5?9hack?5?5?5?5?5?5?5?5?5?9?5workaround?5for?5@ ; `string'
PUBLIC	??_C@_0DK@NKPBDN@?5?9www?5?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@ ; `string'
PUBLIC	??_C@_0EJ@PGEHLKHG@?5?9WWW?5?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@ ; `string'
PUBLIC	??_C@_0EJ@KMLFICKC@?5?9HTTP?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@ ; `string'
PUBLIC	??_C@_0EM@CKNPNAOB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5with?5the?5assump@ ; `string'
PUBLIC	??_C@_0DK@KOEJDDIL@?5?9engine?5id?5?5?5?5?9?5Initialise?5and?5@ ; `string'
PUBLIC	??_C@_0EC@MPACHOMG@?5?9id_prefix?5arg?5?9?5Generate?5SSL?1T@ ; `string'
PUBLIC	??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0DL@IMLAMCFN@?5?9servername?5host?5?9?5servername?5f@ ; `string'
PUBLIC	??_C@_0EL@DKEOAMCM@?5?9servername_fatal?5?9?5on?5mismatch@ ; `string'
PUBLIC	??_C@_0DJ@HMGHLPEB@?5?9cert2?5arg?5?5?5?5?9?5certificate?5fil@ ; `string'
PUBLIC	??_C@_0EK@DPIIKBKN@?5?9key2?5arg?5?5?5?5?5?9?5Private?5Key?5fil@ ; `string'
PUBLIC	??_C@_0DK@DLFEFHDC@?5?9tlsextdebug?5?5?9?5hex?5dump?5of?5all@ ; `string'
PUBLIC	??_C@_0DM@HKKMFIPG@?5?9no_ticket?5?5?5?5?9?5disable?5use?5of?5@ ; `string'
PUBLIC	??_C@_0EJ@DKJMGLID@?5?9legacy_renegotiation?5?9?5enable?5@ ; `string'
PUBLIC	??_C@_0EN@BHNFHAEP@?5?9sigalgs?5arg?5?5?5?5?5?5?9?5Signature?5a@ ; `string'
PUBLIC	??_C@_0EF@KIDJIJJG@?5?9client_sigalgs?5arg?5?5?9?5Signatur@ ; `string'
PUBLIC	??_C@_0EL@OPGHAICC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5certific@ ; `string'
PUBLIC	??_C@_0GA@JODOAIDK@?5?9nextprotoneg?5arg?5?9?5set?5the?5adv@ ; `string'
PUBLIC	??_C@_0FF@IDLIJFPH@?5?9use_srtp?5profiles?5?9?5Offer?5SRTP@ ; `string'
PUBLIC	??_C@_0FK@FHOGGFAL@?5?9alpn?5arg?5?5?9?5set?5the?5advertised@ ; `string'
PUBLIC	??_C@_0DN@MIJBJIJH@?5?9keymatexport?5label?5?5?5?9?5Export?5@ ; `string'
PUBLIC	??_C@_0EL@MBBJFPLO@?5?9keymatexportlen?5len?5?5?9?5Export?5@ ; `string'
PUBLIC	??_C@_0DN@PIJAPNDO@?5?9status?5?5?5?5?5?5?5?5?5?5?5?9?5respond?5to?5@ ; `string'
PUBLIC	??_C@_0DN@ENJFNIAB@?5?9status_verbose?5?5?5?9?5enable?5stat@ ; `string'
PUBLIC	??_C@_0DH@GELNADKB@?5?9status_timeout?5n?5?9?5status?5requ@ ; `string'
PUBLIC	??_C@_0DC@BCBIFLHN@?5?9status_url?5URL?5?5?5?9?5status?5requ@ ; `string'
PUBLIC	??_C@_0CB@DENLFGMB@Hostname?5in?5TLS?5extension?3?5?$CC?$CFs?$CC?6@ ; `string'
PUBLIC	??_C@_0BL@IKCLJGPN@Switching?5server?5context?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@EEHCEBAF@cert_status?3?5callback?5called?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@LFHCICE@cert_status?3?5can?8t?5parse?5AIA?5URL@ ; `string'
PUBLIC	??_C@_0BK@LBJPJFCC@cert_status?3?5AIA?5URL?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0DC@KIDKKKGD@cert_status?3?5no?5AIA?5and?5no?5defau@ ; `string'
PUBLIC	??_C@_0DB@PCOLJLN@cert_status?3?5Can?8t?5retrieve?5issu@ ; `string'
PUBLIC	??_C@_0CH@FIBKHNJL@cert_status?3?5error?5querying?5resp@ ; `string'
PUBLIC	??_C@_0CC@EKGMLEDN@cert_status?3?5ocsp?5response?5sent?3@ ; `string'
PUBLIC	??_C@_0CK@GJAAAGHK@ALPN?5protocols?5advertised?5by?5the@ ; `string'
PUBLIC	??_C@_02KEGNLNML@?0?5?$AA@			; `string'
PUBLIC	??_C@_0BK@OKOCAJML@ALPN?5protocols?5selected?3?5?$AA@ ; `string'
PUBLIC	??_C@_05HDLOEPOC@?9port?$AA@			; `string'
PUBLIC	??_C@_07JGMHLDLK@?9accept?$AA@			; `string'
PUBLIC	??_C@_08MBEANIIH@?9naccept?$AA@			; `string'
PUBLIC	??_C@_0BF@CDBDGPIJ@bad?5accept?5value?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_07FILEFCOC@?9verify?$AA@			; `string'
PUBLIC	??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_07JHAJGLHO@?9Verify?$AA@			; `string'
PUBLIC	??_C@_0CP@BJKKJEFM@verify?5depth?5is?5?$CFd?0?5must?5return?5@ ; `string'
PUBLIC	??_C@_08GKDHLPPP@?9context?$AA@			; `string'
PUBLIC	??_C@_05DLEDECNE@?9cert?$AA@			; `string'
PUBLIC	??_C@_04LKNJOOFD@?9CRL?$AA@			; `string'
PUBLIC	??_C@_0O@FJDFGOOH@?9crl_download?$AA@		; `string'
PUBLIC	??_C@_0M@JIFAPBHK@?9serverinfo?$AA@		; `string'
PUBLIC	??_C@_09ECGGEOOO@?9certform?$AA@		; `string'
PUBLIC	??_C@_04FMEKFICB@?9key?$AA@			; `string'
PUBLIC	??_C@_08OAHLMBGP@?9keyform?$AA@			; `string'
PUBLIC	??_C@_05NNOCMECB@?9pass?$AA@			; `string'
PUBLIC	??_C@_0M@MHFOFGHE@?9cert_chain?$AA@		; `string'
PUBLIC	??_C@_08HBLAKNLA@?9dhparam?$AA@			; `string'
PUBLIC	??_C@_0L@OFMMHJMO@?9dcertform?$AA@		; `string'
PUBLIC	??_C@_06JBNADPPB@?9dcert?$AA@			; `string'
PUBLIC	??_C@_09CNGKIAIL@?9dkeyform?$AA@		; `string'
PUBLIC	??_C@_06HHHBLJAE@?9dpass?$AA@			; `string'
PUBLIC	??_C@_05MFHLCCEP@?9dkey?$AA@			; `string'
PUBLIC	??_C@_0N@OKGHHAHD@?9dcert_chain?$AA@		; `string'
PUBLIC	??_C@_07BEMJNHEG@?9nocert?$AA@			; `string'
PUBLIC	??_C@_07MNNNLALG@?9CApath?$AA@			; `string'
PUBLIC	??_C@_0N@IPPFFGOM@?9chainCApath?$AA@		; `string'
PUBLIC	??_C@_0O@NMJDGHEA@?9verifyCApath?$AA@		; `string'
PUBLIC	??_C@_09LDMOBAAI@?9no_cache?$AA@		; `string'
PUBLIC	??_C@_0L@FKNFKJA@?9ext_cache?$AA@		; `string'
PUBLIC	??_C@_08PDJLLFEO@?9CRLform?$AA@			; `string'
PUBLIC	??_C@_0BF@JEHPJFIB@?9verify_return_error?$AA@	; `string'
PUBLIC	??_C@_0O@IOFAKFNC@?9verify_quiet?$AA@		; `string'
PUBLIC	??_C@_0N@EBJMJDFN@?9build_chain?$AA@		; `string'
PUBLIC	??_C@_07EAFCHGPO@?9CAfile?$AA@			; `string'
PUBLIC	??_C@_0N@CHKJAKE@?9chainCAfile?$AA@		; `string'
PUBLIC	??_C@_0O@FBBMKBAI@?9verifyCAfile?$AA@		; `string'
PUBLIC	??_C@_05OHEBDJNH@?9nbio?$AA@			; `string'
PUBLIC	??_C@_0L@DGAHAHFJ@?9nbio_test?$AA@		; `string'
PUBLIC	??_C@_08BPJEDGGD@?9ign_eof?$AA@			; `string'
PUBLIC	??_C@_0M@PIMNDHCE@?9no_ign_eof?$AA@		; `string'
PUBLIC	??_C@_06OHOHKFPP@?9debug?$AA@			; `string'
PUBLIC	??_C@_0N@DOFNHFMN@?9tlsextdebug?$AA@		; `string'
PUBLIC	??_C@_07KDLKDLMI@?9status?$AA@			; `string'
PUBLIC	??_C@_0BA@BJMLCLNE@?9status_verbose?$AA@	; `string'
PUBLIC	??_C@_0BA@ILLKHFCB@?9status_timeout?$AA@	; `string'
PUBLIC	??_C@_0M@LCKNOINJ@?9status_url?$AA@		; `string'
PUBLIC	??_C@_0BD@CCODGPPI@Error?5parsing?5URL?6?$AA@	; `string'
PUBLIC	??_C@_04LFMLOHOA@?9msg?$AA@			; `string'
PUBLIC	??_C@_08OAMMFJFJ@?9msgfile?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_05BDEPCDEL@?9hack?$AA@			; `string'
PUBLIC	??_C@_06IFPFIOLF@?9state?$AA@			; `string'
PUBLIC	??_C@_05JIMBNDFL@?9crlf?$AA@			; `string'
PUBLIC	??_C@_06HONEMELG@?9quiet?$AA@			; `string'
PUBLIC	??_C@_06DBECBIEA@?9brief?$AA@			; `string'
PUBLIC	??_C@_0M@BFGMIMIO@?9no_tmp_rsa?$AA@		; `string'
PUBLIC	??_C@_07IKMMOABC@?9no_dhe?$AA@			; `string'
PUBLIC	??_C@_09ICIAJIMM@?9no_ecdhe?$AA@		; `string'
PUBLIC	??_C@_0BF@NMHHJINK@?9no_resume_ephemeral?$AA@	; `string'
PUBLIC	??_C@_09OGLFDGKP@?9psk_hint?$AA@		; `string'
PUBLIC	??_C@_04LLANCHKO@?9psk?$AA@			; `string'
PUBLIC	??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_09LJIFNPCB@?9srpvfile?$AA@		; `string'
PUBLIC	??_C@_0N@PNICEKHP@?9srpuserseed?$AA@		; `string'
PUBLIC	??_C@_04PGMDFMPL@?9rev?$AA@			; `string'
PUBLIC	??_C@_04MHKEOKJG@?9www?$AA@			; `string'
PUBLIC	??_C@_04MKFPCHOK@?9WWW?$AA@			; `string'
PUBLIC	??_C@_05IONBIPB@?9HTTP?$AA@			; `string'
PUBLIC	??_C@_05IHFBIKKN@?9ssl3?$AA@			; `string'
PUBLIC	??_C@_05BIEHJHLL@?9tls1?$AA@			; `string'
PUBLIC	??_C@_07MIOHAHOM@?9tls1_1?$AA@			; `string'
PUBLIC	??_C@_07ODMKFECP@?9tls1_2?$AA@			; `string'
PUBLIC	??_C@_05DIDPLGID@?9dtls?$AA@			; `string'
PUBLIC	??_C@_06LCNEOKJO@?9dtls1?$AA@			; `string'
PUBLIC	??_C@_08CFINCDNK@?9dtls1_2?$AA@			; `string'
PUBLIC	??_C@_08MDOIANFM@?9timeout?$AA@			; `string'
PUBLIC	??_C@_04MIHAIBLG@?9mtu?$AA@			; `string'
PUBLIC	??_C@_06NEDJBPEF@?9chain?$AA@			; `string'
PUBLIC	??_C@_0L@DMPGLNOJ@?9id_prefix?$AA@		; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_05LGFPCDPE@?9rand?$AA@			; `string'
PUBLIC	??_C@_0M@IEKJDKFH@?9servername?$AA@		; `string'
PUBLIC	??_C@_0BC@OHCHOECI@?9servername_fatal?$AA@	; `string'
PUBLIC	??_C@_06GMPFABPO@?9cert2?$AA@			; `string'
PUBLIC	??_C@_05KBEFAOHH@?9key2?$AA@			; `string'
PUBLIC	??_C@_0O@PMNNGHPN@?9nextprotoneg?$AA@		; `string'
PUBLIC	??_C@_05IPCCHAIL@?9alpn?$AA@			; `string'
PUBLIC	??_C@_09BJOIJNBC@?9use_srtp?$AA@		; `string'
PUBLIC	??_C@_0O@HHCLPCNN@?9keymatexport?$AA@		; `string'
PUBLIC	??_C@_0BB@MLPFNLDC@?9keymatexportlen?$AA@	; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@FNPAALFK@Can?8t?5use?5?9HTTP?0?5?9www?5or?5?9WWW?5wi@ ; `string'
PUBLIC	??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; `string'
PUBLIC	??_C@_0CE@HCELPDHN@server?5certificate?5private?5key?5f@ ; `string'
PUBLIC	??_C@_0BI@KEHADFAK@server?5certificate?5file?$AA@ ; `string'
PUBLIC	??_C@_0BJ@INNCEGLI@server?5certificate?5chain?$AA@ ; `string'
PUBLIC	??_C@_0CL@ICCLMJCM@second?5server?5certificate?5privat@ ; `string'
PUBLIC	??_C@_0BP@EJJLONPG@second?5server?5certificate?5file?$AA@ ; `string'
PUBLIC	??_C@_0BD@PIKJPJLO@Error?5loading?5CRL?6?$AA@	; `string'
PUBLIC	??_C@_0BC@IKMGLJPK@Error?5adding?5CRL?6?$AA@	; `string'
PUBLIC	??_C@_0CE@BCIGGKGN@second?5certificate?5private?5key?5f@ ; `string'
PUBLIC	??_C@_0CA@DJDEBDFH@second?5server?5certificate?5chain?$AA@ ; `string'
PUBLIC	??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ ; `string'
PUBLIC	??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; `string'
PUBLIC	??_C@_0EH@EGJGHBGM@warning?3?5id_prefix?5is?5too?5long?0?5@ ; `string'
PUBLIC	??_C@_0DB@GPNGCKNP@warning?3?5id_prefix?5is?5too?5long?5i@ ; `string'
PUBLIC	??_C@_0BL@LHIJJPBK@error?5setting?5?8id_prefix?8?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@JIEBEBOD@id_prefix?5?8?$CFs?8?5set?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@HJJPNDHG@Error?5loading?5store?5locations?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@JJJJPDLM@Setting?5secondary?5ctx?5parameters@ ; `string'
PUBLIC	??_C@_0BM@KICIHDMG@Setting?5temp?5DH?5parameters?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@OAKJEKOM@Using?5default?5temp?5DH?5parameters@ ; `string'
PUBLIC	??_C@_0DI@BDMABIIJ@PSK?5key?5given?5or?5JPAKE?5in?5use?0?5s@ ; `string'
PUBLIC	??_C@_0CM@BDIGNJAA@error?5setting?5PSK?5identity?5hint?5@ ; `string'
PUBLIC	??_C@_0DB@MMDPDCBI@Cannot?5initialize?5SRP?5verifier?5f@ ; `string'
PUBLIC	??_C@_07EJIBEDLO@ACCEPT?6?$AA@			; `string'
PUBLIC	??_C@_0CB@MPAOKBBN@?$CF4ld?5items?5in?5the?5session?5cache?6@ ; `string'
PUBLIC	??_C@_0CG@HNDGAFHM@?$CF4ld?5client?5connects?5?$CISSL_connec@ ; `string'
PUBLIC	??_C@_0CK@PBJGIJFK@?$CF4ld?5client?5renegotiates?5?$CISSL_co@ ; `string'
PUBLIC	??_C@_0CE@FNOOBLAE@?$CF4ld?5client?5connects?5that?5finish@ ; `string'
PUBLIC	??_C@_0CE@EMOLPMJC@?$CF4ld?5server?5accepts?5?$CISSL_accept?$CI@ ; `string'
PUBLIC	??_C@_0CJ@EBEGKNDG@?$CF4ld?5server?5renegotiates?5?$CISSL_ac@ ; `string'
PUBLIC	??_C@_0CD@PCCHKGGG@?$CF4ld?5server?5accepts?5that?5finishe@ ; `string'
PUBLIC	??_C@_0BJ@MFDDKOJN@?$CF4ld?5session?5cache?5hits?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@GPHJFIIB@?$CF4ld?5session?5cache?5misses?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@PIMPAAJA@?$CF4ld?5session?5cache?5timeouts?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@KAOGBOIB@?$CF4ld?5callback?5cache?5hits?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@MHPDJLOH@?$CF4ld?5cache?5full?5overflows?5?$CI?$CFld?5a@ ; `string'
PUBLIC	??_C@_0BC@HCEECIGJ@?4?2apps?2s_server?4c?$AA@	; `string'
PUBLIC	??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_0BM@FCELEJEG@turning?5on?5non?5blocking?5io?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@MCFEIGOI@MTU?5too?5small?4?5Must?5be?5at?5least?5@ ; `string'
PUBLIC	??_C@_0BD@LHDLOJJB@Failed?5to?5set?5MTU?6?$AA@	; `string'
PUBLIC	??_C@_1CE@HLPONNPN@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAs?$AA_?$AAs?$AAe?$AAr?$AAv?$AAe?$AAr?$AA?4?$AAc?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@KKDDCBII@?$AAl?$AAf?$AA_?$AAn?$AAu?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_05PHCCFBBB@DONE?6?$AA@			; `string'
PUBLIC	??_C@_0O@ICIFEBNC@HEARTBEATING?6?$AA@		; `string'
PUBLIC	??_C@_0BI@ONIEOAMP@SSL_do_handshake?5?9?$DO?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@FBNLNGKL@LOOKUP?5renego?5during?5write?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@KLLIDCPK@LOOKUP?5done?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BH@OEMJAMH@LOOKUP?5not?5successful?6?$AA@ ; `string'
PUBLIC	??_C@_0N@JJGKAHK@Write?5BLOCK?6?$AA@		; `string'
PUBLIC	??_C@_06CBJFBFDH@ERROR?6?$AA@			; `string'
PUBLIC	??_C@_0BL@FMPJFOPJ@LOOKUP?5renego?5during?5read?6?$AA@ ; `string'
PUBLIC	??_C@_0M@MNBJAGGO@Read?5BLOCK?6?$AA@		; `string'
PUBLIC	??_C@_0BD@BBFCHACL@shutting?5down?5SSL?6?$AA@	; `string'
PUBLIC	??_C@_0BD@PGBIDINB@CONNECTION?5CLOSED?6?$AA@	; `string'
PUBLIC	??_C@_0BI@GLICEMCM@shutdown?5accept?5socket?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@KLIEJNND@LOOKUP?5during?5accept?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_06KKGLJNJB@DELAY?6?$AA@			; `string'
PUBLIC	??_C@_0BB@EHGPOOCJ@verify?5error?3?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BE@PJOINFNP@Client?5certificate?6?$AA@	; `string'
PUBLIC	??_C@_0M@JEDHOBJK@subject?$DN?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0L@HCGAGKOB@issuer?$DN?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BD@IIKNKKE@Shared?5ciphers?3?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_06DIOMAMDA@?$CINONE?$CJ?$AA@		; `string'
PUBLIC	??_C@_0O@MNNIJCGH@CIPHER?5is?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0O@IOJBKLGH@NEXTPROTO?5is?5?$AA@		; `string'
PUBLIC	??_C@_0CH@FCLNMFKH@SRTP?5Extension?5negotiated?0?5profi@ ; `string'
PUBLIC	??_C@_0BD@NBNHECEG@Reused?5session?9id?6?$AA@	; `string'
PUBLIC	??_C@_0CI@FJEPEBJM@Peer?5has?5incorrect?5TLSv1?5block?5p@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_04CGMGFKEF@?5NOT?$AA@			; `string'
PUBLIC	??_C@_0CF@HNLNDOIK@Secure?5Renegotiation?5IS?$CFs?5suppor@ ; `string'
PUBLIC	??_C@_0BL@LPMKCGAM@Keying?5material?5exporter?3?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@CNJDMPIH@?5?5?5?5Label?3?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@HGLPNLLM@?5?5?5?5Length?3?5?$CFi?5bytes?6?$AA@ ; `string'
PUBLIC	??_C@_0L@DLCKNELL@?5?5?5?5Error?6?$AA@		; `string'
PUBLIC	??_C@_0BG@DLJBAMO@?5?5?5?5Keying?5material?3?5?$AA@ ; `string'
PUBLIC	??_C@_04JFFKLGJF@?$CF02X?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0O@PBMAEJJB@read?5R?5BLOCK?6?$AA@		; `string'
PUBLIC	??_C@_04IBPFIGHK@GET?5?$AA@			; `string'
PUBLIC	??_C@_0M@LLJJBINF@GET?5?1stats?5?$AA@		; `string'
PUBLIC	??_C@_0CN@HGKKJBIE@HTTP?11?40?5200?5ok?$AN?6Content?9type?3?5t@ ; `string'
PUBLIC	??_C@_0CA@BNEAEELL@?$DMHTML?$DO?$DMBODY?5BGCOLOR?$DN?$CC?$CDffffff?$CC?$DO?6?$AA@ ; `string'
PUBLIC	??_C@_06FNICHGOI@?$DMpre?$DO?6?$AA@		; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_0CG@PKGFLEON@Ciphers?5supported?5in?5s_server?5bi@ ; `string'
PUBLIC	??_C@_0M@MLKHEEAE@?$CF?911s?3?$CF?925s?$AA@	; `string'
PUBLIC	??_C@_0DB@ONBHKEMA@?9?9?9?6Ciphers?5common?5between?5both?5@ ; `string'
PUBLIC	??_C@_0N@GOGBFOHK@?9?9?9?6Reused?0?5?$AA@	; `string'
PUBLIC	??_C@_09CFNAMCPG@?9?9?9?6New?0?5?$AA@		; `string'
PUBLIC	??_C@_0BC@CNENGAEP@?$CFs?0?5Cipher?5is?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_04JIKOKJIN@?9?9?9?6?$AA@			; `string'
PUBLIC	??_C@_0CB@PDIIHGK@no?5client?5certificate?5available?6@ ; `string'
PUBLIC	??_C@_0BD@IKKHHOEE@?$DM?1BODY?$DO?$DM?1HTML?$DO?$AN?6?$AN?6?$AA@ ; `string'
PUBLIC	??_C@_05KCENFFMJ@GET?5?1?$AA@			; `string'
PUBLIC	??_C@_0BP@KDAGJEOA@?8?$CFs?8?5is?5an?5invalid?5file?5name?$AN?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@JJDMIBD@?8?$CFs?8?5contains?5?8?4?4?8?5reference?$AN?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@CCDGJOGB@?8?$CFs?8?5is?5an?5invalid?5path?$AN?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@DAOHLPL@?8?$CFs?8?5is?5a?5directory?$AN?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@FPDCCHNB@Error?5opening?5?8?$CFs?8?$AN?6?$AA@ ; `string'
PUBLIC	??_C@_08IOLHANGA@FILE?3?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_05LHMDENIF@?4html?$AA@			; `string'
PUBLIC	??_C@_04EFOINKHF@?4php?$AA@			; `string'
PUBLIC	??_C@_04DKBFJDAN@?4htm?$AA@			; `string'
PUBLIC	??_C@_0BA@IMEDIBFH@rwrite?5W?5BLOCK?6?$AA@	; `string'
PUBLIC	??_C@_0BE@CFFLJCCG@CONNECTION?5FAILURE?6?$AA@	; `string'
PUBLIC	??_C@_0BN@FHEJJEJ@LOOKUP?5renego?5during?5accept?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@KAHEJIIO@CONNECTION?5ESTABLISHED?6?$AA@ ; `string'
PUBLIC	??_C@_05HKHBPABE@CLOSE?$AA@			; `string'
PUBLIC	??_C@_0CI@BENGEPLC@Allocation?5error?5in?5generating?5R@ ; `string'
PUBLIC	??_C@_0CE@GMHHAGLI@Generating?5temp?5?$CI?$CFd?5bit?$CJ?5RSA?5key@ ; `string'
PUBLIC	??_C@_0DA@EBMBKEKP@Out?5of?5memory?5adding?5session?5to?5@ ; `string'
PUBLIC	??_C@_0CF@ODDDDFFH@New?5session?5added?5to?5external?5ca@ ; `string'
PUBLIC	??_C@_0BL@MAAHBGHK@Lookup?5session?3?5cache?5hit?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@NMMFINGL@Lookup?5session?3?5cache?5miss?6?$AA@ ; `string'
EXTRN	__imp___wassert:PROC
EXTRN	__imp__isxdigit:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__atol:PROC
EXTRN	__imp___stricmp:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BIO_test_flags:PROC
EXTRN	_BIO_set_callback:PROC
EXTRN	_BIO_set_callback_arg:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_gets:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_int_ctrl:PROC
EXTRN	_BIO_push:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_get_retry_reason:PROC
EXTRN	_BIO_s_null:PROC
EXTRN	_BIO_f_buffer:PROC
EXTRN	_BIO_f_nbio_test:PROC
EXTRN	_BIO_sock_should_retry:PROC
EXTRN	_BIO_socket_ioctl:PROC
EXTRN	_BIO_new_socket:PROC
EXTRN	_BIO_new_dgram:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_hex2bn:PROC
EXTRN	___WSAFDIsSet@8:PROC
EXTRN	__imp__closesocket@4:PROC
EXTRN	__imp__select@20:PROC
EXTRN	__imp__shutdown@8:PROC
EXTRN	_BUF_memdup:PROC
EXTRN	_BUF_reverse:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_RSA_new:PROC
EXTRN	_RSA_generate_key_ex:PROC
EXTRN	_RSA_free:PROC
EXTRN	_DH_new:PROC
EXTRN	_DH_free:PROC
EXTRN	_X509_STORE_CTX_init:PROC
EXTRN	_X509_STORE_CTX_cleanup:PROC
EXTRN	_X509_STORE_get_by_subject:PROC
EXTRN	_X509_VERIFY_PARAM_free:PROC
EXTRN	_X509_verify_cert_error_string:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_CRL_free:PROC
EXTRN	_X509_NAME_oneline:PROC
EXTRN	_X509_get_issuer_name:PROC
EXTRN	_X509_get_subject_name:PROC
EXTRN	_X509_print:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_RAND_status:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_X509_email_free:PROC
EXTRN	_X509_get1_ocsp:PROC
EXTRN	_OCSP_cert_to_id:PROC
EXTRN	_OCSP_request_add0_id:PROC
EXTRN	_OCSP_parse_url:PROC
EXTRN	_OCSP_REQUEST_add_ext:PROC
EXTRN	_OCSP_RESPONSE_free:PROC
EXTRN	_i2d_OCSP_RESPONSE:PROC
EXTRN	_OCSP_CERTID_free:PROC
EXTRN	_OCSP_REQUEST_new:PROC
EXTRN	_OCSP_REQUEST_free:PROC
EXTRN	_OCSP_RESPONSE_print:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_load_files:PROC
EXTRN	_str2fmt:PROC
EXTRN	_app_passwd:PROC
EXTRN	_load_cert:PROC
EXTRN	_load_crl:PROC
EXTRN	_load_key:PROC
EXTRN	_load_certs:PROC
EXTRN	_setup_engine:PROC
EXTRN	_process_responder:PROC
EXTRN	_load_config:PROC
EXTRN	_args_verify:PROC
EXTRN	_next_protos_parse:PROC
EXTRN	_app_isdir:PROC
EXTRN	_raw_read_stdin:PROC
EXTRN	_raw_write_stdout:PROC
EXTRN	_PEM_write_bio_X509:PROC
EXTRN	_PEM_read_bio_DHparams:PROC
EXTRN	_SSL_set_msg_callback:PROC
EXTRN	_SSL_CTX_sess_set_new_cb:PROC
EXTRN	_SSL_CTX_sess_set_remove_cb:PROC
EXTRN	_SSL_CTX_sess_set_get_cb:PROC
EXTRN	_SSL_CTX_set_info_callback:PROC
EXTRN	_SSL_CTX_set_cookie_generate_cb:PROC
EXTRN	_SSL_CTX_set_cookie_verify_cb:PROC
EXTRN	_SSL_CTX_set_next_protos_advertised_cb:PROC
EXTRN	_SSL_get0_next_proto_negotiated:PROC
EXTRN	_SSL_select_next_proto:PROC
EXTRN	_SSL_CTX_set_alpn_select_cb:PROC
EXTRN	_SSL_CTX_set_psk_server_callback:PROC
EXTRN	_SSL_CTX_use_psk_identity_hint:PROC
EXTRN	_SSL_get_servername:PROC
EXTRN	_SSL_export_keying_material:PROC
EXTRN	_SSL_CTX_set_tlsext_use_srtp:PROC
EXTRN	_SSL_get_selected_srtp_profile:PROC
EXTRN	_PEM_write_bio_SSL_SESSION:PROC
EXTRN	_BIO_f_ssl:PROC
EXTRN	_SSL_CTX_new:PROC
EXTRN	_SSL_CTX_free:PROC
EXTRN	_SSL_CTX_get_cert_store:PROC
EXTRN	_SSL_clear:PROC
EXTRN	_SSL_get_current_cipher:PROC
EXTRN	_SSL_CIPHER_get_version:PROC
EXTRN	_SSL_CIPHER_get_name:PROC
EXTRN	_SSL_get_shared_ciphers:PROC
EXTRN	_SSL_pending:PROC
EXTRN	_SSL_set_bio:PROC
EXTRN	_SSL_get_rbio:PROC
EXTRN	_SSL_get_wbio:PROC
EXTRN	_SSL_set_verify:PROC
EXTRN	_SSL_CTX_use_serverinfo_file:PROC
EXTRN	_SSL_load_client_CA_file:PROC
EXTRN	_SSL_load_error_strings:PROC
EXTRN	_SSL_SESSION_get_id:PROC
EXTRN	_SSL_SESSION_print:PROC
EXTRN	_i2d_SSL_SESSION:PROC
EXTRN	_SSL_CTX_set_generate_session_id:PROC
EXTRN	_SSL_has_matching_session_id:PROC
EXTRN	_d2i_SSL_SESSION:PROC
EXTRN	_SSL_get_peer_certificate:PROC
EXTRN	_SSL_CTX_set_verify:PROC
EXTRN	_SSL_CTX_set_session_id_context:PROC
EXTRN	_SSL_new:PROC
EXTRN	_SSL_set_session_id_context:PROC
EXTRN	_SSL_CTX_set1_param:PROC
EXTRN	_SSL_CTX_set_srp_username_callback:PROC
EXTRN	_SSL_CTX_set_srp_cb_arg:PROC
EXTRN	_SSL_set_srp_server_param:PROC
EXTRN	_SSL_get_srp_username:PROC
EXTRN	_SSL_free:PROC
EXTRN	_SSL_accept:PROC
EXTRN	_SSL_read:PROC
EXTRN	_SSL_write:PROC
EXTRN	_SSL_ctrl:PROC
EXTRN	_SSL_callback_ctrl:PROC
EXTRN	_SSL_CTX_ctrl:PROC
EXTRN	_SSL_CTX_callback_ctrl:PROC
EXTRN	_SSL_get_error:PROC
EXTRN	_SSLv3_server_method:PROC
EXTRN	_SSLv23_server_method:PROC
EXTRN	_TLSv1_server_method:PROC
EXTRN	_TLSv1_1_server_method:PROC
EXTRN	_TLSv1_2_server_method:PROC
EXTRN	_DTLSv1_server_method:PROC
EXTRN	_DTLSv1_2_server_method:PROC
EXTRN	_DTLS_server_method:PROC
EXTRN	_SSL_get_ciphers:PROC
EXTRN	_SSL_do_handshake:PROC
EXTRN	_SSL_renegotiate:PROC
EXTRN	_SSL_CTX_set_client_CA_list:PROC
EXTRN	_SSL_set_accept_state:PROC
EXTRN	_SSL_library_init:PROC
EXTRN	_SSL_get_certificate:PROC
EXTRN	_SSL_CTX_set_quiet_shutdown:PROC
EXTRN	_SSL_set_shutdown:PROC
EXTRN	_SSL_version:PROC
EXTRN	_SSL_CTX_set_default_verify_paths:PROC
EXTRN	_SSL_CTX_load_verify_locations:PROC
EXTRN	_SSL_get_session:PROC
EXTRN	_SSL_get_SSL_CTX:PROC
EXTRN	_SSL_set_SSL_CTX:PROC
EXTRN	_SSL_state:PROC
EXTRN	_SSL_get_verify_result:PROC
EXTRN	_SSL_CTX_set_tmp_rsa_callback:PROC
EXTRN	_SSL_set_debug:PROC
EXTRN	_SSL_cache_hit:PROC
EXTRN	_SSL_CONF_CTX_new:PROC
EXTRN	_SSL_CONF_CTX_free:PROC
EXTRN	_SSL_CONF_CTX_set_flags:PROC
EXTRN	_SRP_user_pwd_free:PROC
EXTRN	_SRP_VBASE_new:PROC
EXTRN	_SRP_VBASE_init:PROC
EXTRN	_SRP_VBASE_get1_by_user:PROC
EXTRN	__imp___kbhit:PROC
EXTRN	_do_server:PROC
EXTRN	_verify_callback:PROC
EXTRN	_set_cert_key_stuff:PROC
EXTRN	_ssl_print_sigalgs:PROC
EXTRN	_ssl_print_point_formats:PROC
EXTRN	_ssl_print_curves:PROC
EXTRN	_extract_port:PROC
EXTRN	_bio_dump_callback:PROC
EXTRN	_apps_ssl_info_callback:PROC
EXTRN	_msg_cb:PROC
EXTRN	_tlsext_cb:PROC
EXTRN	_generate_cookie_callback:PROC
EXTRN	_verify_cookie_callback:PROC
EXTRN	_ssl_ctx_set_excert:PROC
EXTRN	_ssl_excert_free:PROC
EXTRN	_args_excert:PROC
EXTRN	_load_excert:PROC
EXTRN	_print_ssl_summary:PROC
EXTRN	_args_ssl:PROC
EXTRN	_args_ssl_call:PROC
EXTRN	_ssl_ctx_add_crls:PROC
EXTRN	_ssl_load_stores:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_bio_err:DWORD
EXTRN	_verify_depth:DWORD
EXTRN	_verify_return_error:DWORD
EXTRN	_verify_quiet:DWORD
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
_socket_mtu DD	01H DUP (?)
_local_argv DD	01H DUP (?)
_srp_callback_parm DB 0cH DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0BM@NMMFINGL@Lookup?5session?3?5cache?5miss?6?$AA@
CONST	SEGMENT
??_C@_0BM@NMMFINGL@Lookup?5session?3?5cache?5miss?6?$AA@ DB 'Lookup sessi'
	DB	'on: cache miss', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MAAHBGHK@Lookup?5session?3?5cache?5hit?6?$AA@
CONST	SEGMENT
??_C@_0BL@MAAHBGHK@Lookup?5session?3?5cache?5hit?6?$AA@ DB 'Lookup sessio'
	DB	'n: cache hit', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@ODDDDFFH@New?5session?5added?5to?5external?5ca@
CONST	SEGMENT
??_C@_0CF@ODDDDFFH@New?5session?5added?5to?5external?5ca@ DB 'New session'
	DB	' added to external cache', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@EBMBKEKP@Out?5of?5memory?5adding?5session?5to?5@
CONST	SEGMENT
??_C@_0DA@EBMBKEKP@Out?5of?5memory?5adding?5session?5to?5@ DB 'Out of mem'
	DB	'ory adding session to external cache', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GMHHAGLI@Generating?5temp?5?$CI?$CFd?5bit?$CJ?5RSA?5key@
CONST	SEGMENT
??_C@_0CE@GMHHAGLI@Generating?5temp?5?$CI?$CFd?5bit?$CJ?5RSA?5key@ DB 'Ge'
	DB	'nerating temp (%d bit) RSA key...', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@BENGEPLC@Allocation?5error?5in?5generating?5R@
CONST	SEGMENT
??_C@_0CI@BENGEPLC@Allocation?5error?5in?5generating?5R@ DB 'Allocation e'
	DB	'rror in generating RSA key', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05HKHBPABE@CLOSE?$AA@
CONST	SEGMENT
??_C@_05HKHBPABE@CLOSE?$AA@ DB 'CLOSE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KAHEJIIO@CONNECTION?5ESTABLISHED?6?$AA@
CONST	SEGMENT
??_C@_0BI@KAHEJIIO@CONNECTION?5ESTABLISHED?6?$AA@ DB 'CONNECTION ESTABLIS'
	DB	'HED', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FHEJJEJ@LOOKUP?5renego?5during?5accept?6?$AA@
CONST	SEGMENT
??_C@_0BN@FHEJJEJ@LOOKUP?5renego?5during?5accept?6?$AA@ DB 'LOOKUP renego'
	DB	' during accept', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CFFLJCCG@CONNECTION?5FAILURE?6?$AA@
CONST	SEGMENT
??_C@_0BE@CFFLJCCG@CONNECTION?5FAILURE?6?$AA@ DB 'CONNECTION FAILURE', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMEDIBFH@rwrite?5W?5BLOCK?6?$AA@
CONST	SEGMENT
??_C@_0BA@IMEDIBFH@rwrite?5W?5BLOCK?6?$AA@ DB 'rwrite W BLOCK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04DKBFJDAN@?4htm?$AA@
CONST	SEGMENT
??_C@_04DKBFJDAN@?4htm?$AA@ DB '.htm', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EFOINKHF@?4php?$AA@
CONST	SEGMENT
??_C@_04EFOINKHF@?4php?$AA@ DB '.php', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LHMDENIF@?4html?$AA@
CONST	SEGMENT
??_C@_05LHMDENIF@?4html?$AA@ DB '.html', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IOLHANGA@FILE?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_08IOLHANGA@FILE?3?$CFs?6?$AA@ DB 'FILE:%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FPDCCHNB@Error?5opening?5?8?$CFs?8?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BF@FPDCCHNB@Error?5opening?5?8?$CFs?8?$AN?6?$AA@ DB 'Error opening'
	DB	' ''%s''', 0dH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DAOHLPL@?8?$CFs?8?5is?5a?5directory?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BG@DAOHLPL@?8?$CFs?8?5is?5a?5directory?$AN?6?$AA@ DB '''%s'' is a '
	DB	'directory', 0dH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CCDGJOGB@?8?$CFs?8?5is?5an?5invalid?5path?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BK@CCDGJOGB@?8?$CFs?8?5is?5an?5invalid?5path?$AN?6?$AA@ DB '''%s'''
	DB	' is an invalid path', 0dH, 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JJDMIBD@?8?$CFs?8?5contains?5?8?4?4?8?5reference?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BP@JJDMIBD@?8?$CFs?8?5contains?5?8?4?4?8?5reference?$AN?6?$AA@ DB ''''
	DB	'%s'' contains ''..'' reference', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KDAGJEOA@?8?$CFs?8?5is?5an?5invalid?5file?5name?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BP@KDAGJEOA@?8?$CFs?8?5is?5an?5invalid?5file?5name?$AN?6?$AA@ DB ''''
	DB	'%s'' is an invalid file name', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KCENFFMJ@GET?5?1?$AA@
CONST	SEGMENT
??_C@_05KCENFFMJ@GET?5?1?$AA@ DB 'GET /', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IKKHHOEE@?$DM?1BODY?$DO?$DM?1HTML?$DO?$AN?6?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BD@IKKHHOEE@?$DM?1BODY?$DO?$DM?1HTML?$DO?$AN?6?$AN?6?$AA@ DB '</BO'
	DB	'DY></HTML>', 0dH, 0aH, 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PDIIHGK@no?5client?5certificate?5available?6@
CONST	SEGMENT
??_C@_0CB@PDIIHGK@no?5client?5certificate?5available?6@ DB 'no client cer'
	DB	'tificate available', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JIKOKJIN@?9?9?9?6?$AA@
CONST	SEGMENT
??_C@_04JIKOKJIN@?9?9?9?6?$AA@ DB '---', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CNENGAEP@?$CFs?0?5Cipher?5is?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BC@CNENGAEP@?$CFs?0?5Cipher?5is?5?$CFs?6?$AA@ DB '%s, Cipher is %s'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09CFNAMCPG@?9?9?9?6New?0?5?$AA@
CONST	SEGMENT
??_C@_09CFNAMCPG@?9?9?9?6New?0?5?$AA@ DB '---', 0aH, 'New, ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GOGBFOHK@?9?9?9?6Reused?0?5?$AA@
CONST	SEGMENT
??_C@_0N@GOGBFOHK@?9?9?9?6Reused?0?5?$AA@ DB '---', 0aH, 'Reused, ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@ONBHKEMA@?9?9?9?6Ciphers?5common?5between?5both?5@
CONST	SEGMENT
??_C@_0DB@ONBHKEMA@?9?9?9?6Ciphers?5common?5between?5both?5@ DB '---', 0aH
	DB	'Ciphers common between both SSL end points:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MLKHEEAE@?$CF?911s?3?$CF?925s?$AA@
CONST	SEGMENT
??_C@_0M@MLKHEEAE@?$CF?911s?3?$CF?925s?$AA@ DB '%-11s:%-25s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PKGFLEON@Ciphers?5supported?5in?5s_server?5bi@
CONST	SEGMENT
??_C@_0CG@PKGFLEON@Ciphers?5supported?5in?5s_server?5bi@ DB 'Ciphers supp'
	DB	'orted in s_server binary', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06FNICHGOI@?$DMpre?$DO?6?$AA@
CONST	SEGMENT
??_C@_06FNICHGOI@?$DMpre?$DO?6?$AA@ DB '<pre>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BNEAEELL@?$DMHTML?$DO?$DMBODY?5BGCOLOR?$DN?$CC?$CDffffff?$CC?$DO?6?$AA@
CONST	SEGMENT
??_C@_0CA@BNEAEELL@?$DMHTML?$DO?$DMBODY?5BGCOLOR?$DN?$CC?$CDffffff?$CC?$DO?6?$AA@ DB '<'
	DB	'HTML><BODY BGCOLOR="#ffffff">', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@HGKKJBIE@HTTP?11?40?5200?5ok?$AN?6Content?9type?3?5t@
CONST	SEGMENT
??_C@_0CN@HGKKJBIE@HTTP?11?40?5200?5ok?$AN?6Content?9type?3?5t@ DB 'HTTP/'
	DB	'1.0 200 ok', 0dH, 0aH, 'Content-type: text/html', 0dH, 0aH, 0dH
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LLJJBINF@GET?5?1stats?5?$AA@
CONST	SEGMENT
??_C@_0M@LLJJBINF@GET?5?1stats?5?$AA@ DB 'GET /stats ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04IBPFIGHK@GET?5?$AA@
CONST	SEGMENT
??_C@_04IBPFIGHK@GET?5?$AA@ DB 'GET ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PBMAEJJB@read?5R?5BLOCK?6?$AA@
CONST	SEGMENT
??_C@_0O@PBMAEJJB@read?5R?5BLOCK?6?$AA@ DB 'read R BLOCK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFFKLGJF@?$CF02X?$AA@
CONST	SEGMENT
??_C@_04JFFKLGJF@?$CF02X?$AA@ DB '%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DLJBAMO@?5?5?5?5Keying?5material?3?5?$AA@
CONST	SEGMENT
??_C@_0BG@DLJBAMO@?5?5?5?5Keying?5material?3?5?$AA@ DB '    Keying materi'
	DB	'al: ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DLCKNELL@?5?5?5?5Error?6?$AA@
CONST	SEGMENT
??_C@_0L@DLCKNELL@?5?5?5?5Error?6?$AA@ DB '    Error', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HGLPNLLM@?5?5?5?5Length?3?5?$CFi?5bytes?6?$AA@
CONST	SEGMENT
??_C@_0BG@HGLPNLLM@?5?5?5?5Length?3?5?$CFi?5bytes?6?$AA@ DB '    Length: '
	DB	'%i bytes', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CNJDMPIH@?5?5?5?5Label?3?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BB@CNJDMPIH@?5?5?5?5Label?3?5?8?$CFs?8?6?$AA@ DB '    Label: ''%s'''
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LPMKCGAM@Keying?5material?5exporter?3?6?$AA@
CONST	SEGMENT
??_C@_0BL@LPMKCGAM@Keying?5material?5exporter?3?6?$AA@ DB 'Keying materia'
	DB	'l exporter:', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HNLNDOIK@Secure?5Renegotiation?5IS?$CFs?5suppor@
CONST	SEGMENT
??_C@_0CF@HNLNDOIK@Secure?5Renegotiation?5IS?$CFs?5suppor@ DB 'Secure Ren'
	DB	'egotiation IS%s supported', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGMGFKEF@?5NOT?$AA@
CONST	SEGMENT
??_C@_04CGMGFKEF@?5NOT?$AA@ DB ' NOT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FJEPEBJM@Peer?5has?5incorrect?5TLSv1?5block?5p@
CONST	SEGMENT
??_C@_0CI@FJEPEBJM@Peer?5has?5incorrect?5TLSv1?5block?5p@ DB 'Peer has in'
	DB	'correct TLSv1 block padding', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NBNHECEG@Reused?5session?9id?6?$AA@
CONST	SEGMENT
??_C@_0BD@NBNHECEG@Reused?5session?9id?6?$AA@ DB 'Reused session-id', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@FCLNMFKH@SRTP?5Extension?5negotiated?0?5profi@
CONST	SEGMENT
??_C@_0CH@FCLNMFKH@SRTP?5Extension?5negotiated?0?5profi@ DB 'SRTP Extensi'
	DB	'on negotiated, profile=%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IOJBKLGH@NEXTPROTO?5is?5?$AA@
CONST	SEGMENT
??_C@_0O@IOJBKLGH@NEXTPROTO?5is?5?$AA@ DB 'NEXTPROTO is ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MNNIJCGH@CIPHER?5is?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0O@MNNIJCGH@CIPHER?5is?5?$CFs?6?$AA@ DB 'CIPHER is %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DIOMAMDA@?$CINONE?$CJ?$AA@
CONST	SEGMENT
??_C@_06DIOMAMDA@?$CINONE?$CJ?$AA@ DB '(NONE)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IIKNKKE@Shared?5ciphers?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@IIKNKKE@Shared?5ciphers?3?$CFs?6?$AA@ DB 'Shared ciphers:%s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HCGAGKOB@issuer?$DN?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0L@HCGAGKOB@issuer?$DN?$CFs?6?$AA@ DB 'issuer=%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JEDHOBJK@subject?$DN?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0M@JEDHOBJK@subject?$DN?$CFs?6?$AA@ DB 'subject=%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PJOINFNP@Client?5certificate?6?$AA@
CONST	SEGMENT
??_C@_0BE@PJOINFNP@Client?5certificate?6?$AA@ DB 'Client certificate', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EHGPOOCJ@verify?5error?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BB@EHGPOOCJ@verify?5error?3?$CFs?6?$AA@ DB 'verify error:%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KKGLJNJB@DELAY?6?$AA@
CONST	SEGMENT
??_C@_06KKGLJNJB@DELAY?6?$AA@ DB 'DELAY', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KLIEJNND@LOOKUP?5during?5accept?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BJ@KLIEJNND@LOOKUP?5during?5accept?5?$CFs?6?$AA@ DB 'LOOKUP during'
	DB	' accept %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GLICEMCM@shutdown?5accept?5socket?6?$AA@
CONST	SEGMENT
??_C@_0BI@GLICEMCM@shutdown?5accept?5socket?6?$AA@ DB 'shutdown accept so'
	DB	'cket', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PGBIDINB@CONNECTION?5CLOSED?6?$AA@
CONST	SEGMENT
??_C@_0BD@PGBIDINB@CONNECTION?5CLOSED?6?$AA@ DB 'CONNECTION CLOSED', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BBFCHACL@shutting?5down?5SSL?6?$AA@
CONST	SEGMENT
??_C@_0BD@BBFCHACL@shutting?5down?5SSL?6?$AA@ DB 'shutting down SSL', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MNBJAGGO@Read?5BLOCK?6?$AA@
CONST	SEGMENT
??_C@_0M@MNBJAGGO@Read?5BLOCK?6?$AA@ DB 'Read BLOCK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FMPJFOPJ@LOOKUP?5renego?5during?5read?6?$AA@
CONST	SEGMENT
??_C@_0BL@FMPJFOPJ@LOOKUP?5renego?5during?5read?6?$AA@ DB 'LOOKUP renego '
	DB	'during read', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06CBJFBFDH@ERROR?6?$AA@
CONST	SEGMENT
??_C@_06CBJFBFDH@ERROR?6?$AA@ DB 'ERROR', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JJGKAHK@Write?5BLOCK?6?$AA@
CONST	SEGMENT
??_C@_0N@JJGKAHK@Write?5BLOCK?6?$AA@ DB 'Write BLOCK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OEMJAMH@LOOKUP?5not?5successful?6?$AA@
CONST	SEGMENT
??_C@_0BH@OEMJAMH@LOOKUP?5not?5successful?6?$AA@ DB 'LOOKUP not successfu'
	DB	'l', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KLLIDCPK@LOOKUP?5done?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BA@KLLIDCPK@LOOKUP?5done?5?$CFs?6?$AA@ DB 'LOOKUP done %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FBNLNGKL@LOOKUP?5renego?5during?5write?6?$AA@
CONST	SEGMENT
??_C@_0BM@FBNLNGKL@LOOKUP?5renego?5during?5write?6?$AA@ DB 'LOOKUP renego'
	DB	' during write', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ONIEOAMP@SSL_do_handshake?5?9?$DO?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BI@ONIEOAMP@SSL_do_handshake?5?9?$DO?5?$CFd?6?$AA@ DB 'SSL_do_hand'
	DB	'shake -> %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ICIFEBNC@HEARTBEATING?6?$AA@
CONST	SEGMENT
??_C@_0O@ICIFEBNC@HEARTBEATING?6?$AA@ DB 'HEARTBEATING', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PHCCFBBB@DONE?6?$AA@
CONST	SEGMENT
??_C@_05PHCCFBBB@DONE?6?$AA@ DB 'DONE', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KKDDCBII@?$AAl?$AAf?$AA_?$AAn?$AAu?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@KKDDCBII@?$AAl?$AAf?$AA_?$AAn?$AAu?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'l'
	DB	00H, 'f', 00H, '_', 00H, 'n', 00H, 'u', 00H, 'm', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@HLPONNPN@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAs?$AA_?$AAs?$AAe?$AAr?$AAv?$AAe?$AAr?$AA?4?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@HLPONNPN@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAs?$AA_?$AAs?$AAe?$AAr?$AAv?$AAe?$AAr?$AA?4?$AAc?$AA?$AA@ DB '.'
	DB	00H, '\', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 's', 00H, '\', 00H
	DB	's', 00H, '_', 00H, 's', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e'
	DB	00H, 'r', 00H, '.', 00H, 'c', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LHDLOJJB@Failed?5to?5set?5MTU?6?$AA@
CONST	SEGMENT
??_C@_0BD@LHDLOJJB@Failed?5to?5set?5MTU?6?$AA@ DB 'Failed to set MTU', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MCFEIGOI@MTU?5too?5small?4?5Must?5be?5at?5least?5@
CONST	SEGMENT
??_C@_0CF@MCFEIGOI@MTU?5too?5small?4?5Must?5be?5at?5least?5@ DB 'MTU too '
	DB	'small. Must be at least %ld', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FCELEJEG@turning?5on?5non?5blocking?5io?6?$AA@
CONST	SEGMENT
??_C@_0BM@FCELEJEG@turning?5on?5non?5blocking?5io?6?$AA@ DB 'turning on n'
	DB	'on blocking io', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@ DB 'out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HCEECIGJ@?4?2apps?2s_server?4c?$AA@
CONST	SEGMENT
??_C@_0BC@HCEECIGJ@?4?2apps?2s_server?4c?$AA@ DB '.\apps\s_server.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@MHPDJLOH@?$CF4ld?5cache?5full?5overflows?5?$CI?$CFld?5a@
CONST	SEGMENT
??_C@_0CJ@MHPDJLOH@?$CF4ld?5cache?5full?5overflows?5?$CI?$CFld?5a@ DB '%4'
	DB	'ld cache full overflows (%ld allowed)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KAOGBOIB@?$CF4ld?5callback?5cache?5hits?6?$AA@
CONST	SEGMENT
??_C@_0BK@KAOGBOIB@?$CF4ld?5callback?5cache?5hits?6?$AA@ DB '%4ld callbac'
	DB	'k cache hits', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PIMPAAJA@?$CF4ld?5session?5cache?5timeouts?6?$AA@
CONST	SEGMENT
??_C@_0BN@PIMPAAJA@?$CF4ld?5session?5cache?5timeouts?6?$AA@ DB '%4ld sess'
	DB	'ion cache timeouts', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GPHJFIIB@?$CF4ld?5session?5cache?5misses?6?$AA@
CONST	SEGMENT
??_C@_0BL@GPHJFIIB@?$CF4ld?5session?5cache?5misses?6?$AA@ DB '%4ld sessio'
	DB	'n cache misses', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MFDDKOJN@?$CF4ld?5session?5cache?5hits?6?$AA@
CONST	SEGMENT
??_C@_0BJ@MFDDKOJN@?$CF4ld?5session?5cache?5hits?6?$AA@ DB '%4ld session '
	DB	'cache hits', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PCCHKGGG@?$CF4ld?5server?5accepts?5that?5finishe@
CONST	SEGMENT
??_C@_0CD@PCCHKGGG@?$CF4ld?5server?5accepts?5that?5finishe@ DB '%4ld serv'
	DB	'er accepts that finished', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EBEGKNDG@?$CF4ld?5server?5renegotiates?5?$CISSL_ac@
CONST	SEGMENT
??_C@_0CJ@EBEGKNDG@?$CF4ld?5server?5renegotiates?5?$CISSL_ac@ DB '%4ld se'
	DB	'rver renegotiates (SSL_accept())', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EMOLPMJC@?$CF4ld?5server?5accepts?5?$CISSL_accept?$CI@
CONST	SEGMENT
??_C@_0CE@EMOLPMJC@?$CF4ld?5server?5accepts?5?$CISSL_accept?$CI@ DB '%4ld'
	DB	' server accepts (SSL_accept())', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FNOOBLAE@?$CF4ld?5client?5connects?5that?5finish@
CONST	SEGMENT
??_C@_0CE@FNOOBLAE@?$CF4ld?5client?5connects?5that?5finish@ DB '%4ld clie'
	DB	'nt connects that finished', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PBJGIJFK@?$CF4ld?5client?5renegotiates?5?$CISSL_co@
CONST	SEGMENT
??_C@_0CK@PBJGIJFK@?$CF4ld?5client?5renegotiates?5?$CISSL_co@ DB '%4ld cl'
	DB	'ient renegotiates (SSL_connect())', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HNDGAFHM@?$CF4ld?5client?5connects?5?$CISSL_connec@
CONST	SEGMENT
??_C@_0CG@HNDGAFHM@?$CF4ld?5client?5connects?5?$CISSL_connec@ DB '%4ld cl'
	DB	'ient connects (SSL_connect())', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MPAOKBBN@?$CF4ld?5items?5in?5the?5session?5cache?6@
CONST	SEGMENT
??_C@_0CB@MPAOKBBN@?$CF4ld?5items?5in?5the?5session?5cache?6@ DB '%4ld it'
	DB	'ems in the session cache', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EJIBEDLO@ACCEPT?6?$AA@
CONST	SEGMENT
??_C@_07EJIBEDLO@ACCEPT?6?$AA@ DB 'ACCEPT', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@MMDPDCBI@Cannot?5initialize?5SRP?5verifier?5f@
CONST	SEGMENT
??_C@_0DB@MMDPDCBI@Cannot?5initialize?5SRP?5verifier?5f@ DB 'Cannot initi'
	DB	'alize SRP verifier file "%s":ret=%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BDIGNJAA@error?5setting?5PSK?5identity?5hint?5@
CONST	SEGMENT
??_C@_0CM@BDIGNJAA@error?5setting?5PSK?5identity?5hint?5@ DB 'error setti'
	DB	'ng PSK identity hint to context', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@BDMABIIJ@PSK?5key?5given?5or?5JPAKE?5in?5use?0?5s@
CONST	SEGMENT
??_C@_0DI@BDMABIIJ@PSK?5key?5given?5or?5JPAKE?5in?5use?0?5s@ DB 'PSK key '
	DB	'given or JPAKE in use, setting server callback', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@OAKJEKOM@Using?5default?5temp?5DH?5parameters@
CONST	SEGMENT
??_C@_0CC@OAKJEKOM@Using?5default?5temp?5DH?5parameters@ DB 'Using defaul'
	DB	't temp DH parameters', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KICIHDMG@Setting?5temp?5DH?5parameters?6?$AA@
CONST	SEGMENT
??_C@_0BM@KICIHDMG@Setting?5temp?5DH?5parameters?6?$AA@ DB 'Setting temp '
	DB	'DH parameters', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JJJJPDLM@Setting?5secondary?5ctx?5parameters@
CONST	SEGMENT
??_C@_0CC@JJJJPDLM@Setting?5secondary?5ctx?5parameters@ DB 'Setting secon'
	DB	'dary ctx parameters', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HJJPNDHG@Error?5loading?5store?5locations?6?$AA@
CONST	SEGMENT
??_C@_0BP@HJJPNDHG@Error?5loading?5store?5locations?6?$AA@ DB 'Error load'
	DB	'ing store locations', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JIEBEBOD@id_prefix?5?8?$CFs?8?5set?4?6?$AA@
CONST	SEGMENT
??_C@_0BF@JIEBEBOD@id_prefix?5?8?$CFs?8?5set?4?6?$AA@ DB 'id_prefix ''%s'''
	DB	' set.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LHIJJPBK@error?5setting?5?8id_prefix?8?6?$AA@
CONST	SEGMENT
??_C@_0BL@LHIJJPBK@error?5setting?5?8id_prefix?8?6?$AA@ DB 'error setting'
	DB	' ''id_prefix''', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GPNGCKNP@warning?3?5id_prefix?5is?5too?5long?5i@
CONST	SEGMENT
??_C@_0DB@GPNGCKNP@warning?3?5id_prefix?5is?5too?5long?5i@ DB 'warning: i'
	DB	'd_prefix is too long if you use SSLv2', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@EGJGHBGM@warning?3?5id_prefix?5is?5too?5long?0?5@
CONST	SEGMENT
??_C@_0EH@EGJGHBGM@warning?3?5id_prefix?5is?5too?5long?0?5@ DB 'warning: '
	DB	'id_prefix is too long, only one new session will be possible', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
CONST	SEGMENT
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ DB '%ld sem'
	DB	'i-random bytes loaded', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
CONST	SEGMENT
??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ DB 'warning, n'
	DB	'ot much extra random data, consider using the -rand option', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DJDEBDFH@second?5server?5certificate?5chain?$AA@
CONST	SEGMENT
??_C@_0CA@DJDEBDFH@second?5server?5certificate?5chain?$AA@ DB 'second ser'
	DB	'ver certificate chain', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BCIGGKGN@second?5certificate?5private?5key?5f@
CONST	SEGMENT
??_C@_0CE@BCIGGKGN@second?5certificate?5private?5key?5f@ DB 'second certi'
	DB	'ficate private key file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IKMGLJPK@Error?5adding?5CRL?6?$AA@
CONST	SEGMENT
??_C@_0BC@IKMGLJPK@Error?5adding?5CRL?6?$AA@ DB 'Error adding CRL', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PIKJPJLO@Error?5loading?5CRL?6?$AA@
CONST	SEGMENT
??_C@_0BD@PIKJPJLO@Error?5loading?5CRL?6?$AA@ DB 'Error loading CRL', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@EJJLONPG@second?5server?5certificate?5file?$AA@
CONST	SEGMENT
??_C@_0BP@EJJLONPG@second?5server?5certificate?5file?$AA@ DB 'second serv'
	DB	'er certificate file', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@ICCLMJCM@second?5server?5certificate?5privat@
CONST	SEGMENT
??_C@_0CL@ICCLMJCM@second?5server?5certificate?5privat@ DB 'second server'
	DB	' certificate private key file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@INNCEGLI@server?5certificate?5chain?$AA@
CONST	SEGMENT
??_C@_0BJ@INNCEGLI@server?5certificate?5chain?$AA@ DB 'server certificate'
	DB	' chain', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KEHADFAK@server?5certificate?5file?$AA@
CONST	SEGMENT
??_C@_0BI@KEHADFAK@server?5certificate?5file?$AA@ DB 'server certificate '
	DB	'file', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@HCELPDHN@server?5certificate?5private?5key?5f@
CONST	SEGMENT
??_C@_0CE@HCELPDHN@server?5certificate?5private?5key?5f@ DB 'server certi'
	DB	'ficate private key file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
CONST	SEGMENT
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ DB 'Error getting pass'
	DB	'word', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FNPAALFK@Can?8t?5use?5?9HTTP?0?5?9www?5or?5?9WWW?5wi@
CONST	SEGMENT
??_C@_0CJ@FNPAALFK@Can?8t?5use?5?9HTTP?0?5?9www?5or?5?9WWW?5wi@ DB 'Can'''
	DB	't use -HTTP, -www or -WWW with DTLS', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MLPFNLDC@?9keymatexportlen?$AA@
CONST	SEGMENT
??_C@_0BB@MLPFNLDC@?9keymatexportlen?$AA@ DB '-keymatexportlen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HHCLPCNN@?9keymatexport?$AA@
CONST	SEGMENT
??_C@_0O@HHCLPCNN@?9keymatexport?$AA@ DB '-keymatexport', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BJOIJNBC@?9use_srtp?$AA@
CONST	SEGMENT
??_C@_09BJOIJNBC@?9use_srtp?$AA@ DB '-use_srtp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IPCCHAIL@?9alpn?$AA@
CONST	SEGMENT
??_C@_05IPCCHAIL@?9alpn?$AA@ DB '-alpn', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PMNNGHPN@?9nextprotoneg?$AA@
CONST	SEGMENT
??_C@_0O@PMNNGHPN@?9nextprotoneg?$AA@ DB '-nextprotoneg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KBEFAOHH@?9key2?$AA@
CONST	SEGMENT
??_C@_05KBEFAOHH@?9key2?$AA@ DB '-key2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GMPFABPO@?9cert2?$AA@
CONST	SEGMENT
??_C@_06GMPFABPO@?9cert2?$AA@ DB '-cert2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OHCHOECI@?9servername_fatal?$AA@
CONST	SEGMENT
??_C@_0BC@OHCHOECI@?9servername_fatal?$AA@ DB '-servername_fatal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IEKJDKFH@?9servername?$AA@
CONST	SEGMENT
??_C@_0M@IEKJDKFH@?9servername?$AA@ DB '-servername', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGFPCDPE@?9rand?$AA@
CONST	SEGMENT
??_C@_05LGFPCDPE@?9rand?$AA@ DB '-rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DMPGLNOJ@?9id_prefix?$AA@
CONST	SEGMENT
??_C@_0L@DMPGLNOJ@?9id_prefix?$AA@ DB '-id_prefix', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NEDJBPEF@?9chain?$AA@
CONST	SEGMENT
??_C@_06NEDJBPEF@?9chain?$AA@ DB '-chain', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MIHAIBLG@?9mtu?$AA@
CONST	SEGMENT
??_C@_04MIHAIBLG@?9mtu?$AA@ DB '-mtu', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MDOIANFM@?9timeout?$AA@
CONST	SEGMENT
??_C@_08MDOIANFM@?9timeout?$AA@ DB '-timeout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CFINCDNK@?9dtls1_2?$AA@
CONST	SEGMENT
??_C@_08CFINCDNK@?9dtls1_2?$AA@ DB '-dtls1_2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LCNEOKJO@?9dtls1?$AA@
CONST	SEGMENT
??_C@_06LCNEOKJO@?9dtls1?$AA@ DB '-dtls1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DIDPLGID@?9dtls?$AA@
CONST	SEGMENT
??_C@_05DIDPLGID@?9dtls?$AA@ DB '-dtls', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07ODMKFECP@?9tls1_2?$AA@
CONST	SEGMENT
??_C@_07ODMKFECP@?9tls1_2?$AA@ DB '-tls1_2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MIOHAHOM@?9tls1_1?$AA@
CONST	SEGMENT
??_C@_07MIOHAHOM@?9tls1_1?$AA@ DB '-tls1_1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05BIEHJHLL@?9tls1?$AA@
CONST	SEGMENT
??_C@_05BIEHJHLL@?9tls1?$AA@ DB '-tls1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IHFBIKKN@?9ssl3?$AA@
CONST	SEGMENT
??_C@_05IHFBIKKN@?9ssl3?$AA@ DB '-ssl3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IONBIPB@?9HTTP?$AA@
CONST	SEGMENT
??_C@_05IONBIPB@?9HTTP?$AA@ DB '-HTTP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MKFPCHOK@?9WWW?$AA@
CONST	SEGMENT
??_C@_04MKFPCHOK@?9WWW?$AA@ DB '-WWW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MHKEOKJG@?9www?$AA@
CONST	SEGMENT
??_C@_04MHKEOKJG@?9www?$AA@ DB '-www', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PGMDFMPL@?9rev?$AA@
CONST	SEGMENT
??_C@_04PGMDFMPL@?9rev?$AA@ DB '-rev', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PNICEKHP@?9srpuserseed?$AA@
CONST	SEGMENT
??_C@_0N@PNICEKHP@?9srpuserseed?$AA@ DB '-srpuserseed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LJIFNPCB@?9srpvfile?$AA@
CONST	SEGMENT
??_C@_09LJIFNPCB@?9srpvfile?$AA@ DB '-srpvfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@ DB 'Not a hex nu'
	DB	'mber ''%s''', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LLANCHKO@?9psk?$AA@
CONST	SEGMENT
??_C@_04LLANCHKO@?9psk?$AA@ DB '-psk', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09OGLFDGKP@?9psk_hint?$AA@
CONST	SEGMENT
??_C@_09OGLFDGKP@?9psk_hint?$AA@ DB '-psk_hint', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NMHHJINK@?9no_resume_ephemeral?$AA@
CONST	SEGMENT
??_C@_0BF@NMHHJINK@?9no_resume_ephemeral?$AA@ DB '-no_resume_ephemeral', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09ICIAJIMM@?9no_ecdhe?$AA@
CONST	SEGMENT
??_C@_09ICIAJIMM@?9no_ecdhe?$AA@ DB '-no_ecdhe', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IKMMOABC@?9no_dhe?$AA@
CONST	SEGMENT
??_C@_07IKMMOABC@?9no_dhe?$AA@ DB '-no_dhe', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BFGMIMIO@?9no_tmp_rsa?$AA@
CONST	SEGMENT
??_C@_0M@BFGMIMIO@?9no_tmp_rsa?$AA@ DB '-no_tmp_rsa', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DBECBIEA@?9brief?$AA@
CONST	SEGMENT
??_C@_06DBECBIEA@?9brief?$AA@ DB '-brief', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HONEMELG@?9quiet?$AA@
CONST	SEGMENT
??_C@_06HONEMELG@?9quiet?$AA@ DB '-quiet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JIMBNDFL@?9crlf?$AA@
CONST	SEGMENT
??_C@_05JIMBNDFL@?9crlf?$AA@ DB '-crlf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IFPFIOLF@?9state?$AA@
CONST	SEGMENT
??_C@_06IFPFIOLF@?9state?$AA@ DB '-state', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BDEPCDEL@?9hack?$AA@
CONST	SEGMENT
??_C@_05BDEPCDEL@?9hack?$AA@ DB '-hack', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAMMFJFJ@?9msgfile?$AA@
CONST	SEGMENT
??_C@_08OAMMFJFJ@?9msgfile?$AA@ DB '-msgfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04LFMLOHOA@?9msg?$AA@
CONST	SEGMENT
??_C@_04LFMLOHOA@?9msg?$AA@ DB '-msg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CCODGPPI@Error?5parsing?5URL?6?$AA@
CONST	SEGMENT
??_C@_0BD@CCODGPPI@Error?5parsing?5URL?6?$AA@ DB 'Error parsing URL', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LCKNOINJ@?9status_url?$AA@
CONST	SEGMENT
??_C@_0M@LCKNOINJ@?9status_url?$AA@ DB '-status_url', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ILLKHFCB@?9status_timeout?$AA@
CONST	SEGMENT
??_C@_0BA@ILLKHFCB@?9status_timeout?$AA@ DB '-status_timeout', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BJMLCLNE@?9status_verbose?$AA@
CONST	SEGMENT
??_C@_0BA@BJMLCLNE@?9status_verbose?$AA@ DB '-status_verbose', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KDLKDLMI@?9status?$AA@
CONST	SEGMENT
??_C@_07KDLKDLMI@?9status?$AA@ DB '-status', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DOFNHFMN@?9tlsextdebug?$AA@
CONST	SEGMENT
??_C@_0N@DOFNHFMN@?9tlsextdebug?$AA@ DB '-tlsextdebug', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OHOHKFPP@?9debug?$AA@
CONST	SEGMENT
??_C@_06OHOHKFPP@?9debug?$AA@ DB '-debug', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PIMNDHCE@?9no_ign_eof?$AA@
CONST	SEGMENT
??_C@_0M@PIMNDHCE@?9no_ign_eof?$AA@ DB '-no_ign_eof', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BPJEDGGD@?9ign_eof?$AA@
CONST	SEGMENT
??_C@_08BPJEDGGD@?9ign_eof?$AA@ DB '-ign_eof', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DGAHAHFJ@?9nbio_test?$AA@
CONST	SEGMENT
??_C@_0L@DGAHAHFJ@?9nbio_test?$AA@ DB '-nbio_test', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OHEBDJNH@?9nbio?$AA@
CONST	SEGMENT
??_C@_05OHEBDJNH@?9nbio?$AA@ DB '-nbio', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FBBMKBAI@?9verifyCAfile?$AA@
CONST	SEGMENT
??_C@_0O@FBBMKBAI@?9verifyCAfile?$AA@ DB '-verifyCAfile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CHKJAKE@?9chainCAfile?$AA@
CONST	SEGMENT
??_C@_0N@CHKJAKE@?9chainCAfile?$AA@ DB '-chainCAfile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EAFCHGPO@?9CAfile?$AA@
CONST	SEGMENT
??_C@_07EAFCHGPO@?9CAfile?$AA@ DB '-CAfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EBJMJDFN@?9build_chain?$AA@
CONST	SEGMENT
??_C@_0N@EBJMJDFN@?9build_chain?$AA@ DB '-build_chain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IOFAKFNC@?9verify_quiet?$AA@
CONST	SEGMENT
??_C@_0O@IOFAKFNC@?9verify_quiet?$AA@ DB '-verify_quiet', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JEHPJFIB@?9verify_return_error?$AA@
CONST	SEGMENT
??_C@_0BF@JEHPJFIB@?9verify_return_error?$AA@ DB '-verify_return_error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PDJLLFEO@?9CRLform?$AA@
CONST	SEGMENT
??_C@_08PDJLLFEO@?9CRLform?$AA@ DB '-CRLform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FKNFKJA@?9ext_cache?$AA@
CONST	SEGMENT
??_C@_0L@FKNFKJA@?9ext_cache?$AA@ DB '-ext_cache', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LDMOBAAI@?9no_cache?$AA@
CONST	SEGMENT
??_C@_09LDMOBAAI@?9no_cache?$AA@ DB '-no_cache', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NMJDGHEA@?9verifyCApath?$AA@
CONST	SEGMENT
??_C@_0O@NMJDGHEA@?9verifyCApath?$AA@ DB '-verifyCApath', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IPPFFGOM@?9chainCApath?$AA@
CONST	SEGMENT
??_C@_0N@IPPFFGOM@?9chainCApath?$AA@ DB '-chainCApath', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNNNLALG@?9CApath?$AA@
CONST	SEGMENT
??_C@_07MNNNLALG@?9CApath?$AA@ DB '-CApath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BEMJNHEG@?9nocert?$AA@
CONST	SEGMENT
??_C@_07BEMJNHEG@?9nocert?$AA@ DB '-nocert', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OKGHHAHD@?9dcert_chain?$AA@
CONST	SEGMENT
??_C@_0N@OKGHHAHD@?9dcert_chain?$AA@ DB '-dcert_chain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MFHLCCEP@?9dkey?$AA@
CONST	SEGMENT
??_C@_05MFHLCCEP@?9dkey?$AA@ DB '-dkey', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HHHBLJAE@?9dpass?$AA@
CONST	SEGMENT
??_C@_06HHHBLJAE@?9dpass?$AA@ DB '-dpass', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CNGKIAIL@?9dkeyform?$AA@
CONST	SEGMENT
??_C@_09CNGKIAIL@?9dkeyform?$AA@ DB '-dkeyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JBNADPPB@?9dcert?$AA@
CONST	SEGMENT
??_C@_06JBNADPPB@?9dcert?$AA@ DB '-dcert', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OFMMHJMO@?9dcertform?$AA@
CONST	SEGMENT
??_C@_0L@OFMMHJMO@?9dcertform?$AA@ DB '-dcertform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HBLAKNLA@?9dhparam?$AA@
CONST	SEGMENT
??_C@_08HBLAKNLA@?9dhparam?$AA@ DB '-dhparam', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHFOFGHE@?9cert_chain?$AA@
CONST	SEGMENT
??_C@_0M@MHFOFGHE@?9cert_chain?$AA@ DB '-cert_chain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NNOCMECB@?9pass?$AA@
CONST	SEGMENT
??_C@_05NNOCMECB@?9pass?$AA@ DB '-pass', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAHLMBGP@?9keyform?$AA@
CONST	SEGMENT
??_C@_08OAHLMBGP@?9keyform?$AA@ DB '-keyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FMEKFICB@?9key?$AA@
CONST	SEGMENT
??_C@_04FMEKFICB@?9key?$AA@ DB '-key', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09ECGGEOOO@?9certform?$AA@
CONST	SEGMENT
??_C@_09ECGGEOOO@?9certform?$AA@ DB '-certform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JIFAPBHK@?9serverinfo?$AA@
CONST	SEGMENT
??_C@_0M@JIFAPBHK@?9serverinfo?$AA@ DB '-serverinfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FJDFGOOH@?9crl_download?$AA@
CONST	SEGMENT
??_C@_0O@FJDFGOOH@?9crl_download?$AA@ DB '-crl_download', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LKNJOOFD@?9CRL?$AA@
CONST	SEGMENT
??_C@_04LKNJOOFD@?9CRL?$AA@ DB '-CRL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DLEDECNE@?9cert?$AA@
CONST	SEGMENT
??_C@_05DLEDECNE@?9cert?$AA@ DB '-cert', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GKDHLPPP@?9context?$AA@
CONST	SEGMENT
??_C@_08GKDHLPPP@?9context?$AA@ DB '-context', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BJKKJEFM@verify?5depth?5is?5?$CFd?0?5must?5return?5@
CONST	SEGMENT
??_C@_0CP@BJKKJEFM@verify?5depth?5is?5?$CFd?0?5must?5return?5@ DB 'verify'
	DB	' depth is %d, must return a certificate', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JHAJGLHO@?9Verify?$AA@
CONST	SEGMENT
??_C@_07JHAJGLHO@?9Verify?$AA@ DB '-Verify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@ DB 'verify depth is %d'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07FILEFCOC@?9verify?$AA@
CONST	SEGMENT
??_C@_07FILEFCOC@?9verify?$AA@ DB '-verify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CDBDGPIJ@bad?5accept?5value?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BF@CDBDGPIJ@bad?5accept?5value?5?$CFs?6?$AA@ DB 'bad accept value '
	DB	'%s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08MBEANIIH@?9naccept?$AA@
CONST	SEGMENT
??_C@_08MBEANIIH@?9naccept?$AA@ DB '-naccept', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JGMHLDLK@?9accept?$AA@
CONST	SEGMENT
??_C@_07JGMHLDLK@?9accept?$AA@ DB '-accept', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05HDLOEPOC@?9port?$AA@
CONST	SEGMENT
??_C@_05HDLOEPOC@?9port?$AA@ DB '-port', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OKOCAJML@ALPN?5protocols?5selected?3?5?$AA@
CONST	SEGMENT
??_C@_0BK@OKOCAJML@ALPN?5protocols?5selected?3?5?$AA@ DB 'ALPN protocols '
	DB	'selected: ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02KEGNLNML@?0?5?$AA@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5?$AA@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@GJAAAGHK@ALPN?5protocols?5advertised?5by?5the@
CONST	SEGMENT
??_C@_0CK@GJAAAGHK@ALPN?5protocols?5advertised?5by?5the@ DB 'ALPN protoco'
	DB	'ls advertised by the client: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EKGMLEDN@cert_status?3?5ocsp?5response?5sent?3@
CONST	SEGMENT
??_C@_0CC@EKGMLEDN@cert_status?3?5ocsp?5response?5sent?3@ DB 'cert_status'
	DB	': ocsp response sent:', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@FIBKHNJL@cert_status?3?5error?5querying?5resp@
CONST	SEGMENT
??_C@_0CH@FIBKHNJL@cert_status?3?5error?5querying?5resp@ DB 'cert_status:'
	DB	' error querying responder', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@PCOLJLN@cert_status?3?5Can?8t?5retrieve?5issu@
CONST	SEGMENT
??_C@_0DB@PCOLJLN@cert_status?3?5Can?8t?5retrieve?5issu@ DB 'cert_status:'
	DB	' Can''t retrieve issuer certificate.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KIDKKKGD@cert_status?3?5no?5AIA?5and?5no?5defau@
CONST	SEGMENT
??_C@_0DC@KIDKKKGD@cert_status?3?5no?5AIA?5and?5no?5defau@ DB 'cert_statu'
	DB	's: no AIA and no default responder URL', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LBJPJFCC@cert_status?3?5AIA?5URL?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BK@LBJPJFCC@cert_status?3?5AIA?5URL?3?5?$CFs?6?$AA@ DB 'cert_statu'
	DB	's: AIA URL: %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@LFHCICE@cert_status?3?5can?8t?5parse?5AIA?5URL@
CONST	SEGMENT
??_C@_0CC@LFHCICE@cert_status?3?5can?8t?5parse?5AIA?5URL@ DB 'cert_status'
	DB	': can''t parse AIA URL', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EEHCEBAF@cert_status?3?5callback?5called?6?$AA@
CONST	SEGMENT
??_C@_0BO@EEHCEBAF@cert_status?3?5callback?5called?6?$AA@ DB 'cert_status'
	DB	': callback called', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IKCLJGPN@Switching?5server?5context?4?6?$AA@
CONST	SEGMENT
??_C@_0BL@IKCLJGPN@Switching?5server?5context?4?6?$AA@ DB 'Switching serv'
	DB	'er context.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DENLFGMB@Hostname?5in?5TLS?5extension?3?5?$CC?$CFs?$CC?6@
CONST	SEGMENT
??_C@_0CB@DENLFGMB@Hostname?5in?5TLS?5extension?3?5?$CC?$CFs?$CC?6@ DB 'H'
	DB	'ostname in TLS extension: "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@BCBIFLHN@?5?9status_url?5URL?5?5?5?9?5status?5requ@
CONST	SEGMENT
??_C@_0DC@BCBIFLHN@?5?9status_url?5URL?5?5?5?9?5status?5requ@ DB ' -statu'
	DB	's_url URL   - status request fallback URL', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GELNADKB@?5?9status_timeout?5n?5?9?5status?5requ@
CONST	SEGMENT
??_C@_0DH@GELNADKB@?5?9status_timeout?5n?5?9?5status?5requ@ DB ' -status_'
	DB	'timeout n - status request responder timeout', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@ENJFNIAB@?5?9status_verbose?5?5?5?9?5enable?5stat@
CONST	SEGMENT
??_C@_0DN@ENJFNIAB@?5?9status_verbose?5?5?5?9?5enable?5stat@ DB ' -status'
	DB	'_verbose   - enable status request verbose printout', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@PIJAPNDO@?5?9status?5?5?5?5?5?5?5?5?5?5?5?9?5respond?5to?5@
CONST	SEGMENT
??_C@_0DN@PIJAPNDO@?5?9status?5?5?5?5?5?5?5?5?5?5?5?9?5respond?5to?5@ DB ' '
	DB	'-status           - respond to certificate status requests', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@MBBJFPLO@?5?9keymatexportlen?5len?5?5?9?5Export?5@
CONST	SEGMENT
??_C@_0EL@MBBJFPLO@?5?9keymatexportlen?5len?5?5?9?5Export?5@ DB ' -keymat'
	DB	'exportlen len  - Export len bytes of keying material (default'
	DB	' 20)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@MIJBJIJH@?5?9keymatexport?5label?5?5?5?9?5Export?5@
CONST	SEGMENT
??_C@_0DN@MIJBJIJH@?5?9keymatexport?5label?5?5?5?9?5Export?5@ DB ' -keyma'
	DB	'texport label   - Export keying material using label', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FK@FHOGGFAL@?5?9alpn?5arg?5?5?9?5set?5the?5advertised@
CONST	SEGMENT
??_C@_0FK@FHOGGFAL@?5?9alpn?5arg?5?5?9?5set?5the?5advertised@ DB ' -alpn '
	DB	'arg  - set the advertised protocols for the ALPN extension (c'
	DB	'omma-separated list)', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@IDLIJFPH@?5?9use_srtp?5profiles?5?9?5Offer?5SRTP@
CONST	SEGMENT
??_C@_0FF@IDLIJFPH@?5?9use_srtp?5profiles?5?9?5Offer?5SRTP@ DB ' -use_srt'
	DB	'p profiles - Offer SRTP key management with a colon-separated'
	DB	' profile list', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@JODOAIDK@?5?9nextprotoneg?5arg?5?9?5set?5the?5adv@
CONST	SEGMENT
??_C@_0GA@JODOAIDK@?5?9nextprotoneg?5arg?5?9?5set?5the?5adv@ DB ' -nextpr'
	DB	'otoneg arg - set the advertised protocols for the NPN extensi'
	DB	'on (comma-separated list)', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@OPGHAICC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5certific@
CONST	SEGMENT
??_C@_0EL@OPGHAICC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5certific@ DB ' '
	DB	'                       certificate authentication (colon-sepa'
	DB	'rated list)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@KIDJIJJG@?5?9client_sigalgs?5arg?5?5?9?5Signatur@
CONST	SEGMENT
??_C@_0EF@KIDJIJJG@?5?9client_sigalgs?5arg?5?5?9?5Signatur@ DB ' -client_'
	DB	'sigalgs arg  - Signature algorithms to support for client ', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@BHNFHAEP@?5?9sigalgs?5arg?5?5?5?5?5?5?9?5Signature?5a@
CONST	SEGMENT
??_C@_0EN@BHNFHAEP@?5?9sigalgs?5arg?5?5?5?5?5?5?9?5Signature?5a@ DB ' -si'
	DB	'galgs arg      - Signature algorithms to support (colon-separ'
	DB	'ated list)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@DKJMGLID@?5?9legacy_renegotiation?5?9?5enable?5@
CONST	SEGMENT
??_C@_0EJ@DKJMGLID@?5?9legacy_renegotiation?5?9?5enable?5@ DB ' -legacy_r'
	DB	'enegotiation - enable use of legacy renegotiation (dangerous)'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@HKKMFIPG@?5?9no_ticket?5?5?5?5?9?5disable?5use?5of?5@
CONST	SEGMENT
??_C@_0DM@HKKMFIPG@?5?9no_ticket?5?5?5?5?9?5disable?5use?5of?5@ DB ' -no_'
	DB	'ticket    - disable use of RFC4507bis session tickets', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@DLFEFHDC@?5?9tlsextdebug?5?5?9?5hex?5dump?5of?5all@
CONST	SEGMENT
??_C@_0DK@DLFEFHDC@?5?9tlsextdebug?5?5?9?5hex?5dump?5of?5all@ DB ' -tlsex'
	DB	'tdebug  - hex dump of all TLS extensions received', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@DPIIKBKN@?5?9key2?5arg?5?5?5?5?5?9?5Private?5Key?5fil@
CONST	SEGMENT
??_C@_0EK@DPIIKBKN@?5?9key2?5arg?5?5?5?5?5?9?5Private?5Key?5fil@ DB ' -ke'
	DB	'y2 arg     - Private Key file to use for servername, in cert '
	DB	'file if', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@HMGHLPEB@?5?9cert2?5arg?5?5?5?5?9?5certificate?5fil@
CONST	SEGMENT
??_C@_0DJ@HMGHLPEB@?5?9cert2?5arg?5?5?5?5?9?5certificate?5fil@ DB ' -cert'
	DB	'2 arg    - certificate file to use for servername', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@DKEOAMCM@?5?9servername_fatal?5?9?5on?5mismatch@
CONST	SEGMENT
??_C@_0EL@DKEOAMCM@?5?9servername_fatal?5?9?5on?5mismatch@ DB ' -serverna'
	DB	'me_fatal - on mismatch send fatal alert (default warning aler'
	DB	't)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@IMLAMCFN@?5?9servername?5host?5?9?5servername?5f@
CONST	SEGMENT
??_C@_0DL@IMLAMCFN@?5?9servername?5host?5?9?5servername?5f@ DB ' -servern'
	DB	'ame host - servername for HostName TLS extension', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ DB ' -rand f'
	DB	'ile%cfile%c...', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@MPACHOMG@?5?9id_prefix?5arg?5?9?5Generate?5SSL?1T@
CONST	SEGMENT
??_C@_0EC@MPACHOMG@?5?9id_prefix?5arg?5?9?5Generate?5SSL?1T@ DB ' -id_pre'
	DB	'fix arg - Generate SSL/TLS session IDs prefixed by ''arg''', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KOEJDDIL@?5?9engine?5id?5?5?5?5?9?5Initialise?5and?5@
CONST	SEGMENT
??_C@_0DK@KOEJDDIL@?5?9engine?5id?5?5?5?5?9?5Initialise?5and?5@ DB ' -eng'
	DB	'ine id    - Initialise and use the specified engine', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@CKNPNAOB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5with?5the?5assump@
CONST	SEGMENT
??_C@_0EM@CKNPNAOB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5with?5the?5assump@ DB ' '
	DB	'                with the assumption it contains a complete HT'
	DB	'TP response.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@KMLFICKC@?5?9HTTP?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@
CONST	SEGMENT
??_C@_0EJ@KMLFICKC@?5?9HTTP?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@ DB ' '
	DB	'-HTTP         - Respond to a ''GET /<path> HTTP/1.0'' with fi'
	DB	'le ./<path>', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@PGEHLKHG@?5?9WWW?5?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@
CONST	SEGMENT
??_C@_0EJ@PGEHLKHG@?5?9WWW?5?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@ DB ' '
	DB	'-WWW          - Respond to a ''GET /<path> HTTP/1.0'' with fi'
	DB	'le ./<path>', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@NKPBDN@?5?9www?5?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@
CONST	SEGMENT
??_C@_0DK@NKPBDN@?5?9www?5?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@ DB ' '
	DB	'-www          - Respond to a ''GET /'' with a status page', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OGLMLECP@?5?9hack?5?5?5?5?5?5?5?5?5?9?5workaround?5for?5@
CONST	SEGMENT
??_C@_0DF@OGLMLECP@?5?9hack?5?5?5?5?5?5?5?5?5?9?5workaround?5for?5@ DB ' '
	DB	'-hack         - workaround for early Netscape code', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@BLOMEAPO@?5?9bugs?5?5?5?5?5?5?5?5?5?9?5Turn?5on?5SSL?5bug@
CONST	SEGMENT
??_C@_0DA@BLOMEAPO@?5?9bugs?5?5?5?5?5?5?5?5?5?9?5Turn?5on?5SSL?5bug@ DB ' '
	DB	'-bugs         - Turn on SSL bug compatibility', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HCENCPIP@?5?9no_ecdhe?5?5?5?5?5?9?5Disable?5ephemer@
CONST	SEGMENT
??_C@_0CJ@HCENCPIP@?5?9no_ecdhe?5?5?5?5?5?9?5Disable?5ephemer@ DB ' -no_e'
	DB	'cdhe     - Disable ephemeral ECDH', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@HKBECHLI@?5?9no_dhe?5?5?5?5?5?5?5?9?5Disable?5ephemer@
CONST	SEGMENT
??_C@_0CH@HKBECHLI@?5?9no_dhe?5?5?5?5?5?5?5?9?5Disable?5ephemer@ DB ' -no'
	DB	'_dhe       - Disable ephemeral DH', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EOOPOIHK@?5?9no_tls1_2?5?5?5?5?9?5Just?5disable?5TL@
CONST	SEGMENT
??_C@_0CH@EOOPOIHK@?5?9no_tls1_2?5?5?5?5?9?5Just?5disable?5TL@ DB ' -no_t'
	DB	'ls1_2    - Just disable TLSv1.2', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OJKBDNEP@?5?9no_tls1_1?5?5?5?5?9?5Just?5disable?5TL@
CONST	SEGMENT
??_C@_0CH@OJKBDNEP@?5?9no_tls1_1?5?5?5?5?9?5Just?5disable?5TL@ DB ' -no_t'
	DB	'ls1_1    - Just disable TLSv1.1', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JGHCNOLF@?5?9no_tls1?5?5?5?5?5?5?9?5Just?5disable?5TL@
CONST	SEGMENT
??_C@_0CF@JGHCNOLF@?5?9no_tls1?5?5?5?5?5?5?9?5Just?5disable?5TL@ DB ' -no'
	DB	'_tls1      - Just disable TLSv1', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HCLFPOAB@?5?9no_ssl3?5?5?5?5?5?5?9?5Just?5disable?5SS@
CONST	SEGMENT
??_C@_0CF@HCLFPOAB@?5?9no_ssl3?5?5?5?5?5?5?9?5Just?5disable?5SS@ DB ' -no'
	DB	'_ssl3      - Just disable SSLv3', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BAHAENBC@?5?9no_ssl2?5?5?5?5?5?5?9?5Just?5disable?5SS@
CONST	SEGMENT
??_C@_0CF@BAHAENBC@?5?9no_ssl2?5?5?5?5?5?5?9?5Just?5disable?5SS@ DB ' -no'
	DB	'_ssl2      - Just disable SSLv2', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@FPJLPAPI@?5?9chain?5?5?5?5?5?5?5?5?9?5Read?5a?5certific@
CONST	SEGMENT
??_C@_0CL@FPJLPAPI@?5?9chain?5?5?5?5?5?5?5?5?9?5Read?5a?5certific@ DB ' -'
	DB	'chain        - Read a certificate chain', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BDGDGBPN@?5?9mtu?5?5?5?5?5?5?5?5?5?5?9?5Set?5link?5layer?5@
CONST	SEGMENT
??_C@_0CF@BDGDGBPN@?5?9mtu?5?5?5?5?5?5?5?5?5?5?9?5Set?5link?5layer?5@ DB ' '
	DB	'-mtu          - Set link layer MTU', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JMMJAEFK@?5?9timeout?5?5?5?5?5?5?9?5Enable?5timeouts@
CONST	SEGMENT
??_C@_0CC@JMMJAEFK@?5?9timeout?5?5?5?5?5?5?9?5Enable?5timeouts@ DB ' -tim'
	DB	'eout      - Enable timeouts', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DOBDJEBM@?5?9dtls1_2?5?5?5?5?5?5?9?5Just?5talk?5DTLSv@
CONST	SEGMENT
??_C@_0CF@DOBDJEBM@?5?9dtls1_2?5?5?5?5?5?5?9?5Just?5talk?5DTLSv@ DB ' -dt'
	DB	'ls1_2      - Just talk DTLSv1.2', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BHDDFFPP@?5?9dtls1?5?5?5?5?5?5?5?5?9?5Just?5talk?5DTLSv@
CONST	SEGMENT
??_C@_0CD@BHDDFFPP@?5?9dtls1?5?5?5?5?5?5?5?5?9?5Just?5talk?5DTLSv@ DB ' -'
	DB	'dtls1        - Just talk DTLSv1', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DKKOMIC@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@
CONST	SEGMENT
??_C@_0CC@DKKOMIC@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@ DB ' -'
	DB	'tls1         - Just talk TLSv1', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LBHBFJCD@?5?9tls1_1?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@
CONST	SEGMENT
??_C@_0CE@LBHBFJCD@?5?9tls1_1?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@ DB ' -t'
	DB	'ls1_1       - Just talk TLSv1.1', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BGDPIMBG@?5?9tls1_2?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@
CONST	SEGMENT
??_C@_0CE@BGDPIMBG@?5?9tls1_2?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@ DB ' -t'
	DB	'ls1_2       - Just talk TLSv1.2', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@OHGNMMDG@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5SSLv3@
CONST	SEGMENT
??_C@_0CC@OHGNMMDG@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5SSLv3@ DB ' '
	DB	'-ssl3         - Just talk SSLv3', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@IFKIHPCF@?5?9ssl2?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5SSLv2@
CONST	SEGMENT
??_C@_0CC@IFKIHPCF@?5?9ssl2?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5SSLv2@ DB ' '
	DB	'-ssl2         - Just talk SSLv2', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@BGCKAGPH@?5?9srpuserseed?5string?5?9?5A?5seed?5st@
CONST	SEGMENT
??_C@_0DP@BGCKAGPH@?5?9srpuserseed?5string?5?9?5A?5seed?5st@ DB ' -srpuse'
	DB	'rseed string - A seed string for a default user salt.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@GEBNJGIF@?5?9srpvfile?5file?5?5?5?5?5?5?9?5The?5verif@
CONST	SEGMENT
??_C@_0DC@GEBNJGIF@?5?9srpvfile?5file?5?5?5?5?5?5?9?5The?5verif@ DB ' -sr'
	DB	'pvfile file      - The verifier file for SRP', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@
CONST	SEGMENT
??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@ DB ' '
	DB	'-psk arg      - PSK in hex (without 0x)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HHGBLNKK@?5?9psk_hint?5arg?5?9?5PSK?5identity?5hi@
CONST	SEGMENT
??_C@_0CL@HHGBLNKK@?5?9psk_hint?5arg?5?9?5PSK?5identity?5hi@ DB ' -psk_hi'
	DB	'nt arg - PSK identity hint to use', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@ONPEIANK@?5?9no_tmp_rsa?5?5?5?9?5Do?5not?5generate@
CONST	SEGMENT
??_C@_0DA@ONPEIANK@?5?9no_tmp_rsa?5?5?5?9?5Do?5not?5generate@ DB ' -no_tm'
	DB	'p_rsa   - Do not generate a tmp RSA key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HCKCHAJP@?5?9quiet?5?5?5?5?5?5?5?5?9?5No?5server?5outpu@
CONST	SEGMENT
??_C@_0CD@HCKCHAJP@?5?9quiet?5?5?5?5?5?5?5?5?9?5No?5server?5outpu@ DB ' -'
	DB	'quiet        - No server output', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@EAODFDCE@?5?9serverpref?5?5?5?9?5Use?5server?8s?5ci@
CONST	SEGMENT
??_C@_0DC@EAODFDCE@?5?9serverpref?5?5?5?9?5Use?5server?8s?5ci@ DB ' -serv'
	DB	'erpref   - Use server''s cipher preferences', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@LKODDGDH@?5?9cipher?5arg?5?5?5?9?5play?5with?5?8open@
CONST	SEGMENT
??_C@_0EE@LKODDGDH@?5?9cipher?5arg?5?5?5?9?5play?5with?5?8open@ DB ' -cip'
	DB	'her arg   - play with ''openssl ciphers'' to see what goes he'
	DB	're', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@OCGPNBII@?5?9nocert?5?5?5?5?5?5?5?9?5Don?8t?5use?5any?5c@
CONST	SEGMENT
??_C@_0DH@OCGPNBII@?5?9nocert?5?5?5?5?5?5?5?9?5Don?8t?5use?5any?5c@ DB ' '
	DB	'-nocert       - Don''t use any certificates (Anon-DH)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@DIMIHAHA@?5?9no_alt_chains?5?9?5only?5ever?5use?5@
CONST	SEGMENT
??_C@_0ED@DIMIHAHA@?5?9no_alt_chains?5?9?5only?5ever?5use?5@ DB ' -no_alt'
	DB	'_chains - only ever use the first certificate chain found', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@
CONST	SEGMENT
??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@ DB ' -CAfi'
	DB	'le arg   - PEM format file of CA''s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@
CONST	SEGMENT
??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@ DB ' -CApa'
	DB	'th arg   - PEM format directory of CA''s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MJMFOODH@?5?9state?5?5?5?5?5?5?5?5?9?5Print?5the?5SSL?5s@
CONST	SEGMENT
??_C@_0CH@MJMFOODH@?5?9state?5?5?5?5?5?5?5?5?9?5Print?5the?5SSL?5s@ DB ' '
	DB	'-state        - Print the SSL states', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@PGHHBNJL@?5?9msg?5?5?5?5?5?5?5?5?5?5?9?5Show?5protocol?5m@
CONST	SEGMENT
??_C@_0CJ@PGHHBNJL@?5?9msg?5?5?5?5?5?5?5?5?5?5?9?5Show?5protocol?5m@ DB ' '
	DB	'-msg          - Show protocol messages', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@KMFKDDAD@?5?9debug?5?5?5?5?5?5?5?5?9?5Print?5more?5outp@
CONST	SEGMENT
??_C@_0CE@KMFKDDAD@?5?9debug?5?5?5?5?5?5?5?5?9?5Print?5more?5outp@ DB ' -'
	DB	'debug        - Print more output', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NJANHEED@?5?9crlf?5?5?5?5?5?5?5?5?5?9?5convert?5LF?5from@
CONST	SEGMENT
??_C@_0DF@NJANHEED@?5?9crlf?5?5?5?5?5?5?5?5?5?9?5convert?5LF?5from@ DB ' '
	DB	'-crlf         - convert LF from terminal into CRLF', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BIAPMNCG@?5?9nbio_test?5?5?5?5?9?5test?5with?5the?5n@
CONST	SEGMENT
??_C@_0DG@BIAPMNCG@?5?9nbio_test?5?5?5?5?9?5test?5with?5the?5n@ DB ' -nbi'
	DB	'o_test    - test with the non-blocking test bio', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DKKNEEF@?5?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9bl@
CONST	SEGMENT
??_C@_0CL@DKKNEEF@?5?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9bl@ DB ' '
	DB	'-nbio         - Run with non-blocking IO', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0LE@HMGNCDPA@?5?9named_curve?5arg?5?5?9?5Elliptic?5cu@
CONST	SEGMENT
??_C@_0LE@HMGNCDPA@?5?9named_curve?5arg?5?5?9?5Elliptic?5cu@ DB ' -named_'
	DB	'curve arg  - Elliptic curve name to use for ephemeral ECDH ke'
	DB	'ys.', 0aH, '                 Use "openssl ecparam -list_curve'
	DB	's" for all names', 0aH, '                 (default is nistp25'
	DB	'6).', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@CPBNPMMP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5or?5a?5default?5se@
CONST	SEGMENT
??_C@_0DJ@CPBNPMMP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5or?5a?5default?5se@ DB ' '
	DB	'                or a default set of parameters is used', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@KKOMNAMH@?5?9dhparam?5arg?5?5?9?5DH?5parameter?5fi@
CONST	SEGMENT
??_C@_0EK@KKOMNAMH@?5?9dhparam?5arg?5?5?9?5DH?5parameter?5fi@ DB ' -dhpar'
	DB	'am arg  - DH parameter file to use, in cert file if not speci'
	DB	'fied', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@JKCGHIGO@?5?9dpass?5arg?5?5?5?5?9?5second?5private?5@
CONST	SEGMENT
??_C@_0DN@JKCGHIGO@?5?9dpass?5arg?5?5?5?5?9?5second?5private?5@ DB ' -dpa'
	DB	'ss arg    - second private key file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@NPPBEAHP@?5?9dkeyform?5arg?5?9?5second?5key?5form@
CONST	SEGMENT
??_C@_0EF@NPPBEAHP@?5?9dkeyform?5arg?5?9?5second?5key?5form@ DB ' -dkeyfo'
	DB	'rm arg - second key format (PEM, DER or ENGINE) PEM default', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@JFBFPBFK@?5?9dkey?5arg?5?5?5?5?5?9?5second?5private?5@
CONST	SEGMENT
??_C@_0ED@JFBFPBFK@?5?9dkey?5arg?5?5?5?5?5?9?5second?5private?5@ DB ' -dk'
	DB	'ey arg     - second private key file to use (usually for DSA)'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@PPLJKHJC@?5?9dcertform?5x?5?5?9?5second?5certific@
CONST	SEGMENT
??_C@_0EF@PPLJKHJC@?5?9dcertform?5x?5?5?9?5second?5certific@ DB ' -dcertf'
	DB	'orm x  - second certificate format (PEM or DER) PEM default', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@EPNBHDKA@?5?9dcert?5arg?5?5?5?5?9?5second?5certific@
CONST	SEGMENT
??_C@_0ED@EPNBHDKA@?5?9dcert?5arg?5?5?5?5?9?5second?5certific@ DB ' -dcer'
	DB	't arg    - second certificate file to use (usually for DSA)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BFMFFOFA@?5?9pass?5arg?5?5?5?5?5?9?5private?5key?5fil@
CONST	SEGMENT
??_C@_0DG@BFMFFOFA@?5?9pass?5arg?5?5?5?5?5?9?5private?5key?5fil@ DB ' -pa'
	DB	'ss arg     - private key file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@FPHKBDMN@?5?9keyform?5arg?5?5?9?5key?5format?5?$CIPEM@
CONST	SEGMENT
??_C@_0DO@FPHKBDMN@?5?9keyform?5arg?5?5?9?5key?5format?5?$CIPEM@ DB ' -ke'
	DB	'yform arg  - key format (PEM, DER or ENGINE) PEM default', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DKGPEDCO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5not?5specified?5?$CI@
CONST	SEGMENT
??_C@_0DA@DKGPEDCO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5not?5specified?5?$CI@ DB ' '
	DB	'                not specified (default is %s)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@LCPKKIAF@?5?9key?5arg?5?5?5?5?5?5?9?5Private?5Key?5fil@
CONST	SEGMENT
??_C@_0DL@LCPKKIAF@?5?9key?5arg?5?5?5?5?5?5?9?5Private?5Key?5fil@ DB ' -k'
	DB	'ey arg      - Private Key file to use, in cert file if', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@ILODNPNH@?5?9certform?5arg?5?9?5certificate?5for@
CONST	SEGMENT
??_C@_0DO@ILODNPNH@?5?9certform?5arg?5?9?5certificate?5for@ DB ' -certfor'
	DB	'm arg - certificate format (PEM or DER) PEM default', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0MB@HBNHEKMC@?5?9crl_check_all?5?9?5check?5the?5peer@
CONST	SEGMENT
??_C@_0MB@HBNHEKMC@?5?9crl_check_all?5?9?5check?5the?5peer@ DB ' -crl_che'
	DB	'ck_all - check the peer certificate has not been revoked by i'
	DB	'ts CA', 0aH, '                 or any other CRL in the CA cha'
	DB	'in. CRL(s) are appened to the', 0aH, '                 the ce'
	DB	'rtificate file.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0IO@PAKPLPCJ@?5?9crl_check?5?5?5?5?9?5check?5the?5peer?5@
CONST	SEGMENT
??_C@_0IO@PAKPLPCJ@?5?9crl_check?5?5?5?5?9?5check?5the?5peer?5@ DB ' -crl'
	DB	'_check    - check the peer certificate has not been revoked b'
	DB	'y its CA.', 0aH, '                 The CRL(s) are appended to'
	DB	' the certificate file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@DCIIMPCM@?5?9no_resumption_on_reneg?5?9?5set?5S@
CONST	SEGMENT
??_C@_0FD@DCIIMPCM@?5?9no_resumption_on_reneg?5?9?5set?5S@ DB ' -no_resum'
	DB	'ption_on_reneg - set SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTI'
	DB	'ATION flag', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@KLDCHMKH@?5?9auth_require_reneg?5?9?5Do?5not?5se@
CONST	SEGMENT
??_C@_0EM@KLDCHMKH@?5?9auth_require_reneg?5?9?5Do?5not?5se@ DB ' -auth_re'
	DB	'quire_reneg - Do not send TLS auth extensions until renegotia'
	DB	'tion', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FM@DFNGBAIE@?5?9auth?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5send?5and?5@
CONST	SEGMENT
??_C@_0FM@DFNGBAIE@?5?9auth?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5send?5and?5@ DB ' '
	DB	'-auth               - send and receive RFC 5878 TLS auth exte'
	DB	'nsions and supplemental data', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@EDDMMMHG@?5?9serverinfo?5arg?5?9?5PEM?5serverinf@
CONST	SEGMENT
??_C@_0DI@EDDMMMHG@?5?9serverinfo?5arg?5?9?5PEM?5serverinf@ DB ' -serveri'
	DB	'nfo arg - PEM serverinfo file for certificate', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GANAEPBK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CIdefault?5is?5?$CFs?$CJ@
CONST	SEGMENT
??_C@_0CC@GANAEPBK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CIdefault?5is?5?$CFs?$CJ@ DB ' '
	DB	'                (default is %s)', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@KDBCENND@?5?9cert?5arg?5?5?5?5?5?9?5certificate?5fil@
CONST	SEGMENT
??_C@_0CK@KDBCENND@?5?9cert?5arg?5?5?5?5?5?9?5certificate?5fil@ DB ' -cer'
	DB	't arg     - certificate file to use', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GOBPIMCB@?5?9verify_return_error?5?9?5return?5v@
CONST	SEGMENT
??_C@_0DE@GOBPIMCB@?5?9verify_return_error?5?9?5return?5v@ DB ' -verify_r'
	DB	'eturn_error - return verification errors', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@EMDCAGKF@?5?9Verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@
CONST	SEGMENT
??_C@_0EL@EMDCAGKF@?5?9Verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@ DB ' -Ver'
	DB	'ify arg   - turn on peer certificate verification, must have '
	DB	'a cert.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@EHAJMJGI@?5?9verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@
CONST	SEGMENT
??_C@_0DI@EHAJMJGI@?5?9verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@ DB ' -ver'
	DB	'ify arg   - turn on peer certificate verification', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GMMJKDHE@?5?9context?5arg?5?5?9?5set?5session?5ID?5@
CONST	SEGMENT
??_C@_0CJ@GMMJKDHE@?5?9context?5arg?5?5?9?5set?5session?5ID?5@ DB ' -cont'
	DB	'ext arg  - set session ID context', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@GNFHPCIL@?5?9verify_ip?5ipaddr?5?9?5check?5peer?5@
CONST	SEGMENT
??_C@_0DO@GNFHPCIL@?5?9verify_ip?5ipaddr?5?9?5check?5peer?5@ DB ' -verify'
	DB	'_ip ipaddr - check peer certificate matches "ipaddr"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@DJCBKCN@?5?9verify_email?5email?5?9?5check?5pee@
CONST	SEGMENT
??_C@_0DP@DJCBKCN@?5?9verify_email?5email?5?9?5check?5pee@ DB ' -verify_e'
	DB	'mail email - check peer certificate matches "email"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@PAPKIBFG@?5?9verify_hostname?5host?5?9?5check?5p@
CONST	SEGMENT
??_C@_0EA@PAPKIBFG@?5?9verify_hostname?5host?5?9?5check?5p@ DB ' -verify_'
	DB	'hostname host - check peer certificate matches "host"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CDLIKOHM@?5?9accept?5arg?5?5?5?9?5port?5to?5accept?5@
CONST	SEGMENT
??_C@_0DE@CDLIKOHM@?5?9accept?5arg?5?5?5?9?5port?5to?5accept?5@ DB ' -acc'
	DB	'ept arg   - port to accept on (default is %d)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EFKLHHDL@usage?3?5s_server?5?$FLargs?5?4?4?4?$FN?6?$AA@
CONST	SEGMENT
??_C@_0BM@EFKLHHDL@usage?3?5s_server?5?$FLargs?5?4?4?4?$FN?6?$AA@ DB 'usa'
	DB	'ge: s_server [args ...]', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@IDIINJEG@SRP?5parameters?5set?3?5username?5?$DN?5?$CC@
CONST	SEGMENT
??_C@_0DA@IDIINJEG@SRP?5parameters?5set?3?5username?5?$DN?5?$CC@ DB 'SRP '
	DB	'parameters set: username = "%s" info="%s" ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EHOAHANM@User?5?$CFs?5doesn?8t?5exist?6?$AA@
CONST	SEGMENT
??_C@_0BH@EHOAHANM@User?5?$CFs?5doesn?8t?5exist?6?$AA@ DB 'User %s doesn'''
	DB	't exist', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DJBBDCJN@SRP?5username?5?$DN?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BF@DJBBDCJN@SRP?5username?5?$DN?5?$CC?$CFs?$CC?6?$AA@ DB 'SRP user'
	DB	'name = "%s"', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MCPCBAJ@Error?5in?5PSK?5server?5callback?6?$AA@
CONST	SEGMENT
??_C@_0BO@MCPCBAJ@Error?5in?5PSK?5server?5callback?6?$AA@ DB 'Error in PS'
	DB	'K server callback', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NPIEHMJD@fetched?5PSK?5len?$DN?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BE@NPIEHMJD@fetched?5PSK?5len?$DN?$CFd?6?$AA@ DB 'fetched PSK len='
	DB	'%d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@
CONST	SEGMENT
??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@ DB 'psk buffer'
	DB	' of callback is too small (%d) for key (%d)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@
CONST	SEGMENT
??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@ DB 'Could'
	DB	' not convert PSK key ''%s'' to BIGNUM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JFIDPFC@PSK?5client?5identity?5found?6?$AA@
CONST	SEGMENT
??_C@_0BL@JFIDPFC@PSK?5client?5identity?5found?6?$AA@ DB 'PSK client iden'
	DB	'tity found', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@MFHEMHOG@PSK?5error?3?5client?5identity?5not?5f@
CONST	SEGMENT
??_C@_0DP@MFHEMHOG@PSK?5error?3?5client?5identity?5not?5f@ DB 'PSK error:'
	DB	' client identity not found (got ''%s'' expected ''%s'')', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LDLODOD@identity_len?$DN?$CFd?5identity?$DN?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@LDLODOD@identity_len?$DN?$CFd?5identity?$DN?$CFs?6?$AA@ DB 'ide'
	DB	'ntity_len=%d identity=%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GFNDBAPP@Error?3?5client?5did?5not?5send?5PSK?5i@
CONST	SEGMENT
??_C@_0CJ@GFNDBAPP@Error?3?5client?5did?5not?5send?5PSK?5i@ DB 'Error: cl'
	DB	'ient did not send PSK identity', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EGMHKAJD@psk_server_cb?6?$AA@
CONST	SEGMENT
??_C@_0P@EGMHKAJD@psk_server_cb?6?$AA@ DB 'psk_server_cb', 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _del_session
_TEXT	SEGMENT
_id$1$ = -8						; size = 4
_idlen$ = -4						; size = 4
_sctx$ = 8						; size = 4
_session$ = 12						; size = 4
_del_session PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 3464
	mov	eax, 8
	call	__chkstk
	push	ebp
	push	edi
; Line 3468
	lea	eax, DWORD PTR _idlen$[esp+16]
	xor	ebp, ebp
	push	eax
	push	DWORD PTR _session$[esp+16]
	call	_SSL_SESSION_get_id
; Line 3469
	mov	edi, DWORD PTR _first
	add	esp, 8
	mov	DWORD PTR _id$1$[esp+16], eax
	test	edi, edi
	je	$LN14@del_sessio
	push	ebx
	mov	ebx, DWORD PTR _idlen$[esp+20]
	push	esi
$LL4@del_sessio:
; Line 3470
	cmp	ebx, DWORD PTR [edi+4]
	jne	SHORT $LN19@del_sessio
	mov	edx, DWORD PTR [edi]
	mov	esi, eax
	mov	eax, ebx
	sub	eax, 4
	jb	SHORT $LN17@del_sessio
$LL18@del_sessio:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN16@del_sessio
	add	edx, 4
	add	esi, 4
	sub	eax, 4
	jae	SHORT $LL18@del_sessio
$LN17@del_sessio:
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN15@del_sessio
$LN16@del_sessio:
	mov	cl, BYTE PTR [edx]
	cmp	cl, BYTE PTR [esi]
	jne	SHORT $LN23@del_sessio
	cmp	eax, -3					; fffffffdH
	je	SHORT $LN15@del_sessio
	mov	cl, BYTE PTR [edx+1]
	cmp	cl, BYTE PTR [esi+1]
	jne	SHORT $LN23@del_sessio
	cmp	eax, -2					; fffffffeH
	je	SHORT $LN15@del_sessio
	mov	cl, BYTE PTR [edx+2]
	cmp	cl, BYTE PTR [esi+2]
	jne	SHORT $LN23@del_sessio
	cmp	eax, -1
	je	SHORT $LN15@del_sessio
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [esi+3]
	je	SHORT $LN15@del_sessio
$LN23@del_sessio:
	mov	eax, DWORD PTR _id$1$[esp+24]
$LN19@del_sessio:
; Line 3480
	mov	ebp, edi
	mov	edi, DWORD PTR [edi+16]
	test	edi, edi
	jne	SHORT $LL4@del_sessio
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 3482
	add	esp, 8
	ret	0
$LN15@del_sessio:
; Line 3472
	mov	eax, DWORD PTR [edi+16]
	test	ebp, ebp
	je	SHORT $LN6@del_sessio
	mov	DWORD PTR [ebp+16], eax
	jmp	SHORT $LN7@del_sessio
$LN6@del_sessio:
; Line 3474
	mov	DWORD PTR _first, eax
$LN7@del_sessio:
; Line 3475
	push	DWORD PTR [edi]
	call	_CRYPTO_free
; Line 3476
	push	DWORD PTR [edi+8]
	call	_CRYPTO_free
; Line 3477
	push	edi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
	pop	esi
	pop	ebx
$LN14@del_sessio:
	pop	edi
	pop	ebp
; Line 3482
	add	esp, 8
	ret	0
_del_session ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_session
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_id$ = 12						; size = 4
_idlen$ = 16						; size = 4
_p$1 = 20						; size = 4
_do_copy$ = 20						; size = 4
_get_session PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 3451
	mov	eax, DWORD PTR _do_copy$[esp-4]
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 3452
	mov	edi, DWORD PTR _first
	mov	DWORD PTR [eax], 0
	test	edi, edi
	je	SHORT $LN12@get_sessio
	mov	ebx, DWORD PTR _idlen$[esp+12]
	mov	ebp, DWORD PTR _id$[esp+12]
$LL4@get_sessio:
; Line 3453
	cmp	ebx, DWORD PTR [edi+4]
	jne	SHORT $LN2@get_sessio
	mov	edx, DWORD PTR [edi]
	mov	eax, ebx
	mov	esi, ebp
	sub	eax, 4
	jb	SHORT $LN15@get_sessio
$LL16@get_sessio:
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [esi]
	jne	SHORT $LN14@get_sessio
	add	edx, 4
	add	esi, 4
	sub	eax, 4
	jae	SHORT $LL16@get_sessio
$LN15@get_sessio:
	cmp	eax, -4					; fffffffcH
	je	SHORT $LN13@get_sessio
$LN14@get_sessio:
	mov	cl, BYTE PTR [edx]
	cmp	cl, BYTE PTR [esi]
	jne	SHORT $LN2@get_sessio
	cmp	eax, -3					; fffffffdH
	je	SHORT $LN13@get_sessio
	mov	cl, BYTE PTR [edx+1]
	cmp	cl, BYTE PTR [esi+1]
	jne	SHORT $LN2@get_sessio
	cmp	eax, -2					; fffffffeH
	je	SHORT $LN13@get_sessio
	mov	cl, BYTE PTR [edx+2]
	cmp	cl, BYTE PTR [esi+2]
	jne	SHORT $LN2@get_sessio
	cmp	eax, -1
	je	SHORT $LN13@get_sessio
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [esi+3]
	je	SHORT $LN13@get_sessio
$LN2@get_sessio:
; Line 3452
	mov	edi, DWORD PTR [edi+16]
	test	edi, edi
	jne	SHORT $LL4@get_sessio
$LN12@get_sessio:
; Line 3459
	push	OFFSET ??_C@_0BM@NMMFINGL@Lookup?5session?3?5cache?5miss?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 3460
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 3461
	ret	0
$LN13@get_sessio:
; Line 3454
	mov	eax, DWORD PTR [edi+8]
; Line 3455
	push	OFFSET ??_C@_0BL@MAAHBGHK@Lookup?5session?3?5cache?5hit?6?$AA@
	push	DWORD PTR _bio_err
	mov	DWORD PTR _p$1[esp+20], eax
	call	_BIO_printf
; Line 3456
	push	DWORD PTR [edi+12]
	lea	eax, DWORD PTR _p$1[esp+24]
	push	eax
	push	0
	call	_d2i_SSL_SESSION
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 3461
	ret	0
_get_session ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _add_session
_TEXT	SEGMENT
_p$ = -4						; size = 4
_ssl$ = 8						; size = 4
_session$ = 12						; size = 4
_add_session PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 3412
	mov	eax, 4
	call	__chkstk
	push	edi
; Line 3416
	push	3416					; 00000d58H
	push	OFFSET ??_C@_0BC@HCEECIGJ@?4?2apps?2s_server?4c?$AA@
	push	20					; 00000014H
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 3417
	test	edi, edi
	jne	SHORT $LN2@add_sessio
; Line 3418
	push	OFFSET ??_C@_0DA@EBMBKEKP@Out?5of?5memory?5adding?5session?5to?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 3436
	xor	eax, eax
	pop	edi
; Line 3445
	pop	ecx
	ret	0
$LN2@add_sessio:
	push	ebx
; Line 3422
	mov	ebx, DWORD PTR _session$[esp+8]
	push	esi
	lea	esi, DWORD PTR [edi+4]
	push	esi
	push	ebx
	call	_SSL_SESSION_get_id
; Line 3423
	push	0
	push	ebx
	call	_i2d_SSL_SESSION
	add	esp, 16					; 00000010H
	mov	DWORD PTR [edi+12], eax
; Line 3425
	push	DWORD PTR [esi]
	push	0
	push	ebx
	call	_SSL_SESSION_get_id
	add	esp, 8
	push	eax
	call	_BUF_memdup
; Line 3427
	push	3427					; 00000d63H
	push	OFFSET ??_C@_0BC@HCEECIGJ@?4?2apps?2s_server?4c?$AA@
	push	DWORD PTR [edi+12]
	mov	DWORD PTR [edi], eax
	call	_CRYPTO_malloc
	add	esp, 20					; 00000014H
	mov	DWORD PTR [edi+8], eax
; Line 3428
	cmp	DWORD PTR [edi], 0
	je	SHORT $LN4@add_sessio
	test	eax, eax
	je	SHORT $LN4@add_sessio
; Line 3438
	mov	DWORD PTR _p$[esp+16], eax
; Line 3439
	lea	eax, DWORD PTR _p$[esp+16]
	push	eax
	push	ebx
	call	_i2d_SSL_SESSION
; Line 3441
	mov	eax, DWORD PTR _first
	mov	DWORD PTR [edi+16], eax
; Line 3443
	push	OFFSET ??_C@_0CF@ODDDDFFH@New?5session?5added?5to?5external?5ca@
	push	DWORD PTR _bio_err
	mov	DWORD PTR _first, edi
	call	_BIO_printf
	add	esp, 16					; 00000010H
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 3445
	pop	ecx
	ret	0
$LN4@add_sessio:
; Line 3429
	push	OFFSET ??_C@_0DA@EBMBKEKP@Out?5of?5memory?5adding?5session?5to?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 3431
	mov	eax, DWORD PTR [edi]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@add_sessio
; Line 3432
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN5@add_sessio:
; Line 3433
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN6@add_sessio
; Line 3434
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN6@add_sessio:
; Line 3435
	push	edi
	call	_CRYPTO_free
	add	esp, 4
; Line 3436
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 3445
	pop	ecx
	ret	0
_add_session ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _s_server_main
_TEXT	SEGMENT
_cctx$1$ = -236						; size = 4
_crls$1$ = -232						; size = 4
_s_dcert$1$ = -228					; size = 4
_meth$1$ = -224						; size = 4
_socket_type$1$ = -220					; size = 4
_badarg$ = -216						; size = 4
_exc$ = -212						; size = 4
_passarg$1$ = -208					; size = 4
_len$1 = -208						; size = 2
_dpassarg$1$ = -204					; size = 4
_len$2 = -204						; size = 2
_naccept$1$ = -200					; size = 4
_context$1$ = -196					; size = 4
_port$ = -192						; size = 2
_pass$ = -188						; size = 4
_vpm$ = -184						; size = 4
_s_cert2$1$ = -180					; size = 4
_ssl_args$ = -176					; size = 4
_inrand$1$ = -172					; size = 4
_state$1$ = -168					; size = 4
_no_cache$1$ = -164					; size = 4
_ext_cache$1$ = -160					; size = 4
_no_ecdhe$1$ = -156					; size = 4
_s_cert$1$ = -152					; size = 4
_s_key$1$ = -148					; size = 4
_s_dkey$1$ = -144					; size = 4
_s_chain$1$ = -140					; size = 4
_s_dchain$1$ = -136					; size = 4
_dpass$ = -132						; size = 4
_s_key2$1$ = -128					; size = 4
_next_proto$ = -124					; size = 8
_alpn_ctx$ = -116					; size = 8
_s_cert_format$1$ = -108				; size = 4
_next_proto_neg_in$1$ = -104				; size = 4
_alpn_in$1$ = -100					; size = 4
_crl_file$1$ = -96					; size = 4
_crl_format$1$ = -92					; size = 4
_s_dkey_format$1$ = -88					; size = 4
_s_dcert_format$1$ = -84				; size = 4
_CApath$1$ = -80					; size = 4
_CAfile$1$ = -76					; size = 4
_crl_download$1$ = -72					; size = 4
_chCAfile$1$ = -68					; size = 4
_chCApath$1$ = -64					; size = 4
_vfyCAfile$1$ = -60					; size = 4
_vfyCApath$1$ = -56					; size = 4
_no_dhe$1$ = -52					; size = 4
_dhfile$1$ = -48					; size = 4
_build_chain$1$ = -44					; size = 4
_no_tmp_rsa$1$ = -40					; size = 4
_srp_verifier_file$1$ = -36				; size = 4
_srpuserseed$1$ = -32					; size = 4
_rev$1$ = -28						; size = 4
_nocert$1$ = -24					; size = 4
_s_key_format$1$ = -20					; size = 4
_tlsextcbp$ = -16					; size = 12
tv736 = -4						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_s_server_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 1093
	mov	eax, 236				; 000000ecH
	call	__chkstk
; Line 1115
	xor	eax, eax
	mov	DWORD PTR _vpm$[esp+236], 0
	push	ebx
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR _badarg$[esp+248], 0
	mov	ebx, 1
	mov	DWORD PTR _port$[esp+248], 4433		; 00001151H
	push	edi
	mov	edi, ebx
	mov	DWORD PTR _CApath$1$[esp+252], 0
	mov	DWORD PTR _CAfile$1$[esp+252], 0
; Line 1140
	xor	ebp, ebp
	mov	DWORD PTR _chCApath$1$[esp+252], 0
	mov	DWORD PTR _chCAfile$1$[esp+252], 0
	mov	DWORD PTR _vfyCApath$1$[esp+252], 0
	mov	DWORD PTR _vfyCAfile$1$[esp+252], 0
	mov	DWORD PTR _context$1$[esp+252], 0
	mov	DWORD PTR _dhfile$1$[esp+252], 0
	mov	DWORD PTR _build_chain$1$[esp+252], 0
	mov	DWORD PTR _no_tmp_rsa$1$[esp+252], 0
	mov	DWORD PTR _no_dhe$1$[esp+252], 0
	mov	DWORD PTR _no_ecdhe$1$[esp+252], 0
	mov	DWORD PTR _nocert$1$[esp+252], 0
	mov	DWORD PTR _state$1$[esp+252], 0
	mov	DWORD PTR _socket_type$1$[esp+252], edi
	mov	DWORD PTR _inrand$1$[esp+252], 0
	mov	DWORD PTR _s_cert_format$1$[esp+252], 3
	mov	DWORD PTR _s_key_format$1$[esp+252], 3
	mov	DWORD PTR _passarg$1$[esp+252], esi
	mov	DWORD PTR _pass$[esp+252], esi
	mov	DWORD PTR _dpassarg$1$[esp+252], esi
	mov	DWORD PTR _dpass$[esp+252], esi
	mov	DWORD PTR _s_dcert_format$1$[esp+252], 3
	mov	DWORD PTR _s_dkey_format$1$[esp+252], 3
	mov	DWORD PTR _s_cert$1$[esp+252], esi
	mov	DWORD PTR _s_dcert$1$[esp+252], eax
	mov	DWORD PTR _s_chain$1$[esp+252], eax
	mov	DWORD PTR _s_dchain$1$[esp+252], eax
	mov	DWORD PTR _s_key$1$[esp+252], eax
	mov	DWORD PTR _s_dkey$1$[esp+252], eax
	mov	DWORD PTR _no_cache$1$[esp+252], eax
	mov	DWORD PTR _ext_cache$1$[esp+252], eax
	mov	DWORD PTR _rev$1$[esp+252], eax
	mov	DWORD PTR _naccept$1$[esp+252], -1
	mov	DWORD PTR _s_key2$1$[esp+252], eax
	mov	DWORD PTR _s_cert2$1$[esp+252], eax
	mov	DWORD PTR _tlsextcbp$[esp+252], eax
	mov	DWORD PTR _tlsextcbp$[esp+256], eax
	mov	DWORD PTR _tlsextcbp$[esp+260], ebx
	mov	DWORD PTR _next_proto_neg_in$1$[esp+252], eax
	mov	DWORD PTR _next_proto$[esp+252], eax
	mov	DWORD PTR _next_proto$[esp+256], eax
	mov	DWORD PTR _alpn_in$1$[esp+252], eax
	mov	DWORD PTR _alpn_ctx$[esp+252], eax
	mov	WORD PTR _alpn_ctx$[esp+256], ax
	mov	DWORD PTR _srpuserseed$1$[esp+252], eax
	mov	DWORD PTR _srp_verifier_file$1$[esp+252], eax
	mov	DWORD PTR _exc$[esp+252], eax
; Line 1141
	mov	DWORD PTR _ssl_args$[esp+252], eax
; Line 1143
	mov	DWORD PTR _crl_file$1$[esp+252], eax
; Line 1144
	mov	DWORD PTR _crl_format$1$[esp+252], 3
; Line 1145
	mov	DWORD PTR _crl_download$1$[esp+252], eax
; Line 1146
	mov	DWORD PTR _crls$1$[esp+252], eax
; Line 1148
	call	_SSLv23_server_method
	mov	DWORD PTR _meth$1$[esp+252], eax
; Line 1150
	mov	eax, DWORD PTR _argc$[esp+248]
	mov	DWORD PTR _local_argc, eax
; Line 1151
	mov	eax, DWORD PTR _argv$[esp+248]
	mov	DWORD PTR _local_argv, eax
; Line 1155
	call	_s_server_init
; Line 1158
	mov	eax, DWORD PTR _bio_err
	test	eax, eax
	jne	SHORT $LN7@s_server_m
; Line 1159
	push	eax
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _bio_err, eax
$LN7@s_server_m:
; Line 1161
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN871@s_server_m
; Line 1164
	call	_SSL_CONF_CTX_new
	mov	ebp, eax
	mov	DWORD PTR _cctx$1$[esp+252], ebp
; Line 1165
	test	ebp, ebp
	je	$LN871@s_server_m
; Line 1167
	push	8
	push	ebp
	call	_SSL_CONF_CTX_set_flags
; Line 1168
	push	1
	push	ebp
	call	_SSL_CONF_CTX_set_flags
; Line 1176
	mov	ebx, DWORD PTR _argc$[esp+264]
	add	esp, 16					; 00000010H
; Line 1177
	mov	ebp, DWORD PTR _argv$[esp+248]
	dec	ebx
	add	ebp, 4
	mov	DWORD PTR _verify_depth, esi
	mov	DWORD PTR _s_nbio, esi
	mov	DWORD PTR _s_nbio_test, esi
	mov	DWORD PTR _argc$[esp+248], ebx
	mov	DWORD PTR _argv$[esp+248], ebp
; Line 1179
	cmp	ebx, 1
	jl	$LN806@s_server_m
	mov	edi, DWORD PTR __imp__atoi
	npad	7
$LL2@s_server_m:
; Line 1180
	mov	esi, DWORD PTR [ebp]
	mov	ecx, OFFSET ??_C@_05HDLOEPOC@?9port?$AA@
	mov	eax, esi
	npad	6
$LL452@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN453@s_server_m
	test	dl, dl
	je	SHORT $LN454@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN453@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL452@s_server_m
$LN454@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN455@s_server_m
$LN453@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN455@s_server_m:
	test	eax, eax
	je	$LN12@s_server_m
	mov	ecx, OFFSET ??_C@_07JGMHLDLK@?9accept?$AA@
	mov	eax, esi
$LL456@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN457@s_server_m
	test	dl, dl
	je	SHORT $LN458@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN457@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL456@s_server_m
$LN458@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN459@s_server_m
$LN457@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN459@s_server_m:
	test	eax, eax
	je	$LN12@s_server_m
; Line 1185
	mov	ecx, OFFSET ??_C@_08MBEANIIH@?9naccept?$AA@
	mov	eax, esi
$LL460@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN461@s_server_m
	test	dl, dl
	je	SHORT $LN462@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN461@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL460@s_server_m
$LN462@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN463@s_server_m
$LN461@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN463@s_server_m:
	test	eax, eax
	jne	$LN15@s_server_m
; Line 1186
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	SHORT $LN869@s_server_m
; Line 1188
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	DWORD PTR __imp__atol
	add	esp, 4
	mov	DWORD PTR _naccept$1$[esp+252], eax
; Line 1189
	test	eax, eax
	jg	$LN872@s_server_m
; Line 1190
	mov	eax, DWORD PTR _argv$[esp+248]
	push	DWORD PTR [eax]
	push	OFFSET ??_C@_0BF@CDBDGPIJ@bad?5accept?5value?5?$CFs?6?$AA@
$LN874@s_server_m:
; Line 1423
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN869@s_server_m:
	mov	ebp, DWORD PTR _cctx$1$[esp+252]
$bad$894:
; Line 1569
	call	_sv_usage
; Line 1570
	mov	ebx, 1
$LN871@s_server_m:
	xor	esi, esi
$LN875@s_server_m:
	xor	edi, edi
$end$895:
; Line 2064
	mov	eax, DWORD PTR _ctx
	test	eax, eax
	je	SHORT $LN350@s_server_m
; Line 2065
	push	eax
	call	_SSL_CTX_free
	add	esp, 4
$LN350@s_server_m:
; Line 2066
	mov	eax, DWORD PTR _s_cert$1$[esp+252]
	test	eax, eax
	je	SHORT $LN351@s_server_m
; Line 2067
	push	eax
	call	_X509_free
	add	esp, 4
$LN351@s_server_m:
; Line 2068
	test	esi, esi
	je	SHORT $LN352@s_server_m
; Line 2069
	push	OFFSET _X509_CRL_free
	push	esi
	call	_sk_pop_free
	add	esp, 8
$LN352@s_server_m:
; Line 2070
	test	edi, edi
	je	SHORT $LN353@s_server_m
; Line 2071
	push	edi
	call	_X509_free
	add	esp, 4
$LN353@s_server_m:
; Line 2072
	mov	eax, DWORD PTR _s_key$1$[esp+252]
	test	eax, eax
	je	SHORT $LN354@s_server_m
; Line 2073
	push	eax
	call	_EVP_PKEY_free
	add	esp, 4
$LN354@s_server_m:
; Line 2074
	mov	eax, DWORD PTR _s_dkey$1$[esp+252]
	test	eax, eax
	je	SHORT $LN355@s_server_m
; Line 2075
	push	eax
	call	_EVP_PKEY_free
	add	esp, 4
$LN355@s_server_m:
; Line 2076
	mov	eax, DWORD PTR _s_chain$1$[esp+252]
	test	eax, eax
	je	SHORT $LN356@s_server_m
; Line 2077
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN356@s_server_m:
; Line 2078
	mov	eax, DWORD PTR _s_dchain$1$[esp+252]
	test	eax, eax
	je	SHORT $LN357@s_server_m
; Line 2079
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN357@s_server_m:
; Line 2080
	mov	eax, DWORD PTR _pass$[esp+252]
	test	eax, eax
	je	SHORT $LN358@s_server_m
; Line 2081
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN358@s_server_m:
; Line 2082
	mov	eax, DWORD PTR _dpass$[esp+252]
	test	eax, eax
	je	SHORT $LN359@s_server_m
; Line 2083
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN359@s_server_m:
; Line 2084
	mov	eax, DWORD PTR _vpm$[esp+252]
	test	eax, eax
	je	SHORT $LN360@s_server_m
; Line 2085
	push	eax
	call	_X509_VERIFY_PARAM_free
	add	esp, 4
$LN360@s_server_m:
; Line 3497
	mov	esi, DWORD PTR _first
	test	esi, esi
	je	SHORT $LN377@s_server_m
	npad	1
$LL376@s_server_m:
; Line 3498
	push	DWORD PTR [esi]
	call	_CRYPTO_free
; Line 3499
	push	DWORD PTR [esi+8]
	call	_CRYPTO_free
; Line 3502
	push	esi
	mov	esi, DWORD PTR [esi+16]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LL376@s_server_m
$LN377@s_server_m:
; Line 2088
	mov	eax, DWORD PTR _tlscstatp
; Line 3504
	mov	DWORD PTR _first, 0
; Line 2088
	test	eax, eax
	je	SHORT $LN361@s_server_m
; Line 2089
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN361@s_server_m:
; Line 2090
	mov	eax, DWORD PTR _tlscstatp+8
	test	eax, eax
	je	SHORT $LN362@s_server_m
; Line 2091
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN362@s_server_m:
; Line 2092
	mov	eax, DWORD PTR _tlscstatp+4
	test	eax, eax
	je	SHORT $LN363@s_server_m
; Line 2093
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN363@s_server_m:
; Line 2094
	mov	eax, DWORD PTR _ctx2
	test	eax, eax
	je	SHORT $LN364@s_server_m
; Line 2095
	push	eax
	call	_SSL_CTX_free
	add	esp, 4
$LN364@s_server_m:
; Line 2096
	mov	eax, DWORD PTR _s_cert2$1$[esp+252]
	test	eax, eax
	je	SHORT $LN365@s_server_m
; Line 2097
	push	eax
	call	_X509_free
	add	esp, 4
$LN365@s_server_m:
; Line 2098
	mov	eax, DWORD PTR _s_key2$1$[esp+252]
	test	eax, eax
	je	SHORT $LN366@s_server_m
; Line 2099
	push	eax
	call	_EVP_PKEY_free
	add	esp, 4
$LN366@s_server_m:
; Line 2100
	mov	eax, DWORD PTR _serverinfo_in
	test	eax, eax
	je	SHORT $LN367@s_server_m
; Line 2101
	push	eax
	call	_BIO_free
	add	esp, 4
$LN367@s_server_m:
; Line 2103
	mov	eax, DWORD PTR _next_proto$[esp+252]
	test	eax, eax
	je	SHORT $LN368@s_server_m
; Line 2104
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN368@s_server_m:
; Line 2106
	mov	eax, DWORD PTR _alpn_ctx$[esp+252]
	test	eax, eax
	je	SHORT $LN369@s_server_m
; Line 2107
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN369@s_server_m:
; Line 2109
	push	DWORD PTR _exc$[esp+252]
	call	_ssl_excert_free
; Line 2110
	mov	eax, DWORD PTR _ssl_args$[esp+256]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN370@s_server_m
; Line 2111
	push	eax
	call	_sk_free
	add	esp, 4
$LN370@s_server_m:
; Line 2112
	test	ebp, ebp
	je	SHORT $LN371@s_server_m
; Line 2113
	push	ebp
	call	_SSL_CONF_CTX_free
	add	esp, 4
$LN371@s_server_m:
; Line 2118
	mov	eax, DWORD PTR _bio_s_out
	test	eax, eax
	je	SHORT $LN372@s_server_m
; Line 2119
	push	eax
	call	_BIO_free
	add	esp, 4
; Line 2120
	mov	DWORD PTR _bio_s_out, 0
$LN372@s_server_m:
; Line 2122
	mov	eax, DWORD PTR _bio_s_msg
	test	eax, eax
	je	SHORT $LN802@s_server_m
; Line 2123
	push	eax
	call	_BIO_free
	add	esp, 4
; Line 2124
	mov	DWORD PTR _bio_s_msg, 0
$LN802@s_server_m:
; Line 2127
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 2128
	add	esp, 236				; 000000ecH
	ret	0
$LN15@s_server_m:
; Line 1193
	mov	ecx, OFFSET ??_C@_07FILEFCOC@?9verify?$AA@
	mov	eax, esi
$LL464@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN465@s_server_m
	test	dl, dl
	je	SHORT $LN466@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN465@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL464@s_server_m
$LN466@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN467@s_server_m
$LN465@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN467@s_server_m:
	test	eax, eax
	jne	SHORT $LN19@s_server_m
; Line 1195
	dec	ebx
	mov	DWORD PTR _s_server_verify, 5
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1197
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	edi
	add	esp, 4
	mov	DWORD PTR _verify_depth, eax
; Line 1198
	cmp	DWORD PTR _s_quiet, 0
	jne	$LN872@s_server_m
; Line 1199
	push	eax
	push	OFFSET ??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1200
	jmp	$LN872@s_server_m
$LN19@s_server_m:
	mov	ecx, OFFSET ??_C@_07JHAJGLHO@?9Verify?$AA@
	mov	eax, esi
	npad	5
$LL468@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN469@s_server_m
	test	dl, dl
	je	SHORT $LN470@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN469@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL468@s_server_m
$LN470@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN471@s_server_m
$LN469@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN471@s_server_m:
	test	eax, eax
	jne	SHORT $LN23@s_server_m
; Line 1204
	dec	ebx
	mov	DWORD PTR _s_server_verify, 7
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1206
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	edi
	add	esp, 4
	mov	DWORD PTR _verify_depth, eax
; Line 1207
	cmp	DWORD PTR _s_quiet, 0
	jne	$LN872@s_server_m
; Line 1208
	push	eax
	push	OFFSET ??_C@_0CP@BJKKJEFM@verify?5depth?5is?5?$CFd?0?5must?5return?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1211
	jmp	$LN872@s_server_m
$LN23@s_server_m:
	mov	ecx, OFFSET ??_C@_08GKDHLPPP@?9context?$AA@
	mov	eax, esi
$LL472@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN473@s_server_m
	test	dl, dl
	je	SHORT $LN474@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN473@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL472@s_server_m
$LN474@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN475@s_server_m
$LN473@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN475@s_server_m:
	test	eax, eax
	jne	SHORT $LN27@s_server_m
; Line 1212
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1214
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _context$1$[esp+252], eax
	jmp	$LN14@s_server_m
$LN27@s_server_m:
; Line 1215
	mov	ecx, OFFSET ??_C@_05DLEDECNE@?9cert?$AA@
	mov	eax, esi
	npad	1
$LL476@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN477@s_server_m
	test	dl, dl
	je	SHORT $LN478@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN477@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL476@s_server_m
$LN478@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN479@s_server_m
$LN477@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN479@s_server_m:
	test	eax, eax
	jne	SHORT $LN30@s_server_m
; Line 1216
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1218
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _s_cert_file, eax
	jmp	$LN14@s_server_m
$LN30@s_server_m:
; Line 1219
	mov	ecx, OFFSET ??_C@_04LKNJOOFD@?9CRL?$AA@
	mov	eax, esi
$LL480@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN481@s_server_m
	test	dl, dl
	je	SHORT $LN482@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN481@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL480@s_server_m
$LN482@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN483@s_server_m
$LN481@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN483@s_server_m:
	test	eax, eax
	jne	SHORT $LN33@s_server_m
; Line 1220
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1222
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _crl_file$1$[esp+252], eax
	jmp	$LN14@s_server_m
$LN33@s_server_m:
; Line 1223
	mov	ecx, OFFSET ??_C@_0O@FJDFGOOH@?9crl_download?$AA@
	mov	eax, esi
$LL484@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN485@s_server_m
	test	dl, dl
	je	SHORT $LN486@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN485@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL484@s_server_m
$LN486@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN487@s_server_m
$LN485@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN487@s_server_m:
	test	eax, eax
	jne	SHORT $LN36@s_server_m
; Line 1224
	mov	DWORD PTR _crl_download$1$[esp+252], 1
	jmp	$LN14@s_server_m
$LN36@s_server_m:
; Line 1226
	mov	ecx, OFFSET ??_C@_0M@JIFAPBHK@?9serverinfo?$AA@
	mov	eax, esi
$LL488@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN489@s_server_m
	test	dl, dl
	je	SHORT $LN490@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN489@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL488@s_server_m
$LN490@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN491@s_server_m
$LN489@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN491@s_server_m:
	test	eax, eax
	jne	SHORT $LN38@s_server_m
; Line 1227
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1229
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _s_serverinfo_file, eax
; Line 1230
	jmp	$LN14@s_server_m
$LN38@s_server_m:
; Line 1232
	mov	ecx, OFFSET ??_C@_09ECGGEOOO@?9certform?$AA@
	mov	eax, esi
	npad	6
$LL492@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN493@s_server_m
	test	dl, dl
	je	SHORT $LN494@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN493@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL492@s_server_m
$LN494@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN495@s_server_m
$LN493@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN495@s_server_m:
	test	eax, eax
	jne	SHORT $LN41@s_server_m
; Line 1233
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1235
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _s_cert_format$1$[esp+252], eax
	jmp	$LN872@s_server_m
$LN41@s_server_m:
; Line 1236
	mov	ecx, OFFSET ??_C@_04FMEKFICB@?9key?$AA@
	mov	eax, esi
$LL496@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN497@s_server_m
	test	dl, dl
	je	SHORT $LN498@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN497@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL496@s_server_m
$LN498@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN499@s_server_m
$LN497@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN499@s_server_m:
	test	eax, eax
	jne	SHORT $LN44@s_server_m
; Line 1237
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1239
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _s_key_file, eax
	jmp	$LN14@s_server_m
$LN44@s_server_m:
; Line 1240
	mov	ecx, OFFSET ??_C@_08OAHLMBGP@?9keyform?$AA@
	mov	eax, esi
	npad	6
$LL500@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN501@s_server_m
	test	dl, dl
	je	SHORT $LN502@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN501@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL500@s_server_m
$LN502@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN503@s_server_m
$LN501@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN503@s_server_m:
	test	eax, eax
	jne	SHORT $LN47@s_server_m
; Line 1241
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1243
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _s_key_format$1$[esp+252], eax
	jmp	$LN872@s_server_m
$LN47@s_server_m:
; Line 1244
	mov	ecx, OFFSET ??_C@_05NNOCMECB@?9pass?$AA@
	mov	eax, esi
$LL504@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN505@s_server_m
	test	dl, dl
	je	SHORT $LN506@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN505@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL504@s_server_m
$LN506@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN507@s_server_m
$LN505@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN507@s_server_m:
	test	eax, eax
	jne	SHORT $LN50@s_server_m
; Line 1245
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1247
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _passarg$1$[esp+252], eax
	jmp	$LN14@s_server_m
$LN50@s_server_m:
; Line 1248
	mov	ecx, OFFSET ??_C@_0M@MHFOFGHE@?9cert_chain?$AA@
	mov	eax, esi
	npad	7
$LL508@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN509@s_server_m
	test	dl, dl
	je	SHORT $LN510@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN509@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL508@s_server_m
$LN510@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN511@s_server_m
$LN509@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN511@s_server_m:
	test	eax, eax
	jne	SHORT $LN53@s_server_m
; Line 1249
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1251
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _s_chain_file, eax
	jmp	$LN14@s_server_m
$LN53@s_server_m:
; Line 1252
	mov	ecx, OFFSET ??_C@_08HBLAKNLA@?9dhparam?$AA@
	mov	eax, esi
$LL512@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN513@s_server_m
	test	dl, dl
	je	SHORT $LN514@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN513@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL512@s_server_m
$LN514@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN515@s_server_m
$LN513@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN515@s_server_m:
	test	eax, eax
	jne	SHORT $LN56@s_server_m
; Line 1253
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1255
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _dhfile$1$[esp+252], eax
	jmp	$LN14@s_server_m
$LN56@s_server_m:
; Line 1256
	mov	ecx, OFFSET ??_C@_0L@OFMMHJMO@?9dcertform?$AA@
	mov	eax, esi
$LL516@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN517@s_server_m
	test	dl, dl
	je	SHORT $LN518@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN517@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL516@s_server_m
$LN518@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN519@s_server_m
$LN517@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN519@s_server_m:
	test	eax, eax
	jne	SHORT $LN59@s_server_m
; Line 1257
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1259
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _s_dcert_format$1$[esp+252], eax
	jmp	$LN872@s_server_m
$LN59@s_server_m:
; Line 1260
	mov	ecx, OFFSET ??_C@_06JBNADPPB@?9dcert?$AA@
	mov	eax, esi
$LL520@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN521@s_server_m
	test	dl, dl
	je	SHORT $LN522@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN521@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL520@s_server_m
$LN522@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN523@s_server_m
$LN521@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN523@s_server_m:
	test	eax, eax
	jne	SHORT $LN62@s_server_m
; Line 1261
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1263
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _s_dcert_file, eax
	jmp	$LN14@s_server_m
$LN62@s_server_m:
; Line 1264
	mov	ecx, OFFSET ??_C@_09CNGKIAIL@?9dkeyform?$AA@
	mov	eax, esi
	npad	4
$LL524@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN525@s_server_m
	test	dl, dl
	je	SHORT $LN526@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN525@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL524@s_server_m
$LN526@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN527@s_server_m
$LN525@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN527@s_server_m:
	test	eax, eax
	jne	SHORT $LN65@s_server_m
; Line 1265
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1267
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _s_dkey_format$1$[esp+252], eax
	jmp	$LN872@s_server_m
$LN65@s_server_m:
; Line 1268
	mov	ecx, OFFSET ??_C@_06HHHBLJAE@?9dpass?$AA@
	mov	eax, esi
$LL528@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN529@s_server_m
	test	dl, dl
	je	SHORT $LN530@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN529@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL528@s_server_m
$LN530@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN531@s_server_m
$LN529@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN531@s_server_m:
	test	eax, eax
	jne	SHORT $LN68@s_server_m
; Line 1269
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1271
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _dpassarg$1$[esp+252], eax
	jmp	$LN14@s_server_m
$LN68@s_server_m:
; Line 1272
	mov	ecx, OFFSET ??_C@_05MFHLCCEP@?9dkey?$AA@
	mov	eax, esi
	npad	7
$LL532@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN533@s_server_m
	test	dl, dl
	je	SHORT $LN534@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN533@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL532@s_server_m
$LN534@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN535@s_server_m
$LN533@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN535@s_server_m:
	test	eax, eax
	jne	SHORT $LN71@s_server_m
; Line 1273
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1275
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _s_dkey_file, eax
	jmp	$LN14@s_server_m
$LN71@s_server_m:
; Line 1276
	mov	ecx, OFFSET ??_C@_0N@OKGHHAHD@?9dcert_chain?$AA@
	mov	eax, esi
$LL536@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN537@s_server_m
	test	dl, dl
	je	SHORT $LN538@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN537@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL536@s_server_m
$LN538@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN539@s_server_m
$LN537@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN539@s_server_m:
	test	eax, eax
	jne	SHORT $LN74@s_server_m
; Line 1277
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1279
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _s_dchain_file, eax
	jmp	$LN14@s_server_m
$LN74@s_server_m:
; Line 1280
	mov	ecx, OFFSET ??_C@_07BEMJNHEG@?9nocert?$AA@
	mov	eax, esi
$LL540@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN541@s_server_m
	test	dl, dl
	je	SHORT $LN542@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN541@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL540@s_server_m
$LN542@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN543@s_server_m
$LN541@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN543@s_server_m:
	test	eax, eax
	jne	SHORT $LN77@s_server_m
; Line 1281
	mov	DWORD PTR _nocert$1$[esp+252], 1
	jmp	$LN14@s_server_m
$LN77@s_server_m:
; Line 1282
	mov	ecx, OFFSET ??_C@_07MNNNLALG@?9CApath?$AA@
	mov	eax, esi
$LL544@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN545@s_server_m
	test	dl, dl
	je	SHORT $LN546@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN545@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL544@s_server_m
$LN546@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN547@s_server_m
$LN545@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN547@s_server_m:
	test	eax, eax
	jne	SHORT $LN79@s_server_m
; Line 1283
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1285
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _CApath$1$[esp+252], eax
	jmp	$LN14@s_server_m
$LN79@s_server_m:
; Line 1286
	mov	ecx, OFFSET ??_C@_0N@IPPFFGOM@?9chainCApath?$AA@
	mov	eax, esi
	npad	6
$LL548@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN549@s_server_m
	test	dl, dl
	je	SHORT $LN550@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN549@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL548@s_server_m
$LN550@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN551@s_server_m
$LN549@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN551@s_server_m:
	test	eax, eax
	jne	SHORT $LN82@s_server_m
; Line 1287
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1289
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _chCApath$1$[esp+252], eax
	jmp	$LN14@s_server_m
$LN82@s_server_m:
; Line 1290
	mov	ecx, OFFSET ??_C@_0O@NMJDGHEA@?9verifyCApath?$AA@
	mov	eax, esi
	npad	6
$LL552@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN553@s_server_m
	test	dl, dl
	je	SHORT $LN554@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN553@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL552@s_server_m
$LN554@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN555@s_server_m
$LN553@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN555@s_server_m:
	test	eax, eax
	jne	SHORT $LN85@s_server_m
; Line 1291
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1293
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _vfyCApath$1$[esp+252], eax
	jmp	$LN14@s_server_m
$LN85@s_server_m:
; Line 1294
	mov	ecx, OFFSET ??_C@_09LDMOBAAI@?9no_cache?$AA@
	mov	eax, esi
	npad	6
$LL556@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN557@s_server_m
	test	dl, dl
	je	SHORT $LN558@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN557@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL556@s_server_m
$LN558@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN559@s_server_m
$LN557@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN559@s_server_m:
	test	eax, eax
	jne	SHORT $LN88@s_server_m
; Line 1295
	mov	DWORD PTR _no_cache$1$[esp+252], 1
	jmp	$LN14@s_server_m
$LN88@s_server_m:
; Line 1296
	mov	ecx, OFFSET ??_C@_0L@FKNFKJA@?9ext_cache?$AA@
	mov	eax, esi
	npad	3
$LL560@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN561@s_server_m
	test	dl, dl
	je	SHORT $LN562@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN561@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL560@s_server_m
$LN562@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN563@s_server_m
$LN561@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN563@s_server_m:
	test	eax, eax
	jne	SHORT $LN90@s_server_m
; Line 1297
	mov	DWORD PTR _ext_cache$1$[esp+252], 1
	jmp	$LN14@s_server_m
$LN90@s_server_m:
; Line 1298
	mov	eax, OFFSET ??_C@_08PDJLLFEO@?9CRLform?$AA@
	npad	5
$LL564@s_server_m:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN565@s_server_m
	test	cl, cl
	je	SHORT $LN566@s_server_m
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN565@s_server_m
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL564@s_server_m
$LN566@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN567@s_server_m
$LN565@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN567@s_server_m:
	test	eax, eax
	jne	SHORT $LN92@s_server_m
; Line 1299
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1301
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _crl_format$1$[esp+252], eax
	jmp	$LN872@s_server_m
$LN92@s_server_m:
; Line 1302
	lea	eax, DWORD PTR _vpm$[esp+252]
	push	eax
	push	DWORD PTR _bio_err
	lea	eax, DWORD PTR _badarg$[esp+260]
	push	eax
	lea	eax, DWORD PTR _argc$[esp+260]
	push	eax
	lea	eax, DWORD PTR _argv$[esp+264]
	push	eax
	call	_args_verify
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN95@s_server_m
$LN890@s_server_m:
; Line 1303
	cmp	DWORD PTR _badarg$[esp+252], 0
	jne	$LN869@s_server_m
; Line 1305
	mov	ebp, DWORD PTR _argv$[esp+248]
	mov	ebx, DWORD PTR _argc$[esp+248]
	jmp	$LN440@s_server_m
$LN95@s_server_m:
; Line 1306
	lea	eax, DWORD PTR _exc$[esp+252]
	push	eax
	push	DWORD PTR _bio_err
	lea	eax, DWORD PTR _badarg$[esp+260]
	push	eax
	lea	eax, DWORD PTR _argc$[esp+260]
	push	eax
	lea	eax, DWORD PTR _argv$[esp+264]
	push	eax
	call	_args_excert
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN890@s_server_m
; Line 1310
	mov	ebp, DWORD PTR _cctx$1$[esp+252]
	lea	eax, DWORD PTR _ssl_args$[esp+252]
	push	eax
	push	DWORD PTR _bio_err
	lea	eax, DWORD PTR _badarg$[esp+260]
	push	eax
	push	ebp
	lea	eax, DWORD PTR _argc$[esp+264]
	push	eax
	lea	eax, DWORD PTR _argv$[esp+268]
	push	eax
	call	_args_ssl
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN101@s_server_m
; Line 1311
	cmp	DWORD PTR _badarg$[esp+252], 0
	jne	$bad$894
; Line 1313
	mov	ebp, DWORD PTR _argv$[esp+248]
	mov	ebx, DWORD PTR _argc$[esp+248]
	jmp	$LN440@s_server_m
$LN101@s_server_m:
; Line 1314
	mov	ebp, DWORD PTR _argv$[esp+248]
	mov	ecx, OFFSET ??_C@_0BF@JEHPJFIB@?9verify_return_error?$AA@
	mov	esi, DWORD PTR [ebp]
	mov	eax, esi
$LL568@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN569@s_server_m
	test	dl, dl
	je	SHORT $LN570@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN569@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL568@s_server_m
$LN570@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN571@s_server_m
$LN569@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN571@s_server_m:
	test	eax, eax
	jne	SHORT $LN104@s_server_m
; Line 1315
	mov	DWORD PTR _verify_return_error, 1
	jmp	$LN873@s_server_m
$LN104@s_server_m:
; Line 1316
	mov	ecx, OFFSET ??_C@_0O@IOFAKFNC@?9verify_quiet?$AA@
	mov	eax, esi
$LL572@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN573@s_server_m
	test	dl, dl
	je	SHORT $LN574@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN573@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL572@s_server_m
$LN574@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN575@s_server_m
$LN573@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN575@s_server_m:
	test	eax, eax
	jne	SHORT $LN106@s_server_m
; Line 1317
	mov	DWORD PTR _verify_quiet, 1
	jmp	$LN873@s_server_m
$LN106@s_server_m:
; Line 1318
	mov	ecx, OFFSET ??_C@_0N@EBJMJDFN@?9build_chain?$AA@
	mov	eax, esi
	npad	1
$LL576@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN577@s_server_m
	test	dl, dl
	je	SHORT $LN578@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN577@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL576@s_server_m
$LN578@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN579@s_server_m
$LN577@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN579@s_server_m:
	test	eax, eax
	jne	SHORT $LN108@s_server_m
; Line 1319
	mov	DWORD PTR _build_chain$1$[esp+252], 1
	jmp	$LN873@s_server_m
$LN108@s_server_m:
; Line 1320
	mov	ecx, OFFSET ??_C@_07EAFCHGPO@?9CAfile?$AA@
	mov	eax, esi
$LL580@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN581@s_server_m
	test	dl, dl
	je	SHORT $LN582@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN581@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL580@s_server_m
$LN582@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN583@s_server_m
$LN581@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN583@s_server_m:
	test	eax, eax
	jne	SHORT $LN110@s_server_m
; Line 1321
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1323
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _CAfile$1$[esp+252], eax
	jmp	$LN14@s_server_m
$LN110@s_server_m:
; Line 1324
	mov	ecx, OFFSET ??_C@_0N@CHKJAKE@?9chainCAfile?$AA@
	mov	eax, esi
$LL584@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN585@s_server_m
	test	dl, dl
	je	SHORT $LN586@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN585@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL584@s_server_m
$LN586@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN587@s_server_m
$LN585@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN587@s_server_m:
	test	eax, eax
	jne	SHORT $LN113@s_server_m
; Line 1325
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1327
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _chCAfile$1$[esp+252], eax
	jmp	$LN14@s_server_m
$LN113@s_server_m:
; Line 1328
	mov	ecx, OFFSET ??_C@_0O@FBBMKBAI@?9verifyCAfile?$AA@
	mov	eax, esi
$LL588@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN589@s_server_m
	test	dl, dl
	je	SHORT $LN590@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN589@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL588@s_server_m
$LN590@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN591@s_server_m
$LN589@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN591@s_server_m:
	test	eax, eax
	jne	SHORT $LN116@s_server_m
; Line 1329
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1331
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _vfyCAfile$1$[esp+252], eax
; Line 1332
	jmp	$LN14@s_server_m
$LN116@s_server_m:
; Line 1334
	mov	ecx, OFFSET ??_C@_05OHEBDJNH@?9nbio?$AA@
	mov	eax, esi
$LL592@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN593@s_server_m
	test	dl, dl
	je	SHORT $LN594@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN593@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL592@s_server_m
$LN594@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN595@s_server_m
$LN593@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN595@s_server_m:
	test	eax, eax
	jne	SHORT $LN119@s_server_m
; Line 1335
	mov	DWORD PTR _s_nbio, 1
; Line 1336
	jmp	$LN873@s_server_m
$LN119@s_server_m:
; Line 1338
	mov	ecx, OFFSET ??_C@_0L@DGAHAHFJ@?9nbio_test?$AA@
	mov	eax, esi
$LL596@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN597@s_server_m
	test	dl, dl
	je	SHORT $LN598@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN597@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL596@s_server_m
$LN598@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN599@s_server_m
$LN597@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN599@s_server_m:
	test	eax, eax
	jne	SHORT $LN121@s_server_m
; Line 1340
	mov	DWORD PTR _s_nbio, 1
; Line 1342
	mov	DWORD PTR _s_nbio_test, 1
	jmp	$LN873@s_server_m
$LN121@s_server_m:
; Line 1343
	mov	ecx, OFFSET ??_C@_08BPJEDGGD@?9ign_eof?$AA@
	mov	eax, esi
	npad	5
$LL600@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN601@s_server_m
	test	dl, dl
	je	SHORT $LN602@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN601@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL600@s_server_m
$LN602@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN603@s_server_m
$LN601@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN603@s_server_m:
	test	eax, eax
	jne	SHORT $LN123@s_server_m
; Line 1344
	mov	DWORD PTR _s_ign_eof, 1
	jmp	$LN873@s_server_m
$LN123@s_server_m:
; Line 1345
	mov	ecx, OFFSET ??_C@_0M@PIMNDHCE@?9no_ign_eof?$AA@
	mov	eax, esi
	npad	1
$LL604@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN605@s_server_m
	test	dl, dl
	je	SHORT $LN606@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN605@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL604@s_server_m
$LN606@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN607@s_server_m
$LN605@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN607@s_server_m:
	test	eax, eax
	jne	SHORT $LN125@s_server_m
; Line 1346
	mov	DWORD PTR _s_ign_eof, eax
	jmp	$LN873@s_server_m
$LN125@s_server_m:
; Line 1347
	mov	ecx, OFFSET ??_C@_06OHOHKFPP@?9debug?$AA@
	mov	eax, esi
	npad	6
$LL608@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN609@s_server_m
	test	dl, dl
	je	SHORT $LN610@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN609@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL608@s_server_m
$LN610@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN611@s_server_m
$LN609@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN611@s_server_m:
	test	eax, eax
	jne	SHORT $LN127@s_server_m
; Line 1348
	mov	DWORD PTR _s_debug, 1
; Line 1349
	jmp	$LN873@s_server_m
$LN127@s_server_m:
; Line 1351
	mov	ecx, OFFSET ??_C@_0N@DOFNHFMN@?9tlsextdebug?$AA@
	mov	eax, esi
	npad	1
$LL612@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN613@s_server_m
	test	dl, dl
	je	SHORT $LN614@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN613@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL612@s_server_m
$LN614@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN615@s_server_m
$LN613@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN615@s_server_m:
	test	eax, eax
	jne	SHORT $LN129@s_server_m
; Line 1352
	mov	DWORD PTR _s_tlsextdebug, 1
	jmp	$LN873@s_server_m
$LN129@s_server_m:
; Line 1353
	mov	ecx, OFFSET ??_C@_07KDLKDLMI@?9status?$AA@
	mov	eax, esi
	npad	1
$LL616@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN617@s_server_m
	test	dl, dl
	je	SHORT $LN618@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN617@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL616@s_server_m
$LN618@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN619@s_server_m
$LN617@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN619@s_server_m:
	test	eax, eax
	jne	SHORT $LN131@s_server_m
; Line 1354
	mov	DWORD PTR _s_tlsextstatus, 1
	jmp	$LN873@s_server_m
$LN131@s_server_m:
; Line 1355
	mov	ecx, OFFSET ??_C@_0BA@BJMLCLNE@?9status_verbose?$AA@
	mov	eax, esi
	npad	1
$LL620@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN621@s_server_m
	test	dl, dl
	je	SHORT $LN622@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN621@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL620@s_server_m
$LN622@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN623@s_server_m
$LN621@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN623@s_server_m:
	test	eax, eax
	jne	SHORT $LN133@s_server_m
; Line 1356
	mov	DWORD PTR _s_tlsextstatus, 1
; Line 1357
	mov	DWORD PTR _tlscstatp+24, 1
	jmp	$LN873@s_server_m
$LN133@s_server_m:
; Line 1358
	mov	ecx, OFFSET ??_C@_0BA@ILLKHFCB@?9status_timeout?$AA@
	mov	eax, esi
	npad	7
$LL624@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN625@s_server_m
	test	dl, dl
	je	SHORT $LN626@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN625@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL624@s_server_m
$LN626@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN627@s_server_m
$LN625@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN627@s_server_m:
	test	eax, eax
	jne	SHORT $LN135@s_server_m
; Line 1360
	mov	eax, DWORD PTR _argc$[esp+248]
	dec	eax
	mov	DWORD PTR _s_tlsextstatus, 1
	mov	DWORD PTR _argc$[esp+248], eax
	cmp	eax, 1
	jl	$LN869@s_server_m
; Line 1362
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	edi
	add	esp, 4
	mov	DWORD PTR _tlscstatp+16, eax
	jmp	$LN872@s_server_m
$LN135@s_server_m:
; Line 1363
	mov	ecx, OFFSET ??_C@_0M@LCKNOINJ@?9status_url?$AA@
	mov	eax, esi
	npad	2
$LL628@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN629@s_server_m
	test	dl, dl
	je	SHORT $LN630@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN629@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL628@s_server_m
$LN630@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN631@s_server_m
$LN629@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN631@s_server_m:
	test	eax, eax
	jne	SHORT $LN138@s_server_m
; Line 1365
	mov	eax, DWORD PTR _argc$[esp+248]
	dec	eax
	mov	DWORD PTR _s_tlsextstatus, 1
	mov	DWORD PTR _argc$[esp+248], eax
	cmp	eax, 1
	jl	$LN869@s_server_m
; Line 1367
	push	OFFSET _tlscstatp+12
	push	OFFSET _tlscstatp+4
	add	ebp, 4
	push	OFFSET _tlscstatp+8
	mov	DWORD PTR _argv$[esp+260], ebp
	push	OFFSET _tlscstatp
	push	DWORD PTR [ebp]
	call	_OCSP_parse_url
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN872@s_server_m
; Line 1371
	push	OFFSET ??_C@_0BD@CCODGPPI@Error?5parsing?5URL?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1372
	jmp	$LN869@s_server_m
$LN138@s_server_m:
; Line 1376
	mov	ecx, OFFSET ??_C@_04LFMLOHOA@?9msg?$AA@
	mov	eax, esi
	npad	5
$LL632@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN633@s_server_m
	test	dl, dl
	je	SHORT $LN634@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN633@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL632@s_server_m
$LN634@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN635@s_server_m
$LN633@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN635@s_server_m:
	test	eax, eax
	jne	SHORT $LN142@s_server_m
; Line 1377
	mov	DWORD PTR _s_msg, 1
	jmp	$LN873@s_server_m
$LN142@s_server_m:
; Line 1378
	mov	ecx, OFFSET ??_C@_08OAMMFJFJ@?9msgfile?$AA@
	mov	eax, esi
	npad	1
$LL636@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN637@s_server_m
	test	dl, dl
	je	SHORT $LN638@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN637@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL636@s_server_m
$LN638@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN639@s_server_m
$LN637@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN639@s_server_m:
	test	eax, eax
	jne	SHORT $LN144@s_server_m
; Line 1379
	mov	eax, DWORD PTR _argc$[esp+248]
	dec	eax
	mov	DWORD PTR _argc$[esp+248], eax
	cmp	eax, 1
	jl	$LN869@s_server_m
; Line 1381
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	DWORD PTR [ebp]
	call	_BIO_new_file
	add	esp, 8
	mov	DWORD PTR _bio_s_msg, eax
; Line 1382
	jmp	$LN872@s_server_m
$LN144@s_server_m:
; Line 1388
	mov	ecx, OFFSET ??_C@_05BDEPCDEL@?9hack?$AA@
	mov	eax, esi
	npad	4
$LL640@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN641@s_server_m
	test	dl, dl
	je	SHORT $LN642@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN641@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL640@s_server_m
$LN642@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN643@s_server_m
$LN641@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN643@s_server_m:
	test	eax, eax
	jne	SHORT $LN147@s_server_m
; Line 1389
	mov	DWORD PTR _hack, 1
	jmp	$LN873@s_server_m
$LN147@s_server_m:
; Line 1390
	mov	ecx, OFFSET ??_C@_06IFPFIOLF@?9state?$AA@
	mov	eax, esi
	npad	1
$LL644@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN645@s_server_m
	test	dl, dl
	je	SHORT $LN646@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN645@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL644@s_server_m
$LN646@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN647@s_server_m
$LN645@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN647@s_server_m:
	test	eax, eax
	jne	SHORT $LN149@s_server_m
; Line 1391
	mov	DWORD PTR _state$1$[esp+252], 1
	jmp	$LN873@s_server_m
$LN149@s_server_m:
; Line 1392
	mov	ecx, OFFSET ??_C@_05JIMBNDFL@?9crlf?$AA@
	mov	eax, esi
	npad	3
$LL648@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN649@s_server_m
	test	dl, dl
	je	SHORT $LN650@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN649@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL648@s_server_m
$LN650@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN651@s_server_m
$LN649@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN651@s_server_m:
	test	eax, eax
	jne	SHORT $LN151@s_server_m
; Line 1393
	mov	DWORD PTR _s_crlf, 1
	jmp	$LN873@s_server_m
$LN151@s_server_m:
; Line 1394
	mov	ecx, OFFSET ??_C@_06HONEMELG@?9quiet?$AA@
	mov	eax, esi
	npad	1
$LL652@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN653@s_server_m
	test	dl, dl
	je	SHORT $LN654@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN653@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL652@s_server_m
$LN654@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN655@s_server_m
$LN653@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN655@s_server_m:
	test	eax, eax
	jne	SHORT $LN153@s_server_m
; Line 1395
	mov	DWORD PTR _s_quiet, 1
	jmp	$LN873@s_server_m
$LN153@s_server_m:
; Line 1396
	mov	ecx, OFFSET ??_C@_06DBECBIEA@?9brief?$AA@
	mov	eax, esi
	npad	1
$LL656@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN657@s_server_m
	test	dl, dl
	je	SHORT $LN658@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN657@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL656@s_server_m
$LN658@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN659@s_server_m
$LN657@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN659@s_server_m:
	test	eax, eax
	jne	SHORT $LN155@s_server_m
; Line 1397
	mov	DWORD PTR _s_quiet, 1
; Line 1398
	mov	DWORD PTR _s_brief, 1
; Line 1399
	mov	DWORD PTR _verify_quiet, 1
	jmp	$LN873@s_server_m
$LN155@s_server_m:
; Line 1400
	mov	ecx, OFFSET ??_C@_0M@BFGMIMIO@?9no_tmp_rsa?$AA@
	mov	eax, esi
$LL660@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN661@s_server_m
	test	dl, dl
	je	SHORT $LN662@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN661@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL660@s_server_m
$LN662@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN663@s_server_m
$LN661@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN663@s_server_m:
	test	eax, eax
	jne	SHORT $LN157@s_server_m
; Line 1401
	mov	DWORD PTR _no_tmp_rsa$1$[esp+252], 1
	jmp	$LN873@s_server_m
$LN157@s_server_m:
; Line 1402
	mov	ecx, OFFSET ??_C@_07IKMMOABC@?9no_dhe?$AA@
	mov	eax, esi
$LL664@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN665@s_server_m
	test	dl, dl
	je	SHORT $LN666@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN665@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL664@s_server_m
$LN666@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN667@s_server_m
$LN665@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN667@s_server_m:
	test	eax, eax
	jne	SHORT $LN159@s_server_m
; Line 1403
	mov	DWORD PTR _no_dhe$1$[esp+252], 1
	jmp	$LN873@s_server_m
$LN159@s_server_m:
; Line 1404
	mov	ecx, OFFSET ??_C@_09ICIAJIMM@?9no_ecdhe?$AA@
	mov	eax, esi
$LL668@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN669@s_server_m
	test	dl, dl
	je	SHORT $LN670@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN669@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL668@s_server_m
$LN670@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN671@s_server_m
$LN669@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN671@s_server_m:
	test	eax, eax
	jne	SHORT $LN161@s_server_m
; Line 1405
	mov	DWORD PTR _no_ecdhe$1$[esp+252], 1
	jmp	$LN873@s_server_m
$LN161@s_server_m:
; Line 1406
	mov	ecx, OFFSET ??_C@_0BF@NMHHJINK@?9no_resume_ephemeral?$AA@
	mov	eax, esi
$LL672@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN673@s_server_m
	test	dl, dl
	je	SHORT $LN674@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN673@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL672@s_server_m
$LN674@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN675@s_server_m
$LN673@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN675@s_server_m:
	test	eax, eax
	jne	SHORT $LN163@s_server_m
; Line 1407
	mov	DWORD PTR _no_resume_ephemeral, 1
; Line 1408
	jmp	$LN873@s_server_m
$LN163@s_server_m:
; Line 1410
	mov	ecx, OFFSET ??_C@_09OGLFDGKP@?9psk_hint?$AA@
	mov	eax, esi
	npad	1
$LL676@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN677@s_server_m
	test	dl, dl
	je	SHORT $LN678@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN677@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL676@s_server_m
$LN678@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN679@s_server_m
$LN677@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN679@s_server_m:
	test	eax, eax
	jne	SHORT $LN165@s_server_m
; Line 1411
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1413
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR ?psk_identity_hint@?1??s_server_main@@9@9, eax
	jmp	$LN14@s_server_m
$LN165@s_server_m:
; Line 1414
	mov	ecx, OFFSET ??_C@_04LLANCHKO@?9psk?$AA@
	mov	eax, esi
	npad	1
$LL680@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN681@s_server_m
	test	dl, dl
	je	SHORT $LN682@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN681@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL680@s_server_m
$LN682@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN683@s_server_m
$LN681@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN683@s_server_m:
	test	eax, eax
	jne	$LN168@s_server_m
; Line 1417
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1419
	add	ebp, 4
; Line 1420
	xor	esi, esi
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	edi, DWORD PTR [ebp]
	mov	ecx, edi
	mov	DWORD PTR _psk_key, edi
	lea	edx, DWORD PTR [ecx+1]
	npad	1
$LL684@s_server_m:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL684@s_server_m
	sub	ecx, edx
	je	SHORT $LN804@s_server_m
	npad	5
$LL6@s_server_m:
; Line 1421
	movzx	eax, BYTE PTR [edi+esi]
	push	eax
	call	DWORD PTR __imp__isxdigit
	add	esp, 4
	test	eax, eax
	je	$LN171@s_server_m
; Line 1420
	mov	edi, DWORD PTR _psk_key
	inc	esi
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL685@s_server_m:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL685@s_server_m
	sub	ecx, edx
	cmp	esi, ecx
	jb	SHORT $LL6@s_server_m
; Line 1426
	mov	edi, DWORD PTR __imp__atoi
	jmp	$LN872@s_server_m
$LN804@s_server_m:
	mov	edi, DWORD PTR __imp__atoi
	jmp	$LN14@s_server_m
$LN168@s_server_m:
; Line 1429
	mov	ecx, OFFSET ??_C@_09LJIFNPCB@?9srpvfile?$AA@
	mov	eax, esi
	npad	4
$LL686@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN687@s_server_m
	test	dl, dl
	je	SHORT $LN688@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN687@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL686@s_server_m
$LN688@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN689@s_server_m
$LN687@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN689@s_server_m:
	test	eax, eax
	jne	SHORT $LN172@s_server_m
; Line 1430
	mov	eax, DWORD PTR _argc$[esp+248]
	dec	eax
	mov	DWORD PTR _argc$[esp+248], eax
	cmp	eax, 1
	jl	$LN869@s_server_m
; Line 1432
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _srp_verifier_file$1$[esp+252], eax
; Line 1433
	call	_TLSv1_server_method
	mov	DWORD PTR _meth$1$[esp+252], eax
	jmp	$LN872@s_server_m
$LN172@s_server_m:
; Line 1434
	mov	ecx, OFFSET ??_C@_0N@PNICEKHP@?9srpuserseed?$AA@
	mov	eax, esi
	npad	6
$LL690@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN691@s_server_m
	test	dl, dl
	je	SHORT $LN692@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN691@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL690@s_server_m
$LN692@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN693@s_server_m
$LN691@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN693@s_server_m:
	test	eax, eax
	jne	SHORT $LN175@s_server_m
; Line 1435
	mov	eax, DWORD PTR _argc$[esp+248]
	dec	eax
	mov	DWORD PTR _argc$[esp+248], eax
	cmp	eax, 1
	jl	$LN869@s_server_m
; Line 1437
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _srpuserseed$1$[esp+252], eax
; Line 1438
	call	_TLSv1_server_method
	mov	DWORD PTR _meth$1$[esp+252], eax
; Line 1439
	jmp	$LN872@s_server_m
$LN175@s_server_m:
; Line 1441
	mov	ecx, OFFSET ??_C@_04PGMDFMPL@?9rev?$AA@
	mov	eax, esi
	npad	6
$LL694@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN695@s_server_m
	test	dl, dl
	je	SHORT $LN696@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN695@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL694@s_server_m
$LN696@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN697@s_server_m
$LN695@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN697@s_server_m:
	test	eax, eax
	jne	SHORT $LN178@s_server_m
; Line 1442
	mov	DWORD PTR _rev$1$[esp+252], 1
	jmp	$LN873@s_server_m
$LN178@s_server_m:
; Line 1443
	mov	ecx, OFFSET ??_C@_04MHKEOKJG@?9www?$AA@
	mov	eax, esi
$LL698@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN699@s_server_m
	test	dl, dl
	je	SHORT $LN700@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN699@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL698@s_server_m
$LN700@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN701@s_server_m
$LN699@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN701@s_server_m:
	test	eax, eax
	jne	SHORT $LN180@s_server_m
; Line 1444
	mov	DWORD PTR _www, 1
	jmp	$LN873@s_server_m
$LN180@s_server_m:
; Line 1445
	mov	ecx, OFFSET ??_C@_04MKFPCHOK@?9WWW?$AA@
	mov	eax, esi
	npad	1
$LL702@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN703@s_server_m
	test	dl, dl
	je	SHORT $LN704@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN703@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL702@s_server_m
$LN704@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN705@s_server_m
$LN703@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN705@s_server_m:
	test	eax, eax
	jne	SHORT $LN182@s_server_m
; Line 1446
	mov	DWORD PTR _www, 2
	jmp	$LN873@s_server_m
$LN182@s_server_m:
; Line 1447
	mov	ecx, OFFSET ??_C@_05IONBIPB@?9HTTP?$AA@
	mov	eax, esi
	npad	1
$LL706@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN707@s_server_m
	test	dl, dl
	je	SHORT $LN708@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN707@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL706@s_server_m
$LN708@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN709@s_server_m
$LN707@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN709@s_server_m:
	test	eax, eax
	jne	SHORT $LN184@s_server_m
; Line 1448
	mov	DWORD PTR _www, 3
; Line 1449
	jmp	$LN873@s_server_m
$LN184@s_server_m:
; Line 1457
	mov	ecx, OFFSET ??_C@_05IHFBIKKN@?9ssl3?$AA@
	mov	eax, esi
	npad	1
$LL710@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN711@s_server_m
	test	dl, dl
	je	SHORT $LN712@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN711@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL710@s_server_m
$LN712@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN713@s_server_m
$LN711@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN713@s_server_m:
	test	eax, eax
	jne	SHORT $LN186@s_server_m
; Line 1458
	call	_SSLv3_server_method
	mov	DWORD PTR _meth$1$[esp+252], eax
; Line 1459
	jmp	$LN872@s_server_m
$LN186@s_server_m:
; Line 1462
	mov	ecx, OFFSET ??_C@_05BIEHJHLL@?9tls1?$AA@
	mov	eax, esi
	npad	2
$LL714@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN715@s_server_m
	test	dl, dl
	je	SHORT $LN716@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN715@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL714@s_server_m
$LN716@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN717@s_server_m
$LN715@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN717@s_server_m:
	test	eax, eax
	jne	SHORT $LN188@s_server_m
; Line 1463
	call	_TLSv1_server_method
	mov	DWORD PTR _meth$1$[esp+252], eax
	jmp	$LN872@s_server_m
$LN188@s_server_m:
; Line 1464
	mov	ecx, OFFSET ??_C@_07MIOHAHOM@?9tls1_1?$AA@
	mov	eax, esi
	npad	2
$LL718@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN719@s_server_m
	test	dl, dl
	je	SHORT $LN720@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN719@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL718@s_server_m
$LN720@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN721@s_server_m
$LN719@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN721@s_server_m:
	test	eax, eax
	jne	SHORT $LN190@s_server_m
; Line 1465
	call	_TLSv1_1_server_method
	mov	DWORD PTR _meth$1$[esp+252], eax
	jmp	$LN872@s_server_m
$LN190@s_server_m:
; Line 1466
	mov	ecx, OFFSET ??_C@_07ODMKFECP@?9tls1_2?$AA@
	mov	eax, esi
	npad	2
$LL722@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN723@s_server_m
	test	dl, dl
	je	SHORT $LN724@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN723@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL722@s_server_m
$LN724@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN725@s_server_m
$LN723@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN725@s_server_m:
	test	eax, eax
	jne	SHORT $LN192@s_server_m
; Line 1467
	call	_TLSv1_2_server_method
	mov	DWORD PTR _meth$1$[esp+252], eax
; Line 1468
	jmp	$LN872@s_server_m
$LN192@s_server_m:
; Line 1471
	mov	ecx, OFFSET ??_C@_05DIDPLGID@?9dtls?$AA@
	mov	eax, esi
	npad	2
$LL726@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN727@s_server_m
	test	dl, dl
	je	SHORT $LN728@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN727@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL726@s_server_m
$LN728@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN729@s_server_m
$LN727@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN729@s_server_m:
	test	eax, eax
	jne	SHORT $LN194@s_server_m
; Line 1472
	call	_DTLS_server_method
	mov	DWORD PTR _meth$1$[esp+252], eax
; Line 1473
	mov	DWORD PTR _socket_type$1$[esp+252], 2
	jmp	$LN872@s_server_m
$LN194@s_server_m:
; Line 1474
	mov	ecx, OFFSET ??_C@_06LCNEOKJO@?9dtls1?$AA@
	mov	eax, esi
$LL730@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN731@s_server_m
	test	dl, dl
	je	SHORT $LN732@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN731@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL730@s_server_m
$LN732@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN733@s_server_m
$LN731@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN733@s_server_m:
	test	eax, eax
	jne	SHORT $LN196@s_server_m
; Line 1475
	call	_DTLSv1_server_method
	mov	DWORD PTR _meth$1$[esp+252], eax
; Line 1476
	mov	DWORD PTR _socket_type$1$[esp+252], 2
	jmp	$LN872@s_server_m
$LN196@s_server_m:
; Line 1477
	mov	ecx, OFFSET ??_C@_08CFINCDNK@?9dtls1_2?$AA@
	mov	eax, esi
	npad	4
$LL734@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN735@s_server_m
	test	dl, dl
	je	SHORT $LN736@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN735@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL734@s_server_m
$LN736@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN737@s_server_m
$LN735@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN737@s_server_m:
	test	eax, eax
	jne	SHORT $LN198@s_server_m
; Line 1478
	call	_DTLSv1_2_server_method
	mov	DWORD PTR _meth$1$[esp+252], eax
; Line 1479
	mov	DWORD PTR _socket_type$1$[esp+252], 2
	jmp	$LN872@s_server_m
$LN198@s_server_m:
; Line 1480
	mov	ecx, OFFSET ??_C@_08MDOIANFM@?9timeout?$AA@
	mov	eax, esi
$LL738@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN739@s_server_m
	test	dl, dl
	je	SHORT $LN740@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN739@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL738@s_server_m
$LN740@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN741@s_server_m
$LN739@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN741@s_server_m:
	test	eax, eax
	jne	SHORT $LN200@s_server_m
; Line 1481
	mov	DWORD PTR _enable_timeouts, 1
	jmp	$LN873@s_server_m
$LN200@s_server_m:
; Line 1482
	mov	ecx, OFFSET ??_C@_04MIHAIBLG@?9mtu?$AA@
	mov	eax, esi
$LL742@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN743@s_server_m
	test	dl, dl
	je	SHORT $LN744@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN743@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL742@s_server_m
$LN744@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN745@s_server_m
$LN743@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN745@s_server_m:
	test	eax, eax
	jne	SHORT $LN202@s_server_m
; Line 1483
	mov	eax, DWORD PTR _argc$[esp+248]
	dec	eax
	mov	DWORD PTR _argc$[esp+248], eax
	cmp	eax, 1
	jl	$LN869@s_server_m
; Line 1485
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	DWORD PTR __imp__atol
	add	esp, 4
	mov	DWORD PTR _socket_mtu, eax
	jmp	$LN872@s_server_m
$LN202@s_server_m:
; Line 1486
	mov	ecx, OFFSET ??_C@_06NEDJBPEF@?9chain?$AA@
	mov	eax, esi
	npad	3
$LL746@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN747@s_server_m
	test	dl, dl
	je	SHORT $LN748@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN747@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL746@s_server_m
$LN748@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN749@s_server_m
$LN747@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN749@s_server_m:
	test	eax, eax
	jne	SHORT $LN205@s_server_m
; Line 1487
	mov	DWORD PTR _cert_chain, 1
	jmp	$LN873@s_server_m
$LN205@s_server_m:
; Line 1489
	mov	ecx, OFFSET ??_C@_0L@DMPGLNOJ@?9id_prefix?$AA@
	mov	eax, esi
	npad	1
$LL750@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN751@s_server_m
	test	dl, dl
	je	SHORT $LN752@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN751@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL750@s_server_m
$LN752@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN753@s_server_m
$LN751@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN753@s_server_m:
	test	eax, eax
	jne	SHORT $LN207@s_server_m
; Line 1490
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1492
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _session_id_prefix, eax
; Line 1493
	jmp	$LN14@s_server_m
$LN207@s_server_m:
; Line 1495
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, esi
	npad	1
$LL754@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN755@s_server_m
	test	dl, dl
	je	SHORT $LN756@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN755@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL754@s_server_m
$LN756@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN757@s_server_m
$LN755@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN757@s_server_m:
	test	eax, eax
	jne	SHORT $LN210@s_server_m
; Line 1496
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1498
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _engine_id, eax
; Line 1499
	jmp	$LN14@s_server_m
$LN210@s_server_m:
; Line 1501
	mov	ecx, OFFSET ??_C@_05LGFPCDPE@?9rand?$AA@
	mov	eax, esi
	npad	1
$LL758@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN759@s_server_m
	test	dl, dl
	je	SHORT $LN760@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN759@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL758@s_server_m
$LN760@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN761@s_server_m
$LN759@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN761@s_server_m:
	test	eax, eax
	jne	SHORT $LN213@s_server_m
; Line 1502
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1504
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _inrand$1$[esp+252], eax
; Line 1505
	jmp	$LN14@s_server_m
$LN213@s_server_m:
; Line 1507
	mov	ecx, OFFSET ??_C@_0M@IEKJDKFH@?9servername?$AA@
	mov	eax, esi
	npad	2
$LL762@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN763@s_server_m
	test	dl, dl
	je	SHORT $LN764@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN763@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL762@s_server_m
$LN764@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN765@s_server_m
$LN763@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN765@s_server_m:
	test	eax, eax
	jne	SHORT $LN216@s_server_m
; Line 1508
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1510
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _tlsextcbp$[esp+252], eax
	jmp	$LN14@s_server_m
$LN216@s_server_m:
; Line 1511
	mov	ecx, OFFSET ??_C@_0BC@OHCHOECI@?9servername_fatal?$AA@
	mov	eax, esi
$LL766@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN767@s_server_m
	test	dl, dl
	je	SHORT $LN768@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN767@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL766@s_server_m
$LN768@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN769@s_server_m
$LN767@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN769@s_server_m:
	test	eax, eax
	jne	SHORT $LN219@s_server_m
; Line 1512
	mov	DWORD PTR _tlsextcbp$[esp+260], 2
	jmp	$LN873@s_server_m
$LN219@s_server_m:
; Line 1513
	mov	ecx, OFFSET ??_C@_06GMPFABPO@?9cert2?$AA@
	mov	eax, esi
$LL770@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN771@s_server_m
	test	dl, dl
	je	SHORT $LN772@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN771@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL770@s_server_m
$LN772@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN773@s_server_m
$LN771@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN773@s_server_m:
	test	eax, eax
	jne	SHORT $LN221@s_server_m
; Line 1514
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1516
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _s_cert_file2, eax
	jmp	$LN14@s_server_m
$LN221@s_server_m:
; Line 1517
	mov	ecx, OFFSET ??_C@_05KBEFAOHH@?9key2?$AA@
	mov	eax, esi
$LL774@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN775@s_server_m
	test	dl, dl
	je	SHORT $LN776@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN775@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL774@s_server_m
$LN776@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN777@s_server_m
$LN775@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN777@s_server_m:
	test	eax, eax
	jne	SHORT $LN224@s_server_m
; Line 1518
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1520
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _s_key_file2, eax
; Line 1521
	jmp	$LN14@s_server_m
$LN224@s_server_m:
; Line 1523
	mov	ecx, OFFSET ??_C@_0O@PMNNGHPN@?9nextprotoneg?$AA@
	mov	eax, esi
	npad	1
$LL778@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN779@s_server_m
	test	dl, dl
	je	SHORT $LN780@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN779@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL778@s_server_m
$LN780@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN781@s_server_m
$LN779@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN781@s_server_m:
	test	eax, eax
	jne	SHORT $LN227@s_server_m
; Line 1524
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1526
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _next_proto_neg_in$1$[esp+252], eax
; Line 1527
	jmp	$LN14@s_server_m
$LN227@s_server_m:
; Line 1529
	mov	ecx, OFFSET ??_C@_05IPCCHAIL@?9alpn?$AA@
	mov	eax, esi
$LL782@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN783@s_server_m
	test	dl, dl
	je	SHORT $LN784@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN783@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL782@s_server_m
$LN784@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN785@s_server_m
$LN783@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN785@s_server_m:
	test	eax, eax
	jne	SHORT $LN230@s_server_m
; Line 1530
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1532
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _alpn_in$1$[esp+252], eax
; Line 1533
	jmp	$LN14@s_server_m
$LN230@s_server_m:
; Line 1543
	mov	ecx, OFFSET ??_C@_09BJOIJNBC@?9use_srtp?$AA@
	mov	eax, esi
$LL786@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN787@s_server_m
	test	dl, dl
	je	SHORT $LN788@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN787@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL786@s_server_m
$LN788@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN789@s_server_m
$LN787@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN789@s_server_m:
	test	eax, eax
	jne	SHORT $LN233@s_server_m
; Line 1544
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1546
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _srtp_profiles, eax
; Line 1547
	jmp	$LN14@s_server_m
$LN233@s_server_m:
; Line 1549
	mov	ecx, OFFSET ??_C@_0O@HHCLPCNN@?9keymatexport?$AA@
	mov	eax, esi
$LL790@s_server_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN791@s_server_m
	test	dl, dl
	je	SHORT $LN792@s_server_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN791@s_server_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL790@s_server_m
$LN792@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN793@s_server_m
$LN791@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN793@s_server_m:
	test	eax, eax
	jne	SHORT $LN236@s_server_m
; Line 1550
	mov	ebx, DWORD PTR _argc$[esp+248]
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1552
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR _keymatexportlabel, eax
	jmp	$LN14@s_server_m
$LN236@s_server_m:
; Line 1553
	mov	eax, OFFSET ??_C@_0BB@MLPFNLDC@?9keymatexportlen?$AA@
	npad	2
$LL794@s_server_m:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN795@s_server_m
	test	cl, cl
	je	SHORT $LN796@s_server_m
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN795@s_server_m
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL794@s_server_m
$LN796@s_server_m:
	xor	eax, eax
	jmp	SHORT $LN797@s_server_m
$LN795@s_server_m:
	sbb	eax, eax
	or	eax, 1
$LN797@s_server_m:
	test	eax, eax
	jne	$LN239@s_server_m
; Line 1554
	mov	eax, DWORD PTR _argc$[esp+248]
	dec	eax
	mov	DWORD PTR _argc$[esp+248], eax
	cmp	eax, 1
	jl	$LN869@s_server_m
; Line 1556
	add	ebp, 4
	mov	DWORD PTR _argv$[esp+248], ebp
	push	DWORD PTR [ebp]
	call	edi
	add	esp, 4
	mov	DWORD PTR _keymatexportlen, eax
; Line 1559
	jmp	SHORT $LN889@s_server_m
$LN12@s_server_m:
; Line 1181
	dec	ebx
	mov	DWORD PTR _argc$[esp+248], ebx
	cmp	ebx, 1
	jl	$LN869@s_server_m
; Line 1183
	add	ebp, 4
	lea	eax, DWORD PTR _port$[esp+252]
	push	eax
	mov	DWORD PTR _argv$[esp+252], ebp
	push	DWORD PTR [ebp]
	call	_extract_port
	add	esp, 8
$LN889@s_server_m:
	test	eax, eax
	je	$LN869@s_server_m
$LN872@s_server_m:
	mov	ebp, DWORD PTR _argv$[esp+248]
$LN873@s_server_m:
	mov	ebx, DWORD PTR _argc$[esp+248]
$LN14@s_server_m:
; Line 1564
	dec	ebx
; Line 1565
	add	ebp, 4
	mov	DWORD PTR _argc$[esp+248], ebx
	mov	DWORD PTR _argv$[esp+248], ebp
$LN440@s_server_m:
; Line 1179
	cmp	ebx, 1
	jge	$LL2@s_server_m
; Line 1183
	mov	esi, DWORD PTR _passarg$1$[esp+252]
	mov	edi, DWORD PTR _socket_type$1$[esp+252]
$LN806@s_server_m:
; Line 1573
	cmp	DWORD PTR _www, 0
	je	SHORT $LN244@s_server_m
	cmp	edi, 2
	jne	SHORT $LN244@s_server_m
; Line 1574
	push	OFFSET ??_C@_0CJ@FNPAALFK@Can?8t?5use?5?9HTTP?0?5?9www?5or?5?9WWW?5wi@
$LN883@s_server_m:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN884@s_server_m:
; Line 1575
	mov	ebp, DWORD PTR _cctx$1$[esp+252]
	mov	ebx, 1
	jmp	$LN871@s_server_m
$LN171@s_server_m:
; Line 1423
	mov	eax, DWORD PTR _argv$[esp+248]
	push	DWORD PTR [eax]
	push	OFFSET ??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@
; Line 1424
	jmp	$LN874@s_server_m
$LN239@s_server_m:
; Line 1560
	push	DWORD PTR [ebp]
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
	jmp	$LN874@s_server_m
$LN244@s_server_m:
; Line 1589
	call	_SSL_load_error_strings
; Line 1590
	call	_SSL_library_init
; Line 1593
	push	1
	push	DWORD PTR _engine_id
	push	DWORD PTR _bio_err
	call	_setup_engine
	mov	edi, eax
; Line 1596
	lea	eax, DWORD PTR _dpass$[esp+264]
	push	eax
	lea	eax, DWORD PTR _pass$[esp+268]
	push	eax
	push	DWORD PTR _dpassarg$1$[esp+272]
	push	esi
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN245@s_server_m
; Line 1597
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
; Line 1598
	jmp	$LN883@s_server_m
$LN245@s_server_m:
; Line 1601
	mov	eax, DWORD PTR _s_key_file
	test	eax, eax
; Line 1608
	push	DWORD PTR _bio_err
	cmove	eax, DWORD PTR _s_cert_file
	mov	DWORD PTR _s_key_file, eax
	mov	eax, DWORD PTR _s_key_file2
	test	eax, eax
	cmove	eax, DWORD PTR _s_cert_file2
	mov	DWORD PTR _s_key_file2, eax
	lea	eax, DWORD PTR _exc$[esp+256]
	push	eax
	call	_load_excert
	add	esp, 8
	test	eax, eax
	je	$LN884@s_server_m
; Line 1611
	mov	ebp, DWORD PTR _nocert$1$[esp+252]
	test	ebp, ebp
	jne	$LN256@s_server_m
; Line 1612
	mov	esi, DWORD PTR _s_key_format$1$[esp+252]
	push	OFFSET ??_C@_0CE@HCELPDHN@server?5certificate?5private?5key?5f@
	push	edi
	push	DWORD PTR _pass$[esp+260]
	push	ebp
	push	esi
	push	DWORD PTR _s_key_file
	push	DWORD PTR _bio_err
	call	_load_key
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _s_key$1$[esp+252], eax
; Line 1614
	test	eax, eax
	jne	SHORT $LN250@s_server_m
; Line 1615
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	lea	ebx, DWORD PTR [ebp+1]
	add	esp, 4
	mov	ebp, DWORD PTR _cctx$1$[esp+252]
	jmp	$LN871@s_server_m
$LN250@s_server_m:
; Line 1619
	mov	ebx, DWORD PTR _s_cert_format$1$[esp+252]
	push	OFFSET ??_C@_0BI@KEHADFAK@server?5certificate?5file?$AA@
	push	edi
	push	0
	push	ebx
	push	DWORD PTR _s_cert_file
	push	DWORD PTR _bio_err
	call	_load_cert
	add	esp, 24					; 00000018H
	mov	DWORD PTR _s_cert$1$[esp+252], eax
; Line 1622
	test	eax, eax
	jne	SHORT $LN251@s_server_m
; Line 1623
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	mov	ebp, DWORD PTR _cctx$1$[esp+256]
	add	esp, 4
	mov	ebx, 1
	jmp	$LN871@s_server_m
$LN251@s_server_m:
; Line 1626
	mov	eax, DWORD PTR _s_chain_file
	test	eax, eax
	je	SHORT $LN253@s_server_m
; Line 1627
	push	OFFSET ??_C@_0BJ@INNCEGLI@server?5certificate?5chain?$AA@
	push	edi
	push	0
	push	3
	push	eax
	push	DWORD PTR _bio_err
	call	_load_certs
	add	esp, 24					; 00000018H
	mov	DWORD PTR _s_chain$1$[esp+252], eax
; Line 1629
	test	eax, eax
	je	$LN884@s_server_m
$LN253@s_server_m:
; Line 1633
	cmp	DWORD PTR _tlsextcbp$[esp+252], 0
	je	$LN256@s_server_m
; Line 1634
	push	OFFSET ??_C@_0CL@ICCLMJCM@second?5server?5certificate?5privat@
	push	edi
	push	DWORD PTR _pass$[esp+260]
	push	0
	push	esi
	push	DWORD PTR _s_key_file2
	push	DWORD PTR _bio_err
	call	_load_key
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _s_key2$1$[esp+252], eax
; Line 1636
	test	eax, eax
	jne	SHORT $LN255@s_server_m
; Line 1637
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	mov	ebp, DWORD PTR _cctx$1$[esp+256]
	add	esp, 4
	mov	ebx, 1
	jmp	$LN871@s_server_m
$LN255@s_server_m:
; Line 1641
	push	OFFSET ??_C@_0BP@EJJLONPG@second?5server?5certificate?5file?$AA@
	push	edi
	push	0
	push	ebx
	push	DWORD PTR _s_cert_file2
	push	DWORD PTR _bio_err
	call	_load_cert
	add	esp, 24					; 00000018H
	mov	DWORD PTR _s_cert2$1$[esp+252], eax
; Line 1644
	test	eax, eax
	jne	SHORT $LN256@s_server_m
; Line 1645
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	mov	ebp, DWORD PTR _cctx$1$[esp+256]
	add	esp, 4
	mov	ebx, 1
	jmp	$LN871@s_server_m
$LN256@s_server_m:
; Line 1653
	mov	eax, DWORD PTR _next_proto_neg_in$1$[esp+252]
	test	eax, eax
	je	SHORT $LN257@s_server_m
; Line 1655
	push	eax
	lea	eax, DWORD PTR _len$2[esp+256]
	push	eax
	call	_next_protos_parse
	add	esp, 8
	mov	DWORD PTR _next_proto$[esp+252], eax
; Line 1656
	test	eax, eax
	je	$LN884@s_server_m
; Line 1658
	movzx	eax, WORD PTR _len$2[esp+252]
	mov	DWORD PTR _next_proto$[esp+256], eax
; Line 1659
	jmp	SHORT $LN258@s_server_m
$LN257@s_server_m:
; Line 1660
	mov	DWORD PTR _next_proto$[esp+252], 0
$LN258@s_server_m:
; Line 1664
	mov	eax, DWORD PTR _alpn_in$1$[esp+252]
	mov	DWORD PTR _alpn_ctx$[esp+252], 0
	test	eax, eax
	je	SHORT $LN260@s_server_m
; Line 1666
	push	eax
	lea	eax, DWORD PTR _len$1[esp+256]
	push	eax
	call	_next_protos_parse
	add	esp, 8
	mov	DWORD PTR _alpn_ctx$[esp+252], eax
; Line 1667
	test	eax, eax
	je	$LN884@s_server_m
; Line 1669
	mov	ax, WORD PTR _len$1[esp+252]
	mov	WORD PTR _alpn_ctx$[esp+256], ax
$LN260@s_server_m:
; Line 1673
	mov	eax, DWORD PTR _crl_file$1$[esp+252]
	test	eax, eax
	je	$LN264@s_server_m
; Line 1675
	push	DWORD PTR _crl_format$1$[esp+252]
	push	eax
	call	_load_crl
	mov	esi, eax
	add	esp, 8
; Line 1676
	test	esi, esi
	jne	SHORT $LN263@s_server_m
; Line 1677
	push	OFFSET ??_C@_0BD@PIKJPJLO@Error?5loading?5CRL?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 1678
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	mov	ebp, DWORD PTR _cctx$1$[esp+264]
	lea	ebx, DWORD PTR [esi+1]
	add	esp, 12					; 0000000cH
	jmp	$LN871@s_server_m
$LN263@s_server_m:
; Line 1681
	call	_sk_new_null
	mov	DWORD PTR _crls$1$[esp+252], eax
; Line 1682
	test	eax, eax
	je	SHORT $LN265@s_server_m
	push	esi
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN264@s_server_m
$LN265@s_server_m:
; Line 1683
	push	OFFSET ??_C@_0BC@IKMGLJPK@Error?5adding?5CRL?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 1684
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 1685
	push	esi
	call	_X509_CRL_free
; Line 1686
	mov	ebp, DWORD PTR _cctx$1$[esp+268]
	add	esp, 16					; 00000010H
	mov	esi, DWORD PTR _crls$1$[esp+252]
	mov	ebx, 1
	jmp	$LN875@s_server_m
$LN264@s_server_m:
; Line 1690
	mov	ecx, DWORD PTR _s_dcert_file
	test	ecx, ecx
	je	$LN271@s_server_m
; Line 1692
	mov	eax, DWORD PTR _s_dkey_file
	test	eax, eax
; Line 1695
	push	OFFSET ??_C@_0CE@BCIGGKGN@second?5certificate?5private?5key?5f@
	push	edi
	push	DWORD PTR _dpass$[esp+260]
	cmove	eax, ecx
	push	0
	push	DWORD PTR _s_dkey_format$1$[esp+268]
	mov	DWORD PTR _s_dkey_file, eax
	push	eax
	push	DWORD PTR _bio_err
	call	_load_key
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _s_dkey$1$[esp+252], eax
; Line 1697
	test	eax, eax
	jne	SHORT $LN268@s_server_m
; Line 1698
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 1699
	mov	ebp, DWORD PTR _cctx$1$[esp+256]
	add	esp, 4
	mov	esi, DWORD PTR _crls$1$[esp+252]
	mov	ebx, 1
	jmp	$LN875@s_server_m
$LN268@s_server_m:
; Line 1702
	push	OFFSET ??_C@_0BP@EJJLONPG@second?5server?5certificate?5file?$AA@
	push	edi
	push	0
	push	DWORD PTR _s_dcert_format$1$[esp+264]
	push	DWORD PTR _s_dcert_file
	push	DWORD PTR _bio_err
	call	_load_cert
	add	esp, 24					; 00000018H
	mov	DWORD PTR _s_dcert$1$[esp+252], eax
; Line 1705
	test	eax, eax
	jne	SHORT $LN269@s_server_m
$LN885@s_server_m:
; Line 1706
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN886@s_server_m:
; Line 1707
	mov	esi, DWORD PTR _crls$1$[esp+252]
$LN816@s_server_m:
	mov	ebp, DWORD PTR _cctx$1$[esp+252]
	mov	ebx, 1
	mov	edi, DWORD PTR _s_dcert$1$[esp+252]
	jmp	$end$895
$LN269@s_server_m:
; Line 1709
	mov	eax, DWORD PTR _s_dchain_file
	test	eax, eax
	je	SHORT $LN271@s_server_m
; Line 1710
	push	OFFSET ??_C@_0CA@DJDEBDFH@second?5server?5certificate?5chain?$AA@
	push	edi
	push	0
	push	3
	push	eax
	push	DWORD PTR _bio_err
	call	_load_certs
	add	esp, 24					; 00000018H
	mov	DWORD PTR _s_dchain$1$[esp+252], eax
; Line 1712
	test	eax, eax
	je	SHORT $LN886@s_server_m
$LN271@s_server_m:
; Line 1719
	push	1
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_load_file
	add	esp, 12					; 0000000cH
	test	eax, eax
	mov	eax, DWORD PTR _inrand$1$[esp+252]
	jne	SHORT $LN272@s_server_m
	test	eax, eax
	jne	SHORT $LN449@s_server_m
	call	_RAND_status
	test	eax, eax
	jne	SHORT $LN273@s_server_m
; Line 1720
	push	OFFSET ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1723
	jmp	SHORT $LN273@s_server_m
$LN272@s_server_m:
	test	eax, eax
	je	SHORT $LN273@s_server_m
$LN449@s_server_m:
; Line 1724
	push	eax
	call	_app_RAND_load_files
	push	eax
	push	OFFSET ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN273@s_server_m:
; Line 1727
	cmp	DWORD PTR _bio_s_out, 0
	jne	$LN278@s_server_m
; Line 1728
	cmp	DWORD PTR _s_quiet, 0
	je	SHORT $LN450@s_server_m
	cmp	DWORD PTR _s_debug, 0
	jne	SHORT $LN450@s_server_m
; Line 1729
	call	_BIO_s_null
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_s_out, eax
; Line 1730
	cmp	DWORD PTR _s_msg, 0
	je	SHORT $LN278@s_server_m
	cmp	DWORD PTR _bio_s_msg, 0
	jne	SHORT $LN278@s_server_m
; Line 1731
	mov	eax, DWORD PTR __imp____acrt_iob_func
	push	0
	push	1
	call	eax
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	mov	DWORD PTR _bio_s_msg, eax
; Line 1732
	jmp	SHORT $LN876@s_server_m
$LN450@s_server_m:
; Line 1734
	mov	eax, DWORD PTR __imp____acrt_iob_func
	push	0
	push	1
	call	eax
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	mov	DWORD PTR _bio_s_out, eax
$LN876@s_server_m:
	add	esp, 8
$LN278@s_server_m:
; Line 1738
	test	ebp, ebp
	je	SHORT $LN279@s_server_m
; Line 1741
	mov	DWORD PTR _s_cert_file, 0
; Line 1742
	mov	DWORD PTR _s_key_file, 0
; Line 1743
	mov	DWORD PTR _s_dcert_file, 0
; Line 1744
	mov	DWORD PTR _s_dkey_file, 0
; Line 1746
	mov	DWORD PTR _s_cert_file2, 0
; Line 1747
	mov	DWORD PTR _s_key_file2, 0
$LN279@s_server_m:
; Line 1751
	mov	ebx, DWORD PTR _meth$1$[esp+252]
	push	ebx
	call	_SSL_CTX_new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR _ctx, esi
; Line 1752
	test	esi, esi
	je	$LN885@s_server_m
; Line 1756
	mov	ecx, DWORD PTR _session_id_prefix
	test	ecx, ecx
	je	$LN281@s_server_m
; Line 1757
	mov	edx, ecx
	lea	edi, DWORD PTR [edx+1]
	npad	6
$LL798@s_server_m:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL798@s_server_m
	sub	edx, edi
	cmp	edx, 32					; 00000020H
	jb	SHORT $LN282@s_server_m
; Line 1758
	push	OFFSET ??_C@_0EH@EGJGHBGM@warning?3?5id_prefix?5is?5too?5long?0?5@
	jmp	SHORT $LN877@s_server_m
$LN282@s_server_m:
; Line 1760
	lea	edx, DWORD PTR [ecx+1]
$LL799@s_server_m:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL799@s_server_m
	sub	ecx, edx
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN284@s_server_m
; Line 1761
	push	OFFSET ??_C@_0DB@GPNGCKNP@warning?3?5id_prefix?5is?5too?5long?5i@
$LN877@s_server_m:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	esi, DWORD PTR _ctx
	add	esp, 8
$LN284@s_server_m:
; Line 1763
	push	OFFSET _generate_session_id
	push	esi
	call	_SSL_CTX_set_generate_session_id
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN285@s_server_m
$LN892@s_server_m:
; Line 1764
	push	OFFSET ??_C@_0BL@LHIJJPBK@error?5setting?5?8id_prefix?8?6?$AA@
$LN891@s_server_m:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1765
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	mov	esi, DWORD PTR _crls$1$[esp+264]
	add	esp, 12					; 0000000cH
	mov	ebp, DWORD PTR _cctx$1$[esp+252]
	mov	ebx, 1
	mov	edi, DWORD PTR _s_dcert$1$[esp+252]
	jmp	$end$895
$LN285@s_server_m:
; Line 1768
	push	DWORD PTR _session_id_prefix
	push	OFFSET ??_C@_0BF@JIEBEBOD@id_prefix?5?8?$CFs?8?5set?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	esi, DWORD PTR _ctx
	add	esp, 12					; 0000000cH
$LN281@s_server_m:
; Line 1770
	push	1
	push	esi
	call	_SSL_CTX_set_quiet_shutdown
	add	esp, 8
; Line 1771
	cmp	DWORD PTR _hack, 0
	je	SHORT $LN286@s_server_m
; Line 1772
	push	0
	push	1073741824				; 40000000H
	push	32					; 00000020H
	push	DWORD PTR _ctx
	call	_SSL_CTX_ctrl
	add	esp, 16					; 00000010H
$LN286@s_server_m:
; Line 1773
	mov	eax, DWORD PTR _exc$[esp+252]
	test	eax, eax
	je	SHORT $LN287@s_server_m
; Line 1774
	push	eax
	push	DWORD PTR _ctx
	call	_ssl_ctx_set_excert
	add	esp, 8
$LN287@s_server_m:
; Line 1776
	mov	esi, DWORD PTR _state$1$[esp+252]
	test	esi, esi
	je	SHORT $LN288@s_server_m
; Line 1777
	push	OFFSET _apps_ssl_info_callback
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_info_callback
	add	esp, 8
$LN288@s_server_m:
; Line 1778
	cmp	DWORD PTR _no_cache$1$[esp+252], 0
	je	SHORT $LN289@s_server_m
; Line 1779
	push	0
	push	0
	push	44					; 0000002cH
	jmp	SHORT $LN878@s_server_m
$LN289@s_server_m:
; Line 1780
	cmp	DWORD PTR _ext_cache$1$[esp+252], 0
	je	SHORT $LN291@s_server_m
; Line 1781
	push	DWORD PTR _ctx
	call	_init_session_cache_ctx
	add	esp, 4
	jmp	SHORT $LN292@s_server_m
$LN291@s_server_m:
; Line 1783
	push	0
	push	128					; 00000080H
	push	42					; 0000002aH
$LN878@s_server_m:
	push	DWORD PTR _ctx
	call	_SSL_CTX_ctrl
	add	esp, 16					; 00000010H
$LN292@s_server_m:
; Line 1786
	mov	eax, DWORD PTR _srtp_profiles
	test	eax, eax
	je	SHORT $LN293@s_server_m
; Line 1787
	push	eax
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_tlsext_use_srtp
	add	esp, 8
$LN293@s_server_m:
; Line 1803
	mov	edi, DWORD PTR _CApath$1$[esp+252]
	mov	ebp, DWORD PTR _CAfile$1$[esp+252]
	push	edi
	push	ebp
	push	DWORD PTR _ctx
	call	_SSL_CTX_load_verify_locations
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN295@s_server_m
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_default_verify_paths
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN294@s_server_m
$LN295@s_server_m:
; Line 1806
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN294@s_server_m:
; Line 1809
	mov	eax, DWORD PTR _vpm$[esp+252]
	test	eax, eax
	je	SHORT $LN296@s_server_m
; Line 1810
	push	eax
	push	DWORD PTR _ctx
	call	_SSL_CTX_set1_param
	add	esp, 8
$LN296@s_server_m:
; Line 1812
	push	0
	push	DWORD PTR _crls$1$[esp+256]
	push	DWORD PTR _ctx
	call	_ssl_ctx_add_crls
; Line 1814
	push	1
	push	DWORD PTR _no_ecdhe$1$[esp+268]
	push	DWORD PTR _ssl_args$[esp+272]
	push	DWORD PTR _cctx$1$[esp+276]
	push	DWORD PTR _bio_err
	push	DWORD PTR _ctx
	call	_args_ssl_call
	add	esp, 36					; 00000024H
	test	eax, eax
	je	$LN886@s_server_m
; Line 1817
	push	DWORD PTR _crl_download$1$[esp+252]
	push	DWORD PTR _crls$1$[esp+256]
	push	DWORD PTR _chCAfile$1$[esp+260]
	push	DWORD PTR _chCApath$1$[esp+264]
	push	DWORD PTR _vfyCAfile$1$[esp+268]
	push	DWORD PTR _vfyCApath$1$[esp+272]
	push	DWORD PTR _ctx
	call	_ssl_load_stores
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN298@s_server_m
; Line 1819
	push	OFFSET ??_C@_0BP@HJJPNDHG@Error?5loading?5store?5locations?6?$AA@
; Line 1821
	jmp	$LN891@s_server_m
$LN298@s_server_m:
; Line 1824
	cmp	DWORD PTR _s_cert2$1$[esp+252], 0
	je	SHORT $LN300@s_server_m
; Line 1825
	push	ebx
	call	_SSL_CTX_new
	add	esp, 4
	mov	DWORD PTR _ctx2, eax
; Line 1826
	test	eax, eax
	jne	SHORT $LN448@s_server_m
; Line 1828
	jmp	$LN885@s_server_m
$LN300@s_server_m:
; Line 1832
	cmp	DWORD PTR _ctx2, 0
	je	$LN317@s_server_m
$LN448@s_server_m:
; Line 1833
	push	OFFSET ??_C@_0CC@JJJJPDLM@Setting?5secondary?5ctx?5parameters@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 1835
	mov	ecx, DWORD PTR _session_id_prefix
	add	esp, 8
	test	ecx, ecx
	je	$LN302@s_server_m
; Line 1836
	mov	edx, ecx
	lea	esi, DWORD PTR [edx+1]
	npad	2
$LL800@s_server_m:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL800@s_server_m
	sub	edx, esi
	cmp	edx, 32					; 00000020H
	jb	SHORT $LN303@s_server_m
; Line 1837
	push	OFFSET ??_C@_0EH@EGJGHBGM@warning?3?5id_prefix?5is?5too?5long?0?5@
	jmp	SHORT $LN879@s_server_m
$LN303@s_server_m:
; Line 1839
	lea	edx, DWORD PTR [ecx+1]
$LL801@s_server_m:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL801@s_server_m
	sub	ecx, edx
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LN305@s_server_m
; Line 1840
	push	OFFSET ??_C@_0DB@GPNGCKNP@warning?3?5id_prefix?5is?5too?5long?5i@
$LN879@s_server_m:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN305@s_server_m:
; Line 1842
	push	OFFSET _generate_session_id
	push	DWORD PTR _ctx2
	call	_SSL_CTX_set_generate_session_id
	add	esp, 8
	test	eax, eax
	je	$LN892@s_server_m
; Line 1847
	push	DWORD PTR _session_id_prefix
	push	OFFSET ??_C@_0BF@JIEBEBOD@id_prefix?5?8?$CFs?8?5set?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	esi, DWORD PTR _state$1$[esp+264]
	add	esp, 12					; 0000000cH
$LN302@s_server_m:
; Line 1849
	push	1
	push	DWORD PTR _ctx2
	call	_SSL_CTX_set_quiet_shutdown
	add	esp, 8
; Line 1850
	cmp	DWORD PTR _hack, 0
	je	SHORT $LN307@s_server_m
; Line 1851
	push	0
	push	1073741824				; 40000000H
	push	32					; 00000020H
	push	DWORD PTR _ctx2
	call	_SSL_CTX_ctrl
	add	esp, 16					; 00000010H
$LN307@s_server_m:
; Line 1852
	mov	eax, DWORD PTR _exc$[esp+252]
	test	eax, eax
	je	SHORT $LN308@s_server_m
; Line 1853
	push	eax
	push	DWORD PTR _ctx2
	call	_ssl_ctx_set_excert
	add	esp, 8
$LN308@s_server_m:
; Line 1855
	test	esi, esi
	je	SHORT $LN309@s_server_m
; Line 1856
	push	OFFSET _apps_ssl_info_callback
	push	DWORD PTR _ctx2
	call	_SSL_CTX_set_info_callback
	add	esp, 8
$LN309@s_server_m:
; Line 1858
	cmp	DWORD PTR _no_cache$1$[esp+252], 0
	je	SHORT $LN310@s_server_m
; Line 1859
	push	0
	push	0
	push	44					; 0000002cH
	jmp	SHORT $LN880@s_server_m
$LN310@s_server_m:
; Line 1860
	cmp	DWORD PTR _ext_cache$1$[esp+252], 0
	je	SHORT $LN312@s_server_m
; Line 1861
	push	DWORD PTR _ctx2
	call	_init_session_cache_ctx
	add	esp, 4
	jmp	SHORT $LN313@s_server_m
$LN312@s_server_m:
; Line 1863
	push	0
	push	128					; 00000080H
	push	42					; 0000002aH
$LN880@s_server_m:
	push	DWORD PTR _ctx2
	call	_SSL_CTX_ctrl
	add	esp, 16					; 00000010H
$LN313@s_server_m:
; Line 1865
	push	edi
	push	ebp
	push	DWORD PTR _ctx2
	call	_SSL_CTX_load_verify_locations
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN315@s_server_m
	push	DWORD PTR _ctx2
	call	_SSL_CTX_set_default_verify_paths
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN314@s_server_m
$LN315@s_server_m:
; Line 1867
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN314@s_server_m:
; Line 1869
	mov	eax, DWORD PTR _vpm$[esp+252]
	test	eax, eax
	je	SHORT $LN316@s_server_m
; Line 1870
	push	eax
	push	DWORD PTR _ctx2
	call	_SSL_CTX_set1_param
	add	esp, 8
$LN316@s_server_m:
; Line 1872
	mov	esi, DWORD PTR _crls$1$[esp+252]
	push	0
	push	esi
	push	DWORD PTR _ctx2
	call	_ssl_ctx_add_crls
; Line 1874
	push	1
	push	DWORD PTR _no_ecdhe$1$[esp+268]
	push	DWORD PTR _ssl_args$[esp+272]
	push	DWORD PTR _cctx$1$[esp+276]
	push	DWORD PTR _bio_err
	push	DWORD PTR _ctx2
	call	_args_ssl_call
	add	esp, 36					; 00000024H
	test	eax, eax
	je	$LN816@s_server_m
$LN317@s_server_m:
; Line 1879
	cmp	DWORD PTR _next_proto$[esp+252], 0
	je	SHORT $LN318@s_server_m
; Line 1880
	lea	eax, DWORD PTR _next_proto$[esp+252]
	push	eax
	push	OFFSET _next_proto_cb
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_next_protos_advertised_cb
	add	esp, 12					; 0000000cH
$LN318@s_server_m:
; Line 1883
	cmp	DWORD PTR _alpn_ctx$[esp+252], 0
	je	SHORT $LN319@s_server_m
; Line 1884
	lea	eax, DWORD PTR _alpn_ctx$[esp+252]
	push	eax
	push	OFFSET _alpn_cb
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_alpn_select_cb
	add	esp, 12					; 0000000cH
$LN319@s_server_m:
; Line 1888
	cmp	DWORD PTR _no_dhe$1$[esp+252], 0
	jne	$LN320@s_server_m
; Line 1891
	mov	ebx, DWORD PTR _dhfile$1$[esp+252]
	test	ebx, ebx
	je	SHORT $LN321@s_server_m
; Line 1892
	push	ebx
	jmp	SHORT $LN881@s_server_m
$LN321@s_server_m:
; Line 1893
	mov	eax, DWORD PTR _s_cert_file
	test	eax, eax
	je	SHORT $LN324@s_server_m
; Line 1894
	push	eax
$LN881@s_server_m:
	call	_load_dh_param
	mov	esi, eax
	add	esp, 4
; Line 1896
	test	esi, esi
	je	SHORT $LN324@s_server_m
; Line 1897
	push	OFFSET ??_C@_0BM@KICIHDMG@Setting?5temp?5DH?5parameters?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
; Line 1898
	jmp	SHORT $LN326@s_server_m
$LN324@s_server_m:
; Line 1899
	push	OFFSET ??_C@_0CC@OAKJEKOM@Using?5default?5temp?5DH?5parameters@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
; Line 1900
	call	_get_dh2048
	mov	esi, eax
; Line 1901
	test	esi, esi
	je	$LN885@s_server_m
$LN326@s_server_m:
; Line 1906
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_s_out
	call	_BIO_ctrl
; Line 1908
	push	esi
	push	0
	push	3
	push	DWORD PTR _ctx
	call	_SSL_CTX_ctrl
	add	esp, 32					; 00000020H
; Line 1910
	cmp	DWORD PTR _ctx2, 0
	je	SHORT $LN327@s_server_m
; Line 1911
	test	ebx, ebx
	jne	SHORT $LN807@s_server_m
; Line 1912
	push	DWORD PTR _s_cert_file2
	call	_load_dh_param
	mov	edi, eax
	add	esp, 4
; Line 1913
	test	edi, edi
	je	SHORT $LN807@s_server_m
; Line 1914
	push	OFFSET ??_C@_0BM@KICIHDMG@Setting?5temp?5DH?5parameters?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 1915
	push	ebx
	push	ebx
	push	11					; 0000000bH
	push	DWORD PTR _bio_s_out
	call	_BIO_ctrl
; Line 1917
	push	esi
	call	_DH_free
	add	esp, 28					; 0000001cH
; Line 1918
	mov	esi, edi
$LN807@s_server_m:
; Line 1921
	push	esi
	push	0
	push	3
	push	DWORD PTR _ctx2
	call	_SSL_CTX_ctrl
	add	esp, 16					; 00000010H
$LN327@s_server_m:
; Line 1924
	push	esi
	call	_DH_free
	add	esp, 4
$LN320@s_server_m:
; Line 1928
	mov	ebx, DWORD PTR _build_chain$1$[esp+252]
	push	ebx
	push	DWORD PTR _s_chain$1$[esp+256]
	push	DWORD PTR _s_key$1$[esp+260]
	push	DWORD PTR _s_cert$1$[esp+264]
	push	DWORD PTR _ctx
	call	_set_cert_key_stuff
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN886@s_server_m
; Line 1932
	mov	eax, DWORD PTR _s_serverinfo_file
	test	eax, eax
	je	SHORT $LN331@s_server_m
	push	eax
	push	DWORD PTR _ctx
	call	_SSL_CTX_use_serverinfo_file
	add	esp, 8
	test	eax, eax
	je	$LN885@s_server_m
$LN331@s_server_m:
; Line 1938
	mov	eax, DWORD PTR _ctx2
	test	eax, eax
	je	SHORT $LN332@s_server_m
	push	ebx
	push	0
	push	DWORD PTR _s_key2$1$[esp+260]
	push	DWORD PTR _s_cert2$1$[esp+264]
	push	eax
	call	_set_cert_key_stuff
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN886@s_server_m
$LN332@s_server_m:
; Line 1941
	mov	edi, DWORD PTR _s_dcert$1$[esp+252]
	test	edi, edi
	je	SHORT $LN334@s_server_m
; Line 1942
	push	ebx
	push	DWORD PTR _s_dchain$1$[esp+256]
	push	DWORD PTR _s_dkey$1$[esp+260]
	push	edi
	push	DWORD PTR _ctx
	call	_set_cert_key_stuff
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN819@s_server_m
$LN334@s_server_m:
; Line 1947
	cmp	DWORD PTR _no_tmp_rsa$1$[esp+252], 0
	jne	SHORT $LN336@s_server_m
; Line 1948
	push	OFFSET _tmp_rsa_cb
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_tmp_rsa_callback
; Line 1950
	mov	eax, DWORD PTR _ctx2
	add	esp, 8
	test	eax, eax
	je	SHORT $LN336@s_server_m
; Line 1951
	push	OFFSET _tmp_rsa_cb
	push	eax
	call	_SSL_CTX_set_tmp_rsa_callback
	add	esp, 8
$LN336@s_server_m:
; Line 1983
	cmp	DWORD PTR _psk_key, 0
	je	SHORT $LN337@s_server_m
; Line 1988
	cmp	DWORD PTR _s_debug, 0
	je	SHORT $LN338@s_server_m
; Line 1989
	push	OFFSET ??_C@_0DI@BDMABIIJ@PSK?5key?5given?5or?5JPAKE?5in?5use?0?5s@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN338@s_server_m:
; Line 1991
	push	OFFSET _psk_server_cb
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_psk_server_callback
	add	esp, 8
$LN337@s_server_m:
; Line 1994
	push	DWORD PTR ?psk_identity_hint@?1??s_server_main@@9@9
	push	DWORD PTR _ctx
	call	_SSL_CTX_use_psk_identity_hint
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN339@s_server_m
; Line 1995
	push	OFFSET ??_C@_0CM@BDIGNJAA@error?5setting?5PSK?5identity?5hint?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1996
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
$LN819@s_server_m:
; Line 1997
	mov	ebp, DWORD PTR _cctx$1$[esp+252]
	mov	ebx, 1
	mov	esi, DWORD PTR _crls$1$[esp+252]
	jmp	$end$895
$LN339@s_server_m:
; Line 2001
	push	OFFSET _verify_callback
	push	DWORD PTR _s_server_verify
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_verify
; Line 2002
	push	4
	push	OFFSET _s_server_session_id_context
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_session_id_context
; Line 2006
	push	OFFSET _generate_cookie_callback
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_cookie_generate_cb
; Line 2007
	push	OFFSET _verify_cookie_callback
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_cookie_verify_cb
; Line 2010
	mov	eax, DWORD PTR _ctx2
	add	esp, 40					; 00000028H
	test	eax, eax
	je	$LN340@s_server_m
; Line 2011
	push	OFFSET _verify_callback
	push	DWORD PTR _s_server_verify
	push	eax
	call	_SSL_CTX_set_verify
; Line 2012
	push	4
	push	OFFSET _s_server_session_id_context
	push	DWORD PTR _ctx2
	call	_SSL_CTX_set_session_id_context
; Line 2016
	mov	eax, DWORD PTR _bio_s_out
; Line 2017
	push	OFFSET _ssl_servername_cb
	push	53					; 00000035H
	push	DWORD PTR _ctx2
	mov	DWORD PTR _tlsextcbp$[esp+292], eax
	call	_SSL_CTX_callback_ctrl
; Line 2018
	lea	eax, DWORD PTR _tlsextcbp$[esp+288]
	push	eax
	push	0
	push	54					; 00000036H
	push	DWORD PTR _ctx2
	call	_SSL_CTX_ctrl
; Line 2019
	push	OFFSET _ssl_servername_cb
	push	53					; 00000035H
	push	DWORD PTR _ctx
	call	_SSL_CTX_callback_ctrl
	add	esp, 64					; 00000040H
; Line 2020
	lea	eax, DWORD PTR _tlsextcbp$[esp+252]
	push	eax
	push	0
	push	54					; 00000036H
	push	DWORD PTR _ctx
	call	_SSL_CTX_ctrl
	add	esp, 16					; 00000010H
$LN340@s_server_m:
; Line 2025
	mov	esi, DWORD PTR _srp_verifier_file$1$[esp+252]
	test	esi, esi
	je	$LN341@s_server_m
; Line 2026
	push	DWORD PTR _srpuserseed$1$[esp+252]
	call	_SRP_VBASE_new
; Line 2031
	push	esi
	push	eax
	mov	DWORD PTR _srp_callback_parm+4, eax
	mov	DWORD PTR _srp_callback_parm+8, 0
	mov	DWORD PTR _srp_callback_parm, 0
	call	_SRP_VBASE_init
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	je	SHORT $LN343@s_server_m
; Line 2032
	push	ebx
	push	esi
	push	OFFSET ??_C@_0DB@MMDPDCBI@Cannot?5initialize?5SRP?5verifier?5f@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2035
	mov	ebp, DWORD PTR _cctx$1$[esp+268]
	add	esp, 16					; 00000010H
	mov	esi, DWORD PTR _crls$1$[esp+252]
	jmp	$end$895
$LN343@s_server_m:
; Line 2037
	push	OFFSET _verify_callback
	push	0
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_verify
; Line 2038
	push	OFFSET _srp_callback_parm
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_srp_cb_arg
; Line 2039
	push	OFFSET _ssl_srp_server_param_cb
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_srp_username_callback
	add	esp, 28					; 0000001cH
; Line 2040
	jmp	SHORT $LN345@s_server_m
$LN341@s_server_m:
; Line 2042
	test	ebp, ebp
	je	SHORT $LN345@s_server_m
; Line 2043
	push	ebp
	call	_SSL_load_client_CA_file
	push	eax
	push	DWORD PTR _ctx
	call	_SSL_CTX_set_client_CA_list
	add	esp, 12					; 0000000cH
; Line 2045
	cmp	DWORD PTR _ctx2, 0
	je	SHORT $LN345@s_server_m
; Line 2046
	push	ebp
	call	_SSL_load_client_CA_file
	push	eax
	push	DWORD PTR _ctx2
	call	_SSL_CTX_set_client_CA_list
	add	esp, 12					; 0000000cH
$LN345@s_server_m:
; Line 2050
	push	OFFSET ??_C@_07EJIBEDLO@ACCEPT?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2051
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_s_out
	call	_BIO_ctrl
	add	esp, 24					; 00000018H
; Line 2052
	cmp	DWORD PTR _rev$1$[esp+252], 0
; Line 2053
	push	DWORD PTR _naccept$1$[esp+252]
	push	DWORD PTR _context$1$[esp+256]
	je	SHORT $LN346@s_server_m
	push	OFFSET _rev_body
	jmp	SHORT $LN882@s_server_m
$LN346@s_server_m:
; Line 2055
	cmp	DWORD PTR _www, 0
	je	SHORT $LN348@s_server_m
; Line 2056
	push	OFFSET _www_body
	jmp	SHORT $LN882@s_server_m
$LN348@s_server_m:
; Line 2059
	push	OFFSET _sv_body
$LN882@s_server_m:
	movsx	eax, WORD PTR _port$[esp+264]
	push	OFFSET _accept_socket
	push	DWORD PTR _socket_type$1$[esp+268]
	push	eax
	call	_do_server
	add	esp, 24					; 00000018H
; Line 2061
	push	DWORD PTR _ctx
	push	DWORD PTR _bio_s_out
	call	_print_stats
; Line 2062
	mov	ebp, DWORD PTR _cctx$1$[esp+260]
	add	esp, 8
	mov	esi, DWORD PTR _crls$1$[esp+252]
	xor	ebx, ebx
	jmp	$end$895
_s_server_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _alpn_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_out$ = 12						; size = 4
_outlen$ = 16						; size = 4
_in$ = 20						; size = 4
_inlen$ = 24						; size = 4
_arg$ = 28						; size = 4
_alpn_cb PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 1048
	cmp	DWORD PTR _s_quiet, 0
	push	ebx
	mov	ebx, DWORD PTR _in$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _inlen$[esp+8]
	jne	SHORT $LN5@alpn_cb
; Line 1051
	push	OFFSET ??_C@_0CK@GJAAAGHK@ALPN?5protocols?5advertised?5by?5the@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
; Line 1052
	xor	esi, esi
	test	edi, edi
	je	SHORT $LN3@alpn_cb
	npad	3
$LL2@alpn_cb:
; Line 1053
	test	esi, esi
	je	SHORT $LN6@alpn_cb
; Line 1054
	push	2
	push	OFFSET ??_C@_02KEGNLNML@?0?5?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN6@alpn_cb:
; Line 1055
	movzx	eax, BYTE PTR [esi+ebx]
	push	eax
	lea	eax, DWORD PTR [ebx+1]
	add	eax, esi
	push	eax
	push	DWORD PTR _bio_s_out
	call	_BIO_write
; Line 1056
	movzx	eax, BYTE PTR [esi+ebx]
	add	esp, 12					; 0000000cH
	inc	esi
	add	esi, eax
	cmp	esi, edi
	jb	SHORT $LL2@alpn_cb
$LN3@alpn_cb:
; Line 1058
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN5@alpn_cb:
; Line 1063
	mov	ecx, DWORD PTR _arg$[esp+8]
	mov	esi, DWORD PTR _outlen$[esp+8]
	push	edi
	mov	edi, DWORD PTR _out$[esp+12]
	movzx	eax, WORD PTR [ecx+4]
	push	ebx
	push	eax
	push	DWORD PTR [ecx]
	push	esi
	push	edi
	call	_SSL_select_next_proto
	add	esp, 24					; 00000018H
	cmp	eax, 1
	je	SHORT $LN7@alpn_cb
; Line 1064
	pop	edi
	pop	esi
	mov	eax, 3
	pop	ebx
; Line 1074
	ret	0
$LN7@alpn_cb:
; Line 1067
	cmp	DWORD PTR _s_quiet, 0
	jne	SHORT $LN8@alpn_cb
; Line 1068
	push	OFFSET ??_C@_0BK@OKOCAJML@ALPN?5protocols?5selected?3?5?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 1069
	movzx	eax, BYTE PTR [esi]
	push	eax
	push	DWORD PTR [edi]
	push	DWORD PTR _bio_s_out
	call	_BIO_write
; Line 1070
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_write
	add	esp, 32					; 00000020H
$LN8@alpn_cb:
; Line 1073
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 1074
	ret	0
_alpn_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _next_proto_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_arg$ = 20						; size = 4
_next_proto_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 1030
	mov	edx, DWORD PTR _arg$[esp-4]
	mov	eax, DWORD PTR _data$[esp-4]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
; Line 1031
	mov	eax, DWORD PTR _len$[esp-4]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
; Line 1033
	xor	eax, eax
; Line 1034
	ret	0
_next_proto_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_servername_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ad$ = 12						; size = 4
_arg$ = 16						; size = 4
_ssl_servername_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 861
	push	esi
	push	edi
; Line 863
	push	0
	push	DWORD PTR _s$[esp+8]
	call	_SSL_get_servername
; Line 864
	mov	esi, DWORD PTR _arg$[esp+12]
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN2@ssl_server
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN2@ssl_server
; Line 865
	push	edi
	push	OFFSET ??_C@_0CB@DENLFGMB@Hostname?5in?5TLS?5extension?3?5?$CC?$CFs?$CC?6@
	push	eax
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN2@ssl_server:
; Line 868
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	jne	SHORT $LN3@ssl_server
; Line 869
	pop	edi
	mov	eax, 3
	pop	esi
; Line 880
	ret	0
$LN3@ssl_server:
; Line 871
	test	edi, edi
	je	SHORT $LN6@ssl_server
; Line 872
	push	eax
	push	edi
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@ssl_server
; Line 873
	mov	eax, DWORD PTR [esi+8]
	pop	edi
	pop	esi
; Line 880
	ret	0
$LN5@ssl_server:
; Line 874
	cmp	DWORD PTR _ctx2, 0
	je	SHORT $LN6@ssl_server
; Line 875
	push	OFFSET ??_C@_0BL@IKCLJGPN@Switching?5server?5context?4?6?$AA@
	push	DWORD PTR [esi+4]
	call	_BIO_printf
; Line 876
	push	DWORD PTR _ctx2
	push	DWORD PTR _s$[esp+16]
	call	_SSL_set_SSL_CTX
	add	esp, 16					; 00000010H
$LN6@ssl_server:
; Line 879
	pop	edi
	xor	eax, eax
	pop	esi
; Line 880
	ret	0
_ssl_servername_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_srp_server_param_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ad$ = 12						; size = 4
_arg$ = 16						; size = 4
_ssl_srp_server_param_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 430
	push	esi
; Line 434
	mov	esi, DWORD PTR _arg$[esp]
	push	edi
	mov	edi, 2
	mov	ecx, DWORD PTR [esi]
	test	ecx, ecx
	jne	SHORT $LN2@ssl_srp_se
	cmp	DWORD PTR [esi+8], ecx
	jne	SHORT $LN2@ssl_srp_se
; Line 435
	push	DWORD PTR _s$[esp+4]
	call	_SSL_get_srp_username
; Line 436
	push	eax
	mov	DWORD PTR [esi], eax
	push	OFFSET ??_C@_0BF@DJBBDCJN@SRP?5username?5?$DN?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 437
	or	eax, -1
	pop	edi
	pop	esi
; Line 461
	ret	0
$LN2@ssl_srp_se:
; Line 440
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	jne	SHORT $LN3@ssl_srp_se
; Line 441
	push	ecx
	push	OFFSET ??_C@_0BH@EHOAHANM@User?5?$CFs?5doesn?8t?5exist?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 442
	jmp	SHORT $err$7
$LN3@ssl_srp_se:
; Line 447
	push	DWORD PTR [eax+20]
	push	DWORD PTR [eax+8]
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax+12]
	push	DWORD PTR [eax+16]
	push	DWORD PTR _s$[esp+24]
	call	_SSL_set_srp_server_param
	add	esp, 24					; 00000018H
	test	eax, eax
	jns	SHORT $LN4@ssl_srp_se
; Line 448
	mov	eax, DWORD PTR _ad$[esp+4]
	mov	DWORD PTR [eax], 80			; 00000050H
; Line 449
	jmp	SHORT $err$7
$LN4@ssl_srp_se:
; Line 451
	mov	eax, DWORD PTR [esi+8]
	push	DWORD PTR [eax+20]
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_0DA@IDIINJEG@SRP?5parameters?5set?3?5username?5?$DN?5?$CC@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 454
	xor	edi, edi
$err$7:
; Line 457
	push	DWORD PTR [esi+8]
	call	_SRP_user_pwd_free
	add	esp, 4
; Line 458
	mov	DWORD PTR [esi+8], 0
; Line 460
	mov	eax, edi
	mov	DWORD PTR [esi], 0
	pop	edi
	pop	esi
; Line 461
	ret	0
_ssl_srp_server_param_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _psk_server_cb
_TEXT	SEGMENT
_bn$ = -4						; size = 4
_ssl$ = 8						; size = 4
_identity$ = 12						; size = 4
_psk$ = 16						; size = 4
_max_psk_len$ = 20					; size = 4
_psk_server_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 355
	mov	eax, 4
	call	__chkstk
	push	esi
; Line 360
	mov	esi, DWORD PTR _s_debug
	mov	DWORD PTR _bn$[esp+8], 0
	push	edi
	test	esi, esi
	je	SHORT $LN2@psk_server
; Line 361
	push	OFFSET ??_C@_0P@EGMHKAJD@psk_server_cb?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	mov	esi, DWORD PTR _s_debug
	add	esp, 8
$LN2@psk_server:
; Line 362
	mov	edi, DWORD PTR _identity$[esp+8]
	test	edi, edi
	jne	SHORT $LN3@psk_server
; Line 363
	push	OFFSET ??_C@_0CJ@GFNDBAPP@Error?3?5client?5did?5not?5send?5PSK?5i@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 364
	jmp	$out_err$20
$LN3@psk_server:
; Line 366
	test	esi, esi
	je	SHORT $LN4@psk_server
; Line 367
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL14@psk_server:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL14@psk_server
	push	edi
	sub	ecx, edx
	push	ecx
	push	OFFSET ??_C@_0BN@LDLODOD@identity_len?$DN?$CFd?5identity?$DN?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	mov	esi, DWORD PTR _s_debug
	add	esp, 16					; 00000010H
$LN4@psk_server:
; Line 371
	mov	ecx, DWORD PTR _psk_identity
	mov	eax, edi
	npad	4
$LL15@psk_server:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN16@psk_server
	test	dl, dl
	je	SHORT $LN17@psk_server
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN16@psk_server
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL15@psk_server
$LN17@psk_server:
	xor	eax, eax
	jmp	SHORT $LN18@psk_server
$LN16@psk_server:
	sbb	eax, eax
	or	eax, 1
$LN18@psk_server:
	test	eax, eax
	je	SHORT $LN5@psk_server
; Line 372
	push	DWORD PTR _psk_identity
	push	edi
	push	OFFSET ??_C@_0DP@MFHEMHOG@PSK?5error?3?5client?5identity?5not?5f@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 374
	jmp	$out_err$20
$LN5@psk_server:
; Line 376
	test	esi, esi
	je	SHORT $LN6@psk_server
; Line 377
	push	OFFSET ??_C@_0BL@JFIDPFC@PSK?5client?5identity?5found?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN6@psk_server:
; Line 380
	push	DWORD PTR _psk_key
	lea	eax, DWORD PTR _bn$[esp+16]
	push	eax
	call	_BN_hex2bn
	add	esp, 8
; Line 381
	test	eax, eax
	jne	SHORT $LN7@psk_server
; Line 382
	push	DWORD PTR _psk_key
	push	OFFSET ??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 384
	mov	eax, DWORD PTR _bn$[esp+24]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN8@psk_server
; Line 385
	push	eax
	call	_BN_free
	add	esp, 4
$LN8@psk_server:
; Line 386
	pop	edi
	xor	eax, eax
	pop	esi
; Line 410
	pop	ecx
	ret	0
$LN7@psk_server:
; Line 388
	push	DWORD PTR _bn$[esp+12]
	call	_BN_num_bits
	mov	esi, DWORD PTR _max_psk_len$[esp+12]
	add	eax, 7
	cdq
	add	esp, 4
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, esi
	jle	SHORT $LN9@psk_server
; Line 389
	push	DWORD PTR _bn$[esp+12]
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	push	eax
	push	esi
	push	OFFSET ??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 392
	push	DWORD PTR _bn$[esp+32]
	call	_BN_free
	add	esp, 24					; 00000018H
; Line 393
	xor	eax, eax
	pop	edi
	pop	esi
; Line 410
	pop	ecx
	ret	0
$LN9@psk_server:
; Line 396
	push	DWORD PTR _psk$[esp+8]
	push	DWORD PTR _bn$[esp+16]
	call	_BN_bn2bin
; Line 397
	push	DWORD PTR _bn$[esp+20]
	mov	esi, eax
	call	_BN_free
	add	esp, 12					; 0000000cH
; Line 399
	test	esi, esi
	jns	SHORT $LN10@psk_server
$out_err$20:
; Line 407
	cmp	DWORD PTR _s_debug, 0
	je	SHORT $LN12@psk_server
; Line 408
	push	OFFSET ??_C@_0BO@MCPCBAJ@Error?5in?5PSK?5server?5callback?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN12@psk_server:
; Line 409
	pop	edi
	xor	eax, eax
	pop	esi
; Line 410
	pop	ecx
	ret	0
$LN10@psk_server:
; Line 403
	cmp	DWORD PTR _s_debug, 0
	je	SHORT $LN11@psk_server
; Line 404
	push	esi
	push	OFFSET ??_C@_0BE@NPIEHMJD@fetched?5PSK?5len?$DN?$CFd?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN11@psk_server:
; Line 405
	pop	edi
	mov	eax, esi
	pop	esi
; Line 410
	pop	ecx
	ret	0
_psk_server_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cert_status_cb
_TEXT	SEGMENT
_id$1$ = -180						; size = 4
_exts$ = -176						; size = 4
_host$ = -172						; size = 4
_path$ = -168						; size = 4
_port$ = -164						; size = 4
_x$1$ = -160						; size = 4
_use_ssl$ = -156					; size = 4
_rspder$ = -152						; size = 4
_aia$1$ = -148						; size = 4
_obj$ = -144						; size = 8
_inctx$ = -136						; size = 136
_s$ = 8							; size = 4
_arg$ = 12						; size = 4
_cert_status_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 905
	mov	eax, 180				; 000000b4H
	call	__chkstk
	push	ebx
; Line 907
	mov	ebx, DWORD PTR _arg$[esp+180]
; Line 918
	xor	eax, eax
	push	ebp
	push	esi
	xor	ebp, ebp
	mov	DWORD PTR _rspder$[esp+192], 0
	xor	esi, esi
	mov	DWORD PTR _id$1$[esp+192], eax
	push	edi
	mov	edi, DWORD PTR [ebx+20]
; Line 928
	cmp	DWORD PTR [ebx+24], eax
	je	SHORT $LN5@cert_statu
; Line 929
	push	OFFSET ??_C@_0BO@EEHCEBAF@cert_status?3?5callback?5called?6?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 8
$LN5@cert_statu:
; Line 931
	push	DWORD PTR _s$[esp+192]
	call	_SSL_get_certificate
; Line 932
	push	eax
	mov	DWORD PTR _x$1$[esp+204], eax
	call	_X509_get1_ocsp
	add	esp, 8
	mov	DWORD PTR _aia$1$[esp+196], eax
; Line 933
	test	eax, eax
	je	SHORT $LN6@cert_statu
; Line 934
	lea	ecx, DWORD PTR _use_ssl$[esp+196]
	push	ecx
	lea	ecx, DWORD PTR _path$[esp+200]
	push	ecx
	lea	ecx, DWORD PTR _port$[esp+204]
	push	ecx
	lea	ecx, DWORD PTR _host$[esp+208]
	push	ecx
	push	0
	push	eax
	call	_sk_value
	add	esp, 8
	push	eax
	call	_OCSP_parse_url
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN8@cert_statu
; Line 936
	push	OFFSET ??_C@_0CC@LFHCICE@cert_status?3?5can?8t?5parse?5AIA?5URL@
	push	edi
	call	_BIO_puts
	add	esp, 8
; Line 937
	jmp	$err$35
$LN8@cert_statu:
; Line 939
	cmp	DWORD PTR [ebx+24], esi
	je	SHORT $LN7@cert_statu
; Line 940
	push	0
	push	DWORD PTR _aia$1$[esp+200]
	call	_sk_value
	push	eax
	push	OFFSET ??_C@_0BK@LBJPJFCC@cert_status?3?5AIA?5URL?3?5?$CFs?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 20					; 00000014H
; Line 942
	jmp	SHORT $LN7@cert_statu
$LN6@cert_statu:
; Line 943
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	jne	SHORT $LN10@cert_statu
; Line 944
	push	OFFSET ??_C@_0DC@KIDKKKGD@cert_status?3?5no?5AIA?5and?5no?5defau@
	push	DWORD PTR [ebx+20]
	call	_BIO_puts
	add	esp, 8
; Line 946
	mov	ebx, 3
	jmp	$LN31@cert_statu
$LN10@cert_statu:
; Line 948
	mov	DWORD PTR _host$[esp+196], eax
; Line 949
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR _path$[esp+196], eax
; Line 950
	mov	eax, DWORD PTR [ebx+8]
	mov	DWORD PTR _port$[esp+196], eax
; Line 951
	mov	eax, DWORD PTR [ebx+12]
	mov	DWORD PTR _use_ssl$[esp+196], eax
$LN7@cert_statu:
; Line 954
	push	0
	push	0
	push	DWORD PTR _s$[esp+200]
	call	_SSL_get_SSL_CTX
	push	eax
	call	_SSL_CTX_get_cert_store
	add	esp, 8
	push	eax
	lea	eax, DWORD PTR _inctx$[esp+208]
	push	eax
	call	_X509_STORE_CTX_init
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$35
; Line 959
	lea	eax, DWORD PTR _obj$[esp+196]
	push	eax
	push	DWORD PTR _x$1$[esp+200]
	call	_X509_get_issuer_name
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _inctx$[esp+204]
	push	1
	push	eax
	call	_X509_STORE_get_by_subject
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN12@cert_statu
; Line 960
	push	OFFSET ??_C@_0DB@PCOLJLN@cert_status?3?5Can?8t?5retrieve?5issu@
	push	edi
	call	_BIO_puts
; Line 961
	lea	eax, DWORD PTR _inctx$[esp+204]
	push	eax
	call	_X509_STORE_CTX_cleanup
	add	esp, 12					; 0000000cH
; Line 962
	mov	ebx, 3
	jmp	$LN31@cert_statu
$LN12@cert_statu:
; Line 964
	call	_OCSP_REQUEST_new
	mov	ebp, eax
; Line 965
	test	ebp, ebp
	je	$err$35
; Line 967
	push	DWORD PTR _obj$[esp+200]
	push	DWORD PTR _x$1$[esp+200]
	push	0
	call	_OCSP_cert_to_id
; Line 968
	push	DWORD PTR _obj$[esp+212]
	mov	DWORD PTR _id$1$[esp+212], eax
	call	_X509_free
; Line 969
	lea	eax, DWORD PTR _inctx$[esp+212]
	push	eax
	call	_X509_STORE_CTX_cleanup
; Line 970
	mov	eax, DWORD PTR _id$1$[esp+216]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$35
; Line 972
	push	eax
	push	ebp
	call	_OCSP_request_add0_id
	add	esp, 8
	test	eax, eax
	je	$err$35
; Line 976
	lea	eax, DWORD PTR _exts$[esp+196]
	mov	DWORD PTR _id$1$[esp+196], esi
	push	eax
	push	0
	push	66					; 00000042H
	push	DWORD PTR _s$[esp+204]
	call	_SSL_ctrl
; Line 977
	push	DWORD PTR _exts$[esp+212]
	xor	esi, esi
	call	_sk_num
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $LN3@cert_statu
	npad	2
$LL4@cert_statu:
; Line 978
	push	esi
	push	DWORD PTR _exts$[esp+200]
	call	_sk_value
; Line 979
	push	-1
	push	eax
	push	ebp
	call	_OCSP_REQUEST_add_ext
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN33@cert_statu
; Line 977
	push	DWORD PTR _exts$[esp+196]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@cert_statu
$LN3@cert_statu:
; Line 982
	push	DWORD PTR [ebx+16]
	push	0
	push	DWORD PTR _use_ssl$[esp+204]
	push	DWORD PTR _port$[esp+208]
	push	DWORD PTR _path$[esp+212]
	push	DWORD PTR _host$[esp+216]
	push	ebp
	push	edi
	call	_process_responder
	mov	esi, eax
	add	esp, 32					; 00000020H
; Line 984
	test	esi, esi
	jne	SHORT $LN17@cert_statu
; Line 985
	push	OFFSET ??_C@_0CH@FIBKHNJL@cert_status?3?5error?5querying?5resp@
	push	edi
	call	_BIO_puts
	add	esp, 8
; Line 986
	lea	ebx, DWORD PTR [esi+3]
	jmp	SHORT $LN31@cert_statu
$LN17@cert_statu:
; Line 988
	lea	eax, DWORD PTR _rspder$[esp+196]
	push	eax
	push	esi
	call	_i2d_OCSP_RESPONSE
	add	esp, 8
; Line 989
	test	eax, eax
	jle	SHORT $err$35
; Line 991
	push	DWORD PTR _rspder$[esp+196]
	push	eax
	push	71					; 00000047H
	push	DWORD PTR _s$[esp+204]
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
; Line 992
	cmp	DWORD PTR [ebx+24], 0
	je	SHORT $LN19@cert_statu
; Line 993
	push	OFFSET ??_C@_0CC@EKGMLEDN@cert_status?3?5ocsp?5response?5sent?3@
	push	edi
	call	_BIO_puts
; Line 994
	push	2
	push	esi
	push	edi
	call	_OCSP_RESPONSE_print
	add	esp, 20					; 00000014H
$LN19@cert_statu:
; Line 996
	xor	ebx, ebx
; Line 998
	jmp	SHORT $LN20@cert_statu
$LN33@cert_statu:
	xor	esi, esi
$err$35:
; Line 1014
	mov	ebx, 2
$LN31@cert_statu:
; Line 999
	push	edi
	call	_ERR_print_errors
	add	esp, 4
$LN20@cert_statu:
; Line 1000
	mov	edi, DWORD PTR _aia$1$[esp+196]
	test	edi, edi
	je	SHORT $LN21@cert_statu
; Line 1001
	push	DWORD PTR _host$[esp+196]
	call	_CRYPTO_free
; Line 1002
	push	DWORD PTR _path$[esp+200]
	call	_CRYPTO_free
; Line 1003
	push	DWORD PTR _port$[esp+204]
	call	_CRYPTO_free
; Line 1004
	push	edi
	call	_X509_email_free
	add	esp, 16					; 00000010H
$LN21@cert_statu:
; Line 1006
	mov	eax, DWORD PTR _id$1$[esp+196]
	test	eax, eax
	je	SHORT $LN22@cert_statu
; Line 1007
	push	eax
	call	_OCSP_CERTID_free
	add	esp, 4
$LN22@cert_statu:
; Line 1008
	test	ebp, ebp
	je	SHORT $LN23@cert_statu
; Line 1009
	push	ebp
	call	_OCSP_REQUEST_free
	add	esp, 4
$LN23@cert_statu:
; Line 1010
	test	esi, esi
	je	SHORT $LN32@cert_statu
; Line 1011
	push	esi
	call	_OCSP_RESPONSE_free
	add	esp, 4
$LN32@cert_statu:
; Line 1012
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 1016
	add	esp, 180				; 000000b4H
	ret	0
_cert_status_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _s_server_init
_TEXT	SEGMENT
_s_server_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 468
	mov	DWORD PTR _accept_socket, -1
; Line 469
	mov	DWORD PTR _s_server_verify, 0
; Line 470
	mov	DWORD PTR _s_dcert_file, 0
; Line 471
	mov	DWORD PTR _s_dkey_file, 0
; Line 472
	mov	DWORD PTR _s_dchain_file, 0
; Line 473
	mov	DWORD PTR _s_cert_file, OFFSET ??_C@_0L@GEPJCEMB@server?4pem?$AA@
; Line 474
	mov	DWORD PTR _s_key_file, 0
; Line 475
	mov	DWORD PTR _s_chain_file, 0
; Line 477
	mov	DWORD PTR _s_cert_file2, OFFSET ??_C@_0M@KGLHFLLH@server2?4pem?$AA@
; Line 478
	mov	DWORD PTR _s_key_file2, 0
; Line 479
	mov	DWORD PTR _ctx2, 0
; Line 482
	mov	DWORD PTR _s_nbio, 0
; Line 484
	mov	DWORD PTR _s_nbio_test, 0
; Line 485
	mov	DWORD PTR _ctx, 0
; Line 486
	mov	DWORD PTR _www, 0
; Line 488
	mov	DWORD PTR _bio_s_out, 0
; Line 489
	mov	DWORD PTR _s_debug, 0
; Line 490
	mov	DWORD PTR _s_msg, 0
; Line 491
	mov	DWORD PTR _s_quiet, 0
; Line 492
	mov	DWORD PTR _s_brief, 0
; Line 493
	mov	DWORD PTR _hack, 0
; Line 495
	mov	DWORD PTR _engine_id, 0
; Line 497
	ret	0
_s_server_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_dh2048
_TEXT	SEGMENT
_get_dh2048 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 263
	push	esi
; Line 266
	call	_DH_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN6@get_dh2048
; Line 268
	push	0
	push	256					; 00000100H
	push	OFFSET _dh2048_p
	call	_BN_bin2bn
; Line 269
	push	0
	push	1
	push	OFFSET _dh2048_g
	mov	DWORD PTR [esi+8], eax
	call	_BN_bin2bn
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+12], eax
; Line 270
	cmp	DWORD PTR [esi+8], 0
	je	SHORT $LN4@get_dh2048
	test	eax, eax
	je	SHORT $LN4@get_dh2048
; Line 274
	mov	eax, esi
	pop	esi
; Line 275
	ret	0
$LN4@get_dh2048:
; Line 271
	push	esi
	call	_DH_free
	add	esp, 4
$LN6@get_dh2048:
; Line 272
	xor	eax, eax
	pop	esi
; Line 275
	ret	0
_get_dh2048 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_dh_param
_TEXT	SEGMENT
_dhfile$ = 8						; size = 4
_load_dh_param PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 2731
	push	edi
; Line 2735
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	DWORD PTR _dhfile$[esp+4]
	call	_BIO_new_file
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	je	SHORT $LN5@load_dh_pa
; Line 2737
	push	esi
	push	0
	push	0
	push	0
	push	edi
	call	_PEM_read_bio_DHparams
	mov	esi, eax
$err$7:
; Line 2740
	push	edi
	call	_BIO_free
	add	esp, 20					; 00000014H
; Line 2741
	mov	eax, esi
	pop	esi
	pop	edi
; Line 2742
	ret	0
$LN5@load_dh_pa:
; Line 2741
	xor	eax, eax
	pop	edi
; Line 2742
	ret	0
_load_dh_param ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _free_sessions
_TEXT	SEGMENT
_free_sessions PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 3495
	push	esi
; Line 3497
	mov	esi, DWORD PTR _first
	test	esi, esi
	je	SHORT $LN10@free_sessi
	npad	5
$LL2@free_sessi:
; Line 3498
	push	DWORD PTR [esi]
	call	_CRYPTO_free
; Line 3499
	push	DWORD PTR [esi+8]
	call	_CRYPTO_free
; Line 3502
	push	esi
	mov	esi, DWORD PTR [esi+16]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LL2@free_sessi
$LN10@free_sessi:
; Line 3504
	mov	DWORD PTR _first, 0
	pop	esi
; Line 3505
	ret	0
_free_sessions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _init_session_cache_ctx
_TEXT	SEGMENT
_sctx$ = 8						; size = 4
_init_session_cache_ctx PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 3485
	push	esi
; Line 3486
	mov	esi, DWORD PTR _sctx$[esp]
	push	0
	push	770					; 00000302H
	push	44					; 0000002cH
	push	esi
	call	_SSL_CTX_ctrl
; Line 3489
	push	OFFSET _add_session
	push	esi
	call	_SSL_CTX_sess_set_new_cb
; Line 3490
	push	OFFSET _get_session
	push	esi
	call	_SSL_CTX_sess_set_get_cb
; Line 3491
	push	OFFSET _del_session
	push	esi
	call	_SSL_CTX_sess_set_remove_cb
	add	esp, 40					; 00000028H
	pop	esi
; Line 3492
	ret	0
_init_session_cache_ctx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _generate_session_id
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_id$ = 12						; size = 4
_id_len$ = 16						; size = 4
_generate_session_id PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 3371
	push	ebx
; Line 3372
	mov	ebx, DWORD PTR _id$[esp]
	push	ebp
	mov	ebp, DWORD PTR _id_len$[esp+4]
	push	esi
	push	edi
	xor	esi, esi
	npad	2
$LL4@generate_s:
; Line 3374
	push	DWORD PTR [ebp]
	push	ebx
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	js	SHORT $LN12@generate_s
; Line 3383
	mov	edx, DWORD PTR _session_id_prefix
	mov	ecx, edx
	lea	edi, DWORD PTR [ecx+1]
	npad	5
$LL16@generate_s:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL16@generate_s
	mov	eax, DWORD PTR [ebp]
	sub	ecx, edi
	cmp	ecx, eax
	jae	SHORT $LN9@generate_s
	mov	eax, edx
	lea	edi, DWORD PTR [eax+1]
$LL17@generate_s:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL17@generate_s
	sub	eax, edi
$LN9@generate_s:
	push	eax
	push	edx
	push	ebx
	call	_memcpy
; Line 3387
	push	DWORD PTR [ebp]
	push	ebx
	push	DWORD PTR _ssl$[esp+32]
	call	_SSL_has_matching_session_id
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN6@generate_s
	inc	esi
	cmp	esi, 10					; 0000000aH
	jb	SHORT $LL4@generate_s
$LN12@generate_s:
	pop	edi
	pop	esi
	pop	ebp
; Line 3375
	xor	eax, eax
	pop	ebx
; Line 3392
	ret	0
$LN6@generate_s:
; Line 3389
	cmp	esi, 10					; 0000000aH
	jae	SHORT $LN12@generate_s
; Line 3391
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 3392
	ret	0
_generate_session_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_stats
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_ssl_ctx$ = 12						; size = 4
_print_stats PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 2131
	push	esi
	push	edi
; Line 2132
	mov	edi, DWORD PTR _ssl_ctx$[esp+4]
	push	0
	push	0
	push	20					; 00000014H
	push	edi
	call	_SSL_CTX_ctrl
	mov	esi, DWORD PTR _bio$[esp+20]
	push	eax
	push	OFFSET ??_C@_0CB@MPAOKBBN@?$CF4ld?5items?5in?5the?5session?5cache?6@
	push	esi
	call	_BIO_printf
; Line 2134
	push	0
	push	0
	push	21					; 00000015H
	push	edi
	call	_SSL_CTX_ctrl
	push	eax
	push	OFFSET ??_C@_0CG@HNDGAFHM@?$CF4ld?5client?5connects?5?$CISSL_connec@
	push	esi
	call	_BIO_printf
; Line 2136
	push	0
	push	0
	push	23					; 00000017H
	push	edi
	call	_SSL_CTX_ctrl
	add	esp, 72					; 00000048H
	push	eax
	push	OFFSET ??_C@_0CK@PBJGIJFK@?$CF4ld?5client?5renegotiates?5?$CISSL_co@
	push	esi
	call	_BIO_printf
; Line 2138
	push	0
	push	0
	push	22					; 00000016H
	push	edi
	call	_SSL_CTX_ctrl
	push	eax
	push	OFFSET ??_C@_0CE@FNOOBLAE@?$CF4ld?5client?5connects?5that?5finish@
	push	esi
	call	_BIO_printf
; Line 2140
	push	0
	push	0
	push	24					; 00000018H
	push	edi
	call	_SSL_CTX_ctrl
	push	eax
	push	OFFSET ??_C@_0CE@EMOLPMJC@?$CF4ld?5server?5accepts?5?$CISSL_accept?$CI@
	push	esi
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 2142
	push	0
	push	0
	push	26					; 0000001aH
	push	edi
	call	_SSL_CTX_ctrl
	push	eax
	push	OFFSET ??_C@_0CJ@EBEGKNDG@?$CF4ld?5server?5renegotiates?5?$CISSL_ac@
	push	esi
	call	_BIO_printf
; Line 2144
	push	0
	push	0
	push	25					; 00000019H
	push	edi
	call	_SSL_CTX_ctrl
	push	eax
	push	OFFSET ??_C@_0CD@PCCHKGGG@?$CF4ld?5server?5accepts?5that?5finishe@
	push	esi
	call	_BIO_printf
; Line 2146
	push	0
	push	0
	push	27					; 0000001bH
	push	edi
	call	_SSL_CTX_ctrl
	add	esp, 72					; 00000048H
	push	eax
	push	OFFSET ??_C@_0BJ@MFDDKOJN@?$CF4ld?5session?5cache?5hits?6?$AA@
	push	esi
	call	_BIO_printf
; Line 2147
	push	0
	push	0
	push	29					; 0000001dH
	push	edi
	call	_SSL_CTX_ctrl
	push	eax
	push	OFFSET ??_C@_0BL@GPHJFIIB@?$CF4ld?5session?5cache?5misses?6?$AA@
	push	esi
	call	_BIO_printf
; Line 2149
	push	0
	push	0
	push	30					; 0000001eH
	push	edi
	call	_SSL_CTX_ctrl
	push	eax
	push	OFFSET ??_C@_0BN@PIMPAAJA@?$CF4ld?5session?5cache?5timeouts?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 2151
	push	0
	push	0
	push	28					; 0000001cH
	push	edi
	call	_SSL_CTX_ctrl
	push	eax
	push	OFFSET ??_C@_0BK@KAOGBOIB@?$CF4ld?5callback?5cache?5hits?6?$AA@
	push	esi
	call	_BIO_printf
; Line 2153
	push	0
	push	0
	push	43					; 0000002bH
	push	edi
	call	_SSL_CTX_ctrl
	add	esp, 44					; 0000002cH
	push	eax
	push	0
	push	0
	push	31					; 0000001fH
	push	edi
	call	_SSL_CTX_ctrl
	add	esp, 16					; 00000010H
	push	eax
	push	OFFSET ??_C@_0CJ@MHPDJLOH@?$CF4ld?5cache?5full?5overflows?5?$CI?$CFld?5a@
	push	esi
	call	_BIO_printf
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
; Line 2156
	ret	0
_print_stats ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _init_ssl_connection
_TEXT	SEGMENT
_next_proto_neg$ = -524					; size = 4
_next_proto_neg_len$ = -520				; size = 4
_buf$ = -516						; size = 512
__$ArrayPad$ = -4					; size = 4
_con$ = 8						; size = 4
_init_ssl_connection PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 2586
	mov	eax, 524				; 0000020cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+524], eax
	push	esi
	push	edi
	mov	edi, DWORD PTR _con$[esp+528]
; Line 2601
	push	edi
	call	_SSL_accept
	mov	esi, eax
	add	esp, 4
; Line 2613
	test	esi, esi
	jg	$LN9@init_ssl_c
$LL2@init_ssl_c:
	push	esi
	push	edi
	call	_SSL_get_error
	add	esp, 8
	cmp	eax, 4
	jne	$LN3@init_ssl_c
; Line 2614
	push	DWORD PTR _srp_callback_parm
	push	OFFSET ??_C@_0BJ@KLIEJNND@LOOKUP?5during?5accept?5?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2616
	push	DWORD PTR _srp_callback_parm+8
	call	_SRP_user_pwd_free
; Line 2617
	push	DWORD PTR _srp_callback_parm
	push	DWORD PTR _srp_callback_parm+4
	call	_SRP_VBASE_get1_by_user
	add	esp, 24					; 00000018H
	mov	DWORD PTR _srp_callback_parm+8, eax
; Line 2620
	test	eax, eax
	je	SHORT $LN7@init_ssl_c
; Line 2621
	push	DWORD PTR [eax+20]
	push	OFFSET ??_C@_0BA@KLLIDCPK@LOOKUP?5done?5?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN8@init_ssl_c
$LN7@init_ssl_c:
; Line 2624
	push	OFFSET ??_C@_0BH@OEMJAMH@LOOKUP?5not?5successful?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN8@init_ssl_c:
; Line 2625
	push	edi
	call	_SSL_accept
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jle	$LL2@init_ssl_c
$LN9@init_ssl_c:
; Line 2646
	cmp	DWORD PTR _s_brief, 0
	je	SHORT $LN12@init_ssl_c
; Line 2647
	push	edi
	push	DWORD PTR _bio_err
	call	_print_ssl_summary
	add	esp, 8
$LN12@init_ssl_c:
; Line 2649
	push	edi
	call	_SSL_get_session
	push	eax
	push	DWORD PTR _bio_s_out
	call	_PEM_write_bio_SSL_SESSION
; Line 2651
	push	edi
	call	_SSL_get_peer_certificate
	mov	esi, eax
	add	esp, 16					; 00000010H
; Line 2652
	test	esi, esi
	je	$LN13@init_ssl_c
; Line 2653
	push	OFFSET ??_C@_0BE@PJOINFNP@Client?5certificate?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2654
	push	esi
	push	DWORD PTR _bio_s_out
	call	_PEM_write_bio_X509
	add	esp, 16					; 00000010H
; Line 2655
	lea	eax, DWORD PTR _buf$[esp+532]
	push	512					; 00000200H
	push	eax
	push	esi
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
; Line 2656
	lea	eax, DWORD PTR _buf$[esp+544]
	push	eax
	push	OFFSET ??_C@_0M@JEDHOBJK@subject?$DN?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 2657
	lea	eax, DWORD PTR _buf$[esp+532]
	push	512					; 00000200H
	push	eax
	push	esi
	call	_X509_get_issuer_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
; Line 2658
	lea	eax, DWORD PTR _buf$[esp+544]
	push	eax
	push	OFFSET ??_C@_0L@HCGAGKOB@issuer?$DN?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2659
	push	esi
	call	_X509_free
	add	esp, 28					; 0000001cH
$LN13@init_ssl_c:
; Line 2662
	push	512					; 00000200H
	lea	eax, DWORD PTR _buf$[esp+536]
	push	eax
	push	edi
	call	_SSL_get_shared_ciphers
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN14@init_ssl_c
; Line 2663
	lea	eax, DWORD PTR _buf$[esp+532]
	push	eax
	push	OFFSET ??_C@_0BD@IIKNKKE@Shared?5ciphers?3?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN14@init_ssl_c:
; Line 2664
	push	edi
	call	_SSL_get_current_cipher
	push	eax
	call	_SSL_CIPHER_get_name
; Line 2665
	push	edi
	push	DWORD PTR _bio_s_out
	mov	esi, eax
	call	_ssl_print_sigalgs
; Line 2667
	push	edi
	push	DWORD PTR _bio_s_out
	call	_ssl_print_point_formats
; Line 2668
	push	0
	push	edi
	push	DWORD PTR _bio_s_out
	call	_ssl_print_curves
; Line 2670
	test	esi, esi
	mov	eax, OFFSET ??_C@_06DIOMAMDA@?$CINONE?$CJ?$AA@
	cmovne	eax, esi
	push	eax
	push	OFFSET ??_C@_0O@MNNIJCGH@CIPHER?5is?5?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2673
	lea	eax, DWORD PTR _next_proto_neg_len$[esp+580]
	push	eax
	lea	eax, DWORD PTR _next_proto_neg$[esp+584]
	push	eax
	push	edi
	call	_SSL_get0_next_proto_negotiated
	add	esp, 60					; 0000003cH
; Line 2674
	cmp	DWORD PTR _next_proto_neg$[esp+532], 0
	je	SHORT $LN15@init_ssl_c
; Line 2675
	push	OFFSET ??_C@_0O@IOJBKLGH@NEXTPROTO?5is?5?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2676
	push	DWORD PTR _next_proto_neg_len$[esp+540]
	push	DWORD PTR _next_proto_neg$[esp+544]
	push	DWORD PTR _bio_s_out
	call	_BIO_write
; Line 2677
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 28					; 0000001cH
$LN15@init_ssl_c:
; Line 2682
	push	edi
	call	_SSL_get_selected_srtp_profile
	add	esp, 4
; Line 2685
	test	eax, eax
	je	SHORT $LN16@init_ssl_c
; Line 2686
	push	DWORD PTR [eax]
	push	OFFSET ??_C@_0CH@FCLNMFKH@SRTP?5Extension?5negotiated?0?5profi@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN16@init_ssl_c:
; Line 2690
	push	edi
	call	_SSL_cache_hit
	add	esp, 4
	test	eax, eax
	je	SHORT $LN17@init_ssl_c
; Line 2691
	push	OFFSET ??_C@_0BD@NBNHECEG@Reused?5session?9id?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN17@init_ssl_c:
; Line 2692
	push	0
	push	0
	push	13					; 0000000dH
	push	edi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
	test	al, 8
	je	SHORT $LN18@init_ssl_c
; Line 2694
	push	OFFSET ??_C@_0CI@FJEPEBJM@Peer?5has?5incorrect?5TLSv1?5block?5p@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN18@init_ssl_c:
; Line 2702
	push	0
	push	0
	push	76					; 0000004cH
	push	edi
	call	_SSL_ctrl
	test	eax, eax
	mov	edx, OFFSET ??_C@_04CGMGFKEF@?5NOT?$AA@
	mov	ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	cmove	ecx, edx
	push	ecx
	push	OFFSET ??_C@_0CF@HNLNDOIK@Secure?5Renegotiation?5IS?$CFs?5suppor@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 28					; 0000001cH
; Line 2704
	cmp	DWORD PTR _keymatexportlabel, 0
	je	$LN20@init_ssl_c
; Line 2705
	push	ebx
	push	OFFSET ??_C@_0BL@LPMKCGAM@Keying?5material?5exporter?3?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2706
	push	DWORD PTR _keymatexportlabel
	push	OFFSET ??_C@_0BB@CNJDMPIH@?5?5?5?5Label?3?5?8?$CFs?8?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2707
	push	DWORD PTR _keymatexportlen
	push	OFFSET ??_C@_0BG@HGLPNLLM@?5?5?5?5Length?3?5?$CFi?5bytes?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2708
	push	2708					; 00000a94H
	push	OFFSET ??_C@_0BC@HCEECIGJ@?4?2apps?2s_server?4c?$AA@
	push	DWORD PTR _keymatexportlen
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 44					; 0000002cH
; Line 2709
	test	ebx, ebx
	je	$LN33@init_ssl_c
; Line 2710
	mov	edx, DWORD PTR _keymatexportlabel
	mov	ecx, edx
	lea	esi, DWORD PTR [ecx+1]
$LL32@init_ssl_c:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL32@init_ssl_c
	push	0
	push	0
	push	0
	sub	ecx, esi
	push	ecx
	push	edx
	push	DWORD PTR _keymatexportlen
	push	ebx
	push	edi
	call	_SSL_export_keying_material
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	$LN21@init_ssl_c
; Line 2715
	push	OFFSET ??_C@_0L@DLCKNELL@?5?5?5?5Error?6?$AA@
; Line 2716
	jmp	$LN34@init_ssl_c
$LN3@init_ssl_c:
; Line 2629
	test	esi, esi
	jg	$LN9@init_ssl_c
; Line 2630
	push	esi
	call	_BIO_sock_should_retry
	add	esp, 4
	test	eax, eax
	je	SHORT $LN10@init_ssl_c
; Line 2631
	push	OFFSET ??_C@_06KKGLJNJB@DELAY?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
; Line 2632
	jmp	$LN20@init_ssl_c
$LN10@init_ssl_c:
; Line 2635
	push	OFFSET ??_C@_06CBJFBFDH@ERROR?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2636
	push	edi
	call	_SSL_get_verify_result
	add	esp, 12					; 0000000cH
; Line 2637
	test	eax, eax
	je	SHORT $LN11@init_ssl_c
; Line 2638
	push	eax
	call	_X509_verify_cert_error_string
	push	eax
	push	OFFSET ??_C@_0BB@EHGPOOCJ@verify?5error?3?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN11@init_ssl_c:
; Line 2642
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 2643
	xor	eax, eax
	pop	edi
	pop	esi
; Line 2727
	mov	ecx, DWORD PTR __$ArrayPad$[esp+524]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	ret	0
$LN21@init_ssl_c:
; Line 2717
	push	OFFSET ??_C@_0BG@DLJBAMO@?5?5?5?5Keying?5material?3?5?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2718
	xor	esi, esi
	add	esp, 8
	cmp	DWORD PTR _keymatexportlen, esi
	jle	SHORT $LN5@init_ssl_c
	npad	2
$LL6@init_ssl_c:
; Line 2719
	movzx	eax, BYTE PTR [ebx+esi]
	push	eax
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	inc	esi
	add	esp, 12					; 0000000cH
	cmp	esi, DWORD PTR _keymatexportlen
	jl	SHORT $LL6@init_ssl_c
$LN5@init_ssl_c:
; Line 2720
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
$LN34@init_ssl_c:
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
; Line 2722
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
$LN33@init_ssl_c:
	pop	ebx
$LN20@init_ssl_c:
; Line 2727
	mov	ecx, DWORD PTR __$ArrayPad$[esp+532]
	mov	eax, 1
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	ret	0
_init_ssl_connection ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sv_usage
_TEXT	SEGMENT
_sv_usage PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 502
	push	OFFSET ??_C@_0BM@EFKLHHDL@usage?3?5s_server?5?$FLargs?5?4?4?4?$FN?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 503
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 504
	push	4433					; 00001151H
	push	OFFSET ??_C@_0DE@CDLIKOHM@?5?9accept?5arg?5?5?5?9?5port?5to?5accept?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 506
	push	OFFSET ??_C@_0EA@PAPKIBFG@?5?9verify_hostname?5host?5?9?5check?5p@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 508
	push	OFFSET ??_C@_0DP@DJCBKCN@?5?9verify_email?5email?5?9?5check?5pee@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 510
	push	OFFSET ??_C@_0DO@GNFHPCIL@?5?9verify_ip?5ipaddr?5?9?5check?5peer?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 512
	push	OFFSET ??_C@_0CJ@GMMJKDHE@?5?9context?5arg?5?5?9?5set?5session?5ID?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 513
	push	OFFSET ??_C@_0DI@EHAJMJGI@?5?9verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 515
	push	OFFSET ??_C@_0EL@EMDCAGKF@?5?9Verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 517
	push	OFFSET ??_C@_0DE@GOBPIMCB@?5?9verify_return_error?5?9?5return?5v@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 519
	push	OFFSET ??_C@_0CK@KDBCENND@?5?9cert?5arg?5?5?5?5?5?9?5certificate?5fil@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 520
	push	OFFSET ??_C@_0L@GEPJCEMB@server?4pem?$AA@
	push	OFFSET ??_C@_0CC@GANAEPBK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CIdefault?5is?5?$CFs?$CJ@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 522
	push	OFFSET ??_C@_0DI@EDDMMMHG@?5?9serverinfo?5arg?5?9?5PEM?5serverinf@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 524
	push	OFFSET ??_C@_0FM@DFNGBAIE@?5?9auth?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5send?5and?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 526
	push	OFFSET ??_C@_0EM@KLDCHMKH@?5?9auth_require_reneg?5?9?5Do?5not?5se@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 529
	push	OFFSET ??_C@_0FD@DCIIMPCM@?5?9no_resumption_on_reneg?5?9?5set?5S@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 531
	push	OFFSET ??_C@_0IO@PAKPLPCJ@?5?9crl_check?5?5?5?5?9?5check?5the?5peer?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 534
	push	OFFSET ??_C@_0MB@HBNHEKMC@?5?9crl_check_all?5?9?5check?5the?5peer@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 538
	push	OFFSET ??_C@_0DO@ILODNPNH@?5?9certform?5arg?5?9?5certificate?5for@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 540
	push	OFFSET ??_C@_0DL@LCPKKIAF@?5?9key?5arg?5?5?5?5?5?5?9?5Private?5Key?5fil@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 542
	push	OFFSET ??_C@_0L@GEPJCEMB@server?4pem?$AA@
	push	OFFSET ??_C@_0DA@DKGPEDCO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5not?5specified?5?$CI@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 544
	push	OFFSET ??_C@_0DO@FPHKBDMN@?5?9keyform?5arg?5?5?9?5key?5format?5?$CIPEM@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 546
	push	OFFSET ??_C@_0DG@BFMFFOFA@?5?9pass?5arg?5?5?5?5?5?9?5private?5key?5fil@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 548
	push	OFFSET ??_C@_0ED@EPNBHDKA@?5?9dcert?5arg?5?5?5?5?9?5second?5certific@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 550
	push	OFFSET ??_C@_0EF@PPLJKHJC@?5?9dcertform?5x?5?5?9?5second?5certific@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 552
	push	OFFSET ??_C@_0ED@JFBFPBFK@?5?9dkey?5arg?5?5?5?5?5?9?5second?5private?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 554
	push	OFFSET ??_C@_0EF@NPPBEAHP@?5?9dkeyform?5arg?5?9?5second?5key?5form@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 556
	push	OFFSET ??_C@_0DN@JKCGHIGO@?5?9dpass?5arg?5?5?5?5?9?5second?5private?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 558
	push	OFFSET ??_C@_0EK@KKOMNAMH@?5?9dhparam?5arg?5?5?9?5DH?5parameter?5fi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 560
	push	OFFSET ??_C@_0DJ@CPBNPMMP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5or?5a?5default?5se@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 563
	push	OFFSET ??_C@_0LE@HMGNCDPA@?5?9named_curve?5arg?5?5?9?5Elliptic?5cu@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 569
	push	OFFSET ??_C@_0CL@DKKNEEF@?5?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9bl@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 571
	push	OFFSET ??_C@_0DG@BIAPMNCG@?5?9nbio_test?5?5?5?5?9?5test?5with?5the?5n@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 573
	push	OFFSET ??_C@_0DF@NJANHEED@?5?9crlf?5?5?5?5?5?5?5?5?5?9?5convert?5LF?5from@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 575
	push	OFFSET ??_C@_0CE@KMFKDDAD@?5?9debug?5?5?5?5?5?5?5?5?9?5Print?5more?5outp@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 576
	push	OFFSET ??_C@_0CJ@PGHHBNJL@?5?9msg?5?5?5?5?5?5?5?5?5?5?9?5Show?5protocol?5m@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 577
	push	OFFSET ??_C@_0CH@MJMFOODH@?5?9state?5?5?5?5?5?5?5?5?9?5Print?5the?5SSL?5s@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 578
	push	OFFSET ??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 579
	push	OFFSET ??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 580
	push	OFFSET ??_C@_0ED@DIMIHAHA@?5?9no_alt_chains?5?9?5only?5ever?5use?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 582
	push	OFFSET ??_C@_0DH@OCGPNBII@?5?9nocert?5?5?5?5?5?5?5?9?5Don?8t?5use?5any?5c@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 584
	push	OFFSET ??_C@_0EE@LKODDGDH@?5?9cipher?5arg?5?5?5?9?5play?5with?5?8open@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 586
	push	OFFSET ??_C@_0DC@EAODFDCE@?5?9serverpref?5?5?5?9?5Use?5server?8s?5ci@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 587
	push	OFFSET ??_C@_0CD@HCKCHAJP@?5?9quiet?5?5?5?5?5?5?5?5?9?5No?5server?5outpu@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 588
	push	OFFSET ??_C@_0DA@ONPEIANK@?5?9no_tmp_rsa?5?5?5?9?5Do?5not?5generate@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 590
	push	OFFSET ??_C@_0CL@HHGBLNKK@?5?9psk_hint?5arg?5?9?5PSK?5identity?5hi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 591
	push	OFFSET ??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 597
	push	OFFSET ??_C@_0DC@GEBNJGIF@?5?9srpvfile?5file?5?5?5?5?5?5?9?5The?5verif@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 598
	push	OFFSET ??_C@_0DP@BGCKAGPH@?5?9srpuserseed?5string?5?9?5A?5seed?5st@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 601
	push	OFFSET ??_C@_0CC@IFKIHPCF@?5?9ssl2?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5SSLv2@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 603
	push	OFFSET ??_C@_0CC@OHGNMMDG@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5SSLv3@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 605
	push	OFFSET ??_C@_0CE@BGDPIMBG@?5?9tls1_2?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 606
	push	OFFSET ??_C@_0CE@LBHBFJCD@?5?9tls1_1?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 607
	push	OFFSET ??_C@_0CC@DKKOMIC@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5Just?5talk?5TLSv1@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 608
	push	OFFSET ??_C@_0CD@BHDDFFPP@?5?9dtls1?5?5?5?5?5?5?5?5?9?5Just?5talk?5DTLSv@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 609
	push	OFFSET ??_C@_0CF@DOBDJEBM@?5?9dtls1_2?5?5?5?5?5?5?9?5Just?5talk?5DTLSv@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 610
	push	OFFSET ??_C@_0CC@JMMJAEFK@?5?9timeout?5?5?5?5?5?5?9?5Enable?5timeouts@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 611
	push	OFFSET ??_C@_0CF@BDGDGBPN@?5?9mtu?5?5?5?5?5?5?5?5?5?5?9?5Set?5link?5layer?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 612
	push	OFFSET ??_C@_0CL@FPJLPAPI@?5?9chain?5?5?5?5?5?5?5?5?9?5Read?5a?5certific@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 613
	push	OFFSET ??_C@_0CF@BAHAENBC@?5?9no_ssl2?5?5?5?5?5?5?9?5Just?5disable?5SS@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 614
	push	OFFSET ??_C@_0CF@HCLFPOAB@?5?9no_ssl3?5?5?5?5?5?5?9?5Just?5disable?5SS@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 615
	push	OFFSET ??_C@_0CF@JGHCNOLF@?5?9no_tls1?5?5?5?5?5?5?9?5Just?5disable?5TL@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 616
	push	OFFSET ??_C@_0CH@OJKBDNEP@?5?9no_tls1_1?5?5?5?5?9?5Just?5disable?5TL@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 617
	push	OFFSET ??_C@_0CH@EOOPOIHK@?5?9no_tls1_2?5?5?5?5?9?5Just?5disable?5TL@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 619
	push	OFFSET ??_C@_0CH@HKBECHLI@?5?9no_dhe?5?5?5?5?5?5?5?9?5Disable?5ephemer@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 622
	push	OFFSET ??_C@_0CJ@HCENCPIP@?5?9no_ecdhe?5?5?5?5?5?9?5Disable?5ephemer@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 624
	push	OFFSET ??_C@_0DA@BLOMEAPO@?5?9bugs?5?5?5?5?5?5?5?5?5?9?5Turn?5on?5SSL?5bug@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 625
	push	OFFSET ??_C@_0DF@OGLMLECP@?5?9hack?5?5?5?5?5?5?5?5?5?9?5workaround?5for?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 627
	push	OFFSET ??_C@_0DK@NKPBDN@?5?9www?5?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 629
	push	OFFSET ??_C@_0EJ@PGEHLKHG@?5?9WWW?5?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 631
	push	OFFSET ??_C@_0EJ@KMLFICKC@?5?9HTTP?5?5?5?5?5?5?5?5?5?9?5Respond?5to?5a?5?8G@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 633
	push	OFFSET ??_C@_0EM@CKNPNAOB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5with?5the?5assump@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 636
	push	OFFSET ??_C@_0DK@KOEJDDIL@?5?9engine?5id?5?5?5?5?9?5Initialise?5and?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 639
	push	OFFSET ??_C@_0EC@MPACHOMG@?5?9id_prefix?5arg?5?9?5Generate?5SSL?1T@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 641
	push	59					; 0000003bH
	push	59					; 0000003bH
	push	OFFSET ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 644
	push	OFFSET ??_C@_0DL@IMLAMCFN@?5?9servername?5host?5?9?5servername?5f@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 646
	push	OFFSET ??_C@_0EL@DKEOAMCM@?5?9servername_fatal?5?9?5on?5mismatch@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 648
	push	OFFSET ??_C@_0DJ@HMGHLPEB@?5?9cert2?5arg?5?5?5?5?9?5certificate?5fil@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 650
	push	OFFSET ??_C@_0M@KGLHFLLH@server2?4pem?$AA@
	push	OFFSET ??_C@_0CC@GANAEPBK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$CIdefault?5is?5?$CFs?$CJ@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 651
	push	OFFSET ??_C@_0EK@DPIIKBKN@?5?9key2?5arg?5?5?5?5?5?9?5Private?5Key?5fil@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 653
	push	OFFSET ??_C@_0M@KGLHFLLH@server2?4pem?$AA@
	push	OFFSET ??_C@_0DA@DKGPEDCO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5not?5specified?5?$CI@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 655
	push	OFFSET ??_C@_0DK@DLFEFHDC@?5?9tlsextdebug?5?5?9?5hex?5dump?5of?5all@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 657
	push	OFFSET ??_C@_0DM@HKKMFIPG@?5?9no_ticket?5?5?5?5?9?5disable?5use?5of?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 659
	push	OFFSET ??_C@_0EJ@DKJMGLID@?5?9legacy_renegotiation?5?9?5enable?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 661
	push	OFFSET ??_C@_0EN@BHNFHAEP@?5?9sigalgs?5arg?5?5?5?5?5?5?9?5Signature?5a@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 663
	push	OFFSET ??_C@_0EF@KIDJIJJG@?5?9client_sigalgs?5arg?5?5?9?5Signatur@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 665
	push	OFFSET ??_C@_0EL@OPGHAICC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5certific@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 668
	push	OFFSET ??_C@_0GA@JODOAIDK@?5?9nextprotoneg?5arg?5?9?5set?5the?5adv@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 672
	push	OFFSET ??_C@_0FF@IDLIJFPH@?5?9use_srtp?5profiles?5?9?5Offer?5SRTP@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 675
	push	OFFSET ??_C@_0FK@FHOGGFAL@?5?9alpn?5arg?5?5?9?5set?5the?5advertised@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 678
	push	OFFSET ??_C@_0DN@MIJBJIJH@?5?9keymatexport?5label?5?5?5?9?5Export?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 680
	push	OFFSET ??_C@_0EL@MBBJFPLO@?5?9keymatexportlen?5len?5?5?9?5Export?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 682
	push	OFFSET ??_C@_0DN@PIJAPNDO@?5?9status?5?5?5?5?5?5?5?5?5?5?5?9?5respond?5to?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 684
	push	OFFSET ??_C@_0DN@ENJFNIAB@?5?9status_verbose?5?5?5?9?5enable?5stat@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 686
	push	OFFSET ??_C@_0DH@GELNADKB@?5?9status_timeout?5n?5?9?5status?5requ@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 688
	push	OFFSET ??_C@_0DC@BCBIFLHN@?5?9status_url?5URL?5?5?5?9?5status?5requ@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 689
	ret	0
_sv_usage ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _close_accept_socket
_TEXT	SEGMENT
_close_accept_socket PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 2579
	push	OFFSET ??_C@_0BI@GLICEMCM@shutdown?5accept?5socket?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2580
	mov	eax, DWORD PTR _accept_socket
	add	esp, 8
	test	eax, eax
	js	SHORT $LN2@close_acce
; Line 2581
	push	2
	push	eax
	call	DWORD PTR __imp__shutdown@8
	push	DWORD PTR _accept_socket
	call	DWORD PTR __imp__closesocket@4
$LN2@close_acce:
; Line 2583
	ret	0
_close_accept_socket ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rev_body
_TEXT	SEGMENT
_con$1$ = -4						; size = 4
_hostname$ = 8						; size = 4
_s$ = 12						; size = 4
_stype$ = 16						; size = 4
_context$ = 20						; size = 4
_rev_body PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 3173
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 3183
	push	3183					; 00000c6fH
	push	OFFSET ??_C@_0BC@HCEECIGJ@?4?2apps?2s_server?4c?$AA@
	push	DWORD PTR _bufsize
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 3184
	test	ebx, ebx
	jne	SHORT $LN13@rev_body
	pop	ebx
; Line 3336
	pop	ecx
	ret	0
$LN13@rev_body:
	push	esi
	push	edi
; Line 3186
	call	_BIO_f_buffer
	push	eax
	call	_BIO_new
	mov	esi, eax
; Line 3187
	call	_BIO_f_ssl
	push	eax
	call	_BIO_new
	add	esp, 8
	mov	edi, eax
; Line 3188
	test	esi, esi
	je	$err$69
	test	edi, edi
	je	$err$69
; Line 3192
	push	1
	push	DWORD PTR _bufsize
	push	117					; 00000075H
	push	esi
	call	_BIO_int_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$69
; Line 3195
	push	ebp
	push	DWORD PTR _ctx
	call	_SSL_new
	mov	ebp, eax
	add	esp, 4
	mov	DWORD PTR _con$1$[esp+20], ebp
	test	ebp, ebp
	je	$LN66@rev_body
; Line 3198
	cmp	DWORD PTR _s_tlsextdebug, 0
	je	SHORT $LN18@rev_body
; Line 3199
	push	OFFSET _tlsext_cb
	push	56					; 00000038H
	push	ebp
	call	_SSL_callback_ctrl
; Line 3200
	push	DWORD PTR _bio_s_out
	push	0
	push	57					; 00000039H
	push	ebp
	call	_SSL_ctrl
	add	esp, 28					; 0000001cH
$LN18@rev_body:
; Line 3209
	mov	edx, DWORD PTR _context$[esp+16]
	test	edx, edx
	je	SHORT $LN19@rev_body
; Line 3210
	mov	ecx, edx
	lea	ebp, DWORD PTR [ecx+1]
	npad	7
$LL65@rev_body:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL65@rev_body
	sub	ecx, ebp
	mov	ebp, DWORD PTR _con$1$[esp+20]
	push	ecx
	push	edx
	push	ebp
	call	_SSL_set_session_id_context
	add	esp, 12					; 0000000cH
$LN19@rev_body:
; Line 3212
	push	0
	push	DWORD PTR _s$[esp+20]
	call	_BIO_new_socket
; Line 3213
	push	eax
	push	eax
	push	ebp
	call	_SSL_set_bio
; Line 3214
	push	ebp
	call	_SSL_set_accept_state
; Line 3216
	push	ebp
	push	1
	push	109					; 0000006dH
	push	edi
	call	_BIO_ctrl
; Line 3217
	push	edi
	push	esi
	call	_BIO_push
	add	esp, 48					; 00000030H
; Line 3222
	cmp	DWORD PTR _s_debug, 0
	je	SHORT $LN20@rev_body
; Line 3223
	push	1
	push	ebp
	call	_SSL_set_debug
	add	esp, 8
; Line 3224
	push	OFFSET _bio_dump_callback
	push	ebp
	call	_SSL_get_rbio
	add	esp, 4
	push	eax
	call	_BIO_set_callback
	add	esp, 8
; Line 3225
	push	DWORD PTR _bio_s_out
	push	ebp
	call	_SSL_get_rbio
	add	esp, 4
	push	eax
	call	_BIO_set_callback_arg
	add	esp, 8
$LN20@rev_body:
; Line 3227
	cmp	DWORD PTR _s_msg, 0
	je	SHORT $LN21@rev_body
; Line 3233
	push	OFFSET _msg_cb
	push	ebp
	call	_SSL_set_msg_callback
; Line 3234
	mov	eax, DWORD PTR _bio_s_msg
	test	eax, eax
	mov	ecx, DWORD PTR _bio_s_out
	cmovne	ecx, eax
	push	ecx
	push	0
	push	16					; 00000010H
	push	ebp
	call	_SSL_ctrl
	add	esp, 24					; 00000018H
$LN21@rev_body:
; Line 3238
	push	0
	push	0
	push	101					; 00000065H
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 3239
	test	eax, eax
	jg	$LN49@rev_body
$LL2@rev_body:
; Line 3241
	push	8
	push	esi
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	$LN50@rev_body
; Line 3248
	push	4
	push	esi
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	SHORT $LN26@rev_body
	push	esi
	call	_BIO_get_retry_reason
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN26@rev_body
; Line 3249
	push	OFFSET ??_C@_0BN@FHEJJEJ@LOOKUP?5renego?5during?5accept?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 3250
	push	DWORD PTR _srp_callback_parm+8
	call	_SRP_user_pwd_free
; Line 3251
	push	DWORD PTR _srp_callback_parm
	push	DWORD PTR _srp_callback_parm+4
	call	_SRP_VBASE_get1_by_user
	add	esp, 20					; 00000014H
	mov	DWORD PTR _srp_callback_parm+8, eax
; Line 3254
	test	eax, eax
	je	SHORT $LN25@rev_body
; Line 3255
	push	DWORD PTR [eax+20]
	push	OFFSET ??_C@_0BA@KLLIDCPK@LOOKUP?5done?5?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN26@rev_body
$LN25@rev_body:
; Line 3258
	push	OFFSET ??_C@_0BH@OEMJAMH@LOOKUP?5not?5successful?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN26@rev_body:
; Line 3238
	push	0
	push	0
	push	101					; 00000065H
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 3239
	test	eax, eax
	jle	$LL2@rev_body
$LN49@rev_body:
; Line 3263
	push	OFFSET ??_C@_0BI@KAHEJIIO@CONNECTION?5ESTABLISHED?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 3264
	push	ebp
	push	DWORD PTR _bio_err
	call	_print_ssl_summary
	add	esp, 16					; 00000010H
	npad	5
$LL5@rev_body:
; Line 3267
	mov	eax, DWORD PTR _bufsize
	dec	eax
	push	eax
	push	ebx
	push	esi
	call	_BIO_gets
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 3268
	test	edi, edi
	jns	$LN67@rev_body
; Line 3269
	push	8
	push	esi
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	$LN53@rev_body
; Line 3274
	push	OFFSET ??_C@_0O@PBMAEJJB@read?5R?5BLOCK?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 3277
	push	4
	push	esi
	call	_BIO_test_flags
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LL5@rev_body
	push	esi
	call	_BIO_get_retry_reason
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LL5@rev_body
; Line 3278
	push	OFFSET ??_C@_0BL@FMPJFOPJ@LOOKUP?5renego?5during?5read?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 3279
	push	DWORD PTR _srp_callback_parm+8
	call	_SRP_user_pwd_free
; Line 3280
	push	DWORD PTR _srp_callback_parm
	push	DWORD PTR _srp_callback_parm+4
	call	_SRP_VBASE_get1_by_user
	add	esp, 20					; 00000014H
	mov	DWORD PTR _srp_callback_parm+8, eax
; Line 3283
	test	eax, eax
	je	SHORT $LN33@rev_body
; Line 3284
	push	DWORD PTR [eax+20]
	push	OFFSET ??_C@_0BA@KLLIDCPK@LOOKUP?5done?5?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	$LL5@rev_body
$LN50@rev_body:
; Line 3242
	push	OFFSET ??_C@_0BE@CFFLJCCG@CONNECTION?5FAILURE?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 3243
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
	jmp	$end$70
$LN33@rev_body:
; Line 3287
	push	OFFSET ??_C@_0BH@OEMJAMH@LOOKUP?5not?5successful?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
; Line 3288
	jmp	$LL5@rev_body
$LN67@rev_body:
; Line 3298
	je	$LN54@rev_body
; Line 3303
	lea	eax, DWORD PTR [ebx-1]
	add	eax, edi
$LL8@rev_body:
; Line 3304
	mov	cl, BYTE PTR [eax]
	cmp	cl, 10					; 0000000aH
	je	SHORT $LN37@rev_body
	cmp	cl, 13					; 0000000dH
	jne	SHORT $LN9@rev_body
$LN37@rev_body:
; Line 3305
	dec	eax
; Line 3306
	sub	edi, 1
	jne	SHORT $LL8@rev_body
$LN9@rev_body:
; Line 3308
	cmp	DWORD PTR _s_ign_eof, 0
	jne	SHORT $LN38@rev_body
	cmp	edi, 5
	jne	SHORT $LN38@rev_body
	push	edi
	push	OFFSET ??_C@_05HKHBPABE@CLOSE?$AA@
	push	ebx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN54@rev_body
$LN38@rev_body:
; Line 3313
	push	edi
	push	0
	push	ebx
	call	_BUF_reverse
; Line 3315
	lea	eax, DWORD PTR [edi+1]
	mov	BYTE PTR [edi+ebx], 10			; 0000000aH
	push	eax
	push	ebx
	push	esi
	call	_BIO_write
; Line 3317
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
	add	esp, 40					; 00000028H
; Line 3318
	test	eax, eax
	jg	$LL5@rev_body
$LL10@rev_body:
; Line 3320
	push	8
	push	esi
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	SHORT $end$70
; Line 3317
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 3318
	test	eax, eax
	jle	SHORT $LL10@rev_body
; Line 3188
	jmp	$LL5@rev_body
$LN53@rev_body:
; Line 3270
	cmp	DWORD PTR _s_quiet, 0
	jne	SHORT $LN66@rev_body
; Line 3271
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 3272
	jmp	SHORT $LN66@rev_body
$LN54@rev_body:
; Line 3300
	push	OFFSET ??_C@_0BD@PGBIDINB@CONNECTION?5CLOSED?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$end$70:
; Line 3327
	push	3
	push	ebp
	call	_SSL_set_shutdown
	add	esp, 8
$LN66@rev_body:
	pop	ebp
$err$69:
; Line 3332
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
; Line 3333
	test	esi, esi
	je	SHORT $LN42@rev_body
; Line 3334
	push	esi
	call	_BIO_free_all
	add	esp, 4
$LN42@rev_body:
; Line 3335
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 3336
	pop	ecx
	ret	0
_rev_body ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _www_body
_TEXT	SEGMENT
tv722 = -17						; size = 1
tv721 = -17						; size = 1
tv717 = -17						; size = 1
tv716 = -17						; size = 1
_con$1$ = -16						; size = 4
_buf$1$ = -12						; size = 4
_file$1$ = -8						; size = 4
_j$2$ = -8						; size = 4
_sk$1$ = -8						; size = 4
tv707 = -8						; size = 4
_sl$1 = -8						; size = 4
_j$1$ = -4						; size = 4
_ssl_bio$1$ = -4					; size = 4
_hostname$ = 8						; size = 4
_s$ = 12						; size = 4
_stype$ = 16						; size = 4
_context$ = 20						; size = 4
_www_body PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 2770
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebp
; Line 2781
	push	2781					; 00000addH
	push	OFFSET ??_C@_0BC@HCEECIGJ@?4?2apps?2s_server?4c?$AA@
	push	DWORD PTR _bufsize
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$1$[esp+24], ebp
; Line 2782
	test	ebp, ebp
	jne	SHORT $LN31@www_body
	pop	ebp
; Line 3170
	add	esp, 20					; 00000014H
	ret	0
$LN31@www_body:
	push	edi
; Line 2784
	call	_BIO_f_buffer
	push	eax
	call	_BIO_new
	mov	edi, eax
; Line 2785
	call	_BIO_f_ssl
	push	eax
	call	_BIO_new
	add	esp, 8
	mov	DWORD PTR _ssl_bio$1$[esp+28], eax
; Line 2786
	test	edi, edi
	je	$LN169@www_body
	test	eax, eax
	je	$LN169@www_body
; Line 2790
	cmp	DWORD PTR _s_nbio, 0
	push	esi
	mov	esi, DWORD PTR _s$[esp+28]
	je	SHORT $LN36@www_body
; Line 2793
	cmp	DWORD PTR _s_quiet, 0
	mov	DWORD PTR _sl$1[esp+32], 1
	jne	SHORT $LN35@www_body
; Line 2794
	push	OFFSET ??_C@_0BM@FCELEJEG@turning?5on?5non?5blocking?5io?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN35@www_body:
; Line 2795
	lea	eax, DWORD PTR _sl$1[esp+32]
	push	eax
	push	-2147195266				; 8004667eH
	push	esi
	call	_BIO_socket_ioctl
	add	esp, 12					; 0000000cH
	test	eax, eax
	jns	SHORT $LN36@www_body
; Line 2796
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN36@www_body:
; Line 2801
	push	1
	push	DWORD PTR _bufsize
	push	117					; 00000075H
	push	edi
	call	_BIO_int_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN256@www_body
; Line 2804
	push	ebx
	push	DWORD PTR _ctx
	call	_SSL_new
	mov	ebx, eax
	add	esp, 4
	mov	DWORD PTR _con$1$[esp+36], ebx
	test	ebx, ebx
	je	$LN257@www_body
; Line 2807
	cmp	DWORD PTR _s_tlsextdebug, 0
	je	SHORT $LN39@www_body
; Line 2808
	push	OFFSET _tlsext_cb
	push	56					; 00000038H
	push	ebx
	call	_SSL_callback_ctrl
; Line 2809
	push	DWORD PTR _bio_s_out
	push	0
	push	57					; 00000039H
	push	ebx
	call	_SSL_ctrl
	add	esp, 28					; 0000001cH
$LN39@www_body:
; Line 2818
	mov	edx, DWORD PTR _context$[esp+32]
	test	edx, edx
	je	SHORT $LN40@www_body
; Line 2819
	mov	ecx, edx
	lea	eax, DWORD PTR [ecx+1]
	mov	DWORD PTR tv707[esp+36], eax
	npad	5
$LL199@www_body:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL199@www_body
	sub	ecx, DWORD PTR tv707[esp+36]
	push	ecx
	push	edx
	push	ebx
	call	_SSL_set_session_id_context
	add	esp, 12					; 0000000cH
$LN40@www_body:
; Line 2821
	push	0
	push	esi
	call	_BIO_new_socket
	add	esp, 8
	mov	esi, eax
; Line 2822
	cmp	DWORD PTR _s_nbio_test, 0
	je	SHORT $LN41@www_body
; Line 2825
	call	_BIO_f_nbio_test
	push	eax
	call	_BIO_new
; Line 2826
	push	esi
	push	eax
	call	_BIO_push
	add	esp, 12					; 0000000cH
	mov	esi, eax
$LN41@www_body:
; Line 2828
	push	esi
	push	esi
	push	ebx
	call	_SSL_set_bio
; Line 2829
	push	ebx
	call	_SSL_set_accept_state
; Line 2832
	mov	esi, DWORD PTR _ssl_bio$1$[esp+52]
	push	ebx
	push	1
	push	109					; 0000006dH
	push	esi
	call	_BIO_ctrl
; Line 2833
	push	esi
	push	edi
	call	_BIO_push
	add	esp, 40					; 00000028H
; Line 2838
	cmp	DWORD PTR _s_debug, 0
	je	SHORT $LN42@www_body
; Line 2839
	push	1
	push	ebx
	call	_SSL_set_debug
	add	esp, 8
; Line 2840
	push	OFFSET _bio_dump_callback
	push	ebx
	call	_SSL_get_rbio
	add	esp, 4
	push	eax
	call	_BIO_set_callback
	add	esp, 8
; Line 2841
	push	DWORD PTR _bio_s_out
	push	ebx
	call	_SSL_get_rbio
	add	esp, 4
	push	eax
	call	_BIO_set_callback_arg
	add	esp, 8
$LN42@www_body:
; Line 2843
	cmp	DWORD PTR _s_msg, 0
	je	SHORT $LL242@www_body
; Line 2849
	push	OFFSET _msg_cb
	push	ebx
	call	_SSL_set_msg_callback
; Line 2850
	mov	eax, DWORD PTR _bio_s_msg
	test	eax, eax
	mov	ecx, DWORD PTR _bio_s_out
	cmovne	ecx, eax
	push	ecx
	push	0
	push	16					; 00000010H
	push	ebx
	call	_SSL_ctrl
	add	esp, 24					; 00000018H
	npad	1
$LL242@www_body:
	mov	esi, DWORD PTR __imp__strncmp
	npad	10
$LL2@www_body:
; Line 2854
	cmp	DWORD PTR _hack, 0
	je	$LN44@www_body
; Line 2855
	push	ebx
	call	_SSL_accept
	mov	esi, eax
	add	esp, 4
; Line 2858
	test	esi, esi
	jg	$LN239@www_body
$LL5@www_body:
	push	esi
	push	ebx
	call	_SSL_get_error
	add	esp, 8
	cmp	eax, 4
	jne	SHORT $LN239@www_body
; Line 2859
	push	DWORD PTR _srp_callback_parm
	push	OFFSET ??_C@_0BJ@KLIEJNND@LOOKUP?5during?5accept?5?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2861
	push	DWORD PTR _srp_callback_parm+8
	call	_SRP_user_pwd_free
; Line 2862
	push	DWORD PTR _srp_callback_parm
	push	DWORD PTR _srp_callback_parm+4
	call	_SRP_VBASE_get1_by_user
	add	esp, 24					; 00000018H
	mov	DWORD PTR _srp_callback_parm+8, eax
; Line 2865
	test	eax, eax
	je	SHORT $LN45@www_body
; Line 2866
	push	DWORD PTR [eax+20]
	push	OFFSET ??_C@_0BA@KLLIDCPK@LOOKUP?5done?5?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN46@www_body
$LN45@www_body:
; Line 2869
	push	OFFSET ??_C@_0BH@OEMJAMH@LOOKUP?5not?5successful?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN46@www_body:
; Line 2870
	push	ebx
	call	_SSL_accept
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jle	$LL5@www_body
$LN239@www_body:
; Line 2873
	push	esi
	push	ebx
	call	_SSL_get_error
	dec	eax
	add	esp, 8
	cmp	eax, 5
	ja	SHORT $LN7@www_body
	jmp	DWORD PTR $LN264@www_body[eax*4]
$LN7@www_body:
; Line 2888
	push	ebx
	call	_SSL_renegotiate
; Line 2889
	push	0
	push	0
	push	ebx
	call	_SSL_write
	mov	esi, DWORD PTR __imp__strncmp
	add	esp, 16					; 00000010H
$LN44@www_body:
; Line 2892
	mov	eax, DWORD PTR _bufsize
	dec	eax
	push	eax
	push	ebp
	push	edi
	call	_BIO_gets
	add	esp, 12					; 0000000cH
; Line 2893
	test	eax, eax
	jns	$LN259@www_body
; Line 2894
	push	8
	push	edi
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	$LN111@www_body
; Line 2899
	push	OFFSET ??_C@_0O@PBMAEJJB@read?5R?5BLOCK?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2902
	push	4
	push	edi
	call	_BIO_test_flags
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LL2@www_body
	push	edi
	call	_BIO_get_retry_reason
	add	esp, 4
	cmp	eax, 1
	jne	$LL2@www_body
; Line 2903
	push	OFFSET ??_C@_0BL@FMPJFOPJ@LOOKUP?5renego?5during?5read?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2904
	push	DWORD PTR _srp_callback_parm+8
	call	_SRP_user_pwd_free
; Line 2905
	push	DWORD PTR _srp_callback_parm
	push	DWORD PTR _srp_callback_parm+4
	call	_SRP_VBASE_get1_by_user
	add	esp, 20					; 00000014H
	mov	DWORD PTR _srp_callback_parm+8, eax
; Line 2908
	test	eax, eax
	je	SHORT $LN56@www_body
; Line 2909
	push	DWORD PTR [eax+20]
	push	OFFSET ??_C@_0BA@KLLIDCPK@LOOKUP?5done?5?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	$LL2@www_body
$LN56@www_body:
; Line 2912
	push	OFFSET ??_C@_0BH@OEMJAMH@LOOKUP?5not?5successful?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
; Line 2913
	jmp	$LL2@www_body
$LN259@www_body:
; Line 2923
	je	$end$265
; Line 2929
	mov	eax, DWORD PTR _www
	cmp	eax, 1
	jne	SHORT $LN62@www_body
	push	4
	push	ebp
	push	OFFSET ??_C@_04IBPFIGHK@GET?5?$AA@
	call	esi
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN61@www_body
	mov	eax, DWORD PTR _www
$LN62@www_body:
	cmp	eax, 2
	jne	SHORT $LN159@www_body
	push	11					; 0000000bH
	push	ebp
	push	OFFSET ??_C@_0M@LLJJBINF@GET?5?1stats?5?$AA@
	call	esi
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN61@www_body
; Line 3009
	mov	eax, DWORD PTR _www
	cmp	eax, 2
	je	SHORT $LN70@www_body
$LN159@www_body:
	cmp	eax, 3
	jne	$LL2@www_body
$LN70@www_body:
	push	5
	push	ebp
	push	OFFSET ??_C@_05KCENFFMJ@GET?5?1?$AA@
	call	esi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LL2@www_body
; Line 3019
	cmp	BYTE PTR [ebp+5], 0
	lea	esi, DWORD PTR [ebp+5]
	mov	eax, 1
	je	$LN171@www_body
$LL19@www_body:
; Line 3020
	mov	dl, BYTE PTR [esi]
	cmp	dl, 32					; 00000020H
	je	$LN114@www_body
; Line 3023
	mov	ecx, eax
	sub	ecx, 1
	je	$LN72@www_body
	sub	ecx, 1
	je	$LN73@www_body
	sub	ecx, 1
	jne	$LN20@www_body
; Line 3031
	xor	eax, eax
	cmp	dl, 47					; 0000002fH
	setne	al
	dec	eax
	jmp	$LN20@www_body
$LN111@www_body:
; Line 2895
	cmp	DWORD PTR _s_quiet, 0
	jne	$LN257@www_body
; Line 2896
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 2897
	jmp	$LN257@www_body
$LN61@www_body:
; Line 2936
	push	OFFSET ??_C@_0CN@HGKKJBIE@HTTP?11?40?5200?5ok?$AN?6Content?9type?3?5t@
	push	edi
	call	_BIO_puts
; Line 2938
	push	OFFSET ??_C@_0CA@BNEAEELL@?$DMHTML?$DO?$DMBODY?5BGCOLOR?$DN?$CC?$CDffffff?$CC?$DO?6?$AA@
	push	edi
	call	_BIO_puts
; Line 2939
	push	OFFSET ??_C@_06FNICHGOI@?$DMpre?$DO?6?$AA@
	push	edi
	call	_BIO_puts
; Line 2941
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_puts
; Line 2942
	xor	esi, esi
	add	esp, 32					; 00000020H
	cmp	DWORD PTR _local_argc, esi
	jle	SHORT $LN10@www_body
$LL11@www_body:
; Line 2943
	mov	eax, DWORD PTR _local_argv
	push	DWORD PTR [eax+esi*4]
	push	edi
	call	_BIO_puts
; Line 2944
	push	1
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	edi
	call	_BIO_write
	inc	esi
	add	esp, 20					; 00000014H
	cmp	esi, DWORD PTR _local_argc
	jl	SHORT $LL11@www_body
$LN10@www_body:
; Line 2946
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_puts
; Line 2948
	push	0
	push	0
	push	76					; 0000004cH
	push	ebx
	call	_SSL_ctrl
	test	eax, eax
	mov	edx, OFFSET ??_C@_04CGMGFKEF@?5NOT?$AA@
	mov	ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	cmove	ecx, edx
	push	ecx
	push	OFFSET ??_C@_0CF@HNLNDOIK@Secure?5Renegotiation?5IS?$CFs?5suppor@
	push	edi
	call	_BIO_printf
; Line 2956
	push	OFFSET ??_C@_0CG@PKGFLEON@Ciphers?5supported?5in?5s_server?5bi@
	push	edi
	call	_BIO_printf
; Line 2957
	push	ebx
	call	_SSL_get_ciphers
	mov	esi, eax
; Line 2958
	push	esi
	mov	DWORD PTR _sk$1$[esp+88], esi
	call	_sk_num
	add	esp, 52					; 00000034H
	mov	DWORD PTR _j$1$[esp+36], eax
; Line 2959
	xor	ebp, ebp
	test	eax, eax
	jle	SHORT $LN13@www_body
	mov	ebx, eax
	npad	7
$LL14@www_body:
; Line 2960
	push	ebp
	push	esi
	call	_sk_value
	mov	esi, eax
; Line 2961
	push	esi
	call	_SSL_CIPHER_get_name
	add	esp, 12					; 0000000cH
	push	eax
	push	esi
	call	_SSL_CIPHER_get_version
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0M@MLKHEEAE@?$CF?911s?3?$CF?925s?$AA@
	push	edi
	call	_BIO_printf
; Line 2963
	inc	ebp
	add	esp, 16					; 00000010H
	mov	eax, ebp
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN258@www_body
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN258@www_body:
	jne	SHORT $LN12@www_body
	cmp	ebp, ebx
	je	SHORT $LN260@www_body
; Line 2964
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 8
$LN12@www_body:
; Line 2959
	cmp	ebp, ebx
$LN260@www_body:
	mov	esi, DWORD PTR _sk$1$[esp+36]
	jl	SHORT $LL14@www_body
	mov	ebx, DWORD PTR _con$1$[esp+36]
$LN13@www_body:
; Line 2966
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_puts
; Line 2967
	push	DWORD PTR _bufsize
	mov	ebp, DWORD PTR _buf$1$[esp+48]
	push	ebp
	push	ebx
	call	_SSL_get_shared_ciphers
	mov	esi, eax
	add	esp, 20					; 00000014H
; Line 2968
	test	esi, esi
	je	$LN64@www_body
; Line 2969
	push	OFFSET ??_C@_0DB@ONBHKEMA@?9?9?9?6Ciphers?5common?5between?5both?5@
	push	edi
	call	_BIO_printf
; Line 2972
	mov	al, BYTE PTR [esi]
	xor	ecx, ecx
	add	esp, 8
	mov	DWORD PTR _j$2$[esp+36], ecx
	test	al, al
	je	SHORT $LN16@www_body
	xor	ebp, ebp
	mov	ebx, OFFSET ??_C@_01EEMJAFIK@?6?$AA@
$LL15@www_body:
; Line 2973
	cmp	al, 58					; 0000003aH
	jne	SHORT $LN65@www_body
; Line 2974
	mov	eax, 26					; 0000001aH
	sub	eax, ecx
	push	eax
	push	DWORD PTR ?space@?BC@??www_body@@9@9
	push	edi
	call	_BIO_write
; Line 2975
	inc	ebp
; Line 2976
	mov	DWORD PTR _j$2$[esp+48], 0
; Line 2977
	mov	eax, 1431655766				; 55555556H
	mov	ecx, ebp
	imul	ebp
	push	1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	eax, DWORD PTR [eax+eax*2]
	sub	ecx, eax
	mov	eax, OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	cmove	eax, ebx
	push	eax
	push	edi
	call	_BIO_write
	add	esp, 24					; 00000018H
; Line 2978
	xor	ecx, ecx
	jmp	SHORT $LN66@www_body
$LN65@www_body:
; Line 2979
	push	1
	push	esi
	push	edi
	call	_BIO_write
; Line 2980
	mov	ecx, DWORD PTR _j$2$[esp+48]
	add	esp, 12					; 0000000cH
	inc	ecx
	mov	DWORD PTR _j$2$[esp+36], ecx
$LN66@www_body:
; Line 2982
	mov	al, BYTE PTR [esi+1]
	inc	esi
	test	al, al
	jne	SHORT $LL15@www_body
	mov	ebx, DWORD PTR _con$1$[esp+36]
	mov	ebp, DWORD PTR _buf$1$[esp+36]
$LN16@www_body:
; Line 2984
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 8
$LN64@www_body:
; Line 2986
	push	ebx
	push	edi
	call	_ssl_print_sigalgs
; Line 2988
	push	0
	push	ebx
	push	edi
	call	_ssl_print_curves
; Line 2990
	push	ebx
	call	_SSL_cache_hit
	test	eax, eax
	mov	edx, OFFSET ??_C@_09CFNAMCPG@?9?9?9?6New?0?5?$AA@
	mov	ecx, OFFSET ??_C@_0N@GOGBFOHK@?9?9?9?6Reused?0?5?$AA@
	cmove	ecx, edx
	push	ecx
	push	edi
	call	_BIO_printf
; Line 2992
	push	ebx
	call	_SSL_get_current_cipher
	mov	esi, eax
; Line 2993
	push	esi
	call	_SSL_CIPHER_get_name
	add	esp, 40					; 00000028H
	push	eax
	push	esi
	call	_SSL_CIPHER_get_version
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BC@CNENGAEP@?$CFs?0?5Cipher?5is?5?$CFs?6?$AA@
	push	edi
	call	_BIO_printf
; Line 2995
	push	ebx
	call	_SSL_get_session
	push	eax
	push	edi
	call	_SSL_SESSION_print
; Line 2996
	push	OFFSET ??_C@_04JIKOKJIN@?9?9?9?6?$AA@
	push	edi
	call	_BIO_printf
; Line 2997
	push	ebx
	call	_SSL_get_SSL_CTX
	push	eax
	push	edi
	call	_print_stats
; Line 2998
	push	OFFSET ??_C@_04JIKOKJIN@?9?9?9?6?$AA@
	push	edi
	call	_BIO_printf
; Line 2999
	push	ebx
	call	_SSL_get_peer_certificate
	mov	esi, eax
	add	esp, 60					; 0000003cH
; Line 3000
	test	esi, esi
	je	SHORT $LN67@www_body
; Line 3001
	push	OFFSET ??_C@_0BE@PJOINFNP@Client?5certificate?6?$AA@
	push	edi
	call	_BIO_printf
; Line 3002
	push	esi
	push	edi
	call	_X509_print
; Line 3003
	push	esi
	push	edi
	call	_PEM_write_bio_X509
	add	esp, 24					; 00000018H
; Line 3006
	push	OFFSET ??_C@_0BD@IKKHHOEE@?$DM?1BODY?$DO?$DM?1HTML?$DO?$AN?6?$AN?6?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 8
; Line 3007
	jmp	$LN3@www_body
$LN67@www_body:
; Line 3005
	push	OFFSET ??_C@_0CB@PDIIHGK@no?5client?5certificate?5available?6@
	push	edi
	call	_BIO_puts
	add	esp, 8
; Line 3006
	push	OFFSET ??_C@_0BD@IKKHHOEE@?$DM?1BODY?$DO?$DM?1HTML?$DO?$AN?6?$AN?6?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 8
; Line 3007
	jmp	$LN3@www_body
$LN73@www_body:
; Line 3028
	mov	ecx, 3
; Line 3029
	jmp	SHORT $LN261@www_body
$LN72@www_body:
; Line 3025
	mov	ecx, 2
$LN261@www_body:
	xor	eax, eax
	cmp	dl, 46					; 0000002eH
	cmove	eax, ecx
$LN20@www_body:
; Line 3034
	test	eax, eax
	jne	SHORT $LN17@www_body
; Line 3035
	cmp	dl, 47					; 0000002fH
	sete	al
$LN17@www_body:
; Line 3019
	inc	esi
	cmp	BYTE PTR [esi], 0
	jne	$LL19@www_body
$LN114@www_body:
; Line 3037
	cmp	eax, 3
	je	SHORT $LN100@www_body
	cmp	eax, -1
	jne	SHORT $LN171@www_body
$LN100@www_body:
	mov	eax, 1
	jmp	SHORT $LN101@www_body
$LN171@www_body:
	xor	eax, eax
$LN101@www_body:
; Line 3040
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LN76@www_body
; Line 3041
	push	DWORD PTR ?text@?BM@??www_body@@9@9
	push	edi
	call	_BIO_puts
; Line 3042
	lea	eax, DWORD PTR [ebp+5]
	push	eax
	push	OFFSET ??_C@_0BP@KDAGJEOA@?8?$CFs?8?5is?5an?5invalid?5file?5name?$AN?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 20					; 00000014H
; Line 3043
	jmp	$LN3@www_body
$LN76@www_body:
; Line 3045
	mov	BYTE PTR [esi], 0
; Line 3047
	test	eax, eax
	je	SHORT $LN77@www_body
; Line 3048
	push	DWORD PTR ?text@?BM@??www_body@@9@9
	push	edi
	call	_BIO_puts
; Line 3049
	lea	eax, DWORD PTR [ebp+5]
	push	eax
	push	OFFSET ??_C@_0BP@JJDMIBD@?8?$CFs?8?5contains?5?8?4?4?8?5reference?$AN?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 20					; 00000014H
; Line 3050
	jmp	$LN3@www_body
$LN77@www_body:
; Line 3053
	cmp	BYTE PTR [ebp+5], 47			; 0000002fH
	lea	esi, DWORD PTR [ebp+5]
	jne	SHORT $LN78@www_body
; Line 3054
	push	DWORD PTR ?text@?BM@??www_body@@9@9
	push	edi
	call	_BIO_puts
; Line 3055
	push	esi
	push	OFFSET ??_C@_0BK@CCDGJOGB@?8?$CFs?8?5is?5an?5invalid?5path?$AN?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 20					; 00000014H
; Line 3056
	jmp	$LN3@www_body
$LN78@www_body:
; Line 3065
	push	esi
	call	_app_isdir
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN79@www_body
; Line 3069
	push	DWORD PTR ?text@?BM@??www_body@@9@9
	push	edi
	call	_BIO_puts
; Line 3070
	push	esi
	push	OFFSET ??_C@_0BG@DAOHLPL@?8?$CFs?8?5is?5a?5directory?$AN?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 20					; 00000014H
; Line 3071
	jmp	$LN3@www_body
$LN79@www_body:
; Line 3075
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	esi
	call	_BIO_new_file
	add	esp, 8
	mov	DWORD PTR _file$1$[esp+36], eax
	test	eax, eax
	jne	SHORT $LN80@www_body
; Line 3076
	push	DWORD PTR ?text@?BM@??www_body@@9@9
	push	edi
	call	_BIO_puts
; Line 3077
	push	esi
	push	OFFSET ??_C@_0BF@FPDCCHNB@Error?5opening?5?8?$CFs?8?$AN?6?$AA@
	push	edi
	call	_BIO_printf
; Line 3078
	push	edi
	call	_ERR_print_errors
	add	esp, 24					; 00000018H
; Line 3079
	jmp	$LN3@www_body
$LN80@www_body:
; Line 3082
	cmp	DWORD PTR _s_quiet, 0
	jne	SHORT $LN81@www_body
; Line 3083
	push	esi
	push	OFFSET ??_C@_08IOLHANGA@FILE?3?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN81@www_body:
; Line 3085
	cmp	DWORD PTR _www, 2
	jne	$LN84@www_body
; Line 3086
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
$LL200@www_body:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL200@www_body
	sub	ecx, edx
; Line 3088
	cmp	ecx, 5
	jle	SHORT $LN86@www_body
	lea	eax, DWORD PTR [esi-5]
	mov	edx, OFFSET ??_C@_05LHMDENIF@?4html?$AA@
	add	eax, ecx
	npad	3
$LL201@www_body:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	mov	BYTE PTR tv716[esp+36], bl
	mov	ebx, DWORD PTR _con$1$[esp+36]
	jne	SHORT $LN202@www_body
	cmp	BYTE PTR tv716[esp+36], 0
	je	SHORT $LN203@www_body
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	mov	BYTE PTR tv717[esp+36], bl
	mov	ebx, DWORD PTR _con$1$[esp+36]
	jne	SHORT $LN202@www_body
	add	eax, 2
	add	edx, 2
	cmp	BYTE PTR tv717[esp+36], 0
	jne	SHORT $LL201@www_body
$LN203@www_body:
	xor	eax, eax
	jmp	SHORT $LN204@www_body
$LN202@www_body:
	sbb	eax, eax
	or	eax, 1
$LN204@www_body:
	test	eax, eax
	je	$LN85@www_body
$LN86@www_body:
	cmp	ecx, 4
	jle	$LN83@www_body
	add	ecx, -4					; fffffffcH
	mov	edx, OFFSET ??_C@_04EFOINKHF@?4php?$AA@
	add	ecx, esi
	mov	eax, ecx
$LL205@www_body:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	mov	BYTE PTR tv721[esp+36], bl
	mov	ebx, DWORD PTR _con$1$[esp+36]
	jne	SHORT $LN206@www_body
	cmp	BYTE PTR tv721[esp+36], 0
	je	SHORT $LN207@www_body
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	mov	BYTE PTR tv722[esp+36], bl
	mov	ebx, DWORD PTR _con$1$[esp+36]
	jne	SHORT $LN206@www_body
	add	eax, 2
	add	edx, 2
	cmp	BYTE PTR tv722[esp+36], 0
	jne	SHORT $LL205@www_body
$LN207@www_body:
	xor	eax, eax
	jmp	SHORT $LN208@www_body
$LN206@www_body:
	sbb	eax, eax
	or	eax, 1
$LN208@www_body:
	test	eax, eax
	je	SHORT $LN85@www_body
	mov	eax, OFFSET ??_C@_04DKBFJDAN@?4htm?$AA@
	npad	4
$LL209@www_body:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN210@www_body
	test	dl, dl
	je	SHORT $LN211@www_body
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN210@www_body
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL209@www_body
$LN211@www_body:
	xor	eax, eax
	jmp	SHORT $LN212@www_body
$LN210@www_body:
	sbb	eax, eax
	or	eax, 1
$LN212@www_body:
	test	eax, eax
	jne	SHORT $LN83@www_body
$LN85@www_body:
; Line 3090
	push	OFFSET ??_C@_0CN@HGKKJBIE@HTTP?11?40?5200?5ok?$AN?6Content?9type?3?5t@
	jmp	SHORT $LN262@www_body
$LN83@www_body:
; Line 3093
	push	OFFSET ??_C@_0CO@JCGCJBGH@HTTP?11?40?5200?5ok?$AN?6Content?9type?3?5t@
$LN262@www_body:
	push	edi
	call	_BIO_puts
	add	esp, 8
$LN84@www_body:
; Line 3098
	push	DWORD PTR _bufsize
	push	ebp
	push	DWORD PTR _file$1$[esp+44]
	call	_BIO_read
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 3099
	test	ebp, ebp
	jle	SHORT $write_error$266
	mov	ebx, DWORD PTR _buf$1$[esp+36]
	npad	5
$LL22@www_body:
; Line 3112
	xor	esi, esi
	test	ebp, ebp
	jle	SHORT $LN26@www_body
$LL25@www_body:
; Line 3121
	mov	eax, ebp
	sub	eax, esi
	push	eax
	lea	eax, DWORD PTR [esi+ebx]
	push	eax
	push	edi
	call	_BIO_write
	add	esp, 12					; 0000000cH
; Line 3122
	test	eax, eax
	jg	SHORT $LN89@www_body
; Line 3123
	push	8
	push	edi
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	SHORT $LN240@www_body
; Line 3126
	push	OFFSET ??_C@_0BA@IMEDIBFH@rwrite?5W?5BLOCK?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
; Line 3128
	jmp	SHORT $LN90@www_body
$LN89@www_body:
; Line 3129
	add	esi, eax
$LN90@www_body:
; Line 3112
	cmp	esi, ebp
	jl	SHORT $LL25@www_body
$LN26@www_body:
; Line 3098
	push	DWORD PTR _bufsize
	push	ebx
	push	DWORD PTR _file$1$[esp+44]
	call	_BIO_read
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 3099
	test	ebp, ebp
	jg	SHORT $LL22@www_body
$LN240@www_body:
	mov	ebx, DWORD PTR _con$1$[esp+36]
$write_error$266:
; Line 3134
	push	DWORD PTR _file$1$[esp+36]
	call	_BIO_free
	mov	ebp, DWORD PTR _buf$1$[esp+40]
	add	esp, 4
$LN3@www_body:
; Line 3140
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 3141
	test	eax, eax
	jg	SHORT $end$265
$LL28@www_body:
; Line 3142
	push	8
	push	edi
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	SHORT $end$265
; Line 3140
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 3141
	test	eax, eax
	jle	SHORT $LL28@www_body
$end$265:
; Line 3150
	push	3
	push	ebx
	call	_SSL_set_shutdown
	add	esp, 8
$LN257@www_body:
	pop	ebx
$LN256@www_body:
	pop	esi
$LN169@www_body:
; Line 3162
	push	OFFSET ??_C@_07EJIBEDLO@ACCEPT?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 3165
	push	ebp
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
; Line 3166
	test	edi, edi
	je	SHORT $LN98@www_body
; Line 3167
	push	edi
	call	_BIO_free_all
	add	esp, 4
$LN98@www_body:
; Line 3169
	pop	edi
	mov	eax, 1
	pop	ebp
; Line 3170
	add	esp, 20					; 00000014H
	ret	0
	npad	2
$LN264@www_body:
	DD	$LN257@www_body
	DD	$LL242@www_body
	DD	$LL242@www_body
	DD	$LL242@www_body
	DD	$LN257@www_body
	DD	$LN257@www_body
_www_body ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sv_body
_TEXT	SEGMENT
_s$GSCopy$1$ = -304					; size = 4
_l$1$ = -300						; size = 4
_sl$1 = -300						; size = 4
_timeout$ = -296					; size = 8
_width$1$ = -288					; size = 4
tv845 = -284						; size = 4
_buf$1$ = -280						; size = 4
_read_from_sslcon$2$ = -276				; size = 4
_tv$ = -272						; size = 8
_readfds$ = -264					; size = 260
__$ArrayPad$ = -4					; size = 4
_hostname$ = 8						; size = 4
_s$ = 12						; size = 4
_stype$ = 16						; size = 4
_context$ = 20						; size = 4
_sv_body PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 2159
	mov	eax, 304				; 00000130H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+304], eax
	mov	eax, DWORD PTR _s$[esp+300]
	push	ebx
	push	ebp
	push	edi
	mov	edi, DWORD PTR _context$[esp+312]
; Line 2162
	mov	ebx, 1
; Line 2177
	push	2177					; 00000881H
	push	OFFSET ??_C@_0BC@HCEECIGJ@?4?2apps?2s_server?4c?$AA@
	push	DWORD PTR _bufsize
	mov	DWORD PTR _s$GSCopy$1$[esp+328], eax
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _buf$1$[esp+316], ebp
	test	ebp, ebp
	jne	SHORT $LN28@sv_body
; Line 2178
	push	OFFSET ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2179
	jmp	$LN95@sv_body
$LN28@sv_body:
; Line 2182
	cmp	DWORD PTR _s_nbio, 0
	je	SHORT $LN169@sv_body
; Line 2185
	cmp	DWORD PTR _s_quiet, 0
	mov	DWORD PTR _sl$1[esp+316], ebx
	jne	SHORT $LN30@sv_body
; Line 2186
	push	OFFSET ??_C@_0BM@FCELEJEG@turning?5on?5non?5blocking?5io?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN30@sv_body:
; Line 2187
	mov	ebx, DWORD PTR _s$GSCopy$1$[esp+316]
	lea	eax, DWORD PTR _sl$1[esp+316]
	push	eax
	push	-2147195266				; 8004667eH
	push	ebx
	call	_BIO_socket_ioctl
	add	esp, 12					; 0000000cH
	test	eax, eax
	jns	SHORT $LN148@sv_body
; Line 2188
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
	jmp	SHORT $LN148@sv_body
$LN169@sv_body:
	mov	ebx, DWORD PTR _s$GSCopy$1$[esp+316]
$LN148@sv_body:
	push	esi
; Line 2193
	push	DWORD PTR _ctx
	call	_SSL_new
	add	esp, 4
	mov	esi, eax
; Line 2195
	cmp	DWORD PTR _s_tlsextdebug, 0
	je	SHORT $LN33@sv_body
; Line 2196
	push	OFFSET _tlsext_cb
	push	56					; 00000038H
	push	esi
	call	_SSL_callback_ctrl
; Line 2197
	push	DWORD PTR _bio_s_out
	push	0
	push	57					; 00000039H
	push	esi
	call	_SSL_ctrl
	add	esp, 28					; 0000001cH
$LN33@sv_body:
; Line 2199
	cmp	DWORD PTR _s_tlsextstatus, 0
	je	SHORT $LN34@sv_body
; Line 2200
	push	OFFSET _cert_status_cb
	push	63					; 0000003fH
	push	DWORD PTR _ctx
	call	_SSL_CTX_callback_ctrl
; Line 2201
	mov	eax, DWORD PTR _bio_err
; Line 2202
	push	OFFSET _tlscstatp
	push	0
	push	64					; 00000040H
	push	DWORD PTR _ctx
	mov	DWORD PTR _tlscstatp+20, eax
	call	_SSL_CTX_ctrl
	add	esp, 28					; 0000001cH
$LN34@sv_body:
; Line 2212
	test	edi, edi
	je	SHORT $LN35@sv_body
; Line 2213
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL158@sv_body:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL158@sv_body
	sub	ecx, edx
	push	ecx
	push	edi
	push	esi
	call	_SSL_set_session_id_context
	add	esp, 12					; 0000000cH
$LN35@sv_body:
; Line 2215
	push	esi
	call	_SSL_clear
	add	esp, 4
; Line 2222
	cmp	DWORD PTR _stype$[esp+316], 2
; Line 2224
	push	0
	push	ebx
	jne	$LN36@sv_body
	call	_BIO_new_dgram
	add	esp, 8
	mov	edi, eax
; Line 2226
	cmp	DWORD PTR _enable_timeouts, 0
	je	SHORT $LN38@sv_body
; Line 2229
	lea	eax, DWORD PTR _timeout$[esp+320]
	mov	DWORD PTR _timeout$[esp+320], 0
	push	eax
	push	0
	push	33					; 00000021H
	push	edi
	mov	DWORD PTR _timeout$[esp+340], 250000	; 0003d090H
	call	_BIO_ctrl
; Line 2233
	lea	eax, DWORD PTR _timeout$[esp+336]
	mov	DWORD PTR _timeout$[esp+336], 0
	push	eax
	push	0
	push	35					; 00000023H
	push	edi
	mov	DWORD PTR _timeout$[esp+356], 250000	; 0003d090H
	call	_BIO_ctrl
	add	esp, 32					; 00000020H
$LN38@sv_body:
; Line 2236
	cmp	DWORD PTR _socket_mtu, 0
; Line 2237
	push	0
	push	0
	je	$LN39@sv_body
	push	121					; 00000079H
	push	esi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
; Line 2238
	push	0
	cmp	DWORD PTR _socket_mtu, eax
	jge	SHORT $LN41@sv_body
	push	0
	push	121					; 00000079H
	push	esi
	call	_SSL_ctrl
	push	eax
	push	OFFSET ??_C@_0CF@MCFEIGOI@MTU?5too?5small?4?5Must?5be?5at?5least?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2241
	push	edi
	or	ebx, -1
	call	_BIO_free
	add	esp, 32					; 00000020H
; Line 2242
	jmp	$err$176
$LN41@sv_body:
; Line 2244
	push	4096					; 00001000H
	push	32					; 00000020H
	push	esi
	call	_SSL_ctrl
; Line 2245
	push	0
	push	DWORD PTR _socket_mtu
	push	120					; 00000078H
	push	esi
	call	_SSL_ctrl
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN40@sv_body
; Line 2246
	push	OFFSET ??_C@_0BD@LHDLOJJB@Failed?5to?5set?5MTU?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2248
	push	edi
	or	ebx, -1
	call	_BIO_free
	add	esp, 12					; 0000000cH
; Line 2249
	jmp	$err$176
$LN39@sv_body:
; Line 2253
	push	39					; 00000027H
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
$LN40@sv_body:
; Line 2256
	push	0
	push	8192					; 00002000H
	push	32					; 00000020H
	push	esi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
; Line 2257
	jmp	SHORT $LN37@sv_body
$LN36@sv_body:
; Line 2258
	call	_BIO_new_socket
	add	esp, 8
	mov	edi, eax
$LN37@sv_body:
; Line 2260
	cmp	DWORD PTR _s_nbio_test, 0
	je	SHORT $LN43@sv_body
; Line 2263
	call	_BIO_f_nbio_test
	push	eax
	call	_BIO_new
; Line 2264
	push	edi
	push	eax
	call	_BIO_push
	add	esp, 12					; 0000000cH
	mov	edi, eax
$LN43@sv_body:
; Line 2271
	push	edi
	push	edi
	push	esi
	call	_SSL_set_bio
; Line 2272
	push	esi
	call	_SSL_set_accept_state
	add	esp, 16					; 00000010H
; Line 2275
	cmp	DWORD PTR _s_debug, 0
	je	SHORT $LN44@sv_body
; Line 2276
	push	1
	push	esi
	call	_SSL_set_debug
	add	esp, 8
; Line 2277
	push	OFFSET _bio_dump_callback
	push	esi
	call	_SSL_get_rbio
	add	esp, 4
	push	eax
	call	_BIO_set_callback
	add	esp, 8
; Line 2278
	push	DWORD PTR _bio_s_out
	push	esi
	call	_SSL_get_rbio
	add	esp, 4
	push	eax
	call	_BIO_set_callback_arg
	add	esp, 8
$LN44@sv_body:
; Line 2280
	cmp	DWORD PTR _s_msg, 0
	je	SHORT $LN45@sv_body
; Line 2286
	push	OFFSET _msg_cb
	push	esi
	call	_SSL_set_msg_callback
; Line 2287
	mov	eax, DWORD PTR _bio_s_msg
	test	eax, eax
	mov	ecx, DWORD PTR _bio_s_out
	cmovne	ecx, eax
	push	ecx
	push	0
	push	16					; 00000010H
	push	esi
	call	_SSL_ctrl
	add	esp, 24					; 00000018H
$LN45@sv_body:
; Line 2290
	cmp	DWORD PTR _s_tlsextdebug, 0
	je	SHORT $LN46@sv_body
; Line 2291
	push	OFFSET _tlsext_cb
	push	56					; 00000038H
	push	esi
	call	_SSL_callback_ctrl
; Line 2292
	push	DWORD PTR _bio_s_out
	push	0
	push	57					; 00000039H
	push	esi
	call	_SSL_ctrl
	add	esp, 28					; 0000001cH
$LN46@sv_body:
; Line 2296
	lea	eax, DWORD PTR [ebx+1]
	mov	DWORD PTR _width$1$[esp+320], eax
	npad	5
$LL2@sv_body:
; Line 2302
	push	esi
	xor	edi, edi
	call	_SSL_pending
	mov	ebx, eax
	add	esp, 4
; Line 2304
	test	ebx, ebx
	jne	$LN149@sv_body
; Line 2309
	mov	eax, DWORD PTR _s$GSCopy$1$[esp+320]
	mov	DWORD PTR _readfds$[esp+324], eax
; Line 2326
	lea	eax, DWORD PTR _tv$[esp+320]
	push	eax
	push	ebx
	push	ebx
	lea	eax, DWORD PTR _readfds$[esp+332]
	mov	DWORD PTR _readfds$[esp+332], 1
	push	eax
	push	DWORD PTR _width$1$[esp+336]
	mov	DWORD PTR _tv$[esp+340], 1
	mov	DWORD PTR _tv$[esp+344], edi
	call	DWORD PTR __imp__select@20
; Line 2327
	test	eax, eax
	js	SHORT $LL2@sv_body
	jne	SHORT $LN51@sv_body
	call	DWORD PTR __imp___kbhit
	test	eax, eax
	je	SHORT $LL2@sv_body
$LN51@sv_body:
; Line 2329
	call	DWORD PTR __imp___kbhit
	test	eax, eax
	mov	eax, 1
	cmovne	edi, eax
; Line 2361
	lea	eax, DWORD PTR _readfds$[esp+320]
	push	eax
	push	DWORD PTR _s$GSCopy$1$[esp+324]
	call	___WSAFDIsSet@8
	test	eax, eax
	mov	eax, 1
	cmovne	ebx, eax
	mov	DWORD PTR _read_from_sslcon$2$[esp+320], ebx
; Line 2364
	test	edi, edi
	je	$LN113@sv_body
; Line 2365
	cmp	DWORD PTR _s_crlf, 0
	je	SHORT $LN56@sv_body
; Line 2368
	mov	eax, DWORD PTR _bufsize
	cdq
	sub	eax, edx
	sar	eax, 1
	push	eax
	push	ebp
	call	_raw_read_stdin
	mov	ebx, eax
	add	esp, 8
; Line 2369
	xor	edx, edx
; Line 2371
	xor	eax, eax
	test	ebx, ebx
	jle	SHORT $LN12@sv_body
$LL125@sv_body:
; Line 2372
	cmp	BYTE PTR [eax+ebp], 10			; 0000000aH
	jne	SHORT $LN126@sv_body
; Line 2373
	inc	edx
$LN126@sv_body:
; Line 2371
	inc	eax
	cmp	eax, ebx
	jl	SHORT $LL125@sv_body
$LN12@sv_body:
; Line 2374
	lea	edi, DWORD PTR [ebx-1]
	test	edi, edi
	js	SHORT $LN15@sv_body
$LL16@sv_body:
; Line 2375
	mov	al, BYTE PTR [edi+ebp]
	lea	ecx, DWORD PTR [edi+edx]
	mov	BYTE PTR [ecx+ebp], al
; Line 2376
	cmp	BYTE PTR [edi+ebp], 10			; 0000000aH
	jne	SHORT $LN14@sv_body
; Line 2377
	dec	edx
; Line 2378
	inc	ebx
; Line 2379
	lea	eax, DWORD PTR [edi+edx]
	mov	BYTE PTR [eax+ebp], 13			; 0000000dH
$LN14@sv_body:
; Line 2374
	sub	edi, 1
	jns	SHORT $LL16@sv_body
$LN15@sv_body:
; Line 2382
	test	edx, edx
	je	SHORT $LN57@sv_body
	push	2382					; 0000094eH
	push	OFFSET ??_C@_1CE@HLPONNPN@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAs?$AA_?$AAs?$AAe?$AAr?$AAv?$AAe?$AAr?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BI@KKDDCBII@?$AAl?$AAf?$AA_?$AAn?$AAu?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
; Line 2383
	jmp	SHORT $LN57@sv_body
$LN56@sv_body:
; Line 2384
	push	DWORD PTR _bufsize
	push	ebp
	call	_raw_read_stdin
	add	esp, 8
	mov	ebx, eax
$LN57@sv_body:
; Line 2385
	cmp	DWORD PTR _s_quiet, 0
	jne	$LN73@sv_body
	cmp	DWORD PTR _s_brief, 0
	jne	$LN73@sv_body
; Line 2386
	test	ebx, ebx
	jle	$LN62@sv_body
	mov	al, BYTE PTR [ebp]
	cmp	al, 81					; 00000051H
	je	$LN62@sv_body
; Line 2393
	cmp	al, 113					; 00000071H
	je	$LN115@sv_body
; Line 2403
	cmp	al, 66					; 00000042H
	jne	SHORT $LN66@sv_body
	mov	cl, BYTE PTR [ebp+1]
	cmp	cl, 10					; 0000000aH
	je	SHORT $LN67@sv_body
	cmp	cl, 13					; 0000000dH
	jne	SHORT $LN66@sv_body
$LN67@sv_body:
; Line 2404
	push	OFFSET ??_C@_0O@ICIFEBNC@HEARTBEATING?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2405
	push	0
	push	0
	push	85					; 00000055H
	push	esi
	call	_SSL_ctrl
	add	esp, 24					; 00000018H
; Line 2407
	jmp	$LL2@sv_body
$LN66@sv_body:
; Line 2410
	cmp	al, 114					; 00000072H
	jne	SHORT $LN68@sv_body
	mov	cl, BYTE PTR [ebp+1]
	cmp	cl, 10					; 0000000aH
	je	SHORT $LN69@sv_body
	cmp	cl, 13					; 0000000dH
	jne	SHORT $LN68@sv_body
$LN69@sv_body:
; Line 2411
	push	esi
	call	_SSL_renegotiate
; Line 2412
	push	esi
	call	_SSL_do_handshake
; Line 2413
	push	eax
	push	OFFSET ??_C@_0BI@ONIEOAMP@SSL_do_handshake?5?9?$DO?5?$CFd?6?$AA@
	call	_printf
	add	esp, 16					; 00000010H
; Line 2415
	jmp	$LL2@sv_body
$LN68@sv_body:
; Line 2420
	cmp	al, 82					; 00000052H
	jne	SHORT $LN70@sv_body
	mov	cl, BYTE PTR [ebp+1]
	cmp	cl, 10					; 0000000aH
	je	SHORT $LN71@sv_body
	cmp	cl, 13					; 0000000dH
	jne	SHORT $LN70@sv_body
$LN71@sv_body:
; Line 2421
	push	0
	push	5
	push	esi
	call	_SSL_set_verify
; Line 2424
	push	esi
	call	_SSL_renegotiate
; Line 2425
	push	esi
	call	_SSL_do_handshake
; Line 2426
	push	eax
	push	OFFSET ??_C@_0BI@ONIEOAMP@SSL_do_handshake?5?9?$DO?5?$CFd?6?$AA@
	call	_printf
	add	esp, 28					; 0000001cH
; Line 2428
	jmp	$LL2@sv_body
$LN70@sv_body:
; Line 2434
	cmp	al, 80					; 00000050H
	jne	SHORT $LN72@sv_body
; Line 2436
	mov	edx, DWORD PTR ?str@?CI@??sv_body@@9@9
	mov	ecx, edx
	lea	edi, DWORD PTR [ecx+1]
$LL159@sv_body:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL159@sv_body
	sub	ecx, edi
	push	ecx
	push	edx
	push	esi
	call	_SSL_get_wbio
	add	esp, 4
	push	eax
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN72@sv_body:
; Line 2438
	cmp	BYTE PTR [ebp], 83			; 00000053H
	jne	SHORT $LN73@sv_body
; Line 2439
	push	esi
	call	_SSL_get_SSL_CTX
	push	eax
	push	DWORD PTR _bio_s_out
	call	_print_stats
	add	esp, 12					; 0000000cH
$LN73@sv_body:
; Line 2445
	xor	eax, eax
	mov	DWORD PTR _l$1$[esp+320], eax
$LL17@sv_body:
; Line 2457
	add	eax, ebp
	push	ebx
	push	eax
	push	esi
	mov	DWORD PTR tv845[esp+332], eax
	call	_SSL_write
	mov	edi, eax
; Line 2459
	push	edi
	push	esi
	call	_SSL_get_error
	add	esp, 20					; 00000014H
	cmp	eax, 4
	jne	$LN21@sv_body
	mov	ebp, DWORD PTR tv845[esp+320]
	npad	7
$LL20@sv_body:
; Line 2460
	push	OFFSET ??_C@_0BM@FBNLNGKL@LOOKUP?5renego?5during?5write?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2461
	push	DWORD PTR _srp_callback_parm+8
	call	_SRP_user_pwd_free
; Line 2462
	push	DWORD PTR _srp_callback_parm
	push	DWORD PTR _srp_callback_parm+4
	call	_SRP_VBASE_get1_by_user
	add	esp, 20					; 00000014H
	mov	DWORD PTR _srp_callback_parm+8, eax
; Line 2465
	test	eax, eax
	je	SHORT $LN74@sv_body
; Line 2466
	push	DWORD PTR [eax+20]
	push	OFFSET ??_C@_0BA@KLLIDCPK@LOOKUP?5done?5?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN75@sv_body
$LN74@sv_body:
; Line 2469
	push	OFFSET ??_C@_0BH@OEMJAMH@LOOKUP?5not?5successful?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN75@sv_body:
; Line 2470
	push	ebx
	push	ebp
	push	esi
	call	_SSL_write
	mov	edi, eax
	push	edi
	push	esi
	call	_SSL_get_error
	add	esp, 20					; 00000014H
	cmp	eax, 4
	je	SHORT $LL20@sv_body
	mov	ebp, DWORD PTR _buf$1$[esp+320]
$LN21@sv_body:
; Line 2473
	push	edi
	push	esi
	call	_SSL_get_error
	dec	eax
	add	esp, 8
	cmp	eax, 5
	ja	SHORT $LN22@sv_body
	jmp	DWORD PTR $LN174@sv_body[eax*4]
$LN77@sv_body:
; Line 2479
	push	OFFSET ??_C@_0N@JJGKAHK@Write?5BLOCK?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN22@sv_body:
; Line 2494
	mov	eax, DWORD PTR _l$1$[esp+320]
	test	edi, edi
	jle	SHORT $LN80@sv_body
	add	eax, edi
; Line 2495
	sub	ebx, edi
	mov	DWORD PTR _l$1$[esp+320], eax
$LN80@sv_body:
; Line 2497
	test	ebx, ebx
	jg	$LL17@sv_body
	mov	ebx, DWORD PTR _read_from_sslcon$2$[esp+320]
$LN113@sv_body:
; Line 2501
	test	ebx, ebx
	je	$LL2@sv_body
$LN149@sv_body:
; Line 2502
	push	esi
	call	_SSL_state
	add	esp, 4
	cmp	eax, 3
	je	SHORT $again$177
; Line 2503
	push	esi
	call	_init_ssl_connection
	add	esp, 4
; Line 2505
	test	eax, eax
	js	$LN116@sv_body
; Line 2508
	jne	$LL2@sv_body
; Line 2512
	jmp	$LN168@sv_body
$again$177:
; Line 2514
	push	DWORD PTR _bufsize
	push	ebp
	push	esi
	call	_SSL_read
	mov	edi, eax
; Line 2516
	push	edi
	push	esi
	call	_SSL_get_error
	add	esp, 20					; 00000014H
	cmp	eax, 4
	jne	$LN25@sv_body
	npad	6
$LL24@sv_body:
; Line 2517
	push	OFFSET ??_C@_0BL@FMPJFOPJ@LOOKUP?5renego?5during?5read?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2518
	push	DWORD PTR _srp_callback_parm+8
	call	_SRP_user_pwd_free
; Line 2519
	push	DWORD PTR _srp_callback_parm
	push	DWORD PTR _srp_callback_parm+4
	call	_SRP_VBASE_get1_by_user
	add	esp, 20					; 00000014H
	mov	DWORD PTR _srp_callback_parm+8, eax
; Line 2522
	test	eax, eax
	je	SHORT $LN88@sv_body
; Line 2523
	push	DWORD PTR [eax+20]
	push	OFFSET ??_C@_0BA@KLLIDCPK@LOOKUP?5done?5?$CFs?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN89@sv_body
$LN88@sv_body:
; Line 2526
	push	OFFSET ??_C@_0BH@OEMJAMH@LOOKUP?5not?5successful?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN89@sv_body:
; Line 2527
	push	DWORD PTR _bufsize
	push	ebp
	push	esi
	call	_SSL_read
	mov	edi, eax
	push	edi
	push	esi
	call	_SSL_get_error
	add	esp, 20					; 00000014H
	cmp	eax, 4
	je	$LL24@sv_body
$LN25@sv_body:
; Line 2530
	push	edi
	push	esi
	call	_SSL_get_error
	add	esp, 8
	cmp	eax, 6
	ja	$LL2@sv_body
	jmp	DWORD PTR $LN175@sv_body[eax*4]
$LN90@sv_body:
; Line 2535
	push	edi
	push	ebp
	call	_raw_write_stdout
; Line 2536
	push	esi
	call	_SSL_pending
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$again$177
; Line 2538
	jmp	$LL2@sv_body
$LN92@sv_body:
; Line 2541
	push	OFFSET ??_C@_0M@MNBJAGGO@Read?5BLOCK?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
; Line 2556
	jmp	$LL2@sv_body
$LN115@sv_body:
; Line 2394
	push	OFFSET ??_C@_05PHCCFBBB@DONE?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2395
	push	esi
	call	_SSL_version
	add	esp, 12					; 0000000cH
	cmp	eax, 65279				; 0000feffH
	je	$LN168@sv_body
; Line 2396
	mov	ebx, DWORD PTR _s$GSCopy$1$[esp+320]
	push	0
	push	ebx
	call	DWORD PTR __imp__shutdown@8
	push	ebx
	call	DWORD PTR __imp__closesocket@4
; Line 2400
	jmp	$LN168@sv_body
$LN62@sv_body:
; Line 2387
	push	OFFSET ??_C@_05PHCCFBBB@DONE?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2388
	mov	ebx, DWORD PTR _s$GSCopy$1$[esp+328]
	add	esp, 8
	mov	edi, DWORD PTR __imp__shutdown@8
	push	0
	push	ebx
	call	edi
	push	ebx
	mov	ebx, DWORD PTR __imp__closesocket@4
	call	ebx
; Line 2579
	push	OFFSET ??_C@_0BI@GLICEMCM@shutdown?5accept?5socket?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2580
	mov	eax, DWORD PTR _accept_socket
	add	esp, 8
	test	eax, eax
	js	SHORT $LN101@sv_body
; Line 2581
	push	2
	push	eax
	call	edi
	push	DWORD PTR _accept_socket
	call	ebx
$LN101@sv_body:
; Line 2390
	mov	ebx, -11				; fffffff5H
; Line 2391
	jmp	SHORT $err$176
$LN78@sv_body:
; Line 2483
	push	OFFSET ??_C@_06CBJFBFDH@ERROR?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2484
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 2486
	jmp	SHORT $LN168@sv_body
$LN116@sv_body:
; Line 2506
	xor	ebx, ebx
; Line 2507
	jmp	SHORT $err$176
$LN94@sv_body:
; Line 2550
	push	OFFSET ??_C@_05PHCCFBBB@DONE?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN168@sv_body:
	mov	ebx, 1
$err$176:
; Line 2558
	test	esi, esi
	je	SHORT $LN172@sv_body
; Line 2559
	push	OFFSET ??_C@_0BD@BBFCHACL@shutting?5down?5SSL?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
; Line 2561
	push	3
	push	esi
	call	_SSL_set_shutdown
; Line 2565
	push	esi
	call	_SSL_free
	add	esp, 20					; 00000014H
$LN172@sv_body:
	pop	esi
$LN95@sv_body:
; Line 2567
	push	OFFSET ??_C@_0BD@PGBIDINB@CONNECTION?5CLOSED?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
; Line 2568
	test	ebp, ebp
	je	SHORT $LN96@sv_body
; Line 2569
	push	DWORD PTR _bufsize
	push	ebp
	call	_OPENSSL_cleanse
; Line 2570
	push	ebp
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN96@sv_body:
; Line 2572
	test	ebx, ebx
	js	SHORT $LN164@sv_body
; Line 2573
	push	OFFSET ??_C@_07EJIBEDLO@ACCEPT?6?$AA@
	push	DWORD PTR _bio_s_out
	call	_BIO_printf
	add	esp, 8
$LN164@sv_body:
; Line 2575
	mov	ecx, DWORD PTR __$ArrayPad$[esp+316]
	mov	eax, ebx
	pop	edi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	ret	0
	npad	1
$LN174@sv_body:
	DD	$LN78@sv_body
	DD	$LN77@sv_body
	DD	$LN77@sv_body
	DD	$LN77@sv_body
	DD	$LN78@sv_body
	DD	$LN94@sv_body
$LN175@sv_body:
	DD	$LN90@sv_body
	DD	$LN78@sv_body
	DD	$LN92@sv_body
	DD	$LN92@sv_body
	DD	$LL2@sv_body
	DD	$LN78@sv_body
	DD	$LN94@sv_body
_sv_body ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tmp_rsa_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_is_export$ = 12					; size = 4
_keylength$ = 16					; size = 4
_tmp_rsa_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_server.c
; Line 3344
	mov	eax, DWORD PTR ?rsa_tmp@?1??tmp_rsa_cb@@9@9
	test	eax, eax
	jne	$LN3@tmp_rsa_cb
	push	esi
	call	_BN_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN2@tmp_rsa_cb
; Line 3345
	push	OFFSET ??_C@_0CI@BENGEPLC@Allocation?5error?5in?5generating?5R@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN2@tmp_rsa_cb:
; Line 3346
	mov	eax, DWORD PTR ?rsa_tmp@?1??tmp_rsa_cb@@9@9
	test	eax, eax
	jne	$LN13@tmp_rsa_cb
	test	esi, esi
	je	$LN13@tmp_rsa_cb
; Line 3347
	cmp	DWORD PTR _s_quiet, eax
	jne	SHORT $LN4@tmp_rsa_cb
; Line 3348
	push	DWORD PTR _keylength$[esp]
	push	OFFSET ??_C@_0CE@GMHHAGLI@Generating?5temp?5?$CI?$CFd?5bit?$CJ?5RSA?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 3350
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 28					; 0000001cH
$LN4@tmp_rsa_cb:
; Line 3352
	push	65537					; 00010001H
	push	esi
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@tmp_rsa_cb
	call	_RSA_new
	mov	DWORD PTR ?rsa_tmp@?1??tmp_rsa_cb@@9@9, eax
	test	eax, eax
	je	SHORT $LN7@tmp_rsa_cb
	push	0
	push	esi
	push	DWORD PTR _keylength$[esp+8]
	push	eax
	call	_RSA_generate_key_ex
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN5@tmp_rsa_cb
$LN6@tmp_rsa_cb:
; Line 3354
	mov	eax, DWORD PTR ?rsa_tmp@?1??tmp_rsa_cb@@9@9
	test	eax, eax
	je	SHORT $LN7@tmp_rsa_cb
; Line 3355
	push	eax
	call	_RSA_free
	add	esp, 4
$LN7@tmp_rsa_cb:
; Line 3356
	mov	DWORD PTR ?rsa_tmp@?1??tmp_rsa_cb@@9@9, 0
$LN5@tmp_rsa_cb:
; Line 3358
	cmp	DWORD PTR _s_quiet, 0
	jne	SHORT $LN8@tmp_rsa_cb
; Line 3359
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 3360
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 24					; 00000018H
$LN8@tmp_rsa_cb:
; Line 3362
	push	esi
	call	_BN_free
; Line 3364
	mov	eax, DWORD PTR ?rsa_tmp@?1??tmp_rsa_cb@@9@9
	add	esp, 4
$LN13@tmp_rsa_cb:
	pop	esi
$LN3@tmp_rsa_cb:
; Line 3365
	ret	0
_tmp_rsa_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

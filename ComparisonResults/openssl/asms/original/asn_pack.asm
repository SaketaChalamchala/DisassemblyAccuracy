; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_seq_unpack
PUBLIC	_ASN1_seq_pack
PUBLIC	_ASN1_unpack_string
PUBLIC	_ASN1_item_unpack
PUBLIC	_ASN1_pack_string
PUBLIC	_ASN1_item_pack
PUBLIC	??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_STRING_new:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_i2d_ASN1_SET:PROC
EXTRN	_d2i_ASN1_SET:PROC
EXTRN	_ASN1_item_d2i:PROC
EXTRN	_ASN1_item_i2d:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@ DB '.\crypto\asn1\a'
	DB	'sn_pack.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_pack
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_it$ = 12						; size = 4
_oct$ = 16						; size = 4
_ASN1_item_pack PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_pack.c
; Line 167
	push	esi
	push	edi
; Line 170
	mov	edi, DWORD PTR _oct$[esp+4]
	test	edi, edi
	je	SHORT $LN4@ASN1_item_
	mov	esi, DWORD PTR [edi]
	test	esi, esi
	jne	SHORT $LN6@ASN1_item_
$LN4@ASN1_item_:
; Line 171
	call	_ASN1_STRING_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN5@ASN1_item_
; Line 172
	push	172					; 000000acH
$LN12@ASN1_item_:
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	65					; 00000041H
	push	198					; 000000c6H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 173
	xor	eax, eax
	pop	edi
	pop	esi
; Line 194
	ret	0
$LN5@ASN1_item_:
; Line 175
	test	edi, edi
	je	SHORT $LN6@ASN1_item_
; Line 176
	mov	DWORD PTR [edi], esi
$LN6@ASN1_item_:
; Line 180
	mov	eax, DWORD PTR [esi+8]
	lea	edi, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN7@ASN1_item_
; Line 181
	push	eax
	call	_CRYPTO_free
	add	esp, 4
; Line 182
	mov	DWORD PTR [edi], 0
$LN7@ASN1_item_:
; Line 185
	push	DWORD PTR _it$[esp+4]
	push	edi
	push	DWORD PTR _obj$[esp+12]
	call	_ASN1_item_i2d
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi], eax
	test	eax, eax
	jne	SHORT $LN8@ASN1_item_
; Line 186
	push	186					; 000000baH
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	112					; 00000070H
	push	198					; 000000c6H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
; Line 194
	ret	0
$LN8@ASN1_item_:
; Line 189
	cmp	DWORD PTR [edi], 0
	jne	SHORT $LN9@ASN1_item_
; Line 190
	push	190					; 000000beH
; Line 191
	jmp	SHORT $LN12@ASN1_item_
$LN9@ASN1_item_:
	pop	edi
; Line 193
	mov	eax, esi
	pop	esi
; Line 194
	ret	0
_ASN1_item_pack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_pack_string
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_i2d$ = 12						; size = 4
_p$ = 16						; size = 4
_oct$ = 16						; size = 4
_ASN1_pack_string PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_pack.c
; Line 128
	push	esi
; Line 132
	mov	esi, DWORD PTR _oct$[esp]
	push	edi
	test	esi, esi
	je	SHORT $LN4@ASN1_pack_
	mov	edi, DWORD PTR [esi]
	test	edi, edi
	jne	SHORT $LN6@ASN1_pack_
$LN4@ASN1_pack_:
; Line 133
	call	_ASN1_STRING_new
	mov	edi, eax
	test	edi, edi
	jne	SHORT $LN5@ASN1_pack_
; Line 134
	push	134					; 00000086H
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	65					; 00000041H
	push	124					; 0000007cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 135
	xor	eax, eax
	pop	edi
	pop	esi
; Line 160
	ret	0
$LN5@ASN1_pack_:
; Line 137
	test	esi, esi
	je	SHORT $LN6@ASN1_pack_
; Line 138
	mov	DWORD PTR [esi], edi
$LN6@ASN1_pack_:
; Line 142
	push	0
	push	DWORD PTR _obj$[esp+8]
	call	DWORD PTR _i2d$[esp+12]
	add	esp, 8
	mov	DWORD PTR [edi], eax
	test	eax, eax
	jne	SHORT $LN7@ASN1_pack_
; Line 143
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	112					; 00000070H
; Line 144
	jmp	SHORT $LN13@ASN1_pack_
$LN7@ASN1_pack_:
; Line 146
	push	146					; 00000092H
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$[esp+4], eax
	test	eax, eax
	jne	SHORT $LN8@ASN1_pack_
; Line 147
	push	147					; 00000093H
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	65					; 00000041H
$LN13@ASN1_pack_:
	push	124					; 0000007cH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$15:
; Line 154
	test	esi, esi
	je	SHORT $LN10@ASN1_pack_
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN11@ASN1_pack_
$LN10@ASN1_pack_:
; Line 155
	push	edi
	call	_ASN1_STRING_free
	add	esp, 4
; Line 156
	test	esi, esi
	je	SHORT $LN11@ASN1_pack_
; Line 157
	mov	DWORD PTR [esi], 0
$LN11@ASN1_pack_:
	pop	edi
; Line 159
	xor	eax, eax
	pop	esi
; Line 160
	ret	0
$LN8@ASN1_pack_:
; Line 150
	mov	DWORD PTR [edi+8], eax
; Line 151
	lea	eax, DWORD PTR _p$[esp+4]
	push	eax
	push	DWORD PTR _obj$[esp+8]
	call	DWORD PTR _i2d$[esp+12]
	add	esp, 8
; Line 152
	mov	eax, edi
	pop	edi
	pop	esi
; Line 160
	ret	0
_ASN1_pack_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_unpack
_TEXT	SEGMENT
_p$ = 8							; size = 4
_oct$ = 8						; size = 4
_it$ = 12						; size = 4
_ASN1_item_unpack PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_pack.c
; Line 203
	mov	ecx, DWORD PTR _oct$[esp-4]
	push	esi
; Line 204
	push	DWORD PTR _it$[esp]
	mov	eax, DWORD PTR [ecx+8]
	push	DWORD PTR [ecx]
	mov	DWORD PTR _p$[esp+8], eax
	lea	eax, DWORD PTR _p$[esp+8]
	push	eax
	push	0
	call	_ASN1_item_d2i
	mov	esi, eax
	add	esp, 16					; 00000010H
	test	esi, esi
	jne	SHORT $LN2@ASN1_item_
; Line 205
	push	205					; 000000cdH
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	110					; 0000006eH
	push	199					; 000000c7H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 206
	mov	eax, esi
$LN2@ASN1_item_:
	pop	esi
; Line 207
	ret	0
_ASN1_item_unpack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_unpack_string
_TEXT	SEGMENT
_p$ = 8							; size = 4
_oct$ = 8						; size = 4
_d2i$ = 12						; size = 4
_ASN1_unpack_string PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_pack.c
; Line 119
	mov	ecx, DWORD PTR _oct$[esp-4]
	push	esi
	mov	eax, DWORD PTR [ecx+8]
; Line 120
	push	DWORD PTR [ecx]
	mov	DWORD PTR _p$[esp+4], eax
	lea	eax, DWORD PTR _p$[esp+4]
	push	eax
	push	0
	call	DWORD PTR _d2i$[esp+12]
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN2@ASN1_unpac
; Line 121
	push	121					; 00000079H
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	110					; 0000006eH
	push	136					; 00000088H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 122
	mov	eax, esi
$LN2@ASN1_unpac:
	pop	esi
; Line 123
	ret	0
_ASN1_unpack_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_seq_pack
_TEXT	SEGMENT
_p$ = -4						; size = 4
_safes$ = 8						; size = 4
_i2d$ = 12						; size = 4
_buf$ = 16						; size = 4
_len$ = 20						; size = 4
_ASN1_seq_pack PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_pack.c
; Line 90
	mov	eax, 4
	call	__chkstk
	push	edi
; Line 93
	push	0
	push	0
	push	16					; 00000010H
	push	DWORD PTR _i2d$[esp+16]
	push	0
	push	DWORD PTR _safes$[esp+24]
	call	_i2d_ASN1_SET
	mov	edi, eax
	add	esp, 24					; 00000018H
	test	edi, edi
	jne	SHORT $LN2@ASN1_seq_p
; Line 95
	push	95					; 0000005fH
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	112					; 00000070H
	push	126					; 0000007eH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 96
	xor	eax, eax
	pop	edi
; Line 110
	pop	ecx
	ret	0
$LN2@ASN1_seq_p:
	push	esi
; Line 98
	push	98					; 00000062H
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN3@ASN1_seq_p
; Line 99
	push	99					; 00000063H
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	65					; 00000041H
	push	126					; 0000007eH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 100
	xor	eax, eax
	pop	esi
	pop	edi
; Line 110
	pop	ecx
	ret	0
$LN3@ASN1_seq_p:
; Line 103
	push	0
	push	0
	push	16					; 00000010H
	push	DWORD PTR _i2d$[esp+20]
	lea	eax, DWORD PTR _p$[esp+28]
	mov	DWORD PTR _p$[esp+28], esi
	push	eax
	push	DWORD PTR _safes$[esp+28]
	call	_i2d_ASN1_SET
; Line 105
	mov	eax, DWORD PTR _len$[esp+32]
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN4@ASN1_seq_p
; Line 106
	mov	DWORD PTR [eax], edi
$LN4@ASN1_seq_p:
; Line 107
	mov	eax, DWORD PTR _buf$[esp+8]
	test	eax, eax
	je	SHORT $LN5@ASN1_seq_p
; Line 108
	mov	DWORD PTR [eax], esi
$LN5@ASN1_seq_p:
; Line 109
	mov	eax, esi
	pop	esi
	pop	edi
; Line 110
	pop	ecx
	ret	0
_ASN1_seq_pack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_seq_unpack
_TEXT	SEGMENT
_pbuf$ = 8						; size = 4
_buf$ = 8						; size = 4
_len$ = 12						; size = 4
_d2i$ = 16						; size = 4
_free_func$ = 20					; size = 4
_ASN1_seq_unpack PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\asn_pack.c
; Line 76
	mov	eax, DWORD PTR _buf$[esp-4]
	push	esi
; Line 77
	push	0
	push	16					; 00000010H
	push	DWORD PTR _free_func$[esp+8]
	mov	DWORD PTR _pbuf$[esp+12], eax
	lea	eax, DWORD PTR _pbuf$[esp+12]
	push	DWORD PTR _d2i$[esp+12]
	push	DWORD PTR _len$[esp+16]
	push	eax
	push	0
	call	_d2i_ASN1_SET
	mov	esi, eax
	add	esp, 28					; 0000001cH
	test	esi, esi
	jne	SHORT $LN2@ASN1_seq_u
; Line 79
	push	79					; 0000004fH
	push	OFFSET ??_C@_0BJ@GENBDNBC@?4?2crypto?2asn1?2asn_pack?4c?$AA@
	push	110					; 0000006eH
	push	127					; 0000007fH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 80
	mov	eax, esi
$LN2@ASN1_seq_u:
	pop	esi
; Line 81
	ret	0
_ASN1_seq_unpack ENDP
_TEXT	ENDS
END

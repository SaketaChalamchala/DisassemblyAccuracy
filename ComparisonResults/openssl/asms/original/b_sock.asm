; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_wsa_init_done DD 01H DUP (?)
?p_getaddrinfo@?6??BIO_get_accept_socket@@9@9 DD 01H DUP (?) ; `BIO_get_accept_socket'::`7'::p_getaddrinfo
?p_freeaddrinfo@?6??BIO_get_accept_socket@@9@9 DD 01H DUP (?) ; `BIO_get_accept_socket'::`7'::p_freeaddrinfo
?p_getnameinfo@?4??BIO_accept@@9@9 DD 01H DUP (?)	; `BIO_accept'::`5'::p_getnameinfo
_BSS	ENDS
PUBLIC	_BIO_gethostbyname
PUBLIC	_BIO_sock_error
PUBLIC	_BIO_socket_ioctl
PUBLIC	_BIO_socket_nbio
PUBLIC	_BIO_get_port
PUBLIC	_BIO_get_host_ip
PUBLIC	_BIO_get_accept_socket
PUBLIC	_BIO_accept
PUBLIC	_BIO_sock_init
PUBLIC	_BIO_sock_cleanup
PUBLIC	_BIO_set_tcp_ndelay
PUBLIC	??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@ ; `string'
PUBLIC	??_C@_05PBGCLELH@host?$DN?$AA@			; `string'
PUBLIC	??_C@_03FPEIBLKH@tcp?$AA@			; `string'
PUBLIC	??_C@_04IAFLKNP@http?$AA@			; `string'
PUBLIC	??_C@_06KAPJOFBF@telnet?$AA@			; `string'
PUBLIC	??_C@_05LBOKJHLG@socks?$AA@			; `string'
PUBLIC	??_C@_05BCHGOAMK@https?$AA@			; `string'
PUBLIC	??_C@_03DIMONNDD@ssl?$AA@			; `string'
PUBLIC	??_C@_03LMDBDBEG@ftp?$AA@			; `string'
PUBLIC	??_C@_06IBHFMCPJ@gopher?$AA@			; `string'
PUBLIC	??_C@_01GEODFPGF@?8?$AA@			; `string'
PUBLIC	??_C@_09HNNFIOJN@service?$DN?8?$AA@		; `string'
PUBLIC	??_C@_0M@MBIPAJOD@getaddrinfo?$AA@		; `string'
PUBLIC	??_C@_0N@EHOPPMLH@freeaddrinfo?$AA@		; `string'
PUBLIC	??_C@_01NBENCBCI@?$CK?$AA@			; `string'
PUBLIC	??_C@_06OGGAANOH@port?$DN?8?$AA@		; `string'
PUBLIC	??_C@_0M@NNJNLPKG@getnameinfo?$AA@		; `string'
PUBLIC	??_C@_05CCMOGDN@?$CFs?3?$CFs?$AA@		; `string'
PUBLIC	??_C@_0P@OGJLBNEC@?$CFd?4?$CFd?4?$CFd?4?$CFd?3?$CFd?$AA@ ; `string'
EXTRN	__imp__atoi:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp__accept@12:PROC
EXTRN	__imp__bind@12:PROC
EXTRN	__imp__closesocket@4:PROC
EXTRN	__imp__connect@12:PROC
EXTRN	__imp__ioctlsocket@12:PROC
EXTRN	__imp__getsockopt@20:PROC
EXTRN	__imp__htonl@4:PROC
EXTRN	__imp__htons@4:PROC
EXTRN	__imp__listen@8:PROC
EXTRN	__imp__ntohl@4:PROC
EXTRN	__imp__ntohs@4:PROC
EXTRN	__imp__setsockopt@20:PROC
EXTRN	__imp__socket@12:PROC
EXTRN	__imp__gethostbyname@4:PROC
EXTRN	__imp__getservbyname@8:PROC
EXTRN	__imp__WSAStartup@8:PROC
EXTRN	__imp__WSACleanup@0:PROC
EXTRN	__imp__WSAGetLastError@0:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_realloc:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_BIO_sock_should_retry:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_DSO_global_lookup:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?wsa_state@?1??BIO_sock_init@@9@9 DB 0190H DUP (?)	; `BIO_sock_init'::`2'::wsa_state
_BSS	ENDS
;	COMDAT ??_C@_0P@OGJLBNEC@?$CFd?4?$CFd?4?$CFd?4?$CFd?3?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@OGJLBNEC@?$CFd?4?$CFd?4?$CFd?4?$CFd?3?$CFd?$AA@ DB '%d.%d.%d.%d:'
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05CCMOGDN@?$CFs?3?$CFs?$AA@
CONST	SEGMENT
??_C@_05CCMOGDN@?$CFs?3?$CFs?$AA@ DB '%s:%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NNJNLPKG@getnameinfo?$AA@
CONST	SEGMENT
??_C@_0M@NNJNLPKG@getnameinfo?$AA@ DB 'getnameinfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OGGAANOH@port?$DN?8?$AA@
CONST	SEGMENT
??_C@_06OGGAANOH@port?$DN?8?$AA@ DB 'port=''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NBENCBCI@?$CK?$AA@
CONST	SEGMENT
??_C@_01NBENCBCI@?$CK?$AA@ DB '*', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EHOPPMLH@freeaddrinfo?$AA@
CONST	SEGMENT
??_C@_0N@EHOPPMLH@freeaddrinfo?$AA@ DB 'freeaddrinfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MBIPAJOD@getaddrinfo?$AA@
CONST	SEGMENT
??_C@_0M@MBIPAJOD@getaddrinfo?$AA@ DB 'getaddrinfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HNNFIOJN@service?$DN?8?$AA@
CONST	SEGMENT
??_C@_09HNNFIOJN@service?$DN?8?$AA@ DB 'service=''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GEODFPGF@?8?$AA@
CONST	SEGMENT
??_C@_01GEODFPGF@?8?$AA@ DB '''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06IBHFMCPJ@gopher?$AA@
CONST	SEGMENT
??_C@_06IBHFMCPJ@gopher?$AA@ DB 'gopher', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03LMDBDBEG@ftp?$AA@
CONST	SEGMENT
??_C@_03LMDBDBEG@ftp?$AA@ DB 'ftp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DIMONNDD@ssl?$AA@
CONST	SEGMENT
??_C@_03DIMONNDD@ssl?$AA@ DB 'ssl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BCHGOAMK@https?$AA@
CONST	SEGMENT
??_C@_05BCHGOAMK@https?$AA@ DB 'https', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LBOKJHLG@socks?$AA@
CONST	SEGMENT
??_C@_05LBOKJHLG@socks?$AA@ DB 'socks', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KAPJOFBF@telnet?$AA@
CONST	SEGMENT
??_C@_06KAPJOFBF@telnet?$AA@ DB 'telnet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IAFLKNP@http?$AA@
CONST	SEGMENT
??_C@_04IAFLKNP@http?$AA@ DB 'http', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FPEIBLKH@tcp?$AA@
CONST	SEGMENT
??_C@_03FPEIBLKH@tcp?$AA@ DB 'tcp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PBGCLELH@host?$DN?$AA@
CONST	SEGMENT
??_C@_05PBGCLELH@host?$DN?$AA@ DB 'host=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
CONST	SEGMENT
??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@ DB '.\crypto\bio\b_soc'
	DB	'k.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_ip
_TEXT	SEGMENT
_tmp$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_str$ = 8						; size = 4
_ip$ = 12						; size = 4
_get_ip	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 573
	mov	eax, 20					; 00000014H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+20], eax
	push	ebx
	mov	ebx, DWORD PTR _ip$[esp+20]
; Line 575
	xor	ecx, ecx
	push	esi
	push	edi
; Line 577
	mov	edi, DWORD PTR _str$[esp+28]
	mov	DWORD PTR _tmp$[esp+44], ecx
	mov	DWORD PTR _tmp$[esp+40], ecx
	mov	DWORD PTR _tmp$[esp+36], ecx
	mov	DWORD PTR _tmp$[esp+32], ecx
$LN21@get_ip:
; Line 575
	xor	esi, esi
$LL2@get_ip:
; Line 580
	movsx	edx, BYTE PTR [edi]
	lea	edi, DWORD PTR [edi+1]
; Line 581
	lea	eax, DWORD PTR [edx-48]
	cmp	eax, 9
	ja	SHORT $LN5@get_ip
; Line 583
	mov	eax, DWORD PTR _tmp$[esp+ecx*4+32]
	mov	esi, 1
	lea	eax, DWORD PTR [eax+eax*4]
	lea	eax, DWORD PTR [eax-24]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _tmp$[esp+ecx*4+32], eax
; Line 584
	cmp	eax, 255				; 000000ffH
	jbe	SHORT $LL2@get_ip
$LN12@get_ip:
	pop	edi
	pop	esi
; Line 596
	xor	eax, eax
	pop	ebx
; Line 603
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN5@get_ip:
; Line 586
	cmp	edx, 46					; 0000002eH
	jne	SHORT $LN8@get_ip
; Line 587
	test	esi, esi
	je	SHORT $LN17@get_ip
; Line 589
	cmp	ecx, 3
	je	SHORT $LN12@get_ip
; Line 591
	inc	ecx
; Line 597
	jmp	SHORT $LN21@get_ip
$LN17@get_ip:
	pop	edi
	pop	esi
; Line 588
	or	eax, -1
	pop	ebx
; Line 603
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN8@get_ip:
; Line 593
	test	edx, edx
	jne	SHORT $LN12@get_ip
	cmp	ecx, 3
	jne	SHORT $LN12@get_ip
	test	esi, esi
	je	SHORT $LN12@get_ip
; Line 598
	movzx	eax, BYTE PTR _tmp$[esp+32]
; Line 603
	mov	ecx, DWORD PTR __$ArrayPad$[esp+32]
	mov	BYTE PTR [ebx], al
	movzx	eax, BYTE PTR _tmp$[esp+36]
	mov	BYTE PTR [ebx+1], al
	movzx	eax, BYTE PTR _tmp$[esp+40]
	mov	BYTE PTR [ebx+2], al
	movzx	eax, BYTE PTR _tmp$[esp+44]
	pop	edi
	mov	BYTE PTR [ebx+3], al
	lea	eax, DWORD PTR [edx+1]
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
_get_ip	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_set_tcp_ndelay
_TEXT	SEGMENT
_s$ = 8							; size = 4
_on$ = 12						; size = 4
_BIO_set_tcp_ndelay PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 948
	mov	eax, 1
; Line 949
	ret	0
_BIO_set_tcp_ndelay ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_sock_cleanup
_TEXT	SEGMENT
_BIO_sock_cleanup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 511
	cmp	DWORD PTR _wsa_init_done, 0
	je	SHORT $LN2@BIO_sock_c
; Line 512
	mov	DWORD PTR _wsa_init_done, 0
; Line 517
	jmp	DWORD PTR __imp__WSACleanup@0
$LN2@BIO_sock_c:
; Line 525
	ret	0
_BIO_sock_cleanup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_sock_init
_TEXT	SEGMENT
_BIO_sock_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 462
	cmp	DWORD PTR _wsa_init_done, 0
	jne	SHORT $LN3@BIO_sock_i
; Line 466
	push	400					; 00000190H
	push	0
	push	OFFSET ?wsa_state@?1??BIO_sock_init@@9@9
	mov	DWORD PTR _wsa_init_done, 1
	call	_memset
	add	esp, 12					; 0000000cH
; Line 473
	push	OFFSET ?wsa_state@?1??BIO_sock_init@@9@9
	push	514					; 00000202H
	call	DWORD PTR __imp__WSAStartup@8
	test	eax, eax
	je	SHORT $LN3@BIO_sock_i
; Line 474
	call	DWORD PTR __imp__WSAGetLastError@0
; Line 475
	push	475					; 000001dbH
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	eax
	push	9
	push	2
	call	_ERR_put_error
; Line 476
	push	476					; 000001dcH
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	122					; 0000007aH
	push	112					; 00000070H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 40					; 00000028H
; Line 477
	or	eax, -1
; Line 506
	ret	0
$LN3@BIO_sock_i:
; Line 505
	mov	eax, 1
; Line 506
	ret	0
_BIO_sock_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_accept
_TEXT	SEGMENT
_sa$ = -1096						; size = 32
_s$1 = -1064						; size = 32
_h$2 = -1032						; size = 1025
__$ArrayPad$ = -4					; size = 4
_sock$ = 8						; size = 4
_addr$ = 12						; size = 4
_BIO_accept PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 806
	mov	eax, 1096				; 00000448H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1096], eax
	push	ebp
	push	esi
	mov	esi, DWORD PTR _addr$[esp+1100]
; Line 850
	lea	eax, DWORD PTR _sa$[esp+1104]
	push	eax
	lea	eax, DWORD PTR _sa$[esp+1112]
	mov	DWORD PTR _sa$[esp+1108], 28		; 0000001cH
	push	eax
	push	DWORD PTR _sock$[esp+1108]
	xorps	xmm0, xmm0
	mov	DWORD PTR _sa$[esp+1144], 0
	movups	XMMWORD PTR _sa$[esp+1120], xmm0
	movq	QWORD PTR _sa$[esp+1136], xmm0
	call	DWORD PTR __imp__accept@12
	mov	ebp, eax
; Line 856
	cmp	ebp, -1
	jne	SHORT $LN6@BIO_accept
; Line 857
	push	eax
	call	_BIO_sock_should_retry
	add	esp, 4
	test	eax, eax
	je	SHORT $LN7@BIO_accept
; Line 858
	pop	esi
	mov	eax, -2					; fffffffeH
	pop	ebp
; Line 930
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1096]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1096				; 00000448H
	ret	0
$LN7@BIO_accept:
; Line 859
	push	859					; 0000035bH
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	8
	push	2
	call	_ERR_put_error
; Line 860
	push	860					; 0000035cH
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	100					; 00000064H
	push	101					; 00000065H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 40					; 00000028H
; Line 861
	jmp	$end$27
$LN6@BIO_accept:
; Line 864
	test	esi, esi
	je	$end$27
; Line 885
	mov	eax, DWORD PTR ?p_getnameinfo@?4??BIO_accept@@9@9
	push	edi
	test	eax, eax
	jne	$LN10@BIO_accept
; Line 886
	push	OFFSET ??_C@_0M@NNJNLPKG@getnameinfo?$AA@
	call	_DSO_global_lookup
	add	esp, 4
	mov	DWORD PTR ?p_getnameinfo@?4??BIO_accept@@9@9, eax
	test	eax, eax
	jne	SHORT $LN10@BIO_accept
; Line 887
	mov	DWORD PTR ?p_getnameinfo@?4??BIO_accept@@9@9, -1
$LN3@BIO_accept:
; Line 912
	cmp	WORD PTR _sa$[esp+1112], 2
	jne	$LN24@BIO_accept
; Line 914
	push	ebx
	push	DWORD PTR _sa$[esp+1120]
	call	DWORD PTR __imp__ntohl@4
; Line 915
	push	DWORD PTR _sa$[esp+1118]
	mov	ebx, eax
	call	DWORD PTR __imp__ntohs@4
; Line 916
	cmp	DWORD PTR [esi], 0
	movzx	edi, ax
	jne	$LN17@BIO_accept
; Line 917
	push	917					; 00000395H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN18@BIO_accept
; Line 918
	push	918					; 00000396H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	65					; 00000041H
	push	101					; 00000065H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 919
	jmp	$LN25@BIO_accept
$LN10@BIO_accept:
; Line 889
	cmp	eax, -1
	je	SHORT $LN3@BIO_accept
; Line 892
	push	10					; 0000000aH
	push	32					; 00000020H
	lea	ecx, DWORD PTR _s$1[esp+1116]
	push	ecx
	push	1025					; 00000401H
	lea	ecx, DWORD PTR _h$2[esp+1124]
	push	ecx
	push	DWORD PTR _sa$[esp+1128]
	lea	ecx, DWORD PTR _sa$[esp+1136]
	push	ecx
	call	eax
	test	eax, eax
	jne	$LN3@BIO_accept
; Line 895
	lea	ecx, DWORD PTR _h$2[esp+1108]
	lea	edx, DWORD PTR [ecx+1]
	npad	3
$LL22@BIO_accept:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL22@BIO_accept
	sub	ecx, edx
	lea	edx, DWORD PTR _s$1[esp+1108]
	lea	edi, DWORD PTR [edx+1]
$LL23@BIO_accept:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL23@BIO_accept
; Line 896
	mov	eax, DWORD PTR [esi]
	sub	edx, edi
	lea	edi, DWORD PTR [ecx+2]
	add	edi, edx
; Line 897
	test	eax, eax
	je	SHORT $LN13@BIO_accept
; Line 899
	push	899					; 00000383H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	edi
	push	eax
	mov	BYTE PTR [eax], 0
	call	_CRYPTO_realloc
	add	esp, 16					; 00000010H
; Line 900
	jmp	SHORT $LN14@BIO_accept
$LN13@BIO_accept:
; Line 901
	push	901					; 00000385H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
$LN14@BIO_accept:
; Line 903
	test	eax, eax
	jne	SHORT $LN15@BIO_accept
; Line 904
	push	904					; 00000388H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	65					; 00000041H
	push	101					; 00000065H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 905
	jmp	SHORT $LN24@BIO_accept
$LN15@BIO_accept:
; Line 908
	lea	ecx, DWORD PTR _s$1[esp+1108]
	mov	DWORD PTR [esi], eax
	push	ecx
	lea	ecx, DWORD PTR _h$2[esp+1112]
	push	ecx
	push	OFFSET ??_C@_05CCMOGDN@?$CFs?3?$CFs?$AA@
	push	edi
	push	eax
	call	_BIO_snprintf
	add	esp, 20					; 00000014H
	jmp	SHORT $LN24@BIO_accept
$LN18@BIO_accept:
; Line 921
	mov	DWORD PTR [esi], eax
$LN17@BIO_accept:
; Line 923
	push	edi
	movzx	eax, bl
	push	eax
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	push	eax
	mov	eax, ebx
	shr	ebx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	push	eax
	push	ebx
	push	OFFSET ??_C@_0P@OGJLBNEC@?$CFd?4?$CFd?4?$CFd?4?$CFd?3?$CFd?$AA@
	push	24					; 00000018H
	push	DWORD PTR [esi]
	call	_BIO_snprintf
	add	esp, 32					; 00000020H
$LN25@BIO_accept:
	pop	ebx
$LN24@BIO_accept:
	pop	edi
$end$27:
; Line 930
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1104]
	mov	eax, ebp
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1096				; 00000448H
	ret	0
_BIO_accept ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_get_accept_socket
_TEXT	SEGMENT
_err_num$1$ = -112					; size = 4
_ip$ = -112						; size = 4
_res$1 = -112						; size = 4
_addrlen$1$ = -108					; size = 4
_port$ = -108						; size = 2
_ret$1$ = -104						; size = 4
_i$2 = -104						; size = 4
_host$GSCopy$1$ = -100					; size = 4
_str$1$ = -96						; size = 4
_hint$3 = -92						; size = 32
_server$ = -60						; size = 28
_client$ = -32						; size = 28
__$ArrayPad$ = -4					; size = 4
_host$ = 8						; size = 4
_bind_mode$ = 12					; size = 4
_BIO_get_accept_socket PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 606
	mov	eax, 112				; 00000070H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+112], eax
	push	ebx
	mov	ebx, DWORD PTR _host$[esp+112]
	push	ebp
	mov	DWORD PTR _host$GSCopy$1$[esp+120], ebx
; Line 615
	or	ebp, -1
	mov	DWORD PTR _ret$1$[esp+120], 0
; Line 623
	call	_BIO_sock_init
	cmp	eax, 1
	je	SHORT $LN8@BIO_get_ac
$LN74@BIO_get_ac:
	pop	ebp
; Line 624
	or	eax, -1
	pop	ebx
; Line 803
	mov	ecx, DWORD PTR __$ArrayPad$[esp+112]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 112				; 00000070H
	ret	0
$LN8@BIO_get_ac:
; Line 626
	push	ebx
	call	_BUF_strdup
	mov	edx, eax
	add	esp, 4
	mov	DWORD PTR _str$1$[esp+120], edx
	test	edx, edx
	je	SHORT $LN74@BIO_get_ac
; Line 629
	push	esi
	xor	esi, esi
; Line 630
	mov	ebx, edx
; Line 631
	cmp	BYTE PTR [edx], 0
	push	edi
	je	SHORT $LN13@BIO_get_ac
$LL4@BIO_get_ac:
; Line 632
	mov	cl, BYTE PTR [eax]
	cmp	cl, 58					; 0000003aH
	jne	SHORT $LN10@BIO_get_ac
; Line 633
	mov	esi, eax
	jmp	SHORT $LN2@BIO_get_ac
$LN10@BIO_get_ac:
; Line 634
	cmp	cl, 47					; 0000002fH
	je	SHORT $LN51@BIO_get_ac
$LN2@BIO_get_ac:
; Line 631
	inc	eax
	cmp	BYTE PTR [eax], 0
	jne	SHORT $LL4@BIO_get_ac
; Line 727
	jmp	SHORT $LN3@BIO_get_ac
$LN51@BIO_get_ac:
; Line 635
	mov	BYTE PTR [eax], 0
$LN3@BIO_get_ac:
; Line 639
	test	esi, esi
	je	SHORT $LN13@BIO_get_ac
; Line 640
	mov	BYTE PTR [esi], 0
	inc	esi
	jmp	SHORT $LN7@BIO_get_ac
$LN13@BIO_get_ac:
; Line 643
	mov	esi, edx
	xor	ebx, ebx
$LN7@BIO_get_ac:
; Line 662
	cmp	DWORD PTR ?p_getaddrinfo@?6??BIO_get_accept_socket@@9@9, 0
	mov	edi, DWORD PTR __imp__closesocket@4
	jne	$LN16@BIO_get_ac
; Line 664
	push	OFFSET ??_C@_0M@MBIPAJOD@getaddrinfo?$AA@
	call	_DSO_global_lookup
	add	esp, 4
	mov	DWORD PTR ?p_getaddrinfo@?6??BIO_get_accept_socket@@9@9, eax
	test	eax, eax
	je	SHORT $LN17@BIO_get_ac
	push	OFFSET ??_C@_0N@EHOPPMLH@freeaddrinfo?$AA@
	call	_DSO_global_lookup
	add	esp, 4
	mov	DWORD PTR ?p_freeaddrinfo@?6??BIO_get_accept_socket@@9@9, eax
	test	eax, eax
	jne	$LN16@BIO_get_ac
$LN17@BIO_get_ac:
; Line 666
	mov	DWORD PTR ?p_getaddrinfo@?6??BIO_get_accept_socket@@9@9, -1
$LN6@BIO_get_ac:
; Line 705
	lea	eax, DWORD PTR _port$[esp+128]
	push	eax
	push	esi
	call	_BIO_get_port
	add	esp, 8
	test	eax, eax
	je	$err$77
; Line 710
	push	DWORD PTR _port$[esp+128]
	xorps	xmm0, xmm0
	mov	DWORD PTR _server$[esp+156], 0
	mov	eax, 2
	movq	QWORD PTR _server$[esp+148], xmm0
	movups	XMMWORD PTR _server$[esp+132], xmm0
	mov	WORD PTR _server$[esp+132], ax
	call	DWORD PTR __imp__htons@4
	mov	WORD PTR _server$[esp+130], ax
; Line 711
	mov	DWORD PTR _addrlen$1$[esp+128], 16	; 00000010H
; Line 713
	test	ebx, ebx
	je	$LN28@BIO_get_ac
	mov	ecx, OFFSET ??_C@_01NBENCBCI@?$CK?$AA@
	mov	eax, ebx
	npad	8
$LL59@BIO_get_ac:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN60@BIO_get_ac
	test	dl, dl
	je	SHORT $LN61@BIO_get_ac
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN60@BIO_get_ac
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL59@BIO_get_ac
$LN61@BIO_get_ac:
	xor	eax, eax
	jmp	$LN62@BIO_get_ac
$LN16@BIO_get_ac:
; Line 668
	cmp	DWORD PTR ?p_getaddrinfo@?6??BIO_get_accept_socket@@9@9, -1
	je	$LN6@BIO_get_ac
; Line 676
	xorps	xmm0, xmm0
	movups	XMMWORD PTR _hint$3[esp+128], xmm0
; Line 677
	mov	DWORD PTR _hint$3[esp+128], 1
	movups	XMMWORD PTR _hint$3[esp+144], xmm0
; Line 678
	test	ebx, ebx
	je	SHORT $LN68@BIO_get_ac
; Line 679
	push	58					; 0000003aH
	push	ebx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN20@BIO_get_ac
; Line 680
	xor	eax, eax
; Line 683
	mov	DWORD PTR _hint$3[esp+132], 23		; 00000017H
	cmp	BYTE PTR [ebx+1], al
	cmove	ebx, eax
	jmp	SHORT $LN68@BIO_get_ac
$LN20@BIO_get_ac:
; Line 687
	cmp	BYTE PTR [ebx], 42			; 0000002aH
	jne	SHORT $LN68@BIO_get_ac
	cmp	BYTE PTR [ebx+1], 0
	jne	SHORT $LN68@BIO_get_ac
; Line 688
	mov	DWORD PTR _hint$3[esp+132], 2
; Line 689
	xor	ebx, ebx
$LN68@BIO_get_ac:
; Line 693
	lea	eax, DWORD PTR _res$1[esp+128]
	push	eax
	lea	eax, DWORD PTR _hint$3[esp+132]
	push	eax
	push	esi
	push	ebx
	call	DWORD PTR ?p_getaddrinfo@?6??BIO_get_accept_socket@@9@9
	test	eax, eax
	jne	$LN6@BIO_get_ac
; Line 696
	mov	esi, DWORD PTR _res$1[esp+128]
; Line 698
	lea	eax, DWORD PTR _server$[esp+128]
	mov	ecx, 28					; 0000001cH
	cmp	DWORD PTR [esi+16], ecx
	cmovbe	ecx, DWORD PTR [esi+16]
	push	ecx
	push	DWORD PTR [esi+24]
	mov	DWORD PTR _addrlen$1$[esp+136], ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 700
	push	esi
	call	DWORD PTR ?p_freeaddrinfo@?6??BIO_get_accept_socket@@9@9
	jmp	SHORT $LN50@BIO_get_ac
$LN60@BIO_get_ac:
; Line 713
	sbb	eax, eax
	or	eax, 1
$LN62@BIO_get_ac:
	test	eax, eax
	je	SHORT $LN28@BIO_get_ac
; Line 716
	lea	eax, DWORD PTR _ip$[esp+128]
	push	eax
	push	ebx
	call	_BIO_get_host_ip
	add	esp, 8
	test	eax, eax
	je	$err$77
; Line 718
	mov	eax, DWORD PTR _ip$[esp+128]
	movzx	ecx, al
; Line 722
	shl	ecx, 8
	movzx	eax, ah
	or	ecx, eax
	movzx	eax, BYTE PTR _ip$[esp+130]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR _ip$[esp+131]
	shl	ecx, 8
	or	ecx, eax
	push	ecx
	call	DWORD PTR __imp__htonl@4
	mov	DWORD PTR _server$[esp+132], eax
	jmp	SHORT $LN50@BIO_get_ac
$LN28@BIO_get_ac:
; Line 714
	mov	DWORD PTR _server$[esp+132], 0
$LN50@BIO_get_ac:
; Line 726
	movzx	eax, WORD PTR _server$[esp+128]
	mov	edi, DWORD PTR __imp__socket@12
	push	6
	push	1
	push	eax
	call	edi
	mov	ebp, eax
; Line 727
	cmp	ebp, -1
	je	$LN52@BIO_get_ac
	mov	esi, DWORD PTR _bind_mode$[esp+124]
	npad	5
$again$78:
; Line 734
	cmp	esi, 2
	jne	SHORT $LN31@BIO_get_ac
; Line 737
	push	4
	lea	eax, DWORD PTR _i$2[esp+132]
	mov	DWORD PTR _i$2[esp+132], 1
	push	eax
	push	4
	push	65535					; 0000ffffH
	push	ebp
	call	DWORD PTR __imp__setsockopt@20
	mov	DWORD PTR _ret$1$[esp+128], eax
; Line 738
	xor	esi, esi
$LN31@BIO_get_ac:
; Line 741
	push	DWORD PTR _addrlen$1$[esp+128]
	lea	eax, DWORD PTR _server$[esp+132]
	push	eax
	push	ebp
	call	DWORD PTR __imp__bind@12
	cmp	eax, -1
	jne	$LN32@BIO_get_ac
; Line 743
	call	DWORD PTR __imp__WSAGetLastError@0
	mov	DWORD PTR _err_num$1$[esp+128], eax
; Line 744
	cmp	esi, 1
	jne	$LN73@BIO_get_ac
	cmp	eax, 10048				; 00002740H
	jne	$LN73@BIO_get_ac
; Line 754
	mov	eax, DWORD PTR _server$[esp+152]
	mov	DWORD PTR _client$[esp+152], eax
	movups	xmm0, XMMWORD PTR _server$[esp+128]
	movups	XMMWORD PTR _client$[esp+128], xmm0
	movq	xmm0, QWORD PTR _server$[esp+144]
	movq	QWORD PTR _client$[esp+144], xmm0
; Line 755
	test	ebx, ebx
	je	SHORT $LN35@BIO_get_ac
	mov	ecx, OFFSET ??_C@_01NBENCBCI@?$CK?$AA@
	mov	eax, ebx
$LL63@BIO_get_ac:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN64@BIO_get_ac
	test	dl, dl
	je	SHORT $LN65@BIO_get_ac
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN64@BIO_get_ac
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL63@BIO_get_ac
$LN65@BIO_get_ac:
	xor	eax, eax
	jmp	SHORT $LN66@BIO_get_ac
$LN64@BIO_get_ac:
	sbb	eax, eax
	or	eax, 1
$LN66@BIO_get_ac:
	test	eax, eax
	jne	SHORT $LN39@BIO_get_ac
$LN35@BIO_get_ac:
; Line 757
	mov	ax, WORD PTR _server$[esp+128]
	cmp	ax, 23					; 00000017H
	jne	SHORT $LN36@BIO_get_ac
; Line 758
	xorps	xmm0, xmm0
	movups	XMMWORD PTR _client$[esp+136], xmm0
; Line 760
	mov	BYTE PTR _client$[esp+151], 1
; Line 761
	jmp	SHORT $LN39@BIO_get_ac
$LN36@BIO_get_ac:
; Line 763
	cmp	ax, 2
	jne	$LN71@BIO_get_ac
; Line 764
	push	2130706433				; 7f000001H
	call	DWORD PTR __imp__htonl@4
	mov	DWORD PTR _client$[esp+132], eax
$LN39@BIO_get_ac:
; Line 768
	movzx	eax, WORD PTR _client$[esp+128]
	push	6
	push	1
	push	eax
	call	edi
	mov	edi, eax
; Line 769
	cmp	edi, -1
	je	$LN69@BIO_get_ac
; Line 771
	push	DWORD PTR _addrlen$1$[esp+128]
	lea	eax, DWORD PTR _client$[esp+132]
	push	eax
	push	edi
	call	DWORD PTR __imp__connect@12
; Line 772
	push	edi
	mov	edi, DWORD PTR __imp__closesocket@4
	mov	esi, eax
	call	edi
; Line 773
	cmp	esi, -1
	jne	$LN70@BIO_get_ac
; Line 775
	push	ebp
	mov	esi, 2
	call	edi
	movzx	eax, WORD PTR _server$[esp+128]
	mov	edi, DWORD PTR __imp__socket@12
	push	6
	push	1
	push	eax
	call	edi
	mov	ebp, eax
	cmp	ebp, -1
	jne	$again$78
$LN52@BIO_get_ac:
; Line 728
	push	728					; 000002d8H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	4
	push	2
	call	_ERR_put_error
; Line 729
	push	OFFSET ??_C@_01GEODFPGF@?8?$AA@
	push	DWORD PTR _host$GSCopy$1$[esp+152]
	push	OFFSET ??_C@_06OGGAANOH@port?$DN?8?$AA@
	push	3
	call	_ERR_add_error_data
; Line 730
	push	730					; 000002daH
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	118					; 00000076H
$LN75@BIO_get_ac:
	push	105					; 00000069H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 56					; 00000038H
$LN71@BIO_get_ac:
	mov	edi, DWORD PTR __imp__closesocket@4
$err$77:
; Line 797
	push	DWORD PTR _str$1$[esp+128]
	call	_CRYPTO_free
	add	esp, 4
; Line 798
	cmp	DWORD PTR _ret$1$[esp+128], 0
	jne	SHORT $LN44@BIO_get_ac
	cmp	ebp, -1
	je	SHORT $LN44@BIO_get_ac
; Line 799
	push	ebp
	call	edi
; Line 800
	or	ebp, -1
$LN44@BIO_get_ac:
; Line 803
	mov	ecx, DWORD PTR __$ArrayPad$[esp+128]
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 112				; 00000070H
	ret	0
$LN69@BIO_get_ac:
	mov	eax, DWORD PTR _err_num$1$[esp+128]
$LN73@BIO_get_ac:
	mov	edi, DWORD PTR __imp__closesocket@4
$LN41@BIO_get_ac:
; Line 783
	push	783					; 0000030fH
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	eax
	push	6
	push	2
	call	_ERR_put_error
; Line 784
	push	OFFSET ??_C@_01GEODFPGF@?8?$AA@
	push	DWORD PTR _host$GSCopy$1$[esp+152]
	push	OFFSET ??_C@_06OGGAANOH@port?$DN?8?$AA@
	push	3
	call	_ERR_add_error_data
; Line 785
	push	785					; 00000311H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	117					; 00000075H
	push	105					; 00000069H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 56					; 00000038H
; Line 786
	jmp	SHORT $err$77
$LN70@BIO_get_ac:
	mov	eax, DWORD PTR _err_num$1$[esp+128]
	jmp	SHORT $LN41@BIO_get_ac
$LN32@BIO_get_ac:
; Line 788
	push	2147483647				; 7fffffffH
	push	ebp
	call	DWORD PTR __imp__listen@8
	cmp	eax, -1
	jne	SHORT $LN42@BIO_get_ac
; Line 789
	push	789					; 00000315H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	6
	push	2
	call	_ERR_put_error
; Line 790
	push	OFFSET ??_C@_01GEODFPGF@?8?$AA@
	push	DWORD PTR _host$GSCopy$1$[esp+152]
	push	OFFSET ??_C@_06OGGAANOH@port?$DN?8?$AA@
	push	3
	call	_ERR_add_error_data
; Line 791
	push	791					; 00000317H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	119					; 00000077H
; Line 792
	jmp	$LN75@BIO_get_ac
$LN42@BIO_get_ac:
; Line 794
	mov	DWORD PTR _ret$1$[esp+128], 1
	jmp	$LN71@BIO_get_ac
_BIO_get_accept_socket ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_get_host_ip
_TEXT	SEGMENT
_str$ = 8						; size = 4
_ip$ = 12						; size = 4
_BIO_get_host_ip PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 115
	push	ebx
; Line 121
	mov	ebx, DWORD PTR _ip$[esp]
	push	ebp
	push	esi
	mov	esi, DWORD PTR _str$[esp+8]
	mov	ebp, 1
	push	edi
	push	ebx
	push	esi
	call	_get_ip
	mov	edi, eax
	add	esp, 8
; Line 122
	test	edi, edi
	jns	SHORT $LN5@BIO_get_ho
; Line 123
	push	123					; 0000007bH
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	108					; 0000006cH
	push	106					; 0000006aH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 124
	jmp	$LN24@BIO_get_ho
$LN5@BIO_get_ho:
; Line 131
	call	_BIO_sock_init
	cmp	eax, 1
	jne	$LN26@BIO_get_ho
; Line 138
	test	edi, edi
	jle	SHORT $LN7@BIO_get_ho
; Line 139
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 168
	ret	0
$LN7@BIO_get_ho:
; Line 142
	push	142					; 0000008eH
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	22					; 00000016H
	push	9
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 377
	push	esi
	call	DWORD PTR __imp__gethostbyname@4
; Line 144
	mov	ecx, eax
; Line 145
	test	ecx, ecx
	jne	SHORT $LN8@BIO_get_ho
; Line 146
	push	146					; 00000092H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	102					; 00000066H
	push	106					; 0000006aH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 147
	jmp	SHORT $LN25@BIO_get_ho
$LN8@BIO_get_ho:
; Line 151
	cmp	WORD PTR [ecx+8], 2
	je	SHORT $LN9@BIO_get_ho
; Line 152
	push	153					; 00000099H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	107					; 0000006bH
	push	106					; 0000006aH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 154
	jmp	SHORT $LN25@BIO_get_ho
$LN9@BIO_get_ho:
; Line 157
	mov	eax, DWORD PTR [ecx+12]
; Line 158
	xor	ebp, ebp
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax]
	mov	BYTE PTR [ebx], al
	mov	eax, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax+1]
	mov	BYTE PTR [ebx+1], al
	mov	eax, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax+2]
	mov	BYTE PTR [ebx+2], al
	mov	eax, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [eax]
	movzx	eax, BYTE PTR [eax+3]
	mov	BYTE PTR [ebx+3], al
$LN25@BIO_get_ho:
; Line 162
	push	162					; 000000a2H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	22					; 00000016H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 163
	test	ebp, ebp
	je	SHORT $LN11@BIO_get_ho
$LN24@BIO_get_ho:
; Line 164
	push	esi
	push	OFFSET ??_C@_05PBGCLELH@host?$DN?$AA@
	push	2
	call	_ERR_add_error_data
	add	esp, 12					; 0000000cH
$LN26@BIO_get_ho:
; Line 165
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 168
	ret	0
$LN11@BIO_get_ho:
	pop	edi
	pop	esi
	pop	ebp
; Line 167
	mov	eax, 1
	pop	ebx
; Line 168
	ret	0
_BIO_get_host_ip ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_get_port
_TEXT	SEGMENT
_str$ = 8						; size = 4
_port_ptr$ = 12						; size = 4
_BIO_get_port PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 171
	push	edi
; Line 175
	mov	edi, DWORD PTR _str$[esp]
	test	edi, edi
	jne	SHORT $LN2@BIO_get_po
; Line 176
	push	176					; 000000b0H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	113					; 00000071H
	push	107					; 0000006bH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 177
	xor	eax, eax
	pop	edi
; Line 223
	ret	0
$LN2@BIO_get_po:
	push	ebx
; Line 179
	push	edi
	call	DWORD PTR __imp__atoi
	add	esp, 4
; Line 180
	test	eax, eax
	je	SHORT $LN3@BIO_get_po
; Line 181
	mov	ecx, DWORD PTR _port_ptr$[esp+4]
	pop	ebx
	pop	edi
	mov	WORD PTR [ecx], ax
; Line 222
	mov	eax, 1
; Line 223
	ret	0
$LN3@BIO_get_po:
	push	esi
; Line 183
	push	183					; 000000b7H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	23					; 00000017H
	push	9
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 189
	push	OFFSET ??_C@_03FPEIBLKH@tcp?$AA@
	push	edi
	call	DWORD PTR __imp__getservbyname@8
; Line 193
	mov	ebx, DWORD PTR _port_ptr$[esp+8]
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN5@BIO_get_po
; Line 194
	movzx	ecx, WORD PTR [esi+8]
	push	ecx
	call	DWORD PTR __imp__ntohs@4
	mov	WORD PTR [ebx], ax
$LN5@BIO_get_po:
; Line 195
	push	195					; 000000c3H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	push	23					; 00000017H
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 196
	test	esi, esi
	pop	esi
	jne	SHORT $LN20@BIO_get_po
; Line 197
	mov	ecx, OFFSET ??_C@_04IAFLKNP@http?$AA@
	mov	eax, edi
$LL22@BIO_get_po:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN23@BIO_get_po
	test	dl, dl
	je	SHORT $LN24@BIO_get_po
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN23@BIO_get_po
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL22@BIO_get_po
$LN24@BIO_get_po:
	xor	eax, eax
	jmp	SHORT $LN25@BIO_get_po
$LN23@BIO_get_po:
	sbb	eax, eax
	or	eax, 1
$LN25@BIO_get_po:
	test	eax, eax
	jne	SHORT $LN7@BIO_get_po
; Line 198
	mov	eax, 80					; 00000050H
; Line 208
	mov	WORD PTR [ebx], ax
$LN20@BIO_get_po:
; Line 222
	pop	ebx
	mov	eax, 1
	pop	edi
; Line 223
	ret	0
$LN7@BIO_get_po:
; Line 199
	mov	ecx, OFFSET ??_C@_06KAPJOFBF@telnet?$AA@
	mov	eax, edi
$LL26@BIO_get_po:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN27@BIO_get_po
	test	dl, dl
	je	SHORT $LN28@BIO_get_po
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN27@BIO_get_po
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL26@BIO_get_po
$LN28@BIO_get_po:
	xor	eax, eax
	jmp	SHORT $LN29@BIO_get_po
$LN27@BIO_get_po:
	sbb	eax, eax
	or	eax, 1
$LN29@BIO_get_po:
	test	eax, eax
	jne	SHORT $LN9@BIO_get_po
; Line 200
	mov	eax, 23					; 00000017H
; Line 208
	mov	WORD PTR [ebx], ax
; Line 222
	mov	eax, 1
	pop	ebx
	pop	edi
; Line 223
	ret	0
$LN9@BIO_get_po:
; Line 201
	mov	ecx, OFFSET ??_C@_05LBOKJHLG@socks?$AA@
	mov	eax, edi
$LL30@BIO_get_po:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN31@BIO_get_po
	test	dl, dl
	je	SHORT $LN32@BIO_get_po
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN31@BIO_get_po
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL30@BIO_get_po
$LN32@BIO_get_po:
	xor	eax, eax
	jmp	SHORT $LN33@BIO_get_po
$LN31@BIO_get_po:
	sbb	eax, eax
	or	eax, 1
$LN33@BIO_get_po:
	test	eax, eax
	jne	SHORT $LN11@BIO_get_po
; Line 202
	mov	eax, 1080				; 00000438H
; Line 208
	mov	WORD PTR [ebx], ax
; Line 222
	mov	eax, 1
	pop	ebx
	pop	edi
; Line 223
	ret	0
$LN11@BIO_get_po:
; Line 203
	mov	ecx, OFFSET ??_C@_05BCHGOAMK@https?$AA@
	mov	eax, edi
$LL34@BIO_get_po:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN35@BIO_get_po
	test	dl, dl
	je	SHORT $LN36@BIO_get_po
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN35@BIO_get_po
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL34@BIO_get_po
$LN36@BIO_get_po:
	xor	eax, eax
	jmp	SHORT $LN37@BIO_get_po
$LN35@BIO_get_po:
	sbb	eax, eax
	or	eax, 1
$LN37@BIO_get_po:
	test	eax, eax
	je	SHORT $LN51@BIO_get_po
; Line 205
	mov	ecx, OFFSET ??_C@_03DIMONNDD@ssl?$AA@
	mov	eax, edi
$LL38@BIO_get_po:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN39@BIO_get_po
	test	dl, dl
	je	SHORT $LN40@BIO_get_po
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN39@BIO_get_po
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL38@BIO_get_po
$LN40@BIO_get_po:
	xor	eax, eax
	jmp	SHORT $LN41@BIO_get_po
$LN39@BIO_get_po:
	sbb	eax, eax
	or	eax, 1
$LN41@BIO_get_po:
	test	eax, eax
	jne	SHORT $LN15@BIO_get_po
$LN51@BIO_get_po:
; Line 206
	mov	eax, 443				; 000001bbH
; Line 208
	mov	WORD PTR [ebx], ax
; Line 222
	mov	eax, 1
	pop	ebx
	pop	edi
; Line 223
	ret	0
$LN15@BIO_get_po:
; Line 207
	mov	ecx, OFFSET ??_C@_03LMDBDBEG@ftp?$AA@
	mov	eax, edi
$LL42@BIO_get_po:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN43@BIO_get_po
	test	dl, dl
	je	SHORT $LN44@BIO_get_po
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN43@BIO_get_po
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL42@BIO_get_po
$LN44@BIO_get_po:
	xor	eax, eax
	jmp	SHORT $LN45@BIO_get_po
$LN43@BIO_get_po:
	sbb	eax, eax
	or	eax, 1
$LN45@BIO_get_po:
	test	eax, eax
	jne	SHORT $LN17@BIO_get_po
; Line 208
	mov	eax, 21					; 00000015H
	mov	WORD PTR [ebx], ax
; Line 222
	mov	eax, 1
	pop	ebx
	pop	edi
; Line 223
	ret	0
$LN17@BIO_get_po:
; Line 209
	mov	ecx, OFFSET ??_C@_06IBHFMCPJ@gopher?$AA@
	mov	eax, edi
$LL46@BIO_get_po:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN47@BIO_get_po
	test	dl, dl
	je	SHORT $LN48@BIO_get_po
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN47@BIO_get_po
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL46@BIO_get_po
$LN48@BIO_get_po:
	xor	eax, eax
	jmp	SHORT $LN49@BIO_get_po
$LN47@BIO_get_po:
	sbb	eax, eax
	or	eax, 1
$LN49@BIO_get_po:
	test	eax, eax
	jne	SHORT $LN19@BIO_get_po
; Line 210
	mov	eax, 70					; 00000046H
	mov	WORD PTR [ebx], ax
; Line 222
	mov	eax, 1
	pop	ebx
	pop	edi
; Line 223
	ret	0
$LN19@BIO_get_po:
; Line 216
	push	216					; 000000d8H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	3
	push	2
	call	_ERR_put_error
; Line 217
	push	OFFSET ??_C@_01GEODFPGF@?8?$AA@
	push	edi
	push	OFFSET ??_C@_09HNNFIOJN@service?$DN?8?$AA@
	push	3
	call	_ERR_add_error_data
	add	esp, 36					; 00000024H
; Line 218
	xor	eax, eax
	pop	ebx
	pop	edi
; Line 223
	ret	0
_BIO_get_port ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_socket_nbio
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
_mode$ = 12						; size = 4
_BIO_socket_nbio PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 956
	mov	eax, DWORD PTR _mode$[esp-4]
	push	esi
	mov	DWORD PTR _l$[esp], eax
; Line 560
	lea	eax, DWORD PTR _l$[esp]
	push	eax
	push	-2147195266				; 8004667eH
	push	DWORD PTR _s$[esp+8]
	call	DWORD PTR __imp__ioctlsocket@12
	mov	esi, eax
; Line 562
	test	esi, esi
	jns	SHORT $LN4@BIO_socket
; Line 563
	push	563					; 00000233H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	5
	push	2
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN4@BIO_socket:
; Line 960
	xor	eax, eax
	test	esi, esi
	pop	esi
	sete	al
; Line 961
	ret	0
_BIO_socket_nbio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_socket_ioctl
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_type$ = 12						; size = 4
_arg$ = 16						; size = 4
_BIO_socket_ioctl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 530
	push	esi
; Line 560
	push	DWORD PTR _arg$[esp]
	push	DWORD PTR _type$[esp+4]
	push	DWORD PTR _fd$[esp+8]
	call	DWORD PTR __imp__ioctlsocket@12
	mov	esi, eax
; Line 562
	test	esi, esi
	jns	SHORT $LN2@BIO_socket
; Line 563
	push	563					; 00000233H
	push	OFFSET ??_C@_0BG@HKLFKFMO@?4?2crypto?2bio?2b_sock?4c?$AA@
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	5
	push	2
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 564
	mov	eax, esi
$LN2@BIO_socket:
	pop	esi
; Line 565
	ret	0
_BIO_socket_ioctl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_sock_error
_TEXT	SEGMENT
_size$ = -8						; size = 4
_j$ = -4						; size = 4
_sock$ = 8						; size = 4
_BIO_sock_error PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 226
	mov	eax, 8
	call	__chkstk
; Line 245
	lea	eax, DWORD PTR _size$[esp+8]
	mov	DWORD PTR _size$[esp+8], 4
	push	eax
	lea	eax, DWORD PTR _j$[esp+12]
	push	eax
	push	4103					; 00001007H
	push	65535					; 0000ffffH
	push	DWORD PTR _sock$[esp+20]
	call	DWORD PTR __imp__getsockopt@20
; Line 246
	mov	ecx, DWORD PTR _j$[esp+8]
	test	eax, eax
	mov	edx, 1
	cmovs	ecx, edx
	mov	eax, ecx
; Line 250
	add	esp, 8
	ret	0
_BIO_sock_error ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_gethostbyname
_TEXT	SEGMENT
_name$ = 8						; size = 4
_BIO_gethostbyname PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_sock.c
; Line 377
	push	DWORD PTR _name$[esp-4]
	call	DWORD PTR __imp__gethostbyname@4
; Line 455
	ret	0
_BIO_gethostbyname ENDP
_TEXT	ENDS
END

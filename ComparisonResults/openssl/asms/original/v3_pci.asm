; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\v3_pci.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_v3_pci
EXTRN	_PROXY_CERT_INFO_EXTENSION_it:PROC
CONST	SEGMENT
_v3_pci	DD	0297H
	DD	00H
	DD	FLAT:_PROXY_CERT_INFO_EXTENSION_it
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_i2r_pci
	DD	FLAT:_r2i_pci
	DD	00H
CONST	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0BM@BMCPHDD@?$CF?$CKsPath?5Length?5Constraint?3?5?$AA@ ; `string'
PUBLIC	??_C@_08MAJEGHKB@infinite?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BF@CGHJNACM@?$CF?$CKsPolicy?5Language?3?5?$AA@ ; `string'
PUBLIC	??_C@_0BE@HDJEDONA@?$CF?$CKsPolicy?5Text?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_08JGCCIMAA@language?$AA@			; `string'
PUBLIC	??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@ ; `string'
PUBLIC	??_C@_07BDICHDDB@?0value?3?$AA@			; `string'
PUBLIC	??_C@_06FONLLLNC@?0name?3?$AA@			; `string'
PUBLIC	??_C@_08PCLJGJAL@section?3?$AA@			; `string'
PUBLIC	??_C@_07OGCPICFF@pathlen?$AA@			; `string'
PUBLIC	??_C@_06NJNJNICG@policy?$AA@			; `string'
PUBLIC	??_C@_04ODCMNEMO@hex?3?$AA@			; `string'
PUBLIC	??_C@_05BOPHDICO@file?3?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_05FHIGHPDA@text?3?$AA@			; `string'
EXTRN	__imp__strncmp:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_realloc:PROC
EXTRN	_BIO_test_flags:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_ASN1_INTEGER_free:PROC
EXTRN	_ASN1_OCTET_STRING_new:PROC
EXTRN	_ASN1_OCTET_STRING_free:PROC
EXTRN	_i2a_ASN1_INTEGER:PROC
EXTRN	_i2a_ASN1_OBJECT:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_txt2obj:PROC
EXTRN	_PROXY_CERT_INFO_EXTENSION_new:PROC
EXTRN	_X509V3_conf_free:PROC
EXTRN	_X509V3_get_value_int:PROC
EXTRN	_X509V3_get_section:PROC
EXTRN	_X509V3_section_free:PROC
EXTRN	_X509V3_parse_list:PROC
EXTRN	_string_to_hex:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_05FHIGHPDA@text?3?$AA@
CONST	SEGMENT
??_C@_05FHIGHPDA@text?3?$AA@ DB 'text:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BOPHDICO@file?3?$AA@
CONST	SEGMENT
??_C@_05BOPHDICO@file?3?$AA@ DB 'file:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04ODCMNEMO@hex?3?$AA@
CONST	SEGMENT
??_C@_04ODCMNEMO@hex?3?$AA@ DB 'hex:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NJNJNICG@policy?$AA@
CONST	SEGMENT
??_C@_06NJNJNICG@policy?$AA@ DB 'policy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OGCPICFF@pathlen?$AA@
CONST	SEGMENT
??_C@_07OGCPICFF@pathlen?$AA@ DB 'pathlen', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PCLJGJAL@section?3?$AA@
CONST	SEGMENT
??_C@_08PCLJGJAL@section?3?$AA@ DB 'section:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FONLLLNC@?0name?3?$AA@
CONST	SEGMENT
??_C@_06FONLLLNC@?0name?3?$AA@ DB ',name:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BDICHDDB@?0value?3?$AA@
CONST	SEGMENT
??_C@_07BDICHDDB@?0value?3?$AA@ DB ',value:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@ DB '.\crypto\x509v3'
	DB	'\v3_pci.c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08JGCCIMAA@language?$AA@
CONST	SEGMENT
??_C@_08JGCCIMAA@language?$AA@ DB 'language', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HDJEDONA@?$CF?$CKsPolicy?5Text?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BE@HDJEDONA@?$CF?$CKsPolicy?5Text?3?5?$CFs?6?$AA@ DB '%*sPolicy Te'
	DB	'xt: %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CGHJNACM@?$CF?$CKsPolicy?5Language?3?5?$AA@
CONST	SEGMENT
??_C@_0BF@CGHJNACM@?$CF?$CKsPolicy?5Language?3?5?$AA@ DB '%*sPolicy Langu'
	DB	'age: ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MAJEGHKB@infinite?$AA@
CONST	SEGMENT
??_C@_08MAJEGHKB@infinite?$AA@ DB 'infinite', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BMCPHDD@?$CF?$CKsPath?5Length?5Constraint?3?5?$AA@
CONST	SEGMENT
??_C@_0BM@BMCPHDD@?$CF?$CKsPath?5Length?5Constraint?3?5?$AA@ DB '%*sPath '
	DB	'Length Constraint: ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _process_pci_value
_TEXT	SEGMENT
tv474 = -2069						; size = 1
tv226 = -2069						; size = 1
tv199 = -2069						; size = 1
tv82 = -2069						; size = 1
_policy$GSCopy$1$ = -2068				; size = 4
_val_len$1 = -2068					; size = 4
_free_policy$1$ = -2064					; size = 4
_val$GSCopy$1$ = -2056					; size = 4
_buf$2 = -2052						; size = 2048
__$ArrayPad$ = -4					; size = 4
_val$ = 8						; size = 4
_language$ = 12						; size = 4
_pathlen$ = 16						; size = 4
_policy$ = 20						; size = 4
_process_pci_value PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\v3_pci.c
; Line 79
	mov	eax, 2072				; 00000818H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+2072], eax
	push	ebx
	mov	ebx, DWORD PTR _policy$[esp+2072]
; Line 82
	mov	edx, OFFSET ??_C@_08JGCCIMAA@language?$AA@
	push	ebp
	mov	ebp, DWORD PTR _pathlen$[esp+2076]
	push	esi
	mov	esi, DWORD PTR _val$[esp+2080]
	push	edi
	mov	edi, DWORD PTR _language$[esp+2084]
	mov	DWORD PTR _val$GSCopy$1$[esp+2088], esi
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, ecx
	mov	DWORD PTR _policy$GSCopy$1$[esp+2088], ebx
	mov	DWORD PTR _free_policy$1$[esp+2088], 0
$LL43@process_pc:
	mov	bl, BYTE PTR [eax]
	mov	BYTE PTR tv474[esp+2088], bl
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN44@process_pc
	test	bl, bl
	je	SHORT $LN45@process_pc
	mov	bl, BYTE PTR [eax+1]
	mov	BYTE PTR tv82[esp+2088], bl
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN44@process_pc
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL43@process_pc
$LN45@process_pc:
	xor	eax, eax
	jmp	SHORT $LN46@process_pc
$LN44@process_pc:
	sbb	eax, eax
	or	eax, 1
$LN46@process_pc:
	test	eax, eax
	jne	$LN4@process_pc
; Line 83
	cmp	DWORD PTR [edi], eax
	je	SHORT $LN6@process_pc
; Line 84
	push	85					; 00000055H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	155					; 0000009bH
	push	150					; 00000096H
	push	34					; 00000022H
	call	_ERR_put_error
; Line 86
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_07BDICHDDB@?0value?3?$AA@
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06FONLLLNC@?0name?3?$AA@
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_08PCLJGJAL@section?3?$AA@
	push	6
	call	_ERR_add_error_data
	add	esp, 48					; 00000030H
; Line 87
	xor	eax, eax
	jmp	$LN1@process_pc
$LN6@process_pc:
; Line 89
	push	0
	push	DWORD PTR [esi+8]
	call	_OBJ_txt2obj
	add	esp, 8
	mov	DWORD PTR [edi], eax
	test	eax, eax
	jne	$LN31@process_pc
; Line 90
	push	91					; 0000005bH
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	110					; 0000006eH
	push	150					; 00000096H
	push	34					; 00000022H
	call	_ERR_put_error
; Line 92
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_07BDICHDDB@?0value?3?$AA@
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06FONLLLNC@?0name?3?$AA@
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_08PCLJGJAL@section?3?$AA@
	push	6
	call	_ERR_add_error_data
	add	esp, 48					; 00000030H
; Line 93
	xor	eax, eax
	jmp	$LN1@process_pc
$LN4@process_pc:
; Line 95
	mov	edx, OFFSET ??_C@_07OGCPICFF@pathlen?$AA@
	mov	eax, ecx
$LL47@process_pc:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	mov	BYTE PTR tv199[esp+2088], bl
	mov	ebx, DWORD PTR _policy$GSCopy$1$[esp+2088]
	jne	SHORT $LN48@process_pc
	cmp	BYTE PTR tv199[esp+2088], 0
	je	SHORT $LN49@process_pc
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	mov	BYTE PTR tv226[esp+2088], bl
	mov	ebx, DWORD PTR _policy$GSCopy$1$[esp+2088]
	jne	SHORT $LN48@process_pc
	add	eax, 2
	add	edx, 2
	cmp	BYTE PTR tv226[esp+2088], 0
	jne	SHORT $LL47@process_pc
$LN49@process_pc:
	xor	eax, eax
	jmp	SHORT $LN50@process_pc
$LN48@process_pc:
	sbb	eax, eax
	or	eax, 1
$LN50@process_pc:
	test	eax, eax
	jne	$LN8@process_pc
; Line 96
	cmp	DWORD PTR [ebp], eax
	je	SHORT $LN10@process_pc
; Line 97
	push	98					; 00000062H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	157					; 0000009dH
	push	150					; 00000096H
	push	34					; 00000022H
	call	_ERR_put_error
; Line 99
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_07BDICHDDB@?0value?3?$AA@
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06FONLLLNC@?0name?3?$AA@
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_08PCLJGJAL@section?3?$AA@
	push	6
	call	_ERR_add_error_data
	add	esp, 48					; 00000030H
; Line 100
	xor	eax, eax
	jmp	$LN1@process_pc
$LN10@process_pc:
; Line 102
	push	ebp
	push	esi
	call	_X509V3_get_value_int
	add	esp, 8
	test	eax, eax
	jne	$LN31@process_pc
; Line 103
	push	104					; 00000068H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	156					; 0000009cH
	push	150					; 00000096H
	push	34					; 00000022H
	call	_ERR_put_error
; Line 105
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_07BDICHDDB@?0value?3?$AA@
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06FONLLLNC@?0name?3?$AA@
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_08PCLJGJAL@section?3?$AA@
	push	6
	call	_ERR_add_error_data
	add	esp, 48					; 00000030H
; Line 106
	xor	eax, eax
	jmp	$LN1@process_pc
$LN8@process_pc:
; Line 108
	mov	eax, OFFSET ??_C@_06NJNJNICG@policy?$AA@
$LL51@process_pc:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN52@process_pc
	test	dl, dl
	je	SHORT $LN53@process_pc
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN52@process_pc
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL51@process_pc
$LN53@process_pc:
	xor	eax, eax
	jmp	SHORT $LN54@process_pc
$LN52@process_pc:
	sbb	eax, eax
	or	eax, 1
$LN54@process_pc:
	test	eax, eax
	jne	$LN31@process_pc
; Line 109
	xor	ebp, ebp
; Line 111
	cmp	DWORD PTR [ebx], ebp
	jne	SHORT $LN13@process_pc
; Line 112
	call	_ASN1_OCTET_STRING_new
	mov	DWORD PTR [ebx], eax
; Line 113
	test	eax, eax
	jne	SHORT $LN14@process_pc
; Line 114
	push	114					; 00000072H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	65					; 00000041H
	push	150					; 00000096H
	push	34					; 00000022H
	call	_ERR_put_error
; Line 115
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_07BDICHDDB@?0value?3?$AA@
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06FONLLLNC@?0name?3?$AA@
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_08PCLJGJAL@section?3?$AA@
	push	6
	call	_ERR_add_error_data
	add	esp, 48					; 00000030H
; Line 116
	xor	eax, eax
	jmp	$LN1@process_pc
$LN14@process_pc:
; Line 118
	mov	DWORD PTR _free_policy$1$[esp+2088], 1
$LN13@process_pc:
; Line 120
	mov	edi, DWORD PTR __imp__strncmp
	push	4
	push	OFFSET ??_C@_04ODCMNEMO@hex?3?$AA@
	push	DWORD PTR [esi+8]
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN15@process_pc
; Line 121
	lea	eax, DWORD PTR _val_len$1[esp+2088]
	push	eax
	mov	eax, DWORD PTR [esi+8]
	add	eax, 4
	push	eax
	call	_string_to_hex
	mov	edi, eax
	add	esp, 8
; Line 124
	test	edi, edi
	jne	SHORT $LN17@process_pc
; Line 125
	push	126					; 0000007eH
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	113					; 00000071H
; Line 128
	jmp	$LN62@process_pc
$LN17@process_pc:
; Line 131
	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR _val_len$1[esp+2088]
	push	132					; 00000084H
	inc	eax
	add	eax, DWORD PTR [edx]
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	eax
	push	DWORD PTR [edx+8]
	call	_CRYPTO_realloc
	mov	ebp, eax
	add	esp, 16					; 00000010H
; Line 133
	test	ebp, ebp
	je	SHORT $LN18@process_pc
; Line 134
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR [ecx+8], ebp
; Line 135
	mov	ecx, DWORD PTR [ebx]
	push	DWORD PTR _val_len$1[esp+2088]
	push	edi
	mov	eax, DWORD PTR [ecx+8]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	_memcpy
; Line 137
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR _val_len$1[esp+2100]
; Line 151
	push	edi
	add	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [ecx+eax], 0
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
	jmp	$LN30@process_pc
$LN18@process_pc:
; Line 140
	push	edi
	call	_CRYPTO_free
; Line 145
	mov	eax, DWORD PTR [ebx]
; Line 147
	push	147					; 00000093H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	65					; 00000041H
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR [ebx]
	push	150					; 00000096H
	push	34					; 00000022H
	mov	DWORD PTR [eax], 0
	call	_ERR_put_error
; Line 148
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_07BDICHDDB@?0value?3?$AA@
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06FONLLLNC@?0name?3?$AA@
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_08PCLJGJAL@section?3?$AA@
	push	6
	call	_ERR_add_error_data
	add	esp, 52					; 00000034H
; Line 149
	jmp	$err$64
$LN15@process_pc:
; Line 152
	push	5
	push	OFFSET ??_C@_05BOPHDICO@file?3?$AA@
	push	DWORD PTR [esi+8]
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN20@process_pc
; Line 155
	mov	eax, DWORD PTR [esi+8]
	add	eax, 5
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	eax
	call	_BIO_new_file
	add	esp, 8
; Line 156
	test	eax, eax
	jne	SHORT $LN60@process_pc
; Line 157
	push	157					; 0000009dH
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	32					; 00000020H
; Line 159
	jmp	$LN62@process_pc
$LN60@process_pc:
	mov	esi, eax
$LL2@process_pc:
; Line 162
	push	2048					; 00000800H
	lea	eax, DWORD PTR _buf$2[esp+2092]
	push	eax
	push	esi
	call	_BIO_read
	mov	edi, eax
	add	esp, 12					; 0000000cH
	test	edi, edi
	jg	SHORT $LN23@process_pc
	jne	SHORT $LN36@process_pc
	push	8
	push	esi
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	jne	SHORT $LL2@process_pc
$LN36@process_pc:
; Line 177
	push	esi
	call	_BIO_free_all
; Line 179
	mov	esi, DWORD PTR _val$GSCopy$1$[esp+2092]
	add	esp, 4
	test	edi, edi
	jns	$LN30@process_pc
; Line 180
	push	180					; 000000b4H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	32					; 00000020H
; Line 182
	jmp	$LN62@process_pc
$LN23@process_pc:
; Line 166
	mov	ecx, DWORD PTR [ebx]
	push	167					; 000000a7H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	mov	eax, DWORD PTR [ecx]
	inc	eax
	add	eax, edi
	push	eax
	push	DWORD PTR [ecx+8]
	call	_CRYPTO_realloc
	mov	ebp, eax
	add	esp, 16					; 00000010H
; Line 169
	test	ebp, ebp
	je	SHORT $LN36@process_pc
; Line 172
	mov	eax, DWORD PTR [ebx]
; Line 173
	push	edi
	mov	DWORD PTR [eax+8], ebp
	lea	eax, DWORD PTR _buf$2[esp+2092]
	mov	ecx, DWORD PTR [ebx]
	push	eax
	mov	eax, DWORD PTR [ecx+8]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	_memcpy
; Line 174
	mov	eax, DWORD PTR [ebx]
	add	esp, 12					; 0000000cH
	add	DWORD PTR [eax], edi
; Line 175
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [ecx+eax], 0
; Line 176
	jmp	$LL2@process_pc
$LN20@process_pc:
; Line 184
	push	5
	push	OFFSET ??_C@_05FHIGHPDA@text?3?$AA@
	push	DWORD PTR [esi+8]
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN27@process_pc
; Line 185
	mov	edx, DWORD PTR [esi+8]
	add	edx, 5
	lea	ecx, DWORD PTR [edx+1]
$LL55@process_pc:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL55@process_pc
	sub	edx, ecx
; Line 186
	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR _val_len$1[esp+2088], edx
	inc	edx
	push	187					; 000000bbH
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	mov	eax, DWORD PTR [ecx]
	add	eax, edx
	push	eax
	push	DWORD PTR [ecx+8]
	call	_CRYPTO_realloc
	mov	ebp, eax
	add	esp, 16					; 00000010H
; Line 189
	mov	eax, DWORD PTR [ebx]
	test	ebp, ebp
	je	SHORT $LN29@process_pc
	mov	DWORD PTR [eax+8], ebp
; Line 190
	mov	ecx, DWORD PTR [ebx]
	push	DWORD PTR _val_len$1[esp+2088]
	mov	eax, DWORD PTR [esi+8]
	add	eax, 5
	push	eax
	mov	eax, DWORD PTR [ecx+8]
	add	eax, DWORD PTR [ecx]
	push	eax
	call	_memcpy
; Line 192
	mov	ecx, DWORD PTR [ebx]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _val_len$1[esp+2088]
	add	DWORD PTR [ecx], eax
; Line 193
	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax]
	mov	BYTE PTR [ecx+eax], 0
$LN30@process_pc:
; Line 211
	test	ebp, ebp
	jne	$LN31@process_pc
; Line 212
	push	212					; 000000d4H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	65					; 00000041H
; Line 214
	jmp	SHORT $LN62@process_pc
$LN29@process_pc:
; Line 199
	mov	DWORD PTR [eax+8], 0
; Line 200
	mov	eax, DWORD PTR [ebx]
; Line 201
	push	201					; 000000c9H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	65					; 00000041H
	mov	DWORD PTR [eax], 0
; Line 203
	jmp	SHORT $LN62@process_pc
$LN27@process_pc:
; Line 206
	push	207					; 000000cfH
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	152					; 00000098H
$LN62@process_pc:
	push	150					; 00000096H
	push	34					; 00000022H
	call	_ERR_put_error
; Line 208
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_07BDICHDDB@?0value?3?$AA@
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06FONLLLNC@?0name?3?$AA@
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_08PCLJGJAL@section?3?$AA@
	push	6
	call	_ERR_add_error_data
	add	esp, 48					; 00000030H
$err$64:
; Line 219
	cmp	DWORD PTR _free_policy$1$[esp+2088], 0
	je	SHORT $LN32@process_pc
; Line 220
	push	DWORD PTR [ebx]
	call	_ASN1_OCTET_STRING_free
	add	esp, 4
; Line 221
	mov	DWORD PTR [ebx], 0
$LN32@process_pc:
; Line 223
	xor	eax, eax
	jmp	SHORT $LN1@process_pc
$LN31@process_pc:
; Line 217
	mov	eax, 1
$LN1@process_pc:
; Line 224
	mov	ecx, DWORD PTR __$ArrayPad$[esp+2088]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 2072				; 00000818H
	ret	0
_process_pci_value ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _r2i_pci
_TEXT	SEGMENT
_language$ = -20					; size = 4
_pathlen$ = -16						; size = 4
_policy$ = -12						; size = 4
_vals$1$ = -8						; size = 4
_pci$1$ = -4						; size = 4
_method$ = 8						; size = 4
_ctx$ = 12						; size = 4
_value$ = 16						; size = 4
_r2i_pci PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\v3_pci.c
; Line 228
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 236
	push	DWORD PTR _value$[esp+32]
	mov	DWORD PTR _pci$1$[esp+40], 0
	mov	DWORD PTR _language$[esp+40], 0
	mov	DWORD PTR _pathlen$[esp+40], 0
	mov	DWORD PTR _policy$[esp+40], 0
	call	_X509V3_parse_list
	mov	ebx, eax
; Line 237
	xor	ebp, ebp
	push	ebx
	mov	DWORD PTR _vals$1$[esp+44], ebx
	call	_sk_num
	add	esp, 8
	test	eax, eax
	jle	$LN36@r2i_pci
	mov	edi, DWORD PTR _ctx$[esp+32]
$LL4@r2i_pci:
; Line 238
	push	ebp
	push	ebx
	call	_sk_value
	mov	esi, eax
	add	esp, 8
; Line 239
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	$LN9@r2i_pci
	mov	cl, BYTE PTR [eax]
	cmp	cl, 64					; 00000040H
	je	SHORT $LN41@r2i_pci
	cmp	DWORD PTR [esi+8], 0
	je	$LN9@r2i_pci
; Line 245
	cmp	cl, 64					; 00000040H
	jne	SHORT $LN10@r2i_pci
$LN41@r2i_pci:
; Line 249
	inc	eax
	mov	ebx, 1
	push	eax
	push	edi
	call	_X509V3_get_section
	mov	edi, eax
	add	esp, 8
; Line 250
	test	edi, edi
	je	$LN27@r2i_pci
; Line 255
	xor	esi, esi
	npad	3
$LL7@r2i_pci:
	push	edi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jge	SHORT $LN6@r2i_pci
; Line 256
	lea	eax, DWORD PTR _policy$[esp+36]
	push	eax
	lea	eax, DWORD PTR _pathlen$[esp+40]
	push	eax
	lea	eax, DWORD PTR _language$[esp+44]
	push	eax
	push	esi
	push	edi
	call	_sk_value
	add	esp, 8
	push	eax
	call	_process_pci_value
	mov	ebx, eax
	add	esp, 16					; 00000010H
	inc	esi
	test	ebx, ebx
	jne	SHORT $LL7@r2i_pci
$LN6@r2i_pci:
; Line 260
	push	edi
	mov	edi, DWORD PTR _ctx$[esp+36]
	push	edi
	call	_X509V3_section_free
	add	esp, 8
; Line 261
	test	ebx, ebx
; Line 263
	mov	ebx, DWORD PTR _vals$1$[esp+36]
	je	$LN38@r2i_pci
	jmp	SHORT $LN2@r2i_pci
$LN10@r2i_pci:
; Line 264
	lea	eax, DWORD PTR _policy$[esp+36]
	push	eax
	lea	eax, DWORD PTR _pathlen$[esp+40]
	push	eax
	lea	eax, DWORD PTR _language$[esp+44]
	push	eax
	push	esi
	call	_process_pci_value
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN29@r2i_pci
$LN2@r2i_pci:
; Line 237
	push	ebx
	inc	ebp
	call	_sk_num
	add	esp, 4
	cmp	ebp, eax
	jl	$LL4@r2i_pci
; Line 272
	mov	esi, DWORD PTR _language$[esp+36]
	test	esi, esi
	je	$LN36@r2i_pci
; Line 277
	push	esi
	call	_OBJ_obj2nid
	add	esp, 4
; Line 278
	cmp	eax, 667				; 0000029bH
	je	SHORT $LN17@r2i_pci
	cmp	eax, 665				; 00000299H
	jne	SHORT $LN16@r2i_pci
$LN17@r2i_pci:
	cmp	DWORD PTR _policy$[esp+36], 0
	je	SHORT $LN16@r2i_pci
; Line 279
	push	280					; 00000118H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	159					; 0000009fH
	push	155					; 0000009bH
	push	34					; 00000022H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 281
	jmp	$err$44
$LN27@r2i_pci:
; Line 251
	push	251					; 000000fbH
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	135					; 00000087H
	push	155					; 0000009bH
	push	34					; 00000022H
	call	_ERR_put_error
; Line 252
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_07BDICHDDB@?0value?3?$AA@
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06FONLLLNC@?0name?3?$AA@
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_08PCLJGJAL@section?3?$AA@
	push	6
	call	_ERR_add_error_data
; Line 253
	mov	ebx, DWORD PTR _vals$1$[esp+84]
	jmp	$LN42@r2i_pci
$LN16@r2i_pci:
; Line 284
	call	_PROXY_CERT_INFO_EXTENSION_new
	mov	edx, eax
	mov	DWORD PTR _pci$1$[esp+36], edx
; Line 285
	test	edx, edx
	jne	SHORT $LN18@r2i_pci
; Line 286
	push	286					; 0000011eH
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	65					; 00000041H
	push	155					; 0000009bH
	push	34					; 00000022H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	$err$44
$LN18@r2i_pci:
; Line 290
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], esi
; Line 292
	mov	ecx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR _policy$[esp+36]
	mov	DWORD PTR [ecx+4], eax
; Line 294
	mov	eax, DWORD PTR _pathlen$[esp+36]
	mov	DWORD PTR [edx], eax
; Line 295
	mov	DWORD PTR _pathlen$[esp+36], 0
	jmp	$end$45
$LN29@r2i_pci:
; Line 265
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_07BDICHDDB@?0value?3?$AA@
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06FONLLLNC@?0name?3?$AA@
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_08PCLJGJAL@section?3?$AA@
	push	6
	call	_ERR_add_error_data
	add	esp, 28					; 0000001cH
; Line 266
	jmp	SHORT $LN38@r2i_pci
$LN9@r2i_pci:
; Line 240
	push	241					; 000000f1H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	153					; 00000099H
	push	155					; 0000009bH
	push	34					; 00000022H
	call	_ERR_put_error
; Line 242
	push	DWORD PTR [esi+8]
	push	OFFSET ??_C@_07BDICHDDB@?0value?3?$AA@
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_06FONLLLNC@?0name?3?$AA@
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_08PCLJGJAL@section?3?$AA@
	push	6
	call	_ERR_add_error_data
$LN42@r2i_pci:
	add	esp, 48					; 00000030H
$LN38@r2i_pci:
	mov	esi, DWORD PTR _language$[esp+36]
$err$44:
; Line 298
	test	esi, esi
	je	SHORT $LN19@r2i_pci
; Line 299
	push	esi
	call	_ASN1_OBJECT_free
	add	esp, 4
	jmp	SHORT $LN19@r2i_pci
$LN36@r2i_pci:
; Line 273
	push	274					; 00000112H
	push	OFFSET ??_C@_0BJ@KGLHOFNB@?4?2crypto?2x509v3?2v3_pci?4c?$AA@
	push	154					; 0000009aH
	push	155					; 0000009bH
	push	34					; 00000022H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN19@r2i_pci:
; Line 302
	mov	eax, DWORD PTR _pathlen$[esp+36]
	test	eax, eax
	je	SHORT $LN20@r2i_pci
; Line 303
	push	eax
	call	_ASN1_INTEGER_free
	add	esp, 4
; Line 304
	mov	DWORD PTR _pathlen$[esp+36], 0
$LN20@r2i_pci:
; Line 306
	mov	eax, DWORD PTR _policy$[esp+36]
	test	eax, eax
	je	SHORT $end$45
; Line 307
	push	eax
	call	_ASN1_OCTET_STRING_free
	add	esp, 4
$end$45:
; Line 315
	push	OFFSET _X509V3_conf_free
	push	ebx
	call	_sk_pop_free
; Line 316
	mov	eax, DWORD PTR _pci$1$[esp+44]
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 317
	add	esp, 20					; 00000014H
	ret	0
_r2i_pci ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2r_pci
_TEXT	SEGMENT
_method$ = 8						; size = 4
_pci$ = 12						; size = 4
_out$ = 16						; size = 4
_indent$ = 20						; size = 4
_i2r_pci PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\v3_pci.c
; Line 60
	push	ebx
	push	esi
; Line 61
	mov	esi, DWORD PTR _out$[esp+4]
	push	edi
	mov	edi, DWORD PTR _indent$[esp+8]
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	edi
	push	OFFSET ??_C@_0BM@BMCPHDD@?$CF?$CKsPath?5Length?5Constraint?3?5?$AA@
	push	esi
	call	_BIO_printf
; Line 62
	mov	ebx, DWORD PTR _pci$[esp+24]
	add	esp, 16					; 00000010H
	mov	eax, DWORD PTR [ebx]
	test	eax, eax
	je	SHORT $LN2@i2r_pci
; Line 63
	push	eax
	push	esi
	call	_i2a_ASN1_INTEGER
	jmp	SHORT $LN8@i2r_pci
$LN2@i2r_pci:
; Line 65
	push	OFFSET ??_C@_08MAJEGHKB@infinite?$AA@
	push	esi
	call	_BIO_printf
$LN8@i2r_pci:
	add	esp, 8
; Line 66
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
; Line 67
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	edi
	push	OFFSET ??_C@_0BF@CGHJNACM@?$CF?$CKsPolicy?5Language?3?5?$AA@
	push	esi
	call	_BIO_printf
; Line 68
	mov	eax, DWORD PTR [ebx+4]
	push	DWORD PTR [eax]
	push	esi
	call	_i2a_ASN1_OBJECT
; Line 69
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
; Line 70
	mov	eax, DWORD PTR [ebx+4]
	add	esp, 40					; 00000028H
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN6@i2r_pci
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	je	SHORT $LN6@i2r_pci
; Line 71
	push	eax
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	edi
	push	OFFSET ??_C@_0BE@HDJEDONA@?$CF?$CKsPolicy?5Text?3?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 20					; 00000014H
$LN6@i2r_pci:
; Line 73
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 74
	ret	0
_i2r_pci ENDP
_TEXT	ENDS
END

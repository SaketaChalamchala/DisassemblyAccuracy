; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509\by_dir.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_x509_dir_lookup
PUBLIC	??_C@_0CF@LKDMNFLO@Load?5certs?5from?5files?5in?5a?5direc@ ; `string'
;	COMDAT ??_C@_0CF@LKDMNFLO@Load?5certs?5from?5files?5in?5a?5direc@
CONST	SEGMENT
??_C@_0CF@LKDMNFLO@Load?5certs?5from?5files?5in?5a?5direc@ DB 'Load certs'
	DB	' from files in a directory', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_x509_dir_lookup DD FLAT:??_C@_0CF@LKDMNFLO@Load?5certs?5from?5files?5in?5a?5direc@
	DD	FLAT:_new_dir
	DD	FLAT:_free_dir
	DD	00H
	DD	00H
	DD	FLAT:_dir_ctrl
	DD	FLAT:_get_cert_by_subject
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
PUBLIC	_X509_LOOKUP_hash_dir
PUBLIC	??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0P@NEPFKFLK@?$CFs?$CFc?$CF08lx?4?$CFs?$CFd?$AA@ ; `string'
EXTRN	__imp__getenv:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_find:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BUF_MEM_new:PROC
EXTRN	_BUF_MEM_free:PROC
EXTRN	_BUF_MEM_grow:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	__imp___stat64i32:PROC
EXTRN	_X509_load_cert_file:PROC
EXTRN	_X509_load_crl_file:PROC
EXTRN	_X509_get_default_cert_dir:PROC
EXTRN	_X509_get_default_cert_dir_env:PROC
EXTRN	_X509_NAME_hash:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0P@NEPFKFLK@?$CFs?$CFc?$CF08lx?4?$CFs?$CFd?$AA@
CONST	SEGMENT
??_C@_0P@NEPFKFLK@?$CFs?$CFc?$CF08lx?4?$CFs?$CFd?$AA@ DB '%s%c%08lx.%s%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
CONST	SEGMENT
??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@ DB '.\crypto\x509\by_'
	DB	'dir.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _by_dir_entry_free
_TEXT	SEGMENT
_ent$ = 8						; size = 4
_by_dir_entry_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\by_dir.c
; Line 178
	push	esi
; Line 179
	mov	esi, DWORD PTR _ent$[esp]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN2@by_dir_ent
; Line 180
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN2@by_dir_ent:
; Line 181
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN3@by_dir_ent
; Line 182
	push	OFFSET _by_dir_hash_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN3@by_dir_ent:
; Line 183
	push	esi
	call	_CRYPTO_free
	add	esp, 4
	pop	esi
; Line 184
	ret	0
_by_dir_entry_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _by_dir_hash_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_by_dir_hash_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\by_dir.c
; Line 170
	mov	eax, DWORD PTR _a$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
	cmp	ecx, eax
	jbe	SHORT $LN5@by_dir_has
; Line 171
	mov	eax, 1
; Line 175
	ret	0
$LN5@by_dir_has:
; Line 172
	sbb	eax, eax
; Line 175
	ret	0
_by_dir_hash_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _by_dir_hash_free
_TEXT	SEGMENT
_hash$ = 8						; size = 4
_by_dir_hash_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\by_dir.c
; Line 164
	jmp	_CRYPTO_free
_by_dir_hash_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_cert_by_subject
_TEXT	SEGMENT
_xl$GSCopy$1$ = -260					; size = 4
_h$1$ = -256						; size = 4
_hent$1$ = -252						; size = 4
_ctx$1$ = -248						; size = 4
_ok$1$ = -244						; size = 4
_postfix$1$ = -240					; size = 4
_tmp$1$ = -236						; size = 4
_i$1$ = -232						; size = 4
_ret$GSCopy$1$ = -228					; size = 4
_stmp$ = -224						; size = 8
_htmp$1 = -216						; size = 8
_data$ = -208						; size = 156
_st$2 = -52						; size = 48
__$ArrayPad$ = -4					; size = 4
_xl$ = 8						; size = 4
_type$ = 12						; size = 4
_name$ = 16						; size = 4
_ret$ = 20						; size = 4
_get_cert_by_subject PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\by_dir.c
; Line 256
	mov	eax, 260				; 00000104H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+260], eax
	mov	eax, DWORD PTR _ret$[esp+256]
	push	esi
	mov	esi, DWORD PTR _name$[esp+260]
	mov	DWORD PTR _ret$GSCopy$1$[esp+264], eax
; Line 268
	mov	DWORD PTR _ok$1$[esp+264], 0
	push	edi
	mov	edi, DWORD PTR _xl$[esp+264]
	mov	DWORD PTR _xl$GSCopy$1$[esp+268], edi
; Line 275
	test	esi, esi
	jne	SHORT $LN8@get_cert_b
; Line 276
	pop	edi
	xor	eax, eax
	pop	esi
; Line 436
	mov	ecx, DWORD PTR __$ArrayPad$[esp+260]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	ret	0
$LN8@get_cert_b:
	push	ebx
	push	ebp
; Line 278
	mov	ebp, DWORD PTR _type$[esp+272]
	mov	DWORD PTR _stmp$[esp+276], ebp
; Line 279
	cmp	ebp, 1
	jne	SHORT $LN9@get_cert_b
; Line 280
	lea	eax, DWORD PTR _data$[esp+380]
; Line 281
	mov	DWORD PTR _data$[esp+400], esi
; Line 283
	mov	DWORD PTR _postfix$1$[esp+276], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN60@get_cert_b
$LN9@get_cert_b:
; Line 284
	cmp	ebp, 2
	jne	$LN11@get_cert_b
; Line 285
	lea	eax, DWORD PTR _data$[esp+352]
; Line 286
	mov	DWORD PTR _data$[esp+360], esi
; Line 288
	mov	DWORD PTR _postfix$1$[esp+276], OFFSET ??_C@_01KDCPPGHE@r?$AA@
$LN60@get_cert_b:
; Line 287
	mov	DWORD PTR _data$[esp+276], eax
	lea	eax, DWORD PTR _data$[esp+276]
	mov	DWORD PTR _stmp$[esp+280], eax
; Line 294
	call	_BUF_MEM_new
	mov	ebx, eax
	test	ebx, ebx
	jne	SHORT $LN13@get_cert_b
; Line 295
	push	295					; 00000127H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	7
; Line 296
	jmp	$LN61@get_cert_b
$LN13@get_cert_b:
; Line 299
	mov	eax, DWORD PTR [edi+12]
; Line 301
	push	esi
	mov	DWORD PTR _ctx$1$[esp+280], eax
	call	_X509_NAME_hash
	mov	esi, eax
; Line 302
	xor	edi, edi
	mov	eax, DWORD PTR _ctx$1$[esp+280]
	mov	DWORD PTR _h$1$[esp+280], esi
	mov	DWORD PTR _i$1$[esp+280], edi
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 8
	test	eax, eax
	jle	$finish$67
	npad	3
$LL4@get_cert_b:
; Line 306
	mov	eax, DWORD PTR _ctx$1$[esp+276]
	push	edi
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	edi, eax
	add	esp, 8
; Line 307
	mov	ecx, DWORD PTR [edi]
	lea	edx, DWORD PTR [ecx+1]
$LL58@get_cert_b:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL58@get_cert_b
	sub	ecx, edx
	lea	eax, DWORD PTR [ecx+17]
; Line 308
	push	eax
	push	ebx
	call	_BUF_MEM_grow
	add	esp, 8
	test	eax, eax
	je	$LN45@get_cert_b
; Line 312
	cmp	ebp, 2
	jne	SHORT $LN15@get_cert_b
	cmp	DWORD PTR [edi+8], 0
	je	SHORT $LN15@get_cert_b
; Line 314
	push	314					; 0000013aH
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	11					; 0000000bH
	push	5
	mov	DWORD PTR _htmp$1[esp+292], esi
	call	_CRYPTO_lock
; Line 315
	lea	eax, DWORD PTR _htmp$1[esp+292]
	push	eax
	push	DWORD PTR [edi+8]
	call	_sk_find
	add	esp, 24					; 00000018H
; Line 316
	test	eax, eax
	js	SHORT $LN17@get_cert_b
; Line 317
	push	eax
	push	DWORD PTR [edi+8]
	call	_sk_value
	add	esp, 8
; Line 318
	mov	esi, DWORD PTR [eax+4]
; Line 319
	jmp	SHORT $LN62@get_cert_b
$LN17@get_cert_b:
; Line 320
	xor	eax, eax
; Line 321
	xor	esi, esi
$LN62@get_cert_b:
; Line 323
	push	323					; 00000143H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	11					; 0000000bH
	push	6
	mov	DWORD PTR _hent$1$[esp+292], eax
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 324
	jmp	SHORT $LL5@get_cert_b
$LN15@get_cert_b:
; Line 325
	xor	esi, esi
; Line 326
	xor	eax, eax
	mov	DWORD PTR _hent$1$[esp+276], eax
$LL5@get_cert_b:
; Line 352
	push	esi
	push	DWORD PTR _postfix$1$[esp+280]
	push	DWORD PTR _h$1$[esp+284]
	push	47					; 0000002fH
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0P@NEPFKFLK@?$CFs?$CFc?$CF08lx?4?$CFs?$CFd?$AA@
	push	DWORD PTR [ebx+8]
	push	DWORD PTR [ebx+4]
	call	_BIO_snprintf
; Line 361
	lea	eax, DWORD PTR _st$2[esp+308]
	push	eax
	push	DWORD PTR [ebx+4]
	call	DWORD PTR __imp___stat64i32
	add	esp, 40					; 00000028H
	test	eax, eax
	js	SHORT $LN42@get_cert_b
; Line 366
	cmp	ebp, 1
	jne	SHORT $LN22@get_cert_b
; Line 367
	push	DWORD PTR [edi+4]
	push	DWORD PTR [ebx+4]
	push	DWORD PTR _xl$GSCopy$1$[esp+284]
	call	_X509_load_cert_file
; Line 369
	jmp	SHORT $LN64@get_cert_b
$LN22@get_cert_b:
	cmp	ebp, 2
	jne	SHORT $LN26@get_cert_b
; Line 370
	push	DWORD PTR [edi+4]
	push	DWORD PTR [ebx+4]
	push	DWORD PTR _xl$GSCopy$1$[esp+284]
	call	_X509_load_crl_file
$LN64@get_cert_b:
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN42@get_cert_b
$LN26@get_cert_b:
; Line 374
	inc	esi
; Line 375
	jmp	SHORT $LL5@get_cert_b
$LN42@get_cert_b:
; Line 380
	push	380					; 0000017cH
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	11					; 0000000bH
	push	9
	call	_CRYPTO_lock
; Line 381
	lea	eax, DWORD PTR _stmp$[esp+292]
	push	eax
	mov	eax, DWORD PTR _xl$GSCopy$1$[esp+296]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	call	_sk_find
	add	esp, 24					; 00000018H
; Line 382
	cmp	eax, -1
	je	SHORT $LN27@get_cert_b
; Line 383
	push	eax
	mov	eax, DWORD PTR _xl$GSCopy$1$[esp+280]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	call	_sk_value
	add	esp, 8
	mov	DWORD PTR _tmp$1$[esp+276], eax
	jmp	SHORT $LN28@get_cert_b
$LN27@get_cert_b:
; Line 385
	mov	DWORD PTR _tmp$1$[esp+276], 0
$LN28@get_cert_b:
; Line 386
	push	386					; 00000182H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	11					; 0000000bH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 390
	cmp	ebp, 2
	jne	$LN29@get_cert_b
; Line 391
	push	391					; 00000187H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	11					; 0000000bH
	push	9
	call	_CRYPTO_lock
; Line 396
	mov	eax, DWORD PTR _hent$1$[esp+292]
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN32@get_cert_b
; Line 397
	mov	eax, DWORD PTR _h$1$[esp+276]
	mov	DWORD PTR _htmp$1[esp+276], eax
; Line 398
	lea	eax, DWORD PTR _htmp$1[esp+276]
	push	eax
	push	DWORD PTR [edi+8]
	call	_sk_find
	add	esp, 8
; Line 399
	test	eax, eax
	js	SHORT $LN55@get_cert_b
; Line 400
	push	eax
	push	DWORD PTR [edi+8]
	call	_sk_value
	add	esp, 8
; Line 402
	test	eax, eax
	jne	SHORT $LN32@get_cert_b
$LN55@get_cert_b:
; Line 403
	push	403					; 00000193H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	8
	call	_CRYPTO_malloc
	mov	ebp, eax
; Line 404
	mov	eax, DWORD PTR _h$1$[esp+288]
; Line 406
	push	ebp
	mov	DWORD PTR [ebp], eax
	mov	DWORD PTR [ebp+4], esi
	push	DWORD PTR [edi+8]
	call	_sk_push
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN46@get_cert_b
; Line 411
	mov	ebp, DWORD PTR _type$[esp+272]
	jmp	SHORT $LN35@get_cert_b
$LN32@get_cert_b:
; Line 412
	cmp	DWORD PTR [eax+4], esi
	jge	SHORT $LN35@get_cert_b
; Line 413
	mov	DWORD PTR [eax+4], esi
$LN35@get_cert_b:
; Line 415
	push	415					; 0000019fH
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	11					; 0000000bH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN29@get_cert_b:
; Line 419
	mov	ecx, DWORD PTR _tmp$1$[esp+276]
	test	ecx, ecx
	jne	SHORT $LN47@get_cert_b
; Line 302
	mov	eax, DWORD PTR _ctx$1$[esp+276]
	mov	edi, DWORD PTR _i$1$[esp+276]
	inc	edi
	mov	DWORD PTR _i$1$[esp+276], edi
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jge	SHORT $finish$67
	mov	esi, DWORD PTR _h$1$[esp+276]
	jmp	$LL4@get_cert_b
$LN46@get_cert_b:
; Line 407
	push	407					; 00000197H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	11					; 0000000bH
	push	10					; 0000000aH
	call	_CRYPTO_lock
; Line 408
	push	ebp
	call	_CRYPTO_free
	add	esp, 20					; 00000014H
; Line 409
	mov	DWORD PTR _ok$1$[esp+276], 0
; Line 434
	push	ebx
	call	_BUF_MEM_free
	add	esp, 4
	jmp	SHORT $LN37@get_cert_b
$LN47@get_cert_b:
; Line 421
	mov	edx, DWORD PTR _ret$GSCopy$1$[esp+276]
	mov	eax, DWORD PTR [ecx]
; Line 434
	push	ebx
	mov	DWORD PTR _ok$1$[esp+280], 1
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	call	_BUF_MEM_free
	add	esp, 4
	jmp	SHORT $LN37@get_cert_b
$LN45@get_cert_b:
; Line 309
	push	309					; 00000135H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	65					; 00000041H
	push	103					; 00000067H
	push	11					; 0000000bH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$finish$67:
; Line 434
	push	ebx
	call	_BUF_MEM_free
	add	esp, 4
	jmp	SHORT $LN37@get_cert_b
$LN11@get_cert_b:
; Line 290
	push	290					; 00000122H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	112					; 00000070H
$LN61@get_cert_b:
	push	103					; 00000067H
	push	11					; 0000000bH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN37@get_cert_b:
; Line 436
	mov	ecx, DWORD PTR __$ArrayPad$[esp+276]
	mov	eax, DWORD PTR _ok$1$[esp+276]
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	ret	0
_get_cert_by_subject ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _add_cert_dir
_TEXT	SEGMENT
_ss$1$ = -8						; size = 4
_p$1$ = -4						; size = 4
_ctx$ = 8						; size = 4
_dir$ = 12						; size = 4
_type$ = 16						; size = 4
_add_cert_dir PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\by_dir.c
; Line 199
	mov	eax, 8
	call	__chkstk
; Line 203
	mov	ecx, DWORD PTR _dir$[esp+4]
	test	ecx, ecx
	je	$LN9@add_cert_d
	cmp	BYTE PTR [ecx], 0
	je	$LN9@add_cert_d
; Line 209
	push	ebx
	mov	ebx, DWORD PTR _ctx$[esp+8]
	push	ebp
	mov	ebp, ecx
	push	esi
	mov	DWORD PTR _p$1$[esp+20], ebp
	push	edi
	npad	3
$LL4@add_cert_d:
; Line 211
	mov	al, BYTE PTR [ebp]
	cmp	al, 59					; 0000003bH
	je	SHORT $LN11@add_cert_d
	test	al, al
	jne	$LN2@add_cert_d
$LN11@add_cert_d:
; Line 213
	mov	eax, ecx
; Line 215
	mov	edi, ebp
	mov	DWORD PTR _ss$1$[esp+24], eax
	lea	ecx, DWORD PTR [ebp+1]
	mov	DWORD PTR _dir$[esp+20], ecx
	sub	edi, eax
; Line 216
	je	$LN2@add_cert_d
; Line 218
	push	DWORD PTR [ebx+4]
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN28@add_cert_d
$LL7@add_cert_d:
; Line 219
	push	esi
	push	DWORD PTR [ebx+4]
	call	_sk_value
	add	esp, 8
; Line 220
	mov	edx, DWORD PTR [eax]
	mov	eax, edx
	lea	ebp, DWORD PTR [eax+1]
	npad	6
$LL39@add_cert_d:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL39@add_cert_d
	sub	eax, ebp
	cmp	eax, edi
	jne	SHORT $LN5@add_cert_d
	push	edi
	push	DWORD PTR _ss$1$[esp+28]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN40@add_cert_d
$LN5@add_cert_d:
; Line 218
	push	DWORD PTR [ebx+4]
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL7@add_cert_d
$LN40@add_cert_d:
	mov	ebp, DWORD PTR _p$1$[esp+24]
$LN28@add_cert_d:
; Line 224
	push	DWORD PTR [ebx+4]
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	$LN42@add_cert_d
; Line 226
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LN16@add_cert_d
; Line 227
	call	_sk_new_null
	mov	DWORD PTR [ebx+4], eax
; Line 228
	test	eax, eax
	je	$LN29@add_cert_d
$LN16@add_cert_d:
; Line 233
	push	233					; 000000e9H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	12					; 0000000cH
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 234
	test	esi, esi
	je	$LN31@add_cert_d
; Line 236
	mov	eax, DWORD PTR _type$[esp+20]
; Line 237
	push	OFFSET _by_dir_hash_cmp
	mov	DWORD PTR [esi+4], eax
	call	_sk_new
; Line 238
	push	238					; 000000eeH
	mov	DWORD PTR [esi+8], eax
	lea	eax, DWORD PTR [edi+1]
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esi], eax
; Line 239
	test	eax, eax
	je	$LN23@add_cert_d
	cmp	DWORD PTR [esi+8], 0
	je	SHORT $LN19@add_cert_d
; Line 243
	push	edi
	push	DWORD PTR _ss$1$[esp+28]
	push	eax
	call	DWORD PTR __imp__strncpy
; Line 244
	mov	eax, DWORD PTR [esi]
; Line 245
	push	esi
	mov	BYTE PTR [edi+eax], 0
	push	DWORD PTR [ebx+4]
	call	_sk_push
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN33@add_cert_d
$LN42@add_cert_d:
	mov	ecx, DWORD PTR _dir$[esp+20]
$LN2@add_cert_d:
; Line 250
	mov	al, BYTE PTR [ebp]
	inc	ebp
	mov	DWORD PTR _p$1$[esp+24], ebp
	test	al, al
	jne	$LL4@add_cert_d
; Line 251
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 252
	add	esp, 8
	ret	0
$LN29@add_cert_d:
; Line 229
	push	229					; 000000e5H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	65					; 00000041H
	push	100					; 00000064H
	push	11					; 0000000bH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 247
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 252
	add	esp, 8
	ret	0
$LN33@add_cert_d:
; Line 246
	push	esi
	call	_by_dir_entry_free
	add	esp, 4
$LN31@add_cert_d:
; Line 247
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 252
	add	esp, 8
	ret	0
$LN19@add_cert_d:
; Line 179
	test	eax, eax
	je	SHORT $LN23@add_cert_d
; Line 180
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN23@add_cert_d:
; Line 181
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN24@add_cert_d
; Line 182
	push	OFFSET _by_dir_hash_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN24@add_cert_d:
; Line 183
	push	esi
	call	_CRYPTO_free
; Line 246
	add	esp, 4
; Line 247
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 252
	add	esp, 8
	ret	0
$LN9@add_cert_d:
; Line 204
	push	204					; 000000ccH
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	113					; 00000071H
	push	100					; 00000064H
	push	11					; 0000000bH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 205
	xor	eax, eax
; Line 252
	add	esp, 8
	ret	0
_add_cert_dir ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _free_dir
_TEXT	SEGMENT
_lu$ = 8						; size = 4
_free_dir PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\by_dir.c
; Line 190
	mov	eax, DWORD PTR _lu$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+12]
; Line 191
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN2@free_dir
; Line 192
	push	OFFSET _by_dir_entry_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN2@free_dir:
; Line 193
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@free_dir
; Line 194
	push	eax
	call	_BUF_MEM_free
	add	esp, 4
$LN3@free_dir:
; Line 195
	push	esi
	call	_CRYPTO_free
	add	esp, 4
	pop	esi
; Line 196
	ret	0
_free_dir ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _new_dir
_TEXT	SEGMENT
_lu$ = 8						; size = 4
_new_dir PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\by_dir.c
; Line 148
	push	esi
; Line 151
	push	151					; 00000097H
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	8
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	SHORT $LN5@new_dir
; Line 153
	call	_BUF_MEM_new
	mov	DWORD PTR [esi], eax
	test	eax, eax
	jne	SHORT $LN3@new_dir
; Line 154
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN5@new_dir:
; Line 155
	xor	eax, eax
	pop	esi
; Line 160
	ret	0
$LN3@new_dir:
; Line 158
	mov	eax, DWORD PTR _lu$[esp]
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [eax+12], esi
; Line 159
	mov	eax, 1
	pop	esi
; Line 160
	ret	0
_new_dir ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dir_ctrl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cmd$ = 12						; size = 4
_argp$ = 16						; size = 4
_argl$ = 20						; size = 4
_retp$ = 24						; size = 4
_dir_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\by_dir.c
; Line 128
	sub	DWORD PTR _cmd$[esp-4], 2
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+12]
	jne	SHORT $LN12@dir_ctrl
; Line 130
	mov	eax, DWORD PTR _argl$[esp]
	cmp	eax, 3
	jne	SHORT $LN5@dir_ctrl
; Line 131
	call	_X509_get_default_cert_dir_env
	push	eax
	call	DWORD PTR __imp__getenv
	add	esp, 4
; Line 133
	push	1
	test	eax, eax
	jne	SHORT $LN13@dir_ctrl
; Line 135
	call	_X509_get_default_cert_dir
$LN13@dir_ctrl:
	push	eax
	push	esi
	call	_add_cert_dir
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 137
	test	esi, esi
	jne	SHORT $LN11@dir_ctrl
; Line 138
	push	138					; 0000008aH
	push	OFFSET ??_C@_0BH@HEBEBEMJ@?4?2crypto?2x509?2by_dir?4c?$AA@
	push	103					; 00000067H
	push	102					; 00000066H
	push	11					; 0000000bH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN11@dir_ctrl:
; Line 144
	mov	eax, esi
	pop	esi
; Line 145
	ret	0
$LN5@dir_ctrl:
; Line 141
	push	eax
	push	DWORD PTR _argp$[esp+4]
	push	esi
	call	_add_cert_dir
	add	esp, 12					; 0000000cH
	pop	esi
; Line 145
	ret	0
$LN12@dir_ctrl:
; Line 144
	xor	eax, eax
	pop	esi
; Line 145
	ret	0
_dir_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_LOOKUP_hash_dir
_TEXT	SEGMENT
_X509_LOOKUP_hash_dir PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\by_dir.c
; Line 116
	mov	eax, OFFSET _x509_dir_lookup
; Line 117
	ret	0
_X509_LOOKUP_hash_dir ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\f_string.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@	; `string'
;	COMDAT ??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@
CONST	SEGMENT
??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@ DB '0123456789ABCDEF', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?h@?1??i2a_ASN1_STRING@@9@9 DD FLAT:??_C@_0BB@JGGOGLEG@0123456789ABCDEF?$AA@ ; `i2a_ASN1_STRING'::`2'::h
_DATA	ENDS
PUBLIC	_a2i_ASN1_STRING
PUBLIC	_i2a_ASN1_STRING
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_02JPPHBJLD@?2?6?$AA@			; `string'
PUBLIC	??_C@_0BJ@CIJCPIKE@?4?2crypto?2asn1?2f_string?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_realloc:PROC
EXTRN	_BIO_gets:PROC
EXTRN	_BIO_write:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BJ@CIJCPIKE@?4?2crypto?2asn1?2f_string?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@CIJCPIKE@?4?2crypto?2asn1?2f_string?4c?$AA@ DB '.\crypto\asn1\f'
	DB	'_string.c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02JPPHBJLD@?2?6?$AA@
CONST	SEGMENT
??_C@_02JPPHBJLD@?2?6?$AA@ DB '\', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2a_ASN1_STRING
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_buf$ = 12						; size = 2
_a$ = 12						; size = 4
_type$ = 16						; size = 4
_i2a_ASN1_STRING PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\f_string.c
; Line 65
	push	ebx
; Line 70
	mov	ebx, DWORD PTR _a$[esp]
	push	edi
	xor	edi, edi
	test	ebx, ebx
	jne	SHORT $LN5@i2a_ASN1_S
; Line 71
	pop	edi
	xor	eax, eax
	pop	ebx
; Line 94
	ret	0
$LN5@i2a_ASN1_S:
; Line 73
	mov	eax, DWORD PTR [ebx]
	push	ebp
	push	esi
	test	eax, eax
	jne	SHORT $LN6@i2a_ASN1_S
; Line 74
	push	1
	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	push	DWORD PTR _bp$[esp+20]
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	$err$22
; Line 76
	mov	edi, eax
$LN3@i2a_ASN1_S:
	pop	esi
	pop	ebp
; Line 91
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 94
	ret	0
$LN6@i2a_ASN1_S:
; Line 78
	xor	esi, esi
	test	eax, eax
	jle	SHORT $LN3@i2a_ASN1_S
	mov	ebp, DWORD PTR _bp$[esp+12]
$LL4@i2a_ASN1_S:
; Line 79
	test	esi, esi
	je	SHORT $LN9@i2a_ASN1_S
	mov	eax, -368140053				; ea0ea0ebH
	mov	ecx, esi
	imul	esi
	add	edx, esi
	sar	edx, 5
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	imul	eax, eax, 35
	sub	ecx, eax
	jne	SHORT $LN9@i2a_ASN1_S
; Line 80
	push	2
	push	OFFSET ??_C@_02JPPHBJLD@?2?6?$AA@
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 2
	jne	SHORT $err$22
; Line 82
	add	edi, eax
$LN9@i2a_ASN1_S:
; Line 84
	mov	edx, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR ?h@?1??i2a_ASN1_STRING@@9@9
; Line 86
	push	2
	movzx	eax, BYTE PTR [edx+esi]
	shr	eax, 4
	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR _buf$[esp+16], al
	movzx	eax, BYTE PTR [edx+esi]
	and	eax, 15					; 0000000fH
	movzx	eax, BYTE PTR [eax+ecx]
	mov	BYTE PTR _buf$[esp+17], al
	lea	eax, DWORD PTR _buf$[esp+16]
	push	eax
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 2
	jne	SHORT $err$22
; Line 88
	inc	esi
	add	edi, eax
	cmp	esi, DWORD PTR [ebx]
	jl	SHORT $LL4@i2a_ASN1_S
; Line 91
	pop	esi
	pop	ebp
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 94
	ret	0
$err$22:
	pop	esi
	pop	ebp
	pop	edi
; Line 93
	or	eax, -1
	pop	ebx
; Line 94
	ret	0
_i2a_ASN1_STRING ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _a2i_ASN1_STRING
_TEXT	SEGMENT
_s$1$ = -20						; size = 4
_again$1$ = -16						; size = 4
_slen$1$ = -12						; size = 4
_num$1$ = -8						; size = 4
tv480 = -4						; size = 4
_bp$ = 8						; size = 4
_bs$ = 12						; size = 4
_buf$ = 16						; size = 4
_size$ = 20						; size = 4
_a2i_ASN1_STRING PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\f_string.c
; Line 97
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
	push	ebp
; Line 104
	mov	ebp, DWORD PTR _buf$[esp+24]
	xor	ebx, ebx
	push	esi
	push	edi
	push	DWORD PTR _size$[esp+32]
	xor	esi, esi
	mov	DWORD PTR _num$1$[esp+40], ebx
	push	ebp
	push	DWORD PTR _bp$[esp+40]
	xor	edi, edi
	mov	DWORD PTR _s$1$[esp+48], esi
	mov	DWORD PTR _slen$1$[esp+48], edi
	call	_BIO_gets
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 106
	cmp	ecx, 1
	jl	$LN38@a2i_ASN1_S
$LL2@a2i_ASN1_S:
; Line 115
	cmp	BYTE PTR [ecx+ebp-1], 10		; 0000000aH
	jne	SHORT $LN17@a2i_ASN1_S
; Line 116
	dec	ecx
	mov	BYTE PTR [ecx+ebp], 0
$LN17@a2i_ASN1_S:
; Line 117
	test	ecx, ecx
	je	$err_sl$71
; Line 119
	cmp	BYTE PTR [ecx+ebp-1], 13		; 0000000dH
	jne	SHORT $LN19@a2i_ASN1_S
; Line 120
	dec	ecx
	mov	BYTE PTR [ecx+ebp], 0
$LN19@a2i_ASN1_S:
; Line 121
	test	ecx, ecx
	je	$err_sl$71
; Line 123
	xor	eax, eax
; Line 125
	lea	edx, DWORD PTR [ecx-1]
	cmp	BYTE PTR [ecx+ebp-1], 92		; 0000005cH
	sete	al
	mov	DWORD PTR _again$1$[esp+36], eax
	test	edx, edx
	jle	SHORT $LN6@a2i_ASN1_S
	npad	3
$LL7@a2i_ASN1_S:
; Line 127
	mov	al, BYTE PTR [edx+ebp]
	cmp	al, 48					; 00000030H
	jl	SHORT $LN22@a2i_ASN1_S
	cmp	al, 57					; 00000039H
	jle	SHORT $LN5@a2i_ASN1_S
$LN22@a2i_ASN1_S:
	cmp	al, 97					; 00000061H
	jl	SHORT $LN23@a2i_ASN1_S
	cmp	al, 102					; 00000066H
	jle	SHORT $LN5@a2i_ASN1_S
$LN23@a2i_ASN1_S:
	cmp	al, 65					; 00000041H
	jl	SHORT $LN46@a2i_ASN1_S
	cmp	al, 70					; 00000046H
	jg	SHORT $LN46@a2i_ASN1_S
$LN5@a2i_ASN1_S:
; Line 125
	dec	edx
	test	edx, edx
	jg	SHORT $LL7@a2i_ASN1_S
; Line 167
	jmp	SHORT $LN69@a2i_ASN1_S
$LN46@a2i_ASN1_S:
; Line 139
	mov	ecx, edx
$LN69@a2i_ASN1_S:
	mov	eax, DWORD PTR _again$1$[esp+36]
$LN6@a2i_ASN1_S:
; Line 143
	mov	BYTE PTR [ecx+ebp], 0
; Line 147
	cmp	ecx, 2
	jl	$err_sl$71
; Line 153
	sub	ecx, eax
; Line 154
	mov	eax, ecx
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN68@a2i_ASN1_S
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN68@a2i_ASN1_S:
	jne	$LN51@a2i_ASN1_S
; Line 158
	mov	eax, ecx
	cdq
	sub	eax, edx
	mov	ebp, eax
	sar	ebp, 1
; Line 159
	lea	eax, DWORD PTR [ebx+ebp]
	mov	DWORD PTR tv480[esp+36], eax
	cmp	eax, edi
	jle	SHORT $LN67@a2i_ASN1_S
; Line 160
	test	esi, esi
	jne	SHORT $LN28@a2i_ASN1_S
; Line 161
	push	162					; 000000a2H
	lea	ebx, DWORD PTR [ebx+ebp*2]
	push	OFFSET ??_C@_0BJ@CIJCPIKE@?4?2crypto?2asn1?2f_string?4c?$AA@
	push	ebx
	mov	DWORD PTR _slen$1$[esp+48], ebx
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN29@a2i_ASN1_S
$LN28@a2i_ASN1_S:
; Line 164
	push	166					; 000000a6H
	lea	eax, DWORD PTR [ebx+ebp*2]
	push	OFFSET ??_C@_0BJ@CIJCPIKE@?4?2crypto?2asn1?2f_string?4c?$AA@
	push	eax
	push	esi
	mov	DWORD PTR _slen$1$[esp+52], eax
	call	_CRYPTO_realloc
	add	esp, 16					; 00000010H
$LN29@a2i_ASN1_S:
; Line 167
	test	eax, eax
	je	$LN52@a2i_ASN1_S
; Line 173
	mov	edx, eax
	mov	DWORD PTR _s$1$[esp+36], edx
; Line 174
	jmp	SHORT $LN27@a2i_ASN1_S
$LN67@a2i_ASN1_S:
	mov	edx, DWORD PTR _s$1$[esp+36]
$LN27@a2i_ASN1_S:
; Line 176
	xor	edi, edi
	test	ebp, ebp
	jle	SHORT $LN9@a2i_ASN1_S
	mov	ebx, DWORD PTR _buf$[esp+32]
	npad	8
$LL10@a2i_ASN1_S:
; Line 177
	xor	esi, esi
$LL13@a2i_ASN1_S:
; Line 178
	movzx	eax, BYTE PTR [ebx+esi]
; Line 179
	lea	ecx, DWORD PTR [eax-48]
	cmp	ecx, 9
	ja	SHORT $LN32@a2i_ASN1_S
; Line 180
	mov	eax, ecx
	jmp	SHORT $LN37@a2i_ASN1_S
$LN32@a2i_ASN1_S:
; Line 181
	lea	ecx, DWORD PTR [eax-97]
	cmp	ecx, 5
	ja	SHORT $LN34@a2i_ASN1_S
; Line 182
	sub	eax, 87					; 00000057H
	jmp	SHORT $LN37@a2i_ASN1_S
$LN34@a2i_ASN1_S:
; Line 183
	lea	ecx, DWORD PTR [eax-65]
	cmp	ecx, 5
	ja	$LN36@a2i_ASN1_S
; Line 184
	sub	eax, 55					; 00000037H
$LN37@a2i_ASN1_S:
; Line 190
	mov	ecx, DWORD PTR _num$1$[esp+36]
	inc	esi
	add	ecx, edi
	add	edx, ecx
	mov	cl, BYTE PTR [edx]
	shl	cl, 4
; Line 191
	or	cl, al
	mov	BYTE PTR [edx], cl
	mov	edx, DWORD PTR _s$1$[esp+36]
	cmp	esi, 2
	jl	SHORT $LL13@a2i_ASN1_S
; Line 176
	inc	edi
	add	ebx, 2
	cmp	edi, ebp
	jl	SHORT $LL10@a2i_ASN1_S
$LN9@a2i_ASN1_S:
; Line 195
	cmp	DWORD PTR _again$1$[esp+36], 0
	mov	ebx, DWORD PTR tv480[esp+36]
	mov	DWORD PTR _num$1$[esp+36], ebx
	je	$LN66@a2i_ASN1_S
; Line 196
	push	DWORD PTR _size$[esp+32]
	mov	ebp, DWORD PTR _buf$[esp+36]
	push	ebp
	push	DWORD PTR _bp$[esp+40]
	call	_BIO_gets
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	cmp	ecx, 1
	jl	$err_sl$71
; Line 106
	mov	esi, DWORD PTR _s$1$[esp+36]
	mov	edi, DWORD PTR _slen$1$[esp+36]
	jmp	$LL2@a2i_ASN1_S
$LN52@a2i_ASN1_S:
; Line 168
	push	168					; 000000a8H
	push	OFFSET ??_C@_0BJ@CIJCPIKE@?4?2crypto?2asn1?2f_string?4c?$AA@
	push	65					; 00000041H
	push	103					; 00000067H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 169
	test	esi, esi
	je	SHORT $LN65@a2i_ASN1_S
; Line 170
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 208
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 209
	add	esp, 20					; 00000014H
	ret	0
$LN36@a2i_ASN1_S:
; Line 186
	push	187					; 000000bbH
	push	OFFSET ??_C@_0BJ@CIJCPIKE@?4?2crypto?2asn1?2f_string?4c?$AA@
	push	141					; 0000008dH
	push	103					; 00000067H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 208
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 209
	add	esp, 20					; 00000014H
	ret	0
$LN51@a2i_ASN1_S:
; Line 155
	push	155					; 0000009bH
	push	OFFSET ??_C@_0BJ@CIJCPIKE@?4?2crypto?2asn1?2f_string?4c?$AA@
	push	145					; 00000091H
	push	103					; 00000067H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN65@a2i_ASN1_S:
; Line 208
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 209
	add	esp, 20					; 00000014H
	ret	0
$err_sl$71:
; Line 206
	push	206					; 000000ceH
	push	OFFSET ??_C@_0BJ@CIJCPIKE@?4?2crypto?2asn1?2f_string?4c?$AA@
	push	150					; 00000096H
	push	103					; 00000067H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 208
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 209
	add	esp, 20					; 00000014H
	ret	0
$LN66@a2i_ASN1_S:
	mov	esi, DWORD PTR _s$1$[esp+36]
$LN38@a2i_ASN1_S:
; Line 200
	mov	eax, DWORD PTR _bs$[esp+32]
$err$72:
	mov	DWORD PTR [eax], ebx
; Line 201
	mov	DWORD PTR [eax+8], esi
; Line 208
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 209
	add	esp, 20					; 00000014H
	ret	0
_a2i_ASN1_STRING ENDP
_TEXT	ENDS
END

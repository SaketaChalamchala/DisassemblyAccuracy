; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_long.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_04KCJFIMMJ@LONG?$AA@			; `string'
PUBLIC	??_C@_05HIGAPBOG@ZLONG?$AA@			; `string'
;	COMDAT ??_C@_05HIGAPBOG@ZLONG?$AA@
CONST	SEGMENT
??_C@_05HIGAPBOG@ZLONG?$AA@ DB 'ZLONG', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KCJFIMMJ@LONG?$AA@
CONST	SEGMENT
??_C@_04KCJFIMMJ@LONG?$AA@ DB 'LONG', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
?local_it@?1??LONG_it@@9@9 DB 00H			; `LONG_it'::`2'::local_it
	ORG $+3
	DD	02H
	DD	00H
	DD	00H
	DD	FLAT:_long_pf
	DD	07fffffffH
	DD	FLAT:??_C@_04KCJFIMMJ@LONG?$AA@
?local_it@?1??ZLONG_it@@9@9 DB 00H			; `ZLONG_it'::`2'::local_it
	ORG $+3
	DD	02H
	DD	00H
	DD	00H
	DD	FLAT:_long_pf
	DD	00H
	DD	FLAT:??_C@_05HIGAPBOG@ZLONG?$AA@
CONST	ENDS
_DATA	SEGMENT
_long_pf DD	00H
	DD	00H
	DD	FLAT:_long_new
	DD	FLAT:_long_free
	DD	FLAT:_long_free
	DD	FLAT:_long_c2i
	DD	FLAT:_long_i2c
	DD	FLAT:_long_print
_DATA	ENDS
PUBLIC	_LONG_it
PUBLIC	_ZLONG_it
PUBLIC	??_C@_0BH@OOENGGEL@?4?2crypto?2asn1?2x_long?4c?$AA@ ; `string'
PUBLIC	??_C@_04PEDNGLFL@?$CFld?6?$AA@			; `string'
EXTRN	_BIO_printf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_num_bits_word:PROC
;	COMDAT ??_C@_04PEDNGLFL@?$CFld?6?$AA@
CONST	SEGMENT
??_C@_04PEDNGLFL@?$CFld?6?$AA@ DB '%ld', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OOENGGEL@?4?2crypto?2asn1?2x_long?4c?$AA@
CONST	SEGMENT
??_C@_0BH@OOENGGEL@?4?2crypto?2asn1?2x_long?4c?$AA@ DB '.\crypto\asn1\x_l'
	DB	'ong.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _long_print
_TEXT	SEGMENT
_out$ = 8						; size = 4
_pval$ = 12						; size = 4
_it$ = 16						; size = 4
_indent$ = 20						; size = 4
_pctx$ = 24						; size = 4
_long_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_long.c
; Line 195
	mov	eax, DWORD PTR _pval$[esp-4]
	push	DWORD PTR [eax]
	push	OFFSET ??_C@_04PEDNGLFL@?$CFld?6?$AA@
	push	DWORD PTR _out$[esp+4]
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 196
	ret	0
_long_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _long_c2i
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_cont$ = 12						; size = 4
_len$ = 16						; size = 4
_utype$ = 20						; size = 4
_free_cont$ = 24					; size = 4
_it$ = 28						; size = 4
_long_c2i PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_long.c
; Line 157
	push	esi
; Line 162
	mov	esi, DWORD PTR _len$[esp]
	cmp	esi, 4
	jle	SHORT $LN5@long_c2i
; Line 163
	push	163					; 000000a3H
$LN18@long_c2i:
	push	OFFSET ??_C@_0BH@OOENGGEL@?4?2crypto?2asn1?2x_long?4c?$AA@
	push	128					; 00000080H
	push	166					; 000000a6H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 164
	xor	eax, eax
	pop	esi
; Line 190
	ret	0
$LN5@long_c2i:
	push	ebx
	push	edi
; Line 167
	mov	edi, DWORD PTR _cont$[esp+8]
	test	esi, esi
	je	SHORT $LN6@long_c2i
	test	BYTE PTR [edi], 128			; 00000080H
	je	SHORT $LN6@long_c2i
; Line 168
	mov	ebx, 1
	jmp	SHORT $LN7@long_c2i
$LN6@long_c2i:
; Line 170
	xor	ebx, ebx
$LN7@long_c2i:
; Line 171
	xor	ecx, ecx
; Line 172
	xor	edx, edx
	test	esi, esi
	jle	SHORT $LN3@long_c2i
	npad	4
$LL4@long_c2i:
; Line 173
	shl	ecx, 8
; Line 174
	test	ebx, ebx
	je	SHORT $LN8@long_c2i
; Line 175
	mov	al, BYTE PTR [edx+edi]
	not	al
	movzx	eax, al
	jmp	SHORT $LN17@long_c2i
$LN8@long_c2i:
; Line 177
	movzx	eax, BYTE PTR [edx+edi]
$LN17@long_c2i:
; Line 172
	inc	edx
; Line 177
	or	ecx, eax
	cmp	edx, esi
	jl	SHORT $LL4@long_c2i
$LN3@long_c2i:
	pop	edi
; Line 180
	test	ebx, ebx
	pop	ebx
	je	SHORT $LN10@long_c2i
; Line 181
	or	eax, -1
	sub	eax, ecx
; Line 182
	mov	ecx, eax
$LN10@long_c2i:
; Line 184
	mov	eax, DWORD PTR _it$[esp]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN11@long_c2i
; Line 185
	push	185					; 000000b9H
; Line 186
	jmp	SHORT $LN18@long_c2i
$LN11@long_c2i:
; Line 188
	mov	eax, DWORD PTR _pval$[esp]
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 189
	mov	eax, 1
; Line 190
	ret	0
_long_c2i ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _long_i2c
_TEXT	SEGMENT
_pad$1$ = 8						; size = 4
_pval$ = 8						; size = 4
_cont$ = 12						; size = 4
_putype$ = 16						; size = 4
_it$ = 20						; size = 4
_long_i2c PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_long.c
; Line 119
	mov	eax, DWORD PTR _pval$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 121
	mov	eax, DWORD PTR _it$[esp]
	cmp	esi, DWORD PTR [eax+20]
	jne	SHORT $LN5@long_i2c
; Line 122
	or	eax, -1
	pop	esi
; Line 153
	ret	0
$LN5@long_i2c:
; Line 129
	or	eax, -1
	push	ebx
	sub	eax, esi
	mov	ebx, esi
	test	esi, esi
	push	edi
	cmovs	ebx, eax
; Line 132
	push	ebx
	call	_BN_num_bits_word
; Line 142
	mov	edx, DWORD PTR _cont$[esp+12]
	add	esp, 4
	test	al, 7
	mov	ecx, 0
	sete	cl
	lea	edi, DWORD PTR [eax+7]
	sar	edi, 3
	mov	DWORD PTR _pad$1$[esp+8], ecx
	test	edx, edx
	je	SHORT $LN3@long_i2c
; Line 143
	test	ecx, ecx
	je	SHORT $LN11@long_i2c
; Line 144
	test	esi, esi
	setns	al
	dec	al
	mov	BYTE PTR [edx], al
	inc	edx
$LN11@long_i2c:
; Line 145
	lea	ecx, DWORD PTR [edi-1]
	test	ecx, ecx
	js	SHORT $LN18@long_i2c
	npad	3
$LL4@long_i2c:
; Line 146
	mov	BYTE PTR [ecx+edx], bl
; Line 147
	test	esi, esi
	jns	SHORT $LN12@long_i2c
; Line 148
	mov	al, bl
	not	al
	mov	BYTE PTR [ecx+edx], al
$LN12@long_i2c:
; Line 149
	shr	ebx, 8
	sub	ecx, 1
	jns	SHORT $LL4@long_i2c
$LN18@long_i2c:
	mov	ecx, DWORD PTR _pad$1$[esp+8]
$LN3@long_i2c:
; Line 152
	lea	eax, DWORD PTR [ecx+edi]
	pop	edi
	pop	ebx
	pop	esi
; Line 153
	ret	0
_long_i2c ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _long_free
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_long_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_long.c
; Line 106
	mov	eax, DWORD PTR _it$[esp-4]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _pval$[esp-4]
	mov	DWORD PTR [eax], ecx
; Line 107
	ret	0
_long_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _long_new
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_long_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_long.c
; Line 100
	mov	eax, DWORD PTR _it$[esp-4]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _pval$[esp-4]
	mov	DWORD PTR [eax], ecx
; Line 101
	mov	eax, 1
; Line 102
	ret	0
_long_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ZLONG_it
_TEXT	SEGMENT
_ZLONG_it PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_long.c
; Line 96
	mov	eax, OFFSET ?local_it@?1??ZLONG_it@@9@9
	ret	0
_ZLONG_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _LONG_it
_TEXT	SEGMENT
_LONG_it PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_long.c
; Line 92
	mov	eax, OFFSET ?local_it@?1??LONG_it@@9@9
	ret	0
_LONG_it ENDP
_TEXT	ENDS
END

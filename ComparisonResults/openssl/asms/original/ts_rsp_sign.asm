; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_TS_RESP_CTX_new
PUBLIC	_TS_RESP_CTX_free
PUBLIC	_TS_RESP_CTX_set_signer_cert
PUBLIC	_TS_RESP_CTX_set_signer_key
PUBLIC	_TS_RESP_CTX_set_def_policy
PUBLIC	_TS_RESP_CTX_set_certs
PUBLIC	_TS_RESP_CTX_add_policy
PUBLIC	_TS_RESP_CTX_add_md
PUBLIC	_TS_RESP_CTX_set_accuracy
PUBLIC	_TS_RESP_CTX_set_clock_precision_digits
PUBLIC	_TS_RESP_CTX_add_flags
PUBLIC	_TS_RESP_CTX_set_serial_cb
PUBLIC	_TS_RESP_CTX_set_time_cb
PUBLIC	_TS_RESP_CTX_set_extension_cb
PUBLIC	_TS_RESP_CTX_set_status_info
PUBLIC	_TS_RESP_CTX_set_status_info_cond
PUBLIC	_TS_RESP_CTX_add_failure_info
PUBLIC	_TS_RESP_CTX_get_request
PUBLIC	_TS_RESP_CTX_get_tst_info
PUBLIC	_TS_RESP_create_response
PUBLIC	??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@ ; `string'
PUBLIC	??_C@_0CH@IKKNJBOJ@Error?5during?5serial?5number?5gener@ ; `string'
PUBLIC	??_C@_0BH@BCEEDHCH@Time?5is?5not?5available?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@DLFNNFMJ@Unsupported?5extension?4?$AA@ ; `string'
PUBLIC	??_C@_0CE@OCFPDKJO@Bad?5request?5format?5or?5system?5err@ ; `string'
PUBLIC	??_C@_0CC@DNFFCHKG@Error?5during?5response?5generation@ ; `string'
PUBLIC	??_C@_0BF@LJAOPGO@Bad?5request?5version?4?$AA@	; `string'
PUBLIC	??_C@_0CL@IPOEKJMF@Message?5digest?5algorithm?5is?5not?5@ ; `string'
PUBLIC	??_C@_0CG@MHCAOKLJ@Superfluous?5message?5digest?5param@ ; `string'
PUBLIC	??_C@_0BE@PBMOHPHD@Bad?5message?5digest?4?$AA@	; `string'
PUBLIC	??_C@_0CD@CNMJDOJA@Requested?5policy?5is?5not?5supporte@ ; `string'
PUBLIC	??_C@_0CB@FHFIDOJI@Error?5during?5TSTInfo?5generation?4@ ; `string'
PUBLIC	??_C@_0CD@EIFJLLDN@Error?5during?5signature?5generatio@ ; `string'
PUBLIC	??_C@_0BJ@NPJPFJML@?$CF04d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02d?$AA@ ; `string'
PUBLIC	??_C@_06JOENHFNJ@?4?$CF06ld?$AA@		; `string'
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	__imp___gmtime64:PROC
EXTRN	__imp___time64:PROC
EXTRN	_ASN1_TYPE_new:PROC
EXTRN	_ASN1_TYPE_get:PROC
EXTRN	_ASN1_TYPE_set:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_ASN1_STRING_new:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_ASN1_STRING_set:PROC
EXTRN	_ASN1_BIT_STRING_new:PROC
EXTRN	_ASN1_BIT_STRING_set_bit:PROC
EXTRN	_ASN1_INTEGER_new:PROC
EXTRN	_ASN1_INTEGER_free:PROC
EXTRN	_ASN1_INTEGER_dup:PROC
EXTRN	_ASN1_GENERALIZEDTIME_set_string:PROC
EXTRN	_ASN1_OCTET_STRING_new:PROC
EXTRN	_ASN1_OCTET_STRING_free:PROC
EXTRN	_ASN1_OCTET_STRING_set:PROC
EXTRN	_ASN1_UTF8STRING_new:PROC
EXTRN	_ASN1_UTF8STRING_free:PROC
EXTRN	_ASN1_GENERALIZEDTIME_free:PROC
EXTRN	_ASN1_INTEGER_set:PROC
EXTRN	_ASN1_INTEGER_get:PROC
EXTRN	_OBJ_dup:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_cmp:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_MD_size:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_PKCS7_new:PROC
EXTRN	_PKCS7_free:PROC
EXTRN	_PKCS7_set_type:PROC
EXTRN	_PKCS7_set_content:PROC
EXTRN	_PKCS7_add_certificate:PROC
EXTRN	_PKCS7_dataInit:PROC
EXTRN	_PKCS7_dataFinal:PROC
EXTRN	_PKCS7_add_signature:PROC
EXTRN	_PKCS7_add_signed_attribute:PROC
EXTRN	_X509_NAME_dup:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_check_private_key:PROC
EXTRN	_X509_chain_up_ref:PROC
EXTRN	_GENERAL_NAME_new:PROC
EXTRN	_GENERAL_NAME_free:PROC
EXTRN	_X509_check_purpose:PROC
EXTRN	_TS_REQ_free:PROC
EXTRN	_d2i_TS_REQ_bio:PROC
EXTRN	_TS_RESP_new:PROC
EXTRN	_TS_RESP_free:PROC
EXTRN	_TS_STATUS_INFO_new:PROC
EXTRN	_TS_STATUS_INFO_free:PROC
EXTRN	_TS_TST_INFO_new:PROC
EXTRN	_TS_TST_INFO_free:PROC
EXTRN	_i2d_TS_TST_INFO_bio:PROC
EXTRN	_TS_ACCURACY_new:PROC
EXTRN	_TS_ACCURACY_free:PROC
EXTRN	_ESS_ISSUER_SERIAL_new:PROC
EXTRN	_ESS_CERT_ID_new:PROC
EXTRN	_ESS_CERT_ID_free:PROC
EXTRN	_ESS_SIGNING_CERT_new:PROC
EXTRN	_ESS_SIGNING_CERT_free:PROC
EXTRN	_i2d_ESS_SIGNING_CERT:PROC
EXTRN	_TS_REQ_get_version:PROC
EXTRN	_TS_REQ_get_msg_imprint:PROC
EXTRN	_TS_MSG_IMPRINT_get_algo:PROC
EXTRN	_TS_MSG_IMPRINT_get_msg:PROC
EXTRN	_TS_REQ_get_policy_id:PROC
EXTRN	_TS_REQ_get_nonce:PROC
EXTRN	_TS_REQ_get_cert_req:PROC
EXTRN	_TS_REQ_get_exts:PROC
EXTRN	_TS_RESP_set_status_info:PROC
EXTRN	_TS_RESP_get_status_info:PROC
EXTRN	_TS_RESP_set_tst_info:PROC
EXTRN	_TS_TST_INFO_set_version:PROC
EXTRN	_TS_TST_INFO_set_policy_id:PROC
EXTRN	_TS_TST_INFO_set_msg_imprint:PROC
EXTRN	_TS_TST_INFO_set_serial:PROC
EXTRN	_TS_TST_INFO_set_time:PROC
EXTRN	_TS_TST_INFO_set_accuracy:PROC
EXTRN	_TS_ACCURACY_set_seconds:PROC
EXTRN	_TS_ACCURACY_set_millis:PROC
EXTRN	_TS_ACCURACY_set_micros:PROC
EXTRN	_TS_TST_INFO_set_ordering:PROC
EXTRN	_TS_TST_INFO_set_nonce:PROC
EXTRN	_TS_TST_INFO_set_tsa:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_06JOENHFNJ@?4?$CF06ld?$AA@
CONST	SEGMENT
??_C@_06JOENHFNJ@?4?$CF06ld?$AA@ DB '.%06ld', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NPJPFJML@?$CF04d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02d?$AA@
CONST	SEGMENT
??_C@_0BJ@NPJPFJML@?$CF04d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02d?$AA@ DB '%0'
	DB	'4d%02d%02d%02d%02d%02d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EIFJLLDN@Error?5during?5signature?5generatio@
CONST	SEGMENT
??_C@_0CD@EIFJLLDN@Error?5during?5signature?5generatio@ DB 'Error during '
	DB	'signature generation.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FHFIDOJI@Error?5during?5TSTInfo?5generation?4@
CONST	SEGMENT
??_C@_0CB@FHFIDOJI@Error?5during?5TSTInfo?5generation?4@ DB 'Error during'
	DB	' TSTInfo generation.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CNMJDOJA@Requested?5policy?5is?5not?5supporte@
CONST	SEGMENT
??_C@_0CD@CNMJDOJA@Requested?5policy?5is?5not?5supporte@ DB 'Requested po'
	DB	'licy is not supported.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PBMOHPHD@Bad?5message?5digest?4?$AA@
CONST	SEGMENT
??_C@_0BE@PBMOHPHD@Bad?5message?5digest?4?$AA@ DB 'Bad message digest.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MHCAOKLJ@Superfluous?5message?5digest?5param@
CONST	SEGMENT
??_C@_0CG@MHCAOKLJ@Superfluous?5message?5digest?5param@ DB 'Superfluous m'
	DB	'essage digest parameter.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@IPOEKJMF@Message?5digest?5algorithm?5is?5not?5@
CONST	SEGMENT
??_C@_0CL@IPOEKJMF@Message?5digest?5algorithm?5is?5not?5@ DB 'Message dig'
	DB	'est algorithm is not supported.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LJAOPGO@Bad?5request?5version?4?$AA@
CONST	SEGMENT
??_C@_0BF@LJAOPGO@Bad?5request?5version?4?$AA@ DB 'Bad request version.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DNFFCHKG@Error?5during?5response?5generation@
CONST	SEGMENT
??_C@_0CC@DNFFCHKG@Error?5during?5response?5generation@ DB 'Error during '
	DB	'response generation.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OCFPDKJO@Bad?5request?5format?5or?5system?5err@
CONST	SEGMENT
??_C@_0CE@OCFPDKJO@Bad?5request?5format?5or?5system?5err@ DB 'Bad request'
	DB	' format or system error.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DLFNNFMJ@Unsupported?5extension?4?$AA@
CONST	SEGMENT
??_C@_0BH@DLFNNFMJ@Unsupported?5extension?4?$AA@ DB 'Unsupported extensio'
	DB	'n.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BCEEDHCH@Time?5is?5not?5available?4?$AA@
CONST	SEGMENT
??_C@_0BH@BCEEDHCH@Time?5is?5not?5available?4?$AA@ DB 'Time is not availa'
	DB	'ble.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IKKNJBOJ@Error?5during?5serial?5number?5gener@
CONST	SEGMENT
??_C@_0CH@IKKNJBOJ@Error?5during?5serial?5number?5gener@ DB 'Error during'
	DB	' serial number generation.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
CONST	SEGMENT
??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@ DB '.\crypto\ts\ts'
	DB	'_rsp_sign.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_set_genTime_with_precision
_TEXT	SEGMENT
_time_sec$ = -36					; size = 8
_genTime_str$ = -28					; size = 23
__$ArrayPad$ = -4					; size = 4
_asn1_time$ = 8						; size = 4
_sec$ = 12						; size = 4
_usec$ = 16						; size = 4
_precision$ = 20					; size = 4
_TS_RESP_set_genTime_with_precision PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 948
	mov	eax, 36					; 00000024H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+36], eax
; Line 949
	mov	eax, DWORD PTR _sec$[esp+32]
	push	ebx
; Line 955
	mov	ebx, DWORD PTR _precision$[esp+36]
	cdq
	mov	DWORD PTR _time_sec$[esp+40], eax
	mov	DWORD PTR _time_sec$[esp+44], edx
	push	edi
	mov	edi, DWORD PTR _asn1_time$[esp+40]
	cmp	ebx, 6
	ja	$err$18
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 500
	lea	eax, DWORD PTR _time_sec$[esp+44]
	push	eax
	call	DWORD PTR __imp___gmtime64
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 958
	mov	ecx, eax
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 500
	add	esp, 4
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 958
	test	ecx, ecx
	je	$err$18
; Line 968
	mov	eax, DWORD PTR [ecx+16]
	push	esi
	push	DWORD PTR [ecx]
	inc	eax
	push	DWORD PTR [ecx+4]
	push	DWORD PTR [ecx+8]
	push	DWORD PTR [ecx+12]
	push	eax
	mov	eax, DWORD PTR [ecx+20]
	add	eax, 1900				; 0000076cH
	push	eax
	push	OFFSET ??_C@_0BJ@NPJPFJML@?$CF04d?$CF02d?$CF02d?$CF02d?$CF02d?$CF02d?$AA@
	lea	eax, DWORD PTR _genTime_str$[esp+76]
	push	23					; 00000017H
	push	eax
	call	_BIO_snprintf
	lea	esi, DWORD PTR _genTime_str$[esp+84]
	add	esp, 36					; 00000024H
	add	esi, eax
; Line 972
	test	ebx, ebx
	je	SHORT $LN7@TS_RESP_se
; Line 974
	push	DWORD PTR _usec$[esp+44]
	lea	eax, DWORD PTR [ebx+2]
	push	OFFSET ??_C@_06JOENHFNJ@?4?$CF06ld?$AA@
	push	eax
	push	esi
	call	_BIO_snprintf
; Line 979
	mov	ecx, esi
	add	esp, 16					; 00000010H
	lea	edx, DWORD PTR [ecx+1]
$LL16@TS_RESP_se:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL16@TS_RESP_se
	sub	ecx, edx
	add	esi, ecx
	npad	5
$LL2@TS_RESP_se:
; Line 996
	dec	esi
	cmp	BYTE PTR [esi], 48			; 00000030H
	je	SHORT $LL2@TS_RESP_se
; Line 1001
	cmp	BYTE PTR [esi], 46			; 0000002eH
	je	SHORT $LN7@TS_RESP_se
; Line 1002
	inc	esi
$LN7@TS_RESP_se:
; Line 1005
	mov	WORD PTR [esi], 90			; 0000005aH
	pop	esi
; Line 1009
	test	edi, edi
	jne	SHORT $LN8@TS_RESP_se
	push	24					; 00000018H
	call	_ASN1_STRING_type_new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	SHORT $err$18
$LN8@TS_RESP_se:
; Line 1011
	lea	eax, DWORD PTR _genTime_str$[esp+44]
	push	eax
	push	edi
	call	_ASN1_GENERALIZEDTIME_set_string
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@TS_RESP_se
; Line 1012
	push	edi
	call	_ASN1_GENERALIZEDTIME_free
	add	esp, 4
$err$18:
; Line 1018
	push	1018					; 000003faH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	115					; 00000073H
	push	134					; 00000086H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1019
	xor	eax, eax
	pop	edi
	pop	ebx
; Line 1020
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
$LN9@TS_RESP_se:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+44]
	mov	eax, edi
	pop	edi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
_TS_RESP_set_genTime_with_precision ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ESS_add_signing_cert
_TEXT	SEGMENT
_p$ = -4						; size = 4
_si$ = 8						; size = 4
_sc$ = 12						; size = 4
_ESS_add_signing_cert PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 917
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 918
	xor	esi, esi
; Line 922
	push	esi
	push	DWORD PTR _sc$[esp+16]
	call	_i2d_ESS_SIGNING_CERT
; Line 923
	push	923					; 0000039bH
	mov	ebx, eax
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	ebx
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 20					; 00000014H
	test	edi, edi
	jne	SHORT $LN2@ESS_add_si
; Line 924
	push	924					; 0000039cH
; Line 925
	jmp	SHORT $LN6@ESS_add_si
$LN2@ESS_add_si:
; Line 928
	lea	eax, DWORD PTR _p$[esp+16]
	mov	DWORD PTR _p$[esp+16], edi
	push	eax
	push	DWORD PTR _sc$[esp+16]
	call	_i2d_ESS_SIGNING_CERT
	add	esp, 8
; Line 929
	call	_ASN1_STRING_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN4@ESS_add_si
	push	ebx
	push	edi
	push	esi
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@ESS_add_si
; Line 933
	push	edi
	call	_CRYPTO_free
; Line 935
	push	esi
	push	16					; 00000010H
	push	223					; 000000dfH
	push	DWORD PTR _si$[esp+28]
	call	_PKCS7_add_signed_attribute
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebx
; Line 943
	pop	ecx
	ret	0
$LN4@ESS_add_si:
; Line 930
	push	930					; 000003a2H
$LN6@ESS_add_si:
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	112					; 00000070H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$8:
; Line 939
	push	esi
	call	_ASN1_STRING_free
; Line 940
	push	edi
	call	_CRYPTO_free
	add	esp, 8
; Line 942
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 943
	pop	ecx
	ret	0
_ESS_add_signing_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_TST_INFO_content_new
_TEXT	SEGMENT
_p7$ = 8						; size = 4
_TS_TST_INFO_content_new PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 890
	push	esi
	push	edi
; Line 892
	xor	edi, edi
; Line 895
	call	_PKCS7_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $err$8
; Line 897
	call	_ASN1_TYPE_new
	mov	DWORD PTR [esi+20], eax
	test	eax, eax
	je	SHORT $err$8
; Line 899
	push	207					; 000000cfH
	call	_OBJ_nid2obj
	add	esp, 4
	mov	DWORD PTR [esi+16], eax
; Line 900
	call	_ASN1_OCTET_STRING_new
	mov	edi, eax
	test	edi, edi
	je	SHORT $err$8
; Line 902
	push	edi
	push	4
	push	DWORD PTR [esi+20]
	call	_ASN1_TYPE_set
; Line 906
	push	esi
	push	DWORD PTR _p7$[esp+20]
	xor	edi, edi
	call	_PKCS7_set_content
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$8
; Line 909
	lea	eax, DWORD PTR [edi+1]
	pop	edi
	pop	esi
; Line 914
	ret	0
$err$8:
; Line 911
	push	edi
	call	_ASN1_OCTET_STRING_free
; Line 912
	push	esi
	call	_PKCS7_free
	add	esp, 8
; Line 913
	xor	eax, eax
	pop	edi
	pop	esi
; Line 914
	ret	0
_TS_TST_INFO_content_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ESS_CERT_ID_new_init
_TEXT	SEGMENT
_cert$ = 8						; size = 4
_issuer_needed$ = 12					; size = 4
_ESS_CERT_ID_new_init PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 846
	push	ebx
; Line 851
	mov	ebx, DWORD PTR _cert$[esp]
	push	esi
	push	edi
	xor	edi, edi
	push	edi
	push	-1
	push	ebx
	call	_X509_check_purpose
	add	esp, 12					; 0000000cH
; Line 853
	call	_ESS_CERT_ID_new
	mov	esi, eax
	test	esi, esi
	je	$err$12
; Line 855
	push	20					; 00000014H
	lea	eax, DWORD PTR [ebx+80]
	push	eax
	push	DWORD PTR [esi]
	call	_ASN1_OCTET_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$12
; Line 860
	cmp	DWORD PTR _issuer_needed$[esp+8], edi
	je	SHORT $LN9@ESS_CERT_I
; Line 863
	cmp	DWORD PTR [esi+4], edi
	jne	SHORT $LN5@ESS_CERT_I
	call	_ESS_ISSUER_SERIAL_new
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	je	SHORT $err$12
$LN5@ESS_CERT_I:
; Line 866
	call	_GENERAL_NAME_new
	mov	edi, eax
	test	edi, edi
	je	SHORT $err$12
; Line 868
	mov	DWORD PTR [edi], 4
; Line 869
	mov	ecx, DWORD PTR [ebx]
	push	DWORD PTR [ecx+12]
	call	_X509_NAME_dup
	add	esp, 4
	mov	DWORD PTR [edi+4], eax
	test	eax, eax
	je	SHORT $err$12
; Line 871
	mov	eax, DWORD PTR [esi+4]
	push	edi
	push	DWORD PTR [eax]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $err$12
; Line 875
	mov	eax, DWORD PTR [esi+4]
	xor	edi, edi
	push	DWORD PTR [eax+4]
	call	_ASN1_INTEGER_free
; Line 876
	mov	eax, DWORD PTR [ebx]
	push	DWORD PTR [eax+4]
	call	_ASN1_INTEGER_dup
	mov	ecx, DWORD PTR [esi+4]
	add	esp, 8
	mov	DWORD PTR [ecx+4], eax
	test	eax, eax
	je	SHORT $err$12
$LN9@ESS_CERT_I:
	pop	edi
; Line 881
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 887
	ret	0
$err$12:
; Line 883
	push	edi
	call	_GENERAL_NAME_free
; Line 884
	push	esi
	call	_ESS_CERT_ID_free
; Line 885
	push	885					; 00000375H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	113					; 00000071H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 28					; 0000001cH
; Line 886
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 887
	ret	0
_ESS_CERT_ID_new_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ESS_SIGNING_CERT_new_init
_TEXT	SEGMENT
_signcert$ = 8						; size = 4
_certs$ = 12						; size = 4
_ESS_SIGNING_CERT_new_init PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 815
	push	ebx
	push	esi
	push	edi
; Line 821
	call	_ESS_SIGNING_CERT_new
	mov	edi, eax
	test	edi, edi
	je	$err$28
; Line 823
	cmp	DWORD PTR [edi], 0
	jne	SHORT $LN6@ESS_SIGNIN
	call	_sk_new_null
	mov	DWORD PTR [edi], eax
	test	eax, eax
	je	$err$28
$LN6@ESS_SIGNIN:
; Line 851
	mov	ebx, DWORD PTR _signcert$[esp+8]
	push	0
	push	-1
	push	ebx
	call	_X509_check_purpose
	add	esp, 12					; 0000000cH
; Line 853
	call	_ESS_CERT_ID_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $err$29
; Line 855
	push	20					; 00000014H
	lea	ecx, DWORD PTR [ebx+80]
	push	ecx
	push	DWORD PTR [esi]
	call	_ASN1_OCTET_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$29
; Line 828
	push	esi
	push	DWORD PTR [edi]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $err$28
; Line 831
	mov	ebx, DWORD PTR _certs$[esp+8]
	xor	esi, esi
	push	ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@ESS_SIGNIN
$LL4@ESS_SIGNIN:
; Line 832
	push	esi
	push	ebx
	call	_sk_value
; Line 834
	push	1
	push	eax
	call	_ESS_CERT_ID_new_init
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$28
	push	eax
	push	DWORD PTR [edi]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $err$28
; Line 831
	push	ebx
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@ESS_SIGNIN
$LN3@ESS_SIGNIN:
; Line 838
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 843
	ret	0
$err$29:
; Line 883
	push	0
	call	_GENERAL_NAME_free
; Line 884
	push	esi
	call	_ESS_CERT_ID_free
; Line 885
	push	885					; 00000375H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	113					; 00000071H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 28					; 0000001cH
$err$28:
; Line 840
	push	edi
	call	_ESS_SIGNING_CERT_free
; Line 841
	push	841					; 00000349H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	114					; 00000072H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 24					; 00000018H
; Line 842
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 843
	ret	0
_ESS_SIGNING_CERT_new_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_sign
_TEXT	SEGMENT
_sc$1$ = -4						; size = 4
_ctx$ = 8						; size = 4
_TS_RESP_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 706
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 717
	mov	esi, DWORD PTR _ctx$[esp+12]
	xor	ebx, ebx
	push	edi
	xor	edi, edi
	mov	DWORD PTR _sc$1$[esp+20], ebx
	xor	ebp, ebp
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	call	_X509_check_private_key
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@TS_RESP_si
; Line 718
	push	718					; 000002ceH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	120					; 00000078H
	push	136					; 00000088H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 719
	jmp	$LN30@TS_RESP_si
$LN5@TS_RESP_si:
; Line 723
	call	_PKCS7_new
	mov	edi, eax
	test	edi, edi
	jne	SHORT $LN6@TS_RESP_si
; Line 724
	push	724					; 000002d4H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	136					; 00000088H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 725
	jmp	$LN30@TS_RESP_si
$LN6@TS_RESP_si:
; Line 727
	push	22					; 00000016H
	push	edi
	call	_PKCS7_set_type
	add	esp, 8
	test	eax, eax
	je	$LN30@TS_RESP_si
; Line 731
	mov	eax, DWORD PTR [edi+20]
	push	3
	push	DWORD PTR [eax]
	call	_ASN1_INTEGER_set
	add	esp, 8
	test	eax, eax
	je	$LN30@TS_RESP_si
; Line 735
	push	DWORD PTR [esi+68]
	call	_TS_REQ_get_cert_req
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@TS_RESP_si
; Line 736
	push	DWORD PTR [esi]
	push	edi
	call	_PKCS7_add_certificate
; Line 737
	mov	eax, DWORD PTR [esi+8]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@TS_RESP_si
; Line 738
	push	eax
	xor	ebx, ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@TS_RESP_si
$LL4@TS_RESP_si:
; Line 739
	push	ebx
	push	DWORD PTR [esi+8]
	call	_sk_value
; Line 740
	push	eax
	push	edi
	call	_PKCS7_add_certificate
	push	DWORD PTR [esi+8]
	inc	ebx
	call	_sk_num
	add	esp, 20					; 00000014H
	cmp	ebx, eax
	jl	SHORT $LL4@TS_RESP_si
$LN3@TS_RESP_si:
; Line 746
	call	_EVP_sha1
	push	eax
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	push	edi
	call	_PKCS7_add_signature
	mov	ebx, eax
	add	esp, 16					; 00000010H
	test	ebx, ebx
	jne	SHORT $LN11@TS_RESP_si
; Line 748
	push	748					; 000002ecH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	118					; 00000076H
$LN34@TS_RESP_si:
; Line 756
	push	136					; 00000088H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN32@TS_RESP_si:
	xor	ebx, ebx
$LN30@TS_RESP_si:
; Line 380
	push	DWORD PTR [esi+72]
	call	_TS_RESP_get_status_info
; Line 382
	push	DWORD PTR [eax]
	call	_ASN1_INTEGER_get
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN24@TS_RESP_si
; Line 384
	push	OFFSET ??_C@_0CD@EIFJLLDN@Error?5during?5signature?5generatio@
	push	2
	push	esi
	call	_TS_RESP_CTX_set_status_info
	add	esp, 12					; 0000000cH
$LN24@TS_RESP_si:
; Line 807
	push	ebp
	call	_BIO_free_all
; Line 808
	push	DWORD PTR _sc$1$[esp+24]
	call	_ESS_SIGNING_CERT_free
; Line 809
	push	edi
	call	_PKCS7_free
	add	esp, 12					; 0000000cH
; Line 810
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 811
	pop	ecx
	ret	0
$LN11@TS_RESP_si:
; Line 753
	push	207					; 000000cfH
	call	_OBJ_nid2obj
; Line 754
	push	eax
	push	6
	push	50					; 00000032H
	push	ebx
	call	_PKCS7_add_signed_attribute
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN12@TS_RESP_si
; Line 756
	push	756					; 000002f4H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	119					; 00000077H
; Line 757
	jmp	$LN34@TS_RESP_si
$LN12@TS_RESP_si:
; Line 764
	test	BYTE PTR [esi+40], 4
	je	SHORT $LN21@TS_RESP_si
	mov	eax, DWORD PTR [esi+8]
	jmp	SHORT $LN22@TS_RESP_si
$LN21@TS_RESP_si:
	xor	eax, eax
$LN22@TS_RESP_si:
; Line 765
	push	eax
	push	DWORD PTR [esi]
	call	_ESS_SIGNING_CERT_new_init
	add	esp, 8
	mov	DWORD PTR _sc$1$[esp+20], eax
	test	eax, eax
	je	$LN32@TS_RESP_si
; Line 769
	push	eax
	push	ebx
	call	_ESS_add_signing_cert
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN14@TS_RESP_si
; Line 770
	push	770					; 00000302H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	116					; 00000074H
; Line 771
	jmp	$LN34@TS_RESP_si
$LN14@TS_RESP_si:
; Line 775
	push	edi
	call	_TS_TST_INFO_content_new
	add	esp, 4
	test	eax, eax
	je	$LN32@TS_RESP_si
; Line 779
	push	0
	push	edi
	call	_PKCS7_dataInit
	mov	ebp, eax
	add	esp, 8
	test	ebp, ebp
	jne	SHORT $LN16@TS_RESP_si
; Line 780
	push	780					; 0000030cH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
; Line 781
	jmp	$LN34@TS_RESP_si
$LN16@TS_RESP_si:
; Line 785
	push	DWORD PTR [esi+76]
	push	ebp
	call	_i2d_TS_TST_INFO_bio
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@TS_RESP_si
; Line 786
	push	786					; 00000312H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	124					; 0000007cH
; Line 787
	jmp	$LN34@TS_RESP_si
$LN17@TS_RESP_si:
; Line 791
	push	ebp
	push	edi
	call	_PKCS7_dataFinal
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN18@TS_RESP_si
; Line 792
	push	792					; 00000318H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	124					; 0000007cH
	jmp	$LN34@TS_RESP_si
$LN18@TS_RESP_si:
; Line 797
	push	DWORD PTR [esi+76]
	push	edi
	push	DWORD PTR [esi+72]
	call	_TS_RESP_set_tst_info
	add	esp, 12					; 0000000cH
; Line 798
	xor	edi, edi
; Line 799
	mov	DWORD PTR [esi+76], edi
; Line 801
	lea	ebx, DWORD PTR [edi+1]
; Line 803
	jmp	$LN24@TS_RESP_si
_TS_RESP_sign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_process_extensions
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_TS_RESP_process_extensions PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 685
	push	ebx
	push	ebp
; Line 686
	mov	ebp, DWORD PTR _ctx$[esp+4]
	push	esi
	push	edi
	push	DWORD PTR [ebp+68]
	call	_TS_REQ_get_exts
	add	esp, 4
	mov	ebx, eax
; Line 688
	mov	edi, 1
; Line 690
	xor	esi, esi
	npad	4
$LL4@TS_RESP_pr:
	push	ebx
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jge	SHORT $LN10@TS_RESP_pr
; Line 691
	push	esi
	push	ebx
	call	_sk_value
; Line 698
	push	0
	push	eax
	mov	eax, DWORD PTR [ebp+60]
	push	ebp
	call	eax
	mov	edi, eax
	add	esp, 20					; 00000014H
	inc	esi
	test	edi, edi
	jne	SHORT $LL4@TS_RESP_pr
$LN10@TS_RESP_pr:
; Line 701
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 702
	ret	0
_TS_RESP_process_extensions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_create_tst_info
_TEXT	SEGMENT
_asn1_time$1$ = -16					; size = 4
_serial$1$ = -12					; size = 4
_usec$ = -8						; size = 4
_sec$ = -4						; size = 4
_ctx$ = 8						; size = 4
_policy$ = 12						; size = 4
_TS_RESP_create_tst_info PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 600
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 603
	mov	DWORD PTR _serial$1$[esp+32], 0
; Line 606
	xor	ebx, ebx
	mov	DWORD PTR _asn1_time$1$[esp+32], 0
; Line 608
	xor	ebp, ebp
; Line 610
	call	_TS_TST_INFO_new
	mov	esi, DWORD PTR _ctx$[esp+28]
	mov	edi, eax
	test	edi, edi
	je	$LN27@TS_RESP_cr
; Line 612
	push	1
	push	edi
	call	_TS_TST_INFO_set_version
	add	esp, 8
	test	eax, eax
	je	$LN27@TS_RESP_cr
; Line 614
	push	DWORD PTR _policy$[esp+28]
	push	edi
	call	_TS_TST_INFO_set_policy_id
	add	esp, 8
	test	eax, eax
	je	$LN27@TS_RESP_cr
; Line 616
	mov	eax, DWORD PTR [esi+68]
	push	DWORD PTR [eax+4]
	push	edi
	call	_TS_TST_INFO_set_msg_imprint
	add	esp, 8
	test	eax, eax
	je	$LN27@TS_RESP_cr
; Line 619
	push	DWORD PTR [esi+48]
	mov	eax, DWORD PTR [esi+44]
	push	esi
	call	eax
	add	esp, 8
	mov	DWORD PTR _serial$1$[esp+32], eax
	test	eax, eax
	je	$LN27@TS_RESP_cr
	push	eax
	push	edi
	call	_TS_TST_INFO_set_serial
	add	esp, 8
	test	eax, eax
	je	$LN27@TS_RESP_cr
; Line 625
	lea	eax, DWORD PTR _usec$[esp+32]
	push	eax
	lea	eax, DWORD PTR _sec$[esp+36]
	push	eax
	push	DWORD PTR [esi+56]
	mov	eax, DWORD PTR [esi+52]
	push	esi
	call	eax
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN27@TS_RESP_cr
	push	DWORD PTR [esi+36]
	push	DWORD PTR _usec$[esp+36]
	push	DWORD PTR _sec$[esp+40]
	push	ebp
	call	_TS_RESP_set_genTime_with_precision
	add	esp, 16					; 00000010H
	mov	DWORD PTR _asn1_time$1$[esp+32], eax
	test	eax, eax
	je	$LN27@TS_RESP_cr
	push	eax
	push	edi
	call	_TS_TST_INFO_set_time
	add	esp, 8
	test	eax, eax
	je	$LN27@TS_RESP_cr
; Line 630
	cmp	DWORD PTR [esi+24], ebx
	jne	SHORT $LN11@TS_RESP_cr
	cmp	DWORD PTR [esi+28], ebx
	jne	SHORT $LN11@TS_RESP_cr
	cmp	DWORD PTR [esi+32], ebx
	je	SHORT $LN10@TS_RESP_cr
$LN11@TS_RESP_cr:
	call	_TS_ACCURACY_new
	mov	ebx, eax
	test	ebx, ebx
	je	$LN27@TS_RESP_cr
$LN10@TS_RESP_cr:
; Line 633
	mov	eax, DWORD PTR [esi+24]
	test	eax, eax
	je	SHORT $LN12@TS_RESP_cr
	push	eax
	push	ebx
	call	_TS_ACCURACY_set_seconds
	add	esp, 8
	test	eax, eax
	je	$LN27@TS_RESP_cr
$LN12@TS_RESP_cr:
; Line 635
	mov	eax, DWORD PTR [esi+28]
	test	eax, eax
	je	SHORT $LN13@TS_RESP_cr
	push	eax
	push	ebx
	call	_TS_ACCURACY_set_millis
	add	esp, 8
	test	eax, eax
	je	$LN27@TS_RESP_cr
$LN13@TS_RESP_cr:
; Line 637
	mov	eax, DWORD PTR [esi+32]
	test	eax, eax
	je	SHORT $LN14@TS_RESP_cr
	push	eax
	push	ebx
	call	_TS_ACCURACY_set_micros
	add	esp, 8
	test	eax, eax
	je	$LN27@TS_RESP_cr
$LN14@TS_RESP_cr:
; Line 639
	test	ebx, ebx
	je	SHORT $LN15@TS_RESP_cr
	push	ebx
	push	edi
	call	_TS_TST_INFO_set_accuracy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN27@TS_RESP_cr
$LN15@TS_RESP_cr:
; Line 644
	test	BYTE PTR [esi+40], 2
	je	SHORT $LN16@TS_RESP_cr
	push	1
	push	edi
	call	_TS_TST_INFO_set_ordering
	add	esp, 8
	test	eax, eax
	je	SHORT $LN27@TS_RESP_cr
$LN16@TS_RESP_cr:
; Line 649
	push	DWORD PTR [esi+68]
	call	_TS_REQ_get_nonce
	add	esp, 4
	test	eax, eax
	je	SHORT $LN17@TS_RESP_cr
	push	eax
	push	edi
	call	_TS_TST_INFO_set_nonce
	add	esp, 8
	test	eax, eax
	je	SHORT $LN27@TS_RESP_cr
$LN17@TS_RESP_cr:
; Line 653
	test	BYTE PTR [esi+40], 1
	je	SHORT $LN25@TS_RESP_cr
; Line 654
	call	_GENERAL_NAME_new
	mov	ebp, eax
	test	ebp, ebp
	je	SHORT $LN27@TS_RESP_cr
; Line 656
	mov	DWORD PTR [ebp], 4
; Line 657
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx]
	push	DWORD PTR [ecx+20]
	call	_X509_NAME_dup
	add	esp, 4
	mov	DWORD PTR [ebp+4], eax
; Line 659
	test	eax, eax
	je	SHORT $LN27@TS_RESP_cr
; Line 661
	push	ebp
	push	edi
	call	_TS_TST_INFO_set_tsa
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN25@TS_RESP_cr
$LN27@TS_RESP_cr:
; Line 668
	push	edi
	call	_TS_TST_INFO_free
; Line 670
	push	670					; 0000029eH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	123					; 0000007bH
	push	123					; 0000007bH
	push	47					; 0000002fH
	xor	edi, edi
	call	_ERR_put_error
; Line 380
	push	DWORD PTR [esi+72]
	call	_TS_RESP_get_status_info
; Line 382
	push	DWORD PTR [eax]
	call	_ASN1_INTEGER_get
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN25@TS_RESP_cr
; Line 384
	push	OFFSET ??_C@_0CB@FHFIDOJI@Error?5during?5TSTInfo?5generation?4@
	push	2
	push	esi
	call	_TS_RESP_CTX_set_status_info
	add	esp, 12					; 0000000cH
$LN25@TS_RESP_cr:
; Line 675
	push	ebp
	call	_GENERAL_NAME_free
; Line 676
	push	ebx
	call	_TS_ACCURACY_free
; Line 677
	push	DWORD PTR _asn1_time$1$[esp+40]
	call	_ASN1_GENERALIZEDTIME_free
; Line 678
	push	DWORD PTR _serial$1$[esp+44]
	call	_ASN1_INTEGER_free
	add	esp, 16					; 00000010H
; Line 680
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 681
	add	esp, 16					; 00000010H
	ret	0
_TS_RESP_create_tst_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_get_policy
_TEXT	SEGMENT
_requested$1$ = 8					; size = 4
_ctx$ = 8						; size = 4
_TS_RESP_get_policy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 566
	push	ebx
; Line 567
	mov	ebx, DWORD PTR _ctx$[esp]
	push	edi
	push	DWORD PTR [ebx+68]
	call	_TS_REQ_get_policy_id
; Line 571
	mov	ecx, DWORD PTR [ebx+16]
	add	esp, 4
	xor	edi, edi
	mov	DWORD PTR _requested$1$[esp+4], eax
	test	ecx, ecx
	jne	SHORT $LN5@TS_RESP_ge
; Line 572
	push	572					; 0000023cH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	102					; 00000066H
	push	133					; 00000085H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 573
	xor	eax, eax
	pop	edi
	pop	ebx
; Line 595
	ret	0
$LN5@TS_RESP_ge:
; Line 579
	test	eax, eax
	je	SHORT $LN7@TS_RESP_ge
	push	ecx
	push	eax
	call	_OBJ_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@TS_RESP_ge
$LN7@TS_RESP_ge:
; Line 580
	mov	edi, DWORD PTR [ebx+16]
$LN6@TS_RESP_ge:
	push	ebp
; Line 583
	xor	ebp, ebp
	test	edi, edi
	jne	$LN13@TS_RESP_ge
	push	esi
	npad	1
$LL4@TS_RESP_ge:
	push	DWORD PTR [ebx+12]
	call	_sk_num
	add	esp, 4
	cmp	ebp, eax
	jge	SHORT $LN3@TS_RESP_ge
; Line 584
	push	ebp
	push	DWORD PTR [ebx+12]
	call	_sk_value
	mov	esi, eax
; Line 585
	push	esi
	push	DWORD PTR _requested$1$[esp+24]
	call	_OBJ_cmp
	add	esp, 16					; 00000010H
	test	eax, eax
	cmove	edi, esi
	inc	ebp
	test	edi, edi
	je	SHORT $LL4@TS_RESP_ge
; Line 594
	pop	esi
	pop	ebp
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 595
	ret	0
$LN3@TS_RESP_ge:
; Line 588
	test	edi, edi
	jne	SHORT $LN19@TS_RESP_ge
; Line 589
	push	589					; 0000024dH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	125					; 0000007dH
	push	133					; 00000085H
	push	47					; 0000002fH
	call	_ERR_put_error
; Line 590
	push	OFFSET ??_C@_0CD@CNMJDOJA@Requested?5policy?5is?5not?5supporte@
	push	2
	push	ebx
	call	_TS_RESP_CTX_set_status_info
; Line 391
	push	DWORD PTR [ebx+72]
	call	_TS_RESP_get_status_info
	mov	esi, eax
	add	esp, 36					; 00000024H
; Line 392
	cmp	DWORD PTR [esi+8], edi
	jne	SHORT $LN12@TS_RESP_ge
	call	_ASN1_BIT_STRING_new
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	je	SHORT $err$21
$LN12@TS_RESP_ge:
; Line 394
	push	1
	push	15					; 0000000fH
	push	DWORD PTR [esi+8]
	call	_ASN1_BIT_STRING_set_bit
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN19@TS_RESP_ge
$err$21:
; Line 398
	push	398					; 0000018eH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	124					; 0000007cH
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN19@TS_RESP_ge:
	pop	esi
$LN13@TS_RESP_ge:
	pop	ebp
; Line 594
	mov	eax, edi
	pop	edi
	pop	ebx
; Line 595
	ret	0
_TS_RESP_get_policy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_check_request
_TEXT	SEGMENT
_md_alg$1$ = -8						; size = 4
_msg_imprint$1$ = -4					; size = 4
_md_alg_id$1$ = 8					; size = 4
_ctx$ = 8						; size = 4
_TS_RESP_check_request PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 510
	mov	eax, 8
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 511
	mov	edi, DWORD PTR _ctx$[esp+16]
; Line 516
	xor	ebx, ebx
	mov	esi, DWORD PTR [edi+68]
; Line 520
	push	esi
	call	_TS_REQ_get_version
	add	esp, 4
	cmp	eax, 1
	je	SHORT $LN5@TS_RESP_ch
; Line 521
	push	OFFSET ??_C@_0BF@LJAOPGO@Bad?5request?5version?4?$AA@
	push	2
	push	edi
	call	_TS_RESP_CTX_set_status_info
; Line 523
	push	2
	push	edi
	call	_TS_RESP_CTX_add_failure_info
	add	esp, 20					; 00000014H
; Line 524
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 562
	add	esp, 8
	ret	0
$LN5@TS_RESP_ch:
	push	ebp
; Line 528
	push	esi
	call	_TS_REQ_get_msg_imprint
	mov	esi, eax
; Line 529
	push	esi
	mov	DWORD PTR _msg_imprint$1$[esp+32], esi
	call	_TS_MSG_IMPRINT_get_algo
	mov	DWORD PTR _md_alg$1$[esp+32], eax
; Line 530
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _md_alg_id$1$[esp+20], eax
; Line 531
	xor	ebp, ebp
	npad	4
$LL4@TS_RESP_ch:
	push	DWORD PTR [edi+20]
	call	_sk_num
	add	esp, 4
	cmp	ebp, eax
	jge	SHORT $LN3@TS_RESP_ch
; Line 532
	push	ebp
	push	DWORD PTR [edi+20]
	call	_sk_value
	mov	esi, eax
; Line 533
	push	esi
	call	_EVP_MD_type
	add	esp, 12					; 0000000cH
	cmp	DWORD PTR _md_alg_id$1$[esp+20], eax
	cmove	ebx, esi
	inc	ebp
	test	ebx, ebx
	je	SHORT $LL4@TS_RESP_ch
$LN7@TS_RESP_ch:
; Line 545
	mov	eax, DWORD PTR _md_alg$1$[esp+24]
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	$LN8@TS_RESP_ch
	push	eax
	call	_ASN1_TYPE_get
	add	esp, 4
	cmp	eax, 5
	je	$LN8@TS_RESP_ch
; Line 546
	push	OFFSET ??_C@_0CG@MHCAOKLJ@Superfluous?5message?5digest?5param@
	push	2
	push	edi
	call	_TS_RESP_CTX_set_status_info
; Line 549
	push	0
	push	edi
	call	_TS_RESP_CTX_add_failure_info
	add	esp, 20					; 00000014H
; Line 550
	xor	eax, eax
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 562
	add	esp, 8
	ret	0
$LN3@TS_RESP_ch:
; Line 536
	test	ebx, ebx
	jne	SHORT $LN7@TS_RESP_ch
; Line 537
	push	OFFSET ??_C@_0CL@IPOEKJMF@Message?5digest?5algorithm?5is?5not?5@
	push	2
	push	edi
	call	_TS_RESP_CTX_set_status_info
; Line 391
	push	DWORD PTR [edi+72]
	call	_TS_RESP_get_status_info
	mov	esi, eax
	add	esp, 16					; 00000010H
; Line 392
	cmp	DWORD PTR [esi+8], ebx
	jne	SHORT $LN12@TS_RESP_ch
	call	_ASN1_BIT_STRING_new
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	je	SHORT $err$21
$LN12@TS_RESP_ch:
; Line 394
	push	1
	push	0
	push	DWORD PTR [esi+8]
	call	_ASN1_BIT_STRING_set_bit
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN13@TS_RESP_ch
$err$21:
; Line 398
	push	398					; 0000018eH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	124					; 0000007cH
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN13@TS_RESP_ch:
	pop	ebp
	pop	edi
	pop	esi
; Line 541
	xor	eax, eax
	pop	ebx
; Line 562
	add	esp, 8
	ret	0
$LN8@TS_RESP_ch:
; Line 553
	push	DWORD PTR _msg_imprint$1$[esp+24]
	call	_TS_MSG_IMPRINT_get_msg
; Line 554
	push	ebx
	mov	esi, eax
	call	_EVP_MD_size
	add	esp, 8
	cmp	DWORD PTR [esi], eax
	je	SHORT $LN9@TS_RESP_ch
; Line 555
	push	OFFSET ??_C@_0BE@PBMOHPHD@Bad?5message?5digest?4?$AA@
	push	2
	push	edi
	call	_TS_RESP_CTX_set_status_info
; Line 557
	push	5
	push	edi
	call	_TS_RESP_CTX_add_failure_info
	add	esp, 20					; 00000014H
; Line 558
	xor	eax, eax
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 562
	add	esp, 8
	ret	0
$LN9@TS_RESP_ch:
	pop	ebp
	pop	edi
	pop	esi
; Line 561
	mov	eax, 1
	pop	ebx
; Line 562
	add	esp, 8
	ret	0
_TS_RESP_check_request ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_cleanup
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_TS_RESP_CTX_cleanup PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 499
	push	esi
; Line 500
	mov	esi, DWORD PTR _ctx$[esp]
	push	DWORD PTR [esi+68]
	call	_TS_REQ_free
; Line 502
	push	DWORD PTR [esi+72]
	mov	DWORD PTR [esi+68], 0
	call	_TS_RESP_free
; Line 504
	push	DWORD PTR [esi+76]
	mov	DWORD PTR [esi+72], 0
	call	_TS_TST_INFO_free
	add	esp, 12					; 0000000cH
; Line 505
	mov	DWORD PTR [esi+76], 0
	pop	esi
; Line 506
	ret	0
_TS_RESP_CTX_cleanup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_TS_RESP_CTX_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 492
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	DWORD PTR [eax+68], 0
; Line 493
	mov	DWORD PTR [eax+72], 0
; Line 494
	mov	DWORD PTR [eax+76], 0
; Line 495
	ret	0
_TS_RESP_CTX_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _def_extension_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_ext$ = 12						; size = 4
_data$ = 16						; size = 4
_def_extension_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 158
	push	esi
; Line 160
	mov	esi, DWORD PTR _ctx$[esp]
	push	OFFSET ??_C@_0BH@DLFNNFMJ@Unsupported?5extension?4?$AA@
	push	2
	push	esi
	call	_TS_RESP_CTX_set_status_info
; Line 391
	push	DWORD PTR [esi+72]
	call	_TS_RESP_get_status_info
	mov	esi, eax
	add	esp, 16					; 00000010H
; Line 392
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN4@def_extens
	call	_ASN1_BIT_STRING_new
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	je	SHORT $err$9
$LN4@def_extens:
; Line 394
	push	1
	push	16					; 00000010H
	push	DWORD PTR [esi+8]
	call	_ASN1_BIT_STRING_set_bit
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@def_extens
$err$9:
; Line 398
	push	398					; 0000018eH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	124					; 0000007cH
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN7@def_extens:
; Line 163
	xor	eax, eax
	pop	esi
; Line 164
	ret	0
_def_extension_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _def_time_cb
_TEXT	SEGMENT
_t$ = -8						; size = 8
_ctx$ = 8						; size = 4
_data$ = 12						; size = 4
_sec$ = 16						; size = 4
_usec$ = 20						; size = 4
_def_time_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 138
	mov	eax, 8
	call	__chkstk
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	lea	eax, DWORD PTR _t$[esp+8]
	push	eax
	call	DWORD PTR __imp___time64
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 140
	and	eax, edx
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	add	esp, 4
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 140
	cmp	eax, -1
	jne	SHORT $LN2@def_time_c
; Line 141
	push	141					; 0000008dH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	122					; 0000007aH
	push	111					; 0000006fH
	push	47					; 0000002fH
	call	_ERR_put_error
; Line 142
	push	OFFSET ??_C@_0BH@BCEEDHCH@Time?5is?5not?5available?4?$AA@
	push	2
	push	DWORD PTR _ctx$[esp+32]
	call	_TS_RESP_CTX_set_status_info
; Line 144
	push	14					; 0000000eH
	push	DWORD PTR _ctx$[esp+40]
	call	_TS_RESP_CTX_add_failure_info
	add	esp, 40					; 00000028H
; Line 145
	xor	eax, eax
; Line 152
	add	esp, 8
	ret	0
$LN2@def_time_c:
; Line 148
	mov	ecx, DWORD PTR _sec$[esp+4]
	mov	eax, DWORD PTR _t$[esp+8]
	mov	DWORD PTR [ecx], eax
; Line 149
	mov	eax, DWORD PTR _usec$[esp+4]
	mov	DWORD PTR [eax], 0
; Line 151
	mov	eax, 1
; Line 152
	add	esp, 8
	ret	0
_def_time_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _def_serial_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_data$ = 12						; size = 4
_def_serial_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 98
	push	esi
; Line 99
	call	_ASN1_INTEGER_new
	mov	esi, eax
; Line 100
	test	esi, esi
	je	SHORT $err$6
; Line 102
	push	1
	push	esi
	call	_ASN1_INTEGER_set
	add	esp, 8
	test	eax, eax
	je	SHORT $err$6
; Line 104
	mov	eax, esi
	pop	esi
; Line 110
	ret	0
$err$6:
; Line 106
	push	106					; 0000006aH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	110					; 0000006eH
	push	47					; 0000002fH
	call	_ERR_put_error
; Line 107
	push	OFFSET ??_C@_0CH@IKKNJBOJ@Error?5during?5serial?5number?5gener@
	push	2
	push	DWORD PTR _ctx$[esp+28]
	call	_TS_RESP_CTX_set_status_info
	add	esp, 32					; 00000020H
; Line 109
	xor	eax, eax
	pop	esi
; Line 110
	ret	0
_def_serial_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_create_response
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_req_bio$ = 12						; size = 4
_TS_RESP_create_response PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 423
	push	esi
	push	edi
; Line 492
	mov	edi, DWORD PTR _ctx$[esp+4]
	mov	DWORD PTR [edi+68], 0
; Line 493
	mov	DWORD PTR [edi+72], 0
; Line 494
	mov	DWORD PTR [edi+76], 0
; Line 431
	call	_TS_RESP_new
	mov	DWORD PTR [edi+72], eax
	test	eax, eax
	jne	SHORT $LN2@TS_RESP_cr
; Line 432
	push	432					; 000001b0H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	122					; 0000007aH
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 433
	jmp	$LN21@TS_RESP_cr
$LN2@TS_RESP_cr:
; Line 437
	push	0
	push	DWORD PTR _req_bio$[esp+8]
	call	_d2i_TS_REQ_bio
	add	esp, 8
	mov	DWORD PTR [edi+68], eax
	test	eax, eax
	jne	SHORT $LN3@TS_RESP_cr
; Line 438
	push	OFFSET ??_C@_0CE@OCFPDKJO@Bad?5request?5format?5or?5system?5err@
	push	2
	push	edi
	call	_TS_RESP_CTX_set_status_info
; Line 440
	push	5
	push	edi
	call	_TS_RESP_CTX_add_failure_info
	add	esp, 20					; 00000014H
; Line 441
	jmp	SHORT $LN21@TS_RESP_cr
$LN3@TS_RESP_cr:
; Line 445
	push	0
	push	0
	push	edi
	call	_TS_RESP_CTX_set_status_info
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN21@TS_RESP_cr
; Line 449
	push	edi
	call	_TS_RESP_check_request
	add	esp, 4
	test	eax, eax
	je	SHORT $LN21@TS_RESP_cr
; Line 453
	push	edi
	call	_TS_RESP_get_policy
	add	esp, 4
	test	eax, eax
	je	SHORT $LN21@TS_RESP_cr
; Line 457
	push	eax
	push	edi
	call	_TS_RESP_create_tst_info
	add	esp, 8
	mov	DWORD PTR [edi+76], eax
	test	eax, eax
	je	SHORT $LN21@TS_RESP_cr
; Line 461
	push	edi
	call	_TS_RESP_process_extensions
	add	esp, 4
	test	eax, eax
	je	SHORT $LN21@TS_RESP_cr
; Line 465
	push	edi
	call	_TS_RESP_sign
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN12@TS_RESP_cr
$LN21@TS_RESP_cr:
; Line 472
	push	472					; 000001d8H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	121					; 00000079H
	push	122					; 0000007aH
	push	47					; 0000002fH
	call	_ERR_put_error
; Line 473
	mov	eax, DWORD PTR [edi+72]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN12@TS_RESP_cr
; Line 380
	push	eax
	call	_TS_RESP_get_status_info
; Line 382
	push	DWORD PTR [eax]
	call	_ASN1_INTEGER_get
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN12@TS_RESP_cr
; Line 384
	push	OFFSET ??_C@_0CC@DNFFCHKG@Error?5during?5response?5generation@
	push	2
	push	edi
	call	_TS_RESP_CTX_set_status_info
	add	esp, 12					; 0000000cH
; Line 477
	test	eax, eax
	jne	SHORT $LN12@TS_RESP_cr
; Line 478
	push	DWORD PTR [edi+72]
	call	_TS_RESP_free
	add	esp, 4
; Line 479
	mov	DWORD PTR [edi+72], 0
$LN12@TS_RESP_cr:
; Line 483
	mov	esi, DWORD PTR [edi+72]
; Line 500
	push	DWORD PTR [edi+68]
; Line 484
	mov	DWORD PTR [edi+72], 0
; Line 500
	call	_TS_REQ_free
; Line 502
	push	DWORD PTR [edi+72]
	mov	DWORD PTR [edi+68], 0
	call	_TS_RESP_free
; Line 504
	push	DWORD PTR [edi+76]
	mov	DWORD PTR [edi+72], 0
	call	_TS_TST_INFO_free
	add	esp, 12					; 0000000cH
; Line 505
	mov	DWORD PTR [edi+76], 0
; Line 486
	mov	eax, esi
	pop	edi
	pop	esi
; Line 487
	ret	0
_TS_RESP_create_response ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_get_tst_info
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_TS_RESP_CTX_get_tst_info PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 409
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+76]
; Line 410
	ret	0
_TS_RESP_CTX_get_tst_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_get_request
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_TS_RESP_CTX_get_request PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 404
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+68]
; Line 405
	ret	0
_TS_RESP_CTX_get_request ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_add_failure_info
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_failure$ = 12						; size = 4
_TS_RESP_CTX_add_failure_info PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 391
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
	push	DWORD PTR [eax+72]
	call	_TS_RESP_get_status_info
	mov	esi, eax
	add	esp, 4
; Line 392
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN2@TS_RESP_CT
	call	_ASN1_BIT_STRING_new
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	je	SHORT $err$6
$LN2@TS_RESP_CT:
; Line 394
	push	1
	push	DWORD PTR _failure$[esp+4]
	push	DWORD PTR [esi+8]
	call	_ASN1_BIT_STRING_set_bit
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@TS_RESP_CT
$err$6:
; Line 398
	push	398					; 0000018eH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	124					; 0000007cH
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 399
	xor	eax, eax
	pop	esi
; Line 400
	ret	0
$LN3@TS_RESP_CT:
; Line 396
	mov	eax, 1
	pop	esi
; Line 400
	ret	0
_TS_RESP_CTX_add_failure_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_status_info_cond
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_status$ = 12						; size = 4
_text$ = 16						; size = 4
_TS_RESP_CTX_set_status_info_cond PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 378
	push	esi
; Line 380
	mov	esi, DWORD PTR _ctx$[esp]
	push	DWORD PTR [esi+72]
	call	_TS_RESP_get_status_info
; Line 382
	push	DWORD PTR [eax]
	call	_ASN1_INTEGER_get
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@TS_RESP_CT
; Line 384
	push	DWORD PTR _text$[esp]
	push	DWORD PTR _status$[esp+4]
	push	esi
	call	_TS_RESP_CTX_set_status_info
	add	esp, 12					; 0000000cH
	pop	esi
; Line 387
	ret	0
$LN4@TS_RESP_CT:
; Line 386
	mov	eax, 1
	pop	esi
; Line 387
	ret	0
_TS_RESP_CTX_set_status_info_cond ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_status_info
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_status$ = 12						; size = 4
_text$ = 16						; size = 4
_TS_RESP_CTX_set_status_info PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 346
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 348
	xor	edi, edi
; Line 349
	xor	ebp, ebp
; Line 351
	call	_TS_STATUS_INFO_new
	mov	esi, eax
	test	esi, esi
	je	$LN12@TS_RESP_CT
; Line 353
	push	DWORD PTR _status$[esp+12]
	push	DWORD PTR [esi]
	call	_ASN1_INTEGER_set
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@TS_RESP_CT
; Line 355
	mov	ebx, DWORD PTR _text$[esp+12]
	test	ebx, ebx
	je	SHORT $LN4@TS_RESP_CT
; Line 357
	call	_ASN1_UTF8STRING_new
	mov	edi, eax
	test	edi, edi
	je	SHORT $LN12@TS_RESP_CT
	mov	ecx, ebx
	lea	edx, DWORD PTR [ecx+1]
$LL13@TS_RESP_CT:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL13@TS_RESP_CT
	sub	ecx, edx
	push	ecx
	push	ebx
	push	edi
	call	_ASN1_STRING_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN12@TS_RESP_CT
; Line 359
	cmp	DWORD PTR [esi+4], ebp
	jne	SHORT $LN7@TS_RESP_CT
	call	_sk_new_null
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	je	SHORT $LN12@TS_RESP_CT
$LN7@TS_RESP_CT:
; Line 361
	push	edi
	push	DWORD PTR [esi+4]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@TS_RESP_CT
; Line 363
	xor	edi, edi
$LN4@TS_RESP_CT:
; Line 365
	mov	eax, DWORD PTR _ctx$[esp+12]
	push	esi
	push	DWORD PTR [eax+72]
	call	_TS_RESP_set_status_info
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@TS_RESP_CT
; Line 367
	mov	ebp, 1
; Line 369
	jmp	SHORT $LN10@TS_RESP_CT
$LN12@TS_RESP_CT:
; Line 370
	push	370					; 00000172H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	132					; 00000084H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN10@TS_RESP_CT:
; Line 371
	push	esi
	call	_TS_STATUS_INFO_free
; Line 372
	push	edi
	call	_ASN1_UTF8STRING_free
	add	esp, 8
; Line 373
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 374
	ret	0
_TS_RESP_CTX_set_status_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_extension_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_data$ = 16						; size = 4
_TS_RESP_CTX_set_extension_cb PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 340
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [ecx+60], eax
; Line 341
	mov	eax, DWORD PTR _data$[esp-4]
	mov	DWORD PTR [ecx+64], eax
; Line 342
	ret	0
_TS_RESP_CTX_set_extension_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_time_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_data$ = 16						; size = 4
_TS_RESP_CTX_set_time_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 333
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [ecx+52], eax
; Line 334
	mov	eax, DWORD PTR _data$[esp-4]
	mov	DWORD PTR [ecx+56], eax
; Line 335
	ret	0
_TS_RESP_CTX_set_time_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_serial_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_cb$ = 12						; size = 4
_data$ = 16						; size = 4
_TS_RESP_CTX_set_serial_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 327
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [ecx+44], eax
; Line 328
	mov	eax, DWORD PTR _data$[esp-4]
	mov	DWORD PTR [ecx+48], eax
; Line 329
	ret	0
_TS_RESP_CTX_set_serial_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_add_flags
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_flags$ = 12						; size = 4
_TS_RESP_CTX_add_flags PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 322
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR _flags$[esp-4]
	or	DWORD PTR [ecx+40], eax
; Line 323
	ret	0
_TS_RESP_CTX_add_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_clock_precision_digits
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_precision$ = 12					; size = 4
_TS_RESP_CTX_set_clock_precision_digits PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 415
	mov	ecx, DWORD PTR _precision$[esp-4]
	cmp	ecx, 6
	jbe	SHORT $LN2@TS_RESP_CT
; Line 416
	xor	eax, eax
; Line 419
	ret	0
$LN2@TS_RESP_CT:
; Line 417
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	DWORD PTR [eax+36], ecx
; Line 418
	mov	eax, 1
; Line 419
	ret	0
_TS_RESP_CTX_set_clock_precision_digits ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_accuracy
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_secs$ = 12						; size = 4
_millis$ = 16						; size = 4
_micros$ = 20						; size = 4
_TS_RESP_CTX_set_accuracy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 300
	push	esi
; Line 302
	mov	esi, DWORD PTR _ctx$[esp]
	push	edi
	push	DWORD PTR [esi+24]
	call	_ASN1_INTEGER_free
	push	DWORD PTR [esi+28]
	mov	DWORD PTR [esi+24], 0
	call	_ASN1_INTEGER_free
	push	DWORD PTR [esi+32]
	mov	DWORD PTR [esi+28], 0
	call	_ASN1_INTEGER_free
; Line 303
	mov	edi, DWORD PTR _secs$[esp+16]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+32], 0
	test	edi, edi
	je	SHORT $LN2@TS_RESP_CT
	call	_ASN1_INTEGER_new
	mov	DWORD PTR [esi+24], eax
	test	eax, eax
	je	SHORT $err$10
	push	edi
	push	eax
	call	_ASN1_INTEGER_set
	add	esp, 8
	test	eax, eax
	je	SHORT $err$10
$LN2@TS_RESP_CT:
; Line 306
	mov	edi, DWORD PTR _millis$[esp+4]
	test	edi, edi
	je	SHORT $LN4@TS_RESP_CT
	call	_ASN1_INTEGER_new
	mov	DWORD PTR [esi+28], eax
	test	eax, eax
	je	SHORT $err$10
	push	edi
	push	eax
	call	_ASN1_INTEGER_set
	add	esp, 8
	test	eax, eax
	je	SHORT $err$10
$LN4@TS_RESP_CT:
; Line 309
	mov	edi, DWORD PTR _micros$[esp+4]
	test	edi, edi
	je	SHORT $LN6@TS_RESP_CT
	call	_ASN1_INTEGER_new
	mov	DWORD PTR [esi+32], eax
	test	eax, eax
	je	SHORT $err$10
	push	edi
	push	eax
	call	_ASN1_INTEGER_set
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@TS_RESP_CT
$err$10:
; Line 315
	push	DWORD PTR [esi+24]
	call	_ASN1_INTEGER_free
	push	DWORD PTR [esi+28]
	mov	DWORD PTR [esi+24], 0
	call	_ASN1_INTEGER_free
	push	DWORD PTR [esi+32]
	mov	DWORD PTR [esi+28], 0
	call	_ASN1_INTEGER_free
; Line 316
	push	316					; 0000013cH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	128					; 00000080H
	push	47					; 0000002fH
	mov	DWORD PTR [esi+32], 0
	call	_ERR_put_error
	add	esp, 32					; 00000020H
; Line 317
	xor	eax, eax
	pop	edi
	pop	esi
; Line 318
	ret	0
$LN6@TS_RESP_CT:
	pop	edi
; Line 313
	mov	eax, 1
	pop	esi
; Line 318
	ret	0
_TS_RESP_CTX_set_accuracy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_add_md
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_md$ = 12						; size = 4
_TS_RESP_CTX_add_md PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 276
	push	esi
; Line 278
	mov	esi, DWORD PTR _ctx$[esp]
	cmp	DWORD PTR [esi+20], 0
	jne	SHORT $LN2@TS_RESP_CT
	call	_sk_new_null
	mov	DWORD PTR [esi+20], eax
	test	eax, eax
	je	SHORT $err$6
$LN2@TS_RESP_CT:
; Line 281
	push	DWORD PTR _md$[esp]
	push	DWORD PTR [esi+20]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@TS_RESP_CT
$err$6:
; Line 286
	push	286					; 0000011eH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	125					; 0000007dH
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 287
	xor	eax, eax
	pop	esi
; Line 288
	ret	0
$LN3@TS_RESP_CT:
; Line 284
	mov	eax, 1
	pop	esi
; Line 288
	ret	0
_TS_RESP_CTX_add_md ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_add_policy
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_policy$ = 12						; size = 4
_TS_RESP_CTX_add_policy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 257
	push	esi
	push	edi
; Line 261
	mov	edi, DWORD PTR _ctx$[esp+4]
	xor	esi, esi
	cmp	DWORD PTR [edi+12], esi
	jne	SHORT $LN2@TS_RESP_CT
	call	_sk_new_null
	mov	DWORD PTR [edi+12], eax
	test	eax, eax
	je	SHORT $err$7
$LN2@TS_RESP_CT:
; Line 263
	push	DWORD PTR _policy$[esp+4]
	call	_OBJ_dup
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $err$7
; Line 265
	push	esi
	push	DWORD PTR [edi+12]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $err$7
; Line 268
	pop	edi
	mov	eax, 1
	pop	esi
; Line 273
	ret	0
$err$7:
; Line 270
	push	270					; 0000010eH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	126					; 0000007eH
	push	47					; 0000002fH
	call	_ERR_put_error
; Line 271
	push	esi
	call	_ASN1_OBJECT_free
	add	esp, 24					; 00000018H
; Line 272
	xor	eax, eax
	pop	edi
	pop	esi
; Line 273
	ret	0
_TS_RESP_CTX_add_policy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_certs
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_certs$ = 12						; size = 4
_TS_RESP_CTX_set_certs PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 240
	push	esi
; Line 242
	mov	esi, DWORD PTR _ctx$[esp]
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN2@TS_RESP_CT
; Line 243
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
; Line 244
	mov	DWORD PTR [esi+8], 0
$LN2@TS_RESP_CT:
; Line 246
	mov	eax, DWORD PTR _certs$[esp]
	test	eax, eax
	je	SHORT $LN4@TS_RESP_CT
; Line 248
	push	eax
	call	_X509_chain_up_ref
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	jne	SHORT $LN4@TS_RESP_CT
; Line 249
	push	249					; 000000f9H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	129					; 00000081H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 250
	xor	eax, eax
	pop	esi
; Line 254
	ret	0
$LN4@TS_RESP_CT:
; Line 253
	mov	eax, 1
	pop	esi
; Line 254
	ret	0
_TS_RESP_CTX_set_certs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_def_policy
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_def_policy$ = 12					; size = 4
_TS_RESP_CTX_set_def_policy PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 228
	push	esi
; Line 229
	mov	esi, DWORD PTR _ctx$[esp]
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN2@TS_RESP_CT
; Line 230
	push	eax
	call	_ASN1_OBJECT_free
	add	esp, 4
$LN2@TS_RESP_CT:
; Line 231
	push	DWORD PTR _def_policy$[esp]
	call	_OBJ_dup
	add	esp, 4
	mov	DWORD PTR [esi+16], eax
	pop	esi
	test	eax, eax
	jne	SHORT $LN3@TS_RESP_CT
$err$6:
; Line 235
	push	235					; 000000ebH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	130					; 00000082H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 236
	xor	eax, eax
; Line 237
	ret	0
$LN3@TS_RESP_CT:
; Line 233
	mov	eax, 1
; Line 237
	ret	0
_TS_RESP_CTX_set_def_policy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_signer_key
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_key$ = 12						; size = 4
_TS_RESP_CTX_set_signer_key PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 218
	push	esi
; Line 219
	mov	esi, DWORD PTR _ctx$[esp]
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN2@TS_RESP_CT
; Line 220
	push	eax
	call	_EVP_PKEY_free
	add	esp, 4
$LN2@TS_RESP_CT:
; Line 221
	mov	eax, DWORD PTR _key$[esp]
; Line 222
	push	222					; 000000deH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	10					; 0000000aH
	mov	DWORD PTR [esi+4], eax
	add	eax, 8
	push	1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 224
	mov	eax, 1
	pop	esi
; Line 225
	ret	0
_TS_RESP_CTX_set_signer_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_set_signer_cert
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_signer$ = 12						; size = 4
_TS_RESP_CTX_set_signer_cert PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 204
	push	esi
; Line 205
	mov	esi, DWORD PTR _signer$[esp]
	push	0
	push	9
	push	esi
	call	_X509_check_purpose
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	je	SHORT $LN2@TS_RESP_CT
; Line 206
	push	207					; 000000cfH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	117					; 00000075H
	push	131					; 00000083H
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 208
	xor	eax, eax
	pop	esi
; Line 215
	ret	0
$LN2@TS_RESP_CT:
	push	edi
; Line 210
	mov	edi, DWORD PTR _ctx$[esp+4]
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	SHORT $LN3@TS_RESP_CT
; Line 211
	push	eax
	call	_X509_free
	add	esp, 4
$LN3@TS_RESP_CT:
; Line 213
	push	213					; 000000d5H
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	3
	lea	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [edi], esi
	push	1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 214
	mov	eax, 1
	pop	edi
	pop	esi
; Line 215
	ret	0
_TS_RESP_CTX_set_signer_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_free
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_TS_RESP_CTX_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 187
	push	esi
; Line 188
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	SHORT $LN1@TS_RESP_CT
; Line 191
	push	DWORD PTR [esi]
	call	_X509_free
; Line 192
	push	DWORD PTR [esi+4]
	call	_EVP_PKEY_free
; Line 193
	push	OFFSET _X509_free
	push	DWORD PTR [esi+8]
	call	_sk_pop_free
; Line 194
	push	OFFSET _ASN1_OBJECT_free
	push	DWORD PTR [esi+12]
	call	_sk_pop_free
; Line 195
	push	DWORD PTR [esi+16]
	call	_ASN1_OBJECT_free
; Line 196
	push	DWORD PTR [esi+20]
	call	_sk_free
; Line 197
	push	DWORD PTR [esi+24]
	call	_ASN1_INTEGER_free
; Line 198
	push	DWORD PTR [esi+28]
	call	_ASN1_INTEGER_free
; Line 199
	push	DWORD PTR [esi+32]
	call	_ASN1_INTEGER_free
; Line 200
	push	esi
	call	_CRYPTO_free
	add	esp, 48					; 00000030H
$LN1@TS_RESP_CT:
	pop	esi
; Line 201
	ret	0
_TS_RESP_CTX_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _TS_RESP_CTX_new
_TEXT	SEGMENT
_TS_RESP_CTX_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ts\ts_rsp_sign.c
; Line 169
	push	esi
; Line 172
	push	172					; 000000acH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	80					; 00000050H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN2@TS_RESP_CT
; Line 173
	push	173					; 000000adH
	push	OFFSET ??_C@_0BK@IPGDPCNI@?4?2crypto?2ts?2ts_rsp_sign?4c?$AA@
	push	65					; 00000041H
	push	127					; 0000007fH
	push	47					; 0000002fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 174
	xor	eax, eax
	pop	esi
; Line 184
	ret	0
$LN2@TS_RESP_CT:
; Line 176
	push	80					; 00000050H
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
; Line 179
	mov	DWORD PTR [esi+44], OFFSET _def_serial_cb
; Line 180
	mov	DWORD PTR [esi+52], OFFSET _def_time_cb
; Line 183
	mov	eax, esi
	mov	DWORD PTR [esi+60], OFFSET _def_extension_cb
	pop	esi
; Line 184
	ret	0
_TS_RESP_CTX_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	jmp	DWORD PTR __imp___time64
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _gmtime
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_gmtime	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 500
	jmp	DWORD PTR __imp___gmtime64
_gmtime	ENDP
_TEXT	ENDS
END

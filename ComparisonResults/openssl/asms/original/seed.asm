; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\seed\seed.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_SS	DD	02989a1a8H
	DD	05858184H
	DD	016c6d2d4H
	DD	013c3d3d0H
	DD	014445054H
	DD	01d0d111cH
	DD	02c8ca0acH
	DD	025052124H
	DD	01d4d515cH
	DD	03434340H
	DD	018081018H
	DD	01e0e121cH
	DD	011415150H
	DD	03cccf0fcH
	DD	0acac2c8H
	DD	023436360H
	DD	028082028H
	DD	04444044H
	DD	020002020H
	DD	01d8d919cH
	DD	020c0e0e0H
	DD	022c2e2e0H
	DD	08c8c0c8H
	DD	017071314H
	DD	02585a1a4H
	DD	0f8f838cH
	DD	03030300H
	DD	03b4b7378H
	DD	03b8bb3b8H
	DD	013031310H
	DD	012c2d2d0H
	DD	02ecee2ecH
	DD	030407070H
	DD	0c8c808cH
	DD	03f0f333cH
	DD	02888a0a8H
	DD	032023230H
	DD	01dcdd1dcH
	DD	036c6f2f4H
	DD	034447074H
	DD	02ccce0ecH
	DD	015859194H
	DD	0b0b0308H
	DD	017475354H
	DD	01c4c505cH
	DD	01b4b5358H
	DD	03d8db1bcH
	DD	01010100H
	DD	024042024H
	DD	01c0c101cH
	DD	033437370H
	DD	018889098H
	DD	010001010H
	DD	0cccc0ccH
	DD	032c2f2f0H
	DD	019c9d1d8H
	DD	02c0c202cH
	DD	027c7e3e4H
	DD	032427270H
	DD	03838380H
	DD	01b8b9398H
	DD	011c1d1d0H
	DD	06868284H
	DD	09c9c1c8H
	DD	020406060H
	DD	010405050H
	DD	02383a3a0H
	DD	02bcbe3e8H
	DD	0d0d010cH
	DD	03686b2b4H
	DD	01e8e929cH
	DD	0f4f434cH
	DD	03787b3b4H
	DD	01a4a5258H
	DD	06c6c2c4H
	DD	038487078H
	DD	02686a2a4H
	DD	012021210H
	DD	02f8fa3acH
	DD	015c5d1d4H
	DD	021416160H
	DD	03c3c3c0H
	DD	03484b0b4H
	DD	01414140H
	DD	012425250H
	DD	03d4d717cH
	DD	0d8d818cH
	DD	08080008H
	DD	01f0f131cH
	DD	019899198H
	DD	00H
	DD	019091118H
	DD	04040004H
	DD	013435350H
	DD	037c7f3f4H
	DD	021c1e1e0H
	DD	03dcdf1fcH
	DD	036467274H
	DD	02f0f232cH
	DD	027072324H
	DD	03080b0b0H
	DD	0b8b8388H
	DD	0e0e020cH
	DD	02b8ba3a8H
	DD	02282a2a0H
	DD	02e4e626cH
	DD	013839390H
	DD	0d4d414cH
	DD	029496168H
	DD	03c4c707cH
	DD	09090108H
	DD	0a0a0208H
	DD	03f8fb3bcH
	DD	02fcfe3ecH
	DD	033c3f3f0H
	DD	05c5c1c4H
	DD	07878384H
	DD	014041014H
	DD	03ecef2fcH
	DD	024446064H
	DD	01eced2dcH
	DD	02e0e222cH
	DD	0b4b4348H
	DD	01a0a1218H
	DD	06060204H
	DD	021012120H
	DD	02b4b6368H
	DD	026466264H
	DD	02020200H
	DD	035c5f1f4H
	DD	012829290H
	DD	0a8a8288H
	DD	0c0c000cH
	DD	03383b3b0H
	DD	03e4e727cH
	DD	010c0d0d0H
	DD	03a4a7278H
	DD	07474344H
	DD	016869294H
	DD	025c5e1e4H
	DD	026062224H
	DD	0808080H
	DD	02d8da1acH
	DD	01fcfd3dcH
	DD	02181a1a0H
	DD	030003030H
	DD	037073334H
	DD	02e8ea2acH
	DD	036063234H
	DD	015051114H
	DD	022022220H
	DD	038083038H
	DD	034c4f0f4H
	DD	02787a3a4H
	DD	05454144H
	DD	0c4c404cH
	DD	01818180H
	DD	029c9e1e8H
	DD	04848084H
	DD	017879394H
	DD	035053134H
	DD	0bcbc3c8H
	DD	0ecec2ccH
	DD	03c0c303cH
	DD	031417170H
	DD	011011110H
	DD	07c7c3c4H
	DD	09898188H
	DD	035457174H
	DD	03bcbf3f8H
	DD	01acad2d8H
	DD	038c8f0f8H
	DD	014849094H
	DD	019495158H
	DD	02828280H
	DD	04c4c0c4H
	DD	03fcff3fcH
	DD	09494148H
	DD	039093138H
	DD	027476364H
	DD	0c0c0c0H
	DD	0fcfc3ccH
	DD	017c7d3d4H
	DD	03888b0b8H
	DD	0f0f030cH
	DD	0e8e828cH
	DD	02424240H
	DD	023032320H
	DD	011819190H
	DD	02c4c606cH
	DD	01bcbd3d8H
	DD	02484a0a4H
	DD	034043034H
	DD	031c1f1f0H
	DD	08484048H
	DD	02c2c2c0H
	DD	02f4f636cH
	DD	03d0d313cH
	DD	02d0d212cH
	DD	0404040H
	DD	03e8eb2bcH
	DD	03e0e323cH
	DD	03c8cb0bcH
	DD	01c1c1c0H
	DD	02a8aa2a8H
	DD	03a8ab2b8H
	DD	0e4e424cH
	DD	015455154H
	DD	03b0b3338H
	DD	01cccd0dcH
	DD	028486068H
	DD	03f4f737cH
	DD	01c8c909cH
	DD	018c8d0d8H
	DD	0a4a4248H
	DD	016465254H
	DD	037477374H
	DD	02080a0a0H
	DD	02dcde1ecH
	DD	06464244H
	DD	03585b1b4H
	DD	02b0b2328H
	DD	025456164H
	DD	03acaf2f8H
	DD	023c3e3e0H
	DD	03989b1b8H
	DD	03181b1b0H
	DD	01f8f939cH
	DD	01e4e525cH
	DD	039c9f1f8H
	DD	026c6e2e4H
	DD	03282b2b0H
	DD	031013130H
	DD	02acae2e8H
	DD	02d4d616cH
	DD	01f4f535cH
	DD	024c4e0e4H
	DD	030c0f0f0H
	DD	0dcdc1ccH
	DD	08888088H
	DD	016061214H
	DD	03a0a3238H
	DD	018485058H
	DD	014c4d0d4H
	DD	022426260H
	DD	029092128H
	DD	07070304H
	DD	033033330H
	DD	028c8e0e8H
	DD	01b0b1318H
	DD	05050104H
	DD	039497178H
	DD	010809090H
	DD	02a4a6268H
	DD	02a0a2228H
	DD	01a8a9298H
	DD	038380830H
	DD	0e828c8e0H
	DD	02c2d0d21H
	DD	0a42686a2H
	DD	0cc0fcfc3H
	DD	0dc1eced2H
	DD	0b03383b3H
	DD	0b83888b0H
	DD	0ac2f8fa3H
	DD	060204060H
	DD	054154551H
	DD	0c407c7c3H
	DD	044044440H
	DD	06c2f4f63H
	DD	0682b4b63H
	DD	0581b4b53H
	DD	0c003c3c3H
	DD	060224262H
	DD	030330333H
	DD	0b43585b1H
	DD	028290921H
	DD	0a02080a0H
	DD	0e022c2e2H
	DD	0a42787a3H
	DD	0d013c3d3H
	DD	090118191H
	DD	010110111H
	DD	04060602H
	DD	01c1c0c10H
	DD	0bc3c8cb0H
	DD	034360632H
	DD	0480b4b43H
	DD	0ec2fcfe3H
	DD	088088880H
	DD	06c2c4c60H
	DD	0a82888a0H
	DD	014170713H
	DD	0c404c4c0H
	DD	014160612H
	DD	0f434c4f0H
	DD	0c002c2c2H
	DD	044054541H
	DD	0e021c1e1H
	DD	0d416c6d2H
	DD	03c3f0f33H
	DD	03c3d0d31H
	DD	08c0e8e82H
	DD	098188890H
	DD	028280820H
	DD	04c0e4e42H
	DD	0f436c6f2H
	DD	03c3e0e32H
	DD	0a42585a1H
	DD	0f839c9f1H
	DD	0c0d0d01H
	DD	0dc1fcfd3H
	DD	0d818c8d0H
	DD	0282b0b23H
	DD	064264662H
	DD	0783a4a72H
	DD	024270723H
	DD	02c2f0f23H
	DD	0f031c1f1H
	DD	070324272H
	DD	040024242H
	DD	0d414c4d0H
	DD	040014141H
	DD	0c000c0c0H
	DD	070334373H
	DD	064274763H
	DD	0ac2c8ca0H
	DD	0880b8b83H
	DD	0f437c7f3H
	DD	0ac2d8da1H
	DD	080008080H
	DD	01c1f0f13H
	DD	0c80acac2H
	DD	02c2c0c20H
	DD	0a82a8aa2H
	DD	034340430H
	DD	0d012c2d2H
	DD	080b0b03H
	DD	0ec2ecee2H
	DD	0e829c9e1H
	DD	05c1d4d51H
	DD	094148490H
	DD	018180810H
	DD	0f838c8f0H
	DD	054174753H
	DD	0ac2e8ea2H
	DD	08080800H
	DD	0c405c5c1H
	DD	010130313H
	DD	0cc0dcdc1H
	DD	084068682H
	DD	0b83989b1H
	DD	0fc3fcff3H
	DD	07c3d4d71H
	DD	0c001c1c1H
	DD	030310131H
	DD	0f435c5f1H
	DD	0880a8a82H
	DD	0682a4a62H
	DD	0b03181b1H
	DD	0d011c1d1H
	DD	020200020H
	DD	0d417c7d3H
	DD	020202H
	DD	020220222H
	DD	04040400H
	DD	068284860H
	DD	070314171H
	DD	04070703H
	DD	0d81bcbd3H
	DD	09c1d8d91H
	DD	098198991H
	DD	060214161H
	DD	0bc3e8eb2H
	DD	0e426c6e2H
	DD	058194951H
	DD	0dc1dcdd1H
	DD	050114151H
	DD	090108090H
	DD	0dc1cccd0H
	DD	0981a8a92H
	DD	0a02383a3H
	DD	0a82b8ba3H
	DD	0d010c0d0H
	DD	080018181H
	DD	0c0f0f03H
	DD	044074743H
	DD	0181a0a12H
	DD	0e023c3e3H
	DD	0ec2ccce0H
	DD	08c0d8d81H
	DD	0bc3f8fb3H
	DD	094168692H
	DD	0783b4b73H
	DD	05c1c4c50H
	DD	0a02282a2H
	DD	0a02181a1H
	DD	060234363H
	DD	020230323H
	DD	04c0d4d41H
	DD	0c808c8c0H
	DD	09c1e8e92H
	DD	09c1c8c90H
	DD	0383a0a32H
	DD	0c0c0c00H
	DD	02c2e0e22H
	DD	0b83a8ab2H
	DD	06c2e4e62H
	DD	09c1f8f93H
	DD	0581a4a52H
	DD	0f032c2f2H
	DD	090128292H
	DD	0f033c3f3H
	DD	048094941H
	DD	078384870H
	DD	0cc0cccc0H
	DD	014150511H
	DD	0f83bcbf3H
	DD	070304070H
	DD	074354571H
	DD	07c3f4f73H
	DD	034350531H
	DD	010100010H
	DD	030303H
	DD	064244460H
	DD	06c2d4d61H
	DD	0c406c6c2H
	DD	074344470H
	DD	0d415c5d1H
	DD	0b43484b0H
	DD	0e82acae2H
	DD	08090901H
	DD	074364672H
	DD	018190911H
	DD	0fc3ecef2H
	DD	040004040H
	DD	010120212H
	DD	0e020c0e0H
	DD	0bc3d8db1H
	DD	04050501H
	DD	0f83acaf2H
	DD	010101H
	DD	0f030c0f0H
	DD	0282a0a22H
	DD	05c1e4e52H
	DD	0a82989a1H
	DD	054164652H
	DD	040034343H
	DD	084058581H
	DD	014140410H
	DD	088098981H
	DD	0981b8b93H
	DD	0b03080b0H
	DD	0e425c5e1H
	DD	048084840H
	DD	078394971H
	DD	094178793H
	DD	0fc3cccf0H
	DD	01c1e0e12H
	DD	080028282H
	DD	020210121H
	DD	08c0c8c80H
	DD	0181b0b13H
	DD	05c1f4f53H
	DD	074374773H
	DD	054144450H
	DD	0b03282b2H
	DD	01c1d0d11H
	DD	024250521H
	DD	04c0f4f43H
	DD	00H
	DD	044064642H
	DD	0ec2dcde1H
	DD	058184850H
	DD	050124252H
	DD	0e82bcbe3H
	DD	07c3e4e72H
	DD	0d81acad2H
	DD	0c809c9c1H
	DD	0fc3dcdf1H
	DD	030300030H
	DD	094158591H
	DD	064254561H
	DD	03c3c0c30H
	DD	0b43686b2H
	DD	0e424c4e0H
	DD	0b83b8bb3H
	DD	07c3c4c70H
	DD	0c0e0e02H
	DD	050104050H
	DD	038390931H
	DD	024260622H
	DD	030320232H
	DD	084048480H
	DD	068294961H
	DD	090138393H
	DD	034370733H
	DD	0e427c7e3H
	DD	024240420H
	DD	0a42484a0H
	DD	0c80bcbc3H
	DD	050134353H
	DD	080a0a02H
	DD	084078783H
	DD	0d819c9d1H
	DD	04c0c4c40H
	DD	080038383H
	DD	08c0f8f83H
	DD	0cc0ecec2H
	DD	0383b0b33H
	DD	0480a4a42H
	DD	0b43787b3H
	DD	0a1a82989H
	DD	081840585H
	DD	0d2d416c6H
	DD	0d3d013c3H
	DD	050541444H
	DD	0111c1d0dH
	DD	0a0ac2c8cH
	DD	021242505H
	DD	0515c1d4dH
	DD	043400343H
	DD	010181808H
	DD	0121c1e0eH
	DD	051501141H
	DD	0f0fc3cccH
	DD	0c2c80acaH
	DD	063602343H
	DD	020282808H
	DD	040440444H
	DD	020202000H
	DD	0919c1d8dH
	DD	0e0e020c0H
	DD	0e2e022c2H
	DD	0c0c808c8H
	DD	013141707H
	DD	0a1a42585H
	DD	0838c0f8fH
	DD	03000303H
	DD	073783b4bH
	DD	0b3b83b8bH
	DD	013101303H
	DD	0d2d012c2H
	DD	0e2ec2eceH
	DD	070703040H
	DD	0808c0c8cH
	DD	0333c3f0fH
	DD	0a0a82888H
	DD	032303202H
	DD	0d1dc1dcdH
	DD	0f2f436c6H
	DD	070743444H
	DD	0e0ec2cccH
	DD	091941585H
	DD	03080b0bH
	DD	053541747H
	DD	0505c1c4cH
	DD	053581b4bH
	DD	0b1bc3d8dH
	DD	01000101H
	DD	020242404H
	DD	0101c1c0cH
	DD	073703343H
	DD	090981888H
	DD	010101000H
	DD	0c0cc0cccH
	DD	0f2f032c2H
	DD	0d1d819c9H
	DD	0202c2c0cH
	DD	0e3e427c7H
	DD	072703242H
	DD	083800383H
	DD	093981b8bH
	DD	0d1d011c1H
	DD	082840686H
	DD	0c1c809c9H
	DD	060602040H
	DD	050501040H
	DD	0a3a02383H
	DD	0e3e82bcbH
	DD	010c0d0dH
	DD	0b2b43686H
	DD	0929c1e8eH
	DD	0434c0f4fH
	DD	0b3b43787H
	DD	052581a4aH
	DD	0c2c406c6H
	DD	070783848H
	DD	0a2a42686H
	DD	012101202H
	DD	0a3ac2f8fH
	DD	0d1d415c5H
	DD	061602141H
	DD	0c3c003c3H
	DD	0b0b43484H
	DD	041400141H
	DD	052501242H
	DD	0717c3d4dH
	DD	0818c0d8dH
	DD	080808H
	DD	0131c1f0fH
	DD	091981989H
	DD	00H
	DD	011181909H
	DD	040404H
	DD	053501343H
	DD	0f3f437c7H
	DD	0e1e021c1H
	DD	0f1fc3dcdH
	DD	072743646H
	DD	0232c2f0fH
	DD	023242707H
	DD	0b0b03080H
	DD	083880b8bH
	DD	020c0e0eH
	DD	0a3a82b8bH
	DD	0a2a02282H
	DD	0626c2e4eH
	DD	093901383H
	DD	0414c0d4dH
	DD	061682949H
	DD	0707c3c4cH
	DD	01080909H
	DD	02080a0aH
	DD	0b3bc3f8fH
	DD	0e3ec2fcfH
	DD	0f3f033c3H
	DD	0c1c405c5H
	DD	083840787H
	DD	010141404H
	DD	0f2fc3eceH
	DD	060642444H
	DD	0d2dc1eceH
	DD	0222c2e0eH
	DD	043480b4bH
	DD	012181a0aH
	DD	02040606H
	DD	021202101H
	DD	063682b4bH
	DD	062642646H
	DD	02000202H
	DD	0f1f435c5H
	DD	092901282H
	DD	082880a8aH
	DD	0c0c0cH
	DD	0b3b03383H
	DD	0727c3e4eH
	DD	0d0d010c0H
	DD	072783a4aH
	DD	043440747H
	DD	092941686H
	DD	0e1e425c5H
	DD	022242606H
	DD	080800080H
	DD	0a1ac2d8dH
	DD	0d3dc1fcfH
	DD	0a1a02181H
	DD	030303000H
	DD	033343707H
	DD	0a2ac2e8eH
	DD	032343606H
	DD	011141505H
	DD	022202202H
	DD	030383808H
	DD	0f0f434c4H
	DD	0a3a42787H
	DD	041440545H
	DD	0404c0c4cH
	DD	081800181H
	DD	0e1e829c9H
	DD	080840484H
	DD	093941787H
	DD	031343505H
	DD	0c3c80bcbH
	DD	0c2cc0eceH
	DD	0303c3c0cH
	DD	071703141H
	DD	011101101H
	DD	0c3c407c7H
	DD	081880989H
	DD	071743545H
	DD	0f3f83bcbH
	DD	0d2d81acaH
	DD	0f0f838c8H
	DD	090941484H
	DD	051581949H
	DD	082800282H
	DD	0c0c404c4H
	DD	0f3fc3fcfH
	DD	041480949H
	DD	031383909H
	DD	063642747H
	DD	0c0c000c0H
	DD	0c3cc0fcfH
	DD	0d3d417c7H
	DD	0b0b83888H
	DD	030c0f0fH
	DD	0828c0e8eH
	DD	042400242H
	DD	023202303H
	DD	091901181H
	DD	0606c2c4cH
	DD	0d3d81bcbH
	DD	0a0a42484H
	DD	030343404H
	DD	0f1f031c1H
	DD	040480848H
	DD	0c2c002c2H
	DD	0636c2f4fH
	DD	0313c3d0dH
	DD	0212c2d0dH
	DD	040400040H
	DD	0b2bc3e8eH
	DD	0323c3e0eH
	DD	0b0bc3c8cH
	DD	0c1c001c1H
	DD	0a2a82a8aH
	DD	0b2b83a8aH
	DD	0424c0e4eH
	DD	051541545H
	DD	033383b0bH
	DD	0d0dc1cccH
	DD	060682848H
	DD	0737c3f4fH
	DD	0909c1c8cH
	DD	0d0d818c8H
	DD	042480a4aH
	DD	052541646H
	DD	073743747H
	DD	0a0a02080H
	DD	0e1ec2dcdH
	DD	042440646H
	DD	0b1b43585H
	DD	023282b0bH
	DD	061642545H
	DD	0f2f83acaH
	DD	0e3e023c3H
	DD	0b1b83989H
	DD	0b1b03181H
	DD	0939c1f8fH
	DD	0525c1e4eH
	DD	0f1f839c9H
	DD	0e2e426c6H
	DD	0b2b03282H
	DD	031303101H
	DD	0e2e82acaH
	DD	0616c2d4dH
	DD	0535c1f4fH
	DD	0e0e424c4H
	DD	0f0f030c0H
	DD	0c1cc0dcdH
	DD	080880888H
	DD	012141606H
	DD	032383a0aH
	DD	050581848H
	DD	0d0d414c4H
	DD	062602242H
	DD	021282909H
	DD	03040707H
	DD	033303303H
	DD	0e0e828c8H
	DD	013181b0bH
	DD	01040505H
	DD	071783949H
	DD	090901080H
	DD	062682a4aH
	DD	022282a0aH
	DD	092981a8aH
	DD	08303838H
	DD	0c8e0e828H
	DD	0d212c2dH
	DD	086a2a426H
	DD	0cfc3cc0fH
	DD	0ced2dc1eH
	DD	083b3b033H
	DD	088b0b838H
	DD	08fa3ac2fH
	DD	040606020H
	DD	045515415H
	DD	0c7c3c407H
	DD	044404404H
	DD	04f636c2fH
	DD	04b63682bH
	DD	04b53581bH
	DD	0c3c3c003H
	DD	042626022H
	DD	03333033H
	DD	085b1b435H
	DD	09212829H
	DD	080a0a020H
	DD	0c2e2e022H
	DD	087a3a427H
	DD	0c3d3d013H
	DD	081919011H
	DD	01111011H
	DD	06020406H
	DD	0c101c1cH
	DD	08cb0bc3cH
	DD	06323436H
	DD	04b43480bH
	DD	0cfe3ec2fH
	DD	088808808H
	DD	04c606c2cH
	DD	088a0a828H
	DD	07131417H
	DD	0c4c0c404H
	DD	06121416H
	DD	0c4f0f434H
	DD	0c2c2c002H
	DD	045414405H
	DD	0c1e1e021H
	DD	0c6d2d416H
	DD	0f333c3fH
	DD	0d313c3dH
	DD	08e828c0eH
	DD	088909818H
	DD	08202828H
	DD	04e424c0eH
	DD	0c6f2f436H
	DD	0e323c3eH
	DD	085a1a425H
	DD	0c9f1f839H
	DD	0d010c0dH
	DD	0cfd3dc1fH
	DD	0c8d0d818H
	DD	0b23282bH
	DD	046626426H
	DD	04a72783aH
	DD	07232427H
	DD	0f232c2fH
	DD	0c1f1f031H
	DD	042727032H
	DD	042424002H
	DD	0c4d0d414H
	DD	041414001H
	DD	0c0c0c000H
	DD	043737033H
	DD	047636427H
	DD	08ca0ac2cH
	DD	08b83880bH
	DD	0c7f3f437H
	DD	08da1ac2dH
	DD	080808000H
	DD	0f131c1fH
	DD	0cac2c80aH
	DD	0c202c2cH
	DD	08aa2a82aH
	DD	04303434H
	DD	0c2d2d012H
	DD	0b03080bH
	DD	0cee2ec2eH
	DD	0c9e1e829H
	DD	04d515c1dH
	DD	084909414H
	DD	08101818H
	DD	0c8f0f838H
	DD	047535417H
	DD	08ea2ac2eH
	DD	08000808H
	DD	0c5c1c405H
	DD	03131013H
	DD	0cdc1cc0dH
	DD	086828406H
	DD	089b1b839H
	DD	0cff3fc3fH
	DD	04d717c3dH
	DD	0c1c1c001H
	DD	01313031H
	DD	0c5f1f435H
	DD	08a82880aH
	DD	04a62682aH
	DD	081b1b031H
	DD	0c1d1d011H
	DD	0202020H
	DD	0c7d3d417H
	DD	02020002H
	DD	02222022H
	DD	04000404H
	DD	048606828H
	DD	041717031H
	DD	07030407H
	DD	0cbd3d81bH
	DD	08d919c1dH
	DD	089919819H
	DD	041616021H
	DD	08eb2bc3eH
	DD	0c6e2e426H
	DD	049515819H
	DD	0cdd1dc1dH
	DD	041515011H
	DD	080909010H
	DD	0ccd0dc1cH
	DD	08a92981aH
	DD	083a3a023H
	DD	08ba3a82bH
	DD	0c0d0d010H
	DD	081818001H
	DD	0f030c0fH
	DD	047434407H
	DD	0a12181aH
	DD	0c3e3e023H
	DD	0cce0ec2cH
	DD	08d818c0dH
	DD	08fb3bc3fH
	DD	086929416H
	DD	04b73783bH
	DD	04c505c1cH
	DD	082a2a022H
	DD	081a1a021H
	DD	043636023H
	DD	03232023H
	DD	04d414c0dH
	DD	0c8c0c808H
	DD	08e929c1eH
	DD	08c909c1cH
	DD	0a32383aH
	DD	0c000c0cH
	DD	0e222c2eH
	DD	08ab2b83aH
	DD	04e626c2eH
	DD	08f939c1fH
	DD	04a52581aH
	DD	0c2f2f032H
	DD	082929012H
	DD	0c3f3f033H
	DD	049414809H
	DD	048707838H
	DD	0ccc0cc0cH
	DD	05111415H
	DD	0cbf3f83bH
	DD	040707030H
	DD	045717435H
	DD	04f737c3fH
	DD	05313435H
	DD	0101010H
	DD	03030003H
	DD	044606424H
	DD	04d616c2dH
	DD	0c6c2c406H
	DD	044707434H
	DD	0c5d1d415H
	DD	084b0b434H
	DD	0cae2e82aH
	DD	09010809H
	DD	046727436H
	DD	09111819H
	DD	0cef2fc3eH
	DD	040404000H
	DD	02121012H
	DD	0c0e0e020H
	DD	08db1bc3dH
	DD	05010405H
	DD	0caf2f83aH
	DD	01010001H
	DD	0c0f0f030H
	DD	0a22282aH
	DD	04e525c1eH
	DD	089a1a829H
	DD	046525416H
	DD	043434003H
	DD	085818405H
	DD	04101414H
	DD	089818809H
	DD	08b93981bH
	DD	080b0b030H
	DD	0c5e1e425H
	DD	048404808H
	DD	049717839H
	DD	087939417H
	DD	0ccf0fc3cH
	DD	0e121c1eH
	DD	082828002H
	DD	01212021H
	DD	08c808c0cH
	DD	0b13181bH
	DD	04f535c1fH
	DD	047737437H
	DD	044505414H
	DD	082b2b032H
	DD	0d111c1dH
	DD	05212425H
	DD	04f434c0fH
	DD	00H
	DD	046424406H
	DD	0cde1ec2dH
	DD	048505818H
	DD	042525012H
	DD	0cbe3e82bH
	DD	04e727c3eH
	DD	0cad2d81aH
	DD	0c9c1c809H
	DD	0cdf1fc3dH
	DD	0303030H
	DD	085919415H
	DD	045616425H
	DD	0c303c3cH
	DD	086b2b436H
	DD	0c4e0e424H
	DD	08bb3b83bH
	DD	04c707c3cH
	DD	0e020c0eH
	DD	040505010H
	DD	09313839H
	DD	06222426H
	DD	02323032H
	DD	084808404H
	DD	049616829H
	DD	083939013H
	DD	07333437H
	DD	0c7e3e427H
	DD	04202424H
	DD	084a0a424H
	DD	0cbc3c80bH
	DD	043535013H
	DD	0a02080aH
	DD	087838407H
	DD	0c9d1d819H
	DD	04c404c0cH
	DD	083838003H
	DD	08f838c0fH
	DD	0cec2cc0eH
	DD	0b33383bH
	DD	04a42480aH
	DD	087b3b437H
CONST	ENDS
PUBLIC	_SEED_set_key
PUBLIC	_SEED_encrypt
PUBLIC	_SEED_decrypt
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _SEED_decrypt
_TEXT	SEGMENT
_x4$1$ = -12						; size = 4
_x2$1$ = -8						; size = 4
_t1$47$ = -4						; size = 4
_x3$1$ = 8						; size = 4
_s$ = 8							; size = 4
_d$ = 12						; size = 4
_t1$44$ = 16						; size = 4
_t1$41$ = 16						; size = 4
_t1$38$ = 16						; size = 4
_t1$35$ = 16						; size = 4
_t1$32$ = 16						; size = 4
_t1$29$ = 16						; size = 4
_t1$26$ = 16						; size = 4
_t1$23$ = 16						; size = 4
_t1$20$ = 16						; size = 4
_t1$17$ = 16						; size = 4
_t1$14$ = 16						; size = 4
_t1$11$ = 16						; size = 4
_t1$8$ = 16						; size = 4
_t1$5$ = 16						; size = 4
_t1$2$ = 16						; size = 4
_x1$1$ = 16						; size = 4
_ks$ = 16						; size = 4
_SEED_decrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\seed\seed.c
; Line 668
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 674
	mov	esi, DWORD PTR _s$[esp+20]
	push	edi
; Line 678
	mov	edi, DWORD PTR _ks$[esp+24]
	movzx	edx, BYTE PTR [esi+8]
	movzx	eax, BYTE PTR [esi+9]
	movzx	ecx, BYTE PTR [esi+12]
	mov	ebx, DWORD PTR [edi+120]
	shl	edx, 8
	or	edx, eax
	shl	ecx, 8
	movzx	eax, BYTE PTR [esi+10]
	shl	edx, 8
	or	edx, eax
	movzx	eax, BYTE PTR [esi+11]
	shl	edx, 8
	or	edx, eax
	movzx	eax, BYTE PTR [esi+13]
	or	ecx, eax
	mov	DWORD PTR _x3$1$[esp+24], edx
	movzx	eax, BYTE PTR [esi+14]
	xor	ebx, edx
	mov	edx, DWORD PTR [edi+124]
	shl	ecx, 8
	xor	edx, ebx
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+15]
	shl	ecx, 8
	or	ecx, eax
	xor	edx, ecx
	mov	DWORD PTR _x4$1$[esp+28], ecx
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$2$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$2$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	movzx	ebx, BYTE PTR [esi]
	xor	ecx, DWORD PTR _SS[eax*4]
	movzx	eax, BYTE PTR [esi+1]
	shl	ebx, 8
	or	ebx, eax
	movzx	eax, BYTE PTR [esi+2]
	shl	ebx, 8
	or	ebx, eax
	movzx	eax, BYTE PTR [esi+3]
	shl	ebx, 8
	or	ebx, eax
	lea	eax, DWORD PTR [ecx+edx]
	xor	ebx, eax
	movzx	edx, BYTE PTR [esi+4]
	movzx	eax, BYTE PTR [esi+5]
	shl	edx, 8
	or	edx, eax
	mov	DWORD PTR _x1$1$[esp+24], ebx
	movzx	eax, BYTE PTR [esi+6]
; Line 679
	mov	ebx, DWORD PTR [edi+112]
	mov	ebp, DWORD PTR _x1$1$[esp+24]
	xor	ebx, ebp
	shl	edx, 8
	or	edx, eax
	movzx	eax, BYTE PTR [esi+7]
	shl	edx, 8
	or	edx, eax
	xor	edx, ecx
	mov	DWORD PTR _x2$1$[esp+28], edx
	mov	edx, DWORD PTR [edi+116]
	mov	esi, DWORD PTR _x2$1$[esp+28]
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$5$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$5$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 680
	mov	ebx, DWORD PTR [edi+104]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	xor	ebx, edx
	mov	edx, DWORD PTR [edi+108]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$8$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$8$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 681
	mov	ebx, DWORD PTR [edi+96]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+100]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$11$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	edx, DWORD PTR _SS[eax*4]
	mov	ebx, DWORD PTR _t1$11$[esp+24]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 682
	mov	ebx, DWORD PTR [edi+88]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	xor	ebx, edx
	mov	edx, DWORD PTR [edi+92]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$14$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$14$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 683
	mov	ebx, DWORD PTR [edi+80]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+84]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$17$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$17$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 684
	mov	ebx, DWORD PTR [edi+72]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	xor	ebx, edx
	mov	edx, DWORD PTR [edi+76]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$20$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	edx, DWORD PTR _SS[eax*4]
	mov	ebx, DWORD PTR _t1$20$[esp+24]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 685
	mov	ebx, DWORD PTR [edi+64]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+68]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$23$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$23$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 686
	mov	ebx, DWORD PTR [edi+56]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	ebx, edx
	mov	DWORD PTR _x3$1$[esp+24], edx
	mov	edx, DWORD PTR [edi+60]
	xor	eax, ecx
	xor	edx, ebx
	mov	DWORD PTR _x4$1$[esp+28], eax
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	shr	eax, 16					; 00000010H
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$26$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$26$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 687
	mov	ebx, DWORD PTR [edi+48]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+52]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$29$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$29$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	shr	eax, 16					; 00000010H
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 688
	mov	ebx, DWORD PTR [edi+40]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	xor	ebx, edx
	mov	edx, DWORD PTR [edi+44]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$32$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$32$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 689
	mov	ebx, DWORD PTR [edi+32]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+36]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$35$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$35$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 690
	mov	ebx, DWORD PTR [edi+24]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	xor	ebx, edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	mov	edx, DWORD PTR [edi+28]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$38$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$38$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 691
	mov	ebx, DWORD PTR [edi+16]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+20]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$41$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$41$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 692
	mov	ebx, DWORD PTR [edi+8]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	xor	ebx, edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	mov	edx, DWORD PTR [edi+12]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$44$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$44$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 693
	mov	ebx, DWORD PTR [edi]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	mov	DWORD PTR _x2$1$[esp+28], esi
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+4]
	xor	ebp, eax
	xor	ebx, ebp
	mov	DWORD PTR _x1$1$[esp+24], ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$47$[esp+28], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$47$[esp+28]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	pop	edi
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _x3$1$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x4$1$[esp+24]
	xor	ebx, eax
	xor	edx, ecx
; Line 705
	mov	ecx, DWORD PTR _d$[esp+20]
	mov	eax, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+1], al
	mov	eax, ebx
	shr	eax, 8
	mov	BYTE PTR [ecx+2], al
; Line 706
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx+4], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+5], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [ecx+6], al
	mov	BYTE PTR [ecx+7], dl
; Line 707
	mov	edx, ebp
	mov	eax, edx
	mov	BYTE PTR [ecx+11], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx+8], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+9], al
	mov	eax, edx
	shr	eax, 8
; Line 708
	mov	edx, esi
	mov	BYTE PTR [ecx+10], al
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx+12], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+13], al
	mov	eax, edx
	pop	esi
	shr	eax, 8
	pop	ebp
	mov	BYTE PTR [ecx+3], bl
	mov	BYTE PTR [ecx+14], al
	mov	BYTE PTR [ecx+15], dl
	pop	ebx
; Line 709
	add	esp, 12					; 0000000cH
	ret	0
_SEED_decrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SEED_encrypt
_TEXT	SEGMENT
_x4$1$ = -12						; size = 4
_x2$1$ = -8						; size = 4
_t1$47$ = -4						; size = 4
_x3$1$ = 8						; size = 4
_s$ = 8							; size = 4
_d$ = 12						; size = 4
_t1$44$ = 16						; size = 4
_t1$41$ = 16						; size = 4
_t1$38$ = 16						; size = 4
_t1$35$ = 16						; size = 4
_t1$32$ = 16						; size = 4
_t1$29$ = 16						; size = 4
_t1$26$ = 16						; size = 4
_t1$23$ = 16						; size = 4
_t1$20$ = 16						; size = 4
_t1$17$ = 16						; size = 4
_t1$14$ = 16						; size = 4
_t1$11$ = 16						; size = 4
_t1$8$ = 16						; size = 4
_t1$5$ = 16						; size = 4
_t1$2$ = 16						; size = 4
_x1$1$ = 16						; size = 4
_ks$ = 16						; size = 4
_SEED_encrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\seed\seed.c
; Line 623
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 629
	mov	esi, DWORD PTR _s$[esp+20]
	push	edi
; Line 633
	mov	edi, DWORD PTR _ks$[esp+24]
	movzx	edx, BYTE PTR [esi+8]
	movzx	eax, BYTE PTR [esi+9]
	movzx	ecx, BYTE PTR [esi+12]
	mov	ebx, DWORD PTR [edi]
	shl	edx, 8
	or	edx, eax
	shl	ecx, 8
	movzx	eax, BYTE PTR [esi+10]
	shl	edx, 8
	or	edx, eax
	movzx	eax, BYTE PTR [esi+11]
	shl	edx, 8
	or	edx, eax
	movzx	eax, BYTE PTR [esi+13]
	or	ecx, eax
	mov	DWORD PTR _x3$1$[esp+24], edx
	movzx	eax, BYTE PTR [esi+14]
	xor	ebx, edx
	mov	edx, DWORD PTR [edi+4]
	shl	ecx, 8
	xor	edx, ebx
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+15]
	shl	ecx, 8
	or	ecx, eax
	xor	edx, ecx
	mov	DWORD PTR _x4$1$[esp+28], ecx
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$2$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$2$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	movzx	ebx, BYTE PTR [esi]
	xor	ecx, DWORD PTR _SS[eax*4]
	movzx	eax, BYTE PTR [esi+1]
	shl	ebx, 8
	or	ebx, eax
	movzx	eax, BYTE PTR [esi+2]
	shl	ebx, 8
	or	ebx, eax
	movzx	eax, BYTE PTR [esi+3]
	shl	ebx, 8
	or	ebx, eax
	lea	eax, DWORD PTR [ecx+edx]
	xor	ebx, eax
	movzx	edx, BYTE PTR [esi+4]
	movzx	eax, BYTE PTR [esi+5]
	shl	edx, 8
	or	edx, eax
	mov	DWORD PTR _x1$1$[esp+24], ebx
	movzx	eax, BYTE PTR [esi+6]
; Line 634
	mov	ebx, DWORD PTR [edi+8]
	mov	ebp, DWORD PTR _x1$1$[esp+24]
	xor	ebx, ebp
	shl	edx, 8
	or	edx, eax
	movzx	eax, BYTE PTR [esi+7]
	shl	edx, 8
	or	edx, eax
	xor	edx, ecx
	mov	DWORD PTR _x2$1$[esp+28], edx
	mov	edx, DWORD PTR [edi+12]
	mov	esi, DWORD PTR _x2$1$[esp+28]
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$5$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$5$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 635
	mov	ebx, DWORD PTR [edi+16]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	xor	ebx, edx
	mov	edx, DWORD PTR [edi+20]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$8$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$8$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 636
	mov	ebx, DWORD PTR [edi+24]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+28]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$11$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	edx, DWORD PTR _SS[eax*4]
	mov	ebx, DWORD PTR _t1$11$[esp+24]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 637
	mov	ebx, DWORD PTR [edi+32]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	xor	ebx, edx
	mov	edx, DWORD PTR [edi+36]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$14$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$14$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 638
	mov	ebx, DWORD PTR [edi+40]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+44]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$17$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$17$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 639
	mov	ebx, DWORD PTR [edi+48]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	xor	ebx, edx
	mov	edx, DWORD PTR [edi+52]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$20$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	edx, DWORD PTR _SS[eax*4]
	mov	ebx, DWORD PTR _t1$20$[esp+24]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 640
	mov	ebx, DWORD PTR [edi+56]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+60]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$23$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$23$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 641
	mov	ebx, DWORD PTR [edi+64]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	ebx, edx
	mov	DWORD PTR _x3$1$[esp+24], edx
	mov	edx, DWORD PTR [edi+68]
	xor	eax, ecx
	xor	edx, ebx
	mov	DWORD PTR _x4$1$[esp+28], eax
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	shr	eax, 16					; 00000010H
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$26$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$26$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 642
	mov	ebx, DWORD PTR [edi+72]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+76]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$29$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$29$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	shr	eax, 16					; 00000010H
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 643
	mov	ebx, DWORD PTR [edi+80]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	xor	ebx, edx
	mov	edx, DWORD PTR [edi+84]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$32$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$32$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 644
	mov	ebx, DWORD PTR [edi+88]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+92]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$35$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$35$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 645
	mov	ebx, DWORD PTR [edi+96]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	xor	ebx, edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	mov	edx, DWORD PTR [edi+100]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$38$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$38$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 646
	mov	ebx, DWORD PTR [edi+104]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+108]
	xor	ebp, eax
	xor	ebx, ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$41$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$41$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 647
	mov	ebx, DWORD PTR [edi+112]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x3$1$[esp+24]
	xor	edx, eax
	mov	eax, DWORD PTR _x4$1$[esp+28]
	xor	eax, ecx
	mov	DWORD PTR _x3$1$[esp+24], edx
	xor	ebx, edx
	mov	DWORD PTR _x4$1$[esp+28], eax
	mov	edx, DWORD PTR [edi+116]
	xor	edx, ebx
	xor	edx, eax
	mov	ecx, edx
	mov	eax, edx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$44$[esp+24], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$44$[esp+24]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 648
	mov	ebx, DWORD PTR [edi+120]
	xor	ecx, DWORD PTR _SS[eax*4]
	xor	esi, ecx
	mov	DWORD PTR _x2$1$[esp+28], esi
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR [edi+124]
	xor	ebp, eax
	xor	ebx, ebp
	mov	DWORD PTR _x1$1$[esp+24], ebp
	xor	edx, ebx
	xor	edx, esi
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	xor	ecx, DWORD PTR _SS[eax*4]
	add	ebx, ecx
	mov	DWORD PTR _t1$47$[esp+28], ecx
	mov	ecx, ebx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _SS[ecx*4+3072]
	xor	edx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	edx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _t1$47$[esp+28]
	xor	edx, DWORD PTR _SS[eax*4]
	add	ebx, edx
	mov	ecx, ebx
	mov	eax, ebx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	pop	edi
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	mov	ebx, DWORD PTR _x3$1$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	lea	eax, DWORD PTR [ecx+edx]
	mov	edx, DWORD PTR _x4$1$[esp+24]
	xor	ebx, eax
	xor	edx, ecx
; Line 659
	mov	ecx, DWORD PTR _d$[esp+20]
	mov	eax, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+1], al
	mov	eax, ebx
	shr	eax, 8
	mov	BYTE PTR [ecx+2], al
; Line 660
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx+4], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+5], al
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [ecx+6], al
	mov	BYTE PTR [ecx+7], dl
; Line 661
	mov	edx, ebp
	mov	eax, edx
	mov	BYTE PTR [ecx+11], dl
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx+8], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+9], al
	mov	eax, edx
	shr	eax, 8
; Line 662
	mov	edx, esi
	mov	BYTE PTR [ecx+10], al
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx+12], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+13], al
	mov	eax, edx
	pop	esi
	shr	eax, 8
	pop	ebp
	mov	BYTE PTR [ecx+3], bl
	mov	BYTE PTR [ecx+14], al
	mov	BYTE PTR [ecx+15], dl
	pop	ebx
; Line 663
	add	esp, 12					; 0000000cH
	ret	0
_SEED_encrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SEED_set_key
_TEXT	SEGMENT
_x2$8$ = -8						; size = 4
_t1$16$ = -4						; size = 4
_x2$7$ = -4						; size = 4
_x2$6$ = -4						; size = 4
_x2$5$ = -4						; size = 4
_x4$7$ = 8						; size = 4
_x4$6$ = 8						; size = 4
_x4$5$ = 8						; size = 4
_x4$4$ = 8						; size = 4
_x4$2$ = 8						; size = 4
_rawkey$ = 8						; size = 4
_ks$ = 12						; size = 4
_SEED_set_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\seed\seed.c
; Line 563
	mov	eax, 8
	call	__chkstk
; Line 567
	push	ebx
	push	ebp
	push	esi
; Line 573
	push	edi
; Line 567
	mov	ecx, DWORD PTR _rawkey$[esp+20]
	movzx	ebp, BYTE PTR [ecx]
	movzx	eax, BYTE PTR [ecx+1]
; Line 568
	movzx	esi, BYTE PTR [ecx+4]
; Line 569
	movzx	edx, BYTE PTR [ecx+8]
	shl	ebp, 8
	or	ebp, eax
	shl	esi, 8
	movzx	eax, BYTE PTR [ecx+2]
	shl	ebp, 8
	or	ebp, eax
	shl	edx, 8
	movzx	eax, BYTE PTR [ecx+3]
	shl	ebp, 8
	or	ebp, eax
	movzx	eax, BYTE PTR [ecx+5]
	or	esi, eax
	movzx	eax, BYTE PTR [ecx+6]
	shl	esi, 8
	or	esi, eax
	movzx	eax, BYTE PTR [ecx+7]
	shl	esi, 8
	or	esi, eax
	movzx	eax, BYTE PTR [ecx+9]
	or	edx, eax
; Line 573
	mov	ebx, esi
	movzx	eax, BYTE PTR [ecx+10]
	shl	edx, 8
	or	edx, eax
	movzx	eax, BYTE PTR [ecx+11]
	movzx	edi, BYTE PTR [ecx+12]
	shl	edx, 8
	or	edx, eax
	shl	edi, 8
	movzx	eax, BYTE PTR [ecx+13]
	or	edi, eax
	mov	DWORD PTR _x4$2$[esp+20], edx
	movzx	eax, BYTE PTR [ecx+14]
	add	edx, 1640531527				; 61c88647H
	shl	edi, 8
	add	edx, ebp
	or	edi, eax
	movzx	eax, BYTE PTR [ecx+15]
	shl	edi, 8
; Line 574
	mov	ecx, edx
	or	edi, eax
	shr	ecx, 24					; 00000018H
	mov	eax, edx
	sub	ebx, edi
	shr	eax, 16					; 00000010H
	sub	ebx, 1640531527				; 61c88647H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx], ecx
	mov	ecx, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	DWORD PTR [edx+4], ecx
; Line 575
	mov	eax, ebp
	mov	edx, DWORD PTR _x4$2$[esp+20]
	mov	ecx, esi
	shr	eax, 8
	add	edx, -1013904243			; c3910c8dH
	shl	ecx, 24					; 00000018H
	xor	ecx, eax
	shr	esi, 8
	shl	ebp, 24					; 00000018H
	xor	ebp, esi
	mov	esi, ecx
	add	edx, esi
	mov	ebx, ebp
; Line 576
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	sub	ebx, edi
	movzx	eax, al
	add	ebx, 1013904243				; 3c6ef373H
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+8], ecx
	mov	ecx, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 579
	mov	ebx, ebp
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, DWORD PTR _x4$2$[esp+20]
	mov	DWORD PTR [edx+12], ecx
	mov	ecx, edi
	shl	eax, 8
	lea	edx, DWORD PTR [esi-2027808486]
	shr	ecx, 24					; 00000018H
	xor	ecx, eax
	shl	edi, 8
	mov	eax, DWORD PTR _x4$2$[esp+20]
	shr	eax, 24					; 00000018H
	xor	eax, edi
	mov	edi, ecx
	sub	ebx, eax
	mov	DWORD PTR _x4$2$[esp+20], eax
	add	edx, edi
	add	ebx, 2027808486				; 78dde6e6H
; Line 580
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+16], ecx
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	ecx, DWORD PTR _SS[eax*4]
; Line 581
	mov	eax, esi
	mov	DWORD PTR [edx+20], ecx
	mov	ecx, ebp
	shr	eax, 8
	shl	ecx, 24					; 00000018H
	xor	ecx, eax
	shr	ebp, 8
	shl	esi, 24					; 00000018H
	xor	esi, ebp
	mov	ebp, ecx
	mov	ebx, esi
	sub	ebx, DWORD PTR _x4$2$[esp+20]
	sub	ebx, 239350324				; 0e443234H
	lea	edx, DWORD PTR [ebp+239350324]
	add	edx, edi
; Line 582
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+24], ecx
	mov	ecx, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 583
	mov	ebx, esi
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, edi
	mov	DWORD PTR [edx+28], ecx
	mov	edx, DWORD PTR _x4$2$[esp+20]
	mov	ecx, edx
	shl	eax, 8
	shr	ecx, 24					; 00000018H
	xor	ecx, eax
	shl	edx, 8
	shr	edi, 24					; 00000018H
	xor	edi, edx
	mov	DWORD PTR _x4$4$[esp+20], ecx
	lea	edx, DWORD PTR [ebp+478700647]
	sub	ebx, edi
	add	edx, ecx
	sub	ebx, 478700647				; 1c886467H
; Line 584
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	DWORD PTR [edx+32], ecx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	ecx, DWORD PTR _SS[eax*4]
; Line 585
	mov	eax, ebp
	mov	DWORD PTR [edx+36], ecx
	mov	ecx, esi
	shr	eax, 8
	shl	ecx, 24					; 00000018H
	xor	ecx, eax
	shr	esi, 8
	mov	DWORD PTR _x2$5$[esp+24], ecx
	shl	ebp, 24					; 00000018H
	xor	ebp, esi
	mov	esi, DWORD PTR _x4$4$[esp+20]
	mov	ebx, ebp
	sub	ebx, edi
	sub	ebx, 957401293				; 3910c8cdH
	lea	edx, DWORD PTR [esi+957401293]
	add	edx, ecx
; Line 586
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+40], ecx
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 587
	mov	ebx, ebp
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, esi
	mov	DWORD PTR [edx+44], ecx
	mov	ecx, edi
	shl	edi, 8
	shr	esi, 24					; 00000018H
	xor	esi, edi
	shr	ecx, 24					; 00000018H
	mov	edi, DWORD PTR _x2$5$[esp+24]
	sub	ebx, esi
	shl	eax, 8
	sub	ebx, 1914802585				; 72219199H
	xor	ecx, eax
	mov	DWORD PTR _x4$5$[esp+20], ecx
	lea	edx, DWORD PTR [edi+1914802585]
	add	edx, ecx
; Line 588
	mov	ecx, edx
	mov	eax, edx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+48], ecx
	mov	ecx, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	ecx, DWORD PTR _SS[eax*4]
; Line 589
	mov	eax, edi
	mov	DWORD PTR [edx+52], ecx
	mov	ecx, ebp
	shr	eax, 8
	shl	ecx, 24					; 00000018H
	xor	ecx, eax
	shr	ebp, 8
	mov	DWORD PTR _x2$6$[esp+24], ecx
	shl	edi, 24					; 00000018H
	xor	edi, ebp
	mov	ebp, DWORD PTR _x4$5$[esp+20]
	mov	ebx, edi
	sub	ebx, esi
	add	ebx, 465362127				; 1bbcdccfH
	lea	edx, DWORD PTR [ebp-465362127]
	add	edx, ecx
; Line 590
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+56], ecx
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 591
	mov	ebx, edi
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebp
	mov	DWORD PTR [edx+60], ecx
	mov	ecx, esi
	shl	esi, 8
	shr	ebp, 24					; 00000018H
	xor	ebp, esi
	shr	ecx, 24					; 00000018H
	mov	esi, DWORD PTR _x2$6$[esp+24]
	sub	ebx, ebp
	shl	eax, 8
	xor	ecx, eax
	mov	DWORD PTR _x4$6$[esp+20], ecx
	lea	edx, DWORD PTR [esi-930724254]
	add	edx, ecx
	add	ebx, 930724254				; 3779b99eH
; Line 592
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+64], ecx
	mov	ecx, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	ecx, DWORD PTR _SS[eax*4]
; Line 593
	mov	eax, esi
	mov	DWORD PTR [edx+68], ecx
	mov	ecx, edi
	shr	eax, 8
	shl	ecx, 24					; 00000018H
	xor	ecx, eax
	shr	edi, 8
	mov	DWORD PTR _x2$7$[esp+24], ecx
	shl	esi, 24					; 00000018H
	xor	esi, edi
	mov	edi, DWORD PTR _x4$6$[esp+20]
	mov	ebx, esi
	sub	ebx, ebp
	add	ebx, 1861448508				; 6ef3733cH
	lea	edx, DWORD PTR [edi-1861448508]
	add	edx, ecx
; Line 594
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+72], ecx
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	ecx, DWORD PTR _SS[eax*4]
; Line 595
	mov	eax, edi
	mov	DWORD PTR [edx+76], ecx
	mov	ecx, ebp
	shr	ecx, 24					; 00000018H
	shl	eax, 8
	xor	ecx, eax
	shr	edi, 24					; 00000018H
	mov	DWORD PTR _x4$7$[esp+20], ecx
	shl	ebp, 8
	xor	edi, ebp
	mov	ebx, esi
	mov	ebp, DWORD PTR _x2$7$[esp+24]
	sub	ebx, edi
	sub	ebx, 572070280				; 22191988H
	lea	edx, DWORD PTR [ebp+572070280]
	add	edx, ecx
; Line 596
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+80], ecx
	mov	ecx, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	ecx, DWORD PTR _SS[eax*4]
; Line 597
	mov	eax, ebp
	mov	DWORD PTR [edx+84], ecx
	mov	ecx, esi
	mov	edx, DWORD PTR _x4$7$[esp+20]
	shr	eax, 8
	add	edx, 1144140559				; 4432330fH
	shl	ecx, 24					; 00000018H
	xor	ecx, eax
	shl	ebp, 24					; 00000018H
	add	edx, ecx
	mov	DWORD PTR _x2$8$[esp+24], ecx
; Line 598
	mov	ecx, edx
	shr	esi, 8
	shr	ecx, 24					; 00000018H
	mov	eax, edx
	shr	eax, 16					; 00000010H
	xor	ebp, esi
	movzx	eax, al
	mov	ebx, ebp
	sub	ebx, edi
	mov	DWORD PTR _x2$7$[esp+24], ebp
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	sub	ebx, 1144140559				; 4432330fH
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+88], ecx
	mov	ecx, ebx
	shr	eax, 16					; 00000010H
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	DWORD PTR [edx+92], ecx
; Line 599
	mov	ecx, DWORD PTR _x4$7$[esp+20]
	mov	ebp, edi
	mov	edx, DWORD PTR _x2$8$[esp+24]
	mov	eax, ecx
	mov	esi, DWORD PTR _x2$7$[esp+24]
	add	edx, -2006686179			; 8864661dH
	shl	eax, 8
	mov	ebx, esi
	shr	ecx, 24					; 00000018H
	shl	edi, 8
	xor	ecx, edi
	shr	ebp, 24					; 00000018H
	xor	ebp, eax
	mov	DWORD PTR _x4$7$[esp+20], ecx
	sub	ebx, ecx
	add	edx, ebp
; Line 600
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	add	ebx, 2006686179				; 779b99e3H
	shr	ecx, 24					; 00000018H
; Line 601
	mov	edi, esi
	movzx	eax, al
	shl	edi, 24					; 00000018H
	shr	esi, 8
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+96], ecx
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	DWORD PTR [edx+100], ecx
	mov	ecx, DWORD PTR _x2$8$[esp+24]
	mov	eax, ecx
	shr	eax, 8
	xor	edi, eax
	shl	ecx, 24					; 00000018H
	xor	ecx, esi
	mov	DWORD PTR _t1$16$[esp+24], edi
	mov	ebx, ecx
	mov	DWORD PTR _x2$8$[esp+24], ecx
	sub	ebx, DWORD PTR _x4$7$[esp+20]
	lea	edx, DWORD PTR [edi+281594938]
	sub	ebx, 281594938				; 10c8cc3aH
	add	edx, ebp
; Line 602
	mov	ecx, edx
	mov	eax, edx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+104], ecx
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	shr	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	xor	ecx, DWORD PTR _SS[eax*4]
; Line 603
	mov	eax, ebp
	mov	DWORD PTR [edx+108], ecx
	lea	edx, DWORD PTR [edi+563189875]
	mov	ecx, DWORD PTR _x4$7$[esp+20]
	mov	esi, ecx
	shl	eax, 8
	shl	ecx, 8
	mov	edi, DWORD PTR _x2$8$[esp+24]
	mov	ebx, edi
	shr	esi, 24					; 00000018H
	xor	esi, eax
	shr	ebp, 24					; 00000018H
	xor	ebp, ecx
	add	edx, esi
; Line 604
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	sub	ebx, ebp
	movzx	eax, al
	sub	ebx, 563189875				; 21919873H
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+112], ecx
	mov	ecx, ebx
	shr	eax, 16					; 00000010H
	movzx	eax, al
	shr	ecx, 24					; 00000018H
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
; Line 605
	mov	ebx, DWORD PTR _t1$16$[esp+24]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	eax, ebx
	mov	DWORD PTR [edx+116], ecx
	mov	edx, edi
	shr	eax, 8
	shl	edx, 24					; 00000018H
	xor	edx, eax
	shl	ebx, 24					; 00000018H
	add	edx, 1126379749				; 432330e5H
	shr	edi, 8
	add	edx, esi
	xor	ebx, edi
; Line 606
	mov	ecx, edx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	sub	ebx, ebp
	shr	ecx, 24					; 00000018H
	sub	ebx, 1126379749				; 432330e5H
	movzx	eax, al
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, edx
	shr	eax, 8
	movzx	eax, al
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, dl
	mov	edx, DWORD PTR _ks$[esp+20]
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	DWORD PTR [edx+120], ecx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	ecx, ebx
	shr	ecx, 24					; 00000018H
	movzx	eax, al
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR _SS[ecx*4+3072]
	xor	ecx, DWORD PTR _SS[eax*4+2048]
	mov	eax, ebx
	shr	eax, 8
	movzx	eax, al
	pop	ebp
	xor	ecx, DWORD PTR _SS[eax*4+1024]
	movzx	eax, bl
	pop	ebx
	xor	ecx, DWORD PTR _SS[eax*4]
	mov	DWORD PTR [edx+124], ecx
; Line 618
	add	esp, 8
	ret	0
_SEED_set_key ENDP
_TEXT	ENDS
END

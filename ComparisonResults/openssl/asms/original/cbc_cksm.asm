; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\des\cbc_cksm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_DES_cbc_cksum
EXTRN	_DES_encrypt1:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _DES_cbc_cksum
_TEXT	SEGMENT
_tin$ = -8						; size = 8
_in$ = 8						; size = 4
_output$ = 12						; size = 4
_tout0$1$ = 16						; size = 4
_length$ = 16						; size = 4
_schedule$ = 20						; size = 4
_ivec$ = 24						; size = 4
_DES_cbc_cksum PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\des\cbc_cksm.c
; Line 64
	mov	eax, 8
	call	__chkstk
; Line 71
	mov	eax, DWORD PTR _ivec$[esp+4]
	lea	edx, DWORD PTR [eax+1]
; Line 72
	movzx	ecx, BYTE PTR [edx+6]
	push	ebx
	movzx	ebx, BYTE PTR [edx+3]
	push	ebp
	movzx	ebp, BYTE PTR [eax]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 8
	or	ebp, eax
	shl	ecx, 8
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ebp, eax
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	ebp, eax
	movzx	eax, BYTE PTR [edx+4]
	shl	eax, 8
	or	ebx, eax
	movzx	eax, BYTE PTR [edx+5]
	or	ecx, eax
	shl	ecx, 16					; 00000010H
	push	edi
	mov	edi, DWORD PTR _length$[esp+16]
	or	ebx, ecx
	mov	DWORD PTR _tout0$1$[esp+16], ebp
; Line 73
	test	edi, edi
	jle	$LN24@DES_cbc_ck
	push	esi
	mov	esi, DWORD PTR _in$[esp+20]
	jmp	SHORT $LN4@DES_cbc_ck
$LL23@DES_cbc_ck:
	mov	ebp, DWORD PTR _tin$[esp+24]
$LN4@DES_cbc_ck:
; Line 74
	cmp	edi, 8
	jl	SHORT $LN7@DES_cbc_ck
; Line 75
	movzx	eax, BYTE PTR [esi+1]
	movzx	edx, BYTE PTR [esi]
; Line 76
	movzx	ecx, BYTE PTR [esi+4]
	shl	eax, 8
	or	edx, eax
	movzx	eax, BYTE PTR [esi+2]
	shl	eax, 16					; 00000010H
	or	edx, eax
	movzx	eax, BYTE PTR [esi+3]
	shl	eax, 24					; 00000018H
	or	edx, eax
	movzx	eax, BYTE PTR [esi+5]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+6]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	movzx	eax, BYTE PTR [esi+7]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	add	esi, 8
; Line 77
	jmp	SHORT $LN5@DES_cbc_ck
$LN7@DES_cbc_ck:
; Line 78
	lea	eax, DWORD PTR [edi-1]
	add	esi, edi
	xor	ecx, ecx
	xor	edx, edx
	cmp	eax, 7
	ja	SHORT $LN5@DES_cbc_ck
	lea	eax, DWORD PTR [edi-1]
	jmp	DWORD PTR $LN26@DES_cbc_ck[eax*4]
$LN9@DES_cbc_ck:
	movzx	ecx, BYTE PTR [esi-1]
	dec	esi
	shl	ecx, 24					; 00000018H
$LN10@DES_cbc_ck:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 16					; 00000010H
	or	ecx, eax
$LN11@DES_cbc_ck:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 8
	or	ecx, eax
$LN12@DES_cbc_ck:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	or	ecx, eax
$LN13@DES_cbc_ck:
	movzx	edx, BYTE PTR [esi-1]
	dec	esi
	shl	edx, 24					; 00000018H
$LN14@DES_cbc_ck:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 16					; 00000010H
	or	edx, eax
$LN15@DES_cbc_ck:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	shl	eax, 8
	or	edx, eax
$LN16@DES_cbc_ck:
	movzx	eax, BYTE PTR [esi-1]
	dec	esi
	or	edx, eax
$LN5@DES_cbc_ck:
; Line 84
	push	1
	push	DWORD PTR _schedule$[esp+24]
	lea	eax, DWORD PTR _tin$[esp+32]
	xor	edx, ebp
	xor	ecx, ebx
	mov	DWORD PTR _tin$[esp+32], edx
	push	eax
	mov	DWORD PTR _tin$[esp+40], ecx
	call	_DES_encrypt1
; Line 86
	mov	edx, DWORD PTR _tin$[esp+36]
	sub	edi, 8
; Line 87
	mov	ebx, DWORD PTR _tin$[esp+40]
	add	esp, 12					; 0000000cH
	test	edi, edi
	jg	$LL23@DES_cbc_ck
	pop	esi
	jmp	SHORT $LN3@DES_cbc_ck
$LN24@DES_cbc_ck:
	mov	edx, DWORD PTR _tout0$1$[esp+16]
$LN3@DES_cbc_ck:
; Line 89
	mov	ecx, DWORD PTR _output$[esp+16]
	test	ecx, ecx
	je	SHORT $LN17@DES_cbc_ck
; Line 90
	mov	BYTE PTR [ecx], dl
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [ecx+1], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+2], al
; Line 91
	mov	eax, ebx
	shr	eax, 8
	shr	edx, 24					; 00000018H
	mov	BYTE PTR [ecx+3], dl
	mov	BYTE PTR [ecx+4], bl
	mov	BYTE PTR [ecx+5], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+6], al
	mov	eax, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx+7], al
$LN17@DES_cbc_ck:
; Line 102
	mov	eax, ebx
	mov	ecx, ebx
	shr	ecx, 16					; 00000010H
	and	eax, 16711680				; 00ff0000H
	or	eax, ecx
	mov	ecx, ebx
	and	ecx, 65280				; 0000ff00H
	shl	ebx, 16					; 00000010H
	or	ecx, ebx
	shr	eax, 8
	pop	edi
	shl	ecx, 8
	pop	ebp
	or	eax, ecx
	pop	ebx
; Line 103
	add	esp, 8
	ret	0
	npad	2
$LN26@DES_cbc_ck:
	DD	$LN16@DES_cbc_ck
	DD	$LN15@DES_cbc_ck
	DD	$LN14@DES_cbc_ck
	DD	$LN13@DES_cbc_ck
	DD	$LN12@DES_cbc_ck
	DD	$LN11@DES_cbc_ck
	DD	$LN10@DES_cbc_ck
	DD	$LN9@DES_cbc_ck
_DES_cbc_cksum ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecdsatest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0DK@NCNEKBOG@65105677090601507605681076345635@ ; `string'
PUBLIC	??_C@_0DL@KGOPFDCM@61405070670650010630650655656674@ ; `string'
PUBLIC	??_C@_0EJ@FLNFDIBO@87630010150710756750106613076167@ ; `string'
PUBLIC	??_C@_0EJ@HAMKFGAN@70000001756905664665550578175715@ ; `string'
PUBLIC	??_C@_0DL@INMOCKOC@12755521911132123000120304391871@ ; `string'
PUBLIC	??_C@_0DL@ONEOPBPB@15427255652165239857892369562652@ ; `string'
PUBLIC	??_C@_0EJ@JEBBLBHO@14564275552191153465132123000753@ ; `string'
PUBLIC	??_C@_0EJ@IDOJFJKI@17127872556521652396728578923695@ ; `string'
_DATA	SEGMENT
COMM	_fake_rand:BYTE:018H
COMM	_old_rand:DWORD
_DATA	ENDS
_BSS	SEGMENT
_fbytes_counter DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0EJ@IDOJFJKI@17127872556521652396728578923695@
CONST	SEGMENT
??_C@_0EJ@IDOJFJKI@17127872556521652396728578923695@ DB '1712787255652165'
	DB	'23967285789236956265265265235675811949404040041670216363', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@JEBBLBHO@14564275552191153465132123000753@
CONST	SEGMENT
??_C@_0EJ@JEBBLBHO@14564275552191153465132123000753@ DB '1456427555219115'
	DB	'34651321230007534120304391871461646461466464667494947990', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@ONEOPBPB@15427255652165239857892369562652@
CONST	SEGMENT
??_C@_0DL@ONEOPBPB@15427255652165239857892369562652@ DB '1542725565216523'
	DB	'985789236956265265265235675811949404040041', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@INMOCKOC@12755521911132123000120304391871@
CONST	SEGMENT
??_C@_0DL@INMOCKOC@12755521911132123000120304391871@ DB '1275552191113212'
	DB	'300012030439187146164646146646466749494799', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@HAMKFGAN@70000001756905664665550578175715@
CONST	SEGMENT
??_C@_0EJ@HAMKFGAN@70000001756905664665550578175715@ DB '7000000175690566'
	DB	'46655505781757157107570501575775705779575555657156756655', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@FLNFDIBO@87630010150710756750106613076167@
CONST	SEGMENT
??_C@_0EJ@FLNFDIBO@87630010150710756750106613076167@ DB '8763001015071075'
	DB	'67501066130761671078357010671067781776716671676178726717', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@KGOPFDCM@61405070670650010630650655656674@
CONST	SEGMENT
??_C@_0DL@KGOPFDCM@61405070670650010630650655656674@ DB '6140507067065001'
	DB	'063065065565667405560006161556565665656654', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@NCNEKBOG@65105677090601507605681076345635@
CONST	SEGMENT
??_C@_0DK@NCNEKBOG@65105677090601507605681076345635@ DB '6510567709060150'
	DB	'76056810763456358567190100156695615665659', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_numbers DD	FLAT:??_C@_0DK@NCNEKBOG@65105677090601507605681076345635@
	DD	FLAT:??_C@_0DL@KGOPFDCM@61405070670650010630650655656674@
	DD	FLAT:??_C@_0EJ@FLNFDIBO@87630010150710756750106613076167@
	DD	FLAT:??_C@_0EJ@HAMKFGAN@70000001756905664665550578175715@
	DD	FLAT:??_C@_0DL@INMOCKOC@12755521911132123000120304391871@
	DD	FLAT:??_C@_0DL@ONEOPBPB@15427255652165239857892369562652@
	DD	FLAT:??_C@_0EJ@JEBBLBHO@14564275552191153465132123000753@
	DD	FLAT:??_C@_0EJ@IDOJFJKI@17127872556521652396728578923695@
_DATA	ENDS
CONST	SEGMENT
_rnd_seed DB	'string to make the random number generator think it has '
	DB	'entropy', 00H
CONST	ENDS
PUBLIC	_x9_62_tests
PUBLIC	_x9_62_test_internal
PUBLIC	_test_builtin
PUBLIC	_change_rand
PUBLIC	_restore_rand
PUBLIC	_fbytes
PUBLIC	_main
PUBLIC	??_C@_0N@BCJKLMKO@testing?5?$CFs?3?5?$AA@	; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_04CFDEAMPI@?5ok?6?$AA@			; `string'
PUBLIC	??_C@_08GKLCMPAG@?5failed?6?$AA@		; `string'
PUBLIC	??_C@_0BI@MAEFLNOA@some?5tests?5from?5X9?462?3?6?$AA@ ; `string'
PUBLIC	??_C@_0DL@JGMMGIGG@57358223288881552546838949978975@ ; `string'
PUBLIC	??_C@_0DL@ILBLGFFJ@33424035364059817293934883346946@ ; `string'
PUBLIC	??_C@_0EJ@ODAOKGCF@32381355320979735770807877683125@ ; `string'
PUBLIC	??_C@_0EJ@MIKECHMA@30863614317516781149262254730066@ ; `string'
PUBLIC	??_C@_0DK@CCMCLDGF@30899269196580494736154166454908@ ; `string'
PUBLIC	??_C@_0DJ@HCOMLKJC@87194383164871543355722284926904@ ; `string'
PUBLIC	??_C@_0EJ@BIIJJDKI@19703037400073168673833499765499@ ; `string'
PUBLIC	??_C@_0EI@GJAGKOOP@21596333210419611985018340039034@ ; `string'
PUBLIC	??_C@_0CC@MMKNEKNA@ERROR?3?5unable?5to?5get?5random?5data@ ; `string'
PUBLIC	??_C@_0EF@MPOGHCG@?6testing?5ECDSA_sign?$CI?$CJ?5and?5ECDSA_@ ; `string'
PUBLIC	??_C@_0BL@JOMAGLOF@?4?2crypto?2ecdsa?2ecdsatest?4c?$AA@ ; `string'
PUBLIC	??_C@_0O@NPENBAOL@malloc?5error?6?$AA@		; `string'
PUBLIC	??_C@_0BP@NEHLHDBC@unable?5to?5get?5internal?5curves?6?$AA@ ; `string'
PUBLIC	??_C@_04PFAOODAA@?$CFs?3?5?$AA@			; `string'
PUBLIC	??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@	; `string'
PUBLIC	??_C@_03MCADLMAF@off?$AA@			; `string'
PUBLIC	??_C@_0BE@NEJHNGHB@?6ECDSA?5test?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0BE@COLOMPHD@?6ECDSA?5test?5passed?6?$AA@	; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__getenv:PROC
EXTRN	_CRYPTO_mem_ctrl:PROC
EXTRN	_CRYPTO_cleanup_all_ex_data:PROC
EXTRN	_CRYPTO_set_mem_debug_functions:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_set_mem_debug_options:PROC
EXTRN	_CRYPTO_dbg_malloc:PROC
EXTRN	_CRYPTO_dbg_realloc:PROC
EXTRN	_CRYPTO_dbg_free:PROC
EXTRN	_CRYPTO_dbg_set_options:PROC
EXTRN	_CRYPTO_dbg_get_options:PROC
EXTRN	_CRYPTO_mem_leaks:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_dec2bn:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestInit:PROC
EXTRN	_EVP_DigestFinal:PROC
EXTRN	_EVP_ecdsa:PROC
EXTRN	_EC_GROUP_free:PROC
EXTRN	_EC_GROUP_get_degree:PROC
EXTRN	_EC_GROUP_new_by_curve_name:PROC
EXTRN	_EC_get_builtin_curves:PROC
EXTRN	_EC_KEY_new:PROC
EXTRN	_EC_KEY_new_by_curve_name:PROC
EXTRN	_EC_KEY_free:PROC
EXTRN	_EC_KEY_get0_group:PROC
EXTRN	_EC_KEY_set_group:PROC
EXTRN	_EC_KEY_generate_key:PROC
EXTRN	_EC_KEY_check_key:PROC
EXTRN	_ECDSA_SIG_free:PROC
EXTRN	_i2d_ECDSA_SIG:PROC
EXTRN	_d2i_ECDSA_SIG:PROC
EXTRN	_ECDSA_do_sign:PROC
EXTRN	_ECDSA_do_verify:PROC
EXTRN	_ECDSA_size:PROC
EXTRN	_ECDSA_sign:PROC
EXTRN	_ECDSA_verify:PROC
EXTRN	_RAND_set_rand_method:PROC
EXTRN	_RAND_get_rand_method:PROC
EXTRN	_RAND_pseudo_bytes:PROC
EXTRN	_RAND_seed:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_ERR_free_strings:PROC
EXTRN	_ERR_remove_thread_state:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BE@COLOMPHD@?6ECDSA?5test?5passed?6?$AA@
CONST	SEGMENT
??_C@_0BE@COLOMPHD@?6ECDSA?5test?5passed?6?$AA@ DB 0aH, 'ECDSA test passe'
	DB	'd', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NEJHNGHB@?6ECDSA?5test?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BE@NEJHNGHB@?6ECDSA?5test?5failed?6?$AA@ DB 0aH, 'ECDSA test faile'
	DB	'd', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCADLMAF@off?$AA@
CONST	SEGMENT
??_C@_03MCADLMAF@off?$AA@ DB 'off', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@
CONST	SEGMENT
??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@ DB 'OPENSSL_DEBUG_MEMORY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04PFAOODAA@?$CFs?3?5?$AA@
CONST	SEGMENT
??_C@_04PFAOODAA@?$CFs?3?5?$AA@ DB '%s: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NEHLHDBC@unable?5to?5get?5internal?5curves?6?$AA@
CONST	SEGMENT
??_C@_0BP@NEHLHDBC@unable?5to?5get?5internal?5curves?6?$AA@ DB 'unable to'
	DB	' get internal curves', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NPENBAOL@malloc?5error?6?$AA@
CONST	SEGMENT
??_C@_0O@NPENBAOL@malloc?5error?6?$AA@ DB 'malloc error', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JOMAGLOF@?4?2crypto?2ecdsa?2ecdsatest?4c?$AA@
CONST	SEGMENT
??_C@_0BL@JOMAGLOF@?4?2crypto?2ecdsa?2ecdsatest?4c?$AA@ DB '.\crypto\ecds'
	DB	'a\ecdsatest.c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@MPOGHCG@?6testing?5ECDSA_sign?$CI?$CJ?5and?5ECDSA_@
CONST	SEGMENT
??_C@_0EF@MPOGHCG@?6testing?5ECDSA_sign?$CI?$CJ?5and?5ECDSA_@ DB 0aH, 'te'
	DB	'sting ECDSA_sign() and ECDSA_verify() with some internal curv'
	DB	'es:', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@MMKNEKNA@ERROR?3?5unable?5to?5get?5random?5data@
CONST	SEGMENT
??_C@_0CC@MMKNEKNA@ERROR?3?5unable?5to?5get?5random?5data@ DB 'ERROR: una'
	DB	'ble to get random data', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@GJAGKOOP@21596333210419611985018340039034@
CONST	SEGMENT
??_C@_0EI@GJAGKOOP@21596333210419611985018340039034@ DB '2159633321041961'
	DB	'1985018340039034612628818151486841789642455876922391552', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@BIIJJDKI@19703037400073168673833499765499@
CONST	SEGMENT
??_C@_0EJ@BIIJJDKI@19703037400073168673833499765499@ DB '1970303740007316'
	DB	'86738334997654997227052849804072198819102649413465737174', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@HCOMLKJC@87194383164871543355722284926904@
CONST	SEGMENT
??_C@_0DJ@HCOMLKJC@87194383164871543355722284926904@ DB '8719438316487154'
	DB	'3355722284926904419997237591535066528048', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@CCMCLDGF@30899269196580494736154166454908@
CONST	SEGMENT
??_C@_0DK@CCMCLDGF@30899269196580494736154166454908@ DB '3089926919658049'
	DB	'47361541664549085895292153777025772063598', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@MIKECHMA@30863614317516781149262254730066@
CONST	SEGMENT
??_C@_0EJ@MIKECHMA@30863614317516781149262254730066@ DB '3086361431751678'
	DB	'11492622547300668018854959378758531778147462058306432176', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@ODAOKGCF@32381355320979735770807877683125@
CONST	SEGMENT
??_C@_0EJ@ODAOKGCF@32381355320979735770807877683125@ DB '3238135532097973'
	DB	'57708078776831250505931891051755007842781978505179448783', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@ILBLGFFJ@33424035364059817293934883346946@
CONST	SEGMENT
??_C@_0DL@ILBLGFFJ@33424035364059817293934883346946@ DB '3342403536405981'
	DB	'729393488334694600415596881826869351677613', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@JGMMGIGG@57358223288881552546838949978975@
CONST	SEGMENT
??_C@_0DL@JGMMGIGG@57358223288881552546838949978975@ DB '5735822328888155'
	DB	'254683894997897571951568553642892029982342', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MAEFLNOA@some?5tests?5from?5X9?462?3?6?$AA@
CONST	SEGMENT
??_C@_0BI@MAEFLNOA@some?5tests?5from?5X9?462?3?6?$AA@ DB 'some tests from'
	DB	' X9.62:', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08GKLCMPAG@?5failed?6?$AA@
CONST	SEGMENT
??_C@_08GKLCMPAG@?5failed?6?$AA@ DB ' failed', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CFDEAMPI@?5ok?6?$AA@
CONST	SEGMENT
??_C@_04CFDEAMPI@?5ok?6?$AA@ DB ' ok', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BCJKLMKO@testing?5?$CFs?3?5?$AA@
CONST	SEGMENT
??_C@_0N@BCJKLMKO@testing?5?$CFs?3?5?$AA@ DB 'testing %s: ', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecdsatest.c
; Line 512
	push	ebp
	push	edi
; Line 513
	mov	ebp, 1
; Line 516
	push	0
	push	ebp
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
; Line 519
	push	OFFSET ??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@
	mov	edi, eax
	call	DWORD PTR __imp__getenv
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@main
	push	esi
	push	OFFSET ??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@
	mov	esi, OFFSET ??_C@_03MCADLMAF@off?$AA@
	call	DWORD PTR __imp__getenv
	add	esp, 4
$LL17@main:
	mov	cl, BYTE PTR [eax]
	cmp	cl, BYTE PTR [esi]
	jne	SHORT $LN18@main
	test	cl, cl
	je	SHORT $LN19@main
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, BYTE PTR [esi+1]
	jne	SHORT $LN18@main
	add	eax, 2
	add	esi, 2
	test	cl, cl
	jne	SHORT $LL17@main
$LN19@main:
	xor	eax, eax
	jmp	SHORT $LN20@main
$LN18@main:
	sbb	eax, eax
	or	eax, 1
$LN20@main:
	pop	esi
	test	eax, eax
	jne	SHORT $LN4@main
; Line 525
	push	eax
	push	eax
	push	eax
	push	eax
	push	eax
	call	_CRYPTO_set_mem_debug_functions
	add	esp, 20					; 00000014H
	jmp	SHORT $LN6@main
$LN4@main:
; Line 521
	push	OFFSET _CRYPTO_dbg_get_options
	push	OFFSET _CRYPTO_dbg_set_options
	push	OFFSET _CRYPTO_dbg_free
	push	OFFSET _CRYPTO_dbg_realloc
	push	OFFSET _CRYPTO_dbg_malloc
	call	_CRYPTO_set_mem_debug_functions
; Line 522
	push	3
	call	_CRYPTO_set_mem_debug_options
	add	esp, 24					; 00000018H
$LN6@main:
; Line 527
	push	1
	call	_CRYPTO_mem_ctrl
; Line 529
	call	_ERR_load_crypto_strings
; Line 532
	push	64					; 00000040H
	push	OFFSET _rnd_seed
	call	_RAND_seed
; Line 535
	push	edi
	call	_x9_62_tests
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN15@main
; Line 537
	push	edi
	call	_test_builtin
	add	esp, 4
	test	eax, eax
	je	SHORT $LN15@main
; Line 545
	push	OFFSET ??_C@_0BE@COLOMPHD@?6ECDSA?5test?5passed?6?$AA@
	push	edi
	xor	ebp, ebp
	call	_BIO_printf
	add	esp, 8
; Line 546
	jmp	SHORT $LN12@main
$LN15@main:
; Line 543
	push	OFFSET ??_C@_0BE@NEJHNGHB@?6ECDSA?5test?5failed?6?$AA@
	push	edi
	call	_BIO_printf
; Line 547
	push	edi
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
$LN12@main:
; Line 548
	call	_CRYPTO_cleanup_all_ex_data
; Line 549
	push	0
	call	_ERR_remove_thread_state
; Line 550
	call	_ERR_free_strings
; Line 551
	push	edi
	call	_CRYPTO_mem_leaks
	add	esp, 8
; Line 552
	test	edi, edi
	je	SHORT $LN21@main
; Line 553
	push	edi
	call	_BIO_free
	add	esp, 4
$LN21@main:
; Line 554
	pop	edi
	mov	eax, ebp
	pop	ebp
; Line 555
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fbytes
_TEXT	SEGMENT
_tmp$ = -4						; size = 4
_buf$ = 8						; size = 4
_num$ = 12						; size = 4
_fbytes	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecdsatest.c
; Line 157
	mov	eax, 4
	call	__chkstk
; Line 161
	cmp	DWORD PTR _fbytes_counter, 8
	mov	DWORD PTR _tmp$[esp+4], 0
	jge	SHORT $LN10@fbytes
; Line 163
	call	_BN_new
	mov	DWORD PTR _tmp$[esp+4], eax
; Line 164
	test	eax, eax
	je	SHORT $LN10@fbytes
; Line 166
	mov	eax, DWORD PTR _fbytes_counter
	push	DWORD PTR _numbers[eax*4]
	lea	eax, DWORD PTR _tmp$[esp+8]
	push	eax
	call	_BN_dec2bn
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@fbytes
; Line 167
	push	DWORD PTR _tmp$[esp+4]
	call	_BN_free
	add	esp, 4
$LN10@fbytes:
; Line 168
	xor	eax, eax
; Line 178
	pop	ecx
	ret	0
$LN4@fbytes:
; Line 170
	inc	DWORD PTR _fbytes_counter
	push	esi
; Line 171
	push	DWORD PTR _tmp$[esp+8]
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	DWORD PTR _num$[esp+4], eax
	jne	SHORT $LN7@fbytes
	push	DWORD PTR _buf$[esp+4]
	push	DWORD PTR _tmp$[esp+12]
	call	_BN_bn2bin
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@fbytes
; Line 174
	mov	esi, 1
	jmp	SHORT $LN6@fbytes
$LN7@fbytes:
; Line 172
	xor	esi, esi
$LN6@fbytes:
; Line 175
	mov	eax, DWORD PTR _tmp$[esp+8]
	test	eax, eax
	je	SHORT $LN8@fbytes
; Line 176
	push	eax
	call	_BN_free
	add	esp, 4
$LN8@fbytes:
; Line 177
	mov	eax, esi
	pop	esi
; Line 178
	pop	ecx
	ret	0
_fbytes	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _restore_rand
_TEXT	SEGMENT
_restore_rand PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecdsatest.c
; Line 134
	push	DWORD PTR _old_rand
	call	_RAND_set_rand_method
	add	esp, 4
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 138
	ret	0
_restore_rand ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _change_rand
_TEXT	SEGMENT
_change_rand PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecdsatest.c
; Line 116
	call	_RAND_get_rand_method
	mov	ecx, eax
	mov	DWORD PTR _old_rand, ecx
	test	ecx, ecx
	jne	SHORT $LN2@change_ran
; Line 130
	ret	0
$LN2@change_ran:
; Line 119
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _fake_rand, eax
; Line 120
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _fake_rand+8, eax
; Line 121
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _fake_rand+12, eax
; Line 122
	mov	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR _fake_rand+20, eax
; Line 124
	mov	DWORD PTR _fake_rand+4, OFFSET _fbytes
; Line 125
	mov	eax, DWORD PTR [ecx+4]
; Line 127
	push	OFFSET _fake_rand
	mov	DWORD PTR _fake_rand+16, eax
	call	_RAND_set_rand_method
	add	esp, 4
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 130
	ret	0
_change_rand ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_builtin
_TEXT	SEGMENT
_buf_len$1$ = -92					; size = 4
_nid$1$ = -92						; size = 4
tv525 = -92						; size = 4
_raw_buf$1$ = -88					; size = 4
_sig_len$ = -84						; size = 4
_r_len$1$ = -80						; size = 4
_group$2$ = -80						; size = 4
_group$1$ = -80						; size = 4
tv535 = -80						; size = 4
_wrong_eckey$1$ = -76					; size = 4
_bn_len$1$ = -72					; size = 4
_degree$1$ = -72					; size = 4
_crv_len$1$ = -68					; size = 4
_sig_ptr2$ = -64					; size = 4
_curves$1$ = -60					; size = 4
_s_len$1$ = -56						; size = 4
tv536 = -56						; size = 4
_n$1$ = -52						; size = 4
_sig_ptr$ = -48						; size = 4
_digest$ = -44						; size = 20
_wrong_digest$ = -24					; size = 20
__$ArrayPad$ = -4					; size = 4
_out$ = 8						; size = 4
_test_builtin PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecdsatest.c
; Line 284
	mov	eax, 92					; 0000005cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+92], eax
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR _out$[esp+100]
; Line 299
	lea	eax, DWORD PTR _digest$[esp+104]
	push	20					; 00000014H
	xor	ebx, ebx
	mov	DWORD PTR _wrong_eckey$1$[esp+108], 0
	push	eax
	xor	ebp, ebp
	mov	DWORD PTR _raw_buf$1$[esp+112], ebx
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	jle	$LN6@test_built
	lea	eax, DWORD PTR _wrong_digest$[esp+104]
	push	20					; 00000014H
	push	eax
	call	_RAND_pseudo_bytes
	add	esp, 8
	test	eax, eax
	jle	$LN6@test_built
; Line 308
	push	edi
	push	OFFSET ??_C@_0EF@MPOGHCG@?6testing?5ECDSA_sign?$CI?$CJ?5and?5ECDSA_@
	push	esi
	call	_BIO_printf
; Line 312
	push	ebx
	push	ebx
	call	_EC_get_builtin_curves
; Line 314
	push	314					; 0000013aH
	mov	DWORD PTR _crv_len$1$[esp+128], eax
	shl	eax, 3
	push	OFFSET ??_C@_0BL@JOMAGLOF@?4?2crypto?2ecdsa?2ecdsatest?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _curves$1$[esp+108], edi
; Line 316
	test	edi, edi
	jne	SHORT $LN7@test_built
; Line 317
	push	OFFSET ??_C@_0O@NPENBAOL@malloc?5error?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
; Line 508
	xor	esi, esi
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 509
	mov	ecx, DWORD PTR __$ArrayPad$[esp+92]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 92					; 0000005cH
	ret	0
$LN7@test_built:
; Line 321
	push	DWORD PTR _crv_len$1$[esp+108]
	push	edi
	call	_EC_get_builtin_curves
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@test_built
; Line 322
	push	OFFSET ??_C@_0BP@NEHLHDBC@unable?5to?5get?5internal?5curves?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
$LN73@test_built:
	xor	esi, esi
$LN40@test_built:
; Line 506
	push	DWORD PTR _curves$1$[esp+108]
	call	_CRYPTO_free
	add	esp, 4
; Line 508
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 509
	mov	ecx, DWORD PTR __$ArrayPad$[esp+92]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 92					; 0000005cH
	ret	0
$LN8@test_built:
; Line 327
	mov	ecx, DWORD PTR _crv_len$1$[esp+108]
	xor	eax, eax
	mov	DWORD PTR _n$1$[esp+108], eax
	test	ecx, ecx
	je	$LN71@test_built
	npad	6
$LL4@test_built:
; Line 330
	mov	eax, DWORD PTR [edi+eax*8]
	mov	DWORD PTR _nid$1$[esp+108], eax
; Line 331
	cmp	eax, 750				; 000002eeH
	je	$LN2@test_built
; Line 334
	call	_EC_KEY_new
	mov	edi, eax
	test	edi, edi
	je	SHORT $LN73@test_built
; Line 336
	push	DWORD PTR _nid$1$[esp+108]
	call	_EC_GROUP_new_by_curve_name
	add	esp, 4
	mov	DWORD PTR _group$1$[esp+108], eax
; Line 337
	test	eax, eax
	je	$builtin_err$78
; Line 339
	push	eax
	push	edi
	call	_EC_KEY_set_group
	add	esp, 8
	test	eax, eax
	je	$builtin_err$78
; Line 341
	push	DWORD PTR _group$1$[esp+108]
	call	_EC_GROUP_free
; Line 342
	push	edi
	call	_EC_KEY_get0_group
	push	eax
	call	_EC_GROUP_get_degree
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _degree$1$[esp+108], eax
; Line 343
	cmp	eax, 160				; 000000a0H
	jae	SHORT $LN13@test_built
; Line 346
	push	edi
	call	_EC_KEY_free
	add	esp, 4
; Line 348
	jmp	$LN75@test_built
$LN13@test_built:
; Line 350
	push	DWORD PTR _nid$1$[esp+108]
	call	_OBJ_nid2sn
	push	eax
	push	OFFSET ??_C@_04PFAOODAA@?$CFs?3?5?$AA@
	push	esi
	call	_BIO_printf
; Line 352
	push	edi
	call	_EC_KEY_generate_key
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN49@test_built
; Line 357
	call	_EC_KEY_new
	mov	DWORD PTR _wrong_eckey$1$[esp+108], eax
	test	eax, eax
	je	$builtin_err$78
; Line 359
	push	DWORD PTR _nid$1$[esp+108]
	call	_EC_GROUP_new_by_curve_name
	add	esp, 4
	mov	DWORD PTR _group$2$[esp+108], eax
; Line 360
	test	eax, eax
	je	$builtin_err$78
; Line 362
	push	eax
	push	DWORD PTR _wrong_eckey$1$[esp+112]
	call	_EC_KEY_set_group
	add	esp, 8
	test	eax, eax
	je	$builtin_err$78
; Line 364
	push	DWORD PTR _group$2$[esp+108]
	call	_EC_GROUP_free
; Line 365
	push	DWORD PTR _wrong_eckey$1$[esp+112]
	call	_EC_KEY_generate_key
	add	esp, 8
	test	eax, eax
	je	$LN49@test_built
; Line 370
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	esi
	call	_BIO_printf
; Line 371
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 373
	push	edi
	call	_EC_KEY_check_key
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$LN49@test_built
; Line 377
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	esi
	call	_BIO_printf
; Line 378
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 380
	push	edi
	call	_ECDSA_size
; Line 381
	push	381					; 0000017dH
	push	OFFSET ??_C@_0BL@JOMAGLOF@?4?2crypto?2ecdsa?2ecdsatest?4c?$AA@
	push	eax
	mov	DWORD PTR _sig_len$[esp+148], eax
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 40					; 00000028H
	test	ebx, ebx
	je	$builtin_err$78
; Line 383
	push	edi
	lea	eax, DWORD PTR _sig_len$[esp+112]
	push	eax
	push	ebx
	push	20					; 00000014H
	lea	eax, DWORD PTR _digest$[esp+124]
	push	eax
	push	0
	call	_ECDSA_sign
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN49@test_built
; Line 387
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	esi
	call	_BIO_printf
; Line 388
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 390
	push	edi
	push	DWORD PTR _sig_len$[esp+136]
	lea	eax, DWORD PTR _digest$[esp+140]
	push	ebx
	push	20					; 00000014H
	push	eax
	push	0
	call	_ECDSA_verify
	add	esp, 48					; 00000030H
	cmp	eax, 1
	jne	$LN49@test_built
; Line 394
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	esi
	call	_BIO_printf
; Line 395
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 397
	push	DWORD PTR _wrong_eckey$1$[esp+132]
	lea	eax, DWORD PTR _digest$[esp+136]
	push	DWORD PTR _sig_len$[esp+136]
	push	ebx
	push	20					; 00000014H
	push	eax
	push	0
	call	_ECDSA_verify
	add	esp, 48					; 00000030H
	cmp	eax, 1
	je	$LN49@test_built
; Line 401
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	esi
	call	_BIO_printf
; Line 402
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 404
	push	edi
	push	DWORD PTR _sig_len$[esp+136]
	lea	eax, DWORD PTR _wrong_digest$[esp+140]
	push	ebx
	push	20					; 00000014H
	push	eax
	push	0
	call	_ECDSA_verify
	add	esp, 48					; 00000030H
	cmp	eax, 1
	je	$LN49@test_built
; Line 408
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	esi
	call	_BIO_printf
; Line 409
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 411
	mov	eax, DWORD PTR _sig_len$[esp+132]
	push	edi
	dec	eax
	push	eax
	push	ebx
	push	20					; 00000014H
	lea	eax, DWORD PTR _digest$[esp+148]
	push	eax
	push	0
	call	_ECDSA_verify
	add	esp, 48					; 00000030H
	cmp	eax, 1
	je	$LN49@test_built
; Line 415
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	esi
	call	_BIO_printf
; Line 416
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 424
	push	DWORD PTR _sig_len$[esp+132]
	lea	eax, DWORD PTR _sig_ptr$[esp+136]
	mov	DWORD PTR _sig_ptr$[esp+136], ebx
	push	eax
	push	0
	call	_d2i_ECDSA_SIG
	mov	ebp, eax
	add	esp, 36					; 00000024H
	test	ebp, ebp
	je	$LN49@test_built
; Line 430
	push	DWORD PTR [ebp]
	call	_BN_num_bits
; Line 431
	push	DWORD PTR [ebp+4]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _r_len$1$[esp+116], eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 8
	cdq
	and	edx, 7
	lea	ecx, DWORD PTR [edx+eax]
; Line 432
	mov	eax, DWORD PTR _degree$1$[esp+108]
	add	eax, 7
	sar	ecx, 3
	shr	eax, 3
	mov	DWORD PTR _s_len$1$[esp+108], ecx
	mov	DWORD PTR _bn_len$1$[esp+108], eax
; Line 433
	cmp	DWORD PTR _r_len$1$[esp+108], eax
	ja	$LN49@test_built
	cmp	ecx, eax
	ja	$LN49@test_built
; Line 438
	push	438					; 000001b6H
	add	eax, eax
	push	OFFSET ??_C@_0BL@JOMAGLOF@?4?2crypto?2ecdsa?2ecdsatest?4c?$AA@
	push	eax
	mov	DWORD PTR _buf_len$1$[esp+120], eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _raw_buf$1$[esp+108], eax
	test	eax, eax
	je	$builtin_err$78
; Line 441
	push	DWORD PTR _buf_len$1$[esp+108]
	push	0
	push	eax
	call	_memset
; Line 442
	mov	ecx, DWORD PTR _bn_len$1$[esp+120]
	sub	ecx, DWORD PTR _r_len$1$[esp+120]
	add	ecx, DWORD PTR _raw_buf$1$[esp+120]
	push	ecx
	push	DWORD PTR [ebp]
	call	_BN_bn2bin
; Line 443
	mov	eax, DWORD PTR _buf_len$1$[esp+128]
	sub	eax, DWORD PTR _s_len$1$[esp+128]
	add	eax, DWORD PTR _raw_buf$1$[esp+128]
	push	eax
	push	DWORD PTR [ebp+4]
	call	_BN_bn2bin
; Line 446
	mov	ecx, DWORD PTR _raw_buf$1$[esp+136]
	xor	edx, edx
	movzx	eax, BYTE PTR [ecx+10]
	div	DWORD PTR _buf_len$1$[esp+136]
; Line 447
	mov	cl, BYTE PTR [ecx+11]
	movzx	eax, cl
	test	cl, cl
	mov	DWORD PTR tv525[esp+136], 1
	mov	ecx, DWORD PTR tv525[esp+136]
	cmovne	ecx, eax
; Line 448
	movzx	eax, dl
	mov	DWORD PTR tv525[esp+136], ecx
	mov	ecx, DWORD PTR _raw_buf$1$[esp+136]
	mov	edx, DWORD PTR tv525[esp+136]
	add	eax, ecx
	mov	DWORD PTR tv536[esp+136], eax
	xor	BYTE PTR [eax], dl
; Line 450
	push	DWORD PTR [ebp]
	push	DWORD PTR _bn_len$1$[esp+140]
	push	ecx
	call	_BN_bin2bn
	add	esp, 40					; 00000028H
	test	eax, eax
	je	$builtin_err$78
	push	DWORD PTR [ebp+4]
	mov	eax, DWORD PTR _bn_len$1$[esp+112]
	mov	ecx, DWORD PTR _raw_buf$1$[esp+112]
	add	ecx, eax
	push	eax
	push	ecx
	mov	DWORD PTR tv535[esp+120], ecx
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$builtin_err$78
; Line 455
	lea	eax, DWORD PTR _sig_ptr2$[esp+108]
	mov	DWORD PTR _sig_ptr2$[esp+108], ebx
	push	eax
	push	ebp
	call	_i2d_ECDSA_SIG
; Line 456
	push	edi
	push	eax
	push	ebx
	mov	DWORD PTR _sig_len$[esp+128], eax
	lea	eax, DWORD PTR _digest$[esp+128]
	push	20					; 00000014H
	push	eax
	push	0
	call	_ECDSA_verify
	add	esp, 32					; 00000020H
	cmp	eax, 1
	je	$LN49@test_built
; Line 463
	mov	eax, DWORD PTR tv536[esp+108]
	mov	ecx, DWORD PTR tv525[esp+108]
	xor	BYTE PTR [eax], cl
; Line 464
	push	DWORD PTR [ebp]
	push	DWORD PTR _bn_len$1$[esp+112]
	push	DWORD PTR _raw_buf$1$[esp+116]
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$builtin_err$78
	push	DWORD PTR [ebp+4]
	push	DWORD PTR _bn_len$1$[esp+112]
	push	DWORD PTR tv535[esp+116]
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$builtin_err$78
; Line 469
	lea	eax, DWORD PTR _sig_ptr2$[esp+108]
	mov	DWORD PTR _sig_ptr2$[esp+108], ebx
	push	eax
	push	ebp
	call	_i2d_ECDSA_SIG
; Line 470
	push	edi
	push	eax
	push	ebx
	mov	DWORD PTR _sig_len$[esp+128], eax
	lea	eax, DWORD PTR _digest$[esp+128]
	push	20					; 00000014H
	push	eax
	push	0
	call	_ECDSA_verify
	add	esp, 32					; 00000020H
	cmp	eax, 1
	jne	SHORT $LN49@test_built
; Line 474
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	esi
	call	_BIO_printf
; Line 475
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 477
	push	OFFSET ??_C@_04CFDEAMPI@?5ok?6?$AA@
	push	esi
	call	_BIO_printf
; Line 480
	call	_ERR_clear_error
; Line 481
	push	ebx
	call	_CRYPTO_free
; Line 483
	push	edi
	xor	ebx, ebx
	call	_EC_KEY_free
; Line 485
	push	DWORD PTR _wrong_eckey$1$[esp+148]
	call	_EC_KEY_free
; Line 487
	push	ebp
	mov	DWORD PTR _wrong_eckey$1$[esp+156], ebx
	call	_ECDSA_SIG_free
; Line 489
	push	DWORD PTR _raw_buf$1$[esp+156]
	xor	ebp, ebp
	call	_CRYPTO_free
	add	esp, 52					; 00000034H
; Line 490
	mov	DWORD PTR _raw_buf$1$[esp+108], ebx
$LN75@test_built:
	mov	edi, DWORD PTR _curves$1$[esp+108]
	mov	ecx, DWORD PTR _crv_len$1$[esp+108]
$LN2@test_built:
; Line 327
	mov	eax, DWORD PTR _n$1$[esp+108]
	inc	eax
	mov	DWORD PTR _n$1$[esp+108], eax
	cmp	eax, ecx
	jb	$LL4@test_built
$LN71@test_built:
; Line 493
	mov	esi, 1
	jmp	$LN40@test_built
$LN49@test_built:
; Line 353
	push	OFFSET ??_C@_08GKLCMPAG@?5failed?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
$builtin_err$78:
; Line 496
	push	edi
	call	_EC_KEY_free
; Line 497
	mov	eax, DWORD PTR _wrong_eckey$1$[esp+112]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN37@test_built
; Line 498
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN37@test_built:
; Line 499
	test	ebp, ebp
	je	SHORT $LN38@test_built
; Line 500
	push	ebp
	call	_ECDSA_SIG_free
	add	esp, 4
$LN38@test_built:
; Line 501
	test	ebx, ebx
	je	SHORT $LN39@test_built
; Line 502
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
$LN39@test_built:
; Line 503
	mov	eax, DWORD PTR _raw_buf$1$[esp+108]
	test	eax, eax
	je	$LN73@test_built
; Line 504
	push	eax
	call	_CRYPTO_free
	add	esp, 4
	jmp	$LN73@test_built
$LN6@test_built:
; Line 301
	push	OFFSET ??_C@_0CC@MMKNEKNA@ERROR?3?5unable?5to?5get?5random?5data@
	push	esi
	call	_BIO_printf
; Line 509
	mov	ecx, DWORD PTR __$ArrayPad$[esp+112]
	add	esp, 8
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 92					; 0000005cH
	ret	0
_test_builtin ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x9_62_test_internal
_TEXT	SEGMENT
_r$ = -72						; size = 4
_s$ = -68						; size = 4
_message$ = -64						; size = 4
_dgst_len$ = -60					; size = 4
_r_in$GSCopy$1$ = -56					; size = 4
_s_in$GSCopy$1$ = -52					; size = 4
_md_ctx$ = -48						; size = 24
_digest$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_out$ = 8						; size = 4
_nid$ = 12						; size = 4
_r_in$ = 16						; size = 4
_s_in$ = 20						; size = 4
_x9_62_test_internal PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecdsatest.c
; Line 182
	mov	eax, 72					; 00000048H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+72], eax
	mov	eax, DWORD PTR _r_in$[esp+68]
	push	ebx
	push	ebp
	mov	DWORD PTR _r_in$GSCopy$1$[esp+80], eax
; Line 189
	xor	ebx, ebx
	mov	eax, DWORD PTR _s_in$[esp+76]
	xor	ebp, ebp
	push	esi
	mov	esi, DWORD PTR _nid$[esp+80]
	mov	DWORD PTR _s_in$GSCopy$1$[esp+84], eax
; Line 192
	lea	eax, DWORD PTR _md_ctx$[esp+84]
	push	edi
	mov	edi, DWORD PTR _out$[esp+84]
	push	eax
	mov	DWORD PTR _message$[esp+92], 6513249	; 00636261H
	mov	DWORD PTR _dgst_len$[esp+92], ebp
	mov	DWORD PTR _r$[esp+92], ebx
	mov	DWORD PTR _s$[esp+92], ebx
	call	_EVP_MD_CTX_init
; Line 194
	call	_EVP_ecdsa
	push	eax
	lea	eax, DWORD PTR _md_ctx$[esp+96]
	push	eax
	call	_EVP_DigestInit
; Line 195
	push	3
	lea	eax, DWORD PTR _message$[esp+104]
	push	eax
	lea	eax, DWORD PTR _md_ctx$[esp+108]
	push	eax
	call	_EVP_DigestUpdate
; Line 196
	lea	eax, DWORD PTR _dgst_len$[esp+112]
	push	eax
	lea	eax, DWORD PTR _digest$[esp+116]
	push	eax
	lea	eax, DWORD PTR _md_ctx$[esp+120]
	push	eax
	call	_EVP_DigestFinal
; Line 198
	push	esi
	call	_OBJ_nid2sn
	push	eax
	push	OFFSET ??_C@_0N@BCJKLMKO@testing?5?$CFs?3?5?$AA@
	push	edi
	call	_BIO_printf
; Line 200
	push	esi
	call	_EC_KEY_new_by_curve_name
	mov	esi, eax
	add	esp, 56					; 00000038H
	test	esi, esi
	je	$LN18@x9_62_test
; Line 202
	push	esi
	call	_EC_KEY_generate_key
	add	esp, 4
	test	eax, eax
	je	$LN18@x9_62_test
; Line 204
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	edi
	call	_BIO_printf
; Line 205
	push	ebx
	push	ebx
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
; Line 207
	push	esi
	lea	eax, DWORD PTR _digest$[esp+116]
	push	20					; 00000014H
	push	eax
	call	_ECDSA_do_sign
	mov	ebx, eax
	add	esp, 36					; 00000024H
; Line 208
	test	ebx, ebx
	je	$LN18@x9_62_test
; Line 210
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	edi
	call	_BIO_printf
; Line 211
	push	ebp
	push	ebp
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
	add	esp, 24					; 00000018H
; Line 213
	call	_BN_new
	mov	DWORD PTR _r$[esp+88], eax
	test	eax, eax
	je	$LN18@x9_62_test
	call	_BN_new
	mov	DWORD PTR _s$[esp+88], eax
	test	eax, eax
	je	$LN18@x9_62_test
; Line 215
	push	DWORD PTR _r_in$GSCopy$1$[esp+88]
	lea	eax, DWORD PTR _r$[esp+92]
	push	eax
	call	_BN_dec2bn
	add	esp, 8
	test	eax, eax
	je	$LN18@x9_62_test
	push	DWORD PTR _s_in$GSCopy$1$[esp+88]
	lea	eax, DWORD PTR _s$[esp+92]
	push	eax
	call	_BN_dec2bn
	add	esp, 8
	test	eax, eax
	je	SHORT $LN18@x9_62_test
; Line 217
	push	DWORD PTR _r$[esp+88]
	push	DWORD PTR [ebx]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN18@x9_62_test
	push	DWORD PTR _s$[esp+88]
	push	DWORD PTR [ebx+4]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN18@x9_62_test
; Line 219
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	edi
	call	_BIO_printf
; Line 220
	push	ebp
	push	ebp
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
; Line 222
	push	esi
	push	ebx
	lea	eax, DWORD PTR _digest$[esp+120]
	push	20					; 00000014H
	push	eax
	call	_ECDSA_do_verify
	add	esp, 40					; 00000028H
	cmp	eax, 1
	jne	SHORT $LN18@x9_62_test
; Line 224
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	edi
	call	_BIO_printf
; Line 225
	push	ebp
	push	ebp
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
; Line 227
	push	OFFSET ??_C@_04CFDEAMPI@?5ok?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 32					; 00000020H
; Line 228
	mov	ebp, 1
; Line 230
	jmp	SHORT $LN12@x9_62_test
$LN18@x9_62_test:
; Line 231
	push	OFFSET ??_C@_08GKLCMPAG@?5failed?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
$LN12@x9_62_test:
; Line 232
	test	esi, esi
	je	SHORT $LN13@x9_62_test
; Line 233
	push	esi
	call	_EC_KEY_free
	add	esp, 4
$LN13@x9_62_test:
; Line 234
	test	ebx, ebx
	je	SHORT $LN14@x9_62_test
; Line 235
	push	ebx
	call	_ECDSA_SIG_free
	add	esp, 4
$LN14@x9_62_test:
; Line 236
	mov	eax, DWORD PTR _r$[esp+88]
	test	eax, eax
	je	SHORT $LN15@x9_62_test
; Line 237
	push	eax
	call	_BN_free
	add	esp, 4
$LN15@x9_62_test:
; Line 238
	mov	ecx, DWORD PTR _s$[esp+88]
	test	ecx, ecx
	je	SHORT $LN16@x9_62_test
; Line 239
	push	ecx
	call	_BN_free
	add	esp, 4
$LN16@x9_62_test:
; Line 240
	lea	eax, DWORD PTR _md_ctx$[esp+88]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 242
	mov	ecx, DWORD PTR __$ArrayPad$[esp+92]
	add	esp, 4
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
_x9_62_test_internal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x9_62_tests
_TEXT	SEGMENT
_out$ = 8						; size = 4
_x9_62_tests PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecdsatest.c
; Line 245
	push	esi
; Line 248
	mov	esi, DWORD PTR _out$[esp]
	push	edi
	push	OFFSET ??_C@_0BI@MAEFLNOA@some?5tests?5from?5X9?462?3?6?$AA@
	push	esi
	xor	edi, edi
	call	_BIO_printf
	add	esp, 8
; Line 251
	call	_change_rand
	test	eax, eax
	je	SHORT $x962_err$15
; Line 254
	push	OFFSET ??_C@_0DL@JGMMGIGG@57358223288881552546838949978975@
	push	OFFSET ??_C@_0DL@ILBLGFFJ@33424035364059817293934883346946@
	push	409					; 00000199H
	push	esi
	call	_x9_62_test_internal
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $x962_err$15
; Line 258
	push	OFFSET ??_C@_0EJ@ODAOKGCF@32381355320979735770807877683125@
	push	OFFSET ??_C@_0EJ@MIKECHMA@30863614317516781149262254730066@
	push	412					; 0000019cH
	push	esi
	call	_x9_62_test_internal
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $x962_err$15
; Line 265
	push	OFFSET ??_C@_0DK@CCMCLDGF@30899269196580494736154166454908@
	push	OFFSET ??_C@_0DJ@HCOMLKJC@87194383164871543355722284926904@
	push	688					; 000002b0H
	push	esi
	call	_x9_62_test_internal
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $x962_err$15
; Line 269
	push	OFFSET ??_C@_0EJ@BIIJJDKI@19703037400073168673833499765499@
	push	OFFSET ??_C@_0EI@GJAGKOOP@21596333210419611985018340039034@
	push	694					; 000002b6H
	push	esi
	call	_x9_62_test_internal
	add	esp, 16					; 00000010H
	mov	ecx, 1
	test	eax, eax
	cmovne	edi, ecx
$x962_err$15:
; Line 134
	push	DWORD PTR _old_rand
	call	_RAND_set_rand_method
	add	esp, 4
	neg	eax
	sbb	eax, eax
	and	eax, edi
	pop	edi
	pop	esi
; Line 281
	ret	0
_x9_62_tests ENDP
_TEXT	ENDS
END

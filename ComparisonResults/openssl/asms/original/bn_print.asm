; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_print.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
?init@?1??BN_options@@9@9 DD 01H DUP (?)		; `BN_options'::`2'::init
_BSS	ENDS
CONST	SEGMENT
_Hex	DB	'0123456789ABCDEF', 00H
CONST	ENDS
PUBLIC	_BN_options
PUBLIC	_BN_print_fp
PUBLIC	_BN_print
PUBLIC	_BN_bn2hex
PUBLIC	_BN_bn2dec
PUBLIC	_BN_hex2bn
PUBLIC	_BN_dec2bn
PUBLIC	_BN_asc2bn
PUBLIC	??_C@_0BH@HBJNKHOA@?4?2crypto?2bn?2bn_print?4c?$AA@ ; `string'
PUBLIC	??_C@_02GMHACPFF@?$CFu?$AA@			; `string'
PUBLIC	??_C@_04LJCFADJL@?$CF09u?$AA@			; `string'
PUBLIC	??_C@_01JOAMLHOP@?9?$AA@			; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_09OBPAFKHI@bn?$CI?$CFd?0?$CFd?$CJ?$AA@	; `string'
EXTRN	__imp__isdigit:PROC
EXTRN	__imp__isxdigit:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_div_word:PROC
EXTRN	_BN_mul_word:PROC
EXTRN	_BN_add_word:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_dup:PROC
EXTRN	_bn_expand2:PROC
EXTRN	__chkstk:PROC
_BSS	SEGMENT
?data@?1??BN_options@@9@9 DB 010H DUP (?)		; `BN_options'::`2'::data
_BSS	ENDS
;	COMDAT ??_C@_09OBPAFKHI@bn?$CI?$CFd?0?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_09OBPAFKHI@bn?$CI?$CFd?0?$CFd?$CJ?$AA@ DB 'bn(%d,%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9?$AA@ DB '-', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LJCFADJL@?$CF09u?$AA@
CONST	SEGMENT
??_C@_04LJCFADJL@?$CF09u?$AA@ DB '%09u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMHACPFF@?$CFu?$AA@
CONST	SEGMENT
??_C@_02GMHACPFF@?$CFu?$AA@ DB '%u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HBJNKHOA@?4?2crypto?2bn?2bn_print?4c?$AA@
CONST	SEGMENT
??_C@_0BH@HBJNKHOA@?4?2crypto?2bn?2bn_print?4c?$AA@ DB '.\crypto\bn\bn_pr'
	DB	'int.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_asc2bn
_TEXT	SEGMENT
_bn$ = 8						; size = 4
_a$ = 12						; size = 4
_BN_asc2bn PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_print.c
; Line 322
	push	esi
; Line 323
	mov	esi, DWORD PTR _a$[esp]
	mov	eax, esi
	push	edi
; Line 324
	cmp	BYTE PTR [esi], 45			; 0000002dH
	jne	SHORT $LN2@BN_asc2bn
; Line 325
	lea	eax, DWORD PTR [esi+1]
$LN2@BN_asc2bn:
; Line 327
	cmp	BYTE PTR [eax], 48			; 00000030H
	jne	SHORT $LN3@BN_asc2bn
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, 88					; 00000058H
	je	SHORT $LN5@BN_asc2bn
	cmp	cl, 120					; 00000078H
	jne	SHORT $LN3@BN_asc2bn
$LN5@BN_asc2bn:
; Line 328
	mov	edi, DWORD PTR _bn$[esp+4]
	add	eax, 2
	push	eax
	push	edi
	call	_BN_hex2bn
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@BN_asc2bn
	pop	edi
	pop	esi
; Line 337
	ret	0
$LN3@BN_asc2bn:
; Line 331
	mov	edi, DWORD PTR _bn$[esp+4]
	push	eax
	push	edi
	call	_BN_dec2bn
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@BN_asc2bn
	pop	edi
	pop	esi
; Line 337
	ret	0
$LN7@BN_asc2bn:
; Line 334
	cmp	BYTE PTR [esi], 45			; 0000002dH
	jne	SHORT $LN8@BN_asc2bn
; Line 335
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax+12], 1
$LN8@BN_asc2bn:
; Line 336
	pop	edi
	mov	eax, 1
	pop	esi
; Line 337
	ret	0
_BN_asc2bn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_dec2bn
_TEXT	SEGMENT
_neg$1$ = -4						; size = 4
_bn$ = 8						; size = 4
_num$1$ = 12						; size = 4
_a$ = 12						; size = 4
_BN_dec2bn PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_print.c
; Line 255
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 261
	mov	ebx, DWORD PTR _a$[esp+4]
	push	esi
	xor	esi, esi
	mov	DWORD PTR _neg$1$[esp+12], esi
	test	ebx, ebx
	je	$LN11@BN_dec2bn
	mov	al, BYTE PTR [ebx]
	test	al, al
	je	$LN11@BN_dec2bn
; Line 263
	cmp	al, 45					; 0000002dH
	jne	SHORT $LN12@BN_dec2bn
; Line 264
	mov	DWORD PTR _neg$1$[esp+12], 1
; Line 265
	inc	ebx
$LN12@BN_dec2bn:
; Line 268
	push	edi
	xor	edi, edi
	push	ebp
	npad	7
$LL4@BN_dec2bn:
	movzx	eax, BYTE PTR [edi+ebx]
	push	eax
	call	DWORD PTR __imp__isdigit
	mov	ebp, DWORD PTR _bn$[esp+20]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@BN_dec2bn
	inc	edi
	cmp	edi, 536870911				; 1fffffffH
	jle	SHORT $LL4@BN_dec2bn
$err$44:
; Line 316
	cmp	DWORD PTR [ebp], 0
	jne	SHORT $LN23@BN_dec2bn
; Line 317
	push	esi
	call	_BN_free
	add	esp, 4
$LN23@BN_dec2bn:
; Line 284
	xor	eax, eax
$LN42@BN_dec2bn:
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 319
	pop	ecx
	ret	0
$LN3@BN_dec2bn:
; Line 271
	cmp	edi, 536870911				; 1fffffffH
	jg	SHORT $err$44
; Line 274
	mov	eax, DWORD PTR _neg$1$[esp+20]
	add	eax, edi
	mov	DWORD PTR _num$1$[esp+16], eax
; Line 275
	test	ebp, ebp
	je	SHORT $LN42@BN_dec2bn
; Line 282
	mov	esi, DWORD PTR [ebp]
	test	esi, esi
	jne	SHORT $LN15@BN_dec2bn
; Line 283
	call	_BN_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN16@BN_dec2bn
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 319
	pop	ecx
	ret	0
$LN15@BN_dec2bn:
; Line 287
	push	0
	push	esi
	call	_BN_set_word
	add	esp, 8
$LN16@BN_dec2bn:
; Line 291
	lea	eax, DWORD PTR [edi*4]
	cmp	eax, 2147483616				; 7fffffe0H
	jg	SHORT $err$44
	add	eax, 31					; 0000001fH
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	cmp	eax, DWORD PTR [esi+8]
	jg	SHORT $LN25@BN_dec2bn
	mov	eax, esi
	jmp	SHORT $LN26@BN_dec2bn
$LN25@BN_dec2bn:
	push	eax
	push	esi
	call	_bn_expand2
	add	esp, 8
$LN26@BN_dec2bn:
	test	eax, eax
	je	$err$44
; Line 294
	mov	eax, 954437177				; 38e38e39H
	imul	edi
	sar	edx, 1
	mov	eax, edx
	inc	edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	edx, DWORD PTR [eax+eax*8]
; Line 295
	xor	eax, eax
	sub	edx, edi
	cmp	edx, 9
	cmove	edx, eax
; Line 298
	mov	al, BYTE PTR [ebx]
	xor	edi, edi
	test	al, al
	je	SHORT $LN6@BN_dec2bn
	npad	6
$LL5@BN_dec2bn:
; Line 299
	lea	edi, DWORD PTR [edi+edi*4]
; Line 300
	movsx	eax, al
; Line 302
	inc	edx
	lea	edi, DWORD PTR [edi-24]
	lea	ebx, DWORD PTR [ebx+1]
	lea	edi, DWORD PTR [eax+edi*2]
	cmp	edx, 9
	jne	SHORT $LN20@BN_dec2bn
; Line 303
	push	1000000000				; 3b9aca00H
	push	esi
	call	_BN_mul_word
; Line 304
	push	edi
	push	esi
	call	_BN_add_word
	add	esp, 16					; 00000010H
; Line 305
	xor	edi, edi
; Line 306
	xor	edx, edx
$LN20@BN_dec2bn:
; Line 298
	mov	al, BYTE PTR [ebx]
	test	al, al
	jne	SHORT $LL5@BN_dec2bn
$LN6@BN_dec2bn:
; Line 311
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR _neg$1$[esp+20]
	mov	DWORD PTR [esi+12], eax
	test	ecx, ecx
	jle	SHORT $LN21@BN_dec2bn
	mov	eax, DWORD PTR [esi]
	lea	edx, DWORD PTR [ecx-1]
	lea	edx, DWORD PTR [eax+edx*4]
	npad	6
$LL9@BN_dec2bn:
	mov	eax, DWORD PTR [edx]
	lea	edx, DWORD PTR [edx-4]
	test	eax, eax
	jne	SHORT $LN32@BN_dec2bn
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LL9@BN_dec2bn
$LN32@BN_dec2bn:
	mov	DWORD PTR [esi+4], ecx
$LN21@BN_dec2bn:
; Line 314
	mov	eax, DWORD PTR _num$1$[esp+16]
	mov	DWORD PTR [ebp], esi
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 319
	pop	ecx
	ret	0
$LN11@BN_dec2bn:
	pop	esi
; Line 262
	xor	eax, eax
	pop	ebx
; Line 319
	pop	ecx
	ret	0
_BN_dec2bn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_hex2bn
_TEXT	SEGMENT
_ret$1$ = -12						; size = 4
_neg$1$ = -8						; size = 4
_num$1$ = -4						; size = 4
_bn$ = 8						; size = 4
_a$ = 12						; size = 4
_BN_hex2bn PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_print.c
; Line 179
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 185
	mov	ecx, DWORD PTR _a$[esp+8]
	push	ebx
	push	ebp
	xor	ebp, ebp
	xor	ebx, ebx
	mov	DWORD PTR _neg$1$[esp+20], ebp
	test	ecx, ecx
	je	$LN14@BN_hex2bn
	mov	al, BYTE PTR [ecx]
	test	al, al
	je	$LN14@BN_hex2bn
; Line 188
	cmp	al, 45					; 0000002dH
	jne	SHORT $LN15@BN_hex2bn
; Line 189
	mov	ebp, 1
; Line 190
	inc	ecx
	mov	DWORD PTR _neg$1$[esp+20], ebp
	mov	DWORD PTR _a$[esp+16], ecx
$LN15@BN_hex2bn:
; Line 193
	push	esi
	push	edi
	mov	edi, DWORD PTR __imp__isxdigit
	xor	esi, esi
$LL4@BN_hex2bn:
	movzx	eax, BYTE PTR [esi+ecx]
	push	eax
	call	edi
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@BN_hex2bn
	mov	ecx, DWORD PTR _a$[esp+24]
	inc	esi
	cmp	esi, 536870911				; 1fffffffH
	jle	SHORT $LL4@BN_hex2bn
$err$59:
; Line 249
	mov	eax, DWORD PTR _bn$[esp+24]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN31@BN_hex2bn
; Line 250
	push	ebx
	call	_BN_free
	add	esp, 4
$LN31@BN_hex2bn:
; Line 206
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 252
	add	esp, 12					; 0000000cH
	ret	0
$LN3@BN_hex2bn:
; Line 196
	cmp	esi, 536870911				; 1fffffffH
	jg	SHORT $err$59
; Line 200
	mov	eax, DWORD PTR _bn$[esp+24]
	lea	edi, DWORD PTR [esi+ebp]
	mov	DWORD PTR _num$1$[esp+28], edi
	test	eax, eax
	je	$LN57@BN_hex2bn
; Line 204
	mov	ebx, DWORD PTR [eax]
	mov	DWORD PTR _ret$1$[esp+28], ebx
	test	ebx, ebx
	jne	SHORT $LN18@BN_hex2bn
; Line 205
	call	_BN_new
	mov	ebx, eax
	mov	DWORD PTR _ret$1$[esp+28], eax
	test	ebx, ebx
	jne	SHORT $LN19@BN_hex2bn
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 252
	add	esp, 12					; 0000000cH
	ret	0
$LN18@BN_hex2bn:
; Line 209
	push	0
	push	ebx
	call	_BN_set_word
	add	esp, 8
$LN19@BN_hex2bn:
; Line 213
	lea	eax, DWORD PTR [esi*4]
	cmp	eax, 2147483616				; 7fffffe0H
	jg	SHORT $err$59
	add	eax, 31					; 0000001fH
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	cmp	eax, DWORD PTR [ebx+8]
	jg	SHORT $LN33@BN_hex2bn
	mov	eax, ebx
	jmp	SHORT $LN34@BN_hex2bn
$LN33@BN_hex2bn:
	push	eax
	push	ebx
	call	_bn_expand2
	add	esp, 8
$LN34@BN_hex2bn:
	test	eax, eax
	je	$err$59
; Line 218
	xor	ebp, ebp
; Line 219
	test	esi, esi
	jle	SHORT $LN6@BN_hex2bn
	mov	eax, 8
$LL5@BN_hex2bn:
; Line 220
	cmp	esi, 8
	mov	ebx, esi
	mov	edi, esi
	cmovge	ebx, eax
; Line 221
	xor	edx, edx
	sub	edi, ebx
	add	edi, DWORD PTR _a$[esp+24]
$LL7@BN_hex2bn:
; Line 223
	movsx	ecx, BYTE PTR [edi]
; Line 224
	lea	eax, DWORD PTR [ecx-48]
	cmp	eax, 9
	jbe	SHORT $LN27@BN_hex2bn
; Line 226
	lea	eax, DWORD PTR [ecx-97]
	cmp	eax, 5
	ja	SHORT $LN24@BN_hex2bn
; Line 227
	lea	eax, DWORD PTR [ecx-87]
	jmp	SHORT $LN27@BN_hex2bn
$LN24@BN_hex2bn:
; Line 228
	lea	eax, DWORD PTR [ecx-65]
	cmp	eax, 5
	ja	SHORT $LN26@BN_hex2bn
; Line 229
	lea	eax, DWORD PTR [ecx-55]
	jmp	SHORT $LN27@BN_hex2bn
$LN26@BN_hex2bn:
; Line 231
	xor	eax, eax
$LN27@BN_hex2bn:
; Line 232
	shl	edx, 4
; Line 234
	dec	ebx
	or	edx, eax
	inc	edi
	test	ebx, ebx
	jg	SHORT $LL7@BN_hex2bn
; Line 235
	mov	ebx, DWORD PTR _ret$1$[esp+28]
; Line 239
	sub	esi, 8
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [eax+ebp*4], edx
	inc	ebp
	mov	eax, 8
	test	esi, esi
	jg	SHORT $LL5@BN_hex2bn
	mov	edi, DWORD PTR _num$1$[esp+28]
$LN6@BN_hex2bn:
; Line 241
	mov	DWORD PTR [ebx+4], ebp
; Line 242
	test	ebp, ebp
	jle	SHORT $LN29@BN_hex2bn
	mov	eax, DWORD PTR [ebx]
	lea	ecx, DWORD PTR [ebp-1]
	lea	ecx, DWORD PTR [eax+ecx*4]
$LL12@BN_hex2bn:
	mov	eax, DWORD PTR [ecx]
	lea	ecx, DWORD PTR [ecx-4]
	test	eax, eax
	jne	SHORT $LN43@BN_hex2bn
	dec	ebp
	test	ebp, ebp
	jg	SHORT $LL12@BN_hex2bn
$LN43@BN_hex2bn:
	mov	DWORD PTR [ebx+4], ebp
$LN29@BN_hex2bn:
; Line 243
	mov	eax, DWORD PTR _neg$1$[esp+28]
	mov	DWORD PTR [ebx+12], eax
; Line 245
	mov	eax, DWORD PTR _bn$[esp+24]
	mov	DWORD PTR [eax], ebx
$LN57@BN_hex2bn:
; Line 247
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 252
	add	esp, 12					; 0000000cH
	ret	0
$LN14@BN_hex2bn:
	pop	ebp
; Line 186
	xor	eax, eax
	pop	ebx
; Line 252
	add	esp, 12					; 0000000cH
	ret	0
_BN_hex2bn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_bn2dec
_TEXT	SEGMENT
_bn_data$1$ = -12					; size = 4
_num$1$ = -8						; size = 4
_t$1$ = -4						; size = 4
_a$ = 8							; size = 4
_BN_bn2dec PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_print.c
; Line 108
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 121
	push	DWORD PTR _a$[esp+24]
	xor	ebx, ebx
	call	_BN_num_bits
; Line 123
	push	124					; 0000007cH
	push	OFFSET ??_C@_0BH@HBJNKHOA@?4?2crypto?2bn?2bn_print?4c?$AA@
	lea	esi, DWORD PTR [eax+eax*2]
	mov	eax, 274877907				; 10624dd3H
	imul	esi
	mov	eax, 1717986919				; 66666667H
	sar	edx, 6
	mov	ebp, edx
	shr	ebp, 31					; 0000001fH
	add	ebp, edx
	imul	esi
	sar	edx, 2
	mov	eax, edx
	add	ebp, edx
	shr	eax, 31					; 0000001fH
	add	eax, 2
	add	ebp, eax
	mov	eax, 954437177				; 38e38e39H
	imul	ebp
	mov	DWORD PTR _num$1$[esp+40], ebp
	sar	edx, 1
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	lea	eax, DWORD PTR [eax*4+4]
	push	eax
	call	_CRYPTO_malloc
; Line 125
	push	125					; 0000007dH
	lea	ecx, DWORD PTR [ebp+3]
	mov	edi, eax
	push	OFFSET ??_C@_0BH@HBJNKHOA@?4?2crypto?2bn?2bn_print?4c?$AA@
	push	ecx
	mov	DWORD PTR _bn_data$1$[esp+56], edi
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 28					; 0000001cH
; Line 126
	test	ebp, ebp
	je	$LN11@BN_bn2dec
	test	edi, edi
	je	$LN11@BN_bn2dec
; Line 130
	push	DWORD PTR _a$[esp+24]
	call	_BN_dup
	mov	ebx, eax
	add	esp, 4
	mov	DWORD PTR _t$1$[esp+28], ebx
	test	ebx, ebx
	je	$LN37@BN_bn2dec
; Line 136
	cmp	DWORD PTR [ebx+4], 0
	mov	esi, ebp
	jne	SHORT $LN13@BN_bn2dec
; Line 137
	mov	WORD PTR [ebp], 48			; 00000030H
; Line 164
	mov	esi, 1
	jmp	$err$39
$LN13@BN_bn2dec:
; Line 140
	cmp	DWORD PTR [ebx+12], 0
	je	SHORT $LN15@BN_bn2dec
; Line 141
	mov	BYTE PTR [ebp], 45			; 0000002dH
	lea	esi, DWORD PTR [ebp+1]
$LN15@BN_bn2dec:
; Line 144
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN3@BN_bn2dec
	npad	5
$LL2@BN_bn2dec:
; Line 145
	push	1000000000				; 3b9aca00H
	push	ebx
	call	_BN_div_word
	mov	DWORD PTR [edi], eax
	add	esp, 8
; Line 146
	add	edi, 4
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LL2@BN_bn2dec
$LN3@BN_bn2dec:
; Line 154
	push	DWORD PTR [edi-4]
	mov	eax, DWORD PTR _num$1$[esp+32]
	sub	edi, 4
	sub	eax, esi
	add	eax, 3
	push	OFFSET ??_C@_02GMHACPFF@?$CFu?$AA@
	add	eax, ebp
	push	eax
	push	esi
	call	_BIO_snprintf
	add	esp, 16					; 00000010H
; Line 155
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN22@BN_bn2dec
	npad	2
$LL4@BN_bn2dec:
; Line 156
	inc	esi
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LL4@BN_bn2dec
$LN22@BN_bn2dec:
; Line 157
	cmp	edi, DWORD PTR _bn_data$1$[esp+28]
	je	SHORT $LN7@BN_bn2dec
	mov	ebx, DWORD PTR _bn_data$1$[esp+28]
$LL6@BN_bn2dec:
; Line 159
	push	DWORD PTR [edi-4]
	mov	eax, DWORD PTR _num$1$[esp+32]
	sub	edi, 4
	sub	eax, esi
	add	eax, 3
	push	OFFSET ??_C@_04LJCFADJL@?$CF09u?$AA@
	add	eax, ebp
	push	eax
	push	esi
	call	_BIO_snprintf
	add	esp, 16					; 00000010H
; Line 160
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN9@BN_bn2dec
$LL8@BN_bn2dec:
; Line 161
	inc	esi
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LL8@BN_bn2dec
$LN9@BN_bn2dec:
; Line 157
	cmp	edi, ebx
	jne	SHORT $LL6@BN_bn2dec
	mov	ebx, DWORD PTR _t$1$[esp+28]
$LN7@BN_bn2dec:
; Line 164
	mov	edi, DWORD PTR _bn_data$1$[esp+28]
	mov	esi, 1
	jmp	SHORT $err$39
$LN11@BN_bn2dec:
; Line 127
	push	127					; 0000007fH
	push	OFFSET ??_C@_0BH@HBJNKHOA@?4?2crypto?2bn?2bn_print?4c?$AA@
	push	65					; 00000041H
	push	104					; 00000068H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN37@BN_bn2dec:
	xor	esi, esi
$err$39:
; Line 166
	test	edi, edi
	je	SHORT $LN16@BN_bn2dec
; Line 167
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN16@BN_bn2dec:
; Line 168
	test	ebx, ebx
	je	SHORT $LN17@BN_bn2dec
; Line 169
	push	ebx
	call	_BN_free
	add	esp, 4
$LN17@BN_bn2dec:
; Line 170
	test	esi, esi
	jne	SHORT $LN35@BN_bn2dec
	test	ebp, ebp
	je	SHORT $LN35@BN_bn2dec
; Line 171
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
; Line 175
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 176
	add	esp, 12					; 0000000cH
	ret	0
$LN35@BN_bn2dec:
	pop	edi
	pop	esi
; Line 175
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 176
	add	esp, 12					; 0000000cH
	ret	0
_BN_bn2dec ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_bn2hex
_TEXT	SEGMENT
_buf$1$ = 8						; size = 4
_a$ = 8							; size = 4
_BN_bn2hex PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_print.c
; Line 70
	push	ebx
	push	ebp
; Line 75
	mov	ebp, DWORD PTR _a$[esp+4]
	xor	ebx, ebx
	push	esi
	cmp	DWORD PTR [ebp+12], ebx
	je	SHORT $LN8@BN_bn2hex
	cmp	DWORD PTR [ebp+4], ebx
	jne	SHORT $LN8@BN_bn2hex
; Line 77
	push	77					; 0000004dH
	push	OFFSET ??_C@_0BH@HBJNKHOA@?4?2crypto?2bn?2bn_print?4c?$AA@
	push	3
	call	_CRYPTO_malloc
	mov	esi, eax
	mov	DWORD PTR _buf$1$[esp+20], esi
; Line 78
	jmp	SHORT $LN24@BN_bn2hex
$LN8@BN_bn2hex:
; Line 79
	mov	eax, DWORD PTR [ebp+4]
	push	79					; 0000004fH
	push	OFFSET ??_C@_0BH@HBJNKHOA@?4?2crypto?2bn?2bn_print?4c?$AA@
	lea	eax, DWORD PTR [eax*8+2]
	push	eax
	call	_CRYPTO_malloc
	mov	esi, eax
	mov	DWORD PTR _buf$1$[esp+20], eax
$LN24@BN_bn2hex:
	add	esp, 12					; 0000000cH
; Line 81
	test	esi, esi
	jne	SHORT $LN10@BN_bn2hex
; Line 82
	push	82					; 00000052H
	push	OFFSET ??_C@_0BH@HBJNKHOA@?4?2crypto?2bn?2bn_print?4c?$AA@
	push	65					; 00000041H
	push	105					; 00000069H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 103
	mov	eax, esi
$err$27:
	pop	esi
	pop	ebp
	pop	ebx
; Line 104
	ret	0
$LN10@BN_bn2hex:
; Line 85
	mov	edx, esi
; Line 86
	cmp	DWORD PTR [ebp+12], ebx
	je	SHORT $LN11@BN_bn2hex
; Line 87
	mov	BYTE PTR [esi], 45			; 0000002dH
	lea	edx, DWORD PTR [esi+1]
$LN11@BN_bn2hex:
; Line 88
	cmp	DWORD PTR [ebp+4], ebx
	jne	SHORT $LN12@BN_bn2hex
; Line 89
	mov	BYTE PTR [edx], 48			; 00000030H
	inc	edx
$LN12@BN_bn2hex:
; Line 90
	push	edi
	mov	edi, DWORD PTR [ebp+4]
	sub	edi, 1
	js	SHORT $LN3@BN_bn2hex
	npad	9
$LL4@BN_bn2hex:
; Line 91
	mov	esi, 24					; 00000018H
$LL7@BN_bn2hex:
; Line 93
	mov	eax, DWORD PTR [ebp]
	mov	ecx, esi
	mov	eax, DWORD PTR [eax+edi*4]
	shr	eax, cl
	movzx	eax, al
; Line 94
	test	ebx, ebx
	jne	SHORT $LN14@BN_bn2hex
	test	eax, eax
	je	SHORT $LN5@BN_bn2hex
$LN14@BN_bn2hex:
; Line 95
	mov	ecx, eax
; Line 97
	mov	ebx, 1
	sar	ecx, 4
	and	eax, 15					; 0000000fH
	mov	cl, BYTE PTR _Hex[ecx]
	mov	BYTE PTR [edx], cl
	mov	al, BYTE PTR _Hex[eax]
	mov	BYTE PTR [edx+1], al
	add	edx, 2
$LN5@BN_bn2hex:
; Line 91
	sub	esi, 8
	jns	SHORT $LL7@BN_bn2hex
; Line 90
	sub	edi, 1
	jns	SHORT $LL4@BN_bn2hex
	mov	esi, DWORD PTR _buf$1$[esp+12]
$LN3@BN_bn2hex:
; Line 101
	mov	BYTE PTR [edx], 0
; Line 103
	mov	eax, esi
	pop	edi
$err_1$28:
; Line 104
	pop	esi
	pop	ebp
	pop	ebx
	ret	0
_BN_bn2hex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_a$ = 12						; size = 4
_BN_print PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_print.c
; Line 360
	mov	eax, DWORD PTR _a$[esp-4]
	push	ebp
	mov	ebp, DWORD PTR _bp$[esp]
	push	edi
	xor	edi, edi
	cmp	DWORD PTR [eax+12], edi
	je	SHORT $LN8@BN_print
	push	1
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	je	SHORT $LN27@BN_print
$LN30@BN_print:
	pop	edi
; Line 377
	xor	eax, eax
	pop	ebp
; Line 378
	ret	0
$LN27@BN_print:
	mov	eax, DWORD PTR _a$[esp+4]
$LN8@BN_print:
; Line 362
	cmp	DWORD PTR [eax+4], edi
	jne	SHORT $LN9@BN_print
	push	1
	push	OFFSET ??_C@_01GBGANLPD@0?$AA@
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN30@BN_print
	mov	eax, DWORD PTR _a$[esp+4]
$LN9@BN_print:
	push	ebx
; Line 364
	mov	ebx, DWORD PTR [eax+4]
	sub	ebx, 1
	push	esi
	js	SHORT $LN3@BN_print
$LL4@BN_print:
; Line 365
	mov	esi, 28					; 0000001cH
	npad	4
$LL7@BN_print:
; Line 367
	mov	eax, DWORD PTR [eax]
	mov	ecx, esi
	mov	eax, DWORD PTR [eax+ebx*4]
	shr	eax, cl
	and	eax, 15					; 0000000fH
; Line 368
	test	edi, edi
	jne	SHORT $LN11@BN_print
	test	eax, eax
	je	SHORT $LN5@BN_print
$LN11@BN_print:
; Line 369
	push	1
	lea	eax, DWORD PTR _Hex[eax]
	push	eax
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN25@BN_print
; Line 371
	mov	edi, eax
$LN5@BN_print:
; Line 365
	sub	esi, 4
	mov	eax, DWORD PTR _a$[esp+12]
	jns	SHORT $LL7@BN_print
; Line 364
	sub	ebx, 1
	jns	SHORT $LL4@BN_print
$LN3@BN_print:
	pop	esi
; Line 377
	mov	eax, 1
	pop	ebx
$end$32:
	pop	edi
	pop	ebp
; Line 378
	ret	0
$LN25@BN_print:
	pop	esi
	pop	ebx
	pop	edi
; Line 377
	xor	eax, eax
	pop	ebp
; Line 378
	ret	0
_BN_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_print_fp
_TEXT	SEGMENT
_fp$ = 8						; size = 4
_a$ = 12						; size = 4
_BN_print_fp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_print.c
; Line 342
	push	edi
; Line 346
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN2@BN_print_f
	pop	edi
; Line 352
	ret	0
$LN2@BN_print_f:
	push	esi
; Line 348
	push	DWORD PTR _fp$[esp+4]
	push	0
	push	106					; 0000006aH
	push	edi
	call	_BIO_ctrl
; Line 349
	push	DWORD PTR _a$[esp+20]
	push	edi
	call	_BN_print
; Line 350
	push	edi
	mov	esi, eax
	call	_BIO_free
	add	esp, 28					; 0000001cH
; Line 351
	mov	eax, esi
	pop	esi
	pop	edi
; Line 352
	ret	0
_BN_print_fp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_options
_TEXT	SEGMENT
_BN_options PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_print.c
; Line 386
	cmp	DWORD PTR ?init@?1??BN_options@@9@9, 0
	jne	SHORT $LN4@BN_options
; Line 389
	push	32					; 00000020H
	push	64					; 00000040H
	push	OFFSET ??_C@_09OBPAFKHI@bn?$CI?$CFd?0?$CFd?$CJ?$AA@
	push	16					; 00000010H
	push	OFFSET ?data@?1??BN_options@@9@9
	mov	DWORD PTR ?init@?1??BN_options@@9@9, 1
	call	_BIO_snprintf
	add	esp, 20					; 00000014H
$LN4@BN_options:
; Line 396
	mov	eax, OFFSET ?data@?1??BN_options@@9@9
; Line 397
	ret	0
_BN_options ENDP
_TEXT	ENDS
END

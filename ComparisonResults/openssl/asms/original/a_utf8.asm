; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_utf8.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_UTF8_getc
PUBLIC	_UTF8_putc
; Function compile flags: /Ogtpy
;	COMDAT _UTF8_putc
_TEXT	SEGMENT
_str$ = 8						; size = 4
_len$ = 12						; size = 4
_value$ = 16						; size = 4
_UTF8_putc PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_utf8.c
; Line 175
	mov	ecx, DWORD PTR _str$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN2@UTF8_putc
; Line 176
	lea	eax, DWORD PTR [ecx+6]
$LN4@UTF8_putc:
; Line 179
	mov	edx, DWORD PTR _value$[esp-4]
	cmp	edx, 128				; 00000080H
	jae	SHORT $LN5@UTF8_putc
; Line 180
	test	ecx, ecx
	je	SHORT $LN6@UTF8_putc
; Line 181
	mov	BYTE PTR [ecx], dl
$LN6@UTF8_putc:
; Line 182
	mov	eax, 1
; Line 237
	ret	0
$LN2@UTF8_putc:
; Line 177
	mov	eax, DWORD PTR _len$[esp-4]
	test	eax, eax
	jg	SHORT $LN4@UTF8_putc
$LN22@UTF8_putc:
; Line 178
	or	eax, -1
; Line 237
	ret	0
$LN5@UTF8_putc:
; Line 184
	cmp	edx, 2048				; 00000800H
	jae	SHORT $LN7@UTF8_putc
; Line 185
	cmp	eax, 2
	jl	SHORT $LN22@UTF8_putc
; Line 187
	test	ecx, ecx
	je	SHORT $LN9@UTF8_putc
; Line 188
	mov	eax, edx
; Line 189
	and	dl, 63					; 0000003fH
	shr	eax, 6
	and	al, 31					; 0000001fH
	or	al, 192					; 000000c0H
	or	dl, 128					; 00000080H
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], dl
$LN9@UTF8_putc:
; Line 191
	mov	eax, 2
; Line 237
	ret	0
$LN7@UTF8_putc:
; Line 193
	cmp	edx, 65536				; 00010000H
	jae	SHORT $LN10@UTF8_putc
; Line 194
	cmp	eax, 3
	jl	SHORT $LN22@UTF8_putc
; Line 196
	test	ecx, ecx
	je	SHORT $LN12@UTF8_putc
; Line 197
	mov	eax, edx
	shr	eax, 12					; 0000000cH
	and	al, 15					; 0000000fH
	or	al, 224					; 000000e0H
	mov	BYTE PTR [ecx], al
; Line 198
	mov	eax, edx
	shr	eax, 6
; Line 199
	and	dl, 63					; 0000003fH
	and	al, 63					; 0000003fH
	or	al, 128					; 00000080H
	or	dl, 128					; 00000080H
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], dl
$LN12@UTF8_putc:
; Line 201
	mov	eax, 3
; Line 237
	ret	0
$LN10@UTF8_putc:
; Line 203
	cmp	edx, 2097152				; 00200000H
	jae	SHORT $LN13@UTF8_putc
; Line 204
	cmp	eax, 4
	jl	SHORT $LN22@UTF8_putc
; Line 206
	test	ecx, ecx
	je	SHORT $LN15@UTF8_putc
; Line 207
	mov	eax, edx
	shr	eax, 18					; 00000012H
	and	al, 7
	or	al, 240					; 000000f0H
	mov	BYTE PTR [ecx], al
; Line 208
	mov	eax, edx
	shr	eax, 12					; 0000000cH
	and	al, 63					; 0000003fH
	or	al, 128					; 00000080H
	mov	BYTE PTR [ecx+1], al
; Line 209
	mov	eax, edx
	shr	eax, 6
; Line 210
	and	dl, 63					; 0000003fH
	and	al, 63					; 0000003fH
	or	al, 128					; 00000080H
	or	dl, 128					; 00000080H
	mov	BYTE PTR [ecx+2], al
	mov	BYTE PTR [ecx+3], dl
$LN15@UTF8_putc:
; Line 212
	mov	eax, 4
; Line 237
	ret	0
$LN13@UTF8_putc:
; Line 214
	cmp	edx, 67108864				; 04000000H
	jae	SHORT $LN16@UTF8_putc
; Line 215
	cmp	eax, 5
	jl	$LN22@UTF8_putc
; Line 217
	test	ecx, ecx
	je	SHORT $LN18@UTF8_putc
; Line 218
	mov	eax, edx
	shr	eax, 24					; 00000018H
	and	al, 3
	or	al, 248					; 000000f8H
	mov	BYTE PTR [ecx], al
; Line 219
	mov	eax, edx
	shr	eax, 18					; 00000012H
	and	al, 63					; 0000003fH
	or	al, 128					; 00000080H
	mov	BYTE PTR [ecx+1], al
; Line 220
	mov	eax, edx
	shr	eax, 12					; 0000000cH
	and	al, 63					; 0000003fH
	or	al, 128					; 00000080H
	mov	BYTE PTR [ecx+2], al
; Line 221
	mov	eax, edx
	shr	eax, 6
; Line 222
	and	dl, 63					; 0000003fH
	and	al, 63					; 0000003fH
	or	al, 128					; 00000080H
	or	dl, 128					; 00000080H
	mov	BYTE PTR [ecx+3], al
	mov	BYTE PTR [ecx+4], dl
$LN18@UTF8_putc:
; Line 224
	mov	eax, 5
; Line 237
	ret	0
$LN16@UTF8_putc:
; Line 226
	cmp	eax, 6
	jl	$LN22@UTF8_putc
; Line 228
	test	ecx, ecx
	je	SHORT $LN20@UTF8_putc
; Line 229
	mov	eax, edx
	shr	eax, 30					; 0000001eH
	and	al, 1
	or	al, 252					; 000000fcH
	mov	BYTE PTR [ecx], al
; Line 230
	mov	eax, edx
	shr	eax, 24					; 00000018H
	and	al, 63					; 0000003fH
	or	al, 128					; 00000080H
	mov	BYTE PTR [ecx+1], al
; Line 231
	mov	eax, edx
	shr	eax, 18					; 00000012H
	and	al, 63					; 0000003fH
	or	al, 128					; 00000080H
	mov	BYTE PTR [ecx+2], al
; Line 232
	mov	eax, edx
	shr	eax, 12					; 0000000cH
	and	al, 63					; 0000003fH
	or	al, 128					; 00000080H
	mov	BYTE PTR [ecx+3], al
; Line 233
	mov	eax, edx
	shr	eax, 6
; Line 234
	and	dl, 63					; 0000003fH
	and	al, 63					; 0000003fH
	or	al, 128					; 00000080H
	or	dl, 128					; 00000080H
	mov	BYTE PTR [ecx+4], al
	mov	BYTE PTR [ecx+5], dl
$LN20@UTF8_putc:
; Line 236
	mov	eax, 6
; Line 237
	ret	0
_UTF8_putc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _UTF8_getc
_TEXT	SEGMENT
_str$ = 8						; size = 4
_len$ = 12						; size = 4
_val$ = 16						; size = 4
_UTF8_getc PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_utf8.c
; Line 81
	mov	edx, DWORD PTR _len$[esp-4]
	test	edx, edx
	jg	SHORT $LN2@UTF8_getc
; Line 82
	xor	eax, eax
; Line 163
	ret	0
$LN2@UTF8_getc:
	push	ebx
	push	esi
; Line 86
	mov	esi, DWORD PTR _str$[esp+4]
	push	edi
	mov	cl, BYTE PTR [esi]
	test	cl, cl
	js	SHORT $LN3@UTF8_getc
; Line 87
	movzx	edx, cl
; Line 88
	mov	eax, 1
; Line 161
	mov	ecx, DWORD PTR _val$[esp+8]
	and	edx, 127				; 0000007fH
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [ecx], edx
; Line 163
	ret	0
$LN3@UTF8_getc:
; Line 89
	mov	al, cl
	and	al, 224					; 000000e0H
	cmp	al, 192					; 000000c0H
	jne	SHORT $LN5@UTF8_getc
; Line 90
	cmp	edx, 2
	jl	$LN39@UTF8_getc
; Line 92
	mov	bl, BYTE PTR [esi+1]
	mov	al, bl
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
; Line 95
	movzx	edx, cl
	and	edx, 31					; 0000001fH
	movzx	eax, bl
	shl	edx, 6
	and	eax, 63					; 0000003fH
	or	edx, eax
; Line 96
	cmp	edx, 128				; 00000080H
	jb	$LN38@UTF8_getc
; Line 161
	mov	ecx, DWORD PTR _val$[esp+8]
	mov	eax, 2
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [ecx], edx
; Line 163
	ret	0
$LN5@UTF8_getc:
; Line 99
	mov	al, cl
	and	al, 240					; 000000f0H
	cmp	al, 224					; 000000e0H
	jne	SHORT $LN10@UTF8_getc
; Line 100
	cmp	edx, 3
	jl	$LN39@UTF8_getc
; Line 103
	mov	al, BYTE PTR [esi+1]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
	mov	al, BYTE PTR [esi+2]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
; Line 107
	movzx	eax, BYTE PTR [esi+2]
	movzx	edx, cl
	and	eax, 63					; 0000003fH
	movzx	ecx, BYTE PTR [esi+1]
	and	edx, 15					; 0000000fH
	and	ecx, 63					; 0000003fH
	shl	edx, 12					; 0000000cH
	shl	ecx, 6
	or	ecx, eax
	or	edx, ecx
; Line 108
	cmp	edx, 2048				; 00000800H
	jb	$LN38@UTF8_getc
; Line 161
	mov	ecx, DWORD PTR _val$[esp+8]
	mov	eax, 3
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [ecx], edx
; Line 163
	ret	0
$LN10@UTF8_getc:
; Line 111
	mov	al, cl
	and	al, 248					; 000000f8H
	cmp	al, 240					; 000000f0H
	jne	SHORT $LN16@UTF8_getc
; Line 112
	cmp	edx, 4
	jl	$LN39@UTF8_getc
; Line 116
	mov	al, BYTE PTR [esi+1]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
	mov	al, BYTE PTR [esi+2]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
	mov	al, BYTE PTR [esi+3]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
; Line 119
	movzx	eax, BYTE PTR [esi+1]
	movzx	edx, cl
	and	eax, 63					; 0000003fH
; Line 121
	movzx	ecx, BYTE PTR [esi+2]
	and	edx, 7
	shl	eax, 12					; 0000000cH
	and	ecx, 63					; 0000003fH
	shl	edx, 18					; 00000012H
	or	edx, eax
	shl	ecx, 6
	movzx	eax, BYTE PTR [esi+3]
	and	eax, 63					; 0000003fH
	or	ecx, eax
	or	edx, ecx
; Line 122
	cmp	edx, 65536				; 00010000H
	jb	$LN38@UTF8_getc
; Line 161
	mov	ecx, DWORD PTR _val$[esp+8]
	mov	eax, 4
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [ecx], edx
; Line 163
	ret	0
$LN16@UTF8_getc:
; Line 125
	mov	al, cl
	and	al, 252					; 000000fcH
	cmp	al, 248					; 000000f8H
	jne	$LN22@UTF8_getc
; Line 126
	cmp	edx, 5
	jl	$LN39@UTF8_getc
; Line 131
	mov	al, BYTE PTR [esi+1]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
	mov	al, BYTE PTR [esi+2]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
	mov	al, BYTE PTR [esi+3]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
	mov	al, BYTE PTR [esi+4]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
; Line 134
	movzx	eax, BYTE PTR [esi+1]
	movzx	edx, cl
	and	eax, 63					; 0000003fH
; Line 137
	movzx	ecx, BYTE PTR [esi+3]
	and	edx, 3
	shl	eax, 18					; 00000012H
	and	ecx, 63					; 0000003fH
	shl	edx, 24					; 00000018H
	or	edx, eax
	shl	ecx, 6
	movzx	eax, BYTE PTR [esi+2]
	and	eax, 63					; 0000003fH
	shl	eax, 12					; 0000000cH
	or	edx, eax
	movzx	eax, BYTE PTR [esi+4]
	and	eax, 63					; 0000003fH
	or	ecx, eax
	or	edx, ecx
; Line 138
	cmp	edx, 2097152				; 00200000H
	jb	$LN38@UTF8_getc
; Line 161
	mov	ecx, DWORD PTR _val$[esp+8]
	mov	eax, 5
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [ecx], edx
; Line 163
	ret	0
$LN22@UTF8_getc:
; Line 141
	mov	al, cl
	and	al, 254					; 000000feH
	cmp	al, 252					; 000000fcH
	jne	$LN28@UTF8_getc
; Line 142
	cmp	edx, 6
	jge	SHORT $LN30@UTF8_getc
$LN39@UTF8_getc:
	pop	edi
	pop	esi
; Line 143
	or	eax, -1
	pop	ebx
; Line 163
	ret	0
$LN30@UTF8_getc:
; Line 148
	mov	al, BYTE PTR [esi+1]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	$LN32@UTF8_getc
	mov	al, BYTE PTR [esi+2]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	SHORT $LN32@UTF8_getc
	mov	al, BYTE PTR [esi+3]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	SHORT $LN32@UTF8_getc
	mov	al, BYTE PTR [esi+4]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	SHORT $LN32@UTF8_getc
	mov	al, BYTE PTR [esi+5]
	and	al, 192					; 000000c0H
	cmp	al, 128					; 00000080H
	jne	SHORT $LN32@UTF8_getc
; Line 151
	movzx	eax, BYTE PTR [esi+1]
	and	eax, 63					; 0000003fH
	movzx	edx, cl
; Line 155
	movzx	ecx, BYTE PTR [esi+4]
	and	edx, 1
	shl	eax, 24					; 00000018H
	and	ecx, 63					; 0000003fH
	shl	edx, 30					; 0000001eH
	or	edx, eax
	shl	ecx, 6
	movzx	eax, BYTE PTR [esi+2]
	and	eax, 63					; 0000003fH
	shl	eax, 18					; 00000012H
	or	edx, eax
	movzx	eax, BYTE PTR [esi+3]
	and	eax, 63					; 0000003fH
	shl	eax, 12					; 0000000cH
	or	edx, eax
	movzx	eax, BYTE PTR [esi+5]
	and	eax, 63					; 0000003fH
	or	ecx, eax
	or	edx, ecx
; Line 156
	cmp	edx, 67108864				; 04000000H
	jae	SHORT $LN33@UTF8_getc
$LN38@UTF8_getc:
	pop	edi
	pop	esi
; Line 157
	mov	eax, -4					; fffffffcH
	pop	ebx
; Line 163
	ret	0
$LN33@UTF8_getc:
; Line 161
	mov	ecx, DWORD PTR _val$[esp+8]
	mov	eax, 6
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [ecx], edx
; Line 163
	ret	0
$LN32@UTF8_getc:
	pop	edi
	pop	esi
; Line 149
	mov	eax, -3					; fffffffdH
	pop	ebx
; Line 163
	ret	0
$LN28@UTF8_getc:
	pop	edi
	pop	esi
; Line 160
	mov	eax, -2					; fffffffeH
	pop	ebx
; Line 163
	ret	0
_UTF8_getc ENDP
_TEXT	ENDS
END

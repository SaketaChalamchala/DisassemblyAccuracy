; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ecdh\ecdhtest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
_rnd_seed DB	'string to make the random number generator think it has '
	DB	'entropy', 00H
_KDF1_SHA1_len DD 014H
_bp256_da DB	081H
	DB	0dbH
	DB	01eH
	DB	0e1H
	DB	00H
	DB	015H
	DB	0fH
	DB	0f2H
	DB	0eaH
	DB	033H
	DB	08dH
	DB	070H
	DB	082H
	DB	071H
	DB	0beH
	DB	038H
	DB	030H
	DB	0cH
	DB	0b5H
	DB	042H
	DB	041H
	DB	0d7H
	DB	099H
	DB	050H
	DB	0f7H
	DB	07bH
	DB	06H
	DB	030H
	DB	039H
	DB	080H
	DB	04fH
	DB	01dH
_bp256_db DB	055H
	DB	0e4H
	DB	0bH
	DB	0c4H
	DB	01eH
	DB	037H
	DB	0e3H
	DB	0e2H
	DB	0adH
	DB	025H
	DB	0c3H
	DB	0c6H
	DB	065H
	DB	045H
	DB	011H
	DB	0ffH
	DB	0a8H
	DB	047H
	DB	04aH
	DB	091H
	DB	0a0H
	DB	03H
	DB	020H
	DB	087H
	DB	059H
	DB	038H
	DB	052H
	DB	0d3H
	DB	0e7H
	DB	0d7H
	DB	06bH
	DB	0d3H
_bp256_Z DB	089H
	DB	0afH
	DB	0c3H
	DB	09dH
	DB	041H
	DB	0d3H
	DB	0b3H
	DB	027H
	DB	081H
	DB	04bH
	DB	080H
	DB	094H
	DB	0bH
	DB	04H
	DB	025H
	DB	090H
	DB	0f9H
	DB	065H
	DB	056H
	DB	0ecH
	DB	091H
	DB	0e6H
	DB	0aeH
	DB	079H
	DB	039H
	DB	0bcH
	DB	0e3H
	DB	01fH
	DB	03aH
	DB	018H
	DB	0bfH
	DB	02bH
_bp384_da DB	01eH
	DB	020H
	DB	0f5H
	DB	0e0H
	DB	048H
	DB	0a5H
	DB	088H
	DB	06fH
	DB	01fH
	DB	015H
	DB	07cH
	DB	074H
	DB	0e9H
	DB	01bH
	DB	0deH
	DB	02bH
	DB	098H
	DB	0c8H
	DB	0b5H
	DB	02dH
	DB	058H
	DB	0e5H
	DB	00H
	DB	03dH
	DB	057H
	DB	05H
	DB	03fH
	DB	0c4H
	DB	0b0H
	DB	0bdH
	DB	065H
	DB	0d6H
	DB	0f1H
	DB	05eH
	DB	0b5H
	DB	0d1H
	DB	0eeH
	DB	016H
	DB	010H
	DB	0dfH
	DB	087H
	DB	07H
	DB	095H
	DB	014H
	DB	036H
	DB	027H
	DB	0d0H
	DB	042H
_bp384_db DB	03H
	DB	026H
	DB	040H
	DB	0bcH
	DB	060H
	DB	03H
	DB	0c5H
	DB	092H
	DB	060H
	DB	0f7H
	DB	025H
	DB	0cH
	DB	03dH
	DB	0b5H
	DB	08cH
	DB	0e6H
	DB	047H
	DB	0f9H
	DB	08eH
	DB	012H
	DB	060H
	DB	0acH
	DB	0ceH
	DB	04aH
	DB	0cdH
	DB	0a3H
	DB	0ddH
	DB	086H
	DB	09fH
	DB	074H
	DB	0e0H
	DB	01fH
	DB	08bH
	DB	0a5H
	DB	0e0H
	DB	032H
	DB	043H
	DB	09H
	DB	0dbH
	DB	06aH
	DB	098H
	DB	031H
	DB	049H
	DB	07aH
	DB	0baH
	DB	0c9H
	DB	066H
	DB	070H
_bp384_Z DB	0bH
	DB	0d9H
	DB	0d3H
	DB	0a7H
	DB	0eaH
	DB	0bH
	DB	03dH
	DB	051H
	DB	09dH
	DB	09H
	DB	0d8H
	DB	0e4H
	DB	08dH
	DB	07H
	DB	085H
	DB	0fbH
	DB	074H
	DB	04aH
	DB	06bH
	DB	035H
	DB	05eH
	DB	063H
	DB	04H
	DB	0bcH
	DB	051H
	DB	0c2H
	DB	029H
	DB	0fbH
	DB	0bcH
	DB	0e2H
	DB	039H
	DB	0bbH
	DB	0adH
	DB	0f6H
	DB	040H
	DB	037H
	DB	015H
	DB	0c3H
	DB	05dH
	DB	04fH
	DB	0b2H
	DB	0a5H
	DB	044H
	DB	04fH
	DB	057H
	DB	05dH
	DB	04fH
	DB	042H
	ORG $+4
_bp512_da DB	016H
	DB	030H
	DB	02fH
	DB	0f0H
	DB	0dbH
	DB	0bbH
	DB	05aH
	DB	08dH
	DB	073H
	DB	03dH
	DB	0abH
	DB	071H
	DB	041H
	DB	0c1H
	DB	0b4H
	DB	05aH
	DB	0cbH
	DB	0c8H
	DB	071H
	DB	059H
	DB	039H
	DB	067H
	DB	07fH
	DB	06aH
	DB	056H
	DB	085H
	DB	0aH
	DB	038H
	DB	0bdH
	DB	087H
	DB	0bdH
	DB	059H
	DB	0b0H
	DB	09eH
	DB	080H
	DB	027H
	DB	096H
	DB	09H
	DB	0ffH
	DB	033H
	DB	03eH
	DB	0b9H
	DB	0d4H
	DB	0c0H
	DB	061H
	DB	023H
	DB	01fH
	DB	0b2H
	DB	06fH
	DB	092H
	DB	0eeH
	DB	0b0H
	DB	049H
	DB	082H
	DB	0a5H
	DB	0f1H
	DB	0d1H
	DB	076H
	DB	04cH
	DB	0adH
	DB	057H
	DB	066H
	DB	054H
	DB	022H
_bp512_db DB	023H
	DB	0eH
	DB	018H
	DB	0e1H
	DB	0bcH
	DB	0c8H
	DB	08aH
	DB	036H
	DB	02fH
	DB	0a5H
	DB	04eH
	DB	04eH
	DB	0a3H
	DB	090H
	DB	020H
	DB	09H
	DB	029H
	DB	02fH
	DB	07fH
	DB	080H
	DB	033H
	DB	062H
	DB	04fH
	DB	0d4H
	DB	071H
	DB	0b5H
	DB	0d8H
	DB	0acH
	DB	0e4H
	DB	09dH
	DB	012H
	DB	0cfH
	DB	0abH
	DB	0bcH
	DB	019H
	DB	096H
	DB	03dH
	DB	0abH
	DB	08eH
	DB	02fH
	DB	01eH
	DB	0baH
	DB	00H
	DB	0bfH
	DB	0fbH
	DB	029H
	DB	0e4H
	DB	0d7H
	DB	02dH
	DB	013H
	DB	0f2H
	DB	022H
	DB	045H
	DB	062H
	DB	0f4H
	DB	05H
	DB	0cbH
	DB	080H
	DB	050H
	DB	036H
	DB	066H
	DB	0b2H
	DB	054H
	DB	029H
_bp512_Z DB	0a7H
	DB	092H
	DB	070H
	DB	098H
	DB	065H
	DB	05fH
	DB	01fH
	DB	099H
	DB	076H
	DB	0faH
	DB	050H
	DB	0a9H
	DB	0d5H
	DB	066H
	DB	086H
	DB	05dH
	DB	0c5H
	DB	030H
	DB	033H
	DB	018H
	DB	046H
	DB	038H
	DB	01cH
	DB	087H
	DB	025H
	DB	06bH
	DB	0afH
	DB	032H
	DB	026H
	DB	024H
	DB	04bH
	DB	076H
	DB	0d3H
	DB	064H
	DB	03H
	DB	0c0H
	DB	024H
	DB	0d7H
	DB	0bbH
	DB	0f0H
	DB	0aaH
	DB	08H
	DB	03H
	DB	0eaH
	DB	0ffH
	DB	040H
	DB	05dH
	DB	03dH
	DB	024H
	DB	0f1H
	DB	01aH
	DB	09bH
	DB	05cH
	DB	0bH
	DB	0efH
	DB	067H
	DB	09fH
	DB	0e1H
	DB	045H
	DB	04bH
	DB	021H
	DB	0c4H
	DB	0cdH
	DB	01fH
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_main
PUBLIC	??_C@_0BN@LFFJMHOC@Testing?5key?5generation?5with?5?$AA@ ; `string'
PUBLIC	??_C@_02DDPEGJCB@?5?4?$AA@			; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_0BJ@CCLPJNAG@?4?2crypto?2ecdh?2ecdhtest?4c?$AA@ ; `string'
PUBLIC	??_C@_09BDOGPPHA@?5failed?6?6?$AA@		; `string'
PUBLIC	??_C@_07HDLHJEJO@key?5a?3?6?$AA@		; `string'
PUBLIC	??_C@_0O@OAJNPEBJ@private?5key?3?5?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BD@NOILJCIF@public?5key?5?$CIx?0y?$CJ?3?5?$AA@ ; `string'
PUBLIC	??_C@_01IHBHIGKO@?0?$AA@			; `string'
PUBLIC	??_C@_08HHAHHKCJ@?6key?5b?3?6?$AA@		; `string'
PUBLIC	??_C@_0BC@HDGHGDAL@generated?5key?5a?3?5?$AA@	; `string'
PUBLIC	??_C@_04JFFKLGJF@?$CF02X?$AA@			; `string'
PUBLIC	??_C@_0BC@GBNCMMOF@generated?5key?5b?3?5?$AA@	; `string'
PUBLIC	??_C@_0BI@KHDFICAN@Error?5in?5ECDH?5routines?6?$AA@ ; `string'
PUBLIC	??_C@_04CFDEAMPI@?5ok?6?$AA@			; `string'
PUBLIC	??_C@_0CB@CHIBDJAG@Testing?5ECDH?5shared?5secret?5with?5@ ; `string'
PUBLIC	??_C@_0BH@KPLGMAAF@NIST?5Prime?9Curve?5P?9192?$AA@ ; `string'
PUBLIC	??_C@_0BH@OHAMCHIM@NIST?5Prime?9Curve?5P?9224?$AA@ ; `string'
PUBLIC	??_C@_0BH@NAHFFDIL@NIST?5Prime?9Curve?5P?9256?$AA@ ; `string'
PUBLIC	??_C@_0BH@FCCHMFDP@NIST?5Prime?9Curve?5P?9384?$AA@ ; `string'
PUBLIC	??_C@_0BH@HKMOLHA@NIST?5Prime?9Curve?5P?9521?$AA@ ; `string'
PUBLIC	??_C@_0BI@NINBMKLA@NIST?5Binary?9Curve?5K?9163?$AA@ ; `string'
PUBLIC	??_C@_0BI@PPNOJLHI@NIST?5Binary?9Curve?5B?9163?$AA@ ; `string'
PUBLIC	??_C@_0BI@MMKPKHLF@NIST?5Binary?9Curve?5K?9233?$AA@ ; `string'
PUBLIC	??_C@_0BI@OLKAPGHN@NIST?5Binary?9Curve?5B?9233?$AA@ ; `string'
PUBLIC	??_C@_0BI@MAPKEIFE@NIST?5Binary?9Curve?5K?9283?$AA@ ; `string'
PUBLIC	??_C@_0BI@OHPFBJJM@NIST?5Binary?9Curve?5B?9283?$AA@ ; `string'
PUBLIC	??_C@_0BI@BBGNKOLK@NIST?5Binary?9Curve?5K?9409?$AA@ ; `string'
PUBLIC	??_C@_0BI@DGGCPPHC@NIST?5Binary?9Curve?5B?9409?$AA@ ; `string'
PUBLIC	??_C@_0BI@GEEHFFFC@NIST?5Binary?9Curve?5K?9571?$AA@ ; `string'
PUBLIC	??_C@_0BI@EDEIAEJK@NIST?5Binary?9Curve?5B?9571?$AA@ ; `string'
PUBLIC	??_C@_0CG@EDLJCLKJ@Brainpool?5Prime?9Curve?5brainpoolP@ ; `string'
PUBLIC	??_C@_0CG@NKHMPEDG@Brainpool?5Prime?9Curve?5brainpoolP@ ; `string'
PUBLIC	??_C@_0CG@CEFOCKIG@Brainpool?5Prime?9Curve?5brainpoolP@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp__realloc:PROC
EXTRN	__imp__exit:PROC
EXTRN	_CRYPTO_mem_ctrl:PROC
EXTRN	_CRYPTO_cleanup_all_ex_data:PROC
EXTRN	_CRYPTO_set_mem_functions:PROC
EXTRN	_CRYPTO_set_mem_debug_functions:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_dbg_malloc:PROC
EXTRN	_CRYPTO_dbg_realloc:PROC
EXTRN	_CRYPTO_dbg_free:PROC
EXTRN	_CRYPTO_dbg_set_options:PROC
EXTRN	_CRYPTO_dbg_get_options:PROC
EXTRN	_CRYPTO_mem_leaks_fp:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_clear_free:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_print:PROC
EXTRN	_RAND_seed:PROC
EXTRN	_SHA1:PROC
EXTRN	_ERR_print_errors_fp:PROC
EXTRN	_ERR_remove_thread_state:PROC
EXTRN	_EC_GROUP_method_of:PROC
EXTRN	_EC_METHOD_get_field_type:PROC
EXTRN	_EC_GROUP_get_degree:PROC
EXTRN	_EC_POINT_new:PROC
EXTRN	_EC_POINT_free:PROC
EXTRN	_EC_POINT_get_affine_coordinates_GFp:PROC
EXTRN	_EC_POINT_get_affine_coordinates_GF2m:PROC
EXTRN	_EC_POINT_mul:PROC
EXTRN	_EC_KEY_new_by_curve_name:PROC
EXTRN	_EC_KEY_free:PROC
EXTRN	_EC_KEY_get0_group:PROC
EXTRN	_EC_KEY_get0_private_key:PROC
EXTRN	_EC_KEY_set_private_key:PROC
EXTRN	_EC_KEY_get0_public_key:PROC
EXTRN	_EC_KEY_set_public_key:PROC
EXTRN	_EC_KEY_generate_key:PROC
EXTRN	_ECDH_compute_key:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0CG@CEFOCKIG@Brainpool?5Prime?9Curve?5brainpoolP@
CONST	SEGMENT
??_C@_0CG@CEFOCKIG@Brainpool?5Prime?9Curve?5brainpoolP@ DB 'Brainpool Pri'
	DB	'me-Curve brainpoolP512r1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NKHMPEDG@Brainpool?5Prime?9Curve?5brainpoolP@
CONST	SEGMENT
??_C@_0CG@NKHMPEDG@Brainpool?5Prime?9Curve?5brainpoolP@ DB 'Brainpool Pri'
	DB	'me-Curve brainpoolP384r1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EDLJCLKJ@Brainpool?5Prime?9Curve?5brainpoolP@
CONST	SEGMENT
??_C@_0CG@EDLJCLKJ@Brainpool?5Prime?9Curve?5brainpoolP@ DB 'Brainpool Pri'
	DB	'me-Curve brainpoolP256r1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EDEIAEJK@NIST?5Binary?9Curve?5B?9571?$AA@
CONST	SEGMENT
??_C@_0BI@EDEIAEJK@NIST?5Binary?9Curve?5B?9571?$AA@ DB 'NIST Binary-Curve'
	DB	' B-571', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GEEHFFFC@NIST?5Binary?9Curve?5K?9571?$AA@
CONST	SEGMENT
??_C@_0BI@GEEHFFFC@NIST?5Binary?9Curve?5K?9571?$AA@ DB 'NIST Binary-Curve'
	DB	' K-571', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DGGCPPHC@NIST?5Binary?9Curve?5B?9409?$AA@
CONST	SEGMENT
??_C@_0BI@DGGCPPHC@NIST?5Binary?9Curve?5B?9409?$AA@ DB 'NIST Binary-Curve'
	DB	' B-409', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BBGNKOLK@NIST?5Binary?9Curve?5K?9409?$AA@
CONST	SEGMENT
??_C@_0BI@BBGNKOLK@NIST?5Binary?9Curve?5K?9409?$AA@ DB 'NIST Binary-Curve'
	DB	' K-409', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OHPFBJJM@NIST?5Binary?9Curve?5B?9283?$AA@
CONST	SEGMENT
??_C@_0BI@OHPFBJJM@NIST?5Binary?9Curve?5B?9283?$AA@ DB 'NIST Binary-Curve'
	DB	' B-283', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MAPKEIFE@NIST?5Binary?9Curve?5K?9283?$AA@
CONST	SEGMENT
??_C@_0BI@MAPKEIFE@NIST?5Binary?9Curve?5K?9283?$AA@ DB 'NIST Binary-Curve'
	DB	' K-283', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OLKAPGHN@NIST?5Binary?9Curve?5B?9233?$AA@
CONST	SEGMENT
??_C@_0BI@OLKAPGHN@NIST?5Binary?9Curve?5B?9233?$AA@ DB 'NIST Binary-Curve'
	DB	' B-233', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MMKPKHLF@NIST?5Binary?9Curve?5K?9233?$AA@
CONST	SEGMENT
??_C@_0BI@MMKPKHLF@NIST?5Binary?9Curve?5K?9233?$AA@ DB 'NIST Binary-Curve'
	DB	' K-233', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PPNOJLHI@NIST?5Binary?9Curve?5B?9163?$AA@
CONST	SEGMENT
??_C@_0BI@PPNOJLHI@NIST?5Binary?9Curve?5B?9163?$AA@ DB 'NIST Binary-Curve'
	DB	' B-163', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NINBMKLA@NIST?5Binary?9Curve?5K?9163?$AA@
CONST	SEGMENT
??_C@_0BI@NINBMKLA@NIST?5Binary?9Curve?5K?9163?$AA@ DB 'NIST Binary-Curve'
	DB	' K-163', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HKMOLHA@NIST?5Prime?9Curve?5P?9521?$AA@
CONST	SEGMENT
??_C@_0BH@HKMOLHA@NIST?5Prime?9Curve?5P?9521?$AA@ DB 'NIST Prime-Curve P-'
	DB	'521', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FCCHMFDP@NIST?5Prime?9Curve?5P?9384?$AA@
CONST	SEGMENT
??_C@_0BH@FCCHMFDP@NIST?5Prime?9Curve?5P?9384?$AA@ DB 'NIST Prime-Curve P'
	DB	'-384', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NAHFFDIL@NIST?5Prime?9Curve?5P?9256?$AA@
CONST	SEGMENT
??_C@_0BH@NAHFFDIL@NIST?5Prime?9Curve?5P?9256?$AA@ DB 'NIST Prime-Curve P'
	DB	'-256', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OHAMCHIM@NIST?5Prime?9Curve?5P?9224?$AA@
CONST	SEGMENT
??_C@_0BH@OHAMCHIM@NIST?5Prime?9Curve?5P?9224?$AA@ DB 'NIST Prime-Curve P'
	DB	'-224', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KPLGMAAF@NIST?5Prime?9Curve?5P?9192?$AA@
CONST	SEGMENT
??_C@_0BH@KPLGMAAF@NIST?5Prime?9Curve?5P?9192?$AA@ DB 'NIST Prime-Curve P'
	DB	'-192', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CHIBDJAG@Testing?5ECDH?5shared?5secret?5with?5@
CONST	SEGMENT
??_C@_0CB@CHIBDJAG@Testing?5ECDH?5shared?5secret?5with?5@ DB 'Testing ECD'
	DB	'H shared secret with ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CFDEAMPI@?5ok?6?$AA@
CONST	SEGMENT
??_C@_04CFDEAMPI@?5ok?6?$AA@ DB ' ok', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KHDFICAN@Error?5in?5ECDH?5routines?6?$AA@
CONST	SEGMENT
??_C@_0BI@KHDFICAN@Error?5in?5ECDH?5routines?6?$AA@ DB 'Error in ECDH rou'
	DB	'tines', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GBNCMMOF@generated?5key?5b?3?5?$AA@
CONST	SEGMENT
??_C@_0BC@GBNCMMOF@generated?5key?5b?3?5?$AA@ DB 'generated key b: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFFKLGJF@?$CF02X?$AA@
CONST	SEGMENT
??_C@_04JFFKLGJF@?$CF02X?$AA@ DB '%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HDGHGDAL@generated?5key?5a?3?5?$AA@
CONST	SEGMENT
??_C@_0BC@HDGHGDAL@generated?5key?5a?3?5?$AA@ DB 'generated key a: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HHAHHKCJ@?6key?5b?3?6?$AA@
CONST	SEGMENT
??_C@_08HHAHHKCJ@?6key?5b?3?6?$AA@ DB 0aH, 'key b:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0?$AA@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0?$AA@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NOILJCIF@public?5key?5?$CIx?0y?$CJ?3?5?$AA@
CONST	SEGMENT
??_C@_0BD@NOILJCIF@public?5key?5?$CIx?0y?$CJ?3?5?$AA@ DB 'public key (x,y'
	DB	'): ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OAJNPEBJ@private?5key?3?5?$AA@
CONST	SEGMENT
??_C@_0O@OAJNPEBJ@private?5key?3?5?$AA@ DB 'private key: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HDLHJEJO@key?5a?3?6?$AA@
CONST	SEGMENT
??_C@_07HDLHJEJO@key?5a?3?6?$AA@ DB 'key a:', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BDOGPPHA@?5failed?6?6?$AA@
CONST	SEGMENT
??_C@_09BDOGPPHA@?5failed?6?6?$AA@ DB ' failed', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CCLPJNAG@?4?2crypto?2ecdh?2ecdhtest?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@CCLPJNAG@?4?2crypto?2ecdh?2ecdhtest?4c?$AA@ DB '.\crypto\ecdh\e'
	DB	'cdhtest.c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DDPEGJCB@?5?4?$AA@
CONST	SEGMENT
??_C@_02DDPEGJCB@?5?4?$AA@ DB ' .', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LFFJMHOC@Testing?5key?5generation?5with?5?$AA@
CONST	SEGMENT
??_C@_0BN@LFFJMHOC@Testing?5key?5generation?5with?5?$AA@ DB 'Testing key '
	DB	'generation with ', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdh\ecdhtest.c
; Line 480
	push	ebx
	push	esi
; Line 485
	push	OFFSET _CRYPTO_dbg_get_options
	push	OFFSET _CRYPTO_dbg_set_options
	push	OFFSET _CRYPTO_dbg_free
	push	OFFSET _CRYPTO_dbg_realloc
	push	OFFSET _CRYPTO_dbg_malloc
	mov	ebx, 1
	call	_CRYPTO_set_mem_debug_functions
; Line 486
	push	3
	call	_CRYPTO_dbg_set_options
; Line 487
	push	ebx
	call	_CRYPTO_mem_ctrl
; Line 490
	push	DWORD PTR __imp__free
	push	DWORD PTR __imp__realloc
	push	DWORD PTR __imp__malloc
	call	_CRYPTO_set_mem_functions
; Line 493
	push	64					; 00000040H
	push	OFFSET _rnd_seed
	call	_RAND_seed
; Line 495
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 52					; 00000034H
; Line 496
	test	esi, esi
	jne	SHORT $LN5@main
; Line 497
	push	ebx
	call	DWORD PTR __imp__exit
$LN28@main:
$LN5@main:
	push	ebp
; Line 498
	mov	ebp, DWORD PTR __imp____acrt_iob_func
	push	edi
	push	1
	call	ebp
	push	eax
	push	0
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
; Line 500
	call	_BN_CTX_new
	mov	edi, eax
	test	edi, edi
	je	$err$30
; Line 504
	push	esi
	push	edi
	push	OFFSET ??_C@_0BH@KPLGMAAF@NIST?5Prime?9Curve?5P?9192?$AA@
	push	409					; 00000199H
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 507
	push	esi
	push	edi
	push	OFFSET ??_C@_0BH@OHAMCHIM@NIST?5Prime?9Curve?5P?9224?$AA@
	push	713					; 000002c9H
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 509
	push	esi
	push	edi
	push	OFFSET ??_C@_0BH@NAHFFDIL@NIST?5Prime?9Curve?5P?9256?$AA@
	push	415					; 0000019fH
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 512
	push	esi
	push	edi
	push	OFFSET ??_C@_0BH@FCCHMFDP@NIST?5Prime?9Curve?5P?9384?$AA@
	push	715					; 000002cbH
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 514
	push	esi
	push	edi
	push	OFFSET ??_C@_0BH@HKMOLHA@NIST?5Prime?9Curve?5P?9521?$AA@
	push	716					; 000002ccH
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 518
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@NINBMKLA@NIST?5Binary?9Curve?5K?9163?$AA@
	push	721					; 000002d1H
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 520
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@PPNOJLHI@NIST?5Binary?9Curve?5B?9163?$AA@
	push	723					; 000002d3H
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 522
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@MMKPKHLF@NIST?5Binary?9Curve?5K?9233?$AA@
	push	726					; 000002d6H
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 524
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@OLKAPGHN@NIST?5Binary?9Curve?5B?9233?$AA@
	push	727					; 000002d7H
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 526
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@MAPKEIFE@NIST?5Binary?9Curve?5K?9283?$AA@
	push	729					; 000002d9H
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 528
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@OHPFBJJM@NIST?5Binary?9Curve?5B?9283?$AA@
	push	730					; 000002daH
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 530
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@BBGNKOLK@NIST?5Binary?9Curve?5K?9409?$AA@
	push	731					; 000002dbH
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 532
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@DGGCPPHC@NIST?5Binary?9Curve?5B?9409?$AA@
	push	732					; 000002dcH
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 534
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@GEEHFFFC@NIST?5Binary?9Curve?5K?9571?$AA@
	push	733					; 000002ddH
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 536
	push	esi
	push	edi
	push	OFFSET ??_C@_0BI@EDEIAEJK@NIST?5Binary?9Curve?5B?9571?$AA@
	push	734					; 000002deH
	call	_test_ecdh_curve
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$30
; Line 539
	push	32					; 00000020H
	push	OFFSET _bp256_Z
	push	32					; 00000020H
	push	OFFSET _bp256_db
	push	32					; 00000020H
	push	OFFSET _bp256_da
	push	927					; 0000039fH
	push	OFFSET ??_C@_0CG@EDLJCLKJ@Brainpool?5Prime?9Curve?5brainpoolP@
	push	esi
	call	_ecdh_kat
	add	esp, 36					; 00000024H
	test	eax, eax
	je	SHORT $err$30
; Line 541
	push	48					; 00000030H
	push	OFFSET _bp384_Z
	push	48					; 00000030H
	push	OFFSET _bp384_db
	push	48					; 00000030H
	push	OFFSET _bp384_da
	push	931					; 000003a3H
	push	OFFSET ??_C@_0CG@NKHMPEDG@Brainpool?5Prime?9Curve?5brainpoolP@
	push	esi
	call	_ecdh_kat
	add	esp, 36					; 00000024H
	test	eax, eax
	je	SHORT $err$30
; Line 543
	push	64					; 00000040H
	push	OFFSET _bp512_Z
	push	64					; 00000040H
	push	OFFSET _bp512_db
	push	64					; 00000040H
	push	OFFSET _bp512_da
	push	933					; 000003a5H
	push	OFFSET ??_C@_0CG@CEFOCKIG@Brainpool?5Prime?9Curve?5brainpoolP@
	push	esi
	call	_ecdh_kat
	xor	ecx, ecx
	add	esp, 36					; 00000024H
	test	eax, eax
	cmovne	ebx, ecx
$err$30:
; Line 549
	push	2
	call	ebp
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 8
; Line 550
	test	edi, edi
	je	SHORT $LN25@main
; Line 551
	push	edi
	call	_BN_CTX_free
	add	esp, 4
$LN25@main:
; Line 552
	push	esi
	call	_BIO_free
; Line 553
	call	_CRYPTO_cleanup_all_ex_data
; Line 554
	push	0
	call	_ERR_remove_thread_state
; Line 555
	push	2
	call	ebp
	push	eax
	call	_CRYPTO_mem_leaks_fp
	add	esp, 16					; 00000010H
; Line 556
	push	ebx
	call	DWORD PTR __imp__exit
	pop	edi
	pop	ebp
$LN29@main:
$LN27@main:
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ecdh_kat
_TEXT	SEGMENT
_key1$1$ = -12						; size = 4
_key2$1$ = -8						; size = 4
_Ztmplen$1$ = -4					; size = 4
_out$ = 8						; size = 4
_cname$ = 12						; size = 4
_nid$ = 16						; size = 4
_k1$ = 20						; size = 4
_k1_len$ = 24						; size = 4
_k2$ = 28						; size = 4
_k2_len$ = 32						; size = 4
_Z$ = 36						; size = 4
_Zlen$ = 40						; size = 4
_ecdh_kat PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdh\ecdhtest.c
; Line 430
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 435
	mov	edi, DWORD PTR _out$[esp+24]
	xor	ebx, ebx
	push	OFFSET ??_C@_0CB@CHIBDJAG@Testing?5ECDH?5shared?5secret?5with?5@
	push	edi
	xor	ebp, ebp
	call	_BIO_puts
; Line 436
	push	DWORD PTR _cname$[esp+32]
	push	edi
	call	_BIO_puts
; Line 437
	push	DWORD PTR _k1_len$[esp+40]
	mov	esi, DWORD PTR _nid$[esp+44]
	push	DWORD PTR _k1$[esp+44]
	push	esi
	call	_mk_eckey
; Line 438
	push	DWORD PTR _k2_len$[esp+52]
	mov	DWORD PTR _key1$1$[esp+60], eax
	push	DWORD PTR _k2$[esp+56]
	push	esi
	call	_mk_eckey
	mov	esi, eax
	add	esp, 40					; 00000028H
; Line 439
	mov	eax, DWORD PTR _key1$1$[esp+28]
	mov	DWORD PTR _key2$1$[esp+28], esi
	test	eax, eax
	je	$LN9@ecdh_kat
	test	esi, esi
	je	$err$34
; Line 441
	push	eax
	call	_EC_KEY_get0_group
	push	eax
	call	_EC_GROUP_get_degree
; Line 442
	mov	edi, DWORD PTR _Zlen$[esp+32]
	add	eax, 7
	cdq
	add	esp, 8
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _Ztmplen$1$[esp+28], eax
	cmp	eax, edi
	jne	$LN31@ecdh_kat
; Line 444
	push	444					; 000001bcH
	push	OFFSET ??_C@_0BJ@CCLPJNAG@?4?2crypto?2ecdh?2ecdhtest?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	ebp, eax
; Line 445
	push	ebx
	push	DWORD PTR _key1$1$[esp+32]
	push	esi
	call	_EC_KEY_get0_public_key
	add	esp, 4
	push	eax
	push	DWORD PTR _Ztmplen$1$[esp+40]
	push	ebp
	call	_ECDH_compute_key
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN31@ecdh_kat
; Line 448
	mov	esi, DWORD PTR _Z$[esp+24]
	mov	ebx, edi
	mov	ecx, ebp
	mov	edx, esi
	sub	ebx, 4
	jb	SHORT $LN17@ecdh_kat
	npad	1
$LL18@ecdh_kat:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN16@ecdh_kat
	add	ecx, 4
	add	edx, 4
	sub	ebx, 4
	jae	SHORT $LL18@ecdh_kat
$LN17@ecdh_kat:
	cmp	ebx, -4					; fffffffcH
	je	SHORT $LN15@ecdh_kat
$LN16@ecdh_kat:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	$LN29@ecdh_kat
	cmp	ebx, -3					; fffffffdH
	je	SHORT $LN15@ecdh_kat
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	$LN29@ecdh_kat
	cmp	ebx, -2					; fffffffeH
	je	SHORT $LN15@ecdh_kat
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	$LN29@ecdh_kat
	cmp	ebx, -1
	je	SHORT $LN15@ecdh_kat
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	jne	$LN29@ecdh_kat
$LN15@ecdh_kat:
; Line 450
	push	edi
	push	0
	push	ebp
	call	_memset
	add	esp, 12					; 0000000cH
; Line 451
	push	0
	push	DWORD PTR _key2$1$[esp+32]
	push	DWORD PTR _key1$1$[esp+36]
	call	_EC_KEY_get0_public_key
	add	esp, 4
	push	eax
	push	DWORD PTR _Ztmplen$1$[esp+40]
	push	ebp
	call	_ECDH_compute_key
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN29@ecdh_kat
; Line 454
	mov	ecx, ebp
	sub	edi, 4
	jb	SHORT $LN21@ecdh_kat
	npad	6
$LL22@ecdh_kat:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [esi]
	jne	SHORT $LN20@ecdh_kat
	add	ecx, 4
	add	esi, 4
	sub	edi, 4
	jae	SHORT $LL22@ecdh_kat
$LN21@ecdh_kat:
	cmp	edi, -4					; fffffffcH
	je	SHORT $LN19@ecdh_kat
$LN20@ecdh_kat:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [esi]
	jne	SHORT $LN29@ecdh_kat
	cmp	edi, -3					; fffffffdH
	je	SHORT $LN19@ecdh_kat
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [esi+1]
	jne	SHORT $LN29@ecdh_kat
	cmp	edi, -2					; fffffffeH
	je	SHORT $LN19@ecdh_kat
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [esi+2]
	jne	SHORT $LN29@ecdh_kat
	cmp	edi, -1
	je	SHORT $LN19@ecdh_kat
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [esi+3]
	jne	SHORT $LN29@ecdh_kat
$LN19@ecdh_kat:
	mov	ebx, 1
	jmp	SHORT $LN24@ecdh_kat
$LN29@ecdh_kat:
	xor	ebx, ebx
$LN24@ecdh_kat:
	mov	esi, DWORD PTR _key2$1$[esp+28]
$LN31@ecdh_kat:
	mov	edi, DWORD PTR _out$[esp+24]
	mov	eax, DWORD PTR _key1$1$[esp+28]
$err$34:
; Line 459
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN9@ecdh_kat:
; Line 460
	test	esi, esi
	je	SHORT $LN10@ecdh_kat
; Line 461
	push	esi
	call	_EC_KEY_free
	add	esp, 4
$LN10@ecdh_kat:
; Line 462
	test	ebp, ebp
	je	SHORT $LN11@ecdh_kat
; Line 463
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
$LN11@ecdh_kat:
; Line 464
	test	ebx, ebx
	je	SHORT $LN12@ecdh_kat
; Line 465
	push	OFFSET ??_C@_04CFDEAMPI@?5ok?6?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 8
; Line 470
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 471
	add	esp, 12					; 0000000cH
	ret	0
$LN12@ecdh_kat:
; Line 467
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0BI@KHDFICAN@Error?5in?5ECDH?5routines?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 468
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 470
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 471
	add	esp, 12					; 0000000cH
	ret	0
_ecdh_kat ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mk_eckey
_TEXT	SEGMENT
_grp$1$ = -4						; size = 4
_nid$ = 8						; size = 4
_p$ = 12						; size = 4
_plen$ = 16						; size = 4
_mk_eckey PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdh\ecdhtest.c
; Line 386
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 392
	push	DWORD PTR _nid$[esp+16]
	xor	ebp, ebp
	xor	edi, edi
	call	_EC_KEY_new_by_curve_name
	mov	esi, eax
	add	esp, 4
; Line 393
	test	esi, esi
	je	$LN12@mk_eckey
; Line 395
	push	edi
	push	DWORD PTR _plen$[esp+20]
	push	DWORD PTR _p$[esp+24]
	call	_BN_bin2bn
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 396
	test	ebx, ebx
	je	SHORT $LN10@mk_eckey
; Line 398
	push	ebx
	push	esi
	call	_EC_KEY_set_private_key
	add	esp, 8
	test	eax, eax
	je	SHORT $err$15
; Line 400
	push	esi
	call	_EC_KEY_get0_group
; Line 401
	push	eax
	mov	DWORD PTR _grp$1$[esp+28], eax
	call	_EC_POINT_new
	mov	edi, eax
	add	esp, 8
; Line 402
	test	edi, edi
	je	SHORT $err$15
; Line 404
	push	ebp
	push	ebp
	push	ebp
	push	ebx
	push	edi
	push	DWORD PTR _grp$1$[esp+40]
	call	_EC_POINT_mul
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $err$15
; Line 406
	push	edi
	push	esi
	call	_EC_KEY_set_public_key
	add	esp, 8
	mov	ecx, 1
	test	eax, eax
	cmovne	ebp, ecx
$err$15:
; Line 411
	push	ebx
	call	_BN_clear_free
	add	esp, 4
; Line 412
	test	edi, edi
	je	SHORT $LN9@mk_eckey
; Line 413
	push	edi
	call	_EC_POINT_free
	add	esp, 4
$LN9@mk_eckey:
; Line 414
	test	ebp, ebp
	je	SHORT $LN10@mk_eckey
; Line 415
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 419
	pop	ecx
	ret	0
$LN10@mk_eckey:
; Line 417
	push	esi
	call	_EC_KEY_free
	add	esp, 4
$LN12@mk_eckey:
; Line 418
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 419
	pop	ecx
	ret	0
_mk_eckey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_ecdh_curve
_TEXT	SEGMENT
_a$1$ = -52						; size = 4
_b$1$ = -48						; size = 4
_x_a$1$ = -44						; size = 4
_y_a$1$ = -40						; size = 4
_x_b$1$ = -36						; size = 4
_y_b$1$ = -32						; size = 4
_abuf$1$ = -28						; size = 4
_bbuf$1$ = -24						; size = 4
_text$GSCopy$1$ = -20					; size = 4
_aout$1$ = -20						; size = 4
_buf$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_nid$ = 8						; size = 4
_text$ = 12						; size = 4
_ctx$ = 16						; size = 4
_out$ = 20						; size = 4
_test_ecdh_curve PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdh\ecdhtest.c
; Line 124
	mov	eax, 52					; 00000034H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+52], eax
	mov	eax, DWORD PTR _text$[esp+48]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+56]
; Line 130
	xor	ebx, ebx
	push	esi
	mov	esi, DWORD PTR _nid$[esp+60]
	push	edi
	mov	edi, DWORD PTR _out$[esp+64]
; Line 133
	push	esi
	mov	DWORD PTR _text$GSCopy$1$[esp+72], eax
	mov	DWORD PTR _x_a$1$[esp+72], 0
	mov	DWORD PTR _y_a$1$[esp+72], 0
	mov	DWORD PTR _x_b$1$[esp+72], 0
	mov	DWORD PTR _y_b$1$[esp+72], 0
	mov	DWORD PTR _abuf$1$[esp+72], 0
	mov	DWORD PTR _bbuf$1$[esp+72], 0
	call	_EC_KEY_new_by_curve_name
; Line 134
	push	esi
	mov	DWORD PTR _a$1$[esp+76], eax
	call	_EC_KEY_new_by_curve_name
; Line 135
	mov	esi, DWORD PTR _a$1$[esp+76]
	add	esp, 8
	mov	DWORD PTR _b$1$[esp+68], eax
	test	esi, esi
	je	$LN60@test_ecdh_
	test	eax, eax
	je	$LN60@test_ecdh_
; Line 138
	push	esi
	call	_EC_KEY_get0_group
	add	esp, 4
	mov	esi, eax
; Line 140
	call	_BN_new
	mov	DWORD PTR _x_a$1$[esp+68], eax
	test	eax, eax
	je	$LN51@test_ecdh_
; Line 142
	call	_BN_new
	mov	DWORD PTR _y_a$1$[esp+68], eax
	test	eax, eax
	je	$LN51@test_ecdh_
; Line 144
	call	_BN_new
	mov	DWORD PTR _x_b$1$[esp+68], eax
	test	eax, eax
	je	$LN51@test_ecdh_
; Line 146
	call	_BN_new
	mov	DWORD PTR _y_b$1$[esp+68], eax
	test	eax, eax
	je	$LN51@test_ecdh_
; Line 149
	push	OFFSET ??_C@_0BN@LFFJMHOC@Testing?5key?5generation?5with?5?$AA@
	push	edi
	call	_BIO_puts
; Line 150
	push	DWORD PTR _text$GSCopy$1$[esp+76]
	push	edi
	call	_BIO_puts
; Line 154
	push	ebx
	push	ebx
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
; Line 157
	push	DWORD PTR _a$1$[esp+100]
	call	_EC_KEY_generate_key
	add	esp, 36					; 00000024H
	test	eax, eax
	je	$LN51@test_ecdh_
; Line 160
	push	esi
	call	_EC_GROUP_method_of
	push	eax
	call	_EC_METHOD_get_field_type
	add	esp, 8
; Line 162
	push	ebp
	push	DWORD PTR _y_a$1$[esp+72]
	push	DWORD PTR _x_a$1$[esp+76]
	push	DWORD PTR _a$1$[esp+80]
	cmp	eax, 406				; 00000196H
	jne	SHORT $LN15@test_ecdh_
	call	_EC_KEY_get0_public_key
	add	esp, 4
	push	eax
	push	esi
	call	_EC_POINT_get_affine_coordinates_GFp
; Line 165
	jmp	SHORT $LN62@test_ecdh_
$LN15@test_ecdh_:
; Line 168
	call	_EC_KEY_get0_public_key
	add	esp, 4
	push	eax
	push	esi
	call	_EC_POINT_get_affine_coordinates_GF2m
$LN62@test_ecdh_:
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN51@test_ecdh_
; Line 183
	push	OFFSET ??_C@_02DDPEGJCB@?5?4?$AA@
	push	edi
	call	_BIO_printf
; Line 184
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
; Line 187
	push	DWORD PTR _b$1$[esp+92]
	call	_EC_KEY_generate_key
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$LN51@test_ecdh_
; Line 190
	push	esi
	call	_EC_GROUP_method_of
	push	eax
	call	_EC_METHOD_get_field_type
	add	esp, 8
; Line 192
	push	ebp
	mov	ebp, DWORD PTR _b$1$[esp+72]
	push	DWORD PTR _y_b$1$[esp+72]
	push	DWORD PTR _x_b$1$[esp+76]
	push	ebp
	cmp	eax, 406				; 00000196H
	jne	SHORT $LN20@test_ecdh_
	call	_EC_KEY_get0_public_key
	add	esp, 4
	push	eax
	push	esi
	call	_EC_POINT_get_affine_coordinates_GFp
; Line 195
	jmp	SHORT $LN64@test_ecdh_
$LN20@test_ecdh_:
; Line 198
	call	_EC_KEY_get0_public_key
	add	esp, 4
	push	eax
	push	esi
	call	_EC_POINT_get_affine_coordinates_GF2m
$LN64@test_ecdh_:
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN49@test_ecdh_
; Line 214
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	edi
	call	_BIO_printf
; Line 215
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
; Line 219
	push	219					; 000000dbH
	push	OFFSET ??_C@_0BJ@CCLPJNAG@?4?2crypto?2ecdh?2ecdhtest?4c?$AA@
	push	20					; 00000014H
	call	_CRYPTO_malloc
; Line 220
	mov	ebp, DWORD PTR _a$1$[esp+104]
	add	esp, 36					; 00000024H
	mov	esi, DWORD PTR _b$1$[esp+68]
	mov	ebx, eax
	mov	DWORD PTR _abuf$1$[esp+68], ebx
	push	OFFSET _KDF1_SHA1
	push	ebp
	push	esi
	call	_EC_KEY_get0_public_key
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	ebx
	call	_ECDH_compute_key
	mov	ebx, eax
; Line 231
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	edi
	mov	DWORD PTR _aout$1$[esp+96], ebx
	call	_BIO_printf
; Line 232
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
; Line 236
	push	236					; 000000ecH
	push	OFFSET ??_C@_0BJ@CCLPJNAG@?4?2crypto?2ecdh?2ecdhtest?4c?$AA@
	push	20					; 00000014H
	call	_CRYPTO_malloc
	add	esp, 56					; 00000038H
	mov	DWORD PTR _bbuf$1$[esp+68], eax
; Line 237
	push	OFFSET _KDF1_SHA1
	push	esi
	push	ebp
	call	_EC_KEY_get0_public_key
	mov	esi, DWORD PTR _bbuf$1$[esp+80]
	add	esp, 4
	push	eax
	push	20					; 00000014H
	push	esi
	call	_ECDH_compute_key
; Line 248
	push	OFFSET ??_C@_01LFCBOECM@?4?$AA@
	push	edi
	mov	ebp, eax
	call	_BIO_printf
; Line 249
	push	0
	push	0
	push	11					; 0000000bH
	push	edi
	call	_BIO_ctrl
	add	esp, 44					; 0000002cH
; Line 252
	cmp	ebx, 4
	jl	SHORT $LN26@test_ecdh_
	cmp	ebp, ebx
	jne	SHORT $LN26@test_ecdh_
	mov	edx, DWORD PTR _abuf$1$[esp+68]
	mov	ecx, ebx
	sub	ecx, 4
	jb	SHORT $LN46@test_ecdh_
$LL47@test_ecdh_:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [esi]
	jne	SHORT $LN45@test_ecdh_
	add	edx, 4
	add	esi, 4
	sub	ecx, 4
	jae	SHORT $LL47@test_ecdh_
$LN46@test_ecdh_:
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN44@test_ecdh_
$LN45@test_ecdh_:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [esi]
	jne	SHORT $LN26@test_ecdh_
	cmp	ecx, -3					; fffffffdH
	je	SHORT $LN44@test_ecdh_
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [esi+1]
	jne	SHORT $LN26@test_ecdh_
	cmp	ecx, -2					; fffffffeH
	je	SHORT $LN44@test_ecdh_
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [esi+2]
	jne	SHORT $LN26@test_ecdh_
	cmp	ecx, -1
	je	SHORT $LN44@test_ecdh_
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [esi+3]
	jne	SHORT $LN26@test_ecdh_
$LN44@test_ecdh_:
; Line 289
	push	OFFSET ??_C@_04CFDEAMPI@?5ok?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
; Line 291
	mov	ebx, 1
$LN51@test_ecdh_:
	mov	esi, DWORD PTR _a$1$[esp+68]
	mov	ebp, DWORD PTR _b$1$[esp+68]
	jmp	$err$66
$LN26@test_ecdh_:
; Line 254
	push	OFFSET ??_C@_09BDOGPPHA@?5failed?6?6?$AA@
	push	edi
	call	_BIO_printf
; Line 255
	push	OFFSET ??_C@_07HDLHJEJO@key?5a?3?6?$AA@
	push	edi
	call	_BIO_printf
; Line 256
	push	OFFSET ??_C@_0O@OAJNPEBJ@private?5key?3?5?$AA@
	push	edi
	call	_BIO_printf
; Line 257
	push	DWORD PTR _a$1$[esp+92]
	call	_EC_KEY_get0_private_key
	push	eax
	push	edi
	call	_BN_print
; Line 258
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
; Line 259
	push	OFFSET ??_C@_0BD@NOILJCIF@public?5key?5?$CIx?0y?$CJ?3?5?$AA@
	push	edi
	call	_BIO_printf
; Line 260
	push	DWORD PTR _x_a$1$[esp+120]
	push	edi
	call	_BN_print
; Line 261
	push	OFFSET ??_C@_01IHBHIGKO@?0?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 262
	push	DWORD PTR _y_a$1$[esp+68]
	push	edi
	call	_BN_print
; Line 263
	push	OFFSET ??_C@_08HHAHHKCJ@?6key?5b?3?6?$AA@
	push	edi
	call	_BIO_printf
; Line 264
	push	OFFSET ??_C@_0O@OAJNPEBJ@private?5key?3?5?$AA@
	push	edi
	call	_BIO_printf
; Line 265
	push	DWORD PTR _b$1$[esp+92]
	call	_EC_KEY_get0_private_key
	push	eax
	push	edi
	call	_BN_print
; Line 266
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
; Line 267
	push	OFFSET ??_C@_0BD@NOILJCIF@public?5key?5?$CIx?0y?$CJ?3?5?$AA@
	push	edi
	call	_BIO_printf
; Line 268
	push	DWORD PTR _x_b$1$[esp+120]
	push	edi
	call	_BN_print
; Line 269
	push	OFFSET ??_C@_01IHBHIGKO@?0?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 270
	push	DWORD PTR _y_b$1$[esp+68]
	push	edi
	call	_BN_print
; Line 271
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
; Line 272
	push	OFFSET ??_C@_0BC@HDGHGDAL@generated?5key?5a?3?5?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 273
	xor	esi, esi
	test	ebp, ebp
	jle	SHORT $LN3@test_ecdh_
	mov	ebx, DWORD PTR _bbuf$1$[esp+68]
$LL4@test_ecdh_:
; Line 274
	movzx	eax, BYTE PTR [esi+ebx]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+72]
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	push	eax
	call	_sprintf
; Line 275
	lea	eax, DWORD PTR _buf$[esp+80]
	push	eax
	push	edi
	call	_BIO_puts
	inc	esi
	add	esp, 20					; 00000014H
	cmp	esi, ebp
	jl	SHORT $LL4@test_ecdh_
	mov	ebx, DWORD PTR _aout$1$[esp+68]
$LN3@test_ecdh_:
; Line 277
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
; Line 278
	push	OFFSET ??_C@_0BC@GBNCMMOF@generated?5key?5b?3?5?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 279
	xor	esi, esi
	test	ebx, ebx
	jle	SHORT $LN6@test_ecdh_
	npad	3
$LL7@test_ecdh_:
; Line 280
	mov	eax, DWORD PTR _abuf$1$[esp+68]
	movzx	eax, BYTE PTR [esi+eax]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+72]
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	push	eax
	call	_sprintf
; Line 281
	lea	eax, DWORD PTR _buf$[esp+80]
	push	eax
	push	edi
	call	_BIO_puts
	inc	esi
	add	esp, 20					; 00000014H
	cmp	esi, ebx
	jl	SHORT $LL7@test_ecdh_
$LN6@test_ecdh_:
; Line 283
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
; Line 285
	push	OFFSET ??_C@_0BI@KHDFICAN@Error?5in?5ECDH?5routines?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	mov	esi, DWORD PTR _a$1$[esp+76]
	add	esp, 8
	mov	ebp, DWORD PTR _b$1$[esp+68]
; Line 286
	xor	ebx, ebx
	jmp	SHORT $err$66
$LN49@test_ecdh_:
	mov	esi, DWORD PTR _a$1$[esp+68]
	jmp	SHORT $err$66
$LN60@test_ecdh_:
	mov	ebp, eax
$err$66:
; Line 294
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	call	_ERR_print_errors_fp
; Line 296
	mov	eax, DWORD PTR _abuf$1$[esp+76]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN27@test_ecdh_
; Line 297
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN27@test_ecdh_:
; Line 298
	mov	eax, DWORD PTR _bbuf$1$[esp+68]
	test	eax, eax
	je	SHORT $LN28@test_ecdh_
; Line 299
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN28@test_ecdh_:
; Line 300
	mov	eax, DWORD PTR _x_a$1$[esp+68]
	test	eax, eax
	je	SHORT $LN29@test_ecdh_
; Line 301
	push	eax
	call	_BN_free
	add	esp, 4
$LN29@test_ecdh_:
; Line 302
	mov	eax, DWORD PTR _y_a$1$[esp+68]
	test	eax, eax
	je	SHORT $LN30@test_ecdh_
; Line 303
	push	eax
	call	_BN_free
	add	esp, 4
$LN30@test_ecdh_:
; Line 304
	mov	eax, DWORD PTR _x_b$1$[esp+68]
	test	eax, eax
	je	SHORT $LN31@test_ecdh_
; Line 305
	push	eax
	call	_BN_free
	add	esp, 4
$LN31@test_ecdh_:
; Line 306
	mov	eax, DWORD PTR _y_b$1$[esp+68]
	test	eax, eax
	je	SHORT $LN32@test_ecdh_
; Line 307
	push	eax
	call	_BN_free
	add	esp, 4
$LN32@test_ecdh_:
; Line 308
	test	ebp, ebp
	je	SHORT $LN33@test_ecdh_
; Line 309
	push	ebp
	call	_EC_KEY_free
	add	esp, 4
$LN33@test_ecdh_:
; Line 310
	test	esi, esi
	je	SHORT $LN48@test_ecdh_
; Line 311
	push	esi
	call	_EC_KEY_free
	add	esp, 4
$LN48@test_ecdh_:
; Line 313
	mov	ecx, DWORD PTR __$ArrayPad$[esp+68]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 52					; 00000034H
	ret	0
_test_ecdh_curve ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _KDF1_SHA1
_TEXT	SEGMENT
_in$ = 8						; size = 4
_inlen$ = 12						; size = 4
_out$ = 16						; size = 4
_outlen$ = 20						; size = 4
_KDF1_SHA1 PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdh\ecdhtest.c
; Line 113
	mov	eax, DWORD PTR _outlen$[esp-4]
	cmp	DWORD PTR [eax], 20			; 00000014H
	jae	SHORT $LN2@KDF1_SHA1
; Line 114
	xor	eax, eax
; Line 121
	ret	0
$LN2@KDF1_SHA1:
; Line 117
	push	DWORD PTR _out$[esp-4]
	mov	DWORD PTR [eax], 20			; 00000014H
	push	DWORD PTR _inlen$[esp]
	push	DWORD PTR _in$[esp+4]
	call	_SHA1
	add	esp, 12					; 0000000cH
; Line 121
	ret	0
_KDF1_SHA1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1788
	ret	0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1460
	ret	0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __BufferCount$[esp+8]
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1391
	ret	0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_dump.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_BIO_dump_cb
PUBLIC	_BIO_dump_indent_cb
PUBLIC	_BIO_dump
PUBLIC	_BIO_dump_indent
PUBLIC	_BIO_dump_fp
PUBLIC	_BIO_dump_indent_fp
PUBLIC	_BIO_hex_string
PUBLIC	??_C@_07NAECFJGM@?$CF04x?5?9?5?$AA@		; `string'
PUBLIC	??_C@_03NDEAONJP@?5?5?5?$AA@			; `string'
PUBLIC	??_C@_06POFAOOON@?$CF02x?$CFc?$AA@		; `string'
PUBLIC	??_C@_02KNHHEEKP@?5?5?$AA@			; `string'
PUBLIC	??_C@_02HAOIJKIC@?$CFc?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BI@GCIHAAPI@?$CFs?$CF04x?5?9?5?$DMSPACES?1NULS?$DO?6?$AA@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_03HIJPJGOM@?$CF?$CKs?$AA@			; `string'
PUBLIC	??_C@_05KFFJODAE@?$CF02X?3?$AA@			; `string'
PUBLIC	??_C@_04JFFKLGJF@?$CF02X?$AA@			; `string'
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BUF_strlcat:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	_OPENSSL_UplinkTable:BYTE
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_04JFFKLGJF@?$CF02X?$AA@
CONST	SEGMENT
??_C@_04JFFKLGJF@?$CF02X?$AA@ DB '%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KFFJODAE@?$CF02X?3?$AA@
CONST	SEGMENT
??_C@_05KFFJODAE@?$CF02X?3?$AA@ DB '%02X:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03HIJPJGOM@?$CF?$CKs?$AA@
CONST	SEGMENT
??_C@_03HIJPJGOM@?$CF?$CKs?$AA@ DB '%*s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GCIHAAPI@?$CFs?$CF04x?5?9?5?$DMSPACES?1NULS?$DO?6?$AA@
CONST	SEGMENT
??_C@_0BI@GCIHAAPI@?$CFs?$CF04x?5?9?5?$DMSPACES?1NULS?$DO?6?$AA@ DB '%s%0'
	DB	'4x - <SPACES/NULS>', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HAOIJKIC@?$CFc?$AA@
CONST	SEGMENT
??_C@_02HAOIJKIC@?$CFc?$AA@ DB '%c', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02KNHHEEKP@?5?5?$AA@
CONST	SEGMENT
??_C@_02KNHHEEKP@?5?5?$AA@ DB '  ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06POFAOOON@?$CF02x?$CFc?$AA@
CONST	SEGMENT
??_C@_06POFAOOON@?$CF02x?$CFc?$AA@ DB '%02x%c', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03NDEAONJP@?5?5?5?$AA@
CONST	SEGMENT
??_C@_03NDEAONJP@?5?5?5?$AA@ DB '   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NAECFJGM@?$CF04x?5?9?5?$AA@
CONST	SEGMENT
??_C@_07NAECFJGM@?$CF04x?5?9?5?$AA@ DB '%04x - ', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _write_bio
_TEXT	SEGMENT
_data$ = 8						; size = 4
_len$ = 12						; size = 4
_bp$ = 16						; size = 4
_write_bio PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_dump.c
; Line 172
	push	DWORD PTR _len$[esp-4]
	push	DWORD PTR _data$[esp]
	push	DWORD PTR _bp$[esp+4]
	call	_BIO_write
	add	esp, 12					; 0000000cH
; Line 173
	ret	0
_write_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _write_fp
_TEXT	SEGMENT
_data$ = 8						; size = 4
_len$ = 12						; size = 4
_fp$ = 16						; size = 4
_write_fp PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_dump.c
; Line 156
	push	DWORD PTR _fp$[esp-4]
	push	1
	push	DWORD PTR _len$[esp+4]
	push	DWORD PTR _data$[esp+8]
	call	DWORD PTR _OPENSSL_UplinkTable+28
	add	esp, 16					; 00000010H
; Line 157
	ret	0
_write_fp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_hex_string
_TEXT	SEGMENT
_out$ = 8						; size = 4
_indent$ = 12						; size = 4
_width$ = 16						; size = 4
_data$ = 20						; size = 4
_datalen$ = 24						; size = 4
_BIO_hex_string PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_dump.c
; Line 187
	push	ebx
	push	ebp
; Line 190
	mov	ebp, DWORD PTR _datalen$[esp+4]
	xor	ebx, ebx
	cmp	ebp, 1
	jl	$LN14@BIO_hex_st
; Line 193
	push	esi
	dec	ebp
	xor	esi, esi
	push	edi
	mov	edi, DWORD PTR _out$[esp+12]
	test	ebp, ebp
	jle	SHORT $LN8@BIO_hex_st
	npad	2
$LL4@BIO_hex_st:
; Line 194
	test	esi, esi
	je	SHORT $LN6@BIO_hex_st
	test	ebx, ebx
	jne	SHORT $LN6@BIO_hex_st
; Line 195
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	DWORD PTR _indent$[esp+16]
	push	OFFSET ??_C@_03HIJPJGOM@?$CF?$CKs?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN6@BIO_hex_st:
; Line 197
	mov	eax, DWORD PTR _data$[esp+12]
	movzx	eax, BYTE PTR [esi+eax]
	push	eax
	push	OFFSET ??_C@_05KFFJODAE@?$CF02X?3?$AA@
	push	edi
	call	_BIO_printf
; Line 199
	lea	eax, DWORD PTR [ebx+1]
	add	esp, 12					; 0000000cH
	cdq
	idiv	DWORD PTR _width$[esp+12]
	mov	ebx, edx
; Line 200
	test	ebx, ebx
	jne	SHORT $LN2@BIO_hex_st
; Line 201
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
$LN2@BIO_hex_st:
; Line 193
	inc	esi
	cmp	esi, ebp
	jl	SHORT $LL4@BIO_hex_st
; Line 204
	test	esi, esi
	je	SHORT $LN8@BIO_hex_st
	test	ebx, ebx
	jne	SHORT $LN8@BIO_hex_st
; Line 205
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	DWORD PTR _indent$[esp+16]
	push	OFFSET ??_C@_03HIJPJGOM@?$CF?$CKs?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN8@BIO_hex_st:
; Line 206
	mov	ecx, DWORD PTR _data$[esp+12]
	mov	eax, DWORD PTR _datalen$[esp+12]
	movzx	eax, BYTE PTR [ecx+eax-1]
	push	eax
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
$LN14@BIO_hex_st:
; Line 207
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 208
	ret	0
_BIO_hex_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_dump_indent_fp
_TEXT	SEGMENT
_fp$ = 8						; size = 4
_s$ = 12						; size = 4
_len$ = 16						; size = 4
_indent$ = 20						; size = 4
_BIO_dump_indent_fp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_dump.c
; Line 166
	push	DWORD PTR _indent$[esp-4]
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _s$[esp+4]
	push	DWORD PTR _fp$[esp+8]
	push	OFFSET _write_fp
	call	_BIO_dump_indent_cb
	add	esp, 20					; 00000014H
; Line 167
	ret	0
_BIO_dump_indent_fp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_dump_fp
_TEXT	SEGMENT
_fp$ = 8						; size = 4
_s$ = 12						; size = 4
_len$ = 16						; size = 4
_BIO_dump_fp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_dump.c
; Line 74
	push	0
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _s$[esp+4]
	push	DWORD PTR _fp$[esp+8]
	push	OFFSET _write_fp
	call	_BIO_dump_indent_cb
	add	esp, 20					; 00000014H
; Line 162
	ret	0
_BIO_dump_fp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_dump_indent
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_s$ = 12						; size = 4
_len$ = 16						; size = 4
_indent$ = 20						; size = 4
_BIO_dump_indent PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_dump.c
; Line 182
	push	DWORD PTR _indent$[esp-4]
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _s$[esp+4]
	push	DWORD PTR _bp$[esp+8]
	push	OFFSET _write_bio
	call	_BIO_dump_indent_cb
	add	esp, 20					; 00000014H
; Line 183
	ret	0
_BIO_dump_indent ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_dump
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_s$ = 12						; size = 4
_len$ = 16						; size = 4
_BIO_dump PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_dump.c
; Line 74
	push	0
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _s$[esp+4]
	push	DWORD PTR _bp$[esp+8]
	push	OFFSET _write_bio
	call	_BIO_dump_indent_cb
	add	esp, 20					; 00000014H
; Line 178
	ret	0
_BIO_dump ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_dump_indent_cb
_TEXT	SEGMENT
_dump_width$1$ = -476					; size = 4
_s$GSCopy$1$ = -472					; size = 4
_rows$1$ = -468						; size = 4
_ret$1$ = -464						; size = 4
_trc$1$ = -460						; size = 4
_u$GSCopy$1$ = -456					; size = 4
_cb$GSCopy$1$ = -452					; size = 4
_tmp$ = -448						; size = 20
_buf$ = -428						; size = 289
_str$ = -136						; size = 129
__$ArrayPad$ = -4					; size = 4
_cb$ = 8						; size = 4
_u$ = 12						; size = 4
_s$ = 16						; size = 4
_len$ = 20						; size = 4
_indent$ = 24						; size = 4
_BIO_dump_indent_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_dump.c
; Line 79
	mov	eax, 476				; 000001dcH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+476], eax
	mov	eax, DWORD PTR _cb$[esp+472]
	push	ebx
	mov	ebx, DWORD PTR _len$[esp+476]
	mov	DWORD PTR _cb$GSCopy$1$[esp+480], eax
	mov	eax, DWORD PTR _u$[esp+476]
	push	ebp
; Line 86
	xor	ebp, ebp
	mov	DWORD PTR _u$GSCopy$1$[esp+484], eax
	mov	eax, DWORD PTR _s$[esp+480]
	mov	DWORD PTR _s$GSCopy$1$[esp+484], eax
	mov	DWORD PTR _ret$1$[esp+484], 0
	mov	DWORD PTR _trc$1$[esp+484], ebp
	push	esi
; Line 89
	test	ebx, ebx
	jle	SHORT $LN3@BIO_dump_i
$LL4@BIO_dump_i:
	mov	al, BYTE PTR [eax+ebx-1]
	cmp	al, 32					; 00000020H
	je	SHORT $LN14@BIO_dump_i
	test	al, al
	jne	SHORT $LN48@BIO_dump_i
$LN14@BIO_dump_i:
	mov	eax, DWORD PTR _s$GSCopy$1$[esp+488]
	dec	ebx
; Line 90
	inc	ebp
	test	ebx, ebx
	jg	SHORT $LL4@BIO_dump_i
$LN48@BIO_dump_i:
	mov	DWORD PTR _trc$1$[esp+488], ebp
$LN3@BIO_dump_i:
; Line 93
	mov	esi, DWORD PTR _indent$[esp+484]
	test	esi, esi
	jns	SHORT $LN52@BIO_dump_i
; Line 94
	xor	esi, esi
; Line 95
	jmp	SHORT $LN45@BIO_dump_i
$LN52@BIO_dump_i:
	je	SHORT $LN16@BIO_dump_i
; Line 96
	mov	eax, 128				; 00000080H
	cmp	esi, eax
	cmovg	esi, eax
; Line 98
	lea	eax, DWORD PTR _str$[esp+488]
	push	esi
	push	32					; 00000020H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN16@BIO_dump_i:
; Line 100
	cmp	esi, 129				; 00000081H
	jae	$LN53@BIO_dump_i
$LN45@BIO_dump_i:
; Line 102
	mov	ecx, 6
	mov	BYTE PTR _str$[esp+esi+488], 0
	cmp	esi, ecx
	mov	eax, esi
	push	edi
	cmovg	eax, ecx
	mov	edi, 16					; 00000010H
	sub	esi, eax
	lea	eax, DWORD PTR [esi+3]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	sub	edi, eax
; Line 103
	mov	eax, ebx
	cdq
	idiv	edi
	mov	DWORD PTR _dump_width$1$[esp+492], edi
	mov	ecx, eax
	mov	DWORD PTR _rows$1$[esp+492], eax
; Line 104
	imul	eax, edi
	cmp	eax, ebx
	jge	SHORT $LN18@BIO_dump_i
; Line 105
	inc	ecx
	mov	DWORD PTR _rows$1$[esp+492], ecx
$LN18@BIO_dump_i:
; Line 106
	test	ecx, ecx
	jle	$LN50@BIO_dump_i
	xor	ebp, ebp
	npad	8
$LL7@BIO_dump_i:
; Line 107
	push	289					; 00000121H
	lea	eax, DWORD PTR _str$[esp+496]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+500]
	push	eax
	call	_BUF_strlcpy
; Line 108
	push	ebp
	push	OFFSET ??_C@_07NAECFJGM@?$CF04x?5?9?5?$AA@
	lea	eax, DWORD PTR _tmp$[esp+512]
	push	20					; 00000014H
	push	eax
	call	_BIO_snprintf
; Line 109
	push	289					; 00000121H
	lea	eax, DWORD PTR _tmp$[esp+524]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+528]
	push	eax
	call	_BUF_strlcat
	add	esp, 40					; 00000028H
; Line 110
	xor	esi, esi
	test	edi, edi
	jle	SHORT $LN9@BIO_dump_i
; Line 114
	mov	edi, ebp
$LL10@BIO_dump_i:
; Line 111
	cmp	edi, ebx
	jl	SHORT $LN19@BIO_dump_i
; Line 112
	push	289					; 00000121H
	lea	eax, DWORD PTR _buf$[esp+496]
	push	OFFSET ??_C@_03NDEAONJP@?5?5?5?$AA@
	push	eax
	call	_BUF_strlcat
	add	esp, 12					; 0000000cH
; Line 113
	jmp	SHORT $LN8@BIO_dump_i
$LN19@BIO_dump_i:
; Line 115
	cmp	esi, 7
	mov	ecx, 45					; 0000002dH
	mov	eax, 32					; 00000020H
	cmove	eax, ecx
	push	eax
	mov	eax, DWORD PTR _s$GSCopy$1$[esp+496]
	add	eax, ebp
	movzx	eax, BYTE PTR [eax+esi]
	push	eax
	push	OFFSET ??_C@_06POFAOOON@?$CF02x?$CFc?$AA@
	lea	eax, DWORD PTR _tmp$[esp+504]
	push	20					; 00000014H
	push	eax
	call	_BIO_snprintf
; Line 117
	push	289					; 00000121H
	lea	eax, DWORD PTR _tmp$[esp+516]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+520]
	push	eax
	call	_BUF_strlcat
	add	esp, 32					; 00000020H
$LN8@BIO_dump_i:
; Line 110
	inc	esi
	inc	edi
	cmp	esi, DWORD PTR _dump_width$1$[esp+492]
	jl	SHORT $LL10@BIO_dump_i
	mov	edi, DWORD PTR _dump_width$1$[esp+492]
$LN9@BIO_dump_i:
; Line 120
	push	289					; 00000121H
	lea	eax, DWORD PTR _buf$[esp+496]
	push	OFFSET ??_C@_02KNHHEEKP@?5?5?$AA@
	push	eax
	call	_BUF_strlcat
	add	esp, 12					; 0000000cH
; Line 121
	xor	esi, esi
	test	edi, edi
	jle	SHORT $LN32@BIO_dump_i
; Line 124
	mov	edi, ebp
$LL13@BIO_dump_i:
; Line 122
	cmp	edi, ebx
	jge	SHORT $LN49@BIO_dump_i
; Line 124
	mov	eax, DWORD PTR _s$GSCopy$1$[esp+492]
	add	eax, ebp
	mov	cl, BYTE PTR [eax+esi]
; Line 126
	lea	eax, DWORD PTR [ecx-32]
	cmp	al, 94					; 0000005eH
	movzx	eax, cl
	jbe	SHORT $LN27@BIO_dump_i
	mov	eax, 46					; 0000002eH
$LN27@BIO_dump_i:
	push	eax
	push	OFFSET ??_C@_02HAOIJKIC@?$CFc?$AA@
	lea	eax, DWORD PTR _tmp$[esp+500]
	push	20					; 00000014H
	push	eax
	call	_BIO_snprintf
; Line 134
	push	289					; 00000121H
	lea	eax, DWORD PTR _tmp$[esp+512]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+516]
	push	eax
	call	_BUF_strlcat
	inc	esi
	add	esp, 28					; 0000001cH
	inc	edi
	cmp	esi, DWORD PTR _dump_width$1$[esp+492]
	jl	SHORT $LL13@BIO_dump_i
$LN49@BIO_dump_i:
	mov	edi, DWORD PTR _dump_width$1$[esp+492]
$LN32@BIO_dump_i:
; Line 136
	push	289					; 00000121H
	lea	eax, DWORD PTR _buf$[esp+496]
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	eax
	call	_BUF_strlcat
; Line 141
	lea	ecx, DWORD PTR _buf$[esp+504]
	add	esp, 12					; 0000000cH
	lea	edx, DWORD PTR [ecx+1]
$LL46@BIO_dump_i:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL46@BIO_dump_i
	push	DWORD PTR _u$GSCopy$1$[esp+492]
	sub	ecx, edx
	lea	eax, DWORD PTR _buf$[esp+496]
	push	ecx
	push	eax
	call	DWORD PTR _cb$GSCopy$1$[esp+504]
	mov	esi, DWORD PTR _ret$1$[esp+504]
	add	esp, 12					; 0000000cH
	add	esi, eax
	add	ebp, edi
	sub	DWORD PTR _rows$1$[esp+492], 1
	mov	DWORD PTR _ret$1$[esp+492], esi
	jne	$LL7@BIO_dump_i
	mov	ebp, DWORD PTR _trc$1$[esp+492]
	jmp	SHORT $LN6@BIO_dump_i
$LN50@BIO_dump_i:
	xor	esi, esi
$LN6@BIO_dump_i:
	pop	edi
; Line 144
	test	ebp, ebp
	jle	SHORT $LN22@BIO_dump_i
; Line 145
	lea	eax, DWORD PTR [ebx+ebp]
	push	eax
	lea	eax, DWORD PTR _str$[esp+492]
	push	eax
	push	OFFSET ??_C@_0BI@GCIHAAPI@?$CFs?$CF04x?5?9?5?$DMSPACES?1NULS?$DO?6?$AA@
	lea	eax, DWORD PTR _buf$[esp+500]
	push	289					; 00000121H
	push	eax
	call	_BIO_snprintf
; Line 147
	lea	ecx, DWORD PTR _buf$[esp+508]
	add	esp, 20					; 00000014H
	lea	edx, DWORD PTR [ecx+1]
	npad	5
$LL47@BIO_dump_i:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL47@BIO_dump_i
	push	DWORD PTR _u$GSCopy$1$[esp+488]
	sub	ecx, edx
	lea	eax, DWORD PTR _buf$[esp+492]
	push	ecx
	push	eax
	call	DWORD PTR _cb$GSCopy$1$[esp+500]
	add	esp, 12					; 0000000cH
	add	esi, eax
$LN22@BIO_dump_i:
; Line 151
	mov	ecx, DWORD PTR __$ArrayPad$[esp+488]
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 476				; 000001dcH
	ret	0
$LN53@BIO_dump_i:
; Line 100
	call	___report_rangecheckfailure
$LN54@BIO_dump_i:
$LN51@BIO_dump_i:
	int	3
_BIO_dump_indent_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_dump_cb
_TEXT	SEGMENT
_cb$ = 8						; size = 4
_u$ = 12						; size = 4
_s$ = 16						; size = 4
_len$ = 20						; size = 4
_BIO_dump_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\b_dump.c
; Line 74
	push	0
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _s$[esp+4]
	push	DWORD PTR _u$[esp+8]
	push	DWORD PTR _cb$[esp+12]
	call	_BIO_dump_indent_cb
	add	esp, 20					; 00000014H
; Line 75
	ret	0
_BIO_dump_cb ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_06HBELJPBO@socket?$AA@			; `string'
;	COMDAT ??_C@_06HBELJPBO@socket?$AA@
CONST	SEGMENT
??_C@_06HBELJPBO@socket?$AA@ DB 'socket', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_methods_sockp DD 0505H
	DD	FLAT:??_C@_06HBELJPBO@socket?$AA@
	DD	FLAT:_sock_write
	DD	FLAT:_sock_read
	DD	FLAT:_sock_puts
	DD	00H
	DD	FLAT:_sock_ctrl
	DD	FLAT:_sock_new
	DD	FLAT:_sock_free
	DD	00H
_DATA	ENDS
PUBLIC	_BIO_s_socket
PUBLIC	_BIO_sock_should_retry
PUBLIC	_BIO_sock_non_fatal_error
PUBLIC	_BIO_new_socket
EXTRN	__imp__closesocket@4:PROC
EXTRN	__imp__recv@16:PROC
EXTRN	__imp__send@16:PROC
EXTRN	__imp__shutdown@8:PROC
EXTRN	__imp__WSASetLastError@4:PROC
EXTRN	__imp__WSAGetLastError@0:PROC
EXTRN	_BIO_set_flags:PROC
EXTRN	_BIO_clear_flags:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_int_ctrl:PROC
; Function compile flags: /Ogtpy
;	COMDAT _sock_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_sock_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
; Line 121
	push	esi
; Line 122
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	jne	SHORT $LN2@sock_free
; Line 123
	xor	eax, eax
	pop	esi
; Line 132
	ret	0
$LN2@sock_free:
; Line 124
	cmp	DWORD PTR [esi+16], 0
	je	SHORT $LN3@sock_free
; Line 125
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN4@sock_free
; Line 126
	push	2
	push	DWORD PTR [esi+28]
	call	DWORD PTR __imp__shutdown@8
	push	DWORD PTR [esi+28]
	call	DWORD PTR __imp__closesocket@4
$LN4@sock_free:
; Line 128
	mov	DWORD PTR [esi+12], 0
; Line 129
	mov	DWORD PTR [esi+20], 0
$LN3@sock_free:
; Line 131
	mov	eax, 1
	pop	esi
; Line 132
	ret	0
_sock_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sock_new
_TEXT	SEGMENT
_bi$ = 8						; size = 4
_sock_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
; Line 113
	mov	eax, DWORD PTR _bi$[esp-4]
	mov	DWORD PTR [eax+12], 0
; Line 114
	mov	DWORD PTR [eax+28], 0
; Line 115
	mov	DWORD PTR [eax+32], 0
; Line 116
	mov	DWORD PTR [eax+20], 0
; Line 117
	mov	eax, 1
; Line 118
	ret	0
_sock_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sock_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_num$ = 16						; size = 4
_ptr$ = 20						; size = 4
_sock_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
; Line 169
	mov	eax, DWORD PTR _cmd$[esp-4]
	add	eax, -8					; fffffff8H
	cmp	eax, 97					; 00000061H
	ja	SHORT $LN12@sock_ctrl
	movzx	eax, BYTE PTR $LN14@sock_ctrl[eax]
	jmp	DWORD PTR $LN16@sock_ctrl[eax*4]
$LN4@sock_ctrl:
	push	esi
; Line 171
	mov	esi, DWORD PTR _b$[esp]
	push	esi
	call	_sock_free
; Line 172
	mov	ecx, DWORD PTR _ptr$[esp+4]
	add	esp, 4
; Line 199
	mov	eax, 1
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [esi+28], ecx
	mov	ecx, DWORD PTR _num$[esp]
	mov	DWORD PTR [esi+16], ecx
	mov	DWORD PTR [esi+12], 1
	pop	esi
; Line 200
	ret	0
$LN5@sock_ctrl:
; Line 177
	mov	ecx, DWORD PTR _b$[esp-4]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN6@sock_ctrl
; Line 179
	mov	edx, DWORD PTR _ptr$[esp-4]
	test	edx, edx
	je	SHORT $LN8@sock_ctrl
; Line 180
	mov	eax, DWORD PTR [ecx+28]
	mov	DWORD PTR [edx], eax
$LN8@sock_ctrl:
; Line 199
	mov	eax, DWORD PTR [ecx+28]
; Line 200
	ret	0
$LN6@sock_ctrl:
; Line 199
	or	eax, -1
; Line 200
	ret	0
$LN9@sock_ctrl:
; Line 186
	mov	eax, DWORD PTR _b$[esp-4]
; Line 199
	mov	eax, DWORD PTR [eax+16]
; Line 200
	ret	0
$LN10@sock_ctrl:
; Line 189
	mov	eax, DWORD PTR _b$[esp-4]
	mov	ecx, DWORD PTR _num$[esp-4]
	mov	DWORD PTR [eax+16], ecx
$LN11@sock_ctrl:
; Line 199
	mov	eax, 1
; Line 200
	ret	0
$LN12@sock_ctrl:
; Line 199
	xor	eax, eax
; Line 200
	ret	0
	npad	3
$LN16@sock_ctrl:
	DD	$LN9@sock_ctrl
	DD	$LN10@sock_ctrl
	DD	$LN11@sock_ctrl
	DD	$LN4@sock_ctrl
	DD	$LN5@sock_ctrl
	DD	$LN12@sock_ctrl
$LN14@sock_ctrl:
	DB	0
	DB	1
	DB	5
	DB	2
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	3
	DB	4
_sock_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sock_puts
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_str$ = 12						; size = 4
_sock_puts PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
; Line 206
	mov	edx, DWORD PTR _str$[esp-4]
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
	npad	6
$LL3@sock_puts:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@sock_puts
	sub	eax, esi
; Line 207
	push	eax
	push	edx
	push	DWORD PTR _bp$[esp+8]
	call	_sock_write
	add	esp, 12					; 0000000cH
	pop	esi
; Line 209
	ret	0
_sock_puts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sock_read
_TEXT	SEGMENT
_b$ = 8							; size = 4
_out$ = 12						; size = 4
_outl$ = 16						; size = 4
_sock_read PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
; Line 135
	push	esi
; Line 138
	mov	esi, DWORD PTR _out$[esp]
	test	esi, esi
	je	SHORT $LN12@sock_read
; Line 139
	push	edi
	push	0
	call	DWORD PTR __imp__WSASetLastError@4
; Line 140
	mov	edi, DWORD PTR _b$[esp+4]
	push	0
	push	DWORD PTR _outl$[esp+8]
	push	esi
	push	DWORD PTR [edi+28]
	call	DWORD PTR __imp__recv@16
; Line 141
	push	15					; 0000000fH
	push	edi
	mov	esi, eax
	call	_BIO_clear_flags
	add	esp, 8
; Line 142
	test	esi, esi
	jg	SHORT $LN10@sock_read
; Line 215
	je	SHORT $LN8@sock_read
	cmp	esi, -1
	jne	SHORT $LN10@sock_read
$LN8@sock_read:
; Line 216
	call	DWORD PTR __imp__WSAGetLastError@0
; Line 224
	push	eax
	call	_BIO_sock_non_fatal_error
	add	esp, 4
; Line 143
	test	eax, eax
	je	SHORT $LN10@sock_read
; Line 144
	push	9
	push	edi
	call	_BIO_set_flags
	add	esp, 8
$LN10@sock_read:
; Line 147
	pop	edi
	mov	eax, esi
	pop	esi
; Line 148
	ret	0
$LN12@sock_read:
; Line 147
	xor	eax, eax
	pop	esi
; Line 148
	ret	0
_sock_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sock_write
_TEXT	SEGMENT
_b$ = 8							; size = 4
_in$ = 12						; size = 4
_inl$ = 16						; size = 4
_sock_write PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
; Line 151
	push	esi
	push	edi
; Line 154
	push	0
	call	DWORD PTR __imp__WSASetLastError@4
; Line 155
	mov	edi, DWORD PTR _b$[esp+4]
	push	0
	push	DWORD PTR _inl$[esp+8]
	push	DWORD PTR _in$[esp+12]
	push	DWORD PTR [edi+28]
	call	DWORD PTR __imp__send@16
; Line 156
	push	15					; 0000000fH
	push	edi
	mov	esi, eax
	call	_BIO_clear_flags
	add	esp, 8
; Line 157
	test	esi, esi
	jg	SHORT $LN10@sock_write
; Line 215
	je	SHORT $LN7@sock_write
	cmp	esi, -1
	jne	SHORT $LN10@sock_write
$LN7@sock_write:
; Line 216
	call	DWORD PTR __imp__WSAGetLastError@0
; Line 224
	push	eax
	call	_BIO_sock_non_fatal_error
	add	esp, 4
; Line 158
	test	eax, eax
	je	SHORT $LN10@sock_write
; Line 159
	push	10					; 0000000aH
	push	edi
	call	_BIO_set_flags
	add	esp, 8
$LN10@sock_write:
; Line 161
	pop	edi
	mov	eax, esi
	pop	esi
; Line 162
	ret	0
_sock_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new_socket
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_close_flag$ = 12					; size = 4
_BIO_new_socket PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
; Line 101
	push	esi
; Line 104
	push	OFFSET _methods_sockp
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
; Line 105
	test	esi, esi
	jne	SHORT $LN2@BIO_new_so
	pop	esi
; Line 109
	ret	0
$LN2@BIO_new_so:
; Line 107
	push	DWORD PTR _fd$[esp]
	push	DWORD PTR _close_flag$[esp+4]
	push	104					; 00000068H
	push	esi
	call	_BIO_int_ctrl
	add	esp, 16					; 00000010H
; Line 108
	mov	eax, esi
	pop	esi
; Line 109
	ret	0
_BIO_new_socket ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_sock_non_fatal_error
_TEXT	SEGMENT
_err$ = 8						; size = 4
_BIO_sock_non_fatal_error PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
; Line 231
	mov	eax, DWORD PTR _err$[esp-4]
	cmp	eax, 126				; 0000007eH
	jg	SHORT $LN7@BIO_sock_n
	je	SHORT $LN4@BIO_sock_n
	add	eax, -4					; fffffffcH
	cmp	eax, 108				; 0000006cH
	ja	SHORT $LN5@BIO_sock_n
	movzx	eax, BYTE PTR $LN8@BIO_sock_n[eax]
	jmp	DWORD PTR $LN10@BIO_sock_n[eax*4]
$LN7@BIO_sock_n:
	sub	eax, 134				; 00000086H
	je	SHORT $LN4@BIO_sock_n
	sub	eax, 6
	je	SHORT $LN4@BIO_sock_n
	sub	eax, 9895				; 000026a7H
	je	SHORT $LN4@BIO_sock_n
$LN5@BIO_sock_n:
; Line 284
	xor	eax, eax
; Line 285
	ret	0
$LN4@BIO_sock_n:
; Line 279
	mov	eax, 1
; Line 285
	ret	0
	npad	3
$LN10@BIO_sock_n:
	DD	$LN4@BIO_sock_n
	DD	$LN5@BIO_sock_n
$LN8@BIO_sock_n:
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
_BIO_sock_non_fatal_error ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_sock_should_retry
_TEXT	SEGMENT
_i$ = 8							; size = 4
_BIO_sock_should_retry PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
; Line 215
	mov	eax, DWORD PTR _i$[esp-4]
	test	eax, eax
	je	SHORT $LN3@BIO_sock_s
	cmp	eax, -1
	je	SHORT $LN3@BIO_sock_s
; Line 226
	xor	eax, eax
; Line 227
	ret	0
$LN3@BIO_sock_s:
; Line 216
	call	DWORD PTR __imp__WSAGetLastError@0
; Line 224
	mov	DWORD PTR _i$[esp-4], eax
	jmp	_BIO_sock_non_fatal_error
_BIO_sock_should_retry ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_s_socket
_TEXT	SEGMENT
_BIO_s_socket PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_sock.c
; Line 97
	mov	eax, OFFSET _methods_sockp
; Line 98
	ret	0
_BIO_s_socket ENDP
_TEXT	ENDS
END

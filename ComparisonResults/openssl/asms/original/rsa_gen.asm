; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_gen.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_RSA_generate_key_ex
PUBLIC	??_C@_0BH@CBMMJEHK@?4?2crypto?2rsa?2rsa_gen?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_GENCB_call:PROC
EXTRN	_BN_value_one:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_CTX_start:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_CTX_end:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_copy:PROC
EXTRN	_BN_sub:PROC
EXTRN	_BN_mul:PROC
EXTRN	_BN_div:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_gcd:PROC
EXTRN	_BN_mod_inverse:PROC
EXTRN	_BN_generate_prime_ex:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BH@CBMMJEHK@?4?2crypto?2rsa?2rsa_gen?4c?$AA@
CONST	SEGMENT
??_C@_0BH@CBMMJEHK@?4?2crypto?2rsa?2rsa_gen?4c?$AA@ DB '.\crypto\rsa\rsa_'
	DB	'gen.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_builtin_keygen
_TEXT	SEGMENT
_n$1$ = -72						; size = 4
_r2$1$ = -68						; size = 4
_r0$1$ = -64						; size = 4
_local_r0$ = -60					; size = 20
_local_d$ = -40						; size = 20
_local_p$ = -20						; size = 20
_rsa$ = 8						; size = 4
_bits$ = 12						; size = 4
_e_value$ = 16						; size = 4
_cb$ = 20						; size = 4
_rsa_builtin_keygen PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_gen.c
; Line 106
	mov	eax, 72					; 00000048H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 110
	mov	DWORD PTR _n$1$[esp+88], 0
; Line 113
	call	_BN_CTX_new
	mov	ebp, eax
; Line 114
	test	ebp, ebp
	je	$LN79@rsa_builti
; Line 116
	push	ebp
	call	_BN_CTX_start
; Line 117
	push	ebp
	call	_BN_CTX_get
; Line 118
	push	ebp
	mov	DWORD PTR _r0$1$[esp+100], eax
	call	_BN_CTX_get
; Line 119
	push	ebp
	mov	ebx, eax
	call	_BN_CTX_get
; Line 120
	push	ebp
	mov	DWORD PTR _r2$1$[esp+108], eax
	call	_BN_CTX_get
	add	esp, 20					; 00000014H
; Line 121
	test	eax, eax
	je	$LN79@rsa_builti
; Line 124
	mov	ecx, DWORD PTR _bits$[esp+84]
; Line 128
	mov	esi, DWORD PTR _rsa$[esp+84]
	lea	eax, DWORD PTR [ecx+1]
	cdq
	sub	eax, edx
	mov	edi, eax
	sar	edi, 1
	sub	ecx, edi
	cmp	DWORD PTR [esi+16], 0
	mov	DWORD PTR _bits$[esp+84], ecx
	jne	SHORT $LN13@rsa_builti
	call	_BN_new
	mov	DWORD PTR [esi+16], eax
	test	eax, eax
	je	$LN79@rsa_builti
$LN13@rsa_builti:
; Line 130
	cmp	DWORD PTR [esi+24], 0
	jne	SHORT $LN14@rsa_builti
	call	_BN_new
	mov	DWORD PTR [esi+24], eax
	test	eax, eax
	je	$LN79@rsa_builti
$LN14@rsa_builti:
; Line 132
	cmp	DWORD PTR [esi+20], 0
	jne	SHORT $LN15@rsa_builti
	call	_BN_new
	mov	DWORD PTR [esi+20], eax
	test	eax, eax
	je	$LN79@rsa_builti
$LN15@rsa_builti:
; Line 134
	cmp	DWORD PTR [esi+28], 0
	jne	SHORT $LN16@rsa_builti
	call	_BN_new
	mov	DWORD PTR [esi+28], eax
	test	eax, eax
	je	$LN79@rsa_builti
$LN16@rsa_builti:
; Line 136
	cmp	DWORD PTR [esi+32], 0
	jne	SHORT $LN17@rsa_builti
	call	_BN_new
	mov	DWORD PTR [esi+32], eax
	test	eax, eax
	je	$LN79@rsa_builti
$LN17@rsa_builti:
; Line 138
	cmp	DWORD PTR [esi+36], 0
	jne	SHORT $LN18@rsa_builti
	call	_BN_new
	mov	DWORD PTR [esi+36], eax
	test	eax, eax
	je	$LN79@rsa_builti
$LN18@rsa_builti:
; Line 140
	cmp	DWORD PTR [esi+40], 0
	jne	SHORT $LN19@rsa_builti
	call	_BN_new
	mov	DWORD PTR [esi+40], eax
	test	eax, eax
	je	$LN79@rsa_builti
$LN19@rsa_builti:
; Line 142
	cmp	DWORD PTR [esi+44], 0
	jne	SHORT $LN20@rsa_builti
	call	_BN_new
	mov	DWORD PTR [esi+44], eax
	test	eax, eax
	je	$LN79@rsa_builti
$LN20@rsa_builti:
; Line 145
	push	DWORD PTR _e_value$[esp+84]
	push	DWORD PTR [esi+20]
	call	_BN_copy
; Line 149
	push	DWORD PTR _cb$[esp+92]
	push	0
	push	0
	push	0
	push	edi
	push	DWORD PTR [esi+28]
	call	_BN_generate_prime_ex
	add	esp, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN79@rsa_builti
$LL2@rsa_builti:
; Line 151
	call	_BN_value_one
	push	eax
	push	DWORD PTR [esi+28]
	push	DWORD PTR _r2$1$[esp+96]
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN79@rsa_builti
; Line 153
	push	ebp
	push	DWORD PTR [esi+20]
	push	DWORD PTR _r2$1$[esp+96]
	push	ebx
	call	_BN_gcd
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN79@rsa_builti
; Line 155
	cmp	DWORD PTR [ebx+4], 1
	jne	SHORT $LN26@rsa_builti
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN26@rsa_builti
	cmp	DWORD PTR [ebx+12], 0
	je	SHORT $LN64@rsa_builti
$LN26@rsa_builti:
; Line 157
	push	DWORD PTR _n$1$[esp+88]
	push	2
	push	DWORD PTR _cb$[esp+92]
	call	_BN_GENCB_call
	inc	DWORD PTR _n$1$[esp+100]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN79@rsa_builti
; Line 149
	push	DWORD PTR _cb$[esp+84]
	push	0
	push	0
	push	0
	push	edi
	push	DWORD PTR [esi+28]
	call	_BN_generate_prime_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LL2@rsa_builti
$LN79@rsa_builti:
; Line 241
	push	241					; 000000f1H
	push	OFFSET ??_C@_0BH@CBMMJEHK@?4?2crypto?2rsa?2rsa_gen?4c?$AA@
	push	3
	push	129					; 00000081H
	push	4
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 242
	xor	esi, esi
$LN54@rsa_builti:
; Line 244
	test	ebp, ebp
	je	SHORT $LN80@rsa_builti
; Line 245
	push	ebp
	call	_BN_CTX_end
; Line 246
	push	ebp
	call	_BN_CTX_free
	add	esp, 8
$LN80@rsa_builti:
; Line 249
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 250
	add	esp, 72					; 00000048H
	ret	0
$LN64@rsa_builti:
; Line 160
	push	0
	push	3
	push	DWORD PTR _cb$[esp+92]
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN79@rsa_builti
	npad	7
$LL5@rsa_builti:
; Line 168
	xor	edi, edi
$LL10@rsa_builti:
; Line 170
	push	DWORD PTR _cb$[esp+84]
	push	0
	push	0
	push	0
	push	DWORD PTR _bits$[esp+100]
	push	DWORD PTR [esi+32]
	call	_BN_generate_prime_ex
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN79@rsa_builti
; Line 172
	push	DWORD PTR [esi+32]
	push	DWORD PTR [esi+28]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN30@rsa_builti
	inc	edi
	cmp	edi, 3
	jb	SHORT $LL10@rsa_builti
$LN30@rsa_builti:
; Line 173
	cmp	edi, 3
	je	$LN67@rsa_builti
; Line 178
	call	_BN_value_one
	mov	edi, DWORD PTR _r2$1$[esp+88]
	push	eax
	push	DWORD PTR [esi+32]
	push	edi
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN79@rsa_builti
; Line 180
	push	ebp
	push	DWORD PTR [esi+20]
	push	edi
	push	ebx
	call	_BN_gcd
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN79@rsa_builti
; Line 182
	cmp	DWORD PTR [ebx+4], 1
	jne	SHORT $LN36@rsa_builti
	mov	eax, DWORD PTR [ebx]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN36@rsa_builti
	cmp	DWORD PTR [ebx+12], 0
	je	SHORT $LN70@rsa_builti
$LN36@rsa_builti:
; Line 184
	mov	edi, DWORD PTR _n$1$[esp+88]
	push	edi
	push	2
	push	DWORD PTR _cb$[esp+92]
	call	_BN_GENCB_call
	inc	edi
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _n$1$[esp+88], edi
	test	eax, eax
	jne	$LL5@rsa_builti
; Line 186
	jmp	$LN79@rsa_builti
$LN70@rsa_builti:
; Line 187
	push	1
	push	3
	push	DWORD PTR _cb$[esp+92]
	call	_BN_GENCB_call
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN79@rsa_builti
; Line 189
	push	DWORD PTR [esi+32]
	push	DWORD PTR [esi+28]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jns	SHORT $LN39@rsa_builti
; Line 190
	mov	ecx, DWORD PTR [esi+28]
; Line 191
	mov	eax, DWORD PTR [esi+32]
	mov	DWORD PTR [esi+28], eax
; Line 192
	mov	DWORD PTR [esi+32], ecx
$LN39@rsa_builti:
; Line 196
	push	ebp
	push	DWORD PTR [esi+32]
	push	DWORD PTR [esi+28]
	push	DWORD PTR [esi+16]
	call	_BN_mul
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN79@rsa_builti
; Line 200
	call	_BN_value_one
	push	eax
	push	DWORD PTR [esi+28]
	push	ebx
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN79@rsa_builti
; Line 202
	call	_BN_value_one
	push	eax
	push	DWORD PTR [esi+32]
	push	edi
	call	_BN_sub
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN79@rsa_builti
; Line 204
	push	ebp
	push	edi
	mov	edi, DWORD PTR _r0$1$[esp+96]
	push	ebx
	push	edi
	call	_BN_mul
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN79@rsa_builti
; Line 206
	test	DWORD PTR [esi+60], 256			; 00000100H
	jne	SHORT $LN44@rsa_builti
; Line 208
	mov	eax, DWORD PTR [edi]
	lea	edx, DWORD PTR _local_r0$[esp+88]
	mov	DWORD PTR _local_r0$[esp+88], eax
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR _local_r0$[esp+92], eax
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR _local_r0$[esp+96], eax
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR _local_r0$[esp+100], eax
	mov	ecx, DWORD PTR [edi+16]
	mov	eax, DWORD PTR _local_r0$[esp+104]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_r0$[esp+104], ecx
; Line 209
	jmp	SHORT $LN45@rsa_builti
$LN44@rsa_builti:
; Line 210
	mov	edx, edi
$LN45@rsa_builti:
; Line 211
	push	ebp
	push	edx
	push	DWORD PTR [esi+20]
	push	DWORD PTR [esi+24]
	call	_BN_mod_inverse
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN79@rsa_builti
; Line 215
	test	DWORD PTR [esi+60], 256			; 00000100H
	jne	SHORT $LN47@rsa_builti
; Line 217
	mov	ecx, DWORD PTR [esi+24]
	lea	edi, DWORD PTR _local_d$[esp+88]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _local_d$[esp+88], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _local_d$[esp+92], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _local_d$[esp+96], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _local_d$[esp+100], eax
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _local_d$[esp+104]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_d$[esp+104], ecx
; Line 218
	jmp	SHORT $LN48@rsa_builti
$LN47@rsa_builti:
; Line 219
	mov	edi, DWORD PTR [esi+24]
$LN48@rsa_builti:
; Line 222
	push	ebp
	push	ebx
	push	edi
	push	DWORD PTR [esi+36]
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN79@rsa_builti
; Line 226
	push	ebp
	push	DWORD PTR _r2$1$[esp+92]
	push	edi
	push	DWORD PTR [esi+40]
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN79@rsa_builti
; Line 230
	test	DWORD PTR [esi+60], 256			; 00000100H
	jne	SHORT $LN51@rsa_builti
; Line 232
	mov	ecx, DWORD PTR [esi+28]
	lea	edx, DWORD PTR _local_p$[esp+88]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR _local_p$[esp+88], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _local_p$[esp+92], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _local_p$[esp+96], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _local_p$[esp+100], eax
	mov	ecx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _local_p$[esp+104]
	and	ecx, -2					; fffffffeH
	and	eax, 1
	or	ecx, eax
	or	ecx, 6
	mov	DWORD PTR _local_p$[esp+104], ecx
; Line 233
	jmp	SHORT $LN52@rsa_builti
$LN51@rsa_builti:
; Line 234
	mov	edx, DWORD PTR [esi+28]
$LN52@rsa_builti:
; Line 235
	push	ebp
	push	edx
	push	DWORD PTR [esi+32]
	push	DWORD PTR [esi+44]
	call	_BN_mod_inverse
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN79@rsa_builti
; Line 238
	mov	esi, 1
; Line 240
	jmp	$LN54@rsa_builti
$LN67@rsa_builti:
; Line 175
	push	175					; 000000afH
	push	OFFSET ??_C@_0BH@CBMMJEHK@?4?2crypto?2rsa?2rsa_gen?4c?$AA@
	push	120					; 00000078H
	push	129					; 00000081H
	push	4
	xor	esi, esi
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 176
	jmp	$LN54@rsa_builti
_rsa_builtin_keygen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RSA_generate_key_ex
_TEXT	SEGMENT
_rsa$ = 8						; size = 4
_bits$ = 12						; size = 4
_e_value$ = 16						; size = 4
_cb$ = 20						; size = 4
_RSA_generate_key_ex PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_gen.c
; Line 95
	mov	ecx, DWORD PTR _rsa$[esp-4]
	mov	eax, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax+52]
	test	eax, eax
	je	SHORT $LN2@RSA_genera
; Line 96
	mov	DWORD PTR _rsa$[esp-4], ecx
	jmp	eax
$LN2@RSA_genera:
; Line 101
	mov	DWORD PTR _rsa$[esp-4], ecx
	jmp	_rsa_builtin_keygen
_RSA_generate_key_ex ENDP
_TEXT	ENDS
END

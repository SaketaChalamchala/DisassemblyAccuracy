; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\x509.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BC@BKABGCAL@usage?3?5x509?5args?6?$AA@	; `string'
PUBLIC	??_C@_0EI@DALENJCC@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@ ; `string'
PUBLIC	??_C@_0EJ@MCGNHJOO@?5?9outform?5arg?5?5?5?5?9?5output?5format@ ; `string'
PUBLIC	??_C@_0DF@NDEMGLB@?5?9keyform?5arg?5?5?5?5?9?5private?5key?5f@ ; `string'
PUBLIC	??_C@_0CM@ODEHMFCK@?5?9CAform?5arg?5?5?5?5?5?9?5CA?5format?5?9?5d@ ; `string'
PUBLIC	??_C@_0DA@LIJPGAHE@?5?9CAkeyform?5arg?5?5?9?5CA?5key?5format@ ; `string'
PUBLIC	??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@ ; `string'
PUBLIC	??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@ ; `string'
PUBLIC	??_C@_0DA@CMMIFKGD@?5?9passin?5arg?5?5?5?5?5?9?5private?5key?5p@ ; `string'
PUBLIC	??_C@_0CO@HCHAPILL@?5?9serial?5?5?5?5?5?5?5?5?5?9?5print?5serial?5@ ; `string'
PUBLIC	??_C@_0CN@BIEGFPN@?5?9subject_hash?5?5?5?9?5print?5subject@ ; `string'
PUBLIC	??_C@_0EB@GNMFEOEJ@?5?9subject_hash_old?5?5?5?9?5print?5old@ ; `string'
PUBLIC	??_C@_0CM@BLBBBMDG@?5?9issuer_hash?5?5?5?5?9?5print?5issuer?5@ ; `string'
PUBLIC	??_C@_0EA@EKKKCCDH@?5?9issuer_hash_old?5?5?5?5?9?5print?5old@ ; `string'
PUBLIC	??_C@_0CO@NJBBOGMA@?5?9hash?5?5?5?5?5?5?5?5?5?5?5?9?5synonym?5for?5?9@ ; `string'
PUBLIC	??_C@_0CF@BCAOGOKH@?5?9subject?5?5?5?5?5?5?5?5?9?5print?5subject@ ; `string'
PUBLIC	??_C@_0CE@MDFJAKHB@?5?9issuer?5?5?5?5?5?5?5?5?5?9?5print?5issuer?5@ ; `string'
PUBLIC	??_C@_0CM@FLBIENJA@?5?9email?5?5?5?5?5?5?5?5?5?5?9?5print?5email?5a@ ; `string'
PUBLIC	??_C@_0CE@HDKDFJBD@?5?9startdate?5?5?5?5?5?5?9?5notBefore?5fie@ ; `string'
PUBLIC	??_C@_0CD@ECBBMNBK@?5?9enddate?5?5?5?5?5?5?5?5?9?5notAfter?5fiel@ ; `string'
PUBLIC	??_C@_0DD@LLPOCMNG@?5?9purpose?5?5?5?5?5?5?5?5?9?5print?5out?5cer@ ; `string'
PUBLIC	??_C@_0DA@PLMIGHBB@?5?9dates?5?5?5?5?5?5?5?5?5?5?9?5both?5Before?5a@ ; `string'
PUBLIC	??_C@_0CO@NOFGNIDD@?5?9modulus?5?5?5?5?5?5?5?5?9?5print?5the?5RSA@ ; `string'
PUBLIC	??_C@_0CK@PHNPPNJG@?5?9pubkey?5?5?5?5?5?5?5?5?5?9?5output?5the?5pu@ ; `string'
PUBLIC	??_C@_0DG@BKCBGMPA@?5?9fingerprint?5?5?5?5?9?5print?5the?5cer@ ; `string'
PUBLIC	??_C@_0CN@KHJDLCPF@?5?9alias?5?5?5?5?5?5?5?5?5?5?9?5output?5certif@ ; `string'
PUBLIC	??_C@_0CK@PHILGMMN@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5certificat@ ; `string'
PUBLIC	??_C@_0EP@KNDCMBD@?5?9ocspid?5?5?5?5?5?5?5?5?5?9?5print?5OCSP?5ha@ ; `string'
PUBLIC	??_C@_0DA@PGLOIALC@?5?9ocsp_uri?5?5?5?5?5?5?5?9?5print?5OCSP?5Re@ ; `string'
PUBLIC	??_C@_0DD@FMJICBBL@?5?9trustout?5?5?5?5?5?5?5?9?5output?5a?5?$CCtru@ ; `string'
PUBLIC	??_C@_0CP@PPJIMCCF@?5?9clrtrust?5?5?5?5?5?5?5?9?5clear?5all?5tru@ ; `string'
PUBLIC	??_C@_0DA@CNAPNBGA@?5?9clrreject?5?5?5?5?5?5?9?5clear?5all?5rej@ ; `string'
PUBLIC	??_C@_0DK@KEGGDLHP@?5?9addtrust?5arg?5?5?5?9?5trust?5certifi@ ; `string'
PUBLIC	??_C@_0DL@EDGIOMON@?5?9addreject?5arg?5?5?9?5reject?5certif@ ; `string'
PUBLIC	??_C@_0CK@IJOGKDNC@?5?9setalias?5arg?5?5?5?9?5set?5certifica@ ; `string'
PUBLIC	??_C@_0EP@MHJGCGFC@?5?9days?5arg?5?5?5?5?5?5?5?9?5How?5long?5till@ ; `string'
PUBLIC	??_C@_0EL@CIJDGLOM@?5?9checkend?5arg?5?5?5?9?5check?5whether@ ; `string'
PUBLIC	??_C@_0CL@JHKPBLLC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5exit?51?5if?5so?0@ ; `string'
PUBLIC	??_C@_0CM@MAPLEAEK@?5?9signkey?5arg?5?5?5?5?9?5self?5sign?5cer@ ; `string'
PUBLIC	??_C@_0DK@KFNMOCME@?5?9x509toreq?5?5?5?5?5?5?9?5output?5a?5cert@ ; `string'
PUBLIC	??_C@_0EF@LCILDGNN@?5?9req?5?5?5?5?5?5?5?5?5?5?5?5?9?5input?5is?5a?5ce@ ; `string'
PUBLIC	??_C@_0EA@LLIDIFNM@?5?9CA?5arg?5?5?5?5?5?5?5?5?5?9?5set?5the?5CA?5ce@ ; `string'
PUBLIC	??_C@_0DH@FBIPHGCB@?5?9CAkey?5arg?5?5?5?5?5?5?9?5set?5the?5CA?5ke@ ; `string'
PUBLIC	??_C@_0EB@IPEFHMH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5missing?0?5it?5i@ ; `string'
PUBLIC	??_C@_0ED@LHHBNBIF@?5?9CAcreateserial?5?9?5create?5serial@ ; `string'
PUBLIC	??_C@_0CA@JGFEGMIA@?5?9CAserial?5arg?5?5?5?9?5serial?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@DDMLBAAJ@?5?9set_serial?5?5?5?5?5?9?5serial?5number@ ; `string'
PUBLIC	??_C@_0DH@ICGFMCNK@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5the?5cer@ ; `string'
PUBLIC	??_C@_0CL@HICAIFFA@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5print?5out?5C?5c@ ; `string'
PUBLIC	??_C@_0CI@NBBNPMJG@?5?9md2?1?9md5?1?9sha1?1?9mdc2?5?9?5digest?5@ ; `string'
PUBLIC	??_C@_0EF@GCCDNBPL@?5?9extfile?5?5?5?5?5?5?5?5?9?5configuration@ ; `string'
PUBLIC	??_C@_0EL@COHMPBM@?5?9extensions?5?5?5?5?5?9?5section?5from?5@ ; `string'
PUBLIC	??_C@_0EL@EHHKMGOL@?5?9clrext?5?5?5?5?5?5?5?5?5?9?5delete?5extens@ ; `string'
PUBLIC	??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@ ; `string'
PUBLIC	??_C@_0DO@HKPOAJEL@?5?9engine?5e?5?5?5?5?5?5?5?9?5use?5engine?5e?0@ ; `string'
PUBLIC	??_C@_0DF@JIOPNMFE@?5?9certopt?5arg?5?5?5?5?9?5various?5certi@ ; `string'
PUBLIC	??_C@_0DF@LJCFKLGL@?5?9checkhost?5host?5?9?5check?5certifi@ ; `string'
PUBLIC	??_C@_0DI@DANLBJLA@?5?9checkemail?5email?5?9?5check?5certi@ ; `string'
PUBLIC	??_C@_0DH@NKCDKCLH@?5?9checkip?5ipaddr?5?9?5check?5certifi@ ; `string'
_BSS	SEGMENT
_reqfile DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0DH@NKCDKCLH@?5?9checkip?5ipaddr?5?9?5check?5certifi@
CONST	SEGMENT
??_C@_0DH@NKCDKCLH@?5?9checkip?5ipaddr?5?9?5check?5certifi@ DB ' -checkip'
	DB	' ipaddr - check certificate matches "ipaddr"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@DANLBJLA@?5?9checkemail?5email?5?9?5check?5certi@
CONST	SEGMENT
??_C@_0DI@DANLBJLA@?5?9checkemail?5email?5?9?5check?5certi@ DB ' -checkem'
	DB	'ail email - check certificate matches "email"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@LJCFKLGL@?5?9checkhost?5host?5?9?5check?5certifi@
CONST	SEGMENT
??_C@_0DF@LJCFKLGL@?5?9checkhost?5host?5?9?5check?5certifi@ DB ' -checkho'
	DB	'st host - check certificate matches "host"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@JIOPNMFE@?5?9certopt?5arg?5?5?5?5?9?5various?5certi@
CONST	SEGMENT
??_C@_0DF@JIOPNMFE@?5?9certopt?5arg?5?5?5?5?9?5various?5certi@ DB ' -cert'
	DB	'opt arg    - various certificate text options', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@HKPOAJEL@?5?9engine?5e?5?5?5?5?5?5?5?9?5use?5engine?5e?0@
CONST	SEGMENT
??_C@_0DO@HKPOAJEL@?5?9engine?5e?5?5?5?5?5?5?5?9?5use?5engine?5e?0@ DB ' '
	DB	'-engine e       - use engine e, possibly a hardware device.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@
CONST	SEGMENT
??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@ DB ' -name'
	DB	'opt arg    - various certificate name options', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@EHHKMGOL@?5?9clrext?5?5?5?5?5?5?5?5?5?9?5delete?5extens@
CONST	SEGMENT
??_C@_0EL@EHHKMGOL@?5?9clrext?5?5?5?5?5?5?5?5?5?9?5delete?5extens@ DB ' -'
	DB	'clrext         - delete extensions before signing and input c'
	DB	'ertificate', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@COHMPBM@?5?9extensions?5?5?5?5?5?9?5section?5from?5@
CONST	SEGMENT
??_C@_0EL@COHMPBM@?5?9extensions?5?5?5?5?5?9?5section?5from?5@ DB ' -exte'
	DB	'nsions     - section from config file with X509V3 extensions '
	DB	'to add', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@GCCDNBPL@?5?9extfile?5?5?5?5?5?5?5?5?9?5configuration@
CONST	SEGMENT
??_C@_0EF@GCCDNBPL@?5?9extfile?5?5?5?5?5?5?5?5?9?5configuration@ DB ' -ex'
	DB	'tfile        - configuration file with X509V3 extensions to a'
	DB	'dd', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@NBBNPMJG@?5?9md2?1?9md5?1?9sha1?1?9mdc2?5?9?5digest?5@
CONST	SEGMENT
??_C@_0CI@NBBNPMJG@?5?9md2?1?9md5?1?9sha1?1?9mdc2?5?9?5digest?5@ DB ' -md'
	DB	'2/-md5/-sha1/-mdc2 - digest to use', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HICAIFFA@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5print?5out?5C?5c@
CONST	SEGMENT
??_C@_0CL@HICAIFFA@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5print?5out?5C?5c@ DB ' '
	DB	'-C              - print out C code forms', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@ICGFMCNK@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5the?5cer@
CONST	SEGMENT
??_C@_0DH@ICGFMCNK@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5the?5cer@ DB ' '
	DB	'-text           - print the certificate in text form', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DDMLBAAJ@?5?9set_serial?5?5?5?5?5?9?5serial?5number@
CONST	SEGMENT
??_C@_0CJ@DDMLBAAJ@?5?9set_serial?5?5?5?5?5?9?5serial?5number@ DB ' -set_'
	DB	'serial     - serial number to use', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JGFEGMIA@?5?9CAserial?5arg?5?5?5?9?5serial?5file?6?$AA@
CONST	SEGMENT
??_C@_0CA@JGFEGMIA@?5?9CAserial?5arg?5?5?5?9?5serial?5file?6?$AA@ DB ' -C'
	DB	'Aserial arg   - serial file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@LHHBNBIF@?5?9CAcreateserial?5?9?5create?5serial@
CONST	SEGMENT
??_C@_0ED@LHHBNBIF@?5?9CAcreateserial?5?9?5create?5serial@ DB ' -CAcreate'
	DB	'serial - create serial number file if it does not exist', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@IPEFHMH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5missing?0?5it?5i@
CONST	SEGMENT
??_C@_0EB@IPEFHMH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5missing?0?5it?5i@ DB ' '
	DB	'                  missing, it is assumed to be in the CA file'
	DB	'.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FBIPHGCB@?5?9CAkey?5arg?5?5?5?5?5?5?9?5set?5the?5CA?5ke@
CONST	SEGMENT
??_C@_0DH@FBIPHGCB@?5?9CAkey?5arg?5?5?5?5?5?5?9?5set?5the?5CA?5ke@ DB ' -'
	DB	'CAkey arg      - set the CA key, must be PEM format', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@LLIDIFNM@?5?9CA?5arg?5?5?5?5?5?5?5?5?5?9?5set?5the?5CA?5ce@
CONST	SEGMENT
??_C@_0EA@LLIDIFNM@?5?9CA?5arg?5?5?5?5?5?5?5?5?5?9?5set?5the?5CA?5ce@ DB ' '
	DB	'-CA arg         - set the CA certificate, must be PEM format.'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@LCILDGNN@?5?9req?5?5?5?5?5?5?5?5?5?5?5?5?9?5input?5is?5a?5ce@
CONST	SEGMENT
??_C@_0EF@LCILDGNN@?5?9req?5?5?5?5?5?5?5?5?5?5?5?5?9?5input?5is?5a?5ce@ DB ' '
	DB	'-req            - input is a certificate request, sign and ou'
	DB	'tput.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KFNMOCME@?5?9x509toreq?5?5?5?5?5?5?9?5output?5a?5cert@
CONST	SEGMENT
??_C@_0DK@KFNMOCME@?5?9x509toreq?5?5?5?5?5?5?9?5output?5a?5cert@ DB ' -x5'
	DB	'09toreq      - output a certification request object', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@MAPLEAEK@?5?9signkey?5arg?5?5?5?5?9?5self?5sign?5cer@
CONST	SEGMENT
??_C@_0CM@MAPLEAEK@?5?9signkey?5arg?5?5?5?5?9?5self?5sign?5cer@ DB ' -sig'
	DB	'nkey arg    - self sign cert with arg', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@JHKPBLLC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5exit?51?5if?5so?0@
CONST	SEGMENT
??_C@_0CL@JHKPBLLC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5exit?51?5if?5so?0@ DB ' '
	DB	'                  exit 1 if so, 0 if not', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@CIJDGLOM@?5?9checkend?5arg?5?5?5?9?5check?5whether@
CONST	SEGMENT
??_C@_0EL@CIJDGLOM@?5?9checkend?5arg?5?5?5?9?5check?5whether@ DB ' -check'
	DB	'end arg   - check whether the cert expires in the next arg se'
	DB	'conds', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@MHJGCGFC@?5?9days?5arg?5?5?5?5?5?5?5?9?5How?5long?5till@
CONST	SEGMENT
??_C@_0EP@MHJGCGFC@?5?9days?5arg?5?5?5?5?5?5?5?9?5How?5long?5till@ DB ' -'
	DB	'days arg       - How long till expiry of a signed certificate'
	DB	' - def 30 days', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IJOGKDNC@?5?9setalias?5arg?5?5?5?9?5set?5certifica@
CONST	SEGMENT
??_C@_0CK@IJOGKDNC@?5?9setalias?5arg?5?5?5?9?5set?5certifica@ DB ' -setal'
	DB	'ias arg   - set certificate alias', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@EDGIOMON@?5?9addreject?5arg?5?5?9?5reject?5certif@
CONST	SEGMENT
??_C@_0DL@EDGIOMON@?5?9addreject?5arg?5?5?9?5reject?5certif@ DB ' -addrej'
	DB	'ect arg  - reject certificate for a given purpose', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KEGGDLHP@?5?9addtrust?5arg?5?5?5?9?5trust?5certifi@
CONST	SEGMENT
??_C@_0DK@KEGGDLHP@?5?9addtrust?5arg?5?5?5?9?5trust?5certifi@ DB ' -addtr'
	DB	'ust arg   - trust certificate for a given purpose', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@CNAPNBGA@?5?9clrreject?5?5?5?5?5?5?9?5clear?5all?5rej@
CONST	SEGMENT
??_C@_0DA@CNAPNBGA@?5?9clrreject?5?5?5?5?5?5?9?5clear?5all?5rej@ DB ' -cl'
	DB	'rreject      - clear all rejected purposes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PPJIMCCF@?5?9clrtrust?5?5?5?5?5?5?5?9?5clear?5all?5tru@
CONST	SEGMENT
??_C@_0CP@PPJIMCCF@?5?9clrtrust?5?5?5?5?5?5?5?9?5clear?5all?5tru@ DB ' -c'
	DB	'lrtrust       - clear all trusted purposes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@FMJICBBL@?5?9trustout?5?5?5?5?5?5?5?9?5output?5a?5?$CCtru@
CONST	SEGMENT
??_C@_0DD@FMJICBBL@?5?9trustout?5?5?5?5?5?5?5?9?5output?5a?5?$CCtru@ DB ' '
	DB	'-trustout       - output a "trusted" certificate', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PGLOIALC@?5?9ocsp_uri?5?5?5?5?5?5?5?9?5print?5OCSP?5Re@
CONST	SEGMENT
??_C@_0DA@PGLOIALC@?5?9ocsp_uri?5?5?5?5?5?5?5?9?5print?5OCSP?5Re@ DB ' -o'
	DB	'csp_uri       - print OCSP Responder URL(s)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@KNDCMBD@?5?9ocspid?5?5?5?5?5?5?5?5?5?9?5print?5OCSP?5ha@
CONST	SEGMENT
??_C@_0EP@KNDCMBD@?5?9ocspid?5?5?5?5?5?5?5?5?5?9?5print?5OCSP?5ha@ DB ' -'
	DB	'ocspid         - print OCSP hash values for the subject name '
	DB	'and public key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PHILGMMN@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5certificat@
CONST	SEGMENT
??_C@_0CK@PHILGMMN@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5certificat@ DB ' '
	DB	'-noout          - no certificate output', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@KHJDLCPF@?5?9alias?5?5?5?5?5?5?5?5?5?5?9?5output?5certif@
CONST	SEGMENT
??_C@_0CN@KHJDLCPF@?5?9alias?5?5?5?5?5?5?5?5?5?5?9?5output?5certif@ DB ' '
	DB	'-alias          - output certificate alias', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BKCBGMPA@?5?9fingerprint?5?5?5?5?9?5print?5the?5cer@
CONST	SEGMENT
??_C@_0DG@BKCBGMPA@?5?9fingerprint?5?5?5?5?9?5print?5the?5cer@ DB ' -fing'
	DB	'erprint    - print the certificate fingerprint', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PHNPPNJG@?5?9pubkey?5?5?5?5?5?5?5?5?5?9?5output?5the?5pu@
CONST	SEGMENT
??_C@_0CK@PHNPPNJG@?5?9pubkey?5?5?5?5?5?5?5?5?5?9?5output?5the?5pu@ DB ' '
	DB	'-pubkey         - output the public key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@NOFGNIDD@?5?9modulus?5?5?5?5?5?5?5?5?9?5print?5the?5RSA@
CONST	SEGMENT
??_C@_0CO@NOFGNIDD@?5?9modulus?5?5?5?5?5?5?5?5?9?5print?5the?5RSA@ DB ' -'
	DB	'modulus        - print the RSA key modulus', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PLMIGHBB@?5?9dates?5?5?5?5?5?5?5?5?5?5?9?5both?5Before?5a@
CONST	SEGMENT
??_C@_0DA@PLMIGHBB@?5?9dates?5?5?5?5?5?5?5?5?5?5?9?5both?5Before?5a@ DB ' '
	DB	'-dates          - both Before and After dates', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@LLPOCMNG@?5?9purpose?5?5?5?5?5?5?5?5?9?5print?5out?5cer@
CONST	SEGMENT
??_C@_0DD@LLPOCMNG@?5?9purpose?5?5?5?5?5?5?5?5?9?5print?5out?5cer@ DB ' -'
	DB	'purpose        - print out certificate purposes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@ECBBMNBK@?5?9enddate?5?5?5?5?5?5?5?5?9?5notAfter?5fiel@
CONST	SEGMENT
??_C@_0CD@ECBBMNBK@?5?9enddate?5?5?5?5?5?5?5?5?9?5notAfter?5fiel@ DB ' -e'
	DB	'nddate        - notAfter field', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@HDKDFJBD@?5?9startdate?5?5?5?5?5?5?9?5notBefore?5fie@
CONST	SEGMENT
??_C@_0CE@HDKDFJBD@?5?9startdate?5?5?5?5?5?5?9?5notBefore?5fie@ DB ' -sta'
	DB	'rtdate      - notBefore field', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FLBIENJA@?5?9email?5?5?5?5?5?5?5?5?5?5?9?5print?5email?5a@
CONST	SEGMENT
??_C@_0CM@FLBIENJA@?5?9email?5?5?5?5?5?5?5?5?5?5?9?5print?5email?5a@ DB ' '
	DB	'-email          - print email address(es)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MDFJAKHB@?5?9issuer?5?5?5?5?5?5?5?5?5?9?5print?5issuer?5@
CONST	SEGMENT
??_C@_0CE@MDFJAKHB@?5?9issuer?5?5?5?5?5?5?5?5?5?9?5print?5issuer?5@ DB ' '
	DB	'-issuer         - print issuer DN', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BCAOGOKH@?5?9subject?5?5?5?5?5?5?5?5?9?5print?5subject@
CONST	SEGMENT
??_C@_0CF@BCAOGOKH@?5?9subject?5?5?5?5?5?5?5?5?9?5print?5subject@ DB ' -s'
	DB	'ubject        - print subject DN', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@NJBBOGMA@?5?9hash?5?5?5?5?5?5?5?5?5?5?5?9?5synonym?5for?5?9@
CONST	SEGMENT
??_C@_0CO@NJBBOGMA@?5?9hash?5?5?5?5?5?5?5?5?5?5?5?9?5synonym?5for?5?9@ DB ' '
	DB	'-hash           - synonym for -subject_hash', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@EKKKCCDH@?5?9issuer_hash_old?5?5?5?5?9?5print?5old@
CONST	SEGMENT
??_C@_0EA@EKKKCCDH@?5?9issuer_hash_old?5?5?5?5?9?5print?5old@ DB ' -issue'
	DB	'r_hash_old    - print old-style (MD5) issuer hash value', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BLBBBMDG@?5?9issuer_hash?5?5?5?5?9?5print?5issuer?5@
CONST	SEGMENT
??_C@_0CM@BLBBBMDG@?5?9issuer_hash?5?5?5?5?9?5print?5issuer?5@ DB ' -issu'
	DB	'er_hash    - print issuer hash value', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@GNMFEOEJ@?5?9subject_hash_old?5?5?5?9?5print?5old@
CONST	SEGMENT
??_C@_0EB@GNMFEOEJ@?5?9subject_hash_old?5?5?5?9?5print?5old@ DB ' -subjec'
	DB	't_hash_old   - print old-style (MD5) subject hash value', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BIEGFPN@?5?9subject_hash?5?5?5?9?5print?5subject@
CONST	SEGMENT
??_C@_0CN@BIEGFPN@?5?9subject_hash?5?5?5?9?5print?5subject@ DB ' -subject'
	DB	'_hash   - print subject hash value', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@HCHAPILL@?5?9serial?5?5?5?5?5?5?5?5?5?9?5print?5serial?5@
CONST	SEGMENT
??_C@_0CO@HCHAPILL@?5?9serial?5?5?5?5?5?5?5?5?5?9?5print?5serial?5@ DB ' '
	DB	'-serial         - print serial number value', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@CMMIFKGD@?5?9passin?5arg?5?5?5?5?5?9?5private?5key?5p@
CONST	SEGMENT
??_C@_0DA@CMMIFKGD@?5?9passin?5arg?5?5?5?5?5?9?5private?5key?5p@ DB ' -pa'
	DB	'ssin arg     - private key password source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@
CONST	SEGMENT
??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@ DB ' '
	DB	'-out arg        - output file - default stdout', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@
CONST	SEGMENT
??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@ DB ' '
	DB	'-in arg         - input file - default stdin', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@LIJPGAHE@?5?9CAkeyform?5arg?5?5?9?5CA?5key?5format@
CONST	SEGMENT
??_C@_0DA@LIJPGAHE@?5?9CAkeyform?5arg?5?5?9?5CA?5key?5format@ DB ' -CAkey'
	DB	'form arg  - CA key format - default PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@ODEHMFCK@?5?9CAform?5arg?5?5?5?5?5?9?5CA?5format?5?9?5d@
CONST	SEGMENT
??_C@_0CM@ODEHMFCK@?5?9CAform?5arg?5?5?5?5?5?9?5CA?5format?5?9?5d@ DB ' -'
	DB	'CAform arg     - CA format - default PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NDEMGLB@?5?9keyform?5arg?5?5?5?5?9?5private?5key?5f@
CONST	SEGMENT
??_C@_0DF@NDEMGLB@?5?9keyform?5arg?5?5?5?5?9?5private?5key?5f@ DB ' -keyf'
	DB	'orm arg    - private key format - default PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@MCGNHJOO@?5?9outform?5arg?5?5?5?5?9?5output?5format@
CONST	SEGMENT
??_C@_0EJ@MCGNHJOO@?5?9outform?5arg?5?5?5?5?9?5output?5format@ DB ' -outf'
	DB	'orm arg    - output format - default PEM (one of DER, NET or '
	DB	'PEM)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@DALENJCC@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@
CONST	SEGMENT
??_C@_0EI@DALENJCC@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@ DB ' -in'
	DB	'form arg     - input format - default PEM (one of DER, NET or'
	DB	' PEM)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BKABGCAL@usage?3?5x509?5args?6?$AA@
CONST	SEGMENT
??_C@_0BC@BKABGCAL@usage?3?5x509?5args?6?$AA@ DB 'usage: x509 args', 0aH, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_x509_usage DD	FLAT:??_C@_0BC@BKABGCAL@usage?3?5x509?5args?6?$AA@
	DD	FLAT:??_C@_0EI@DALENJCC@?5?9inform?5arg?5?5?5?5?5?9?5input?5format?5@
	DD	FLAT:??_C@_0EJ@MCGNHJOO@?5?9outform?5arg?5?5?5?5?9?5output?5format@
	DD	FLAT:??_C@_0DF@NDEMGLB@?5?9keyform?5arg?5?5?5?5?9?5private?5key?5f@
	DD	FLAT:??_C@_0CM@ODEHMFCK@?5?9CAform?5arg?5?5?5?5?5?9?5CA?5format?5?9?5d@
	DD	FLAT:??_C@_0DA@LIJPGAHE@?5?9CAkeyform?5arg?5?5?9?5CA?5key?5format@
	DD	FLAT:??_C@_0CP@OHCNNAMM@?5?9in?5arg?5?5?5?5?5?5?5?5?5?9?5input?5file?5?9?5@
	DD	FLAT:??_C@_0DB@EFLGJJDD@?5?9out?5arg?5?5?5?5?5?5?5?5?9?5output?5file?5?9@
	DD	FLAT:??_C@_0DA@CMMIFKGD@?5?9passin?5arg?5?5?5?5?5?9?5private?5key?5p@
	DD	FLAT:??_C@_0CO@HCHAPILL@?5?9serial?5?5?5?5?5?5?5?5?5?9?5print?5serial?5@
	DD	FLAT:??_C@_0CN@BIEGFPN@?5?9subject_hash?5?5?5?9?5print?5subject@
	DD	FLAT:??_C@_0EB@GNMFEOEJ@?5?9subject_hash_old?5?5?5?9?5print?5old@
	DD	FLAT:??_C@_0CM@BLBBBMDG@?5?9issuer_hash?5?5?5?5?9?5print?5issuer?5@
	DD	FLAT:??_C@_0EA@EKKKCCDH@?5?9issuer_hash_old?5?5?5?5?9?5print?5old@
	DD	FLAT:??_C@_0CO@NJBBOGMA@?5?9hash?5?5?5?5?5?5?5?5?5?5?5?9?5synonym?5for?5?9@
	DD	FLAT:??_C@_0CF@BCAOGOKH@?5?9subject?5?5?5?5?5?5?5?5?9?5print?5subject@
	DD	FLAT:??_C@_0CE@MDFJAKHB@?5?9issuer?5?5?5?5?5?5?5?5?5?9?5print?5issuer?5@
	DD	FLAT:??_C@_0CM@FLBIENJA@?5?9email?5?5?5?5?5?5?5?5?5?5?9?5print?5email?5a@
	DD	FLAT:??_C@_0CE@HDKDFJBD@?5?9startdate?5?5?5?5?5?5?9?5notBefore?5fie@
	DD	FLAT:??_C@_0CD@ECBBMNBK@?5?9enddate?5?5?5?5?5?5?5?5?9?5notAfter?5fiel@
	DD	FLAT:??_C@_0DD@LLPOCMNG@?5?9purpose?5?5?5?5?5?5?5?5?9?5print?5out?5cer@
	DD	FLAT:??_C@_0DA@PLMIGHBB@?5?9dates?5?5?5?5?5?5?5?5?5?5?9?5both?5Before?5a@
	DD	FLAT:??_C@_0CO@NOFGNIDD@?5?9modulus?5?5?5?5?5?5?5?5?9?5print?5the?5RSA@
	DD	FLAT:??_C@_0CK@PHNPPNJG@?5?9pubkey?5?5?5?5?5?5?5?5?5?9?5output?5the?5pu@
	DD	FLAT:??_C@_0DG@BKCBGMPA@?5?9fingerprint?5?5?5?5?9?5print?5the?5cer@
	DD	FLAT:??_C@_0CN@KHJDLCPF@?5?9alias?5?5?5?5?5?5?5?5?5?5?9?5output?5certif@
	DD	FLAT:??_C@_0CK@PHILGMMN@?5?9noout?5?5?5?5?5?5?5?5?5?5?9?5no?5certificat@
	DD	FLAT:??_C@_0EP@KNDCMBD@?5?9ocspid?5?5?5?5?5?5?5?5?5?9?5print?5OCSP?5ha@
	DD	FLAT:??_C@_0DA@PGLOIALC@?5?9ocsp_uri?5?5?5?5?5?5?5?9?5print?5OCSP?5Re@
	DD	FLAT:??_C@_0DD@FMJICBBL@?5?9trustout?5?5?5?5?5?5?5?9?5output?5a?5?$CCtru@
	DD	FLAT:??_C@_0CP@PPJIMCCF@?5?9clrtrust?5?5?5?5?5?5?5?9?5clear?5all?5tru@
	DD	FLAT:??_C@_0DA@CNAPNBGA@?5?9clrreject?5?5?5?5?5?5?9?5clear?5all?5rej@
	DD	FLAT:??_C@_0DK@KEGGDLHP@?5?9addtrust?5arg?5?5?5?9?5trust?5certifi@
	DD	FLAT:??_C@_0DL@EDGIOMON@?5?9addreject?5arg?5?5?9?5reject?5certif@
	DD	FLAT:??_C@_0CK@IJOGKDNC@?5?9setalias?5arg?5?5?5?9?5set?5certifica@
	DD	FLAT:??_C@_0EP@MHJGCGFC@?5?9days?5arg?5?5?5?5?5?5?5?9?5How?5long?5till@
	DD	FLAT:??_C@_0EL@CIJDGLOM@?5?9checkend?5arg?5?5?5?9?5check?5whether@
	DD	FLAT:??_C@_0CL@JHKPBLLC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5exit?51?5if?5so?0@
	DD	FLAT:??_C@_0CM@MAPLEAEK@?5?9signkey?5arg?5?5?5?5?9?5self?5sign?5cer@
	DD	FLAT:??_C@_0DK@KFNMOCME@?5?9x509toreq?5?5?5?5?5?5?9?5output?5a?5cert@
	DD	FLAT:??_C@_0EF@LCILDGNN@?5?9req?5?5?5?5?5?5?5?5?5?5?5?5?9?5input?5is?5a?5ce@
	DD	FLAT:??_C@_0EA@LLIDIFNM@?5?9CA?5arg?5?5?5?5?5?5?5?5?5?9?5set?5the?5CA?5ce@
	DD	FLAT:??_C@_0DH@FBIPHGCB@?5?9CAkey?5arg?5?5?5?5?5?5?9?5set?5the?5CA?5ke@
	DD	FLAT:??_C@_0EB@IPEFHMH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5missing?0?5it?5i@
	DD	FLAT:??_C@_0ED@LHHBNBIF@?5?9CAcreateserial?5?9?5create?5serial@
	DD	FLAT:??_C@_0CA@JGFEGMIA@?5?9CAserial?5arg?5?5?5?9?5serial?5file?6?$AA@
	DD	FLAT:??_C@_0CJ@DDMLBAAJ@?5?9set_serial?5?5?5?5?5?9?5serial?5number@
	DD	FLAT:??_C@_0DH@ICGFMCNK@?5?9text?5?5?5?5?5?5?5?5?5?5?5?9?5print?5the?5cer@
	DD	FLAT:??_C@_0CL@HICAIFFA@?5?9C?5?5?5?5?5?5?5?5?5?5?5?5?5?5?9?5print?5out?5C?5c@
	DD	FLAT:??_C@_0CI@NBBNPMJG@?5?9md2?1?9md5?1?9sha1?1?9mdc2?5?9?5digest?5@
	DD	FLAT:??_C@_0EF@GCCDNBPL@?5?9extfile?5?5?5?5?5?5?5?5?9?5configuration@
	DD	FLAT:??_C@_0EL@COHMPBM@?5?9extensions?5?5?5?5?5?9?5section?5from?5@
	DD	FLAT:??_C@_0EL@EHHKMGOL@?5?9clrext?5?5?5?5?5?5?5?5?5?9?5delete?5extens@
	DD	FLAT:??_C@_0DF@KKFNFDFD@?5?9nameopt?5arg?5?5?5?5?9?5various?5certi@
	DD	FLAT:??_C@_0DO@HKPOAJEL@?5?9engine?5e?5?5?5?5?5?5?5?9?5use?5engine?5e?0@
	DD	FLAT:??_C@_0DF@JIOPNMFE@?5?9certopt?5arg?5?5?5?5?9?5various?5certi@
	DD	FLAT:??_C@_0DF@LJCFKLGL@?5?9checkhost?5host?5?9?5check?5certifi@
	DD	FLAT:??_C@_0DI@DANLBJLA@?5?9checkemail?5email?5?9?5check?5certi@
	DD	FLAT:??_C@_0DH@NKCDKCLH@?5?9checkip?5ipaddr?5?9?5check?5certifi@
	DD	00H
_DATA	ENDS
PUBLIC	_x509_main
PUBLIC	??_C@_07CGGPPMGB@?9inform?$AA@			; `string'
PUBLIC	??_C@_08LPHBEAIF@?9outform?$AA@			; `string'
PUBLIC	??_C@_08OAHLMBGP@?9keyform?$AA@			; `string'
PUBLIC	??_C@_04LJICMKDM@?9req?$AA@			; `string'
PUBLIC	??_C@_07LLFICNFA@?9CAform?$AA@			; `string'
PUBLIC	??_C@_0L@OPCHGIOO@?9CAkeyform?$AA@		; `string'
PUBLIC	??_C@_07FNCAFLJP@?9sigopt?$AA@			; `string'
PUBLIC	??_C@_05EFBFHALF@?9days?$AA@			; `string'
PUBLIC	??_C@_0BE@JMIHLFEM@bad?5number?5of?5days?6?$AA@	; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_08LEGMGGCD@?9extfile?$AA@			; `string'
PUBLIC	??_C@_0M@BEOOFGDH@?9extensions?$AA@		; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_08DJIMFMFI@?9signkey?$AA@			; `string'
PUBLIC	??_C@_03BHFNBKNN@?9CA?$AA@			; `string'
PUBLIC	??_C@_06HMGAMKJA@?9CAkey?$AA@			; `string'
PUBLIC	??_C@_09GECGDIJN@?9CAserial?$AA@		; `string'
PUBLIC	??_C@_0M@LDCLLBDG@?9set_serial?$AA@		; `string'
PUBLIC	??_C@_0O@KONFNKID@?9force_pubkey?$AA@		; `string'
PUBLIC	??_C@_09JEDCIKJE@?9addtrust?$AA@		; `string'
PUBLIC	??_C@_0BP@NKGJJHBM@Invalid?5trust?5object?5value?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0L@EPANGDNJ@?9addreject?$AA@		; `string'
PUBLIC	??_C@_0CA@KCOFGJFD@Invalid?5reject?5object?5value?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_09HLJHMPAG@?9setalias?$AA@		; `string'
PUBLIC	??_C@_08NLPNJDIN@?9certopt?$AA@			; `string'
PUBLIC	??_C@_08BLLHKMDD@?9nameopt?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_02OLHPOPJI@?9C?$AA@			; `string'
PUBLIC	??_C@_06PILGBBKK@?9email?$AA@			; `string'
PUBLIC	??_C@_09KICCFFNH@?9ocsp_uri?$AA@		; `string'
PUBLIC	??_C@_07DIHGINNE@?9serial?$AA@			; `string'
PUBLIC	??_C@_0N@OADGHLIA@?9next_serial?$AA@		; `string'
PUBLIC	??_C@_08NJNHONAF@?9modulus?$AA@			; `string'
PUBLIC	??_C@_07PABNIEBD@?9pubkey?$AA@			; `string'
PUBLIC	??_C@_0L@NCKBPJOO@?9x509toreq?$AA@		; `string'
PUBLIC	??_C@_05OEBEIMJA@?9text?$AA@			; `string'
PUBLIC	??_C@_05CEEENDPI@?9hash?$AA@			; `string'
PUBLIC	??_C@_0O@FNFEGFLA@?9subject_hash?$AA@		; `string'
PUBLIC	??_C@_0BC@BDJNBOA@?9subject_hash_old?$AA@	; `string'
PUBLIC	??_C@_0N@LOMHAGCP@?9issuer_hash?$AA@		; `string'
PUBLIC	??_C@_0BB@MNOEDPHA@?9issuer_hash_old?$AA@	; `string'
PUBLIC	??_C@_08GNEDOIFN@?9subject?$AA@			; `string'
PUBLIC	??_C@_07NKLAPJEG@?9issuer?$AA@			; `string'
PUBLIC	??_C@_0N@DLPLBIOP@?9fingerprint?$AA@		; `string'
PUBLIC	??_C@_06FFJNHPFJ@?9dates?$AA@			; `string'
PUBLIC	??_C@_08OKAIACAC@?9purpose?$AA@			; `string'
PUBLIC	??_C@_0L@DKBOBAPE@?9startdate?$AA@		; `string'
PUBLIC	??_C@_08BOPFEEAL@?9enddate?$AA@			; `string'
PUBLIC	??_C@_09DGBKAONE@?9checkend?$AA@		; `string'
PUBLIC	??_C@_0L@JDJOKGBA@?9checkhost?$AA@		; `string'
PUBLIC	??_C@_0M@PMNMEFOA@?9checkemail?$AA@		; `string'
PUBLIC	??_C@_08IOMAEBFA@?9checkip?$AA@			; `string'
PUBLIC	??_C@_06JPEJAHHH@?9noout?$AA@			; `string'
PUBLIC	??_C@_09KAHECMCN@?9trustout?$AA@		; `string'
PUBLIC	??_C@_09GNCPBAFD@?9clrtrust?$AA@		; `string'
PUBLIC	??_C@_0L@EKPECJFA@?9clrreject?$AA@		; `string'
PUBLIC	??_C@_06FILKANMF@?9alias?$AA@			; `string'
PUBLIC	??_C@_0BA@JLHDJAAB@?9CAcreateserial?$AA@	; `string'
PUBLIC	??_C@_07KDJNPPMM@?9clrext?$AA@			; `string'
PUBLIC	??_C@_07EFJBLFME@?9crlext?$AA@			; `string'
PUBLIC	??_C@_0CA@DHLBEGN@use?5?9clrext?5instead?5of?5?9crlext?6?$AA@ ; `string'
PUBLIC	??_C@_07JIOKHCGG@?9ocspid?$AA@			; `string'
PUBLIC	??_C@_07FPKNAFBC@?9badsig?$AA@			; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; `string'
PUBLIC	??_C@_0L@NNLEDEDF@Forced?5key?$AA@		; `string'
PUBLIC	??_C@_0DB@BNOINOBM@need?5to?5specify?5a?5CAkey?5if?5using@ ; `string'
PUBLIC	??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@ ; `string'
PUBLIC	??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@ ; `string'
PUBLIC	??_C@_0L@ICCCPLKC@extensions?$AA@		; `string'
PUBLIC	??_C@_07DLHCIBDH@default?$AA@			; `string'
PUBLIC	??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@ ; `string'
PUBLIC	??_C@_0CE@LNAJKFAL@We?5need?5a?5private?5key?5to?5sign?5wi@ ; `string'
PUBLIC	??_C@_0CO@FNAFFGC@The?5certificate?5request?5appears?5@ ; `string'
PUBLIC	??_C@_0CC@HEIPGIED@It?5does?5not?5contain?5a?5public?5key@ ; `string'
PUBLIC	??_C@_0BM@JDNMMHMG@error?5unpacking?5public?5key?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@JBANEDLE@Signature?5verification?5error?6?$AA@ ; `string'
PUBLIC	??_C@_0DB@IDIGBDHM@Signature?5did?5not?5match?5the?5cert@ ; `string'
PUBLIC	??_C@_0O@OKNNLJOD@Signature?5ok?6?$AA@		; `string'
PUBLIC	??_C@_08MAHPNCKH@subject?$DN?$AA@		; `string'
PUBLIC	??_C@_0M@KDOEPPNO@Certificate?$AA@		; `string'
PUBLIC	??_C@_0P@LLKMHGCA@CA?5Certificate?$AA@		; `string'
PUBLIC	??_C@_0BH@FMKKHDCE@SET?5x509v3?5extension?53?$AA@ ; `string'
PUBLIC	??_C@_07BMNIAOAA@SET?4ex3?$AA@			; `string'
PUBLIC	??_C@_09FJOGABAJ@2?499999?43?$AA@		; `string'
PUBLIC	??_C@_08GEFFNOFC@issuer?$DN?5?$AA@		; `string'
PUBLIC	??_C@_09NNPGGNDL@subject?$DN?5?$AA@		; `string'
PUBLIC	??_C@_07BLPLIGMN@serial?$DN?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_0M@DMDCGGEN@?$DMNo?5Alias?$DO?6?$AA@	; `string'
PUBLIC	??_C@_06LLMAFLIJ@?$CF08lx?6?$AA@		; `string'
PUBLIC	??_C@_0BH@HAADKFNF@Certificate?5purposes?3?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@HHKPFLJJ@Modulus?$DNunavailable?6?$AA@ ; `string'
PUBLIC	??_C@_08CHIKBNMH@Modulus?$DN?$AA@		; `string'
PUBLIC	??_C@_0BF@JNOIECJP@Wrong?5Algorithm?5type?$AA@	; `string'
PUBLIC	??_C@_0BK@GNCDDMAG@Error?5getting?5public?5key?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@JINIIEIN@?1?$CK?5subject?3?$CFs?5?$CK?1?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@LDLINKBM@?1?$CK?5issuer?5?3?$CFs?5?$CK?1?6?$AA@ ; `string'
PUBLIC	??_C@_0O@BAIBJPAO@?4?2apps?2x509?4c?$AA@	; `string'
PUBLIC	??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_0CG@PACAHADJ@unsigned?5char?5XXX_subject_name?$FL?$CF@ ; `string'
PUBLIC	??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@		; `string'
PUBLIC	??_C@_03JFDPLKFJ@?$HN?$DL?6?$AA@		; `string'
PUBLIC	??_C@_0CE@JGFCJAHC@unsigned?5char?5XXX_public_key?$FL?$CFd?$FN@ ; `string'
PUBLIC	??_C@_0CF@NEOKGDMP@unsigned?5char?5XXX_certificate?$FL?$CFd@ ; `string'
PUBLIC	??_C@_0L@IJECLNGC@notBefore?$DN?$AA@		; `string'
PUBLIC	??_C@_09HJHNFFGB@notAfter?$DN?$AA@		; `string'
PUBLIC	??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_0BA@BJKFFDMN@?$CFs?5Fingerprint?$DN?$AA@	; `string'
PUBLIC	??_C@_06FOGCEBND@?$CF02X?$CFc?$AA@		; `string'
PUBLIC	??_C@_0BF@IEBOEHCC@Getting?5Private?5key?6?$AA@	; `string'
PUBLIC	??_C@_0M@HBAMEDMN@Private?5key?$AA@		; `string'
PUBLIC	??_C@_1BM@NCLAMDJI@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAx?$AA5?$AA0?$AA9?$AA?4?$AAc?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BI@MNJFIHLM@Getting?5CA?5Private?5Key?6?$AA@ ; `string'
PUBLIC	??_C@_0P@MJHGGFAN@CA?5Private?5Key?$AA@		; `string'
PUBLIC	??_C@_0BN@FDEBFMGB@Getting?5request?5Private?5Key?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@MEPPEIAN@no?5request?5key?5file?5specified?6?$AA@ ; `string'
PUBLIC	??_C@_0M@IGFIMLHB@request?5key?$AA@		; `string'
PUBLIC	??_C@_0CA@NBNBADKF@Generating?5certificate?5request?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@LBCJJJED@Certificate?5will?5expire?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@DFOPHPMM@Certificate?5will?5not?5expire?6?$AA@ ; `string'
PUBLIC	??_C@_0M@LLNFCECG@certificate?$AA@		; `string'
PUBLIC	??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; `string'
PUBLIC	??_C@_0BN@HEHCANJK@unable?5to?5write?5certificate?6?$AA@ ; `string'
PUBLIC	??_C@_0M@BNHBFJND@out?5of?5mem?6?$AA@		; `string'
PUBLIC	??_C@_04KAJLAOGA@?4srl?$AA@			; `string'
PUBLIC	??_C@_0BC@HACGEPHH@add_word?5failure?6?$AA@	; `string'
PUBLIC	??_C@_0BP@JMGLOJAO@Error?5initialising?5X509?5store?6?$AA@ ; `string'
PUBLIC	??_C@_0DA@DPECBGP@CA?5certificate?5and?5CA?5private?5ke@ ; `string'
PUBLIC	??_C@_0EA@MDLEKGLP@error?5with?5certificate?5to?5be?5cer@ ; `string'
PUBLIC	??_C@_0DC@MMCOBAF@error?5with?5certificate?5?9?5error?5?$CF@ ; `string'
PUBLIC	??_C@_03OFDHMCAA@?5CA?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_07DJCGDFC@?$CFs?$CFs?5?3?5?$AA@		; `string'
PUBLIC	??_C@_04KMHOJMOK@Yes?6?$AA@			; `string'
PUBLIC	??_C@_03BMBEGLHK@No?6?$AA@			; `string'
PUBLIC	??_C@_0BH@CMNKFHFI@Yes?5?$CIWARNING?5code?$DN?$CFd?$CJ?6?$AA@ ; `string'
EXTRN	__imp___wassert:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp__atoi:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BUF_strlcat:PROC
EXTRN	__imp___time64:PROC
EXTRN	_BN_add_word:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_print:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_ASN1_INTEGER_new:PROC
EXTRN	_ASN1_INTEGER_free:PROC
EXTRN	_i2a_ASN1_INTEGER:PROC
EXTRN	_BN_to_ASN1_INTEGER:PROC
EXTRN	_ASN1_INTEGER_to_BN:PROC
EXTRN	_ASN1_item_i2d_bio:PROC
EXTRN	_ASN1_TIME_print:PROC
EXTRN	_NETSCAPE_X509_it:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_txt2obj:PROC
EXTRN	_OBJ_create:PROC
EXTRN	_OBJ_cleanup:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_PKEY_copy_parameters:PROC
EXTRN	_EVP_PKEY_save_parameters:PROC
EXTRN	_X509_STORE_new:PROC
EXTRN	_X509_STORE_free:PROC
EXTRN	_X509_STORE_set_verify_cb:PROC
EXTRN	_X509_STORE_CTX_init:PROC
EXTRN	_X509_STORE_CTX_cleanup:PROC
EXTRN	_X509_STORE_set_default_paths:PROC
EXTRN	_X509_STORE_CTX_get_error:PROC
EXTRN	_X509_STORE_CTX_get_error_depth:PROC
EXTRN	_X509_STORE_CTX_get_current_cert:PROC
EXTRN	_X509_STORE_CTX_set_cert:PROC
EXTRN	_X509_STORE_CTX_set_flags:PROC
EXTRN	_X509_verify_cert_error_string:PROC
EXTRN	_X509_REQ_verify:PROC
EXTRN	_X509_sign:PROC
EXTRN	_X509_digest:PROC
EXTRN	_i2d_X509_bio:PROC
EXTRN	_X509_cmp_time:PROC
EXTRN	_X509_time_adj_ex:PROC
EXTRN	_X509_gmtime_adj:PROC
EXTRN	_X509_to_X509_REQ:PROC
EXTRN	_i2d_X509_PUBKEY:PROC
EXTRN	_X509_REQ_free:PROC
EXTRN	_i2d_X509_NAME:PROC
EXTRN	_X509_new:PROC
EXTRN	_X509_free:PROC
EXTRN	_i2d_X509:PROC
EXTRN	_X509_alias_set1:PROC
EXTRN	_X509_alias_get0:PROC
EXTRN	_X509_add1_trust_object:PROC
EXTRN	_X509_add1_reject_object:PROC
EXTRN	_X509_trust_clear:PROC
EXTRN	_X509_reject_clear:PROC
EXTRN	_X509_NAME_oneline:PROC
EXTRN	_X509_set_version:PROC
EXTRN	_X509_set_serialNumber:PROC
EXTRN	_X509_get_serialNumber:PROC
EXTRN	_X509_set_issuer_name:PROC
EXTRN	_X509_get_issuer_name:PROC
EXTRN	_X509_set_subject_name:PROC
EXTRN	_X509_get_subject_name:PROC
EXTRN	_X509_set_pubkey:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_X509_REQ_get_pubkey:PROC
EXTRN	_X509_check_private_key:PROC
EXTRN	_X509_issuer_name_hash:PROC
EXTRN	_X509_subject_name_hash:PROC
EXTRN	_X509_issuer_name_hash_old:PROC
EXTRN	_X509_subject_name_hash_old:PROC
EXTRN	_X509_print_ex:PROC
EXTRN	_X509_ocspid_print:PROC
EXTRN	_X509_REQ_print:PROC
EXTRN	_X509_get_ext_count:PROC
EXTRN	_X509_delete_ext:PROC
EXTRN	_X509_verify_cert:PROC
EXTRN	_NCONF_new:PROC
EXTRN	_NCONF_free:PROC
EXTRN	_NCONF_load:PROC
EXTRN	_NCONF_get_string:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_X509V3_EXT_add_nconf:PROC
EXTRN	_X509V3_set_nconf:PROC
EXTRN	_X509V3_set_ctx:PROC
EXTRN	_s2i_ASN1_INTEGER:PROC
EXTRN	_X509_check_purpose:PROC
EXTRN	_X509_PURPOSE_get_count:PROC
EXTRN	_X509_PURPOSE_get0:PROC
EXTRN	_X509_PURPOSE_get0_name:PROC
EXTRN	_X509_PURPOSE_get_id:PROC
EXTRN	_X509_get1_email:PROC
EXTRN	_X509_email_free:PROC
EXTRN	_X509_get1_ocsp:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_write_file:PROC
EXTRN	_str2fmt:PROC
EXTRN	_print_name:PROC
EXTRN	_set_cert_ex:PROC
EXTRN	_set_name_ex:PROC
EXTRN	_app_passwd:PROC
EXTRN	_load_cert:PROC
EXTRN	_load_key:PROC
EXTRN	_load_pubkey:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_load_serial:PROC
EXTRN	_save_serial:PROC
EXTRN	_rand_serial:PROC
EXTRN	_do_X509_sign:PROC
EXTRN	_print_cert_checks:PROC
EXTRN	_PEM_write_bio_X509:PROC
EXTRN	_PEM_write_bio_X509_AUX:PROC
EXTRN	_PEM_read_bio_X509_REQ:PROC
EXTRN	_PEM_write_bio_X509_REQ:PROC
EXTRN	_PEM_write_bio_PUBKEY:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BH@CMNKFHFI@Yes?5?$CIWARNING?5code?$DN?$CFd?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BH@CMNKFHFI@Yes?5?$CIWARNING?5code?$DN?$CFd?$CJ?6?$AA@ DB 'Yes (WA'
	DB	'RNING code=%d)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BMBEGLHK@No?6?$AA@
CONST	SEGMENT
??_C@_03BMBEGLHK@No?6?$AA@ DB 'No', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KMHOJMOK@Yes?6?$AA@
CONST	SEGMENT
??_C@_04KMHOJMOK@Yes?6?$AA@ DB 'Yes', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DJCGDFC@?$CFs?$CFs?5?3?5?$AA@
CONST	SEGMENT
??_C@_07DJCGDFC@?$CFs?$CFs?5?3?5?$AA@ DB '%s%s : ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFDHMCAA@?5CA?$AA@
CONST	SEGMENT
??_C@_03OFDHMCAA@?5CA?$AA@ DB ' CA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@MMCOBAF@error?5with?5certificate?5?9?5error?5?$CF@
CONST	SEGMENT
??_C@_0DC@MMCOBAF@error?5with?5certificate?5?9?5error?5?$CF@ DB 'error wi'
	DB	'th certificate - error %d at depth %d', 0aH, '%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@MDLEKGLP@error?5with?5certificate?5to?5be?5cer@
CONST	SEGMENT
??_C@_0EA@MDLEKGLP@error?5with?5certificate?5to?5be?5cer@ DB 'error with '
	DB	'certificate to be certified - should be self signed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DPECBGP@CA?5certificate?5and?5CA?5private?5ke@
CONST	SEGMENT
??_C@_0DA@DPECBGP@CA?5certificate?5and?5CA?5private?5ke@ DB 'CA certifica'
	DB	'te and CA private key do not match', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JMGLOJAO@Error?5initialising?5X509?5store?6?$AA@
CONST	SEGMENT
??_C@_0BP@JMGLOJAO@Error?5initialising?5X509?5store?6?$AA@ DB 'Error init'
	DB	'ialising X509 store', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HACGEPHH@add_word?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BC@HACGEPHH@add_word?5failure?6?$AA@ DB 'add_word failure', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04KAJLAOGA@?4srl?$AA@
CONST	SEGMENT
??_C@_04KAJLAOGA@?4srl?$AA@ DB '.srl', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BNHBFJND@out?5of?5mem?6?$AA@
CONST	SEGMENT
??_C@_0M@BNHBFJND@out?5of?5mem?6?$AA@ DB 'out of mem', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HEHCANJK@unable?5to?5write?5certificate?6?$AA@
CONST	SEGMENT
??_C@_0BN@HEHCANJK@unable?5to?5write?5certificate?6?$AA@ DB 'unable to wr'
	DB	'ite certificate', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
CONST	SEGMENT
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ DB 'bad output '
	DB	'format specified for outfile', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LLNFCECG@certificate?$AA@
CONST	SEGMENT
??_C@_0M@LLNFCECG@certificate?$AA@ DB 'certificate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DFOPHPMM@Certificate?5will?5not?5expire?6?$AA@
CONST	SEGMENT
??_C@_0BN@DFOPHPMM@Certificate?5will?5not?5expire?6?$AA@ DB 'Certificate '
	DB	'will not expire', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LBCJJJED@Certificate?5will?5expire?6?$AA@
CONST	SEGMENT
??_C@_0BJ@LBCJJJED@Certificate?5will?5expire?6?$AA@ DB 'Certificate will '
	DB	'expire', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NBNBADKF@Generating?5certificate?5request?6?$AA@
CONST	SEGMENT
??_C@_0CA@NBNBADKF@Generating?5certificate?5request?6?$AA@ DB 'Generating'
	DB	' certificate request', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IGFIMLHB@request?5key?$AA@
CONST	SEGMENT
??_C@_0M@IGFIMLHB@request?5key?$AA@ DB 'request key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MEPPEIAN@no?5request?5key?5file?5specified?6?$AA@
CONST	SEGMENT
??_C@_0BP@MEPPEIAN@no?5request?5key?5file?5specified?6?$AA@ DB 'no reques'
	DB	't key file specified', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FDEBFMGB@Getting?5request?5Private?5Key?6?$AA@
CONST	SEGMENT
??_C@_0BN@FDEBFMGB@Getting?5request?5Private?5Key?6?$AA@ DB 'Getting requ'
	DB	'est Private Key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MJHGGFAN@CA?5Private?5Key?$AA@
CONST	SEGMENT
??_C@_0P@MJHGGFAN@CA?5Private?5Key?$AA@ DB 'CA Private Key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MNJFIHLM@Getting?5CA?5Private?5Key?6?$AA@
CONST	SEGMENT
??_C@_0BI@MNJFIHLM@Getting?5CA?5Private?5Key?6?$AA@ DB 'Getting CA Privat'
	DB	'e Key', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@ DB 'n'
	DB	00H, 'e', 00H, 'e', 00H, 'd', 00H, '_', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'd', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@NCLAMDJI@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAx?$AA5?$AA0?$AA9?$AA?4?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@NCLAMDJI@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAx?$AA5?$AA0?$AA9?$AA?4?$AAc?$AA?$AA@ DB '.'
	DB	00H, '\', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 's', 00H, '\', 00H
	DB	'x', 00H, '5', 00H, '0', 00H, '9', 00H, '.', 00H, 'c', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HBAMEDMN@Private?5key?$AA@
CONST	SEGMENT
??_C@_0M@HBAMEDMN@Private?5key?$AA@ DB 'Private key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IEBOEHCC@Getting?5Private?5key?6?$AA@
CONST	SEGMENT
??_C@_0BF@IEBOEHCC@Getting?5Private?5key?6?$AA@ DB 'Getting Private key', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06FOGCEBND@?$CF02X?$CFc?$AA@
CONST	SEGMENT
??_C@_06FOGCEBND@?$CF02X?$CFc?$AA@ DB '%02X%c', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BJKFFDMN@?$CFs?5Fingerprint?$DN?$AA@
CONST	SEGMENT
??_C@_0BA@BJKFFDMN@?$CFs?5Fingerprint?$DN?$AA@ DB '%s Fingerprint=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@ DB 'out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HJHNFFGB@notAfter?$DN?$AA@
CONST	SEGMENT
??_C@_09HJHNFFGB@notAfter?$DN?$AA@ DB 'notAfter=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IJECLNGC@notBefore?$DN?$AA@
CONST	SEGMENT
??_C@_0L@IJECLNGC@notBefore?$DN?$AA@ DB 'notBefore=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NEOKGDMP@unsigned?5char?5XXX_certificate?$FL?$CFd@
CONST	SEGMENT
??_C@_0CF@NEOKGDMP@unsigned?5char?5XXX_certificate?$FL?$CFd@ DB 'unsigned'
	DB	' char XXX_certificate[%d]={', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@JGFCJAHC@unsigned?5char?5XXX_public_key?$FL?$CFd?$FN@
CONST	SEGMENT
??_C@_0CE@JGFCJAHC@unsigned?5char?5XXX_public_key?$FL?$CFd?$FN@ DB 'unsig'
	DB	'ned char XXX_public_key[%d]={', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03JFDPLKFJ@?$HN?$DL?6?$AA@
CONST	SEGMENT
??_C@_03JFDPLKFJ@?$HN?$DL?6?$AA@ DB '};', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@
CONST	SEGMENT
??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@ DB '0x%02X,', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PACAHADJ@unsigned?5char?5XXX_subject_name?$FL?$CF@
CONST	SEGMENT
??_C@_0CG@PACAHADJ@unsigned?5char?5XXX_subject_name?$FL?$CF@ DB 'unsigned'
	DB	' char XXX_subject_name[%d]={', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@ DB 'Out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BAIBJPAO@?4?2apps?2x509?4c?$AA@
CONST	SEGMENT
??_C@_0O@BAIBJPAO@?4?2apps?2x509?4c?$AA@ DB '.\apps\x509.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LDLINKBM@?1?$CK?5issuer?5?3?$CFs?5?$CK?1?6?$AA@
CONST	SEGMENT
??_C@_0BC@LDLINKBM@?1?$CK?5issuer?5?3?$CFs?5?$CK?1?6?$AA@ DB '/* issuer :'
	DB	'%s */', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JINIIEIN@?1?$CK?5subject?3?$CFs?5?$CK?1?6?$AA@
CONST	SEGMENT
??_C@_0BC@JINIIEIN@?1?$CK?5subject?3?$CFs?5?$CK?1?6?$AA@ DB '/* subject:%'
	DB	's */', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GNCDDMAG@Error?5getting?5public?5key?6?$AA@
CONST	SEGMENT
??_C@_0BK@GNCDDMAG@Error?5getting?5public?5key?6?$AA@ DB 'Error getting p'
	DB	'ublic key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JNOIECJP@Wrong?5Algorithm?5type?$AA@
CONST	SEGMENT
??_C@_0BF@JNOIECJP@Wrong?5Algorithm?5type?$AA@ DB 'Wrong Algorithm type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CHIKBNMH@Modulus?$DN?$AA@
CONST	SEGMENT
??_C@_08CHIKBNMH@Modulus?$DN?$AA@ DB 'Modulus=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HHKPFLJJ@Modulus?$DNunavailable?6?$AA@
CONST	SEGMENT
??_C@_0BF@HHKPFLJJ@Modulus?$DNunavailable?6?$AA@ DB 'Modulus=unavailable', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HAADKFNF@Certificate?5purposes?3?6?$AA@
CONST	SEGMENT
??_C@_0BH@HAADKFNF@Certificate?5purposes?3?6?$AA@ DB 'Certificate purpose'
	DB	's:', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06LLMAFLIJ@?$CF08lx?6?$AA@
CONST	SEGMENT
??_C@_06LLMAFLIJ@?$CF08lx?6?$AA@ DB '%08lx', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DMDCGGEN@?$DMNo?5Alias?$DO?6?$AA@
CONST	SEGMENT
??_C@_0M@DMDCGGEN@?$DMNo?5Alias?$DO?6?$AA@ DB '<No Alias>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07BLPLIGMN@serial?$DN?$AA@
CONST	SEGMENT
??_C@_07BLPLIGMN@serial?$DN?$AA@ DB 'serial=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NNPGGNDL@subject?$DN?5?$AA@
CONST	SEGMENT
??_C@_09NNPGGNDL@subject?$DN?5?$AA@ DB 'subject= ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GEFFNOFC@issuer?$DN?5?$AA@
CONST	SEGMENT
??_C@_08GEFFNOFC@issuer?$DN?5?$AA@ DB 'issuer= ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FJOGABAJ@2?499999?43?$AA@
CONST	SEGMENT
??_C@_09FJOGABAJ@2?499999?43?$AA@ DB '2.99999.3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BMNIAOAA@SET?4ex3?$AA@
CONST	SEGMENT
??_C@_07BMNIAOAA@SET?4ex3?$AA@ DB 'SET.ex3', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FMKKHDCE@SET?5x509v3?5extension?53?$AA@
CONST	SEGMENT
??_C@_0BH@FMKKHDCE@SET?5x509v3?5extension?53?$AA@ DB 'SET x509v3 extensio'
	DB	'n 3', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LLKMHGCA@CA?5Certificate?$AA@
CONST	SEGMENT
??_C@_0P@LLKMHGCA@CA?5Certificate?$AA@ DB 'CA Certificate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KDOEPPNO@Certificate?$AA@
CONST	SEGMENT
??_C@_0M@KDOEPPNO@Certificate?$AA@ DB 'Certificate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MAHPNCKH@subject?$DN?$AA@
CONST	SEGMENT
??_C@_08MAHPNCKH@subject?$DN?$AA@ DB 'subject=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OKNNLJOD@Signature?5ok?6?$AA@
CONST	SEGMENT
??_C@_0O@OKNNLJOD@Signature?5ok?6?$AA@ DB 'Signature ok', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@IDIGBDHM@Signature?5did?5not?5match?5the?5cert@
CONST	SEGMENT
??_C@_0DB@IDIGBDHM@Signature?5did?5not?5match?5the?5cert@ DB 'Signature d'
	DB	'id not match the certificate request', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JBANEDLE@Signature?5verification?5error?6?$AA@
CONST	SEGMENT
??_C@_0BO@JBANEDLE@Signature?5verification?5error?6?$AA@ DB 'Signature ve'
	DB	'rification error', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JDNMMHMG@error?5unpacking?5public?5key?6?$AA@
CONST	SEGMENT
??_C@_0BM@JDNMMHMG@error?5unpacking?5public?5key?6?$AA@ DB 'error unpacki'
	DB	'ng public key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HEIPGIED@It?5does?5not?5contain?5a?5public?5key@
CONST	SEGMENT
??_C@_0CC@HEIPGIED@It?5does?5not?5contain?5a?5public?5key@ DB 'It does no'
	DB	't contain a public key', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FNAFFGC@The?5certificate?5request?5appears?5@
CONST	SEGMENT
??_C@_0CO@FNAFFGC@The?5certificate?5request?5appears?5@ DB 'The certifica'
	DB	'te request appears to corrupted', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LNAJKFAL@We?5need?5a?5private?5key?5to?5sign?5wi@
CONST	SEGMENT
??_C@_0CE@LNAJKFAL@We?5need?5a?5private?5key?5to?5sign?5wi@ DB 'We need a'
	DB	' private key to sign with', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@
CONST	SEGMENT
??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@ DB 'Error Loadin'
	DB	'g extension section %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLHCIBDH@default?$AA@
CONST	SEGMENT
??_C@_07DLHCIBDH@default?$AA@ DB 'default', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ICCCPLKC@extensions?$AA@
CONST	SEGMENT
??_C@_0L@ICCCPLKC@extensions?$AA@ DB 'extensions', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@
CONST	SEGMENT
??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@ DB 'error o'
	DB	'n line %ld of config file ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@
CONST	SEGMENT
??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@ DB 'error l'
	DB	'oading the config file ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@BNOINOBM@need?5to?5specify?5a?5CAkey?5if?5using@
CONST	SEGMENT
??_C@_0DB@BNOINOBM@need?5to?5specify?5a?5CAkey?5if?5using@ DB 'need to sp'
	DB	'ecify a CAkey if using the CA command', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NNLEDEDF@Forced?5key?$AA@
CONST	SEGMENT
??_C@_0L@NNLEDEDF@Forced?5key?$AA@ DB 'Forced key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
CONST	SEGMENT
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ DB 'Error getting pass'
	DB	'word', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07FPKNAFBC@?9badsig?$AA@
CONST	SEGMENT
??_C@_07FPKNAFBC@?9badsig?$AA@ DB '-badsig', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JIOKHCGG@?9ocspid?$AA@
CONST	SEGMENT
??_C@_07JIOKHCGG@?9ocspid?$AA@ DB '-ocspid', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DHLBEGN@use?5?9clrext?5instead?5of?5?9crlext?6?$AA@
CONST	SEGMENT
??_C@_0CA@DHLBEGN@use?5?9clrext?5instead?5of?5?9crlext?6?$AA@ DB 'use -cl'
	DB	'rext instead of -crlext', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EFJBLFME@?9crlext?$AA@
CONST	SEGMENT
??_C@_07EFJBLFME@?9crlext?$AA@ DB '-crlext', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KDJNPPMM@?9clrext?$AA@
CONST	SEGMENT
??_C@_07KDJNPPMM@?9clrext?$AA@ DB '-clrext', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JLHDJAAB@?9CAcreateserial?$AA@
CONST	SEGMENT
??_C@_0BA@JLHDJAAB@?9CAcreateserial?$AA@ DB '-CAcreateserial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FILKANMF@?9alias?$AA@
CONST	SEGMENT
??_C@_06FILKANMF@?9alias?$AA@ DB '-alias', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EKPECJFA@?9clrreject?$AA@
CONST	SEGMENT
??_C@_0L@EKPECJFA@?9clrreject?$AA@ DB '-clrreject', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GNCPBAFD@?9clrtrust?$AA@
CONST	SEGMENT
??_C@_09GNCPBAFD@?9clrtrust?$AA@ DB '-clrtrust', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KAHECMCN@?9trustout?$AA@
CONST	SEGMENT
??_C@_09KAHECMCN@?9trustout?$AA@ DB '-trustout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JPEJAHHH@?9noout?$AA@
CONST	SEGMENT
??_C@_06JPEJAHHH@?9noout?$AA@ DB '-noout', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IOMAEBFA@?9checkip?$AA@
CONST	SEGMENT
??_C@_08IOMAEBFA@?9checkip?$AA@ DB '-checkip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PMNMEFOA@?9checkemail?$AA@
CONST	SEGMENT
??_C@_0M@PMNMEFOA@?9checkemail?$AA@ DB '-checkemail', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JDJOKGBA@?9checkhost?$AA@
CONST	SEGMENT
??_C@_0L@JDJOKGBA@?9checkhost?$AA@ DB '-checkhost', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DGBKAONE@?9checkend?$AA@
CONST	SEGMENT
??_C@_09DGBKAONE@?9checkend?$AA@ DB '-checkend', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BOPFEEAL@?9enddate?$AA@
CONST	SEGMENT
??_C@_08BOPFEEAL@?9enddate?$AA@ DB '-enddate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DKBOBAPE@?9startdate?$AA@
CONST	SEGMENT
??_C@_0L@DKBOBAPE@?9startdate?$AA@ DB '-startdate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OKAIACAC@?9purpose?$AA@
CONST	SEGMENT
??_C@_08OKAIACAC@?9purpose?$AA@ DB '-purpose', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FFJNHPFJ@?9dates?$AA@
CONST	SEGMENT
??_C@_06FFJNHPFJ@?9dates?$AA@ DB '-dates', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DLPLBIOP@?9fingerprint?$AA@
CONST	SEGMENT
??_C@_0N@DLPLBIOP@?9fingerprint?$AA@ DB '-fingerprint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NKLAPJEG@?9issuer?$AA@
CONST	SEGMENT
??_C@_07NKLAPJEG@?9issuer?$AA@ DB '-issuer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GNEDOIFN@?9subject?$AA@
CONST	SEGMENT
??_C@_08GNEDOIFN@?9subject?$AA@ DB '-subject', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MNOEDPHA@?9issuer_hash_old?$AA@
CONST	SEGMENT
??_C@_0BB@MNOEDPHA@?9issuer_hash_old?$AA@ DB '-issuer_hash_old', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LOMHAGCP@?9issuer_hash?$AA@
CONST	SEGMENT
??_C@_0N@LOMHAGCP@?9issuer_hash?$AA@ DB '-issuer_hash', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BDJNBOA@?9subject_hash_old?$AA@
CONST	SEGMENT
??_C@_0BC@BDJNBOA@?9subject_hash_old?$AA@ DB '-subject_hash_old', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FNFEGFLA@?9subject_hash?$AA@
CONST	SEGMENT
??_C@_0O@FNFEGFLA@?9subject_hash?$AA@ DB '-subject_hash', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05CEEENDPI@?9hash?$AA@
CONST	SEGMENT
??_C@_05CEEENDPI@?9hash?$AA@ DB '-hash', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEBEIMJA@?9text?$AA@
CONST	SEGMENT
??_C@_05OEBEIMJA@?9text?$AA@ DB '-text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NCKBPJOO@?9x509toreq?$AA@
CONST	SEGMENT
??_C@_0L@NCKBPJOO@?9x509toreq?$AA@ DB '-x509toreq', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07PABNIEBD@?9pubkey?$AA@
CONST	SEGMENT
??_C@_07PABNIEBD@?9pubkey?$AA@ DB '-pubkey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJNHONAF@?9modulus?$AA@
CONST	SEGMENT
??_C@_08NJNHONAF@?9modulus?$AA@ DB '-modulus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OADGHLIA@?9next_serial?$AA@
CONST	SEGMENT
??_C@_0N@OADGHLIA@?9next_serial?$AA@ DB '-next_serial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DIHGINNE@?9serial?$AA@
CONST	SEGMENT
??_C@_07DIHGINNE@?9serial?$AA@ DB '-serial', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KICCFFNH@?9ocsp_uri?$AA@
CONST	SEGMENT
??_C@_09KICCFFNH@?9ocsp_uri?$AA@ DB '-ocsp_uri', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PILGBBKK@?9email?$AA@
CONST	SEGMENT
??_C@_06PILGBBKK@?9email?$AA@ DB '-email', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02OLHPOPJI@?9C?$AA@
CONST	SEGMENT
??_C@_02OLHPOPJI@?9C?$AA@ DB '-C', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BLLHKMDD@?9nameopt?$AA@
CONST	SEGMENT
??_C@_08BLLHKMDD@?9nameopt?$AA@ DB '-nameopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NLPNJDIN@?9certopt?$AA@
CONST	SEGMENT
??_C@_08NLPNJDIN@?9certopt?$AA@ DB '-certopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HLJHMPAG@?9setalias?$AA@
CONST	SEGMENT
??_C@_09HLJHMPAG@?9setalias?$AA@ DB '-setalias', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KCOFGJFD@Invalid?5reject?5object?5value?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0CA@KCOFGJFD@Invalid?5reject?5object?5value?5?$CFs?6?$AA@ DB 'Inval'
	DB	'id reject object value %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EPANGDNJ@?9addreject?$AA@
CONST	SEGMENT
??_C@_0L@EPANGDNJ@?9addreject?$AA@ DB '-addreject', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NKGJJHBM@Invalid?5trust?5object?5value?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BP@NKGJJHBM@Invalid?5trust?5object?5value?5?$CFs?6?$AA@ DB 'Invali'
	DB	'd trust object value %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JEDCIKJE@?9addtrust?$AA@
CONST	SEGMENT
??_C@_09JEDCIKJE@?9addtrust?$AA@ DB '-addtrust', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KONFNKID@?9force_pubkey?$AA@
CONST	SEGMENT
??_C@_0O@KONFNKID@?9force_pubkey?$AA@ DB '-force_pubkey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LDCLLBDG@?9set_serial?$AA@
CONST	SEGMENT
??_C@_0M@LDCLLBDG@?9set_serial?$AA@ DB '-set_serial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GECGDIJN@?9CAserial?$AA@
CONST	SEGMENT
??_C@_09GECGDIJN@?9CAserial?$AA@ DB '-CAserial', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HMGAMKJA@?9CAkey?$AA@
CONST	SEGMENT
??_C@_06HMGAMKJA@?9CAkey?$AA@ DB '-CAkey', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BHFNBKNN@?9CA?$AA@
CONST	SEGMENT
??_C@_03BHFNBKNN@?9CA?$AA@ DB '-CA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DJIMFMFI@?9signkey?$AA@
CONST	SEGMENT
??_C@_08DJIMFMFI@?9signkey?$AA@ DB '-signkey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BEOOFGDH@?9extensions?$AA@
CONST	SEGMENT
??_C@_0M@BEOOFGDH@?9extensions?$AA@ DB '-extensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LEGMGGCD@?9extfile?$AA@
CONST	SEGMENT
??_C@_08LEGMGGCD@?9extfile?$AA@ DB '-extfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JMIHLFEM@bad?5number?5of?5days?6?$AA@
CONST	SEGMENT
??_C@_0BE@JMIHLFEM@bad?5number?5of?5days?6?$AA@ DB 'bad number of days', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_05EFBFHALF@?9days?$AA@
CONST	SEGMENT
??_C@_05EFBFHALF@?9days?$AA@ DB '-days', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FNCAFLJP@?9sigopt?$AA@
CONST	SEGMENT
??_C@_07FNCAFLJP@?9sigopt?$AA@ DB '-sigopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OPCHGIOO@?9CAkeyform?$AA@
CONST	SEGMENT
??_C@_0L@OPCHGIOO@?9CAkeyform?$AA@ DB '-CAkeyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LLFICNFA@?9CAform?$AA@
CONST	SEGMENT
??_C@_07LLFICNFA@?9CAform?$AA@ DB '-CAform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04LJICMKDM@?9req?$AA@
CONST	SEGMENT
??_C@_04LJICMKDM@?9req?$AA@ DB '-req', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAHLMBGP@?9keyform?$AA@
CONST	SEGMENT
??_C@_08OAHLMBGP@?9keyform?$AA@ DB '-keyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LPHBEAIF@?9outform?$AA@
CONST	SEGMENT
??_C@_08LPHBEAIF@?9outform?$AA@ DB '-outform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGGPPMGB@?9inform?$AA@
CONST	SEGMENT
??_C@_07CGGPPMGB@?9inform?$AA@ DB '-inform', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x509_load_serial
_TEXT	SEGMENT
_bs$ = -4						; size = 4
_CAfile$ = 8						; size = 4
_serialfile$ = 12					; size = 4
_create$ = 16						; size = 4
_x509_load_serial PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\x509.c
; Line 1051
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
; Line 1057
	mov	ebp, DWORD PTR _serialfile$[esp+8]
	push	esi
	push	edi
	xor	edi, edi
	mov	DWORD PTR _bs$[esp+20], 0
	test	ebp, ebp
	jne	SHORT $LN14@x509_load_
	mov	ecx, DWORD PTR _CAfile$[esp+16]
	lea	edx, DWORD PTR [ecx+1]
$LL21@x509_load_:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL21@x509_load_
	sub	ecx, edx
	add	ecx, 5
	jmp	SHORT $LN15@x509_load_
$LN14@x509_load_:
	mov	ecx, ebp
	lea	edx, DWORD PTR [ecx+1]
	npad	6
$LL22@x509_load_:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL22@x509_load_
	sub	ecx, edx
$LN15@x509_load_:
; Line 1060
	push	1060					; 00000424H
	lea	ebx, DWORD PTR [ecx+1]
	push	OFFSET ??_C@_0O@BAIBJPAO@?4?2apps?2x509?4c?$AA@
	push	ebx
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1061
	test	esi, esi
	jne	SHORT $LN5@x509_load_
; Line 1062
	push	OFFSET ??_C@_0M@BNHBFJND@out?5of?5mem?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1091
	push	edi
	call	_BN_free
; Line 1092
	mov	eax, DWORD PTR _bs$[esp+24]
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1093
	pop	ecx
	ret	0
$LN5@x509_load_:
; Line 1066
	push	ebx
	test	ebp, ebp
	jne	SHORT $LN6@x509_load_
	push	DWORD PTR _CAfile$[esp+20]
	push	esi
	call	_BUF_strlcpy
	add	esp, 12					; 0000000cH
; Line 1067
	mov	eax, esi
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN3@x509_load_
$LL4@x509_load_:
; Line 1068
	cmp	BYTE PTR [eax], 46			; 0000002eH
	je	SHORT $LN17@x509_load_
; Line 1067
	inc	eax
	cmp	BYTE PTR [eax], 0
	jne	SHORT $LL4@x509_load_
; Line 1072
	push	ebx
	push	OFFSET ??_C@_04KAJLAOGA@?4srl?$AA@
	push	esi
	call	_BUF_strlcat
; Line 1073
	jmp	SHORT $LN23@x509_load_
$LN17@x509_load_:
; Line 1069
	mov	BYTE PTR [eax], 0
$LN3@x509_load_:
; Line 1072
	push	ebx
	push	OFFSET ??_C@_04KAJLAOGA@?4srl?$AA@
	push	esi
	call	_BUF_strlcat
; Line 1073
	jmp	SHORT $LN23@x509_load_
$LN6@x509_load_:
; Line 1074
	push	ebp
	push	esi
	call	_BUF_strlcpy
$LN23@x509_load_:
	add	esp, 12					; 0000000cH
; Line 1076
	push	0
	push	DWORD PTR _create$[esp+20]
	push	esi
	call	_load_serial
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 1077
	test	edi, edi
	je	SHORT $end$25
; Line 1080
	push	1
	push	edi
	call	_BN_add_word
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@x509_load_
; Line 1081
	push	OFFSET ??_C@_0BC@HACGEPHH@add_word?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1082
	jmp	SHORT $end$25
$LN10@x509_load_:
; Line 1085
	lea	eax, DWORD PTR _bs$[esp+20]
	push	eax
	push	edi
	push	0
	push	esi
	call	_save_serial
	add	esp, 16					; 00000010H
$end$25:
; Line 1090
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 1091
	push	edi
	call	_BN_free
; Line 1092
	mov	eax, DWORD PTR _bs$[esp+24]
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1093
	pop	ecx
	ret	0
_x509_load_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x509_main
_TEXT	SEGMENT
_num$1$ = -672						; size = 4
_STDout$1$ = -668					; size = 4
_x$1$ = -664						; size = 4
_CAformat$1$ = -660					; size = 4
_d$1 = -660						; size = 4
_out$1$ = -656						; size = 4
_i$4$ = -652						; size = 4
_infile$1$ = -652					; size = 4
_need_rand$1$ = -648					; size = 4
_CA_flag$1$ = -644					; size = 4
_extsect$1$ = -640					; size = 4
_extconf$1$ = -636					; size = 4
_sno$1$ = -632						; size = 4
_ret$1$ = -628						; size = 4
_extfile$1$ = -624					; size = 4
_e$1$ = -624						; size = 4
_nmflag$ = -620						; size = 4
_digest$1$ = -616					; size = 4
_noout$1$ = -612					; size = 4
_trustout$1$ = -608					; size = 4
_passin$ = -604						; size = 4
_fkeyfile$1$ = -600					; size = 4
_errorline$2 = -600					; size = 4
_clrreject$1$ = -596					; size = 4
_n$3 = -596						; size = 4
_CAfile$1$ = -592					; size = 4
_keyformat$1$ = -588					; size = 4
_ctx$1$ = -584						; size = 4
_sigopts$1$ = -580					; size = 4
_trust$1$ = -576					; size = 4
_reject$1$ = -572					; size = 4
_CAkeyfile$1$ = -568					; size = 4
_clrext$1$ = -564					; size = 4
_days$1$ = -560						; size = 4
_outformat$1$ = -556					; size = 4
_nx$4 = -556						; size = 8
_tcheck$5 = -556					; size = 8
_enddate$1$ = -548					; size = 4
_sign_flag$1$ = -544					; size = 4
_keyfile$1$ = -540					; size = 4
_next_serial$1$ = -536					; size = 4
_req$1$ = -532						; size = 4
_xca$1$ = -528						; size = 4
_x509req$1$ = -524					; size = 4
_CApkey$1$ = -520					; size = 4
_fkey$1$ = -516						; size = 4
_text$1$ = -512						; size = 4
_startdate$1$ = -508					; size = 4
_Upkey$1$ = -504					; size = 4
_informat$1$ = -500					; size = 4
_outfile$1$ = -496					; size = 4
_alias$1$ = -492					; size = 4
_clrtrust$1$ = -488					; size = 4
_passargin$1$ = -484					; size = 4
_issuer$1$ = -480					; size = 4
_subject$1$ = -476					; size = 4
_serial$1$ = -472					; size = 4
_email$1$ = -468					; size = 4
_ocsp_uri$1$ = -464					; size = 4
_aliasout$1$ = -460					; size = 4
_subject_hash$1$ = -456					; size = 4
_subject_hash_old$1$ = -452				; size = 4
_issuer_hash$1$ = -448					; size = 4
_issuer_hash_old$1$ = -444				; size = 4
_pprint$1$ = -440					; size = 4
_modulus$1$ = -436					; size = 4
_pubkey$1$ = -432					; size = 4
_C$1$ = -428						; size = 4
_certflag$ = -424					; size = 4
_fingerprint$1$ = -420					; size = 4
_CAkeyformat$1$ = -416					; size = 4
_CA_createserial$1$ = -412				; size = 4
_CAserial$1$ = -408					; size = 4
_ocspid$1$ = -404					; size = 4
_checkend$1$ = -400					; size = 4
_checkoffset$1$ = -396					; size = 4
_checkip$1$ = -392					; size = 4
_checkemail$1$ = -388					; size = 4
_checkhost$1$ = -384					; size = 4
_badsig$1$ = -380					; size = 4
_engine$1$ = -376					; size = 4
_rq$1$ = -372						; size = 4
_hdr$6 = -368						; size = 16
_ctx2$7 = -352						; size = 28
_md$8 = -324						; size = 64
_buf$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_x509_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\x509.c
; Line 176
	mov	eax, 672				; 000002a0H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+672], eax
; Line 229
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	eax, DWORD PTR _bio_err
	mov	ebx, DWORD PTR _argv$[esp+684]
	xor	esi, esi
	mov	DWORD PTR _ret$1$[esp+688], 1
	xor	ebp, ebp
	mov	DWORD PTR _req$1$[esp+688], 0
	mov	DWORD PTR _x$1$[esp+688], 0
	mov	DWORD PTR _xca$1$[esp+688], 0
	mov	DWORD PTR _sigopts$1$[esp+688], 0
	mov	DWORD PTR _Upkey$1$[esp+688], 0
	mov	DWORD PTR _CApkey$1$[esp+688], 0
	mov	DWORD PTR _fkey$1$[esp+688], 0
	mov	DWORD PTR _sno$1$[esp+688], 0
	mov	DWORD PTR _badsig$1$[esp+688], 0
	mov	DWORD PTR _out$1$[esp+688], 0
	mov	DWORD PTR _trust$1$[esp+688], esi
	mov	DWORD PTR _reject$1$[esp+688], esi
	mov	DWORD PTR _infile$1$[esp+688], esi
	mov	DWORD PTR _outfile$1$[esp+688], esi
	mov	DWORD PTR _keyfile$1$[esp+688], esi
	mov	DWORD PTR _CAfile$1$[esp+688], esi
	mov	DWORD PTR _CAkeyfile$1$[esp+688], esi
	mov	DWORD PTR _CAserial$1$[esp+688], esi
	mov	DWORD PTR _fkeyfile$1$[esp+688], esi
	mov	DWORD PTR _alias$1$[esp+688], esi
	mov	DWORD PTR _text$1$[esp+688], esi
	mov	DWORD PTR _serial$1$[esp+688], esi
	mov	DWORD PTR _subject$1$[esp+688], esi
	mov	DWORD PTR _issuer$1$[esp+688], esi
	mov	DWORD PTR _startdate$1$[esp+688], esi
	mov	DWORD PTR _enddate$1$[esp+688], esi
	mov	DWORD PTR _next_serial$1$[esp+688], esi
	mov	DWORD PTR _subject_hash$1$[esp+688], esi
	mov	DWORD PTR _issuer_hash$1$[esp+688], esi
	mov	DWORD PTR _ocspid$1$[esp+688], esi
	mov	DWORD PTR _subject_hash_old$1$[esp+688], esi
	mov	DWORD PTR _issuer_hash_old$1$[esp+688], esi
	mov	DWORD PTR _noout$1$[esp+688], esi
	mov	DWORD PTR _sign_flag$1$[esp+688], esi
	mov	DWORD PTR _CA_flag$1$[esp+688], esi
	mov	DWORD PTR _CA_createserial$1$[esp+688], esi
	mov	DWORD PTR _email$1$[esp+688], esi
	mov	DWORD PTR _ocsp_uri$1$[esp+688], esi
	mov	DWORD PTR _trustout$1$[esp+688], esi
	mov	DWORD PTR _clrtrust$1$[esp+688], esi
	mov	DWORD PTR _clrreject$1$[esp+688], esi
	mov	DWORD PTR _aliasout$1$[esp+688], esi
	mov	DWORD PTR _clrext$1$[esp+688], esi
	mov	DWORD PTR _C$1$[esp+688], esi
	mov	DWORD PTR _x509req$1$[esp+688], esi
	mov	DWORD PTR _days$1$[esp+688], 30		; 0000001eH
	mov	DWORD PTR _modulus$1$[esp+688], esi
	mov	DWORD PTR _pubkey$1$[esp+688], esi
	mov	DWORD PTR _pprint$1$[esp+688], esi
	mov	DWORD PTR _ctx$1$[esp+688], esi
	mov	DWORD PTR _rq$1$[esp+688], esi
	mov	DWORD PTR _fingerprint$1$[esp+688], esi
	mov	DWORD PTR _digest$1$[esp+688], esi
	mov	DWORD PTR _extconf$1$[esp+688], esi
	mov	DWORD PTR _extsect$1$[esp+688], esi
	mov	DWORD PTR _extfile$1$[esp+688], ebp
	mov	DWORD PTR _passin$[esp+688], esi
	mov	DWORD PTR _passargin$1$[esp+688], esi
	mov	DWORD PTR _need_rand$1$[esp+688], esi
	mov	DWORD PTR _checkend$1$[esp+688], esi
	mov	DWORD PTR _checkoffset$1$[esp+688], esi
	mov	DWORD PTR _nmflag$[esp+688], esi
	mov	DWORD PTR _certflag$[esp+688], esi
	mov	DWORD PTR _checkhost$1$[esp+688], esi
	mov	DWORD PTR _checkemail$1$[esp+688], esi
	mov	DWORD PTR _checkip$1$[esp+688], esi
	mov	DWORD PTR _engine$1$[esp+688], esi
	mov	DWORD PTR _reqfile, esi
	mov	edi, DWORD PTR __imp____acrt_iob_func
	test	eax, eax
	jne	SHORT $LN34@x509_main
; Line 230
	push	ebp
	push	2
	call	edi
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _bio_err, eax
$LN34@x509_main:
; Line 232
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN344@x509_main
; Line 234
	push	0
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
; Line 242
	mov	DWORD PTR _informat$1$[esp+688], 3
	mov	esi, eax
; Line 243
	mov	DWORD PTR _outformat$1$[esp+688], 3
	mov	DWORD PTR _STDout$1$[esp+688], esi
; Line 244
	mov	DWORD PTR _keyformat$1$[esp+688], 3
; Line 245
	mov	DWORD PTR _CAformat$1$[esp+688], 3
; Line 246
	mov	DWORD PTR _CAkeyformat$1$[esp+688], 3
; Line 248
	call	_X509_STORE_new
	mov	DWORD PTR _ctx$1$[esp+688], eax
; Line 249
	test	eax, eax
	je	$LN344@x509_main
; Line 251
	push	OFFSET _callb
	push	eax
	call	_X509_STORE_set_verify_cb
; Line 253
	mov	edi, DWORD PTR _argc$[esp+692]
	add	esp, 8
	dec	edi
; Line 255
	mov	DWORD PTR _num$1$[esp+688], ebp
	add	ebx, 4
; Line 256
	cmp	edi, 1
	jl	$LN447@x509_main
	mov	ebp, DWORD PTR __imp__atoi
	npad	1
$LL2@x509_main:
; Line 257
	mov	esi, DWORD PTR [ebx]
	mov	edx, OFFSET ??_C@_07CGGPPMGB@?9inform?$AA@
	mov	ecx, esi
	npad	7
$LL449@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN450@x509_main
	test	al, al
	je	SHORT $LN451@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN450@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL449@x509_main
$LN451@x509_main:
	xor	eax, eax
	jmp	SHORT $LN452@x509_main
$LN450@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN452@x509_main:
	test	eax, eax
	jne	SHORT $LN37@x509_main
; Line 258
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 260
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _informat$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN37@x509_main:
; Line 261
	mov	edx, OFFSET ??_C@_08LPHBEAIF@?9outform?$AA@
	mov	ecx, esi
$LL453@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN454@x509_main
	test	al, al
	je	SHORT $LN455@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN454@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL453@x509_main
$LN455@x509_main:
	xor	eax, eax
	jmp	SHORT $LN456@x509_main
$LN454@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN456@x509_main:
	test	eax, eax
	jne	SHORT $LN40@x509_main
; Line 262
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 264
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _outformat$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN40@x509_main:
; Line 265
	mov	edx, OFFSET ??_C@_08OAHLMBGP@?9keyform?$AA@
	mov	ecx, esi
$LL457@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN458@x509_main
	test	al, al
	je	SHORT $LN459@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN458@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL457@x509_main
$LN459@x509_main:
	xor	eax, eax
	jmp	SHORT $LN460@x509_main
$LN458@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN460@x509_main:
	test	eax, eax
	jne	SHORT $LN43@x509_main
; Line 266
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 268
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _keyformat$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN43@x509_main:
; Line 269
	mov	edx, OFFSET ??_C@_04LJICMKDM@?9req?$AA@
	mov	ecx, esi
	npad	7
$LL461@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN462@x509_main
	test	al, al
	je	SHORT $LN463@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN462@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL461@x509_main
$LN463@x509_main:
	xor	eax, eax
	jmp	SHORT $LN464@x509_main
$LN462@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN464@x509_main:
	test	eax, eax
	jne	SHORT $LN46@x509_main
; Line 270
	mov	DWORD PTR _reqfile, 1
; Line 271
	mov	DWORD PTR _need_rand$1$[esp+688], 1
	jmp	$LN196@x509_main
$LN46@x509_main:
; Line 272
	mov	edx, OFFSET ??_C@_07LLFICNFA@?9CAform?$AA@
	mov	ecx, esi
$LL465@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN466@x509_main
	test	al, al
	je	SHORT $LN467@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN466@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL465@x509_main
$LN467@x509_main:
	xor	eax, eax
	jmp	SHORT $LN468@x509_main
$LN466@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN468@x509_main:
	test	eax, eax
	jne	SHORT $LN48@x509_main
; Line 273
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 275
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _CAformat$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN48@x509_main:
; Line 276
	mov	edx, OFFSET ??_C@_0L@OPCHGIOO@?9CAkeyform?$AA@
	mov	ecx, esi
$LL469@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN470@x509_main
	test	al, al
	je	SHORT $LN471@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN470@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL469@x509_main
$LN471@x509_main:
	xor	eax, eax
	jmp	SHORT $LN472@x509_main
$LN470@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN472@x509_main:
	test	eax, eax
	jne	SHORT $LN51@x509_main
; Line 277
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 279
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _CAkeyformat$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN51@x509_main:
; Line 280
	mov	edx, OFFSET ??_C@_07FNCAFLJP@?9sigopt?$AA@
	mov	ecx, esi
	npad	4
$LL473@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN474@x509_main
	test	al, al
	je	SHORT $LN475@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN474@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL473@x509_main
$LN475@x509_main:
	xor	eax, eax
	jmp	SHORT $LN476@x509_main
$LN474@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN476@x509_main:
	test	eax, eax
	jne	SHORT $LN54@x509_main
; Line 281
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 283
	mov	eax, DWORD PTR _sigopts$1$[esp+688]
	test	eax, eax
	jne	SHORT $LN446@x509_main
; Line 284
	call	_sk_new_null
	mov	DWORD PTR _sigopts$1$[esp+688], eax
; Line 285
	test	eax, eax
	je	$bad$751
$LN446@x509_main:
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$bad$751
; Line 287
	jmp	$LN196@x509_main
$LN54@x509_main:
; Line 295
	mov	edx, OFFSET ??_C@_05EFBFHALF@?9days?$AA@
	mov	ecx, esi
	npad	1
$LL477@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN478@x509_main
	test	al, al
	je	SHORT $LN479@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN478@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL477@x509_main
$LN479@x509_main:
	xor	eax, eax
	jmp	SHORT $LN480@x509_main
$LN478@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN480@x509_main:
	test	eax, eax
	jne	SHORT $LN60@x509_main
; Line 296
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 298
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	ebp
	add	esp, 4
	mov	DWORD PTR _days$1$[esp+688], eax
; Line 299
	test	eax, eax
	jne	$LN196@x509_main
; Line 300
	push	OFFSET ??_C@_0BE@JMIHLFEM@bad?5number?5of?5days?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 301
	jmp	$bad$751
$LN60@x509_main:
; Line 303
	mov	edx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	ecx, esi
	npad	4
$LL481@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN482@x509_main
	test	al, al
	je	SHORT $LN483@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN482@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL481@x509_main
$LN483@x509_main:
	xor	eax, eax
	jmp	SHORT $LN484@x509_main
$LN482@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN484@x509_main:
	test	eax, eax
	jne	SHORT $LN64@x509_main
; Line 304
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 306
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _passargin$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN64@x509_main:
; Line 307
	mov	edx, OFFSET ??_C@_08LEGMGGCD@?9extfile?$AA@
	mov	ecx, esi
	npad	4
$LL485@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN486@x509_main
	test	al, al
	je	SHORT $LN487@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN486@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL485@x509_main
$LN487@x509_main:
	xor	eax, eax
	jmp	SHORT $LN488@x509_main
$LN486@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN488@x509_main:
	test	eax, eax
	jne	SHORT $LN67@x509_main
; Line 308
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 310
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _extfile$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN67@x509_main:
; Line 311
	mov	edx, OFFSET ??_C@_0M@BEOOFGDH@?9extensions?$AA@
	mov	ecx, esi
	npad	7
$LL489@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN490@x509_main
	test	al, al
	je	SHORT $LN491@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN490@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL489@x509_main
$LN491@x509_main:
	xor	eax, eax
	jmp	SHORT $LN492@x509_main
$LN490@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN492@x509_main:
	test	eax, eax
	jne	SHORT $LN70@x509_main
; Line 312
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 314
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _extsect$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN70@x509_main:
; Line 315
	mov	edx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	ecx, esi
	npad	7
$LL493@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN494@x509_main
	test	al, al
	je	SHORT $LN495@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN494@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL493@x509_main
$LN495@x509_main:
	xor	eax, eax
	jmp	SHORT $LN496@x509_main
$LN494@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN496@x509_main:
	test	eax, eax
	jne	SHORT $LN73@x509_main
; Line 316
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 318
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _infile$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN73@x509_main:
; Line 319
	mov	edx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	ecx, esi
	npad	7
$LL497@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN498@x509_main
	test	al, al
	je	SHORT $LN499@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN498@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL497@x509_main
$LN499@x509_main:
	xor	eax, eax
	jmp	SHORT $LN500@x509_main
$LN498@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN500@x509_main:
	test	eax, eax
	jne	SHORT $LN76@x509_main
; Line 320
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 322
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN76@x509_main:
; Line 323
	mov	edx, OFFSET ??_C@_08DJIMFMFI@?9signkey?$AA@
	mov	ecx, esi
	npad	4
$LL501@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN502@x509_main
	test	al, al
	je	SHORT $LN503@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN502@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL501@x509_main
$LN503@x509_main:
	xor	eax, eax
	jmp	SHORT $LN504@x509_main
$LN502@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN504@x509_main:
	test	eax, eax
	jne	SHORT $LN79@x509_main
; Line 324
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 326
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _keyfile$1$[esp+688], eax
; Line 327
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
; Line 328
	mov	DWORD PTR _need_rand$1$[esp+688], 1
	mov	DWORD PTR _sign_flag$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN79@x509_main:
; Line 329
	mov	edx, OFFSET ??_C@_03BHFNBKNN@?9CA?$AA@
	mov	ecx, esi
$LL505@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN506@x509_main
	test	al, al
	je	SHORT $LN507@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN506@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL505@x509_main
$LN507@x509_main:
	xor	eax, eax
	jmp	SHORT $LN508@x509_main
$LN506@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN508@x509_main:
	test	eax, eax
	jne	SHORT $LN82@x509_main
; Line 330
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 332
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _CAfile$1$[esp+688], eax
; Line 333
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
; Line 334
	mov	DWORD PTR _need_rand$1$[esp+688], 1
	mov	DWORD PTR _CA_flag$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN82@x509_main:
; Line 335
	mov	edx, OFFSET ??_C@_06HMGAMKJA@?9CAkey?$AA@
	mov	ecx, esi
	npad	6
$LL509@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN510@x509_main
	test	al, al
	je	SHORT $LN511@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN510@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL509@x509_main
$LN511@x509_main:
	xor	eax, eax
	jmp	SHORT $LN512@x509_main
$LN510@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN512@x509_main:
	test	eax, eax
	jne	SHORT $LN85@x509_main
; Line 336
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 338
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _CAkeyfile$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN85@x509_main:
; Line 339
	mov	edx, OFFSET ??_C@_09GECGDIJN@?9CAserial?$AA@
	mov	ecx, esi
	npad	7
$LL513@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN514@x509_main
	test	al, al
	je	SHORT $LN515@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN514@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL513@x509_main
$LN515@x509_main:
	xor	eax, eax
	jmp	SHORT $LN516@x509_main
$LN514@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN516@x509_main:
	test	eax, eax
	jne	SHORT $LN88@x509_main
; Line 340
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 342
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _CAserial$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN88@x509_main:
; Line 343
	mov	edx, OFFSET ??_C@_0M@LDCLLBDG@?9set_serial?$AA@
	mov	ecx, esi
	npad	4
$LL517@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN518@x509_main
	test	al, al
	je	SHORT $LN519@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN518@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL517@x509_main
$LN519@x509_main:
	xor	eax, eax
	jmp	SHORT $LN520@x509_main
$LN518@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN520@x509_main:
	test	eax, eax
	jne	SHORT $LN91@x509_main
; Line 344
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 346
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	push	eax
	call	_s2i_ASN1_INTEGER
	add	esp, 8
	mov	DWORD PTR _sno$1$[esp+688], eax
	test	eax, eax
	je	$bad$751
; Line 348
	jmp	$LN196@x509_main
$LN91@x509_main:
	mov	edx, OFFSET ??_C@_0O@KONFNKID@?9force_pubkey?$AA@
	mov	ecx, esi
	npad	6
$LL521@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN522@x509_main
	test	al, al
	je	SHORT $LN523@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN522@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL521@x509_main
$LN523@x509_main:
	xor	eax, eax
	jmp	SHORT $LN524@x509_main
$LN522@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN524@x509_main:
	test	eax, eax
	jne	SHORT $LN95@x509_main
; Line 349
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 351
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _fkeyfile$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN95@x509_main:
; Line 352
	mov	edx, OFFSET ??_C@_09JEDCIKJE@?9addtrust?$AA@
	mov	ecx, esi
	npad	7
$LL525@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN526@x509_main
	test	al, al
	je	SHORT $LN527@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN526@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL525@x509_main
$LN527@x509_main:
	xor	eax, eax
	jmp	SHORT $LN528@x509_main
$LN526@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN528@x509_main:
	test	eax, eax
	jne	SHORT $LN98@x509_main
; Line 353
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 355
	add	ebx, 4
	push	eax
	push	DWORD PTR [ebx]
	call	_OBJ_txt2obj
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	$LN385@x509_main
; Line 359
	mov	eax, DWORD PTR _trust$1$[esp+688]
	test	eax, eax
	jne	SHORT $LN107@x509_main
; Line 360
	call	_sk_new_null
	mov	DWORD PTR _trust$1$[esp+688], eax
; Line 362
	jmp	SHORT $LN107@x509_main
$LN98@x509_main:
; Line 363
	mov	edx, OFFSET ??_C@_0L@EPANGDNJ@?9addreject?$AA@
	mov	ecx, esi
$LL529@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN530@x509_main
	test	al, al
	je	SHORT $LN531@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN530@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL529@x509_main
$LN531@x509_main:
	xor	eax, eax
	jmp	SHORT $LN532@x509_main
$LN530@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN532@x509_main:
	test	eax, eax
	jne	SHORT $LN103@x509_main
; Line 364
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 366
	add	ebx, 4
	push	eax
	push	DWORD PTR [ebx]
	call	_OBJ_txt2obj
	mov	esi, eax
	add	esp, 8
	test	esi, esi
	je	$LN387@x509_main
; Line 371
	mov	eax, DWORD PTR _reject$1$[esp+688]
	test	eax, eax
	jne	SHORT $LN107@x509_main
; Line 372
	call	_sk_new_null
	mov	DWORD PTR _reject$1$[esp+688], eax
$LN107@x509_main:
; Line 373
	push	esi
	push	eax
	call	_sk_push
	add	esp, 8
; Line 374
	mov	DWORD PTR _trustout$1$[esp+688], 1
	jmp	$LN196@x509_main
$LN103@x509_main:
; Line 375
	mov	edx, OFFSET ??_C@_09HLJHMPAG@?9setalias?$AA@
	mov	ecx, esi
	npad	1
$LL533@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN534@x509_main
	test	al, al
	je	SHORT $LN535@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN534@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL533@x509_main
$LN535@x509_main:
	xor	eax, eax
	jmp	SHORT $LN536@x509_main
$LN534@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN536@x509_main:
	test	eax, eax
	jne	SHORT $LN108@x509_main
; Line 376
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 378
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _alias$1$[esp+688], eax
; Line 379
	mov	DWORD PTR _trustout$1$[esp+688], 1
	jmp	$LN196@x509_main
$LN108@x509_main:
; Line 380
	mov	edx, OFFSET ??_C@_08NLPNJDIN@?9certopt?$AA@
	mov	ecx, esi
$LL537@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN538@x509_main
	test	al, al
	je	SHORT $LN539@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN538@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL537@x509_main
$LN539@x509_main:
	xor	eax, eax
	jmp	SHORT $LN540@x509_main
$LN538@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN540@x509_main:
	test	eax, eax
	jne	SHORT $LN111@x509_main
; Line 381
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 383
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	lea	eax, DWORD PTR _certflag$[esp+692]
	push	eax
	call	_set_cert_ex
	add	esp, 8
	test	eax, eax
	je	$bad$751
; Line 385
	jmp	$LN196@x509_main
$LN111@x509_main:
	mov	edx, OFFSET ??_C@_08BLLHKMDD@?9nameopt?$AA@
	mov	ecx, esi
$LL541@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN542@x509_main
	test	al, al
	je	SHORT $LN543@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN542@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL541@x509_main
$LN543@x509_main:
	xor	eax, eax
	jmp	SHORT $LN544@x509_main
$LN542@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN544@x509_main:
	test	eax, eax
	jne	SHORT $LN115@x509_main
; Line 386
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 388
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	lea	eax, DWORD PTR _nmflag$[esp+692]
	push	eax
	call	_set_name_ex
	add	esp, 8
	test	eax, eax
	je	$bad$751
; Line 390
	jmp	$LN196@x509_main
$LN115@x509_main:
; Line 392
	mov	edx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	ecx, esi
	npad	5
$LL545@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN546@x509_main
	test	al, al
	je	SHORT $LN547@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN546@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL545@x509_main
$LN547@x509_main:
	xor	eax, eax
	jmp	SHORT $LN548@x509_main
$LN546@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN548@x509_main:
	test	eax, eax
	jne	SHORT $LN119@x509_main
; Line 393
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 395
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _engine$1$[esp+688], eax
; Line 396
	jmp	$LN196@x509_main
$LN119@x509_main:
; Line 398
	mov	edx, OFFSET ??_C@_02OLHPOPJI@?9C?$AA@
	mov	ecx, esi
	npad	4
$LL549@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN550@x509_main
	test	al, al
	je	SHORT $LN551@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN550@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL549@x509_main
$LN551@x509_main:
	xor	eax, eax
	jmp	SHORT $LN552@x509_main
$LN550@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN552@x509_main:
	test	eax, eax
	jne	SHORT $LN122@x509_main
; Line 399
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _C$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN122@x509_main:
; Line 400
	mov	edx, OFFSET ??_C@_06PILGBBKK@?9email?$AA@
	mov	ecx, esi
$LL553@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN554@x509_main
	test	al, al
	je	SHORT $LN555@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN554@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL553@x509_main
$LN555@x509_main:
	xor	eax, eax
	jmp	SHORT $LN556@x509_main
$LN554@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN556@x509_main:
	test	eax, eax
	jne	SHORT $LN124@x509_main
; Line 401
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _email$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN124@x509_main:
; Line 402
	mov	edx, OFFSET ??_C@_09KICCFFNH@?9ocsp_uri?$AA@
	mov	ecx, esi
$LL557@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN558@x509_main
	test	al, al
	je	SHORT $LN559@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN558@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL557@x509_main
$LN559@x509_main:
	xor	eax, eax
	jmp	SHORT $LN560@x509_main
$LN558@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN560@x509_main:
	test	eax, eax
	jne	SHORT $LN126@x509_main
; Line 403
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _ocsp_uri$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN126@x509_main:
; Line 404
	mov	edx, OFFSET ??_C@_07DIHGINNE@?9serial?$AA@
	mov	ecx, esi
$LL561@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN562@x509_main
	test	al, al
	je	SHORT $LN563@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN562@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL561@x509_main
$LN563@x509_main:
	xor	eax, eax
	jmp	SHORT $LN564@x509_main
$LN562@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN564@x509_main:
	test	eax, eax
	jne	SHORT $LN128@x509_main
; Line 405
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _serial$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN128@x509_main:
; Line 406
	mov	edx, OFFSET ??_C@_0N@OADGHLIA@?9next_serial?$AA@
	mov	ecx, esi
$LL565@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN566@x509_main
	test	al, al
	je	SHORT $LN567@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN566@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL565@x509_main
$LN567@x509_main:
	xor	eax, eax
	jmp	SHORT $LN568@x509_main
$LN566@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN568@x509_main:
	test	eax, eax
	jne	SHORT $LN130@x509_main
; Line 407
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _next_serial$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN130@x509_main:
; Line 408
	mov	edx, OFFSET ??_C@_08NJNHONAF@?9modulus?$AA@
	mov	ecx, esi
$LL569@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN570@x509_main
	test	al, al
	je	SHORT $LN571@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN570@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL569@x509_main
$LN571@x509_main:
	xor	eax, eax
	jmp	SHORT $LN572@x509_main
$LN570@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN572@x509_main:
	test	eax, eax
	jne	SHORT $LN132@x509_main
; Line 409
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _modulus$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN132@x509_main:
; Line 410
	mov	edx, OFFSET ??_C@_07PABNIEBD@?9pubkey?$AA@
	mov	ecx, esi
$LL573@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN574@x509_main
	test	al, al
	je	SHORT $LN575@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN574@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL573@x509_main
$LN575@x509_main:
	xor	eax, eax
	jmp	SHORT $LN576@x509_main
$LN574@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN576@x509_main:
	test	eax, eax
	jne	SHORT $LN134@x509_main
; Line 411
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _pubkey$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN134@x509_main:
; Line 412
	mov	edx, OFFSET ??_C@_0L@NCKBPJOO@?9x509toreq?$AA@
	mov	ecx, esi
$LL577@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN578@x509_main
	test	al, al
	je	SHORT $LN579@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN578@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL577@x509_main
$LN579@x509_main:
	xor	eax, eax
	jmp	SHORT $LN580@x509_main
$LN578@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN580@x509_main:
	test	eax, eax
	jne	SHORT $LN136@x509_main
; Line 413
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _x509req$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN136@x509_main:
; Line 414
	mov	edx, OFFSET ??_C@_05OEBEIMJA@?9text?$AA@
	mov	ecx, esi
$LL581@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN582@x509_main
	test	al, al
	je	SHORT $LN583@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN582@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL581@x509_main
$LN583@x509_main:
	xor	eax, eax
	jmp	SHORT $LN584@x509_main
$LN582@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN584@x509_main:
	test	eax, eax
	jne	SHORT $LN138@x509_main
; Line 415
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _text$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN138@x509_main:
; Line 417
	mov	edx, OFFSET ??_C@_05CEEENDPI@?9hash?$AA@
	mov	ecx, esi
	npad	7
$LL585@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN586@x509_main
	test	al, al
	je	SHORT $LN587@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN586@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL585@x509_main
$LN587@x509_main:
	xor	eax, eax
	jmp	SHORT $LN588@x509_main
$LN586@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN588@x509_main:
	test	eax, eax
	je	$LN142@x509_main
	mov	edx, OFFSET ??_C@_0O@FNFEGFLA@?9subject_hash?$AA@
	mov	ecx, esi
$LL589@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN590@x509_main
	test	al, al
	je	SHORT $LN591@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN590@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL589@x509_main
$LN591@x509_main:
	xor	eax, eax
	jmp	SHORT $LN592@x509_main
$LN590@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN592@x509_main:
	test	eax, eax
	je	$LN142@x509_main
; Line 420
	mov	edx, OFFSET ??_C@_0BC@BDJNBOA@?9subject_hash_old?$AA@
	mov	ecx, esi
$LL593@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN594@x509_main
	test	al, al
	je	SHORT $LN595@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN594@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL593@x509_main
$LN595@x509_main:
	xor	eax, eax
	jmp	SHORT $LN596@x509_main
$LN594@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN596@x509_main:
	test	eax, eax
	jne	SHORT $LN143@x509_main
; Line 421
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _subject_hash_old$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN143@x509_main:
; Line 423
	mov	edx, OFFSET ??_C@_0N@LOMHAGCP@?9issuer_hash?$AA@
	mov	ecx, esi
	npad	7
$LL597@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN598@x509_main
	test	al, al
	je	SHORT $LN599@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN598@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL597@x509_main
$LN599@x509_main:
	xor	eax, eax
	jmp	SHORT $LN600@x509_main
$LN598@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN600@x509_main:
	test	eax, eax
	jne	SHORT $LN145@x509_main
; Line 424
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _issuer_hash$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN145@x509_main:
; Line 426
	mov	edx, OFFSET ??_C@_0BB@MNOEDPHA@?9issuer_hash_old?$AA@
	mov	ecx, esi
$LL601@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN602@x509_main
	test	al, al
	je	SHORT $LN603@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN602@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL601@x509_main
$LN603@x509_main:
	xor	eax, eax
	jmp	SHORT $LN604@x509_main
$LN602@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN604@x509_main:
	test	eax, eax
	jne	SHORT $LN147@x509_main
; Line 427
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _issuer_hash_old$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN147@x509_main:
; Line 429
	mov	edx, OFFSET ??_C@_08GNEDOIFN@?9subject?$AA@
	mov	ecx, esi
$LL605@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN606@x509_main
	test	al, al
	je	SHORT $LN607@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN606@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL605@x509_main
$LN607@x509_main:
	xor	eax, eax
	jmp	SHORT $LN608@x509_main
$LN606@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN608@x509_main:
	test	eax, eax
	jne	SHORT $LN149@x509_main
; Line 430
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _subject$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN149@x509_main:
; Line 431
	mov	edx, OFFSET ??_C@_07NKLAPJEG@?9issuer?$AA@
	mov	ecx, esi
$LL609@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN610@x509_main
	test	al, al
	je	SHORT $LN611@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN610@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL609@x509_main
$LN611@x509_main:
	xor	eax, eax
	jmp	SHORT $LN612@x509_main
$LN610@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN612@x509_main:
	test	eax, eax
	jne	SHORT $LN151@x509_main
; Line 432
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _issuer$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN151@x509_main:
; Line 433
	mov	edx, OFFSET ??_C@_0N@DLPLBIOP@?9fingerprint?$AA@
	mov	ecx, esi
$LL613@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN614@x509_main
	test	al, al
	je	SHORT $LN615@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN614@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL613@x509_main
$LN615@x509_main:
	xor	eax, eax
	jmp	SHORT $LN616@x509_main
$LN614@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN616@x509_main:
	test	eax, eax
	jne	SHORT $LN153@x509_main
; Line 434
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _fingerprint$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN153@x509_main:
; Line 435
	mov	edx, OFFSET ??_C@_06FFJNHPFJ@?9dates?$AA@
	mov	ecx, esi
$LL617@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN618@x509_main
	test	al, al
	je	SHORT $LN619@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN618@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL617@x509_main
$LN619@x509_main:
	xor	eax, eax
	jmp	SHORT $LN620@x509_main
$LN618@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN620@x509_main:
	test	eax, eax
	jne	SHORT $LN155@x509_main
; Line 436
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _startdate$1$[esp+688], eax
; Line 437
	inc	eax
	mov	DWORD PTR _enddate$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN155@x509_main:
; Line 438
	mov	edx, OFFSET ??_C@_08OKAIACAC@?9purpose?$AA@
	mov	ecx, esi
	npad	2
$LL621@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN622@x509_main
	test	al, al
	je	SHORT $LN623@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN622@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL621@x509_main
$LN623@x509_main:
	xor	eax, eax
	jmp	SHORT $LN624@x509_main
$LN622@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN624@x509_main:
	test	eax, eax
	jne	SHORT $LN157@x509_main
; Line 439
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _pprint$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN157@x509_main:
; Line 440
	mov	edx, OFFSET ??_C@_0L@DKBOBAPE@?9startdate?$AA@
	mov	ecx, esi
$LL625@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN626@x509_main
	test	al, al
	je	SHORT $LN627@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN626@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL625@x509_main
$LN627@x509_main:
	xor	eax, eax
	jmp	SHORT $LN628@x509_main
$LN626@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN628@x509_main:
	test	eax, eax
	jne	SHORT $LN159@x509_main
; Line 441
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _startdate$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN159@x509_main:
; Line 442
	mov	edx, OFFSET ??_C@_08BOPFEEAL@?9enddate?$AA@
	mov	ecx, esi
$LL629@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN630@x509_main
	test	al, al
	je	SHORT $LN631@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN630@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL629@x509_main
$LN631@x509_main:
	xor	eax, eax
	jmp	SHORT $LN632@x509_main
$LN630@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN632@x509_main:
	test	eax, eax
	jne	SHORT $LN161@x509_main
; Line 443
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _enddate$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN161@x509_main:
; Line 444
	mov	edx, OFFSET ??_C@_09DGBKAONE@?9checkend?$AA@
	mov	ecx, esi
$LL633@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN634@x509_main
	test	al, al
	je	SHORT $LN635@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN634@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL633@x509_main
$LN635@x509_main:
	xor	eax, eax
	jmp	SHORT $LN636@x509_main
$LN634@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN636@x509_main:
	test	eax, eax
	jne	SHORT $LN163@x509_main
; Line 445
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 447
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	ebp
	add	esp, 4
	mov	DWORD PTR _checkoffset$1$[esp+688], eax
; Line 448
	mov	DWORD PTR _checkend$1$[esp+688], 1
	jmp	$LN196@x509_main
$LN163@x509_main:
; Line 449
	mov	edx, OFFSET ??_C@_0L@JDJOKGBA@?9checkhost?$AA@
	mov	ecx, esi
	npad	1
$LL637@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN638@x509_main
	test	al, al
	je	SHORT $LN639@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN638@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL637@x509_main
$LN639@x509_main:
	xor	eax, eax
	jmp	SHORT $LN640@x509_main
$LN638@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN640@x509_main:
	test	eax, eax
	jne	SHORT $LN166@x509_main
; Line 450
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 452
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _checkhost$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN166@x509_main:
; Line 453
	mov	edx, OFFSET ??_C@_0M@PMNMEFOA@?9checkemail?$AA@
	mov	ecx, esi
	npad	4
$LL641@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN642@x509_main
	test	al, al
	je	SHORT $LN643@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN642@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL641@x509_main
$LN643@x509_main:
	xor	eax, eax
	jmp	SHORT $LN644@x509_main
$LN642@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN644@x509_main:
	test	eax, eax
	jne	SHORT $LN169@x509_main
; Line 454
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 456
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _checkemail$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN169@x509_main:
; Line 457
	mov	edx, OFFSET ??_C@_08IOMAEBFA@?9checkip?$AA@
	mov	ecx, esi
	npad	4
$LL645@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN646@x509_main
	test	al, al
	je	SHORT $LN647@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN646@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL645@x509_main
$LN647@x509_main:
	xor	eax, eax
	jmp	SHORT $LN648@x509_main
$LN646@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN648@x509_main:
	test	eax, eax
	jne	SHORT $LN172@x509_main
; Line 458
	dec	edi
	cmp	edi, 1
	jl	$bad$751
; Line 460
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _checkip$1$[esp+688], eax
	jmp	$LN196@x509_main
$LN172@x509_main:
; Line 461
	mov	edx, OFFSET ??_C@_06JPEJAHHH@?9noout?$AA@
	mov	ecx, esi
	npad	4
$LL649@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN650@x509_main
	test	al, al
	je	SHORT $LN651@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN650@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL649@x509_main
$LN651@x509_main:
	xor	eax, eax
	jmp	SHORT $LN652@x509_main
$LN650@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN652@x509_main:
	test	eax, eax
	jne	SHORT $LN175@x509_main
; Line 462
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _noout$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN175@x509_main:
; Line 463
	mov	edx, OFFSET ??_C@_09KAHECMCN@?9trustout?$AA@
	mov	ecx, esi
	npad	2
$LL653@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN654@x509_main
	test	al, al
	je	SHORT $LN655@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN654@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL653@x509_main
$LN655@x509_main:
	xor	eax, eax
	jmp	SHORT $LN656@x509_main
$LN654@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN656@x509_main:
	test	eax, eax
	jne	SHORT $LN177@x509_main
; Line 464
	mov	DWORD PTR _trustout$1$[esp+688], 1
	jmp	$LN196@x509_main
$LN177@x509_main:
; Line 465
	mov	edx, OFFSET ??_C@_09GNCPBAFD@?9clrtrust?$AA@
	mov	ecx, esi
	npad	3
$LL657@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN658@x509_main
	test	al, al
	je	SHORT $LN659@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN658@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL657@x509_main
$LN659@x509_main:
	xor	eax, eax
	jmp	SHORT $LN660@x509_main
$LN658@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN660@x509_main:
	test	eax, eax
	jne	SHORT $LN179@x509_main
; Line 466
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _clrtrust$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN179@x509_main:
; Line 467
	mov	edx, OFFSET ??_C@_0L@EKPECJFA@?9clrreject?$AA@
	mov	ecx, esi
$LL661@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN662@x509_main
	test	al, al
	je	SHORT $LN663@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN662@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL661@x509_main
$LN663@x509_main:
	xor	eax, eax
	jmp	SHORT $LN664@x509_main
$LN662@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN664@x509_main:
	test	eax, eax
	jne	SHORT $LN181@x509_main
; Line 468
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _clrreject$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN181@x509_main:
; Line 469
	mov	edx, OFFSET ??_C@_06FILKANMF@?9alias?$AA@
	mov	ecx, esi
	npad	1
$LL665@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN666@x509_main
	test	al, al
	je	SHORT $LN667@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN666@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL665@x509_main
$LN667@x509_main:
	xor	eax, eax
	jmp	SHORT $LN668@x509_main
$LN666@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN668@x509_main:
	test	eax, eax
	jne	SHORT $LN183@x509_main
; Line 470
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _aliasout$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN183@x509_main:
; Line 471
	mov	edx, OFFSET ??_C@_0BA@JLHDJAAB@?9CAcreateserial?$AA@
	mov	ecx, esi
$LL669@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN670@x509_main
	test	al, al
	je	SHORT $LN671@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN670@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL669@x509_main
$LN671@x509_main:
	xor	eax, eax
	jmp	SHORT $LN672@x509_main
$LN670@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN672@x509_main:
	test	eax, eax
	jne	SHORT $LN185@x509_main
; Line 472
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _CA_createserial$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN185@x509_main:
; Line 473
	mov	edx, OFFSET ??_C@_07KDJNPPMM@?9clrext?$AA@
	mov	ecx, esi
$LL673@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN674@x509_main
	test	al, al
	je	SHORT $LN675@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN674@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL673@x509_main
$LN675@x509_main:
	xor	eax, eax
	jmp	SHORT $LN676@x509_main
$LN674@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN676@x509_main:
	test	eax, eax
	jne	SHORT $LN187@x509_main
; Line 474
	mov	DWORD PTR _clrext$1$[esp+688], 1
	jmp	$LN196@x509_main
$LN187@x509_main:
; Line 477
	mov	edx, OFFSET ??_C@_07EFJBLFME@?9crlext?$AA@
	mov	ecx, esi
	npad	1
$LL677@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN678@x509_main
	test	al, al
	je	SHORT $LN679@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN678@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL677@x509_main
$LN679@x509_main:
	xor	eax, eax
	jmp	SHORT $LN680@x509_main
$LN678@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN680@x509_main:
	test	eax, eax
	jne	SHORT $LN189@x509_main
; Line 478
	push	OFFSET ??_C@_0CA@DHLBEGN@use?5?9clrext?5instead?5of?5?9crlext?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 479
	mov	DWORD PTR _clrext$1$[esp+688], 1
; Line 480
	jmp	$LN196@x509_main
$LN189@x509_main:
; Line 482
	mov	edx, OFFSET ??_C@_07JIOKHCGG@?9ocspid?$AA@
	mov	ecx, esi
$LL681@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN682@x509_main
	test	al, al
	je	SHORT $LN683@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN682@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL681@x509_main
$LN683@x509_main:
	xor	eax, eax
	jmp	SHORT $LN684@x509_main
$LN682@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN684@x509_main:
	test	eax, eax
	jne	SHORT $LN191@x509_main
; Line 483
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _ocspid$1$[esp+688], eax
	jmp	$LN738@x509_main
$LN191@x509_main:
; Line 484
	mov	edx, OFFSET ??_C@_07FPKNAFBC@?9badsig?$AA@
	mov	ecx, esi
$LL685@x509_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN686@x509_main
	test	al, al
	je	SHORT $LN687@x509_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN686@x509_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL685@x509_main
$LN687@x509_main:
	xor	eax, eax
	jmp	SHORT $LN688@x509_main
$LN686@x509_main:
	sbb	eax, eax
	or	eax, 1
$LN688@x509_main:
	test	eax, eax
	jne	SHORT $LN193@x509_main
; Line 485
	mov	DWORD PTR _badsig$1$[esp+688], 1
	jmp	SHORT $LN196@x509_main
$LN193@x509_main:
; Line 486
	lea	eax, DWORD PTR [esi+1]
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 4
	mov	DWORD PTR _digest$1$[esp+688], eax
	test	eax, eax
	jne	SHORT $LN196@x509_main
; Line 490
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
$LN739@x509_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$bad$751:
; Line 500
	mov	eax, DWORD PTR _x509_usage
	mov	esi, OFFSET _x509_usage
	test	eax, eax
	je	$LN723@x509_main
$LL6@x509_main:
; Line 501
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	eax, DWORD PTR [esi+4]
	lea	esi, DWORD PTR [esi+4]
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LL6@x509_main
; Line 502
	jmp	$LN723@x509_main
$LN142@x509_main:
; Line 418
	mov	eax, DWORD PTR _num$1$[esp+688]
	inc	eax
	mov	DWORD PTR _subject_hash$1$[esp+688], eax
$LN738@x509_main:
	mov	DWORD PTR _num$1$[esp+688], eax
$LN196@x509_main:
; Line 494
	dec	edi
; Line 495
	add	ebx, 4
	cmp	edi, 1
	jge	$LL2@x509_main
	mov	esi, DWORD PTR _STDout$1$[esp+688]
	mov	ebp, DWORD PTR _extfile$1$[esp+688]
$LN447@x509_main:
; Line 505
	push	0
	push	DWORD PTR _engine$1$[esp+692]
	push	DWORD PTR _bio_err
	call	_setup_engine
	add	esp, 12					; 0000000cH
	mov	edi, eax
; Line 508
	cmp	DWORD PTR _need_rand$1$[esp+688], 0
	mov	DWORD PTR _e$1$[esp+688], edi
	je	SHORT $LN198@x509_main
; Line 509
	push	0
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_load_file
	add	esp, 12					; 0000000cH
$LN198@x509_main:
; Line 511
	call	_ERR_load_crypto_strings
; Line 513
	push	0
	lea	eax, DWORD PTR _passin$[esp+692]
	push	eax
	push	0
	push	DWORD PTR _passargin$1$[esp+700]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN199@x509_main
; Line 514
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 515
	jmp	$end$752
$LN385@x509_main:
; Line 356
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0BP@NKGJJHBM@Invalid?5trust?5object?5value?5?$CFs?6?$AA@
; Line 357
	jmp	$LN739@x509_main
$LN387@x509_main:
; Line 367
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0CA@KCOFGJFD@Invalid?5reject?5object?5value?5?$CFs?6?$AA@
; Line 369
	jmp	$LN739@x509_main
$LN199@x509_main:
; Line 518
	push	DWORD PTR _ctx$1$[esp+688]
	call	_X509_STORE_set_default_paths
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN200@x509_main
; Line 519
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 520
	jmp	$end$752
$LN200@x509_main:
; Line 523
	mov	eax, DWORD PTR _fkeyfile$1$[esp+688]
	test	eax, eax
	je	SHORT $LN202@x509_main
; Line 524
	push	OFFSET ??_C@_0L@NNLEDEDF@Forced?5key?$AA@
	push	edi
	push	0
	push	0
	push	DWORD PTR _keyformat$1$[esp+704]
	push	eax
	push	DWORD PTR _bio_err
	call	_load_pubkey
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _fkey$1$[esp+688], eax
; Line 526
	test	eax, eax
	je	$end$752
$LN202@x509_main:
; Line 530
	mov	eax, DWORD PTR _CAkeyfile$1$[esp+688]
	mov	ecx, DWORD PTR _CA_flag$1$[esp+688]
	test	eax, eax
	jne	SHORT $LN203@x509_main
	test	ecx, ecx
	je	SHORT $LN205@x509_main
	cmp	DWORD PTR _CAformat$1$[esp+688], 3
	jne	SHORT $LN203@x509_main
; Line 531
	mov	eax, DWORD PTR _CAfile$1$[esp+688]
	mov	DWORD PTR _CAkeyfile$1$[esp+688], eax
$LN205@x509_main:
; Line 538
	test	ebp, ebp
	je	$LN212@x509_main
; Line 541
	push	0
	mov	DWORD PTR _errorline$2[esp+692], -1
	call	_NCONF_new
; Line 542
	lea	ecx, DWORD PTR _errorline$2[esp+692]
	mov	DWORD PTR _extconf$1$[esp+692], eax
	push	ecx
	push	ebp
	push	eax
	call	_NCONF_load
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN207@x509_main
; Line 543
	mov	eax, DWORD PTR _errorline$2[esp+688]
; Line 544
	push	ebp
	test	eax, eax
	jg	SHORT $LN208@x509_main
	push	OFFSET ??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 834
	add	esp, 12					; 0000000cH
; Line 835
	jmp	$end$752
$LN203@x509_main:
; Line 532
	test	ecx, ecx
	je	SHORT $LN205@x509_main
	test	eax, eax
	jne	SHORT $LN205@x509_main
; Line 533
	push	OFFSET ??_C@_0DB@BNOINOBM@need?5to?5specify?5a?5CAkey?5if?5using@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 535
	jmp	$end$752
$LN208@x509_main:
; Line 547
	push	eax
	push	OFFSET ??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 550
	jmp	$end$752
$LN207@x509_main:
; Line 552
	mov	ebx, DWORD PTR _extsect$1$[esp+688]
; Line 553
	mov	ebp, DWORD PTR _extconf$1$[esp+688]
	test	ebx, ebx
	jne	SHORT $LN211@x509_main
	push	OFFSET ??_C@_0L@ICCCPLKC@extensions?$AA@
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	push	ebp
	call	_NCONF_get_string
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _extsect$1$[esp+688], ebx
; Line 554
	test	ebx, ebx
	jne	SHORT $LN211@x509_main
; Line 555
	call	_ERR_clear_error
; Line 556
	mov	ebx, OFFSET ??_C@_07DLHCIBDH@default?$AA@
	mov	DWORD PTR _extsect$1$[esp+688], ebx
$LN211@x509_main:
; Line 559
	push	1
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _ctx2$7[esp+704]
	push	0
	push	eax
	call	_X509V3_set_ctx
; Line 560
	lea	eax, DWORD PTR _ctx2$7[esp+712]
	push	ebp
	push	eax
	call	_X509V3_set_nconf
; Line 561
	push	0
	push	ebx
	lea	eax, DWORD PTR _ctx2$7[esp+728]
	push	eax
	push	ebp
	call	_X509V3_EXT_add_nconf
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN730@x509_main
; Line 562
	push	ebx
	push	OFFSET ??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 564
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 565
	jmp	$end$752
$LN730@x509_main:
	mov	ecx, DWORD PTR _CA_flag$1$[esp+688]
$LN212@x509_main:
; Line 569
	cmp	DWORD PTR _reqfile, 0
	je	$LN213@x509_main
; Line 573
	cmp	DWORD PTR _sign_flag$1$[esp+688], 0
	jne	SHORT $LN215@x509_main
	test	ecx, ecx
	jne	SHORT $LN215@x509_main
; Line 574
	push	OFFSET ??_C@_0CE@LNAJKFAL@We?5need?5a?5private?5key?5to?5sign?5wi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 575
	jmp	$end$752
$LN215@x509_main:
; Line 577
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
; Line 578
	test	esi, esi
	je	$LN411@x509_main
; Line 583
	mov	ebx, DWORD PTR _infile$1$[esp+688]
	test	ebx, ebx
	jne	SHORT $LN217@x509_main
; Line 584
	mov	ebp, DWORD PTR __imp____acrt_iob_func
	push	ebx
	call	ebp
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
	jmp	SHORT $LN219@x509_main
$LN217@x509_main:
; Line 586
	push	ebx
	push	3
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN726@x509_main
; Line 587
	push	ebx
	call	DWORD PTR __imp__perror
; Line 588
	push	esi
	call	_BIO_free
	add	esp, 8
; Line 589
	jmp	$LN723@x509_main
$LN726@x509_main:
	mov	ebp, DWORD PTR __imp____acrt_iob_func
$LN219@x509_main:
; Line 592
	push	0
	push	0
	push	0
	push	esi
	call	_PEM_read_bio_X509_REQ
	mov	edi, eax
; Line 593
	push	esi
	mov	DWORD PTR _req$1$[esp+708], edi
	call	_BIO_free
	add	esp, 20					; 00000014H
; Line 595
	test	edi, edi
	je	$LN411@x509_main
; Line 602
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	$LN222@x509_main
	mov	eax, DWORD PTR [eax+20]
	test	eax, eax
	je	$LN222@x509_main
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	$LN222@x509_main
	cmp	DWORD PTR [eax+8], 0
	je	$LN222@x509_main
; Line 609
	push	edi
	call	_X509_REQ_get_pubkey
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN223@x509_main
; Line 610
	push	OFFSET ??_C@_0BM@JDNMMHMG@error?5unpacking?5public?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 611
	jmp	$LN723@x509_main
$LN223@x509_main:
; Line 613
	push	esi
	push	edi
	call	_X509_REQ_verify
; Line 614
	push	esi
	mov	edi, eax
	call	_EVP_PKEY_free
	add	esp, 12					; 0000000cH
; Line 615
	test	edi, edi
	jns	SHORT $LN740@x509_main
; Line 616
	push	OFFSET ??_C@_0BO@JBANEDLE@Signature?5verification?5error?6?$AA@
$LN746@x509_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 617
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 618
	jmp	$LN723@x509_main
$LN740@x509_main:
; Line 620
	jne	SHORT $LN225@x509_main
; Line 621
	push	OFFSET ??_C@_0DB@IDIGBDHM@Signature?5did?5not?5match?5the?5cert@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 623
	jmp	$LN723@x509_main
$LN225@x509_main:
; Line 625
	push	OFFSET ??_C@_0O@OKNNLJOD@Signature?5ok?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 627
	mov	edi, DWORD PTR _req$1$[esp+696]
	push	DWORD PTR _nmflag$[esp+696]
	mov	eax, DWORD PTR [edi]
	push	DWORD PTR [eax+16]
	push	OFFSET ??_C@_08MAHPNCKH@subject?$DN?$AA@
	push	DWORD PTR _bio_err
	call	_print_name
	add	esp, 24					; 00000018H
; Line 630
	call	_X509_new
	mov	ebx, eax
	mov	DWORD PTR _x$1$[esp+688], ebx
	test	ebx, ebx
	je	$LN723@x509_main
; Line 633
	mov	esi, DWORD PTR _sno$1$[esp+688]
	test	esi, esi
	jne	SHORT $LN228@x509_main
; Line 634
	call	_ASN1_INTEGER_new
	mov	esi, eax
	mov	DWORD PTR _sno$1$[esp+688], esi
; Line 635
	test	esi, esi
	je	$LN723@x509_main
	push	esi
	push	0
	call	_rand_serial
	add	esp, 8
	test	eax, eax
	je	$LN723@x509_main
; Line 637
	push	esi
	push	ebx
	call	_X509_set_serialNumber
	add	esp, 8
	test	eax, eax
	je	$LN723@x509_main
; Line 639
	push	esi
	call	_ASN1_INTEGER_free
	add	esp, 4
; Line 640
	mov	DWORD PTR _sno$1$[esp+688], 0
	jmp	SHORT $LN233@x509_main
$LN228@x509_main:
; Line 641
	push	esi
	push	ebx
	call	_X509_set_serialNumber
	add	esp, 8
	test	eax, eax
	je	$LN723@x509_main
$LN233@x509_main:
; Line 644
	mov	eax, DWORD PTR [edi]
	push	DWORD PTR [eax+16]
	push	ebx
	call	_X509_set_issuer_name
	add	esp, 8
	test	eax, eax
	je	$LN723@x509_main
; Line 646
	mov	eax, DWORD PTR [edi]
	push	DWORD PTR [eax+16]
	push	ebx
	call	_X509_set_subject_name
	add	esp, 8
	test	eax, eax
	je	$LN723@x509_main
; Line 649
	mov	eax, DWORD PTR [ebx]
	push	0
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax]
	call	_X509_gmtime_adj
; Line 650
	mov	eax, DWORD PTR [ebx]
	push	0
	push	0
	push	DWORD PTR _days$1$[esp+704]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	call	_X509_time_adj_ex
; Line 651
	mov	eax, DWORD PTR _fkey$1$[esp+712]
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN236@x509_main
; Line 652
	push	eax
	push	ebx
	call	_X509_set_pubkey
	mov	edi, DWORD PTR _e$1$[esp+696]
	add	esp, 8
	jmp	SHORT $LN214@x509_main
$LN236@x509_main:
; Line 654
	push	edi
	call	_X509_REQ_get_pubkey
	mov	esi, eax
; Line 655
	push	esi
	push	ebx
	call	_X509_set_pubkey
; Line 656
	push	esi
	call	_EVP_PKEY_free
; Line 658
	mov	edi, DWORD PTR _e$1$[esp+704]
	add	esp, 16					; 00000010H
	jmp	SHORT $LN214@x509_main
$LN222@x509_main:
; Line 604
	push	OFFSET ??_C@_0CO@FNAFFGC@The?5certificate?5request?5appears?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 606
	push	OFFSET ??_C@_0CC@HEIPGIED@It?5does?5not?5contain?5a?5public?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 607
	jmp	$LN723@x509_main
$LN213@x509_main:
; Line 659
	push	OFFSET ??_C@_0M@KDOEPPNO@Certificate?$AA@
	push	edi
	push	0
	push	DWORD PTR _informat$1$[esp+700]
	push	DWORD PTR _infile$1$[esp+704]
	push	DWORD PTR _bio_err
	call	_load_cert
	mov	ebp, DWORD PTR __imp____acrt_iob_func
	mov	ebx, eax
	add	esp, 24					; 00000018H
	mov	DWORD PTR _x$1$[esp+688], ebx
$LN214@x509_main:
; Line 661
	test	ebx, ebx
	je	$LN723@x509_main
; Line 663
	cmp	DWORD PTR _CA_flag$1$[esp+688], 0
	je	SHORT $LN240@x509_main
; Line 664
	push	OFFSET ??_C@_0P@LLKMHGCA@CA?5Certificate?$AA@
	push	edi
	push	0
	push	DWORD PTR _CAformat$1$[esp+700]
	push	DWORD PTR _CAfile$1$[esp+704]
	push	DWORD PTR _bio_err
	call	_load_cert
	add	esp, 24					; 00000018H
	mov	DWORD PTR _xca$1$[esp+688], eax
; Line 665
	test	eax, eax
	je	$LN723@x509_main
$LN240@x509_main:
; Line 669
	cmp	DWORD PTR _noout$1$[esp+688], 0
	je	SHORT $LN242@x509_main
	cmp	DWORD PTR _text$1$[esp+688], 0
	jne	SHORT $LN242@x509_main
	cmp	DWORD PTR _next_serial$1$[esp+688], 0
	je	SHORT $LN246@x509_main
$LN242@x509_main:
; Line 670
	push	OFFSET ??_C@_0BH@FMKKHDCE@SET?5x509v3?5extension?53?$AA@
	push	OFFSET ??_C@_07BMNIAOAA@SET?4ex3?$AA@
	push	OFFSET ??_C@_09FJOGABAJ@2?499999?43?$AA@
	call	_OBJ_create
; Line 672
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 16					; 00000010H
	mov	DWORD PTR _out$1$[esp+688], esi
; Line 673
	test	esi, esi
	je	$LN411@x509_main
; Line 677
	mov	ebx, DWORD PTR _outfile$1$[esp+688]
	test	ebx, ebx
	jne	$LN244@x509_main
; Line 678
	push	1
	call	ebp
	push	eax
	push	ebx
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN729@x509_main:
	mov	ebx, DWORD PTR _x$1$[esp+688]
$LN246@x509_main:
; Line 693
	mov	eax, DWORD PTR _alias$1$[esp+688]
	test	eax, eax
	je	SHORT $LN247@x509_main
; Line 694
	push	-1
	push	eax
	push	ebx
	call	_X509_alias_set1
	add	esp, 12					; 0000000cH
$LN247@x509_main:
; Line 696
	cmp	DWORD PTR _clrtrust$1$[esp+688], 0
	je	SHORT $LN248@x509_main
; Line 697
	push	ebx
	call	_X509_trust_clear
	add	esp, 4
$LN248@x509_main:
; Line 698
	cmp	DWORD PTR _clrreject$1$[esp+688], 0
	je	SHORT $LN249@x509_main
; Line 699
	push	ebx
	call	_X509_reject_clear
	add	esp, 4
$LN249@x509_main:
; Line 701
	mov	ebp, DWORD PTR _trust$1$[esp+688]
	test	ebp, ebp
	je	SHORT $LN8@x509_main
; Line 702
	push	ebp
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN8@x509_main
	npad	2
$LL9@x509_main:
; Line 703
	push	esi
	push	ebp
	call	_sk_value
; Line 704
	push	eax
	push	ebx
	call	_X509_add1_trust_object
	push	ebp
	inc	esi
	call	_sk_num
	add	esp, 20					; 00000014H
	cmp	esi, eax
	jl	SHORT $LL9@x509_main
$LN8@x509_main:
; Line 708
	mov	ebp, DWORD PTR _reject$1$[esp+688]
	test	ebp, ebp
	je	SHORT $LN11@x509_main
; Line 709
	push	ebp
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN11@x509_main
$LL12@x509_main:
; Line 710
	push	esi
	push	ebp
	call	_sk_value
; Line 711
	push	eax
	push	ebx
	call	_X509_add1_reject_object
	push	ebp
	inc	esi
	call	_sk_num
	add	esp, 20					; 00000014H
	cmp	esi, eax
	jl	SHORT $LL12@x509_main
$LN11@x509_main:
; Line 715
	mov	ebx, DWORD PTR _num$1$[esp+688]
	test	ebx, ebx
	je	$LN448@x509_main
; Line 716
	mov	ebp, 1
	mov	DWORD PTR _i$4$[esp+688], ebp
	cmp	ebx, ebp
	jl	$LN448@x509_main
	mov	ebx, DWORD PTR __imp___wassert
	mov	eax, DWORD PTR _num$1$[esp+688]
$LL15@x509_main:
; Line 717
	cmp	DWORD PTR _issuer$1$[esp+688], ebp
	jne	SHORT $LN253@x509_main
; Line 718
	push	DWORD PTR _nmflag$[esp+688]
	push	DWORD PTR _x$1$[esp+692]
	call	_X509_get_issuer_name
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_08GEFFNOFC@issuer?$DN?5?$AA@
	push	DWORD PTR _STDout$1$[esp+700]
	call	_print_name
	add	esp, 16					; 00000010H
	jmp	$LN728@x509_main
$LN244@x509_main:
; Line 686
	push	ebx
	push	5
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	$LN729@x509_main
; Line 687
	push	ebx
	call	DWORD PTR __imp__perror
; Line 688
	jmp	$LN749@x509_main
$LN253@x509_main:
; Line 720
	cmp	DWORD PTR _subject$1$[esp+688], ebp
	jne	SHORT $LN255@x509_main
; Line 721
	push	DWORD PTR _nmflag$[esp+688]
	push	DWORD PTR _x$1$[esp+692]
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_09NNPGGNDL@subject?$DN?5?$AA@
	push	DWORD PTR _STDout$1$[esp+700]
	call	_print_name
	add	esp, 16					; 00000010H
	jmp	$LN728@x509_main
$LN255@x509_main:
; Line 723
	cmp	DWORD PTR _serial$1$[esp+688], ebp
	jne	SHORT $LN257@x509_main
; Line 724
	mov	edi, DWORD PTR _STDout$1$[esp+688]
	push	OFFSET ??_C@_07BLPLIGMN@serial?$DN?$AA@
	push	edi
	call	_BIO_printf
; Line 725
	push	DWORD PTR _x$1$[esp+696]
	call	_X509_get_serialNumber
	push	eax
	push	edi
	call	_i2a_ASN1_INTEGER
; Line 726
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 28					; 0000001cH
	jmp	$LN728@x509_main
$LN257@x509_main:
; Line 727
	cmp	DWORD PTR _next_serial$1$[esp+688], ebp
	jne	SHORT $LN259@x509_main
; Line 730
	push	DWORD PTR _x$1$[esp+688]
	call	_X509_get_serialNumber
; Line 731
	push	0
	push	eax
	call	_ASN1_INTEGER_to_BN
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 732
	test	esi, esi
	je	$LN723@x509_main
; Line 734
	push	1
	push	esi
	call	_BN_add_word
	add	esp, 8
	test	eax, eax
	je	$LN723@x509_main
; Line 736
	push	0
	push	esi
	call	_BN_to_ASN1_INTEGER
	mov	edi, eax
	add	esp, 8
; Line 737
	test	edi, edi
	je	$LN723@x509_main
; Line 739
	push	esi
	call	_BN_free
; Line 740
	mov	esi, DWORD PTR _out$1$[esp+692]
	push	edi
	push	esi
	call	_i2a_ASN1_INTEGER
; Line 741
	push	edi
	call	_ASN1_INTEGER_free
; Line 742
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 24					; 00000018H
	jmp	$LN728@x509_main
$LN259@x509_main:
; Line 743
	cmp	DWORD PTR _email$1$[esp+688], ebp
	je	$LN445@x509_main
	cmp	DWORD PTR _ocsp_uri$1$[esp+688], ebp
	je	$LN267@x509_main
; Line 754
	cmp	DWORD PTR _aliasout$1$[esp+688], ebp
	jne	SHORT $LN269@x509_main
; Line 756
	push	0
	push	DWORD PTR _x$1$[esp+692]
	call	_X509_alias_get0
	add	esp, 8
; Line 757
	test	eax, eax
	je	SHORT $LN271@x509_main
; Line 758
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	push	DWORD PTR _STDout$1$[esp+696]
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	$LN728@x509_main
$LN271@x509_main:
; Line 760
	push	OFFSET ??_C@_0M@DMDCGGEN@?$DMNo?5Alias?$DO?6?$AA@
	push	DWORD PTR _STDout$1$[esp+692]
	call	_BIO_puts
	add	esp, 8
; Line 761
	jmp	$LN728@x509_main
$LN269@x509_main:
	cmp	DWORD PTR _subject_hash$1$[esp+688], ebp
	jne	SHORT $LN273@x509_main
; Line 762
	push	DWORD PTR _x$1$[esp+688]
	call	_X509_subject_name_hash
$LN743@x509_main:
	push	eax
	push	OFFSET ??_C@_06LLMAFLIJ@?$CF08lx?6?$AA@
	push	DWORD PTR _STDout$1$[esp+700]
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 763
	jmp	$LN728@x509_main
$LN273@x509_main:
; Line 765
	cmp	DWORD PTR _subject_hash_old$1$[esp+688], ebp
	jne	SHORT $LN275@x509_main
; Line 766
	push	DWORD PTR _x$1$[esp+688]
	call	_X509_subject_name_hash_old
; Line 767
	jmp	SHORT $LN743@x509_main
$LN275@x509_main:
; Line 769
	cmp	DWORD PTR _issuer_hash$1$[esp+688], ebp
	jne	SHORT $LN277@x509_main
; Line 770
	push	DWORD PTR _x$1$[esp+688]
	call	_X509_issuer_name_hash
; Line 771
	jmp	SHORT $LN743@x509_main
$LN277@x509_main:
; Line 773
	cmp	DWORD PTR _issuer_hash_old$1$[esp+688], ebp
	jne	SHORT $LN279@x509_main
; Line 774
	push	DWORD PTR _x$1$[esp+688]
	call	_X509_issuer_name_hash_old
; Line 775
	jmp	SHORT $LN743@x509_main
$LN279@x509_main:
; Line 777
	cmp	DWORD PTR _pprint$1$[esp+688], ebp
	jne	SHORT $LN281@x509_main
; Line 780
	mov	edi, DWORD PTR _STDout$1$[esp+688]
	push	OFFSET ??_C@_0BH@HAADKFNF@Certificate?5purposes?3?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
; Line 781
	xor	esi, esi
	call	_X509_PURPOSE_get_count
	test	eax, eax
	jle	$LN728@x509_main
	mov	ebx, DWORD PTR _x$1$[esp+688]
$LL21@x509_main:
; Line 782
	push	esi
	call	_X509_PURPOSE_get0
; Line 783
	push	eax
	push	ebx
	push	edi
	call	_purpose_print
	add	esp, 16					; 00000010H
	inc	esi
	call	_X509_PURPOSE_get_count
	cmp	esi, eax
	jl	SHORT $LL21@x509_main
	mov	ebx, DWORD PTR __imp___wassert
; Line 785
	jmp	$LN728@x509_main
$LN281@x509_main:
	cmp	DWORD PTR _modulus$1$[esp+688], ebp
	jne	SHORT $LN283@x509_main
; Line 788
	push	DWORD PTR _x$1$[esp+688]
	call	_X509_get_pubkey
	mov	esi, eax
	add	esp, 4
; Line 789
	test	esi, esi
	je	$LN401@x509_main
; Line 794
	mov	edi, DWORD PTR _STDout$1$[esp+688]
	push	OFFSET ??_C@_08CHIKBNMH@Modulus?$DN?$AA@
	push	edi
	call	_BIO_printf
; Line 796
	mov	eax, DWORD PTR [esi]
	add	esp, 8
	cmp	eax, 6
	jne	SHORT $LN286@x509_main
; Line 797
	mov	eax, DWORD PTR [esi+20]
	push	DWORD PTR [eax+16]
	push	edi
	call	_BN_print
	jmp	SHORT $LN741@x509_main
$LN286@x509_main:
; Line 801
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN288@x509_main
; Line 802
	mov	eax, DWORD PTR [esi+20]
	push	DWORD PTR [eax+24]
	push	edi
	call	_BN_print
	jmp	SHORT $LN741@x509_main
$LN288@x509_main:
; Line 805
	push	OFFSET ??_C@_0BF@JNOIECJP@Wrong?5Algorithm?5type?$AA@
	push	edi
	call	_BIO_printf
$LN741@x509_main:
	add	esp, 8
; Line 806
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
; Line 807
	push	esi
	call	_EVP_PKEY_free
	add	esp, 12					; 0000000cH
	jmp	$LN728@x509_main
$LN283@x509_main:
; Line 808
	cmp	DWORD PTR _pubkey$1$[esp+688], ebp
	jne	SHORT $LN290@x509_main
; Line 811
	push	DWORD PTR _x$1$[esp+688]
	call	_X509_get_pubkey
	mov	esi, eax
	add	esp, 4
; Line 812
	test	esi, esi
	je	$LN402@x509_main
; Line 817
	push	esi
	push	DWORD PTR _STDout$1$[esp+692]
	call	_PEM_write_bio_PUBKEY
; Line 818
	push	esi
	call	_EVP_PKEY_free
	add	esp, 12					; 0000000cH
	jmp	$LN728@x509_main
$LN290@x509_main:
; Line 819
	cmp	DWORD PTR _C$1$[esp+688], ebp
	jne	$LN293@x509_main
; Line 824
	mov	edi, DWORD PTR _x$1$[esp+688]
	lea	eax, DWORD PTR _buf$[esp+688]
	push	256					; 00000100H
	push	eax
	push	edi
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
; Line 825
	mov	esi, DWORD PTR _STDout$1$[esp+700]
	lea	eax, DWORD PTR _buf$[esp+700]
	push	eax
	push	OFFSET ??_C@_0BC@JINIIEIN@?1?$CK?5subject?3?$CFs?5?$CK?1?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 826
	lea	eax, DWORD PTR _buf$[esp+688]
	push	256					; 00000100H
	push	eax
	push	edi
	call	_X509_get_issuer_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
; Line 828
	lea	eax, DWORD PTR _buf$[esp+700]
	push	eax
	push	OFFSET ??_C@_0BC@LDLINKBM@?1?$CK?5issuer?5?3?$CFs?5?$CK?1?6?$AA@
	push	esi
	call	_BIO_printf
; Line 830
	push	0
	push	edi
	call	_i2d_X509
; Line 831
	push	831					; 0000033fH
	push	OFFSET ??_C@_0O@BAIBJPAO@?4?2apps?2x509?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 44					; 0000002cH
; Line 832
	test	ebx, ebx
	je	$LN403@x509_main
; Line 839
	lea	eax, DWORD PTR _d$1[esp+688]
	mov	DWORD PTR _d$1[esp+688], ebx
	push	eax
	push	edi
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	call	_i2d_X509_NAME
	mov	edi, eax
; Line 840
	push	edi
	push	OFFSET ??_C@_0CG@PACAHADJ@unsigned?5char?5XXX_subject_name?$FL?$CF@
	push	esi
	call	_BIO_printf
	add	esp, 20					; 00000014H
; Line 842
	mov	eax, ebx
; Line 843
	xor	esi, esi
	mov	DWORD PTR _d$1[esp+688], eax
	test	edi, edi
	jle	SHORT $LN698@x509_main
	mov	ebp, DWORD PTR _STDout$1$[esp+688]
$LL24@x509_main:
; Line 844
	movzx	eax, BYTE PTR [esi+eax]
	push	eax
	push	OFFSET ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@
	push	ebp
	call	_BIO_printf
; Line 845
	mov	eax, esi
	add	esp, 12					; 0000000cH
	and	eax, 15					; 0000000fH
	cmp	al, 15					; 0000000fH
	jne	SHORT $LN22@x509_main
; Line 846
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	ebp
	call	_BIO_printf
	add	esp, 8
$LN22@x509_main:
; Line 843
	inc	esi
	cmp	esi, edi
	jge	SHORT $LN701@x509_main
	mov	eax, DWORD PTR _d$1[esp+688]
	jmp	SHORT $LL24@x509_main
$LN701@x509_main:
	mov	ebp, DWORD PTR _i$4$[esp+688]
$LN698@x509_main:
; Line 848
	and	esi, -2147483633			; 8000000fH
	jns	SHORT $LN735@x509_main
	dec	esi
	or	esi, -16				; fffffff0H
	inc	esi
$LN735@x509_main:
; Line 849
	mov	esi, DWORD PTR _STDout$1$[esp+688]
; Line 848
	je	SHORT $LN297@x509_main
; Line 849
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
$LN297@x509_main:
; Line 850
	push	OFFSET ??_C@_03JFDPLKFJ@?$HN?$DL?6?$AA@
	push	esi
	call	_BIO_printf
; Line 852
	lea	eax, DWORD PTR _d$1[esp+696]
	push	eax
	mov	eax, DWORD PTR _x$1$[esp+700]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+24]
	call	_i2d_X509_PUBKEY
	mov	edi, eax
; Line 853
	push	edi
	push	OFFSET ??_C@_0CE@JGFCJAHC@unsigned?5char?5XXX_public_key?$FL?$CFd?$FN@
	push	esi
	call	_BIO_printf
	add	esp, 28					; 0000001cH
; Line 854
	mov	eax, ebx
; Line 855
	xor	esi, esi
	mov	DWORD PTR _d$1[esp+688], eax
	test	edi, edi
	jle	SHORT $LN699@x509_main
	mov	ebp, DWORD PTR _STDout$1$[esp+688]
	npad	5
$LL27@x509_main:
; Line 856
	movzx	eax, BYTE PTR [esi+eax]
	push	eax
	push	OFFSET ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@
	push	ebp
	call	_BIO_printf
; Line 857
	mov	eax, esi
	add	esp, 12					; 0000000cH
	and	eax, 15					; 0000000fH
	cmp	al, 15					; 0000000fH
	jne	SHORT $LN25@x509_main
; Line 858
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	ebp
	call	_BIO_printf
	add	esp, 8
$LN25@x509_main:
; Line 855
	inc	esi
	cmp	esi, edi
	jge	SHORT $LN702@x509_main
	mov	eax, DWORD PTR _d$1[esp+688]
	jmp	SHORT $LL27@x509_main
$LN702@x509_main:
	mov	ebp, DWORD PTR _i$4$[esp+688]
$LN699@x509_main:
; Line 860
	and	esi, -2147483633			; 8000000fH
	jns	SHORT $LN736@x509_main
	dec	esi
	or	esi, -16				; fffffff0H
	inc	esi
$LN736@x509_main:
; Line 861
	mov	esi, DWORD PTR _STDout$1$[esp+688]
; Line 860
	je	SHORT $LN299@x509_main
; Line 861
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
$LN299@x509_main:
; Line 862
	push	OFFSET ??_C@_03JFDPLKFJ@?$HN?$DL?6?$AA@
	push	esi
	call	_BIO_printf
; Line 864
	lea	eax, DWORD PTR _d$1[esp+696]
	push	eax
	push	DWORD PTR _x$1$[esp+700]
	call	_i2d_X509
	mov	edi, eax
; Line 865
	push	edi
	push	OFFSET ??_C@_0CF@NEOKGDMP@unsigned?5char?5XXX_certificate?$FL?$CFd@
	push	esi
	call	_BIO_printf
	add	esp, 28					; 0000001cH
; Line 867
	mov	eax, ebx
; Line 868
	xor	esi, esi
	mov	DWORD PTR _d$1[esp+688], eax
	test	edi, edi
	jle	SHORT $LN700@x509_main
	mov	ebp, DWORD PTR _STDout$1$[esp+688]
$LL30@x509_main:
; Line 869
	movzx	eax, BYTE PTR [esi+eax]
	push	eax
	push	OFFSET ??_C@_07DHGLOFCI@0x?$CF02X?0?$AA@
	push	ebp
	call	_BIO_printf
; Line 870
	mov	eax, esi
	add	esp, 12					; 0000000cH
	and	eax, 15					; 0000000fH
	cmp	al, 15					; 0000000fH
	jne	SHORT $LN28@x509_main
; Line 871
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	ebp
	call	_BIO_printf
	add	esp, 8
$LN28@x509_main:
; Line 868
	inc	esi
	cmp	esi, edi
	jge	SHORT $LN703@x509_main
	mov	eax, DWORD PTR _d$1[esp+688]
	jmp	SHORT $LL30@x509_main
$LN703@x509_main:
	mov	ebp, DWORD PTR _i$4$[esp+688]
$LN700@x509_main:
; Line 873
	and	esi, -2147483633			; 8000000fH
	jns	SHORT $LN737@x509_main
	dec	esi
	or	esi, -16				; fffffff0H
	inc	esi
$LN737@x509_main:
; Line 874
	mov	edi, DWORD PTR _STDout$1$[esp+688]
; Line 873
	je	SHORT $LN301@x509_main
; Line 874
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
$LN301@x509_main:
; Line 875
	push	OFFSET ??_C@_03JFDPLKFJ@?$HN?$DL?6?$AA@
	push	edi
	call	_BIO_printf
; Line 877
	push	ebx
	call	_CRYPTO_free
	mov	ebx, DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	jmp	$LN728@x509_main
$LN293@x509_main:
; Line 878
	cmp	DWORD PTR _text$1$[esp+688], ebp
	jne	SHORT $LN302@x509_main
; Line 879
	push	DWORD PTR _certflag$[esp+688]
	push	DWORD PTR _nmflag$[esp+692]
	push	DWORD PTR _x$1$[esp+696]
	push	DWORD PTR _STDout$1$[esp+700]
	call	_X509_print_ex
	add	esp, 16					; 00000010H
	jmp	$LN728@x509_main
$LN302@x509_main:
; Line 880
	cmp	DWORD PTR _startdate$1$[esp+688], ebp
	jne	SHORT $LN304@x509_main
; Line 881
	mov	esi, DWORD PTR _STDout$1$[esp+688]
	push	OFFSET ??_C@_0L@IJECLNGC@notBefore?$DN?$AA@
	push	esi
	call	_BIO_puts
; Line 882
	mov	eax, DWORD PTR _x$1$[esp+696]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax]
	push	esi
	call	_ASN1_TIME_print
; Line 883
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 24					; 00000018H
	jmp	$LN728@x509_main
$LN304@x509_main:
; Line 884
	cmp	DWORD PTR _enddate$1$[esp+688], ebp
	jne	SHORT $LN306@x509_main
; Line 885
	mov	esi, DWORD PTR _STDout$1$[esp+688]
	push	OFFSET ??_C@_09HJHNFFGB@notAfter?$DN?$AA@
	push	esi
	call	_BIO_puts
; Line 886
	mov	eax, DWORD PTR _x$1$[esp+696]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	push	esi
	call	_ASN1_TIME_print
; Line 887
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 24					; 00000018H
	jmp	$LN728@x509_main
$LN306@x509_main:
; Line 888
	cmp	DWORD PTR _fingerprint$1$[esp+688], ebp
	jne	$LN308@x509_main
; Line 892
	mov	eax, DWORD PTR _digest$1$[esp+688]
	mov	esi, eax
; Line 894
	test	eax, eax
	jne	SHORT $LN310@x509_main
; Line 895
	call	_EVP_sha1
	mov	esi, eax
$LN310@x509_main:
; Line 897
	lea	eax, DWORD PTR _n$3[esp+688]
	push	eax
	lea	eax, DWORD PTR _md$8[esp+692]
	push	eax
	push	esi
	push	DWORD PTR _x$1$[esp+700]
	call	_X509_digest
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN404@x509_main
; Line 901
	push	esi
	call	_EVP_MD_type
	push	eax
	call	_OBJ_nid2sn
	push	eax
	push	OFFSET ??_C@_0BA@BJKFFDMN@?$CFs?5Fingerprint?$DN?$AA@
	push	DWORD PTR _STDout$1$[esp+704]
	call	_BIO_printf
; Line 903
	mov	edi, DWORD PTR _n$3[esp+708]
	add	esp, 20					; 00000014H
	xor	esi, esi
	test	edi, edi
	jle	$LN728@x509_main
	mov	ebp, DWORD PTR _STDout$1$[esp+688]
	lea	eax, DWORD PTR _md$8[esp+688]
	mov	ebx, 1
	sub	ebx, eax
	npad	3
$LL33@x509_main:
; Line 904
	lea	edx, DWORD PTR _md$8[esp+688]
	mov	ecx, 58					; 0000003aH
	add	edx, esi
	lea	eax, DWORD PTR [ebx+edx]
	cmp	eax, edi
	mov	eax, 10					; 0000000aH
	cmove	ecx, eax
	movzx	eax, BYTE PTR [edx]
	push	ecx
	push	eax
	push	OFFSET ??_C@_06FOGCEBND@?$CF02X?$CFc?$AA@
	push	ebp
	call	_BIO_printf
	mov	edi, DWORD PTR _n$3[esp+704]
	inc	esi
	add	esp, 16					; 00000010H
	cmp	esi, edi
	jl	SHORT $LL33@x509_main
; Line 907
	mov	ebp, DWORD PTR _i$4$[esp+688]
	mov	ebx, DWORD PTR __imp___wassert
	jmp	$LN728@x509_main
$LN308@x509_main:
; Line 910
	mov	ecx, DWORD PTR _x509req$1$[esp+688]
	cmp	DWORD PTR _sign_flag$1$[esp+688], ebp
	jne	$LN312@x509_main
	test	ecx, ecx
	jne	$LN312@x509_main
; Line 911
	push	OFFSET ??_C@_0BF@IEBOEHCC@Getting?5Private?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 912
	mov	esi, DWORD PTR _Upkey$1$[esp+696]
	add	esp, 8
	test	esi, esi
	jne	SHORT $LN315@x509_main
; Line 913
	push	OFFSET ??_C@_0M@HBAMEDMN@Private?5key?$AA@
	push	edi
	push	DWORD PTR _passin$[esp+696]
	push	esi
	push	DWORD PTR _keyformat$1$[esp+704]
	push	DWORD PTR _keyfile$1$[esp+708]
	push	DWORD PTR _bio_err
	call	_load_key
	mov	esi, eax
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _Upkey$1$[esp+688], esi
; Line 916
	test	esi, esi
	je	$LN723@x509_main
$LN315@x509_main:
; Line 920
	cmp	DWORD PTR _need_rand$1$[esp+688], 0
	jne	SHORT $LN348@x509_main
	push	920					; 00000398H
	push	OFFSET ??_C@_1BM@NCLAMDJI@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAx?$AA5?$AA0?$AA9?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@
	call	ebx
	add	esp, 12					; 0000000cH
$LN348@x509_main:
; Line 921
	push	DWORD PTR _extsect$1$[esp+688]
	push	DWORD PTR _extconf$1$[esp+692]
	push	DWORD PTR _digest$1$[esp+696]
	push	DWORD PTR _clrext$1$[esp+700]
	push	DWORD PTR _days$1$[esp+704]
	push	esi
	push	DWORD PTR _x$1$[esp+712]
	call	_sign
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$LN723@x509_main
; Line 923
	jmp	$LN728@x509_main
$LN312@x509_main:
	cmp	DWORD PTR _CA_flag$1$[esp+688], ebp
	jne	$LN317@x509_main
; Line 924
	push	OFFSET ??_C@_0BI@MNJFIHLM@Getting?5CA?5Private?5Key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 925
	mov	eax, DWORD PTR _CAkeyfile$1$[esp+696]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN734@x509_main
; Line 926
	push	OFFSET ??_C@_0P@MJHGGFAN@CA?5Private?5Key?$AA@
	push	edi
	push	DWORD PTR _passin$[esp+696]
	push	0
	push	DWORD PTR _CAkeyformat$1$[esp+704]
	push	eax
	push	DWORD PTR _bio_err
	call	_load_key
	mov	esi, eax
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _CApkey$1$[esp+688], esi
; Line 929
	test	esi, esi
	je	$LN723@x509_main
	jmp	SHORT $LN320@x509_main
$LN734@x509_main:
	mov	esi, DWORD PTR _CApkey$1$[esp+688]
$LN320@x509_main:
; Line 933
	cmp	DWORD PTR _need_rand$1$[esp+688], 0
	jne	SHORT $LN349@x509_main
	push	933					; 000003a5H
	push	OFFSET ??_C@_1BM@NCLAMDJI@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAx?$AA5?$AA0?$AA9?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BE@DFCGBIJP@?$AAn?$AAe?$AAe?$AAd?$AA_?$AAr?$AAa?$AAn?$AAd?$AA?$AA@
	call	ebx
	add	esp, 12					; 0000000cH
$LN349@x509_main:
; Line 934
	push	DWORD PTR _sno$1$[esp+688]
	push	DWORD PTR _extsect$1$[esp+692]
	push	DWORD PTR _extconf$1$[esp+696]
	push	DWORD PTR _clrext$1$[esp+700]
	push	DWORD PTR _days$1$[esp+704]
	push	DWORD PTR _CA_createserial$1$[esp+708]
	push	DWORD PTR _CAserial$1$[esp+712]
	push	DWORD PTR _sigopts$1$[esp+716]
	push	esi
	push	DWORD PTR _xca$1$[esp+724]
	push	DWORD PTR _x$1$[esp+728]
	push	DWORD PTR _digest$1$[esp+732]
	push	DWORD PTR _CAfile$1$[esp+736]
	push	DWORD PTR _ctx$1$[esp+740]
	call	_x509_certify
	add	esp, 56					; 00000038H
	test	eax, eax
	je	$LN723@x509_main
; Line 939
	jmp	$LN728@x509_main
$LN317@x509_main:
	cmp	ecx, ebp
	jne	$LN322@x509_main
; Line 942
	push	OFFSET ??_C@_0BN@FDEBFMGB@Getting?5request?5Private?5Key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 943
	mov	eax, DWORD PTR _keyfile$1$[esp+696]
	add	esp, 8
	test	eax, eax
	je	$LN409@x509_main
; Line 947
	push	OFFSET ??_C@_0M@IGFIMLHB@request?5key?$AA@
	push	edi
	push	DWORD PTR _passin$[esp+696]
	push	0
	push	DWORD PTR _keyformat$1$[esp+704]
	push	eax
	push	DWORD PTR _bio_err
	call	_load_key
	mov	esi, eax
	add	esp, 28					; 0000001cH
; Line 950
	test	esi, esi
	je	$LN723@x509_main
; Line 954
	push	OFFSET ??_C@_0CA@NBNBADKF@Generating?5certificate?5request?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 956
	push	DWORD PTR _digest$1$[esp+696]
	push	esi
	push	DWORD PTR _x$1$[esp+704]
	call	_X509_to_X509_REQ
	mov	edi, eax
; Line 957
	push	esi
	mov	DWORD PTR _rq$1$[esp+712], edi
	call	_EVP_PKEY_free
	add	esp, 24					; 00000018H
; Line 958
	test	edi, edi
	je	$LN411@x509_main
; Line 962
	cmp	DWORD PTR _noout$1$[esp+688], 0
	jne	SHORT $LN328@x509_main
; Line 963
	mov	esi, DWORD PTR _out$1$[esp+688]
	push	edi
	push	esi
	call	_X509_REQ_print
; Line 964
	push	edi
	push	esi
	call	_PEM_write_bio_X509_REQ
	add	esp, 16					; 00000010H
$LN328@x509_main:
; Line 966
	mov	DWORD PTR _noout$1$[esp+688], 1
	jmp	SHORT $LN728@x509_main
$LN322@x509_main:
; Line 967
	cmp	DWORD PTR _ocspid$1$[esp+688], ebp
	jne	SHORT $LN13@x509_main
; Line 968
	push	DWORD PTR _x$1$[esp+688]
	push	DWORD PTR _out$1$[esp+692]
	call	_X509_ocspid_print
	add	esp, 8
	jmp	SHORT $LN728@x509_main
$LN267@x509_main:
; Line 749
	push	DWORD PTR _x$1$[esp+688]
	call	_X509_get1_ocsp
	jmp	SHORT $LN742@x509_main
$LN445@x509_main:
; Line 747
	push	DWORD PTR _x$1$[esp+688]
	call	_X509_get1_email
$LN742@x509_main:
	add	esp, 4
	mov	edi, eax
; Line 750
	xor	esi, esi
	push	edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN17@x509_main
	mov	ebx, DWORD PTR _STDout$1$[esp+688]
	npad	3
$LL18@x509_main:
; Line 751
	push	esi
	push	edi
	call	_sk_value
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	push	ebx
	call	_BIO_printf
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 24					; 00000018H
	cmp	esi, eax
	jl	SHORT $LL18@x509_main
	mov	ebx, DWORD PTR __imp___wassert
$LN17@x509_main:
; Line 753
	push	edi
	call	_X509_email_free
	add	esp, 4
$LN728@x509_main:
	mov	eax, DWORD PTR _num$1$[esp+688]
$LN13@x509_main:
; Line 716
	inc	ebp
	mov	DWORD PTR _i$4$[esp+688], ebp
	cmp	ebp, eax
	jg	SHORT $LN448@x509_main
	mov	edi, DWORD PTR _e$1$[esp+688]
	jmp	$LL15@x509_main
$LN401@x509_main:
; Line 790
	push	OFFSET ??_C@_0BF@HHKPFLJJ@Modulus?$DNunavailable?6?$AA@
; Line 792
	jmp	$LN746@x509_main
$LN402@x509_main:
; Line 813
	push	OFFSET ??_C@_0BK@GNCDDMAG@Error?5getting?5public?5key?6?$AA@
; Line 815
	jmp	$LN746@x509_main
$LN403@x509_main:
; Line 833
	push	OFFSET ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
$LN747@x509_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 834
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 835
	jmp	$end$752
$LN404@x509_main:
; Line 898
	push	OFFSET ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 899
	jmp	$LN723@x509_main
$LN409@x509_main:
; Line 944
	push	OFFSET ??_C@_0BP@MEPPEIAN@no?5request?5key?5file?5specified?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 945
	jmp	$LN723@x509_main
$LN448@x509_main:
; Line 973
	cmp	DWORD PTR _checkend$1$[esp+688], 0
	je	$LN330@x509_main
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	push	0
	call	DWORD PTR __imp___time64
	mov	ecx, eax
	mov	esi, edx
; File c:\workpace\openssl\openssl-1.0.2h\apps\x509.c
; Line 974
	mov	eax, DWORD PTR _checkoffset$1$[esp+692]
	cdq
	add	ecx, eax
; Line 976
	lea	eax, DWORD PTR _tcheck$5[esp+692]
	push	eax
	mov	eax, DWORD PTR _x$1$[esp+696]
	adc	esi, edx
	mov	DWORD PTR _tcheck$5[esp+696], ecx
	mov	DWORD PTR _tcheck$5[esp+700], esi
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	call	_X509_cmp_time
	add	esp, 12					; 0000000cH
	test	eax, eax
	jns	SHORT $LN331@x509_main
; Line 977
	push	OFFSET ??_C@_0BJ@LBCJJJED@Certificate?5will?5expire?6?$AA@
	push	DWORD PTR _out$1$[esp+692]
	call	_BIO_printf
	add	esp, 8
; Line 978
	mov	DWORD PTR _ret$1$[esp+688], 1
; Line 979
	jmp	$LN723@x509_main
$LN331@x509_main:
; Line 980
	push	OFFSET ??_C@_0BN@DFOPHPMM@Certificate?5will?5not?5expire?6?$AA@
	push	DWORD PTR _out$1$[esp+692]
	call	_BIO_printf
	add	esp, 8
; Line 981
	mov	DWORD PTR _ret$1$[esp+688], 0
; Line 983
	jmp	$LN723@x509_main
$LN330@x509_main:
; Line 986
	push	DWORD PTR _checkip$1$[esp+688]
	mov	ebx, DWORD PTR _x$1$[esp+692]
	push	DWORD PTR _checkemail$1$[esp+692]
	mov	esi, DWORD PTR _STDout$1$[esp+696]
	push	DWORD PTR _checkhost$1$[esp+696]
	push	ebx
	push	esi
	call	_print_cert_checks
	add	esp, 20					; 00000014H
; Line 988
	cmp	DWORD PTR _noout$1$[esp+688], 0
	je	SHORT $LN333@x509_main
$LN343@x509_main:
; Line 989
	mov	DWORD PTR _ret$1$[esp+688], 0
; Line 990
	jmp	$end$752
$LN333@x509_main:
; Line 993
	cmp	DWORD PTR _badsig$1$[esp+688], 0
	je	SHORT $LN334@x509_main
; Line 994
	mov	eax, DWORD PTR [ebx+8]
	mov	ecx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [eax]
	xor	BYTE PTR [ecx+eax-1], 1
$LN334@x509_main:
; Line 996
	mov	eax, DWORD PTR _outformat$1$[esp+688]
	cmp	eax, 1
	jne	SHORT $LN335@x509_main
; Line 997
	push	ebx
	push	DWORD PTR _out$1$[esp+692]
	call	_i2d_X509_bio
	add	esp, 8
	jmp	SHORT $LN342@x509_main
$LN335@x509_main:
; Line 998
	cmp	eax, 3
	jne	SHORT $LN337@x509_main
; Line 999
	cmp	DWORD PTR _trustout$1$[esp+688], 0
; Line 1000
	push	ebx
	push	DWORD PTR _out$1$[esp+692]
	je	SHORT $LN339@x509_main
	call	_PEM_write_bio_X509_AUX
	add	esp, 8
	jmp	SHORT $LN342@x509_main
$LN339@x509_main:
; Line 1002
	call	_PEM_write_bio_X509
	add	esp, 8
; Line 1003
	jmp	SHORT $LN342@x509_main
$LN337@x509_main:
	cmp	eax, 4
	jne	SHORT $LN341@x509_main
; Line 1009
	lea	eax, DWORD PTR _hdr$6[esp+688]
	mov	DWORD PTR _hdr$6[esp+696], OFFSET ??_C@_0M@LLNFCECG@certificate?$AA@
	mov	DWORD PTR _nx$4[esp+688], eax
; Line 1012
	lea	eax, DWORD PTR _nx$4[esp+688]
	push	eax
	push	DWORD PTR _out$1$[esp+692]
	mov	DWORD PTR _hdr$6[esp+696], 11		; 0000000bH
	mov	DWORD PTR _nx$4[esp+700], ebx
	call	_NETSCAPE_X509_it
	push	eax
	call	_ASN1_item_i2d_bio
	add	esp, 12					; 0000000cH
$LN342@x509_main:
; Line 1017
	test	eax, eax
	jne	$LN343@x509_main
; Line 1018
	push	OFFSET ??_C@_0BN@HEHCANJK@unable?5to?5write?5certificate?6?$AA@
; Line 1020
	jmp	$LN747@x509_main
$LN341@x509_main:
; Line 1014
	push	OFFSET ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $end$752
$LN411@x509_main:
; Line 596
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
$LN749@x509_main:
	add	esp, 4
$LN723@x509_main:
	mov	esi, DWORD PTR _STDout$1$[esp+688]
$end$752:
; Line 1024
	cmp	DWORD PTR _need_rand$1$[esp+688], 0
	je	SHORT $LN344@x509_main
; Line 1025
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_write_file
	add	esp, 8
$LN344@x509_main:
; Line 1026
	call	_OBJ_cleanup
; Line 1027
	push	DWORD PTR _extconf$1$[esp+688]
	call	_NCONF_free
; Line 1028
	push	DWORD PTR _out$1$[esp+692]
	call	_BIO_free_all
; Line 1029
	push	esi
	call	_BIO_free_all
; Line 1030
	push	DWORD PTR _ctx$1$[esp+700]
	call	_X509_STORE_free
; Line 1031
	push	DWORD PTR _req$1$[esp+704]
	call	_X509_REQ_free
; Line 1032
	push	DWORD PTR _x$1$[esp+708]
	call	_X509_free
; Line 1033
	push	DWORD PTR _xca$1$[esp+712]
	call	_X509_free
; Line 1034
	push	DWORD PTR _Upkey$1$[esp+716]
	call	_EVP_PKEY_free
; Line 1035
	push	DWORD PTR _CApkey$1$[esp+720]
	call	_EVP_PKEY_free
; Line 1036
	push	DWORD PTR _fkey$1$[esp+724]
	call	_EVP_PKEY_free
; Line 1037
	mov	eax, DWORD PTR _sigopts$1$[esp+728]
	add	esp, 40					; 00000028H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	test	eax, eax
	je	SHORT $LN345@x509_main
; Line 1038
	push	eax
	call	_sk_free
	add	esp, 4
$LN345@x509_main:
; Line 1039
	push	DWORD PTR _rq$1$[esp+672]
	call	_X509_REQ_free
; Line 1040
	push	DWORD PTR _sno$1$[esp+676]
	call	_ASN1_INTEGER_free
; Line 1041
	push	OFFSET _ASN1_OBJECT_free
	push	DWORD PTR _trust$1$[esp+684]
	call	_sk_pop_free
; Line 1042
	push	OFFSET _ASN1_OBJECT_free
	push	DWORD PTR _reject$1$[esp+692]
	call	_sk_pop_free
; Line 1043
	mov	ecx, DWORD PTR _passin$[esp+696]
	add	esp, 24					; 00000018H
	test	ecx, ecx
	je	SHORT $LN689@x509_main
; Line 1044
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN689@x509_main:
; Line 1047
	mov	ecx, DWORD PTR __$ArrayPad$[esp+672]
	mov	eax, DWORD PTR _ret$1$[esp+672]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 672				; 000002a0H
	ret	0
_x509_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _purpose_print
_TEXT	SEGMENT
_pname$1$ = -4						; size = 4
_bio$ = 8						; size = 4
_cert$ = 12						; size = 4
_pt$ = 16						; size = 4
_purpose_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\x509.c
; Line 1259
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
; Line 1262
	mov	esi, DWORD PTR _pt$[esp+12]
	push	edi
	push	esi
	call	_X509_PURPOSE_get_id
; Line 1263
	push	esi
	mov	ebp, eax
	call	_X509_PURPOSE_get0_name
; Line 1264
	mov	edi, DWORD PTR _bio$[esp+24]
	add	esp, 8
	mov	DWORD PTR _pname$1$[esp+20], eax
	xor	esi, esi
	npad	3
$LL4@purpose_pr:
; Line 1265
	push	esi
	push	ebp
	push	DWORD PTR _cert$[esp+24]
	call	_X509_check_purpose
	mov	ebx, eax
; Line 1266
	test	esi, esi
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, OFFSET ??_C@_03OFDHMCAA@?5CA?$AA@
	cmove	ecx, eax
	push	ecx
	push	DWORD PTR _pname$1$[esp+36]
	push	OFFSET ??_C@_07DJCGDFC@?$CFs?$CFs?5?3?5?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 28					; 0000001cH
; Line 1267
	cmp	ebx, 1
	jne	SHORT $LN5@purpose_pr
; Line 1268
	push	OFFSET ??_C@_04KMHOJMOK@Yes?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $LN2@purpose_pr
$LN5@purpose_pr:
; Line 1269
	test	ebx, ebx
	jne	SHORT $LN7@purpose_pr
; Line 1270
	push	OFFSET ??_C@_03BMBEGLHK@No?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $LN2@purpose_pr
$LN7@purpose_pr:
; Line 1272
	push	ebx
	push	OFFSET ??_C@_0BH@CMNKFHFI@Yes?5?$CIWARNING?5code?$DN?$CFd?$CJ?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN2@purpose_pr:
; Line 1264
	inc	esi
	cmp	esi, 2
	jl	SHORT $LL4@purpose_pr
; Line 1274
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 1275
	pop	ecx
	ret	0
_purpose_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x509_certify
_TEXT	SEGMENT
_ctx2$1 = -164						; size = 28
_xsc$ = -136						; size = 136
_ctx$ = 8						; size = 4
_CAfile$ = 12						; size = 4
_digest$ = 16						; size = 4
_x$ = 20						; size = 4
_xca$ = 24						; size = 4
_pkey$ = 28						; size = 4
_sigopts$ = 32						; size = 4
_serialfile$ = 36					; size = 4
_create$ = 40						; size = 4
_days$ = 44						; size = 4
_clrext$ = 48						; size = 4
_conf$ = 52						; size = 4
_section$ = 56						; size = 4
_sno$ = 60						; size = 4
_x509_certify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\x509.c
; Line 1101
	mov	eax, 164				; 000000a4H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 1107
	push	DWORD PTR _xca$[esp+176]
	xor	edi, edi
	xor	ebx, ebx
	call	_X509_get_pubkey
; Line 1108
	push	DWORD PTR _pkey$[esp+180]
	mov	esi, eax
	push	esi
	call	_EVP_PKEY_copy_parameters
; Line 1109
	push	esi
	call	_EVP_PKEY_free
; Line 1111
	mov	esi, DWORD PTR _x$[esp+192]
	lea	eax, DWORD PTR _xsc$[esp+196]
	push	ebx
	push	esi
	push	DWORD PTR _ctx$[esp+200]
	push	eax
	call	_X509_STORE_CTX_init
	mov	ebp, DWORD PTR _sno$[esp+208]
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN4@x509_certi
; Line 1112
	push	OFFSET ??_C@_0BP@JMGLOJAO@Error?5initialising?5X509?5store?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1113
	jmp	$end$28
$LN4@x509_certi:
; Line 1115
	test	ebp, ebp
	je	SHORT $LN5@x509_certi
; Line 1116
	mov	ebx, ebp
	jmp	SHORT $LN7@x509_certi
$LN5@x509_certi:
; Line 1117
	push	DWORD PTR _create$[esp+176]
	push	DWORD PTR _serialfile$[esp+180]
	push	DWORD PTR _CAfile$[esp+184]
	call	_x509_load_serial
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	je	$end$28
$LN7@x509_certi:
; Line 1126
	lea	eax, DWORD PTR _xsc$[esp+180]
	push	esi
	push	eax
	call	_X509_STORE_CTX_set_cert
; Line 1127
	lea	eax, DWORD PTR _xsc$[esp+188]
	push	16384					; 00004000H
	push	eax
	call	_X509_STORE_CTX_set_flags
	add	esp, 16					; 00000010H
; Line 1128
	cmp	DWORD PTR _reqfile, edi
	jne	SHORT $LN8@x509_certi
	lea	eax, DWORD PTR _xsc$[esp+180]
	push	eax
	call	_X509_verify_cert
	add	esp, 4
	test	eax, eax
	jle	$end$28
$LN8@x509_certi:
; Line 1131
	push	DWORD PTR _pkey$[esp+176]
	push	DWORD PTR _xca$[esp+180]
	call	_X509_check_private_key
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@x509_certi
; Line 1132
	push	OFFSET ??_C@_0DA@DPECBGP@CA?5certificate?5and?5CA?5private?5ke@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1134
	jmp	$end$28
$LN9@x509_certi:
; Line 1137
	push	DWORD PTR _xca$[esp+176]
	call	_X509_get_subject_name
	push	eax
	push	esi
	call	_X509_set_issuer_name
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$end$28
; Line 1139
	push	ebx
	push	esi
	call	_X509_set_serialNumber
	add	esp, 8
	test	eax, eax
	je	$end$28
; Line 1142
	mov	eax, DWORD PTR [esi]
	push	0
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax]
	call	_X509_gmtime_adj
	add	esp, 8
	test	eax, eax
	je	$end$28
; Line 1146
	mov	eax, DWORD PTR [esi]
	push	0
	push	0
	push	DWORD PTR _days$[esp+184]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	call	_X509_time_adj_ex
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$end$28
; Line 1149
	cmp	DWORD PTR _clrext$[esp+176], edi
	je	SHORT $LN3@x509_certi
; Line 1150
	push	esi
	call	_X509_get_ext_count
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@x509_certi
$LL2@x509_certi:
; Line 1151
	push	0
	push	esi
	call	_X509_delete_ext
	push	esi
	call	_X509_get_ext_count
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LL2@x509_certi
$LN3@x509_certi:
; Line 1154
	mov	ebp, DWORD PTR _conf$[esp+176]
	test	ebp, ebp
	je	SHORT $LN16@x509_certi
; Line 1159
	push	2
	push	esi
	call	_X509_set_version
; Line 1161
	push	0
	push	0
	push	0
	push	esi
	push	DWORD PTR _xca$[esp+200]
	lea	eax, DWORD PTR _ctx2$1[esp+208]
	push	eax
	call	_X509V3_set_ctx
; Line 1162
	lea	eax, DWORD PTR _ctx2$1[esp+212]
	push	ebp
	push	eax
	call	_X509V3_set_nconf
; Line 1163
	push	esi
	push	DWORD PTR _section$[esp+220]
	lea	eax, DWORD PTR _ctx2$1[esp+228]
	push	eax
	push	ebp
	call	_X509V3_EXT_add_nconf
	add	esp, 56					; 00000038H
	test	eax, eax
	je	SHORT $LN26@x509_certi
$LN16@x509_certi:
; Line 1167
	push	DWORD PTR _sigopts$[esp+176]
	push	DWORD PTR _digest$[esp+180]
	push	DWORD PTR _pkey$[esp+184]
	push	esi
	push	DWORD PTR _bio_err
	call	_do_X509_sign
	add	esp, 20					; 00000014H
	mov	ecx, 1
	test	eax, eax
	cmovne	edi, ecx
$LN26@x509_certi:
	mov	ebp, DWORD PTR _sno$[esp+176]
$end$28:
; Line 1171
	lea	eax, DWORD PTR _xsc$[esp+180]
	push	eax
	call	_X509_STORE_CTX_cleanup
	add	esp, 4
; Line 1172
	test	edi, edi
	jne	SHORT $LN18@x509_certi
; Line 1173
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN18@x509_certi:
; Line 1174
	test	ebp, ebp
	jne	SHORT $LN25@x509_certi
; Line 1175
	push	ebx
	call	_ASN1_INTEGER_free
	add	esp, 4
$LN25@x509_certi:
; Line 1176
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1177
	add	esp, 164				; 000000a4H
	ret	0
_x509_certify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sign
_TEXT	SEGMENT
_ctx$1 = -28						; size = 28
_x$ = 8							; size = 4
_pkey$ = 12						; size = 4
_days$ = 16						; size = 4
_clrext$ = 20						; size = 4
_digest$ = 24						; size = 4
_conf$ = 28						; size = 4
_section$ = 32						; size = 4
_sign	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\x509.c
; Line 1215
	mov	eax, 28					; 0000001cH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 1219
	mov	edi, DWORD PTR _x$[esp+36]
	push	edi
	call	_X509_get_pubkey
; Line 1220
	mov	ebx, DWORD PTR _pkey$[esp+40]
	mov	esi, eax
	push	ebx
	push	esi
	call	_EVP_PKEY_copy_parameters
; Line 1221
	push	1
	push	esi
	call	_EVP_PKEY_save_parameters
; Line 1222
	push	esi
	call	_EVP_PKEY_free
; Line 1224
	push	edi
	call	_X509_get_subject_name
	push	eax
	push	edi
	call	_X509_set_issuer_name
	add	esp, 36					; 00000024H
	test	eax, eax
	je	$err$18
; Line 1226
	mov	eax, DWORD PTR [edi]
	push	0
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax]
	call	_X509_gmtime_adj
	add	esp, 8
	test	eax, eax
	je	$err$18
; Line 1229
	mov	eax, DWORD PTR [edi]
	push	0
	push	0
	push	DWORD PTR _days$[esp+44]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	call	_X509_time_adj_ex
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$18
; Line 1232
	push	ebx
	push	edi
	call	_X509_set_pubkey
	add	esp, 8
	test	eax, eax
	je	$err$18
; Line 1234
	cmp	DWORD PTR _clrext$[esp+36], 0
	je	SHORT $LN3@sign
; Line 1235
	push	edi
	call	_X509_get_ext_count
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@sign
	npad	7
$LL2@sign:
; Line 1236
	push	0
	push	edi
	call	_X509_delete_ext
	push	edi
	call	_X509_get_ext_count
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LL2@sign
$LN3@sign:
; Line 1238
	mov	esi, DWORD PTR _conf$[esp+36]
	test	esi, esi
	je	SHORT $LN10@sign
; Line 1243
	push	2
	push	edi
	call	_X509_set_version
; Line 1245
	push	0
	push	0
	push	0
	push	edi
	lea	eax, DWORD PTR _ctx$1[esp+64]
	push	edi
	push	eax
	call	_X509V3_set_ctx
; Line 1246
	lea	eax, DWORD PTR _ctx$1[esp+72]
	push	esi
	push	eax
	call	_X509V3_set_nconf
; Line 1247
	push	edi
	push	DWORD PTR _section$[esp+80]
	lea	eax, DWORD PTR _ctx$1[esp+88]
	push	eax
	push	esi
	call	_X509V3_EXT_add_nconf
	add	esp, 56					; 00000038H
	test	eax, eax
	je	SHORT $err$18
$LN10@sign:
; Line 1250
	push	DWORD PTR _digest$[esp+36]
	push	ebx
	push	edi
	call	_X509_sign
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$18
; Line 1252
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 1256
	add	esp, 28					; 0000001cH
	ret	0
$err$18:
; Line 1254
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 1255
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 1256
	add	esp, 28					; 0000001cH
	ret	0
_sign	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _callb
_TEXT	SEGMENT
_ok$ = 8						; size = 4
_ctx$ = 12						; size = 4
_callb	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\x509.c
; Line 1180
	push	esi
; Line 1188
	mov	esi, DWORD PTR _ctx$[esp]
	push	edi
	push	esi
	call	_X509_STORE_CTX_get_error
	mov	edi, eax
	add	esp, 4
; Line 1189
	cmp	edi, 18					; 00000012H
	je	SHORT $LN6@callb
; Line 1197
	cmp	DWORD PTR _ok$[esp+4], 0
	je	SHORT $LN3@callb
; Line 1198
	push	OFFSET ??_C@_0EA@MDLEKGLP@error?5with?5certificate?5to?5be?5cer@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1200
	xor	eax, eax
	pop	edi
	pop	esi
; Line 1210
	ret	0
$LN3@callb:
; Line 1202
	push	esi
	call	_X509_STORE_CTX_get_current_cert
	add	esp, 4
; Line 1203
	push	0
	push	eax
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	push	0
	push	DWORD PTR _bio_err
	call	_print_name
; Line 1204
	push	edi
	call	_X509_verify_cert_error_string
	add	esp, 20					; 00000014H
	push	eax
	push	esi
	call	_X509_STORE_CTX_get_error_depth
	add	esp, 4
	push	eax
	push	edi
	push	OFFSET ??_C@_0DC@MMCOBAF@error?5with?5certificate?5?9?5error?5?$CF@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 20					; 00000014H
$LN6@callb:
; Line 1208
	pop	edi
	mov	eax, 1
	pop	esi
; Line 1210
	ret	0
_callb	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\time.h
; Line 535
	jmp	DWORD PTR __imp___time64
_time	ENDP
_TEXT	ENDS
END

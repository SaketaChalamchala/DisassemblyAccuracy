; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\whrlpool\wp_dgst.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_WHIRLPOOL_Init
PUBLIC	_WHIRLPOOL_Update
PUBLIC	_WHIRLPOOL_BitUpdate
PUBLIC	_WHIRLPOOL_Final
PUBLIC	_WHIRLPOOL
EXTRN	_whirlpool_block:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?m@?1??WHIRLPOOL@@9@9 DB 040H DUP (?)			; `WHIRLPOOL'::`2'::m
_BSS	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _WHIRLPOOL
_TEXT	SEGMENT
_ctx$ = -172						; size = 168
__$ArrayPad$ = -4					; size = 4
_inp$ = 8						; size = 4
_bytes$ = 12						; size = 4
_md$ = 16						; size = 4
_WHIRLPOOL PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\whrlpool\wp_dgst.c
; Line 247
	mov	eax, 172				; 000000acH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+172], eax
	mov	eax, DWORD PTR _md$[esp+168]
; Line 251
	test	eax, eax
	push	esi
	mov	esi, DWORD PTR _inp$[esp+172]
	push	edi
	mov	edi, OFFSET ?m@?1??WHIRLPOOL@@9@9
; Line 60
	push	168					; 000000a8H
; Line 251
	cmovne	edi, eax
; Line 60
	lea	eax, DWORD PTR _ctx$[esp+184]
	push	0
	push	eax
	call	_memset
; Line 254
	push	DWORD PTR _bytes$[esp+188]
	lea	eax, DWORD PTR _ctx$[esp+196]
	push	esi
	push	eax
	call	_WHIRLPOOL_Update
; Line 255
	lea	eax, DWORD PTR _ctx$[esp+204]
	push	eax
	push	edi
	call	_WHIRLPOOL_Final
; Line 257
	mov	ecx, DWORD PTR __$ArrayPad$[esp+212]
	add	esp, 32					; 00000020H
	mov	eax, edi
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 172				; 000000acH
	ret	0
_WHIRLPOOL ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _WHIRLPOOL_Final
_TEXT	SEGMENT
_md$ = 8						; size = 4
_c$ = 12						; size = 4
_WHIRLPOOL_Final PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\whrlpool\wp_dgst.c
; Line 208
	push	esi
; Line 209
	mov	esi, DWORD PTR _c$[esp]
	mov	ecx, DWORD PTR [esi+128]
	mov	edx, ecx
	shr	edx, 3
; Line 213
	and	ecx, 7
; Line 214
	je	SHORT $LN8@WHIRLPOOL_
; Line 215
	mov	eax, 128				; 00000080H
	sar	eax, cl
	or	BYTE PTR [edx+esi+64], al
	jmp	SHORT $LN9@WHIRLPOOL_
$LN8@WHIRLPOOL_:
; Line 217
	mov	BYTE PTR [edx+esi+64], 128		; 00000080H
$LN9@WHIRLPOOL_:
; Line 218
	inc	edx
; Line 221
	cmp	edx, 32					; 00000020H
	jbe	SHORT $LN28@WHIRLPOOL_
; Line 222
	cmp	edx, 64					; 00000040H
	jae	SHORT $LN11@WHIRLPOOL_
; Line 223
	mov	eax, 64					; 00000040H
	sub	eax, edx
	push	eax
	lea	eax, DWORD PTR [esi+64]
	add	eax, edx
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN11@WHIRLPOOL_:
; Line 224
	push	1
	lea	eax, DWORD PTR [esi+64]
	push	eax
	push	esi
	call	_whirlpool_block
	add	esp, 12					; 0000000cH
; Line 225
	xor	edx, edx
; Line 227
	jmp	SHORT $LN27@WHIRLPOOL_
$LN28@WHIRLPOOL_:
	jae	SHORT $LN12@WHIRLPOOL_
$LN27@WHIRLPOOL_:
; Line 228
	mov	eax, 32					; 00000020H
	sub	eax, edx
	push	eax
	lea	eax, DWORD PTR [esi+64]
	add	eax, edx
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN12@WHIRLPOOL_:
; Line 231
	push	edi
	lea	ecx, DWORD PTR [esi+127]
	mov	edi, 8
	lea	edx, DWORD PTR [esi+132]
$LL4@WHIRLPOOL_:
; Line 233
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [ecx-4]
; Line 234
	mov	BYTE PTR [ecx+4], al
	lea	edx, DWORD PTR [edx+4]
	shr	eax, 8
	mov	BYTE PTR [ecx+3], al
	shr	eax, 8
	mov	BYTE PTR [ecx+2], al
	shr	eax, 8
	mov	BYTE PTR [ecx+1], al
	sub	edi, 1
	jne	SHORT $LL4@WHIRLPOOL_
; Line 236
	push	1
	lea	eax, DWORD PTR [esi+64]
	push	eax
	push	esi
	call	_whirlpool_block
; Line 238
	mov	eax, DWORD PTR _md$[esp+16]
	add	esp, 12					; 0000000cH
	pop	edi
	test	eax, eax
	je	SHORT $LN13@WHIRLPOOL_
; Line 239
	movups	xmm0, XMMWORD PTR [esi]
; Line 240
	push	168					; 000000a8H
	push	0
	movups	XMMWORD PTR [eax], xmm0
	push	esi
	movups	xmm0, XMMWORD PTR [esi+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [esi+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [esi+48]
	movups	XMMWORD PTR [eax+48], xmm0
	call	_memset
	add	esp, 12					; 0000000cH
; Line 241
	mov	eax, 1
	pop	esi
; Line 244
	ret	0
$LN13@WHIRLPOOL_:
; Line 243
	xor	eax, eax
	pop	esi
; Line 244
	ret	0
_WHIRLPOOL_Final ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _WHIRLPOOL_BitUpdate
_TEXT	SEGMENT
_bitrem$1$ = -8						; size = 4
_inpgap$1$ = -4						; size = 4
_b$2$ = 8						; size = 1
_b$1$ = 8						; size = 1
_c$ = 8							; size = 4
tv523 = 12						; size = 4
__inp$ = 12						; size = 4
_inpgap$2$ = 16						; size = 4
_bits$ = 16						; size = 4
_WHIRLPOOL_BitUpdate PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\whrlpool\wp_dgst.c
; Line 86
	mov	eax, 8
	call	__chkstk
	push	ebx
; Line 88
	mov	ebx, DWORD PTR _c$[esp+8]
	push	ebp
	push	esi
	push	edi
; Line 89
	mov	edi, DWORD PTR _bits$[esp+20]
	mov	ecx, edi
	mov	esi, DWORD PTR [ebx+128]
	neg	ecx
; Line 97
	add	DWORD PTR [ebx+132], edi
	mov	edx, esi
	and	edx, 7
	and	ecx, 7
	mov	DWORD PTR _bitrem$1$[esp+24], edx
	mov	DWORD PTR _inpgap$2$[esp+20], ecx
; Line 98
	cmp	DWORD PTR [ebx+132], edi
	jae	SHORT $LN3@WHIRLPOOL_
; Line 99
	mov	ecx, 1
	lea	eax, DWORD PTR [ebx+136]
	npad	7
$LL4@WHIRLPOOL_:
; Line 101
	add	DWORD PTR [eax], 1
; Line 103
	jne	SHORT $LN10@WHIRLPOOL_
	inc	ecx
	add	eax, 4
	cmp	ecx, 8
	jb	SHORT $LL4@WHIRLPOOL_
$LN10@WHIRLPOOL_:
	mov	ecx, DWORD PTR _inpgap$2$[esp+20]
$LN3@WHIRLPOOL_:
	mov	ebp, DWORD PTR __inp$[esp+20]
$reconsider$50:
; Line 107
	test	ecx, ecx
	jne	SHORT $LN37@WHIRLPOOL_
	test	edx, edx
	je	$LN33@WHIRLPOOL_
$LN37@WHIRLPOOL_:
; Line 169
	mov	eax, 8
	sub	eax, ecx
	mov	DWORD PTR _inpgap$1$[esp+24], eax
	npad	3
$LL7@WHIRLPOOL_:
; Line 147
	test	edi, edi
	je	$LN6@WHIRLPOOL_
; Line 148
	mov	eax, esi
	shr	eax, 3
; Line 152
	cmp	edx, ecx
	je	$LN36@WHIRLPOOL_
; Line 169
	mov	dh, BYTE PTR [ebp]
	cmp	edi, 8
	jb	$LN20@WHIRLPOOL_
	lea	ecx, DWORD PTR [ebp+1]
	mov	DWORD PTR tv523[esp+20], ecx
; Line 172
	lea	ebp, DWORD PTR [ebx+64]
	mov	ecx, DWORD PTR _inpgap$2$[esp+20]
	shl	dh, cl
	mov	ecx, DWORD PTR tv523[esp+20]
	mov	dl, BYTE PTR [ecx]
	mov	cl, BYTE PTR _inpgap$1$[esp+24]
	shr	dl, cl
	mov	ecx, DWORD PTR _bitrem$1$[esp+24]
	or	dh, dl
	mov	BYTE PTR _b$1$[esp+20], dh
	test	ecx, ecx
	je	SHORT $LN22@WHIRLPOOL_
	mov	dl, dh
	shr	dl, cl
	or	BYTE PTR [eax+ebp], dl
	jmp	SHORT $LN47@WHIRLPOOL_
$LN22@WHIRLPOOL_:
; Line 174
	mov	BYTE PTR [eax+ebp], dh
$LN47@WHIRLPOOL_:
; Line 177
	mov	ecx, DWORD PTR tv523[esp+20]
	add	esi, 8
	inc	eax
	mov	DWORD PTR __inp$[esp+20], ecx
	sub	edi, 8
; Line 178
	cmp	esi, 512				; 00000200H
	jb	SHORT $LN24@WHIRLPOOL_
; Line 179
	push	1
	push	ebp
	push	ebx
	call	_whirlpool_block
	add	esp, 12					; 0000000cH
; Line 180
	xor	eax, eax
; Line 181
	and	esi, 511				; 000001ffH
$LN24@WHIRLPOOL_:
; Line 183
	mov	edx, DWORD PTR _bitrem$1$[esp+24]
	test	edx, edx
	je	SHORT $LN21@WHIRLPOOL_
; Line 184
	mov	ecx, 8
	sub	ecx, edx
	mov	ch, BYTE PTR _b$1$[esp+20]
	shl	ch, cl
	mov	BYTE PTR [eax+ebp], ch
; Line 203
	mov	ebp, DWORD PTR __inp$[esp+20]
	mov	ecx, DWORD PTR _inpgap$2$[esp+20]
	mov	DWORD PTR [ebx+128], esi
	jmp	$LL7@WHIRLPOOL_
$LN20@WHIRLPOOL_:
; Line 187
	shl	dh, cl
; Line 189
	lea	ebp, DWORD PTR [ebx+64]
	mov	ecx, DWORD PTR _bitrem$1$[esp+24]
	mov	BYTE PTR _b$2$[esp+20], dh
	test	ecx, ecx
	je	SHORT $LN26@WHIRLPOOL_
	mov	dl, dh
	shr	dl, cl
	or	BYTE PTR [eax+ebp], dl
	jmp	SHORT $LN48@WHIRLPOOL_
$LN26@WHIRLPOOL_:
; Line 191
	mov	BYTE PTR [eax+ebp], dh
$LN48@WHIRLPOOL_:
; Line 192
	add	esi, edi
	inc	eax
; Line 193
	cmp	esi, 512				; 00000200H
	jne	SHORT $LN28@WHIRLPOOL_
; Line 194
	push	1
	push	ebp
	push	ebx
	call	_whirlpool_block
	mov	dh, BYTE PTR _b$2$[esp+32]
	add	esp, 12					; 0000000cH
; Line 195
	xor	eax, eax
; Line 196
	xor	esi, esi
$LN28@WHIRLPOOL_:
; Line 198
	mov	edi, DWORD PTR _bitrem$1$[esp+24]
	test	edi, edi
	je	SHORT $LN29@WHIRLPOOL_
; Line 199
	mov	ecx, 8
	sub	ecx, edi
	shl	dh, cl
	mov	BYTE PTR [eax+ebp], dh
$LN29@WHIRLPOOL_:
; Line 200
	mov	edx, DWORD PTR _bitrem$1$[esp+24]
	xor	edi, edi
$LN21@WHIRLPOOL_:
; Line 203
	mov	ebp, DWORD PTR __inp$[esp+20]
	mov	ecx, DWORD PTR _inpgap$2$[esp+20]
	mov	DWORD PTR [ebx+128], esi
	jmp	$LL7@WHIRLPOOL_
$LN36@WHIRLPOOL_:
; Line 153
	mov	ecx, DWORD PTR _inpgap$2$[esp+20]
	lea	edx, DWORD PTR [ebx+64]
; Line 155
	add	esi, DWORD PTR _inpgap$1$[esp+24]
	add	edx, eax
; Line 157
	sub	edi, DWORD PTR _inpgap$1$[esp+24]
	mov	eax, 255				; 000000ffH
	sar	eax, cl
; Line 158
	xor	ecx, ecx
	and	al, BYTE PTR [ebp]
; Line 159
	inc	ebp
	or	BYTE PTR [edx], al
	xor	edx, edx
	mov	DWORD PTR _bitrem$1$[esp+24], edx
	mov	DWORD PTR _inpgap$2$[esp+20], ecx
	mov	DWORD PTR __inp$[esp+20], ebp
; Line 160
	cmp	esi, 512				; 00000200H
	jne	SHORT $LN19@WHIRLPOOL_
; Line 161
	push	1
	lea	eax, DWORD PTR [ebx+64]
	push	eax
	push	ebx
	call	_whirlpool_block
	mov	edx, DWORD PTR _bitrem$1$[esp+36]
	add	esp, 12					; 0000000cH
; Line 162
	xor	esi, esi
	mov	ecx, esi
$LN19@WHIRLPOOL_:
; Line 164
	mov	DWORD PTR [ebx+128], esi
	jmp	$reconsider$50
$LN33@WHIRLPOOL_:
; Line 108
	test	edi, edi
	je	$LN6@WHIRLPOOL_
$LL5@WHIRLPOOL_:
; Line 109
	test	esi, esi
	jne	SHORT $LN13@WHIRLPOOL_
	mov	ebp, edi
	shr	ebp, 9
	test	ebp, ebp
	je	SHORT $LN13@WHIRLPOOL_
; Line 110
	push	ebp
	push	DWORD PTR __inp$[esp+24]
	push	ebx
	call	_whirlpool_block
; Line 111
	shl	ebp, 9
	add	esp, 12					; 0000000cH
	shr	ebp, 3
	add	DWORD PTR __inp$[esp+20], ebp
; Line 112
	and	edi, 511				; 000001ffH
; Line 113
	jmp	SHORT $LN14@WHIRLPOOL_
$LN13@WHIRLPOOL_:
; Line 116
	mov	ebp, 512				; 00000200H
	mov	ecx, esi
	sub	ebp, esi
	shr	ecx, 3
; Line 117
	cmp	edi, ebp
	jb	SHORT $LN15@WHIRLPOOL_
; Line 118
	sub	edi, ebp
; Line 120
	lea	esi, DWORD PTR [ebx+64]
	shr	ebp, 3
	lea	eax, DWORD PTR [esi+ecx]
	push	ebp
	push	DWORD PTR __inp$[esp+24]
	push	eax
	call	_memcpy
; Line 121
	add	DWORD PTR __inp$[esp+32], ebp
; Line 122
	push	1
	push	esi
	push	ebx
	call	_whirlpool_block
	add	esp, 24					; 00000018H
; Line 123
	xor	esi, esi
; Line 124
	jmp	SHORT $LN16@WHIRLPOOL_
$LN15@WHIRLPOOL_:
; Line 125
	mov	eax, edi
	shr	eax, 3
	push	eax
	push	DWORD PTR __inp$[esp+24]
	lea	eax, DWORD PTR [ebx+64]
	add	eax, ecx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 126
	add	esi, edi
; Line 127
	xor	edi, edi
$LN16@WHIRLPOOL_:
; Line 129
	mov	DWORD PTR [ebx+128], esi
$LN14@WHIRLPOOL_:
; Line 108
	test	edi, edi
	jne	$LL5@WHIRLPOOL_
$LN6@WHIRLPOOL_:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 205
	add	esp, 8
	ret	0
_WHIRLPOOL_BitUpdate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _WHIRLPOOL_Update
_TEXT	SEGMENT
_b$2$ = -13						; size = 1
_b$1$ = -13						; size = 1
_inp$1$ = -12						; size = 4
_bitrem$1$ = -8						; size = 4
tv593 = -4						; size = 4
_c$ = 8							; size = 4
__inp$ = 12						; size = 4
_bytes$ = 16						; size = 4
_WHIRLPOOL_Update PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\whrlpool\wp_dgst.c
; Line 65
	mov	eax, 16					; 00000010H
	call	__chkstk
; Line 74
	mov	eax, DWORD PTR _bytes$[esp+12]
	mov	ecx, DWORD PTR __inp$[esp+12]
	push	ebp
	mov	ebp, DWORD PTR _c$[esp+16]
	cmp	eax, 268435456				; 10000000H
	jb	$LN3@WHIRLPOOL_
; Line 72
	push	ebx
	shr	eax, 28					; 0000001cH
	push	esi
	mov	DWORD PTR tv593[esp+28], eax
	push	edi
	npad	4
$LL2@WHIRLPOOL_:
; Line 88
	mov	esi, DWORD PTR [ebp+128]
; Line 75
	mov	edi, -2147483648			; 80000000H
; Line 97
	add	DWORD PTR [ebp+132], edi
	mov	ebx, esi
	and	ebx, 7
	mov	DWORD PTR _inp$1$[esp+32], ecx
	mov	DWORD PTR _bitrem$1$[esp+32], ebx
; Line 98
	cmp	DWORD PTR [ebp+132], edi
	jae	SHORT $reconsider$63
; Line 99
	mov	edx, 1
	lea	eax, DWORD PTR [ebp+136]
$LL9@WHIRLPOOL_:
; Line 101
	add	DWORD PTR [eax], 1
; Line 103
	jne	SHORT $reconsider$63
	inc	edx
	add	eax, 4
	cmp	edx, 8
	jb	SHORT $LL9@WHIRLPOOL_
	npad	1
$reconsider$63:
; Line 107
	test	ebx, ebx
	je	$LN39@WHIRLPOOL_
$LL12@WHIRLPOOL_:
; Line 147
	test	edi, edi
	je	$LN11@WHIRLPOOL_
; Line 148
	mov	ebx, esi
	shr	ebx, 3
; Line 168
	cmp	edi, 8
	jb	SHORT $LN25@WHIRLPOOL_
; Line 169
	mov	ah, BYTE PTR [ecx]
	lea	edx, DWORD PTR [ecx+1]
; Line 172
	mov	cl, BYTE PTR _bitrem$1$[esp+32]
	mov	al, ah
	shr	al, cl
; Line 175
	add	esi, 8
	or	BYTE PTR [ebp+ebx+64], al
	lea	ecx, DWORD PTR [ebp+64]
	inc	ebx
	mov	BYTE PTR _b$1$[esp+32], ah
; Line 176
	sub	edi, 8
; Line 177
	mov	DWORD PTR _inp$1$[esp+32], edx
; Line 178
	cmp	esi, 512				; 00000200H
	jb	SHORT $LN29@WHIRLPOOL_
; Line 179
	push	1
	push	ecx
	push	ebp
	call	_whirlpool_block
	mov	ah, BYTE PTR _b$1$[esp+44]
	add	esp, 12					; 0000000cH
; Line 180
	xor	ebx, ebx
; Line 181
	and	esi, 511				; 000001ffH
$LN29@WHIRLPOOL_:
; Line 184
	mov	ecx, 8
	sub	ecx, DWORD PTR _bitrem$1$[esp+32]
	shl	ah, cl
; Line 203
	mov	ecx, DWORD PTR _inp$1$[esp+32]
	mov	BYTE PTR [ebp+ebx+64], ah
	mov	DWORD PTR [ebp+128], esi
	jmp	SHORT $LL12@WHIRLPOOL_
$LN25@WHIRLPOOL_:
; Line 187
	mov	dl, BYTE PTR [ecx]
; Line 192
	add	esi, edi
	mov	cl, BYTE PTR _bitrem$1$[esp+32]
	mov	al, dl
	shr	al, cl
	lea	ecx, DWORD PTR [ebp+64]
	or	BYTE PTR [ecx+ebx], al
	inc	ebx
	mov	BYTE PTR _b$2$[esp+32], dl
; Line 193
	cmp	esi, 512				; 00000200H
	jne	SHORT $LN33@WHIRLPOOL_
; Line 194
	push	1
	push	ecx
	push	ebp
	call	_whirlpool_block
	mov	dl, BYTE PTR _b$2$[esp+44]
	add	esp, 12					; 0000000cH
; Line 195
	xor	ebx, ebx
; Line 196
	xor	esi, esi
$LN33@WHIRLPOOL_:
; Line 199
	mov	ecx, 8
	lea	eax, DWORD PTR [ebp+64]
	sub	ecx, DWORD PTR _bitrem$1$[esp+32]
	shl	dl, cl
; Line 200
	xor	edi, edi
; Line 203
	mov	ecx, DWORD PTR _inp$1$[esp+32]
	mov	BYTE PTR [eax+ebx], dl
	mov	DWORD PTR [ebp+128], esi
	jmp	$LL12@WHIRLPOOL_
$LN39@WHIRLPOOL_:
; Line 108
	test	edi, edi
	je	$LN11@WHIRLPOOL_
$LL10@WHIRLPOOL_:
; Line 109
	test	esi, esi
	jne	SHORT $LN18@WHIRLPOOL_
	mov	ebx, edi
	shr	ebx, 9
	test	ebx, ebx
	je	SHORT $LN18@WHIRLPOOL_
; Line 110
	push	ebx
	push	ecx
	push	ebp
	call	_whirlpool_block
; Line 111
	mov	ecx, DWORD PTR _inp$1$[esp+44]
	add	esp, 12					; 0000000cH
	shl	ebx, 9
	shr	ebx, 3
	add	ecx, ebx
; Line 112
	and	edi, 511				; 000001ffH
	mov	DWORD PTR _inp$1$[esp+32], ecx
; Line 113
	jmp	SHORT $LN19@WHIRLPOOL_
$LN18@WHIRLPOOL_:
; Line 116
	mov	ebx, 512				; 00000200H
	mov	edx, esi
	sub	ebx, esi
	shr	edx, 3
; Line 117
	cmp	edi, ebx
	jb	SHORT $LN20@WHIRLPOOL_
; Line 118
	sub	edi, ebx
; Line 120
	lea	esi, DWORD PTR [ebp+64]
	shr	ebx, 3
	lea	eax, DWORD PTR [esi+edx]
	push	ebx
	push	ecx
	push	eax
	call	_memcpy
; Line 121
	mov	edx, DWORD PTR _inp$1$[esp+44]
; Line 122
	push	1
	add	edx, ebx
	push	esi
	push	ebp
	mov	DWORD PTR _inp$1$[esp+56], edx
	call	_whirlpool_block
	add	esp, 24					; 00000018H
; Line 123
	xor	esi, esi
; Line 124
	jmp	SHORT $LN21@WHIRLPOOL_
$LN20@WHIRLPOOL_:
; Line 125
	mov	eax, edi
	shr	eax, 3
	push	eax
	lea	eax, DWORD PTR [ebp+64]
	push	ecx
	add	eax, edx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 126
	add	esi, edi
; Line 127
	xor	edi, edi
$LN21@WHIRLPOOL_:
	mov	ecx, DWORD PTR _inp$1$[esp+32]
; Line 129
	mov	DWORD PTR [ebp+128], esi
$LN19@WHIRLPOOL_:
; Line 108
	test	edi, edi
	jne	$LL10@WHIRLPOOL_
$LN11@WHIRLPOOL_:
; Line 76
	mov	eax, DWORD PTR _bytes$[esp+28]
; Line 77
	mov	ecx, DWORD PTR __inp$[esp+28]
	sub	eax, 268435456				; 10000000H
	add	ecx, 268435456				; 10000000H
	mov	DWORD PTR _bytes$[esp+28], eax
	sub	DWORD PTR tv593[esp+32], 1
	mov	DWORD PTR __inp$[esp+28], ecx
	jne	$LL2@WHIRLPOOL_
	pop	edi
	pop	esi
	pop	ebx
$LN3@WHIRLPOOL_:
; Line 79
	test	eax, eax
	je	SHORT $LN60@WHIRLPOOL_
; Line 80
	shl	eax, 3
	push	eax
	push	ecx
	push	ebp
	call	_WHIRLPOOL_BitUpdate
	add	esp, 12					; 0000000cH
$LN60@WHIRLPOOL_:
; Line 82
	mov	eax, 1
	pop	ebp
; Line 83
	add	esp, 16					; 00000010H
	ret	0
_WHIRLPOOL_Update ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _WHIRLPOOL_Init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_WHIRLPOOL_Init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\whrlpool\wp_dgst.c
; Line 60
	push	168					; 000000a8H
	push	0
	push	DWORD PTR _c$[esp+4]
	call	_memset
	add	esp, 12					; 0000000cH
; Line 61
	mov	eax, 1
; Line 62
	ret	0
_WHIRLPOOL_Init ENDP
_TEXT	ENDS
END

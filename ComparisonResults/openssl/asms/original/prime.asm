; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\prime.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_prime_main
PUBLIC	??_C@_04FHOEMGIO@?9hex?$AA@			; `string'
PUBLIC	??_C@_09MOJFIIKN@?9generate?$AA@		; `string'
PUBLIC	??_C@_05HDJDOKJ@?9bits?$AA@			; `string'
PUBLIC	??_C@_05JMDHGKLN@?9safe?$AA@			; `string'
PUBLIC	??_C@_07JOIGCCHK@?9checks?$AA@			; `string'
PUBLIC	??_C@_0BF@DKEEOPFF@Unknown?5option?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@KFPKNCFA@No?5prime?5specified?6?$AA@	; `string'
PUBLIC	??_C@_0BO@OCGJBDGA@Specifiy?5the?5number?5of?5bits?4?6?$AA@ ; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_04LKOGMCLF@not?5?$AA@			; `string'
PUBLIC	??_C@_0N@HHDFGFOO@?5is?5?$CFsprime?6?$AA@	; `string'
PUBLIC	??_C@_0N@NDELNNPO@options?5are?6?$AA@		; `string'
PUBLIC	??_C@_0L@DOEGEJKP@?$CF?914s?5hex?6?$AA@		; `string'
PUBLIC	??_C@_0M@DNJFMGLC@?9checks?5?$DMn?$DO?$AA@	; `string'
PUBLIC	??_C@_0BI@KOKHAHLD@?$CF?914s?5number?5of?5checks?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__atoi:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_print:PROC
EXTRN	_BN_bn2hex:PROC
EXTRN	_BN_bn2dec:PROC
EXTRN	_BN_hex2bn:PROC
EXTRN	_BN_dec2bn:PROC
EXTRN	_BN_generate_prime_ex:PROC
EXTRN	_BN_is_prime_ex:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
;	COMDAT ??_C@_0BI@KOKHAHLD@?$CF?914s?5number?5of?5checks?6?$AA@
CONST	SEGMENT
??_C@_0BI@KOKHAHLD@?$CF?914s?5number?5of?5checks?6?$AA@ DB '%-14s number '
	DB	'of checks', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DNJFMGLC@?9checks?5?$DMn?$DO?$AA@
CONST	SEGMENT
??_C@_0M@DNJFMGLC@?9checks?5?$DMn?$DO?$AA@ DB '-checks <n>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DOEGEJKP@?$CF?914s?5hex?6?$AA@
CONST	SEGMENT
??_C@_0L@DOEGEJKP@?$CF?914s?5hex?6?$AA@ DB '%-14s hex', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NDELNNPO@options?5are?6?$AA@
CONST	SEGMENT
??_C@_0N@NDELNNPO@options?5are?6?$AA@ DB 'options are', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HHDFGFOO@?5is?5?$CFsprime?6?$AA@
CONST	SEGMENT
??_C@_0N@HHDFGFOO@?5is?5?$CFsprime?6?$AA@ DB ' is %sprime', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LKOGMCLF@not?5?$AA@
CONST	SEGMENT
??_C@_04LKOGMCLF@not?5?$AA@ DB 'not ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OCGJBDGA@Specifiy?5the?5number?5of?5bits?4?6?$AA@
CONST	SEGMENT
??_C@_0BO@OCGJBDGA@Specifiy?5the?5number?5of?5bits?4?6?$AA@ DB 'Specifiy '
	DB	'the number of bits.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KFPKNCFA@No?5prime?5specified?6?$AA@
CONST	SEGMENT
??_C@_0BE@KFPKNCFA@No?5prime?5specified?6?$AA@ DB 'No prime specified', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DKEEOPFF@Unknown?5option?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BF@DKEEOPFF@Unknown?5option?5?8?$CFs?8?6?$AA@ DB 'Unknown option '''
	DB	'%s''', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07JOIGCCHK@?9checks?$AA@
CONST	SEGMENT
??_C@_07JOIGCCHK@?9checks?$AA@ DB '-checks', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05JMDHGKLN@?9safe?$AA@
CONST	SEGMENT
??_C@_05JMDHGKLN@?9safe?$AA@ DB '-safe', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HDJDOKJ@?9bits?$AA@
CONST	SEGMENT
??_C@_05HDJDOKJ@?9bits?$AA@ DB '-bits', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MOJFIIKN@?9generate?$AA@
CONST	SEGMENT
??_C@_09MOJFIIKN@?9generate?$AA@ DB '-generate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FHOEMGIO@?9hex?$AA@
CONST	SEGMENT
??_C@_04FHOEMGIO@?9hex?$AA@ DB '-hex', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _prime_main
_TEXT	SEGMENT
_bn$ = -20						; size = 4
_generate$1$ = -16					; size = 4
_hex$1$ = -12						; size = 4
_bits$1$ = -8						; size = 4
_safe$1$ = -4						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_prime_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\prime.c
; Line 61
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
; Line 64
	xor	ecx, ecx
	mov	DWORD PTR _hex$1$[esp+24], 0
	push	ebp
	mov	ebp, 20					; 00000014H
	mov	DWORD PTR _generate$1$[esp+28], ecx
	push	esi
	push	edi
; Line 65
	mov	DWORD PTR _bits$1$[esp+36], ecx
; Line 66
	mov	DWORD PTR _safe$1$[esp+36], ecx
; Line 67
	mov	DWORD PTR _bn$[esp+36], ecx
; Line 72
	cmp	DWORD PTR _bio_err, ecx
	jne	SHORT $LN5@prime_main
; Line 73
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN58@prime_main
; Line 74
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN58@prime_main:
	xor	ecx, ecx
$LN5@prime_main:
; Line 76
	mov	edi, DWORD PTR _argc$[esp+32]
; Line 77
	mov	ebx, DWORD PTR _argv$[esp+32]
	dec	edi
	add	ebx, 4
; Line 78
	cmp	edi, 1
	jl	$LN56@prime_main
	npad	2
$LL2@prime_main:
	mov	esi, DWORD PTR [ebx]
	cmp	BYTE PTR [esi], 45			; 0000002dH
	jne	$LN57@prime_main
; Line 79
	mov	ecx, OFFSET ??_C@_04FHOEMGIO@?9hex?$AA@
	mov	eax, esi
$LL36@prime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN37@prime_main
	test	dl, dl
	je	SHORT $LN38@prime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN37@prime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL36@prime_main
$LN38@prime_main:
	xor	eax, eax
	jmp	SHORT $LN39@prime_main
$LN37@prime_main:
	sbb	eax, eax
	or	eax, 1
$LN39@prime_main:
	test	eax, eax
	jne	SHORT $LN6@prime_main
; Line 80
	mov	DWORD PTR _hex$1$[esp+36], 1
	jmp	$LN59@prime_main
$LN6@prime_main:
; Line 81
	mov	ecx, OFFSET ??_C@_09MOJFIIKN@?9generate?$AA@
	mov	eax, esi
	npad	1
$LL40@prime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN41@prime_main
	test	dl, dl
	je	SHORT $LN42@prime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN41@prime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL40@prime_main
$LN42@prime_main:
	xor	eax, eax
	jmp	SHORT $LN43@prime_main
$LN41@prime_main:
	sbb	eax, eax
	or	eax, 1
$LN43@prime_main:
	test	eax, eax
	jne	SHORT $LN8@prime_main
; Line 82
	mov	ecx, 1
	mov	DWORD PTR _generate$1$[esp+36], ecx
	jmp	$LN19@prime_main
$LN8@prime_main:
; Line 83
	mov	ecx, OFFSET ??_C@_05HDJDOKJ@?9bits?$AA@
	mov	eax, esi
	npad	2
$LL44@prime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN45@prime_main
	test	dl, dl
	je	SHORT $LN46@prime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN45@prime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL44@prime_main
$LN46@prime_main:
	xor	eax, eax
	jmp	SHORT $LN47@prime_main
$LN45@prime_main:
	sbb	eax, eax
	or	eax, 1
$LN47@prime_main:
	test	eax, eax
	jne	SHORT $LN10@prime_main
; Line 84
	dec	edi
	cmp	edi, 1
	jl	$bad$64
; Line 87
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	DWORD PTR __imp__atoi
	mov	DWORD PTR _bits$1$[esp+40], eax
	jmp	$LN60@prime_main
$LN10@prime_main:
; Line 88
	mov	ecx, OFFSET ??_C@_05JMDHGKLN@?9safe?$AA@
	mov	eax, esi
	npad	1
$LL48@prime_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN49@prime_main
	test	dl, dl
	je	SHORT $LN50@prime_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN49@prime_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL48@prime_main
$LN50@prime_main:
	xor	eax, eax
	jmp	SHORT $LN51@prime_main
$LN49@prime_main:
	sbb	eax, eax
	or	eax, 1
$LN51@prime_main:
	test	eax, eax
	jne	SHORT $LN14@prime_main
; Line 89
	mov	DWORD PTR _safe$1$[esp+36], 1
	jmp	SHORT $LN59@prime_main
$LN14@prime_main:
; Line 90
	mov	eax, OFFSET ??_C@_07JOIGCCHK@?9checks?$AA@
$LL52@prime_main:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN53@prime_main
	test	cl, cl
	je	SHORT $LN54@prime_main
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN53@prime_main
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL52@prime_main
$LN54@prime_main:
	xor	eax, eax
	jmp	SHORT $LN55@prime_main
$LN53@prime_main:
	sbb	eax, eax
	or	eax, 1
$LN55@prime_main:
	test	eax, eax
	jne	SHORT $LN16@prime_main
; Line 91
	dec	edi
	cmp	edi, 1
	jl	SHORT $bad$64
; Line 94
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	DWORD PTR __imp__atoi
	mov	ebp, eax
$LN60@prime_main:
	add	esp, 4
$LN59@prime_main:
	mov	ecx, DWORD PTR _generate$1$[esp+36]
$LN19@prime_main:
; Line 99
	dec	edi
; Line 100
	add	ebx, 4
	cmp	edi, 1
	jge	$LL2@prime_main
; Line 91
	jmp	SHORT $LN56@prime_main
$LN16@prime_main:
; Line 96
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0BF@DKEEOPFF@Unknown?5option?5?8?$CFs?8?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 97
	jmp	SHORT $bad$64
$LN57@prime_main:
	mov	ecx, DWORD PTR _generate$1$[esp+36]
$LN56@prime_main:
; Line 103
	cmp	DWORD PTR [ebx], 0
	jne	SHORT $LN20@prime_main
	test	ecx, ecx
	jne	SHORT $LN20@prime_main
; Line 104
	push	OFFSET ??_C@_0BE@KFPKNCFA@No?5prime?5specified?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$bad$64:
; Line 147
	push	OFFSET ??_C@_0N@NDELNNPO@options?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 148
	push	OFFSET ??_C@_04FHOEMGIO@?9hex?$AA@
	push	OFFSET ??_C@_0L@DOEGEJKP@?$CF?914s?5hex?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 149
	push	OFFSET ??_C@_0M@DNJFMGLC@?9checks?5?$DMn?$DO?$AA@
	push	OFFSET ??_C@_0BI@KOKHAHLD@?$CF?914s?5number?5of?5checks?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 32					; 00000020H
; Line 150
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 151
	add	esp, 20					; 00000014H
	ret	0
$LN20@prime_main:
; Line 108
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN21@prime_main
; Line 109
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	0
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN21@prime_main:
; Line 118
	cmp	DWORD PTR _generate$1$[esp+36], 0
	je	$LN22@prime_main
; Line 121
	mov	edi, DWORD PTR _bits$1$[esp+36]
	test	edi, edi
	jne	SHORT $LN24@prime_main
; Line 122
	push	OFFSET ??_C@_0BO@OCGJBDGA@Specifiy?5the?5number?5of?5bits?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 123
	lea	eax, DWORD PTR [edi+1]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 151
	add	esp, 20					; 00000014H
	ret	0
$LN24@prime_main:
; Line 125
	call	_BN_new
; Line 126
	push	0
	push	0
	push	0
	push	DWORD PTR _safe$1$[esp+48]
	mov	DWORD PTR _bn$[esp+52], eax
	push	edi
	push	eax
	call	_BN_generate_prime_ex
	add	esp, 24					; 00000018H
; Line 127
	cmp	DWORD PTR _hex$1$[esp+36], 0
	push	DWORD PTR _bn$[esp+36]
	je	SHORT $LN28@prime_main
	call	_BN_bn2hex
	jmp	SHORT $LN61@prime_main
$LN28@prime_main:
	call	_BN_bn2dec
$LN61@prime_main:
	add	esp, 4
	mov	edi, eax
; Line 128
	push	edi
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
; Line 129
	push	edi
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 130
	jmp	SHORT $LN23@prime_main
$LN22@prime_main:
; Line 131
	cmp	DWORD PTR _hex$1$[esp+36], 0
; Line 132
	lea	eax, DWORD PTR _bn$[esp+36]
	push	DWORD PTR [ebx]
	push	eax
	je	SHORT $LN25@prime_main
	call	_BN_hex2bn
	jmp	SHORT $LN62@prime_main
$LN25@prime_main:
; Line 134
	call	_BN_dec2bn
$LN62@prime_main:
	add	esp, 8
; Line 136
	push	DWORD PTR _bn$[esp+36]
	push	esi
	call	_BN_print
; Line 137
	push	0
	push	0
	push	ebp
	push	DWORD PTR _bn$[esp+56]
	call	_BN_is_prime_ex
	test	eax, eax
	mov	edx, OFFSET ??_C@_04LKOGMCLF@not?5?$AA@
	mov	ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	cmove	ecx, edx
	push	ecx
	push	OFFSET ??_C@_0N@HHDFGFOO@?5is?5?$CFsprime?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 36					; 00000024H
$LN23@prime_main:
; Line 141
	push	DWORD PTR _bn$[esp+36]
	call	_BN_free
; Line 142
	push	esi
	call	_BIO_free_all
	add	esp, 8
; Line 144
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 151
	add	esp, 20					; 00000014H
	ret	0
_prime_main ENDP
_TEXT	ENDS
END

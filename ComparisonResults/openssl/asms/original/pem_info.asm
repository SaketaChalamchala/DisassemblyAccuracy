; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\pem\pem_info.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_PEM_X509_INFO_read_bio
PUBLIC	_PEM_X509_INFO_write_bio
PUBLIC	_PEM_X509_INFO_read
PUBLIC	??_C@_0BI@JHOHEJIM@?4?2crypto?2pem?2pem_info?4c?$AA@ ; `string'
PUBLIC	??_C@_0M@BFIJENPO@CERTIFICATE?$AA@		; `string'
PUBLIC	??_C@_0BB@PKKMAABO@X509?5CERTIFICATE?$AA@	; `string'
PUBLIC	??_C@_0BE@LHICLJDN@TRUSTED?5CERTIFICATE?$AA@	; `string'
PUBLIC	??_C@_08ONNDIEBB@X509?5CRL?$AA@			; `string'
PUBLIC	??_C@_0BA@COBLGNON@RSA?5PRIVATE?5KEY?$AA@	; `string'
PUBLIC	??_C@_0BA@JLKNDKJH@DSA?5PRIVATE?5KEY?$AA@	; `string'
PUBLIC	??_C@_0P@NNHMEHEI@EC?5PRIVATE?5KEY?$AA@		; `string'
PUBLIC	??_C@_0DJ@PLAABAEP@strlen?$CIobjstr?$CJ?5?$CL?523?5?$CL?52?5?$CK?5enc?9?$DOi@ ; `string'
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_OpenSSLDie:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_peek_last_error:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_EVP_CIPHER_nid:PROC
EXTRN	_d2i_PrivateKey:PROC
EXTRN	_d2i_ECPrivateKey:PROC
EXTRN	_d2i_RSAPrivateKey:PROC
EXTRN	_d2i_DSAPrivateKey:PROC
EXTRN	_d2i_X509:PROC
EXTRN	_d2i_X509_AUX:PROC
EXTRN	_d2i_X509_CRL:PROC
EXTRN	_X509_PKEY_new:PROC
EXTRN	_X509_INFO_new:PROC
EXTRN	_X509_INFO_free:PROC
EXTRN	_PEM_get_EVP_CIPHER_INFO:PROC
EXTRN	_PEM_do_header:PROC
EXTRN	_PEM_read_bio:PROC
EXTRN	_PEM_write_bio:PROC
EXTRN	_PEM_proc_type:PROC
EXTRN	_PEM_dek_info:PROC
EXTRN	_PEM_write_bio_X509:PROC
EXTRN	_PEM_write_bio_RSAPrivateKey:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0DJ@PLAABAEP@strlen?$CIobjstr?$CJ?5?$CL?523?5?$CL?52?5?$CK?5enc?9?$DOi@
CONST	SEGMENT
??_C@_0DJ@PLAABAEP@strlen?$CIobjstr?$CJ?5?$CL?523?5?$CL?52?5?$CK?5enc?9?$DOi@ DB 's'
	DB	'trlen(objstr) + 23 + 2 * enc->iv_len + 13 <= sizeof buf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NNHMEHEI@EC?5PRIVATE?5KEY?$AA@
CONST	SEGMENT
??_C@_0P@NNHMEHEI@EC?5PRIVATE?5KEY?$AA@ DB 'EC PRIVATE KEY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JLKNDKJH@DSA?5PRIVATE?5KEY?$AA@
CONST	SEGMENT
??_C@_0BA@JLKNDKJH@DSA?5PRIVATE?5KEY?$AA@ DB 'DSA PRIVATE KEY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@COBLGNON@RSA?5PRIVATE?5KEY?$AA@
CONST	SEGMENT
??_C@_0BA@COBLGNON@RSA?5PRIVATE?5KEY?$AA@ DB 'RSA PRIVATE KEY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08ONNDIEBB@X509?5CRL?$AA@
CONST	SEGMENT
??_C@_08ONNDIEBB@X509?5CRL?$AA@ DB 'X509 CRL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LHICLJDN@TRUSTED?5CERTIFICATE?$AA@
CONST	SEGMENT
??_C@_0BE@LHICLJDN@TRUSTED?5CERTIFICATE?$AA@ DB 'TRUSTED CERTIFICATE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PKKMAABO@X509?5CERTIFICATE?$AA@
CONST	SEGMENT
??_C@_0BB@PKKMAABO@X509?5CERTIFICATE?$AA@ DB 'X509 CERTIFICATE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BFIJENPO@CERTIFICATE?$AA@
CONST	SEGMENT
??_C@_0M@BFIJENPO@CERTIFICATE?$AA@ DB 'CERTIFICATE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JHOHEJIM@?4?2crypto?2pem?2pem_info?4c?$AA@
CONST	SEGMENT
??_C@_0BI@JHOHEJIM@?4?2crypto?2pem?2pem_info?4c?$AA@ DB '.\crypto\pem\pem'
	DB	'_info.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PEM_X509_INFO_read
_TEXT	SEGMENT
_fp$ = 8						; size = 4
_sk$ = 12						; size = 4
_cb$ = 16						; size = 4
_u$ = 20						; size = 4
_PEM_X509_INFO_read PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pem_info.c
; Line 76
	push	edi
; Line 80
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN2@PEM_X509_I
; Line 81
	push	81					; 00000051H
	push	OFFSET ??_C@_0BI@JHOHEJIM@?4?2crypto?2pem?2pem_info?4c?$AA@
	push	7
	push	115					; 00000073H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 82
	xor	eax, eax
	pop	edi
; Line 88
	ret	0
$LN2@PEM_X509_I:
	push	esi
; Line 84
	push	DWORD PTR _fp$[esp+4]
	push	0
	push	106					; 0000006aH
	push	edi
	call	_BIO_ctrl
; Line 85
	push	DWORD PTR _u$[esp+20]
	push	DWORD PTR _cb$[esp+24]
	push	DWORD PTR _sk$[esp+28]
	push	edi
	call	_PEM_X509_INFO_read_bio
; Line 86
	push	edi
	mov	esi, eax
	call	_BIO_free
	add	esp, 36					; 00000024H
; Line 87
	mov	eax, esi
	pop	esi
	pop	edi
; Line 88
	ret	0
_PEM_X509_INFO_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PEM_X509_INFO_write_bio
_TEXT	SEGMENT
_kstr$GSCopy$1$ = -1184					; size = 4
_i$1$ = -1184						; size = 4
_cb$GSCopy$1$ = -1180					; size = 4
_objstr$1$ = -1180					; size = 4
_data$1$ = -1176					; size = 4
_u$GSCopy$1$ = -1172					; size = 4
_ctx$ = -1168						; size = 140
_buf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_xi$ = 12						; size = 4
_enc$ = 16						; size = 4
_kstr$ = 20						; size = 4
_klen$ = 24						; size = 4
_cb$ = 28						; size = 4
_u$ = 32						; size = 4
_PEM_X509_INFO_write_bio PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pem_info.c
; Line 310
	mov	eax, 1184				; 000004a0H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1184], eax
	mov	ecx, DWORD PTR _kstr$[esp+1180]
	mov	edx, DWORD PTR _cb$[esp+1180]
	mov	eax, DWORD PTR _u$[esp+1180]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _bp$[esp+1188]
; Line 312
	xor	ebx, ebx
	push	esi
	mov	esi, DWORD PTR _xi$[esp+1192]
	push	edi
	mov	edi, DWORD PTR _enc$[esp+1196]
	mov	DWORD PTR _kstr$GSCopy$1$[esp+1200], ecx
	mov	DWORD PTR _cb$GSCopy$1$[esp+1200], edx
	mov	DWORD PTR _u$GSCopy$1$[esp+1200], eax
; Line 318
	test	edi, edi
	je	SHORT $LN3@PEM_X509_I
; Line 319
	push	edi
	call	_EVP_CIPHER_nid
	push	eax
	call	_OBJ_nid2sn
	add	esp, 8
; Line 320
	test	eax, eax
	jne	SHORT $LN18@PEM_X509_I
; Line 321
	push	321					; 00000141H
$LN21@PEM_X509_I:
	push	OFFSET ??_C@_0BI@JHOHEJIM@?4?2crypto?2pem?2pem_info?4c?$AA@
	push	113					; 00000071H
	push	117					; 00000075H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 322
	jmp	$err$23
$LN18@PEM_X509_I:
	mov	edx, DWORD PTR _cb$GSCopy$1$[esp+1200]
$LN3@PEM_X509_I:
; Line 331
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	$LN10@PEM_X509_I
; Line 332
	mov	ecx, DWORD PTR [esi+36]
	test	ecx, ecx
	mov	DWORD PTR _data$1$[esp+1200], ecx
	mov	ecx, DWORD PTR _kstr$GSCopy$1$[esp+1200]
	je	$LN5@PEM_X509_I
	mov	edx, DWORD PTR [esi+32]
	test	edx, edx
	mov	DWORD PTR _i$1$[esp+1200], edx
	mov	edx, DWORD PTR _cb$GSCopy$1$[esp+1200]
	jle	$LN5@PEM_X509_I
; Line 333
	test	edi, edi
	jne	SHORT $LN7@PEM_X509_I
; Line 334
	push	334					; 0000014eH
	push	OFFSET ??_C@_0BI@JHOHEJIM@?4?2crypto?2pem?2pem_info?4c?$AA@
	push	127					; 0000007fH
	push	117					; 00000075H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 335
	jmp	$err$23
$LN7@PEM_X509_I:
; Line 348
	push	DWORD PTR [esi+12]
	call	_EVP_CIPHER_nid
	push	eax
	call	_OBJ_nid2sn
	add	esp, 8
	mov	DWORD PTR _objstr$1$[esp+1200], eax
; Line 349
	test	eax, eax
	jne	SHORT $LN8@PEM_X509_I
; Line 350
	push	351					; 0000015fH
; Line 352
	jmp	$LN21@PEM_X509_I
$LN8@PEM_X509_I:
; Line 356
	mov	ecx, eax
	lea	edx, DWORD PTR [ecx+1]
$LL17@PEM_X509_I:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL17@PEM_X509_I
	mov	eax, DWORD PTR [edi+12]
	sub	ecx, edx
	add	eax, 18					; 00000012H
	lea	eax, DWORD PTR [ecx+eax*2]
	cmp	eax, 1024				; 00000400H
	jbe	SHORT $LN14@PEM_X509_I
	push	OFFSET ??_C@_0DJ@PLAABAEP@strlen?$CIobjstr?$CJ?5?$CL?523?5?$CL?52?5?$CK?5enc?9?$DOi@
	push	357					; 00000165H
	push	OFFSET ??_C@_0BI@JHOHEJIM@?4?2crypto?2pem?2pem_info?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN14@PEM_X509_I:
; Line 359
	lea	eax, DWORD PTR _buf$[esp+1200]
	mov	BYTE PTR _buf$[esp+1200], bl
	push	10					; 0000000aH
	push	eax
	call	_PEM_proc_type
; Line 360
	lea	eax, DWORD PTR [esi+16]
	push	eax
	push	DWORD PTR [edi+12]
	lea	eax, DWORD PTR _buf$[esp+1216]
	push	DWORD PTR _objstr$1$[esp+1216]
	push	eax
	call	_PEM_dek_info
; Line 363
	push	DWORD PTR _i$1$[esp+1224]
	lea	eax, DWORD PTR _buf$[esp+1228]
	push	DWORD PTR _data$1$[esp+1228]
	push	eax
	push	OFFSET ??_C@_0BA@COBLGNON@RSA?5PRIVATE?5KEY?$AA@
	push	ebp
	call	_PEM_write_bio
	add	esp, 44					; 0000002cH
; Line 366
	jmp	SHORT $LN20@PEM_X509_I
$LN5@PEM_X509_I:
; Line 372
	push	DWORD PTR _u$GSCopy$1$[esp+1200]
	mov	eax, DWORD PTR [eax+12]
	push	edx
	push	DWORD PTR _klen$[esp+1204]
	push	ecx
	push	edi
	push	DWORD PTR [eax+20]
	push	ebp
	call	_PEM_write_bio_RSAPrivateKey
	add	esp, 28					; 0000001cH
$LN20@PEM_X509_I:
	test	eax, eax
	jle	SHORT $err$23
$LN10@PEM_X509_I:
; Line 379
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN11@PEM_X509_I
	push	eax
	push	ebp
	call	_PEM_write_bio_X509
	add	esp, 8
	test	eax, eax
	jle	SHORT $err$23
$LN11@PEM_X509_I:
; Line 388
	mov	ebx, 1
$err$23:
; Line 391
	lea	eax, DWORD PTR _ctx$[esp+1200]
	push	140					; 0000008cH
	push	eax
	call	_OPENSSL_cleanse
; Line 392
	lea	eax, DWORD PTR _buf$[esp+1208]
	push	1024					; 00000400H
	push	eax
	call	_OPENSSL_cleanse
; Line 394
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1216]
	add	esp, 16					; 00000010H
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1184				; 000004a0H
	ret	0
_PEM_X509_INFO_write_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PEM_X509_INFO_read_bio
_TEXT	SEGMENT
_ret$1$ = -72						; size = 4
_name$ = -68						; size = 4
_header$ = -64						; size = 4
_data$ = -60						; size = 4
_sk$GSCopy$1$ = -56					; size = 4
_raw$1$ = -52						; size = 4
_ptype$1$ = -48						; size = 4
_len$ = -44						; size = 4
_p$ = -40						; size = 4
_u$GSCopy$1$ = -36					; size = 4
_cb$GSCopy$1$ = -32					; size = 4
_bp$GSCopy$1$ = -28					; size = 4
_cipher$1 = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_sk$ = 12						; size = 4
_cb$ = 16						; size = 4
_u$ = 20						; size = 4
_PEM_X509_INFO_read_bio PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pem_info.c
; Line 93
	mov	eax, 72					; 00000048H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+72], eax
	mov	eax, DWORD PTR _cb$[esp+68]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _sk$[esp+76]
	mov	DWORD PTR _cb$GSCopy$1$[esp+80], eax
	mov	eax, DWORD PTR _u$[esp+76]
	mov	DWORD PTR _sk$GSCopy$1$[esp+80], ebp
	mov	DWORD PTR _u$GSCopy$1$[esp+80], eax
; Line 95
	mov	DWORD PTR _name$[esp+80], 0
	mov	DWORD PTR _header$[esp+80], 0
; Line 97
	mov	DWORD PTR _data$[esp+80], 0
	push	esi
	mov	esi, DWORD PTR _bp$[esp+80]
	mov	DWORD PTR _bp$GSCopy$1$[esp+84], esi
	push	edi
; Line 105
	test	ebp, ebp
	jne	SHORT $LN8@PEM_X509_I
; Line 106
	call	_sk_new_null
	mov	ebx, eax
	mov	DWORD PTR _ret$1$[esp+88], ebx
	test	ebx, ebx
	jne	SHORT $LN9@PEM_X509_I
; Line 107
	push	107					; 0000006bH
	push	OFFSET ??_C@_0BI@JHOHEJIM@?4?2crypto?2pem?2pem_info?4c?$AA@
	push	65					; 00000041H
	push	116					; 00000074H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 108
	jmp	$LN113@PEM_X509_I
$LN8@PEM_X509_I:
; Line 111
	mov	ebx, ebp
	mov	DWORD PTR _ret$1$[esp+88], ebp
$LN9@PEM_X509_I:
; Line 113
	call	_X509_INFO_new
	mov	edi, eax
	test	edi, edi
	je	$LN155@PEM_X509_I
; Line 116
	xor	eax, eax
; Line 117
	xor	ecx, ecx
	mov	DWORD PTR _raw$1$[esp+88], eax
; Line 118
	lea	eax, DWORD PTR _len$[esp+88]
	push	eax
	lea	eax, DWORD PTR _data$[esp+92]
	mov	DWORD PTR _ptype$1$[esp+92], ecx
	push	eax
	lea	eax, DWORD PTR _header$[esp+96]
	push	eax
	lea	eax, DWORD PTR _name$[esp+100]
	push	eax
	push	esi
	call	_PEM_read_bio
	add	esp, 20					; 00000014H
; Line 119
	test	eax, eax
	je	$LN96@PEM_X509_I
$start$179:
; Line 128
	mov	ebp, DWORD PTR _name$[esp+88]
	mov	ecx, OFFSET ??_C@_0M@BFIJENPO@CERTIFICATE?$AA@
	mov	eax, ebp
	npad	1
$LL114@PEM_X509_I:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN115@PEM_X509_I
	test	dl, dl
	je	SHORT $LN116@PEM_X509_I
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN115@PEM_X509_I
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL114@PEM_X509_I
$LN116@PEM_X509_I:
	xor	eax, eax
	jmp	SHORT $LN117@PEM_X509_I
$LN115@PEM_X509_I:
	sbb	eax, eax
	or	eax, 1
$LN117@PEM_X509_I:
	test	eax, eax
	je	$LN16@PEM_X509_I
	mov	ecx, OFFSET ??_C@_0BB@PKKMAABO@X509?5CERTIFICATE?$AA@
	mov	eax, ebp
$LL118@PEM_X509_I:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN119@PEM_X509_I
	test	dl, dl
	je	SHORT $LN120@PEM_X509_I
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN119@PEM_X509_I
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL118@PEM_X509_I
$LN120@PEM_X509_I:
	xor	eax, eax
	jmp	SHORT $LN121@PEM_X509_I
$LN119@PEM_X509_I:
	sbb	eax, eax
	or	eax, 1
$LN121@PEM_X509_I:
	test	eax, eax
	je	$LN16@PEM_X509_I
; Line 139
	mov	ecx, OFFSET ??_C@_0BE@LHICLJDN@TRUSTED?5CERTIFICATE?$AA@
	mov	eax, ebp
$LL122@PEM_X509_I:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN123@PEM_X509_I
	test	dl, dl
	je	SHORT $LN124@PEM_X509_I
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN123@PEM_X509_I
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL122@PEM_X509_I
$LN124@PEM_X509_I:
	xor	eax, eax
	jmp	SHORT $LN125@PEM_X509_I
$LN123@PEM_X509_I:
	sbb	eax, eax
	or	eax, 1
$LN125@PEM_X509_I:
	test	eax, eax
	jne	SHORT $LN20@PEM_X509_I
; Line 140
	mov	esi, OFFSET _d2i_X509_AUX
; Line 146
	jmp	$LN177@PEM_X509_I
$LN20@PEM_X509_I:
; Line 149
	mov	ecx, OFFSET ??_C@_08ONNDIEBB@X509?5CRL?$AA@
	mov	eax, ebp
$LL126@PEM_X509_I:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN127@PEM_X509_I
	test	dl, dl
	je	SHORT $LN128@PEM_X509_I
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN127@PEM_X509_I
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL126@PEM_X509_I
$LN128@PEM_X509_I:
	xor	eax, eax
	jmp	SHORT $LN129@PEM_X509_I
$LN127@PEM_X509_I:
	sbb	eax, eax
	or	eax, 1
$LN129@PEM_X509_I:
	test	eax, eax
	jne	SHORT $LN25@PEM_X509_I
; Line 150
	mov	esi, OFFSET _d2i_X509_CRL
; Line 151
	cmp	DWORD PTR [edi+4], eax
	jne	$LN176@PEM_X509_I
; Line 158
	lea	ebx, DWORD PTR [edi+4]
; Line 159
	jmp	$LN172@PEM_X509_I
$LN25@PEM_X509_I:
; Line 161
	mov	ecx, OFFSET ??_C@_0BA@COBLGNON@RSA?5PRIVATE?5KEY?$AA@
	mov	eax, ebp
$LL130@PEM_X509_I:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN131@PEM_X509_I
	test	dl, dl
	je	SHORT $LN132@PEM_X509_I
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN131@PEM_X509_I
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL130@PEM_X509_I
$LN132@PEM_X509_I:
	xor	eax, eax
	jmp	SHORT $LN133@PEM_X509_I
$LN131@PEM_X509_I:
	sbb	eax, eax
	or	eax, 1
$LN133@PEM_X509_I:
	test	eax, eax
	jne	SHORT $LN30@PEM_X509_I
; Line 162
	mov	esi, OFFSET _d2i_RSAPrivateKey
; Line 163
	cmp	DWORD PTR [edi+8], eax
	jne	$LN176@PEM_X509_I
; Line 171
	mov	DWORD PTR [edi+36], eax
; Line 172
	mov	DWORD PTR [edi+32], eax
; Line 174
	call	_X509_PKEY_new
	mov	DWORD PTR [edi+8], eax
; Line 175
	test	eax, eax
	je	$LN168@PEM_X509_I
; Line 179
	mov	ecx, DWORD PTR _header$[esp+88]
	lea	ebx, DWORD PTR [eax+12]
	mov	DWORD PTR _ptype$1$[esp+88], 6
	lea	edx, DWORD PTR [ecx+1]
$LL142@PEM_X509_I:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL142@PEM_X509_I
; Line 181
	jmp	$LN173@PEM_X509_I
$LN30@PEM_X509_I:
; Line 184
	mov	ecx, OFFSET ??_C@_0BA@JLKNDKJH@DSA?5PRIVATE?5KEY?$AA@
	mov	eax, ebp
	npad	6
$LL134@PEM_X509_I:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN135@PEM_X509_I
	test	dl, dl
	je	SHORT $LN136@PEM_X509_I
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN135@PEM_X509_I
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL134@PEM_X509_I
$LN136@PEM_X509_I:
	xor	eax, eax
	jmp	SHORT $LN137@PEM_X509_I
$LN135@PEM_X509_I:
	sbb	eax, eax
	or	eax, 1
$LN137@PEM_X509_I:
	test	eax, eax
	jne	SHORT $LN37@PEM_X509_I
; Line 185
	mov	esi, OFFSET _d2i_DSAPrivateKey
; Line 186
	cmp	DWORD PTR [edi+8], eax
	jne	$LN176@PEM_X509_I
; Line 194
	mov	DWORD PTR [edi+36], eax
; Line 195
	mov	DWORD PTR [edi+32], eax
; Line 197
	call	_X509_PKEY_new
	mov	DWORD PTR [edi+8], eax
; Line 198
	test	eax, eax
	je	$LN168@PEM_X509_I
; Line 202
	mov	ecx, DWORD PTR _header$[esp+88]
	lea	ebx, DWORD PTR [eax+12]
	mov	DWORD PTR _ptype$1$[esp+88], 116	; 00000074H
	lea	edx, DWORD PTR [ecx+1]
	npad	1
$LL143@PEM_X509_I:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL143@PEM_X509_I
; Line 204
	jmp	SHORT $LN173@PEM_X509_I
$LN37@PEM_X509_I:
; Line 207
	mov	eax, OFFSET ??_C@_0P@NNHMEHEI@EC?5PRIVATE?5KEY?$AA@
	mov	ecx, ebp
$LL138@PEM_X509_I:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN139@PEM_X509_I
	test	dl, dl
	je	SHORT $LN140@PEM_X509_I
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN139@PEM_X509_I
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL138@PEM_X509_I
$LN140@PEM_X509_I:
	xor	eax, eax
	jmp	SHORT $LN141@PEM_X509_I
$LN139@PEM_X509_I:
	sbb	eax, eax
	or	eax, 1
$LN141@PEM_X509_I:
	test	eax, eax
	jne	$LN147@PEM_X509_I
; Line 208
	mov	esi, OFFSET _d2i_ECPrivateKey
; Line 209
	cmp	DWORD PTR [edi+8], eax
	jne	SHORT $LN176@PEM_X509_I
; Line 217
	mov	DWORD PTR [edi+36], eax
; Line 218
	mov	DWORD PTR [edi+32], eax
; Line 220
	call	_X509_PKEY_new
	mov	DWORD PTR [edi+8], eax
; Line 221
	test	eax, eax
	je	$LN168@PEM_X509_I
; Line 223
	mov	ecx, 408				; 00000198H
; Line 224
	lea	ebx, DWORD PTR [eax+12]
	mov	DWORD PTR _ptype$1$[esp+88], ecx
; Line 225
	mov	ecx, DWORD PTR _header$[esp+88]
	lea	edx, DWORD PTR [ecx+1]
$LL144@PEM_X509_I:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL144@PEM_X509_I
$LN173@PEM_X509_I:
; Line 227
	mov	ebp, DWORD PTR _name$[esp+88]
	sub	ecx, edx
	cmp	ecx, 10					; 0000000aH
	jle	$LN172@PEM_X509_I
; Line 226
	mov	eax, 1
; Line 227
	jmp	$LN45@PEM_X509_I
$LN16@PEM_X509_I:
; Line 130
	mov	esi, OFFSET _d2i_X509
$LN177@PEM_X509_I:
; Line 131
	cmp	DWORD PTR [edi], 0
	je	$LN17@PEM_X509_I
$LN176@PEM_X509_I:
; Line 132
	push	edi
	push	ebx
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN168@PEM_X509_I
; Line 134
	call	_X509_INFO_new
	mov	edi, eax
	test	edi, edi
	jne	$start$179
	mov	ebx, DWORD PTR _ret$1$[esp+88]
$LN170@PEM_X509_I:
	mov	ebp, DWORD PTR _sk$GSCopy$1$[esp+88]
$LN113@PEM_X509_I:
; Line 288
	push	ebx
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN6@PEM_X509_I
$LL7@PEM_X509_I:
; Line 289
	push	esi
	push	ebx
	call	_sk_value
; Line 290
	push	eax
	call	_X509_INFO_free
	push	ebx
	inc	esi
	call	_sk_num
	add	esp, 16					; 00000010H
	cmp	esi, eax
	jl	SHORT $LL7@PEM_X509_I
$LN6@PEM_X509_I:
; Line 292
	cmp	ebx, ebp
	je	SHORT $LN70@PEM_X509_I
; Line 293
	push	ebx
	call	_sk_free
	add	esp, 4
$LN70@PEM_X509_I:
; Line 294
	xor	ebx, ebx
$LN69@PEM_X509_I:
; Line 297
	mov	eax, DWORD PTR _name$[esp+88]
	test	eax, eax
	je	SHORT $LN71@PEM_X509_I
; Line 298
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN71@PEM_X509_I:
; Line 299
	mov	eax, DWORD PTR _header$[esp+88]
	test	eax, eax
	je	SHORT $LN72@PEM_X509_I
; Line 300
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN72@PEM_X509_I:
; Line 301
	mov	eax, DWORD PTR _data$[esp+88]
	test	eax, eax
	je	SHORT $LN145@PEM_X509_I
; Line 302
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN145@PEM_X509_I:
; Line 304
	mov	ecx, DWORD PTR __$ArrayPad$[esp+88]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	ret	0
$LN17@PEM_X509_I:
; Line 138
	mov	ebx, edi
$LN172@PEM_X509_I:
	mov	eax, DWORD PTR _raw$1$[esp+88]
$LN45@PEM_X509_I:
; Line 234
	test	esi, esi
	je	$LN147@PEM_X509_I
; Line 235
	test	eax, eax
	jne	$LN53@PEM_X509_I
; Line 238
	lea	eax, DWORD PTR _cipher$1[esp+88]
	push	eax
	push	DWORD PTR _header$[esp+92]
	call	_PEM_get_EVP_CIPHER_INFO
	add	esp, 8
	test	eax, eax
	je	SHORT $LN168@PEM_X509_I
; Line 240
	push	DWORD PTR _u$GSCopy$1$[esp+88]
	lea	eax, DWORD PTR _len$[esp+92]
	push	DWORD PTR _cb$GSCopy$1$[esp+92]
	push	eax
	push	DWORD PTR _data$[esp+100]
	lea	eax, DWORD PTR _cipher$1[esp+104]
	push	eax
	call	_PEM_do_header
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN168@PEM_X509_I
; Line 242
	mov	eax, DWORD PTR _data$[esp+88]
; Line 244
	push	DWORD PTR _len$[esp+88]
	mov	DWORD PTR _p$[esp+92], eax
	mov	eax, DWORD PTR _ptype$1$[esp+92]
	test	eax, eax
	je	SHORT $LN57@PEM_X509_I
	lea	ecx, DWORD PTR _p$[esp+92]
	push	ecx
	push	ebx
	push	eax
	call	_d2i_PrivateKey
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN174@PEM_X509_I
; Line 245
	push	245					; 000000f5H
$LN175@PEM_X509_I:
	push	OFFSET ??_C@_0BI@JHOHEJIM@?4?2crypto?2pem?2pem_info?4c?$AA@
	push	13					; 0000000dH
	push	116					; 00000074H
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN168@PEM_X509_I:
	mov	ebx, DWORD PTR _ret$1$[esp+88]
$LN171@PEM_X509_I:
	xor	ebp, ebp
$err$180:
; Line 285
	test	edi, edi
	je	SHORT $LN68@PEM_X509_I
; Line 286
	push	edi
	call	_X509_INFO_free
	add	esp, 4
$LN68@PEM_X509_I:
; Line 287
	test	ebp, ebp
	jne	$LN69@PEM_X509_I
	jmp	$LN170@PEM_X509_I
$LN57@PEM_X509_I:
; Line 248
	lea	eax, DWORD PTR _p$[esp+92]
	push	eax
	push	ebx
	call	esi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN174@PEM_X509_I
; Line 249
	push	249					; 000000f9H
	jmp	SHORT $LN175@PEM_X509_I
$LN53@PEM_X509_I:
; Line 253
	lea	eax, DWORD PTR [edi+12]
	push	eax
	push	DWORD PTR _header$[esp+92]
	call	_PEM_get_EVP_CIPHER_INFO
	add	esp, 8
	test	eax, eax
	je	SHORT $LN168@PEM_X509_I
; Line 255
	mov	eax, DWORD PTR _data$[esp+88]
	mov	DWORD PTR [edi+36], eax
; Line 256
	mov	eax, DWORD PTR _len$[esp+88]
	mov	DWORD PTR [edi+32], eax
; Line 257
	mov	DWORD PTR _data$[esp+88], 0
$LN174@PEM_X509_I:
	mov	ebp, DWORD PTR _name$[esp+88]
$LN147@PEM_X509_I:
; Line 262
	test	ebp, ebp
	je	SHORT $LN62@PEM_X509_I
; Line 263
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
$LN62@PEM_X509_I:
; Line 264
	mov	eax, DWORD PTR _header$[esp+88]
	test	eax, eax
	je	SHORT $LN63@PEM_X509_I
; Line 265
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN63@PEM_X509_I:
; Line 266
	mov	eax, DWORD PTR _data$[esp+88]
	test	eax, eax
	je	SHORT $LN64@PEM_X509_I
; Line 267
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN64@PEM_X509_I:
; Line 116
	mov	esi, DWORD PTR _bp$GSCopy$1$[esp+88]
	xor	eax, eax
	mov	DWORD PTR _raw$1$[esp+88], eax
; Line 117
	mov	DWORD PTR _ptype$1$[esp+88], eax
; Line 118
	lea	eax, DWORD PTR _len$[esp+88]
	push	eax
	lea	eax, DWORD PTR _data$[esp+92]
; Line 268
	mov	DWORD PTR _name$[esp+92], 0
	push	eax
	lea	eax, DWORD PTR _header$[esp+96]
; Line 269
	mov	DWORD PTR _header$[esp+96], 0
	push	eax
	lea	eax, DWORD PTR _name$[esp+100]
; Line 270
	mov	DWORD PTR _data$[esp+100], 0
	push	eax
	push	esi
	call	_PEM_read_bio
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN96@PEM_X509_I
; Line 119
	mov	ebx, DWORD PTR _ret$1$[esp+88]
	jmp	$start$179
$LN96@PEM_X509_I:
; Line 120
	call	_ERR_peek_last_error
	and	eax, 4095				; 00000fffH
; Line 121
	cmp	eax, 108				; 0000006cH
	jne	$LN168@PEM_X509_I
; Line 122
	call	_ERR_clear_error
; Line 278
	cmp	DWORD PTR [edi], 0
	jne	SHORT $LN66@PEM_X509_I
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN66@PEM_X509_I
	cmp	DWORD PTR [edi+8], 0
	jne	SHORT $LN66@PEM_X509_I
	cmp	DWORD PTR [edi+36], 0
	je	SHORT $LN169@PEM_X509_I
$LN66@PEM_X509_I:
; Line 279
	mov	ebx, DWORD PTR _ret$1$[esp+88]
	push	edi
	push	ebx
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN171@PEM_X509_I
; Line 281
	xor	edi, edi
; Line 283
	lea	ebp, DWORD PTR [edi+1]
	jmp	$err$180
$LN169@PEM_X509_I:
	mov	ebx, DWORD PTR _ret$1$[esp+88]
	mov	ebp, 1
	jmp	$err$180
$LN155@PEM_X509_I:
	mov	ebx, DWORD PTR _ret$1$[esp+88]
	jmp	$LN113@PEM_X509_I
_PEM_X509_INFO_read_bio ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_kdf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
?ctr@?1??dh_sharedinfo_encode@@9@9 DB 0f3H		; `dh_sharedinfo_encode'::`2'::ctr
	DB	017H
	DB	022H
	DB	053H
_DATA	ENDS
PUBLIC	_DH_KDF_X9_42
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_CRYPTO_memcmp:PROC
EXTRN	_ASN1_get_object:PROC
EXTRN	_EVP_MD_size:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestFinal:PROC
EXTRN	_CMS_SharedInfo_encode:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogtpy
;	COMDAT _dh_sharedinfo_encode
_TEXT	SEGMENT
_tlen$ = -52						; size = 4
_ctr_atype$ = -48					; size = 8
_atmp$ = -40						; size = 8
_ctr_oct$ = -32						; size = 16
_ukm_oct$ = -16						; size = 16
_pder$ = 8						; size = 4
_pctr$ = 12						; size = 4
_key_oid$ = 16						; size = 4
_outlen$ = 20						; size = 4
_ukm$ = 24						; size = 4
_p$ = 28						; size = 4
_ukmlen$ = 28						; size = 4
_dh_sharedinfo_encode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_kdf.c
; Line 91
	mov	eax, 52					; 00000034H
	call	__chkstk
; Line 100
	mov	ecx, DWORD PTR _ukmlen$[esp+48]
	cmp	ecx, 1073741824				; 40000000H
	ja	$LN3@dh_sharedi
	mov	edx, DWORD PTR _outlen$[esp+48]
	cmp	edx, 1073741824				; 40000000H
	ja	$LN3@dh_sharedi
; Line 107
	lea	eax, DWORD PTR _ctr_oct$[esp+52]
	mov	DWORD PTR _ctr_oct$[esp+60], OFFSET ?ctr@?1??dh_sharedinfo_encode@@9@9
	mov	DWORD PTR _ctr_atype$[esp+56], eax
; Line 108
	mov	eax, DWORD PTR _key_oid$[esp+48]
	mov	DWORD PTR _atmp$[esp+52], eax
; Line 109
	lea	eax, DWORD PTR _ctr_atype$[esp+52]
	mov	DWORD PTR _atmp$[esp+56], eax
; Line 110
	mov	eax, DWORD PTR _ukm$[esp+48]
	mov	DWORD PTR _ctr_oct$[esp+52], 4
	mov	DWORD PTR _ctr_oct$[esp+64], 0
	mov	DWORD PTR _ctr_oct$[esp+56], 4
	mov	DWORD PTR _ctr_atype$[esp+52], 4
	test	eax, eax
	je	SHORT $LN4@dh_sharedi
; Line 113
	mov	DWORD PTR _ukm_oct$[esp+60], eax
; Line 115
	lea	eax, DWORD PTR _ukm_oct$[esp+52]
	mov	DWORD PTR _ukm_oct$[esp+56], 4
	mov	DWORD PTR _ukm_oct$[esp+64], 0
	mov	DWORD PTR _ukm_oct$[esp+52], ecx
; Line 116
	jmp	SHORT $LN5@dh_sharedi
$LN4@dh_sharedi:
; Line 117
	xor	eax, eax
$LN5@dh_sharedi:
	push	esi
; Line 118
	mov	esi, DWORD PTR _pder$[esp+52]
	push	edi
	push	edx
	push	eax
	lea	eax, DWORD PTR _atmp$[esp+68]
	push	eax
	push	esi
	call	_CMS_SharedInfo_encode
	mov	edi, eax
	add	esp, 16					; 00000010H
; Line 119
	test	edi, edi
	jle	$LN15@dh_sharedi
; Line 121
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _p$[esp+56], eax
; Line 123
	lea	eax, DWORD PTR _tlen$[esp+60]
	push	16					; 00000010H
	push	eax
	lea	eax, DWORD PTR _p$[esp+64]
	mov	DWORD PTR _tlen$[esp+68], edi
	push	eax
	call	_skip_asn1
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN15@dh_sharedi
; Line 125
	push	16					; 00000010H
	lea	eax, DWORD PTR _tlen$[esp+64]
	push	eax
	lea	eax, DWORD PTR _p$[esp+64]
	push	eax
	call	_skip_asn1
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN15@dh_sharedi
; Line 127
	push	6
	lea	eax, DWORD PTR _tlen$[esp+64]
	push	eax
	lea	eax, DWORD PTR _p$[esp+64]
	push	eax
	call	_skip_asn1
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN15@dh_sharedi
; Line 129
	push	4
	lea	eax, DWORD PTR _tlen$[esp+64]
	push	eax
	lea	eax, DWORD PTR _p$[esp+64]
	push	eax
	call	_skip_asn1
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN15@dh_sharedi
; Line 131
	mov	esi, DWORD PTR _p$[esp+56]
	push	4
	push	OFFSET ?ctr@?1??dh_sharedinfo_encode@@9@9
	push	esi
	call	_CRYPTO_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN11@dh_sharedi
$LN15@dh_sharedi:
	pop	edi
; Line 132
	xor	eax, eax
	pop	esi
; Line 135
	add	esp, 52					; 00000034H
	ret	0
$LN11@dh_sharedi:
; Line 133
	mov	eax, DWORD PTR _pctr$[esp+56]
	mov	DWORD PTR [eax], esi
; Line 134
	mov	eax, edi
	pop	edi
	pop	esi
; Line 135
	add	esp, 52					; 00000034H
	ret	0
$LN3@dh_sharedi:
; Line 101
	xor	eax, eax
; Line 135
	add	esp, 52					; 00000034H
	ret	0
_dh_sharedinfo_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _skip_asn1
_TEXT	SEGMENT
_tag$ = -12						; size = 4
_xclass$ = -8						; size = 4
_tmplen$ = -4						; size = 4
_q$ = 8							; size = 4
_pp$ = 8						; size = 4
_plen$ = 12						; size = 4
_exptag$ = 16						; size = 4
_skip_asn1 PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_kdf.c
; Line 67
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	esi
; Line 68
	mov	esi, DWORD PTR _pp$[esp+12]
	push	edi
; Line 71
	mov	edi, DWORD PTR _plen$[esp+16]
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR _q$[esp+16], eax
	lea	eax, DWORD PTR _xclass$[esp+20]
	push	DWORD PTR [edi]
	push	eax
	lea	eax, DWORD PTR _tag$[esp+28]
	push	eax
	lea	eax, DWORD PTR _tmplen$[esp+32]
	push	eax
	lea	eax, DWORD PTR _q$[esp+32]
	push	eax
	call	_ASN1_get_object
	add	esp, 20					; 00000014H
; Line 72
	test	al, al
	js	SHORT $LN4@skip_asn1
; Line 74
	mov	eax, DWORD PTR _tag$[esp+20]
	cmp	eax, DWORD PTR _exptag$[esp+16]
	jne	SHORT $LN4@skip_asn1
	cmp	DWORD PTR _xclass$[esp+20], 0
	jne	SHORT $LN4@skip_asn1
; Line 77
	mov	ecx, DWORD PTR _q$[esp+16]
	cmp	eax, 6
	jne	SHORT $LN5@skip_asn1
	add	ecx, DWORD PTR _tmplen$[esp+20]
$LN5@skip_asn1:
; Line 78
	mov	eax, DWORD PTR [esi]
	sub	eax, ecx
	add	DWORD PTR [edi], eax
; Line 80
	mov	eax, 1
	pop	edi
	mov	DWORD PTR [esi], ecx
	pop	esi
; Line 81
	add	esp, 12					; 0000000cH
	ret	0
$LN4@skip_asn1:
	pop	edi
; Line 75
	xor	eax, eax
	pop	esi
; Line 81
	add	esp, 12					; 0000000cH
	ret	0
_skip_asn1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DH_KDF_X9_42
_TEXT	SEGMENT
_der$ = -112						; size = 4
_md$GSCopy$1$ = -108					; size = 4
_Z$GSCopy$1$ = -104					; size = 4
_ctr$ = -100						; size = 4
_derlen$1$ = -96					; size = 4
_mctx$ = -92						; size = 24
_mtmp$1 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_out$ = 8						; size = 4
_outlen$ = 12						; size = 4
_Z$ = 16						; size = 4
_Zlen$ = 20						; size = 4
_key_oid$ = 24						; size = 4
_ukm$ = 28						; size = 4
_ukmlen$ = 32						; size = 4
_md$ = 36						; size = 4
_DH_KDF_X9_42 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dh\dh_kdf.c
; Line 141
	mov	eax, 112				; 00000070H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+112], eax
; Line 148
	cmp	DWORD PTR _Zlen$[esp+108], 1073741824	; 40000000H
	mov	eax, DWORD PTR _Z$[esp+108]
	push	ebx
	mov	ebx, DWORD PTR _key_oid$[esp+112]
	push	ebp
	mov	ebp, DWORD PTR _out$[esp+116]
	mov	DWORD PTR _Z$GSCopy$1$[esp+120], eax
	mov	eax, DWORD PTR _md$[esp+116]
	push	esi
	mov	esi, DWORD PTR _ukm$[esp+120]
	mov	DWORD PTR _md$GSCopy$1$[esp+124], eax
	mov	DWORD PTR _der$[esp+124], 0
	jbe	SHORT $LN5@DH_KDF_X9_
; Line 149
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 187
	mov	ecx, DWORD PTR __$ArrayPad$[esp+112]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 112				; 00000070H
	ret	0
$LN5@DH_KDF_X9_:
	push	edi
; Line 150
	push	eax
	call	_EVP_MD_size
	mov	edi, eax
; Line 151
	lea	eax, DWORD PTR _mctx$[esp+132]
	push	eax
	call	_EVP_MD_CTX_init
; Line 152
	push	DWORD PTR _ukmlen$[esp+132]
	lea	eax, DWORD PTR _ctr$[esp+140]
	push	esi
	mov	esi, DWORD PTR _outlen$[esp+140]
	push	esi
	push	ebx
	push	eax
	lea	eax, DWORD PTR _der$[esp+156]
	push	eax
	call	_dh_sharedinfo_encode
	add	esp, 32					; 00000020H
	mov	DWORD PTR _derlen$1$[esp+128], eax
; Line 153
	test	eax, eax
	je	$LN28@DH_KDF_X9_
; Line 157
	push	0
	push	DWORD PTR _md$GSCopy$1$[esp+132]
	lea	eax, DWORD PTR _mctx$[esp+136]
	mov	ebx, 1
	push	eax
	call	_EVP_DigestInit_ex
; Line 158
	push	DWORD PTR _Zlen$[esp+136]
	lea	eax, DWORD PTR _mctx$[esp+144]
	push	DWORD PTR _Z$GSCopy$1$[esp+144]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN28@DH_KDF_X9_
	npad	3
$LL4@DH_KDF_X9_:
; Line 160
	mov	ecx, DWORD PTR _ctr$[esp+128]
; Line 161
	mov	eax, ebx
; Line 164
	push	DWORD PTR _derlen$1$[esp+128]
	shr	eax, 8
	mov	BYTE PTR [ecx+3], bl
	mov	BYTE PTR [ecx+2], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx+1], al
	mov	eax, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx], al
	lea	eax, DWORD PTR _mctx$[esp+132]
	push	DWORD PTR _der$[esp+132]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN28@DH_KDF_X9_
; Line 167
	push	0
	cmp	esi, edi
	jb	$LN9@DH_KDF_X9_
	lea	eax, DWORD PTR _mctx$[esp+132]
	push	ebp
	push	eax
	call	_EVP_DigestFinal
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN28@DH_KDF_X9_
; Line 169
	sub	esi, edi
; Line 170
	je	$LN3@DH_KDF_X9_
; Line 157
	push	0
	push	DWORD PTR _md$GSCopy$1$[esp+132]
	lea	eax, DWORD PTR _mctx$[esp+136]
; Line 172
	add	ebp, edi
	push	eax
	inc	ebx
	call	_EVP_DigestInit_ex
	push	DWORD PTR _Zlen$[esp+136]
	lea	eax, DWORD PTR _mctx$[esp+144]
	push	DWORD PTR _Z$GSCopy$1$[esp+144]
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	$LL4@DH_KDF_X9_
$LN28@DH_KDF_X9_:
	xor	ebx, ebx
$err$31:
; Line 183
	mov	ecx, DWORD PTR _der$[esp+128]
	pop	edi
	test	ecx, ecx
	je	SHORT $LN14@DH_KDF_X9_
; Line 184
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN14@DH_KDF_X9_:
; Line 185
	lea	eax, DWORD PTR _mctx$[esp+124]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 187
	mov	ecx, DWORD PTR __$ArrayPad$[esp+128]
	add	esp, 4
	mov	eax, ebx
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 112				; 00000070H
	ret	0
$LN9@DH_KDF_X9_:
; Line 174
	lea	eax, DWORD PTR _mtmp$1[esp+132]
	push	eax
	lea	eax, DWORD PTR _mctx$[esp+136]
	push	eax
	call	_EVP_DigestFinal
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN28@DH_KDF_X9_
; Line 176
	push	esi
	lea	eax, DWORD PTR _mtmp$1[esp+132]
	push	eax
	push	ebp
	call	_memcpy
; Line 177
	lea	eax, DWORD PTR _mtmp$1[esp+140]
	push	edi
	push	eax
	call	_OPENSSL_cleanse
	add	esp, 20					; 00000014H
$LN3@DH_KDF_X9_:
; Line 181
	mov	ebx, 1
	jmp	SHORT $err$31
_DH_KDF_X9_42 ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_exp2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_BN_mod_exp2_mont
PUBLIC	??_C@_0BG@KEDDBGGO@?4?2crypto?2bn?2bn_exp2?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_value_one:PROC
EXTRN	_BN_CTX_start:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_CTX_end:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_div:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_is_bit_set:PROC
EXTRN	_BN_ucmp:PROC
EXTRN	_BN_MONT_CTX_new:PROC
EXTRN	_BN_mod_mul_montgomery:PROC
EXTRN	_BN_from_montgomery:PROC
EXTRN	_BN_MONT_CTX_free:PROC
EXTRN	_BN_MONT_CTX_set:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BG@KEDDBGGO@?4?2crypto?2bn?2bn_exp2?4c?$AA@
CONST	SEGMENT
??_C@_0BG@KEDDBGGO@?4?2crypto?2bn?2bn_exp2?4c?$AA@ DB '.\crypto\bn\bn_exp'
	DB	'2.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mod_exp2_mont
_TEXT	SEGMENT
_ctx$GSCopy$1$ = -332					; size = 4
_mont$1$ = -328						; size = 4
_b$1$ = -324						; size = 4
_window2$1$ = -324					; size = 4
_m$GSCopy$1$ = -320					; size = 4
tv942 = -320						; size = 4
_d$1$ = -316						; size = 4
_r_is_one$1$ = -316					; size = 4
_r$1$ = -312						; size = 4
tv945 = -308						; size = 4
tv940 = -308						; size = 4
_window1$1$ = -304					; size = 4
_wpos1$1$ = -300					; size = 4
_wvalue1$1$ = -296					; size = 4
_wvalue2$1$ = -292					; size = 4
_wpos2$1$ = -288					; size = 4
_a_mod_m$2$ = -288					; size = 4
_rr$GSCopy$1$ = -284					; size = 4
_ret$1$ = -280						; size = 4
_p1$GSCopy$1$ = -276					; size = 4
tv941 = -272						; size = 4
_bits$1$ = -272						; size = 4
_p2$GSCopy$1$ = -268					; size = 4
_in_mont$GSCopy$1$ = -264				; size = 4
_val2$ = -260						; size = 128
_val1$ = -132						; size = 128
__$ArrayPad$ = -4					; size = 4
_rr$ = 8						; size = 4
_a1$ = 12						; size = 4
_p1$ = 16						; size = 4
_a2$ = 20						; size = 4
_p2$ = 24						; size = 4
_m$ = 28						; size = 4
_ctx$ = 32						; size = 4
_in_mont$ = 36						; size = 4
_BN_mod_exp2_mont PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_exp2.c
; Line 121
	mov	eax, 332				; 0000014cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+332], eax
	mov	eax, DWORD PTR _rr$[esp+328]
	mov	edx, DWORD PTR _ctx$[esp+328]
	mov	ecx, DWORD PTR _p1$[esp+328]
	mov	DWORD PTR _rr$GSCopy$1$[esp+332], eax
	mov	eax, DWORD PTR _a2$[esp+328]
	mov	DWORD PTR _a_mod_m$2$[esp+332], eax
	mov	eax, DWORD PTR _m$[esp+328]
	mov	DWORD PTR _m$GSCopy$1$[esp+332], eax
	push	ebx
	mov	ebx, DWORD PTR _a1$[esp+332]
; Line 137
	mov	eax, DWORD PTR [eax]
	push	ebp
	mov	ebp, DWORD PTR _p2$[esp+336]
	mov	DWORD PTR _ctx$GSCopy$1$[esp+340], edx
	test	BYTE PTR [eax], 1
	mov	edx, DWORD PTR _in_mont$[esp+336]
	mov	DWORD PTR _p1$GSCopy$1$[esp+340], ecx
	mov	DWORD PTR _p2$GSCopy$1$[esp+340], ebp
	mov	DWORD PTR _in_mont$GSCopy$1$[esp+340], edx
	mov	DWORD PTR _ret$1$[esp+340], 0
	mov	DWORD PTR _mont$1$[esp+340], 0
	jne	SHORT $LN21@BN_mod_exp
; Line 138
	push	138					; 0000008aH
	push	OFFSET ??_C@_0BG@KEDDBGGO@?4?2crypto?2bn?2bn_exp2?4c?$AA@
	push	102					; 00000066H
	push	118					; 00000076H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 139
	xor	eax, eax
	pop	ebp
	pop	ebx
; Line 303
	mov	ecx, DWORD PTR __$ArrayPad$[esp+332]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 332				; 0000014cH
	ret	0
$LN21@BN_mod_exp:
	push	esi
	push	edi
; Line 141
	push	ecx
	call	_BN_num_bits
; Line 142
	push	ebp
	mov	esi, eax
	call	_BN_num_bits
	add	esp, 8
	mov	edi, eax
; Line 143
	test	esi, esi
	jne	SHORT $LN22@BN_mod_exp
	test	edi, edi
	jne	SHORT $LN22@BN_mod_exp
; Line 144
	push	1
	push	DWORD PTR _rr$GSCopy$1$[esp+352]
	call	_BN_set_word
	add	esp, 8
; Line 145
	jmp	$LN117@BN_mod_exp
$LN22@BN_mod_exp:
; Line 150
	mov	ebp, DWORD PTR _ctx$GSCopy$1$[esp+348]
	cmp	esi, edi
	push	ebp
	cmovg	eax, esi
	mov	DWORD PTR _bits$1$[esp+352], eax
	call	_BN_CTX_start
; Line 151
	push	ebp
	call	_BN_CTX_get
; Line 152
	push	ebp
	mov	DWORD PTR _d$1$[esp+360], eax
	call	_BN_CTX_get
; Line 153
	push	ebp
	mov	DWORD PTR _r$1$[esp+364], eax
	call	_BN_CTX_get
; Line 154
	push	DWORD PTR _ctx$GSCopy$1$[esp+364]
	mov	ebp, eax
	mov	DWORD PTR _val1$[esp+368], ebp
	call	_BN_CTX_get
	add	esp, 20					; 00000014H
	mov	DWORD PTR _val2$[esp+348], eax
; Line 155
	cmp	DWORD PTR _d$1$[esp+348], 0
	je	$err$121
	cmp	DWORD PTR _r$1$[esp+348], 0
	je	$err$121
	test	ebp, ebp
	je	$err$121
	test	eax, eax
	je	$err$121
; Line 158
	mov	eax, DWORD PTR _in_mont$GSCopy$1$[esp+348]
	test	eax, eax
	je	SHORT $LN25@BN_mod_exp
; Line 159
	mov	DWORD PTR _mont$1$[esp+348], eax
	jmp	SHORT $LN28@BN_mod_exp
$LN25@BN_mod_exp:
; Line 161
	call	_BN_MONT_CTX_new
	mov	DWORD PTR _mont$1$[esp+348], eax
	test	eax, eax
	je	$LN63@BN_mod_exp
; Line 163
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	push	DWORD PTR _m$GSCopy$1$[esp+352]
	push	eax
	call	_BN_MONT_CTX_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN110@BN_mod_exp
$LN28@BN_mod_exp:
; Line 167
	cmp	esi, 671				; 0000029fH
	jle	SHORT $LN69@BN_mod_exp
	mov	DWORD PTR _window1$1$[esp+348], 6
	jmp	SHORT $LN66@BN_mod_exp
$LN69@BN_mod_exp:
	cmp	esi, 239				; 000000efH
	jle	SHORT $LN67@BN_mod_exp
	mov	DWORD PTR _window1$1$[esp+348], 5
	jmp	SHORT $LN66@BN_mod_exp
$LN67@BN_mod_exp:
	cmp	esi, 79					; 0000004fH
	jle	SHORT $LN65@BN_mod_exp
	mov	DWORD PTR _window1$1$[esp+348], 4
	jmp	SHORT $LN66@BN_mod_exp
$LN65@BN_mod_exp:
	xor	eax, eax
	cmp	esi, 23					; 00000017H
	setg	al
	lea	eax, DWORD PTR [eax*2+1]
	mov	DWORD PTR _window1$1$[esp+348], eax
$LN66@BN_mod_exp:
; Line 168
	cmp	edi, 671				; 0000029fH
	jle	SHORT $LN75@BN_mod_exp
	mov	DWORD PTR _window2$1$[esp+348], 6
	jmp	SHORT $LN72@BN_mod_exp
$LN75@BN_mod_exp:
	cmp	edi, 239				; 000000efH
	jle	SHORT $LN73@BN_mod_exp
	mov	eax, 5
	jmp	SHORT $LN119@BN_mod_exp
$LN73@BN_mod_exp:
	cmp	edi, 79					; 0000004fH
	jle	SHORT $LN71@BN_mod_exp
	mov	eax, 4
	jmp	SHORT $LN119@BN_mod_exp
$LN71@BN_mod_exp:
	xor	eax, eax
	cmp	edi, 23					; 00000017H
	setg	al
	lea	eax, DWORD PTR [eax*2+1]
$LN119@BN_mod_exp:
	mov	DWORD PTR _window2$1$[esp+348], eax
$LN72@BN_mod_exp:
; Line 173
	cmp	DWORD PTR [ebx+12], 0
	mov	esi, DWORD PTR _m$GSCopy$1$[esp+348]
	jne	SHORT $LN31@BN_mod_exp
	push	esi
	push	ebx
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	js	SHORT $LN30@BN_mod_exp
$LN31@BN_mod_exp:
; Line 174
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	push	esi
	push	ebx
	push	ebp
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
; Line 176
	mov	ebx, ebp
$LN30@BN_mod_exp:
; Line 179
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LN33@BN_mod_exp
; Line 180
	push	0
	push	DWORD PTR _rr$GSCopy$1$[esp+352]
	call	_BN_set_word
	add	esp, 8
; Line 181
	mov	DWORD PTR _ret$1$[esp+348], 1
; Line 182
	jmp	$err$121
$LN33@BN_mod_exp:
; Line 185
	mov	eax, DWORD PTR _mont$1$[esp+348]
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	push	eax
	lea	edi, DWORD PTR [eax+4]
	push	edi
	push	ebx
	push	ebp
	mov	DWORD PTR tv945[esp+368], edi
	call	_BN_mod_mul_montgomery
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
; Line 187
	mov	ebx, DWORD PTR _window1$1$[esp+348]
	cmp	ebx, 1
	jle	SHORT $LN3@BN_mod_exp
; Line 188
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	push	DWORD PTR _mont$1$[esp+352]
	push	ebp
	push	ebp
	mov	ebp, DWORD PTR _d$1$[esp+364]
	push	ebp
	call	_BN_mod_mul_montgomery
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
; Line 191
	lea	ecx, DWORD PTR [ebx-1]
	mov	edi, 1
	shl	edi, cl
; Line 192
	mov	esi, 1
	cmp	edi, esi
	jle	SHORT $LN112@BN_mod_exp
	mov	ebx, DWORD PTR _ctx$GSCopy$1$[esp+348]
$LL4@BN_mod_exp:
; Line 193
	push	ebx
	call	_BN_CTX_get
	add	esp, 4
	mov	DWORD PTR _val1$[esp+esi*4+348], eax
	test	eax, eax
	je	$err$121
	push	ebx
	push	DWORD PTR _mont$1$[esp+352]
	push	ebp
	push	DWORD PTR _val1$[esp+esi*4+356]
	push	eax
	call	_BN_mod_mul_montgomery
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
; Line 192
	inc	esi
	cmp	esi, edi
	jl	SHORT $LL4@BN_mod_exp
$LN112@BN_mod_exp:
	mov	edi, DWORD PTR tv945[esp+348]
	mov	esi, DWORD PTR _m$GSCopy$1$[esp+348]
$LN3@BN_mod_exp:
; Line 202
	mov	ebx, DWORD PTR _a_mod_m$2$[esp+348]
	cmp	DWORD PTR [ebx+12], 0
	jne	SHORT $LN41@BN_mod_exp
	push	esi
	push	ebx
	call	_BN_ucmp
	add	esp, 8
	test	eax, eax
	jns	SHORT $LN41@BN_mod_exp
; Line 207
	mov	ebp, DWORD PTR _val2$[esp+348]
	jmp	SHORT $LN40@BN_mod_exp
$LN41@BN_mod_exp:
; Line 203
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	mov	ebp, DWORD PTR _val2$[esp+352]
	push	esi
	push	ebx
	push	ebp
	push	0
	call	_BN_div
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
; Line 205
	mov	ebx, ebp
$LN40@BN_mod_exp:
; Line 208
	cmp	DWORD PTR [ebx+4], 0
	jne	SHORT $LN43@BN_mod_exp
; Line 209
	push	0
	push	DWORD PTR _rr$GSCopy$1$[esp+352]
	call	_BN_set_word
	add	esp, 8
; Line 210
	mov	DWORD PTR _ret$1$[esp+348], 1
; Line 211
	jmp	$err$121
$LN43@BN_mod_exp:
; Line 213
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	push	DWORD PTR _mont$1$[esp+352]
	push	edi
	push	ebx
	push	ebp
	call	_BN_mod_mul_montgomery
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
; Line 215
	mov	esi, DWORD PTR _window2$1$[esp+348]
	cmp	esi, 1
	jle	SHORT $LN6@BN_mod_exp
; Line 216
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	mov	ebx, DWORD PTR _d$1$[esp+352]
	push	DWORD PTR _mont$1$[esp+352]
	push	ebp
	push	ebp
	push	ebx
	call	_BN_mod_mul_montgomery
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
; Line 219
	lea	ecx, DWORD PTR [esi-1]
	mov	edi, 1
	shl	edi, cl
; Line 220
	mov	esi, 1
	cmp	edi, esi
	jle	SHORT $LN111@BN_mod_exp
	mov	ebp, DWORD PTR _ctx$GSCopy$1$[esp+348]
$LL7@BN_mod_exp:
; Line 221
	push	ebp
	call	_BN_CTX_get
	add	esp, 4
	mov	DWORD PTR _val2$[esp+esi*4+348], eax
	test	eax, eax
	je	$err$121
	push	ebp
	push	DWORD PTR _mont$1$[esp+352]
	push	ebx
	push	DWORD PTR _val2$[esp+esi*4+356]
	push	eax
	call	_BN_mod_mul_montgomery
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
; Line 220
	inc	esi
	cmp	esi, edi
	jl	SHORT $LL7@BN_mod_exp
$LN111@BN_mod_exp:
	mov	esi, DWORD PTR _window2$1$[esp+348]
$LN6@BN_mod_exp:
; Line 236
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	xor	ebx, ebx
	mov	DWORD PTR _r_is_one$1$[esp+352], 1
	push	DWORD PTR _mont$1$[esp+352]
	xor	edi, edi
	mov	DWORD PTR _wvalue2$1$[esp+356], ebx
	push	DWORD PTR tv945[esp+356]
	xor	ebp, ebp
	mov	DWORD PTR _wvalue1$1$[esp+360], edi
	mov	DWORD PTR _wpos1$1$[esp+360], ebx
	mov	DWORD PTR _wpos2$1$[esp+360], ebp
	call	_BN_value_one
	push	eax
	push	DWORD PTR _r$1$[esp+364]
	call	_BN_mod_mul_montgomery
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
; Line 238
	mov	eax, DWORD PTR _bits$1$[esp+348]
	add	eax, -1
	mov	DWORD PTR _b$1$[esp+348], eax
	js	$LN9@BN_mod_exp
	dec	eax
	mov	DWORD PTR tv942[esp+348], eax
	mov	eax, esi
	sub	eax, DWORD PTR _window1$1$[esp+348]
	mov	DWORD PTR tv941[esp+348], eax
	mov	eax, 2
	sub	eax, esi
	mov	esi, DWORD PTR _b$1$[esp+348]
	mov	DWORD PTR tv940[esp+348], eax
	mov	eax, 1
$LL10@BN_mod_exp:
; Line 239
	test	eax, eax
	jne	SHORT $LN51@BN_mod_exp
; Line 240
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	mov	eax, DWORD PTR _r$1$[esp+352]
	push	DWORD PTR _mont$1$[esp+352]
	push	eax
	push	eax
	push	eax
	call	_BN_mod_mul_montgomery
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
$LN51@BN_mod_exp:
; Line 244
	test	edi, edi
	jne	$LN14@BN_mod_exp
; Line 245
	push	esi
	push	DWORD PTR _p1$GSCopy$1$[esp+352]
	call	_BN_is_bit_set
	add	esp, 8
	test	eax, eax
	je	$LN14@BN_mod_exp
; Line 249
	mov	esi, DWORD PTR tv940[esp+348]
	add	esi, DWORD PTR tv941[esp+348]
	add	esi, DWORD PTR tv942[esp+348]
; Line 250
	mov	edi, DWORD PTR _p1$GSCopy$1$[esp+348]
	push	esi
	push	edi
	mov	DWORD PTR _wpos1$1$[esp+356], esi
	call	_BN_is_bit_set
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN12@BN_mod_exp
$LL11@BN_mod_exp:
; Line 251
	inc	esi
	push	esi
	push	edi
	call	_BN_is_bit_set
	add	esp, 8
	test	eax, eax
	je	SHORT $LL11@BN_mod_exp
	mov	DWORD PTR _wpos1$1$[esp+348], esi
$LN12@BN_mod_exp:
; Line 254
	mov	eax, DWORD PTR tv942[esp+348]
	mov	edi, 1
	mov	esi, eax
	mov	DWORD PTR _wvalue1$1$[esp+348], edi
	cmp	eax, DWORD PTR _wpos1$1$[esp+348]
	jl	SHORT $LN115@BN_mod_exp
	mov	ebp, DWORD PTR _wpos1$1$[esp+348]
	mov	ebx, DWORD PTR _p1$GSCopy$1$[esp+348]
$LL15@BN_mod_exp:
; Line 256
	push	esi
	push	ebx
	add	edi, edi
	call	_BN_is_bit_set
	add	esp, 8
	test	eax, eax
	je	SHORT $LN13@BN_mod_exp
; Line 257
	inc	edi
$LN13@BN_mod_exp:
; Line 254
	dec	esi
	cmp	esi, ebp
	jge	SHORT $LL15@BN_mod_exp
	mov	ebx, DWORD PTR _wvalue2$1$[esp+348]
	mov	ebp, DWORD PTR _wpos2$1$[esp+348]
	mov	DWORD PTR _wvalue1$1$[esp+348], edi
$LN115@BN_mod_exp:
	mov	esi, DWORD PTR _b$1$[esp+348]
$LN14@BN_mod_exp:
; Line 261
	test	ebx, ebx
	jne	SHORT $LN19@BN_mod_exp
; Line 262
	push	esi
	mov	esi, DWORD PTR _p2$GSCopy$1$[esp+352]
	push	esi
	call	_BN_is_bit_set
	add	esp, 8
	test	eax, eax
	je	SHORT $LN19@BN_mod_exp
; Line 238
	mov	ebp, DWORD PTR tv940[esp+348]
	add	ebp, DWORD PTR tv942[esp+348]
; Line 267
	push	ebp
	push	esi
	mov	DWORD PTR _wpos2$1$[esp+356], ebp
	call	_BN_is_bit_set
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@BN_mod_exp
	npad	6
$LL16@BN_mod_exp:
; Line 268
	inc	ebp
	push	ebp
	push	esi
	call	_BN_is_bit_set
	add	esp, 8
	test	eax, eax
	je	SHORT $LL16@BN_mod_exp
	mov	DWORD PTR _wpos2$1$[esp+348], ebp
$LN17@BN_mod_exp:
; Line 271
	mov	esi, DWORD PTR tv942[esp+348]
	mov	ebx, 1
	mov	DWORD PTR _wvalue2$1$[esp+348], ebx
	cmp	esi, ebp
	jl	SHORT $LN19@BN_mod_exp
	mov	edi, DWORD PTR _p2$GSCopy$1$[esp+348]
$LL20@BN_mod_exp:
; Line 273
	push	esi
	push	edi
	add	ebx, ebx
	call	_BN_is_bit_set
	add	esp, 8
	test	eax, eax
	je	SHORT $LN18@BN_mod_exp
; Line 274
	inc	ebx
$LN18@BN_mod_exp:
; Line 271
	dec	esi
	cmp	esi, ebp
	jge	SHORT $LL20@BN_mod_exp
	mov	edi, DWORD PTR _wvalue1$1$[esp+348]
	mov	DWORD PTR _wvalue2$1$[esp+348], ebx
$LN19@BN_mod_exp:
; Line 278
	mov	esi, DWORD PTR _b$1$[esp+348]
	test	edi, edi
	je	SHORT $LN116@BN_mod_exp
	cmp	esi, DWORD PTR _wpos1$1$[esp+348]
	jne	SHORT $LN116@BN_mod_exp
; Line 280
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	mov	eax, DWORD PTR _r$1$[esp+352]
	push	DWORD PTR _mont$1$[esp+352]
	sar	edi, 1
	push	DWORD PTR _val1$[esp+edi*4+356]
	push	eax
	push	eax
	call	_BN_mod_mul_montgomery
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$121
; Line 282
	xor	edi, edi
; Line 283
	xor	eax, eax
	mov	DWORD PTR _wvalue1$1$[esp+348], edi
	mov	DWORD PTR _r_is_one$1$[esp+348], eax
	jmp	SHORT $LN58@BN_mod_exp
$LN116@BN_mod_exp:
	mov	eax, DWORD PTR _r_is_one$1$[esp+348]
$LN58@BN_mod_exp:
; Line 286
	test	ebx, ebx
	je	SHORT $LN8@BN_mod_exp
	cmp	esi, ebp
	jne	SHORT $LN8@BN_mod_exp
; Line 288
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	mov	eax, DWORD PTR _r$1$[esp+352]
	push	DWORD PTR _mont$1$[esp+352]
	sar	ebx, 1
	push	DWORD PTR _val2$[esp+ebx*4+356]
	push	eax
	push	eax
	call	_BN_mod_mul_montgomery
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$121
; Line 290
	xor	ebx, ebx
; Line 291
	xor	eax, eax
	mov	DWORD PTR _wvalue2$1$[esp+348], ebx
	mov	DWORD PTR _r_is_one$1$[esp+348], eax
$LN8@BN_mod_exp:
; Line 238
	dec	DWORD PTR tv942[esp+348]
	dec	esi
	mov	DWORD PTR _b$1$[esp+348], esi
	test	esi, esi
	jns	$LL10@BN_mod_exp
$LN9@BN_mod_exp:
; Line 294
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	push	DWORD PTR _mont$1$[esp+352]
	push	DWORD PTR _r$1$[esp+356]
	push	DWORD PTR _rr$GSCopy$1$[esp+360]
	call	_BN_from_montgomery
	xor	ecx, ecx
	add	esp, 16					; 00000010H
	test	eax, eax
	mov	eax, 1
	cmovne	ecx, eax
	mov	DWORD PTR _ret$1$[esp+348], ecx
$err$121:
; Line 298
	cmp	DWORD PTR _in_mont$GSCopy$1$[esp+348], 0
	jne	SHORT $LN63@BN_mod_exp
$LN110@BN_mod_exp:
	mov	eax, DWORD PTR _mont$1$[esp+348]
	test	eax, eax
	je	SHORT $LN63@BN_mod_exp
; Line 299
	push	eax
	call	_BN_MONT_CTX_free
	add	esp, 4
$LN63@BN_mod_exp:
; Line 300
	push	DWORD PTR _ctx$GSCopy$1$[esp+348]
	call	_BN_CTX_end
; Line 302
	mov	eax, DWORD PTR _ret$1$[esp+352]
	add	esp, 4
$LN117@BN_mod_exp:
; Line 303
	mov	ecx, DWORD PTR __$ArrayPad$[esp+348]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 332				; 0000014cH
	ret	0
_BN_mod_exp2_mont ENDP
_TEXT	ENDS
END

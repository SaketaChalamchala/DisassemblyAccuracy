; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_dsa_asn1_meths
PUBLIC	??_C@_03ENFFABCE@DSA?$AA@			; `string'
PUBLIC	??_C@_0BD@IBKHKBJA@OpenSSL?5DSA?5method?$AA@	; `string'
;	COMDAT ??_C@_0BD@IBKHKBJA@OpenSSL?5DSA?5method?$AA@
CONST	SEGMENT
??_C@_0BD@IBKHKBJA@OpenSSL?5DSA?5method?$AA@ DB 'OpenSSL DSA method', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03ENFFABCE@DSA?$AA@
CONST	SEGMENT
??_C@_03ENFFABCE@DSA?$AA@ DB 'DSA', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_dsa_asn1_meths DD 042H
	DD	074H
	DD	01H
	ORG $+96
	DD	043H
	DD	074H
	DD	01H
	ORG $+96
	DD	046H
	DD	074H
	DD	01H
	ORG $+96
	DD	071H
	DD	074H
	DD	01H
	ORG $+96
	DD	074H
	DD	074H
	DD	00H
	DD	FLAT:??_C@_03ENFFABCE@DSA?$AA@
	DD	FLAT:??_C@_0BD@IBKHKBJA@OpenSSL?5DSA?5method?$AA@
	DD	FLAT:_dsa_pub_decode
	DD	FLAT:_dsa_pub_encode
	DD	FLAT:_dsa_pub_cmp
	DD	FLAT:_dsa_pub_print
	DD	FLAT:_dsa_priv_decode
	DD	FLAT:_dsa_priv_encode
	DD	FLAT:_dsa_priv_print
	DD	FLAT:_int_dsa_size
	DD	FLAT:_dsa_bits
	DD	FLAT:_dsa_param_decode
	DD	FLAT:_dsa_param_encode
	DD	FLAT:_dsa_missing_parameters
	DD	FLAT:_dsa_copy_parameters
	DD	FLAT:_dsa_cmp_parameters
	DD	FLAT:_dsa_param_print
	DD	FLAT:_dsa_sig_print
	DD	FLAT:_int_dsa_free
	DD	FLAT:_dsa_pkey_ctrl
	DD	FLAT:_old_dsa_priv_decode
	DD	FLAT:_old_dsa_priv_encode
	ORG $+8
CONST	ENDS
PUBLIC	??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@ ; `string'
PUBLIC	??_C@_0M@CJKOCIEC@Private?9Key?$AA@		; `string'
PUBLIC	??_C@_0L@FMJMEKAC@Public?9Key?$AA@		; `string'
PUBLIC	??_C@_0P@LAFOADJN@DSA?9Parameters?$AA@		; `string'
PUBLIC	??_C@_0O@OPPPNLCD@?$CFs?3?5?$CI?$CFd?5bit?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_05PFPGJCCA@priv?3?$AA@			; `string'
PUBLIC	??_C@_05FJHKEHEO@pub?3?5?$AA@			; `string'
PUBLIC	??_C@_05KENJDLPA@P?3?5?5?5?$AA@			; `string'
PUBLIC	??_C@_05GPIFOIFF@Q?3?5?5?5?$AA@			; `string'
PUBLIC	??_C@_05LKAKAJND@G?3?5?5?5?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_05OOLNJPMN@r?3?5?5?5?$AA@			; `string'
PUBLIC	??_C@_05CFOBEMGI@s?3?5?5?5?$AA@			; `string'
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_indent:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_mod_exp:PROC
EXTRN	_BN_dup:PROC
EXTRN	_d2i_ASN1_SEQUENCE_ANY:PROC
EXTRN	_ASN1_TYPE_free:PROC
EXTRN	_ASN1_STRING_new:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_clear_free:PROC
EXTRN	_ASN1_INTEGER_free:PROC
EXTRN	_d2i_ASN1_INTEGER:PROC
EXTRN	_i2d_ASN1_INTEGER:PROC
EXTRN	_d2i_ASN1_UINTEGER:PROC
EXTRN	_BN_to_ASN1_INTEGER:PROC
EXTRN	_ASN1_INTEGER_to_BN:PROC
EXTRN	_ASN1_bn_print:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_find_sigid_by_algs:PROC
EXTRN	_EVP_PKEY_id:PROC
EXTRN	_EVP_PKEY_assign:PROC
EXTRN	_DSA_SIG_free:PROC
EXTRN	_d2i_DSA_SIG:PROC
EXTRN	_DSA_new:PROC
EXTRN	_DSA_free:PROC
EXTRN	_DSA_size:PROC
EXTRN	_d2i_DSAPrivateKey:PROC
EXTRN	_d2i_DSAparams:PROC
EXTRN	_i2d_DSAPublicKey:PROC
EXTRN	_i2d_DSAPrivateKey:PROC
EXTRN	_i2d_DSAparams:PROC
EXTRN	_PKCS7_SIGNER_INFO_get0_algs:PROC
EXTRN	_X509_signature_dump:PROC
EXTRN	_X509_ALGOR_set0:PROC
EXTRN	_X509_ALGOR_get0:PROC
EXTRN	_PKCS8_pkey_set0:PROC
EXTRN	_PKCS8_pkey_get0:PROC
EXTRN	_X509_PUBKEY_set0_param:PROC
EXTRN	_X509_PUBKEY_get0_param:PROC
EXTRN	_CMS_SignerInfo_get0_algs:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_05CFOBEMGI@s?3?5?5?5?$AA@
CONST	SEGMENT
??_C@_05CFOBEMGI@s?3?5?5?5?$AA@ DB 's:   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OOLNJPMN@r?3?5?5?5?$AA@
CONST	SEGMENT
??_C@_05OOLNJPMN@r?3?5?5?5?$AA@ DB 'r:   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LKAKAJND@G?3?5?5?5?$AA@
CONST	SEGMENT
??_C@_05LKAKAJND@G?3?5?5?5?$AA@ DB 'G:   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GPIFOIFF@Q?3?5?5?5?$AA@
CONST	SEGMENT
??_C@_05GPIFOIFF@Q?3?5?5?5?$AA@ DB 'Q:   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KENJDLPA@P?3?5?5?5?$AA@
CONST	SEGMENT
??_C@_05KENJDLPA@P?3?5?5?5?$AA@ DB 'P:   ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FJHKEHEO@pub?3?5?$AA@
CONST	SEGMENT
??_C@_05FJHKEHEO@pub?3?5?$AA@ DB 'pub: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PFPGJCCA@priv?3?$AA@
CONST	SEGMENT
??_C@_05PFPGJCCA@priv?3?$AA@ DB 'priv:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPPPNLCD@?$CFs?3?5?$CI?$CFd?5bit?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0O@OPPPNLCD@?$CFs?3?5?$CI?$CFd?5bit?$CJ?6?$AA@ DB '%s: (%d bit)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LAFOADJN@DSA?9Parameters?$AA@
CONST	SEGMENT
??_C@_0P@LAFOADJN@DSA?9Parameters?$AA@ DB 'DSA-Parameters', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FMJMEKAC@Public?9Key?$AA@
CONST	SEGMENT
??_C@_0L@FMJMEKAC@Public?9Key?$AA@ DB 'Public-Key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CJKOCIEC@Private?9Key?$AA@
CONST	SEGMENT
??_C@_0M@CJKOCIEC@Private?9Key?$AA@ DB 'Private-Key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@ DB '.\crypto\dsa\ds'
	DB	'a_ameth.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_pkey_ctrl
_TEXT	SEGMENT
_alg2$1 = -8						; size = 4
_snid$2 = -8						; size = 4
_snid$3 = -4						; size = 4
_alg2$4 = -4						; size = 4
_pkey$ = 8						; size = 4
_alg1$5 = 12						; size = 4
_alg1$6 = 12						; size = 4
_op$ = 12						; size = 4
_arg1$ = 16						; size = 4
_arg2$ = 20						; size = 4
_dsa_pkey_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 572
	mov	eax, 8
	call	__chkstk
; Line 573
	mov	eax, DWORD PTR _op$[esp+4]
	dec	eax
	push	esi
	cmp	eax, 7
	ja	$LN18@dsa_pkey_c
	jmp	DWORD PTR $LN21@dsa_pkey_c[eax*4]
$LN4@dsa_pkey_c:
; Line 575
	cmp	DWORD PTR _arg1$[esp+8], 0
	jne	$LN5@dsa_pkey_c
; Line 578
	lea	eax, DWORD PTR _alg2$4[esp+12]
	push	eax
	lea	eax, DWORD PTR _alg1$6[esp+12]
	push	eax
	push	0
	push	DWORD PTR _arg2$[esp+20]
	call	_PKCS7_SIGNER_INFO_get0_algs
; Line 579
	mov	eax, DWORD PTR _alg1$6[esp+24]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN7@dsa_pkey_c
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN7@dsa_pkey_c
; Line 581
	push	eax
	call	_OBJ_obj2nid
	mov	esi, eax
	add	esp, 4
; Line 582
	test	esi, esi
	je	SHORT $LN7@dsa_pkey_c
; Line 584
	push	DWORD PTR _pkey$[esp+8]
	call	_EVP_PKEY_id
	push	eax
	lea	eax, DWORD PTR _snid$2[esp+20]
	push	esi
	push	eax
	call	_OBJ_find_sigid_by_algs
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN7@dsa_pkey_c
; Line 586
	push	0
	push	-1
	push	DWORD PTR _snid$2[esp+20]
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _alg2$4[esp+24]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
; Line 608
	mov	eax, 1
	pop	esi
; Line 620
	add	esp, 8
	ret	0
$LN7@dsa_pkey_c:
; Line 580
	or	eax, -1
	pop	esi
; Line 620
	add	esp, 8
	ret	0
$LN10@dsa_pkey_c:
; Line 591
	cmp	DWORD PTR _arg1$[esp+8], 0
	jne	$LN5@dsa_pkey_c
; Line 594
	lea	eax, DWORD PTR _alg2$1[esp+12]
	push	eax
	lea	eax, DWORD PTR _alg1$5[esp+12]
	push	eax
	push	0
	push	0
	push	DWORD PTR _arg2$[esp+24]
	call	_CMS_SignerInfo_get0_algs
; Line 595
	mov	eax, DWORD PTR _alg1$5[esp+28]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN7@dsa_pkey_c
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN7@dsa_pkey_c
; Line 597
	push	eax
	call	_OBJ_obj2nid
	mov	esi, eax
	add	esp, 4
; Line 598
	test	esi, esi
	je	SHORT $LN7@dsa_pkey_c
; Line 600
	push	DWORD PTR _pkey$[esp+8]
	call	_EVP_PKEY_id
	push	eax
	lea	eax, DWORD PTR _snid$3[esp+20]
	push	esi
	push	eax
	call	_OBJ_find_sigid_by_algs
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN7@dsa_pkey_c
; Line 602
	push	0
	push	-1
	push	DWORD PTR _snid$3[esp+20]
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _alg2$1[esp+24]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
; Line 608
	mov	eax, 1
	pop	esi
; Line 620
	add	esp, 8
	ret	0
$LN16@dsa_pkey_c:
; Line 607
	mov	eax, DWORD PTR _arg2$[esp+8]
	mov	DWORD PTR [eax], -1
$LN5@dsa_pkey_c:
; Line 608
	mov	eax, 1
	pop	esi
; Line 620
	add	esp, 8
	ret	0
$LN17@dsa_pkey_c:
; Line 612
	mov	eax, DWORD PTR _arg2$[esp+8]
	pop	esi
	mov	DWORD PTR [eax], 672			; 000002a0H
; Line 613
	mov	eax, 2
; Line 620
	add	esp, 8
	ret	0
$LN18@dsa_pkey_c:
; Line 616
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 620
	add	esp, 8
	ret	0
	npad	2
$LN21@dsa_pkey_c:
	DD	$LN4@dsa_pkey_c
	DD	$LN18@dsa_pkey_c
	DD	$LN17@dsa_pkey_c
	DD	$LN18@dsa_pkey_c
	DD	$LN10@dsa_pkey_c
	DD	$LN18@dsa_pkey_c
	DD	$LN18@dsa_pkey_c
	DD	$LN16@dsa_pkey_c
_dsa_pkey_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_sig_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_sigalg$ = 12						; size = 4
_p$ = 16						; size = 4
_sig$ = 16						; size = 4
_indent$ = 20						; size = 4
_pctx$ = 24						; size = 4
_dsa_sig_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 531
	push	edi
; Line 534
	mov	edi, DWORD PTR _sig$[esp]
	test	edi, edi
	jne	SHORT $LN4@dsa_sig_pr
; Line 535
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bp$[esp+4]
	call	_BIO_puts
	xor	ecx, ecx
	add	esp, 8
	test	eax, eax
	setg	cl
	mov	eax, ecx
	pop	edi
; Line 569
	ret	0
$LN4@dsa_sig_pr:
; Line 540
	mov	eax, DWORD PTR [edi+8]
	push	esi
; Line 541
	push	DWORD PTR [edi]
	mov	DWORD PTR _p$[esp+8], eax
	lea	eax, DWORD PTR _p$[esp+8]
	push	eax
	push	0
	call	_d2i_DSA_SIG
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 542
	test	esi, esi
	je	$LN5@dsa_sig_pr
; Line 546
	mov	eax, DWORD PTR [esi]
	xor	edi, edi
	push	ebx
	xor	ebx, ebx
; Line 408
	test	eax, eax
	je	SHORT $LN14@dsa_sig_pr
; Line 410
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	test	eax, eax
	cmovne	edi, eax
$LN14@dsa_sig_pr:
; Line 547
	mov	eax, DWORD PTR [esi+4]
; Line 408
	test	eax, eax
	je	SHORT $LN18@dsa_sig_pr
; Line 410
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN18@dsa_sig_pr:
; Line 548
	push	548					; 00000224H
	lea	eax, DWORD PTR [edi+10]
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 549
	test	edi, edi
	jne	SHORT $LN6@dsa_sig_pr
; Line 550
	push	550					; 00000226H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	65					; 00000041H
	push	125					; 0000007dH
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 565
	push	esi
	call	_DSA_SIG_free
	add	esp, 4
; Line 566
	mov	eax, ebx
	pop	ebx
	pop	esi
	pop	edi
; Line 569
	ret	0
$LN6@dsa_sig_pr:
	push	ebp
; Line 554
	mov	ebp, DWORD PTR _bp$[esp+12]
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	ebp
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $err$22
; Line 557
	push	DWORD PTR _indent$[esp+12]
	push	edi
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_05OOLNJPMN@r?3?5?5?5?$AA@
	push	ebp
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$22
; Line 559
	push	DWORD PTR _indent$[esp+12]
	push	edi
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_05CFOBEMGI@s?3?5?5?5?$AA@
	push	ebp
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	mov	ecx, 1
	test	eax, eax
	cmovne	ebx, ecx
$err$22:
; Line 564
	push	edi
	call	_CRYPTO_free
	add	esp, 4
	pop	ebp
; Line 565
	push	esi
	call	_DSA_SIG_free
	add	esp, 4
; Line 566
	mov	eax, ebx
	pop	ebx
	pop	esi
	pop	edi
; Line 569
	ret	0
$LN5@dsa_sig_pr:
; Line 568
	push	DWORD PTR _indent$[esp+4]
	push	edi
	push	DWORD PTR _bp$[esp+12]
	call	_X509_signature_dump
	add	esp, 12					; 0000000cH
	pop	esi
	pop	edi
; Line 569
	ret	0
_dsa_sig_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _old_dsa_priv_encode
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pder$ = 12						; size = 4
_old_dsa_priv_encode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 526
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR _pder$[esp-4]
	push	DWORD PTR [eax+20]
	call	_i2d_DSAPrivateKey
	add	esp, 8
; Line 527
	ret	0
_old_dsa_priv_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _old_dsa_priv_decode
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pder$ = 12						; size = 4
_derlen$ = 16						; size = 4
_old_dsa_priv_decode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 516
	push	DWORD PTR _derlen$[esp-4]
	push	DWORD PTR _pder$[esp]
	push	0
	call	_d2i_DSAPrivateKey
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@old_dsa_pr
; Line 517
	push	517					; 00000205H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	10					; 0000000aH
	push	122					; 0000007aH
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 518
	xor	eax, eax
; Line 522
	ret	0
$LN2@old_dsa_pr:
; Line 520
	push	eax
	push	116					; 00000074H
	push	DWORD PTR _pkey$[esp+4]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 521
	mov	eax, 1
; Line 522
	ret	0
_old_dsa_priv_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_priv_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_ctx$ = 20						; size = 4
_dsa_priv_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 509
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	2
	push	DWORD PTR _indent$[esp]
	push	DWORD PTR [eax+20]
	push	DWORD PTR _bp$[esp+8]
	call	_do_dsa_print
	add	esp, 16					; 00000010H
; Line 510
	ret	0
_dsa_priv_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_pub_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_ctx$ = 20						; size = 4
_dsa_pub_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 503
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	1
	push	DWORD PTR _indent$[esp]
	push	DWORD PTR [eax+20]
	push	DWORD PTR _bp$[esp+8]
	call	_do_dsa_print
	add	esp, 16					; 00000010H
; Line 504
	ret	0
_dsa_pub_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_param_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_ctx$ = 20						; size = 4
_dsa_param_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 497
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	0
	push	DWORD PTR _indent$[esp]
	push	DWORD PTR [eax+20]
	push	DWORD PTR _bp$[esp+8]
	call	_do_dsa_print
	add	esp, 16					; 00000010H
; Line 498
	ret	0
_dsa_param_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_param_encode
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pder$ = 12						; size = 4
_dsa_param_encode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 491
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR _pder$[esp-4]
	push	DWORD PTR [eax+20]
	call	_i2d_DSAparams
	add	esp, 8
; Line 492
	ret	0
_dsa_param_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_param_decode
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pder$ = 12						; size = 4
_derlen$ = 16						; size = 4
_dsa_param_decode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 481
	push	DWORD PTR _derlen$[esp-4]
	push	DWORD PTR _pder$[esp]
	push	0
	call	_d2i_DSAparams
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@dsa_param_
; Line 482
	push	482					; 000001e2H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	10					; 0000000aH
	push	119					; 00000077H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 483
	xor	eax, eax
; Line 487
	ret	0
$LN2@dsa_param_:
; Line 485
	push	eax
	push	116					; 00000074H
	push	DWORD PTR _pkey$[esp+4]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 486
	mov	eax, 1
; Line 487
	ret	0
_dsa_param_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_dsa_print
_TEXT	SEGMENT
_priv_key$1$ = -8					; size = 4
_ret$1$ = -4						; size = 4
_bp$ = 8						; size = 4
_ktype$1$ = 12						; size = 4
_x$ = 12						; size = 4
_off$ = 16						; size = 4
_pub_key$1$ = 20					; size = 4
_ptype$ = 20						; size = 4
_do_dsa_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 415
	mov	eax, 8
	call	__chkstk
; Line 423
	mov	eax, DWORD PTR _ptype$[esp+4]
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR _x$[esp+16]
	xor	ebx, ebx
	push	edi
	xor	edi, edi
	mov	DWORD PTR _ret$1$[esp+24], ebx
	cmp	eax, 2
	jne	SHORT $LN2@do_dsa_pri
; Line 424
	mov	ebp, DWORD PTR [esi+28]
; Line 429
	mov	ecx, DWORD PTR [esi+24]
	mov	DWORD PTR _priv_key$1$[esp+24], ebp
	jmp	SHORT $LN42@do_dsa_pri
$LN2@do_dsa_pri:
; Line 426
	xor	ebp, ebp
	mov	DWORD PTR _priv_key$1$[esp+24], ebp
; Line 428
	test	eax, eax
	jle	SHORT $LN4@do_dsa_pri
; Line 429
	mov	ecx, DWORD PTR [esi+24]
	jmp	SHORT $LN42@do_dsa_pri
$LN4@do_dsa_pri:
; Line 431
	xor	ecx, ecx
$LN42@do_dsa_pri:
	mov	DWORD PTR _pub_key$1$[esp+20], ecx
; Line 433
	cmp	eax, 2
	jne	SHORT $LN6@do_dsa_pri
; Line 434
	mov	DWORD PTR _ktype$1$[esp+20], OFFSET ??_C@_0M@CJKOCIEC@Private?9Key?$AA@
	jmp	SHORT $LN8@do_dsa_pri
$LN6@do_dsa_pri:
; Line 435
	cmp	eax, 1
	mov	ecx, OFFSET ??_C@_0L@FMJMEKAC@Public?9Key?$AA@
	mov	edx, OFFSET ??_C@_0P@LAFOADJN@DSA?9Parameters?$AA@
	cmovne	ecx, edx
	mov	DWORD PTR _ktype$1$[esp+20], ecx
$LN8@do_dsa_pri:
; Line 440
	mov	eax, DWORD PTR [esi+12]
; Line 408
	test	eax, eax
	je	SHORT $LN23@do_dsa_pri
; Line 410
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	test	eax, eax
	cmovne	edi, eax
$LN23@do_dsa_pri:
; Line 441
	mov	eax, DWORD PTR [esi+16]
; Line 408
	test	eax, eax
	je	SHORT $LN27@do_dsa_pri
; Line 410
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN27@do_dsa_pri:
; Line 442
	mov	eax, DWORD PTR [esi+20]
; Line 408
	test	eax, eax
	je	SHORT $LN31@do_dsa_pri
; Line 410
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN31@do_dsa_pri:
; Line 408
	test	ebp, ebp
	je	SHORT $LN35@do_dsa_pri
; Line 410
	push	ebp
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN35@do_dsa_pri:
; Line 408
	mov	eax, DWORD PTR _pub_key$1$[esp+20]
	test	eax, eax
	je	SHORT $LN39@do_dsa_pri
; Line 410
	push	eax
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	edi, eax
	cmovb	edi, eax
$LN39@do_dsa_pri:
; Line 446
	push	446					; 000001beH
	lea	eax, DWORD PTR [edi+10]
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 447
	test	edi, edi
	jne	SHORT $LN10@do_dsa_pri
; Line 448
	push	448					; 000001c0H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	65					; 00000041H
	push	104					; 00000068H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 474
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 475
	add	esp, 8
	ret	0
$LN10@do_dsa_pri:
; Line 452
	mov	ebx, DWORD PTR _bp$[esp+20]
	test	ebp, ebp
	mov	ebp, DWORD PTR _off$[esp+20]
	je	SHORT $LN13@do_dsa_pri
; Line 453
	push	128					; 00000080H
	push	ebp
	push	ebx
	call	_BIO_indent
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$44
; Line 456
	push	DWORD PTR [esi+12]
	call	_BN_num_bits
	push	eax
	push	DWORD PTR _ktype$1$[esp+28]
	push	OFFSET ??_C@_0O@OPPPNLCD@?$CFs?3?5?$CI?$CFd?5bit?$CJ?6?$AA@
	push	ebx
	call	_BIO_printf
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	$err$44
$LN13@do_dsa_pri:
; Line 460
	push	ebp
	push	edi
	push	DWORD PTR _priv_key$1$[esp+32]
	push	OFFSET ??_C@_05PFPGJCCA@priv?3?$AA@
	push	ebx
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$44
; Line 462
	mov	ecx, DWORD PTR _pub_key$1$[esp+20]
	push	ebp
	push	edi
	push	ecx
	push	OFFSET ??_C@_05FJHKEHEO@pub?3?5?$AA@
	push	ebx
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$44
; Line 464
	push	ebp
	push	edi
	push	DWORD PTR [esi+12]
	push	OFFSET ??_C@_05KENJDLPA@P?3?5?5?5?$AA@
	push	ebx
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$44
; Line 466
	push	ebp
	push	edi
	push	DWORD PTR [esi+16]
	push	OFFSET ??_C@_05GPIFOIFF@Q?3?5?5?5?$AA@
	push	ebx
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $err$44
; Line 468
	push	ebp
	push	edi
	push	DWORD PTR [esi+20]
	push	OFFSET ??_C@_05LKAKAJND@G?3?5?5?5?$AA@
	push	ebx
	call	_ASN1_bn_print
	xor	ecx, ecx
	add	esp, 20					; 00000014H
	test	eax, eax
	mov	edx, 1
	cmovne	ecx, edx
	mov	DWORD PTR _ret$1$[esp+24], ecx
$err$44:
; Line 473
	push	edi
	call	_CRYPTO_free
; Line 474
	mov	eax, DWORD PTR _ret$1$[esp+28]
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 475
	add	esp, 8
	ret	0
_do_dsa_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _update_buflen
_TEXT	SEGMENT
_b$ = 8							; size = 4
_pbuflen$ = 12						; size = 4
_update_buflen PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 408
	mov	eax, DWORD PTR _b$[esp-4]
	test	eax, eax
	je	SHORT $LN3@update_buf
; Line 410
	push	eax
	call	_BN_num_bits
	mov	ecx, DWORD PTR _pbuflen$[esp]
	add	eax, 7
	cdq
	add	esp, 4
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	DWORD PTR [ecx], eax
	jae	SHORT $LN3@update_buf
; Line 411
	mov	DWORD PTR [ecx], eax
$LN3@update_buf:
; Line 412
	ret	0
_update_buflen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_dsa_free
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_int_dsa_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 402
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR [eax+20]
	call	_DSA_free
	pop	ecx
; Line 403
	ret	0
_int_dsa_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_pub_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_dsa_pub_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 394
	mov	eax, DWORD PTR _a$[esp-4]
	mov	eax, DWORD PTR [eax+20]
	push	DWORD PTR [eax+24]
	mov	eax, DWORD PTR _b$[esp]
	mov	eax, DWORD PTR [eax+20]
	push	DWORD PTR [eax+24]
	call	_BN_cmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	inc	eax
; Line 398
	ret	0
_dsa_pub_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_cmp_parameters
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_dsa_cmp_parameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 383
	push	esi
; Line 385
	mov	esi, DWORD PTR _b$[esp]
	push	edi
	mov	edi, DWORD PTR _a$[esp+4]
	mov	eax, DWORD PTR [esi+20]
	push	DWORD PTR [eax+12]
	mov	eax, DWORD PTR [edi+20]
	push	DWORD PTR [eax+12]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@dsa_cmp_pa
	mov	eax, DWORD PTR [esi+20]
	push	DWORD PTR [eax+16]
	mov	eax, DWORD PTR [edi+20]
	push	DWORD PTR [eax+16]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@dsa_cmp_pa
	mov	eax, DWORD PTR [esi+20]
	push	DWORD PTR [eax+20]
	mov	eax, DWORD PTR [edi+20]
	push	DWORD PTR [eax+20]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@dsa_cmp_pa
; Line 389
	pop	edi
	mov	eax, 1
	pop	esi
; Line 390
	ret	0
$LN4@dsa_cmp_pa:
	pop	edi
; Line 387
	xor	eax, eax
	pop	esi
; Line 390
	ret	0
_dsa_cmp_parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_copy_parameters
_TEXT	SEGMENT
_to$ = 8						; size = 4
_from$ = 12						; size = 4
_dsa_copy_parameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 359
	push	ebx
	push	edi
; Line 362
	mov	edi, DWORD PTR _from$[esp+4]
	mov	eax, DWORD PTR [edi+20]
	push	DWORD PTR [eax+12]
	call	_BN_dup
	mov	ebx, eax
	add	esp, 4
	test	ebx, ebx
	jne	SHORT $LN2@dsa_copy_p
	pop	edi
	pop	ebx
; Line 380
	ret	0
$LN2@dsa_copy_p:
	push	esi
; Line 364
	mov	esi, DWORD PTR _to$[esp+8]
	mov	eax, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	je	SHORT $LN3@dsa_copy_p
; Line 365
	push	eax
	call	_BN_free
	add	esp, 4
$LN3@dsa_copy_p:
; Line 366
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [eax+12], ebx
; Line 368
	mov	eax, DWORD PTR [edi+20]
	push	DWORD PTR [eax+16]
	call	_BN_dup
	mov	ebx, eax
	add	esp, 4
	test	ebx, ebx
	je	SHORT $LN10@dsa_copy_p
; Line 370
	mov	eax, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [eax+16]
	test	eax, eax
	je	SHORT $LN5@dsa_copy_p
; Line 371
	push	eax
	call	_BN_free
	add	esp, 4
$LN5@dsa_copy_p:
; Line 372
	mov	eax, DWORD PTR [esi+20]
	mov	DWORD PTR [eax+16], ebx
; Line 374
	mov	eax, DWORD PTR [edi+20]
	push	DWORD PTR [eax+20]
	call	_BN_dup
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN6@dsa_copy_p
$LN10@dsa_copy_p:
	pop	esi
	pop	edi
; Line 375
	xor	eax, eax
	pop	ebx
; Line 380
	ret	0
$LN6@dsa_copy_p:
; Line 376
	mov	eax, DWORD PTR [esi+20]
	mov	eax, DWORD PTR [eax+20]
	test	eax, eax
	je	SHORT $LN7@dsa_copy_p
; Line 377
	push	eax
	call	_BN_free
	add	esp, 4
$LN7@dsa_copy_p:
; Line 378
	mov	eax, DWORD PTR [esi+20]
	pop	esi
	mov	DWORD PTR [eax+20], edi
; Line 379
	mov	eax, 1
	pop	edi
	pop	ebx
; Line 380
	ret	0
_dsa_copy_parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_missing_parameters
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_dsa_missing_parameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 352
	mov	eax, DWORD PTR _pkey$[esp-4]
	mov	eax, DWORD PTR [eax+20]
; Line 353
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN3@dsa_missin
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@dsa_missin
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN3@dsa_missin
; Line 355
	xor	eax, eax
; Line 356
	ret	0
$LN3@dsa_missin:
; Line 354
	mov	eax, 1
; Line 356
	ret	0
_dsa_missing_parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_bits
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_dsa_bits PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 346
	mov	eax, DWORD PTR _pkey$[esp-4]
	mov	eax, DWORD PTR [eax+20]
	push	DWORD PTR [eax+12]
	call	_BN_num_bits
	add	esp, 4
; Line 347
	ret	0
_dsa_bits ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_dsa_size
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_int_dsa_size PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 341
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR [eax+20]
	call	_DSA_size
	add	esp, 4
; Line 342
	ret	0
_int_dsa_size ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_priv_encode
_TEXT	SEGMENT
_dp$ = -4						; size = 4
_p8$ = 8						; size = 4
_pkey$ = 12						; size = 4
_dsa_priv_encode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 285
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	esi
; Line 291
	mov	esi, DWORD PTR _pkey$[esp+8]
	push	edi
	xor	edi, edi
	mov	DWORD PTR _dp$[esp+16], edi
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	$LN3@dsa_priv_e
	cmp	DWORD PTR [eax+28], edi
	je	$LN3@dsa_priv_e
; Line 296
	call	_ASN1_STRING_new
	mov	edi, eax
; Line 298
	test	edi, edi
	jne	SHORT $LN4@dsa_priv_e
; Line 299
	push	299					; 0000012bH
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	65					; 00000041H
; Line 300
	jmp	$LN12@dsa_priv_e
$LN4@dsa_priv_e:
; Line 303
	lea	eax, DWORD PTR [edi+8]
	push	eax
	push	DWORD PTR [esi+20]
	call	_i2d_DSAparams
	add	esp, 8
	mov	DWORD PTR [edi], eax
; Line 304
	test	eax, eax
	jg	SHORT $LN5@dsa_priv_e
; Line 305
	push	305					; 00000131H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	65					; 00000041H
; Line 306
	jmp	SHORT $LN12@dsa_priv_e
$LN5@dsa_priv_e:
; Line 308
	mov	DWORD PTR [edi+4], 16			; 00000010H
; Line 311
	mov	eax, DWORD PTR [esi+20]
	push	0
	push	DWORD PTR [eax+28]
	call	_BN_to_ASN1_INTEGER
	mov	ebx, eax
	add	esp, 8
; Line 313
	test	ebx, ebx
	jne	SHORT $LN6@dsa_priv_e
; Line 314
	push	314					; 0000013aH
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	109					; 0000006dH
; Line 315
	jmp	SHORT $LN12@dsa_priv_e
$LN6@dsa_priv_e:
; Line 318
	lea	eax, DWORD PTR _dp$[esp+16]
	push	eax
	push	ebx
	call	_i2d_ASN1_INTEGER
; Line 320
	push	ebx
	mov	esi, eax
	call	_ASN1_STRING_clear_free
	add	esp, 12					; 0000000cH
; Line 323
	push	esi
	push	DWORD PTR _dp$[esp+20]
	push	edi
	push	16					; 00000010H
	push	0
	push	116					; 00000074H
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _p8$[esp+36]
	call	_PKCS8_pkey_set0
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	SHORT $err$14
; Line 327
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 337
	pop	ecx
	ret	0
$LN3@dsa_priv_e:
; Line 292
	push	292					; 00000124H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	101					; 00000065H
$LN12@dsa_priv_e:
	push	116					; 00000074H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$14:
; Line 330
	mov	eax, DWORD PTR _dp$[esp+16]
	test	eax, eax
	je	SHORT $LN8@dsa_priv_e
; Line 331
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN8@dsa_priv_e:
; Line 332
	test	edi, edi
	je	SHORT $LN10@dsa_priv_e
; Line 333
	push	edi
	call	_ASN1_STRING_free
	add	esp, 4
$LN10@dsa_priv_e:
; Line 336
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 337
	pop	ecx
	ret	0
_dsa_priv_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_priv_decode
_TEXT	SEGMENT
_p$ = -28						; size = 4
_pklen$ = -24						; size = 4
_pval$ = -20						; size = 4
_ptype$ = -16						; size = 4
_palg$ = -12						; size = 4
_t1$1$ = -8						; size = 4
_q$1 = -8						; size = 4
_pm$ = -4						; size = 4
_pkey$ = 8						; size = 4
_p8$ = 12						; size = 4
_dsa_priv_decode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 181
	mov	eax, 28					; 0000001cH
	call	__chkstk
	push	ebx
	push	ebp
; Line 196
	mov	ebp, DWORD PTR _p8$[esp+32]
	lea	eax, DWORD PTR _palg$[esp+36]
	push	esi
	push	edi
	push	ebp
	push	eax
	lea	eax, DWORD PTR _pklen$[esp+52]
	xor	edi, edi
	push	eax
	lea	eax, DWORD PTR _p$[esp+56]
	xor	esi, esi
	push	eax
	push	edi
	xor	ebx, ebx
	call	_PKCS8_pkey_get0
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN2@dsa_priv_d
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 282
	add	esp, 28					; 0000001cH
	ret	0
$LN2@dsa_priv_d:
; Line 198
	push	DWORD PTR _palg$[esp+44]
	lea	eax, DWORD PTR _pval$[esp+48]
	push	eax
	lea	eax, DWORD PTR _ptype$[esp+52]
	push	eax
	push	0
	call	_X509_ALGOR_get0
; Line 201
	mov	eax, DWORD PTR _p$[esp+60]
	add	esp, 16					; 00000010H
	cmp	BYTE PTR [eax], 48			; 00000030H
; Line 203
	push	DWORD PTR _pklen$[esp+44]
	jne	SHORT $LN3@dsa_priv_d
	lea	eax, DWORD PTR _p$[esp+48]
	push	eax
	push	0
	call	_d2i_ASN1_SEQUENCE_ANY
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	je	$decerr$26
; Line 205
	push	ebx
	call	_sk_num
	add	esp, 4
	cmp	eax, 2
	jne	$decerr$26
; Line 213
	push	0
	push	ebx
	call	_sk_value
; Line 214
	push	1
	push	ebx
	mov	DWORD PTR _t1$1$[esp+60], eax
	call	_sk_value
; Line 215
	mov	ecx, DWORD PTR _t1$1$[esp+60]
	add	esp, 16					; 00000010H
	cmp	DWORD PTR [ecx], 16			; 00000010H
	jne	SHORT $LN7@dsa_priv_d
; Line 216
	mov	DWORD PTR [ebp], 2
; Line 217
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR _pval$[esp+44], ecx
	jmp	SHORT $LN10@dsa_priv_d
$LN7@dsa_priv_d:
; Line 218
	cmp	DWORD PTR _ptype$[esp+44], 16		; 00000010H
	jne	$decerr$26
; Line 219
	mov	ecx, DWORD PTR _pval$[esp+44]
	mov	DWORD PTR [ebp], 3
$LN10@dsa_priv_d:
; Line 223
	cmp	DWORD PTR [eax], 2
	jne	$decerr$26
; Line 226
	mov	esi, DWORD PTR [eax+4]
; Line 227
	jmp	SHORT $LN15@dsa_priv_d
$LN3@dsa_priv_d:
; Line 228
	mov	DWORD PTR _q$1[esp+48], eax
; Line 229
	lea	eax, DWORD PTR _p$[esp+48]
	push	eax
	push	0
	call	_d2i_ASN1_INTEGER
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	je	$decerr$26
; Line 231
	cmp	DWORD PTR [esi+4], 258			; 00000102H
	jne	SHORT $LN14@dsa_priv_d
; Line 233
	push	esi
	mov	DWORD PTR [ebp], 4
	call	_ASN1_STRING_clear_free
; Line 234
	push	DWORD PTR _pklen$[esp+48]
	lea	eax, DWORD PTR _q$1[esp+52]
	push	eax
	push	0
	call	_d2i_ASN1_UINTEGER
	mov	esi, eax
	add	esp, 16					; 00000010H
	test	esi, esi
	je	$decerr$26
$LN14@dsa_priv_d:
; Line 237
	cmp	DWORD PTR _ptype$[esp+44], 16		; 00000010H
	jne	$decerr$26
	mov	ecx, DWORD PTR _pval$[esp+44]
$LN15@dsa_priv_d:
; Line 242
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _pm$[esp+44], eax
; Line 244
	lea	eax, DWORD PTR _pm$[esp+44]
	push	DWORD PTR [ecx]
	push	eax
	push	0
	call	_d2i_DSAparams
	mov	edi, eax
	add	esp, 12					; 0000000cH
	test	edi, edi
	je	$decerr$26
; Line 247
	push	0
	push	esi
	call	_ASN1_INTEGER_to_BN
	add	esp, 8
	mov	DWORD PTR [edi+28], eax
	test	eax, eax
	jne	SHORT $LN17@dsa_priv_d
; Line 248
	push	248					; 000000f8H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	109					; 0000006dH
; Line 249
	jmp	$LN24@dsa_priv_d
$LN17@dsa_priv_d:
; Line 252
	call	_BN_new
	mov	DWORD PTR [edi+24], eax
	test	eax, eax
	jne	SHORT $LN18@dsa_priv_d
; Line 253
	push	253					; 000000fdH
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	65					; 00000041H
; Line 254
	jmp	SHORT $LN24@dsa_priv_d
$LN18@dsa_priv_d:
; Line 256
	call	_BN_CTX_new
	mov	ebp, eax
	test	ebp, ebp
	jne	SHORT $LN19@dsa_priv_d
; Line 257
	push	257					; 00000101H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	65					; 00000041H
	push	115					; 00000073H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 258
	jmp	SHORT $dsaerr$27
$LN19@dsa_priv_d:
; Line 261
	push	ebp
	push	DWORD PTR [edi+12]
	push	DWORD PTR [edi+28]
	push	DWORD PTR [edi+20]
	push	DWORD PTR [edi+24]
	call	_BN_mod_exp
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN20@dsa_priv_d
; Line 262
	push	262					; 00000106H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	109					; 0000006dH
	push	115					; 00000073H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	jmp	SHORT $dsaerr$27
$LN20@dsa_priv_d:
; Line 266
	push	edi
	push	116					; 00000074H
	push	DWORD PTR _pkey$[esp+48]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 268
	mov	edi, 1
	jmp	SHORT $done$28
$decerr$26:
; Line 272
	push	272					; 00000110H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	104					; 00000068H
$LN24@dsa_priv_d:
	push	115					; 00000073H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	ebp, ebp
$dsaerr$27:
; Line 274
	push	edi
	call	_DSA_free
	add	esp, 4
	xor	edi, edi
$done$28:
; Line 276
	push	ebp
	call	_BN_CTX_free
	add	esp, 4
; Line 277
	test	ebx, ebx
	je	SHORT $LN21@dsa_priv_d
; Line 278
	push	OFFSET _ASN1_TYPE_free
	push	ebx
	call	_sk_pop_free
	add	esp, 8
; Line 281
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 282
	add	esp, 28					; 0000001cH
	ret	0
$LN21@dsa_priv_d:
; Line 280
	push	esi
	call	_ASN1_STRING_clear_free
	add	esp, 4
; Line 281
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 282
	add	esp, 28					; 0000001cH
	ret	0
_dsa_priv_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_pub_encode
_TEXT	SEGMENT
_penc$ = -4						; size = 4
_pk$ = 8						; size = 4
_pkey$ = 12						; size = 4
_dsa_pub_encode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 130
	mov	eax, 4
	call	__chkstk
; Line 137
	mov	eax, DWORD PTR _pkey$[esp]
	push	ebx
	push	esi
	xor	esi, esi
	mov	DWORD PTR _penc$[esp+12], 0
	push	edi
	mov	edi, DWORD PTR [eax+20]
; Line 138
	cmp	DWORD PTR [eax+24], esi
	je	SHORT $LN2@dsa_pub_en
	cmp	DWORD PTR [edi+12], esi
	je	SHORT $LN2@dsa_pub_en
	cmp	DWORD PTR [edi+16], esi
	je	SHORT $LN2@dsa_pub_en
	cmp	DWORD PTR [edi+20], esi
	je	SHORT $LN2@dsa_pub_en
; Line 139
	call	_ASN1_STRING_new
	mov	esi, eax
; Line 140
	test	esi, esi
	jne	SHORT $LN4@dsa_pub_en
; Line 141
	push	141					; 0000008dH
$LN11@dsa_pub_en:
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	65					; 00000041H
	push	118					; 00000076H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$13:
; Line 167
	mov	eax, DWORD PTR _penc$[esp+16]
	test	eax, eax
	je	SHORT $LN8@dsa_pub_en
; Line 168
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN8@dsa_pub_en:
; Line 169
	test	esi, esi
	je	SHORT $LN9@dsa_pub_en
; Line 170
	push	esi
	call	_ASN1_STRING_free
	add	esp, 4
$LN9@dsa_pub_en:
; Line 172
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 173
	pop	ecx
	ret	0
$LN4@dsa_pub_en:
; Line 144
	lea	eax, DWORD PTR [esi+8]
	push	eax
	push	edi
	call	_i2d_DSAparams
	add	esp, 8
	mov	DWORD PTR [esi], eax
; Line 145
	test	eax, eax
	jg	SHORT $LN5@dsa_pub_en
; Line 146
	push	146					; 00000092H
; Line 147
	jmp	SHORT $LN11@dsa_pub_en
$LN5@dsa_pub_en:
; Line 149
	mov	ebx, 16					; 00000010H
; Line 150
	jmp	SHORT $LN3@dsa_pub_en
$LN2@dsa_pub_en:
; Line 151
	or	ebx, -1
$LN3@dsa_pub_en:
; Line 155
	lea	eax, DWORD PTR _penc$[esp+16]
	mov	DWORD PTR [edi+8], 0
	push	eax
	push	edi
	call	_i2d_DSAPublicKey
	add	esp, 8
; Line 157
	test	eax, eax
	jg	SHORT $LN6@dsa_pub_en
; Line 158
	push	158					; 0000009eH
; Line 159
	jmp	SHORT $LN11@dsa_pub_en
$LN6@dsa_pub_en:
; Line 162
	push	eax
	push	DWORD PTR _penc$[esp+20]
	push	esi
	push	ebx
	push	116					; 00000074H
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _pk$[esp+32]
	call	_X509_PUBKEY_set0_param
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$err$13
; Line 164
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 173
	pop	ecx
	ret	0
_dsa_pub_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dsa_pub_decode
_TEXT	SEGMENT
_palg$ = -24						; size = 4
_ptype$ = -20						; size = 4
_pval$ = -16						; size = 4
_pm$ = -12						; size = 4
_pklen$ = -8						; size = 4
_p$ = -4						; size = 4
_pkey$ = 8						; size = 4
_pubkey$ = 12						; size = 4
_dsa_pub_decode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_ameth.c
; Line 71
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 82
	push	DWORD PTR _pubkey$[esp+20]
	lea	eax, DWORD PTR _palg$[esp+28]
	push	eax
	lea	eax, DWORD PTR _pklen$[esp+32]
	push	eax
	lea	eax, DWORD PTR _p$[esp+36]
	push	eax
	push	0
	call	_X509_PUBKEY_get0_param
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN2@dsa_pub_de
; Line 127
	add	esp, 24					; 00000018H
	ret	0
$LN2@dsa_pub_de:
	push	esi
	push	edi
; Line 84
	push	DWORD PTR _palg$[esp+32]
	lea	eax, DWORD PTR _pval$[esp+36]
	push	eax
	lea	eax, DWORD PTR _ptype$[esp+40]
	push	eax
	push	0
	call	_X509_ALGOR_get0
; Line 86
	mov	eax, DWORD PTR _ptype$[esp+48]
	add	esp, 16					; 00000010H
	cmp	eax, 16					; 00000010H
	jne	SHORT $LN3@dsa_pub_de
; Line 88
	mov	ecx, DWORD PTR _pval$[esp+32]
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _pm$[esp+32], eax
; Line 91
	lea	eax, DWORD PTR _pm$[esp+32]
	push	DWORD PTR [ecx]
	push	eax
	push	0
	call	_d2i_DSAparams
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN9@dsa_pub_de
; Line 92
	push	92					; 0000005cH
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	104					; 00000068H
	push	117					; 00000075H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 125
	xor	eax, eax
	pop	edi
	pop	esi
; Line 127
	add	esp, 24					; 00000018H
	ret	0
$LN3@dsa_pub_de:
; Line 96
	cmp	eax, 5
	je	SHORT $LN8@dsa_pub_de
	cmp	eax, -1
	je	SHORT $LN8@dsa_pub_de
; Line 102
	push	102					; 00000066H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	105					; 00000069H
	push	117					; 00000075H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 125
	xor	eax, eax
	pop	edi
	pop	esi
; Line 127
	add	esp, 24					; 00000018H
	ret	0
$LN8@dsa_pub_de:
; Line 97
	call	_DSA_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN9@dsa_pub_de
; Line 98
	push	98					; 00000062H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	65					; 00000041H
	push	117					; 00000075H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 125
	xor	eax, eax
	pop	edi
	pop	esi
; Line 127
	add	esp, 24					; 00000018H
	ret	0
$LN9@dsa_pub_de:
; Line 106
	push	DWORD PTR _pklen$[esp+32]
	lea	eax, DWORD PTR _p$[esp+36]
	push	eax
	push	0
	call	_d2i_ASN1_INTEGER
	mov	edi, eax
	add	esp, 12					; 0000000cH
	test	edi, edi
	jne	SHORT $LN10@dsa_pub_de
; Line 107
	push	107					; 0000006bH
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	104					; 00000068H
	push	117					; 00000075H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 108
	jmp	SHORT $LN12@dsa_pub_de
$LN10@dsa_pub_de:
; Line 111
	push	0
	push	edi
	call	_ASN1_INTEGER_to_BN
	add	esp, 8
	mov	DWORD PTR [esi+24], eax
	test	eax, eax
	jne	SHORT $LN11@dsa_pub_de
; Line 112
	push	112					; 00000070H
	push	OFFSET ??_C@_0BJ@DCMHEMEN@?4?2crypto?2dsa?2dsa_ameth?4c?$AA@
	push	108					; 0000006cH
	push	117					; 00000075H
	push	10					; 0000000aH
	call	_ERR_put_error
$err$18:
; Line 122
	push	edi
	call	_ASN1_INTEGER_free
	add	esp, 24					; 00000018H
$LN12@dsa_pub_de:
; Line 123
	test	esi, esi
	je	SHORT $LN13@dsa_pub_de
; Line 124
	push	esi
	call	_DSA_free
	add	esp, 4
$LN13@dsa_pub_de:
; Line 125
	pop	edi
	xor	eax, eax
	pop	esi
; Line 127
	add	esp, 24					; 00000018H
	ret	0
$LN11@dsa_pub_de:
; Line 116
	push	edi
	call	_ASN1_INTEGER_free
; Line 117
	push	esi
	push	116					; 00000074H
	push	DWORD PTR _pkey$[esp+40]
	call	_EVP_PKEY_assign
	add	esp, 16					; 00000010H
; Line 118
	mov	eax, 1
	pop	edi
	pop	esi
; Line 127
	add	esp, 24					; 00000018H
	ret	0
_dsa_pub_decode ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\genrsa.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_scanf_options
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	_genrsa_main
PUBLIC	??_C@_0CB@ENHGOLMG@unable?5to?5create?5BIO?5for?5output?6@ ; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_02MEEAJGGO@?93?$AA@			; `string'
PUBLIC	??_C@_03EDNOFFIF@?9F4?$AA@			; `string'
PUBLIC	??_C@_03HLJDBDGF@?9f4?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_05LGFPCDPE@?9rand?$AA@			; `string'
PUBLIC	??_C@_04POMGKAPN@?9des?$AA@			; `string'
PUBLIC	??_C@_05DHJJCNDB@?9des3?$AA@			; `string'
PUBLIC	??_C@_05OHJDGOPB@?9idea?$AA@			; `string'
PUBLIC	??_C@_05IAIHCPC@?9seed?$AA@			; `string'
PUBLIC	??_C@_07ELMDAGHH@?9aes128?$AA@			; `string'
PUBLIC	??_C@_07LNHJABBM@?9aes192?$AA@			; `string'
PUBLIC	??_C@_07MCLKJCJC@?9aes256?$AA@			; `string'
PUBLIC	??_C@_0N@MALOKPBG@?9camellia128?$AA@		; `string'
PUBLIC	??_C@_0N@DGAEKIHN@?9camellia192?$AA@		; `string'
PUBLIC	??_C@_0N@EJMHDLPD@?9camellia256?$AA@		; `string'
PUBLIC	??_C@_08KCDBEMAI@?9passout?$AA@			; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_0CA@PMIDOJOM@usage?3?5genrsa?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@ ; `string'
PUBLIC	??_C@_0EB@BBEPLNGO@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ ; `string'
PUBLIC	??_C@_0FD@KENFKNBF@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ ; `string'
PUBLIC	??_C@_0EC@JFDOGDEB@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ ; `string'
PUBLIC	??_C@_07KIGMBBIJ@?5?9seed?6?$AA@		; `string'
PUBLIC	??_C@_0DD@CIMEKKME@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ ; `string'
PUBLIC	??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ ; `string'
PUBLIC	??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0CK@NEMOMECI@?5?9out?5file?5?5?5?5?5?5?5output?5the?5key?5@ ; `string'
PUBLIC	??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ ; `string'
PUBLIC	??_C@_0DD@PHOJIKJG@?5?9f4?5?5?5?5?5?5?5?5?5?5?5?5?5use?5F4?5?$CI0x10001@ ; `string'
PUBLIC	??_C@_0CI@ECLHDDHL@?5?93?5?5?5?5?5?5?5?5?5?5?5?5?5?5use?53?5for?5the?5E@ ; `string'
PUBLIC	??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ ; `string'
PUBLIC	??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@ ; `string'
PUBLIC	??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@ ; `string'
PUBLIC	??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; `string'
PUBLIC	??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ ; `string'
PUBLIC	??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; `string'
PUBLIC	??_C@_0DB@KBGJNLO@Generating?5RSA?5private?5key?0?5?$CFd?5b@ ; `string'
PUBLIC	??_C@_0BC@MFKIOEF@e?5is?5?$CFld?5?$CI0x?$CFlX?$CJ?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_free:PROC
EXTRN	_EVP_des_cbc:PROC
EXTRN	_EVP_des_ede3_cbc:PROC
EXTRN	_EVP_idea_cbc:PROC
EXTRN	_EVP_aes_128_cbc:PROC
EXTRN	_EVP_aes_192_cbc:PROC
EXTRN	_EVP_aes_256_cbc:PROC
EXTRN	_EVP_camellia_128_cbc:PROC
EXTRN	_EVP_camellia_192_cbc:PROC
EXTRN	_EVP_camellia_256_cbc:PROC
EXTRN	_EVP_seed_cbc:PROC
EXTRN	_RSA_new_method:PROC
EXTRN	_RSA_generate_key_ex:PROC
EXTRN	_RSA_free:PROC
EXTRN	_RAND_status:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_write_file:PROC
EXTRN	_app_RAND_load_files:PROC
EXTRN	_password_callback:PROC
EXTRN	_app_passwd:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_PEM_write_bio_RSAPrivateKey:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0BC@MFKIOEF@e?5is?5?$CFld?5?$CI0x?$CFlX?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BC@MFKIOEF@e?5is?5?$CFld?5?$CI0x?$CFlX?$CJ?6?$AA@ DB 'e is %ld (0x'
	DB	'%lX)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@KBGJNLO@Generating?5RSA?5private?5key?0?5?$CFd?5b@
CONST	SEGMENT
??_C@_0DB@KBGJNLO@Generating?5RSA?5private?5key?0?5?$CFd?5b@ DB 'Generati'
	DB	'ng RSA private key, %d bit long modulus', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
CONST	SEGMENT
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ DB '%ld sem'
	DB	'i-random bytes loaded', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
CONST	SEGMENT
??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ DB 'warning, n'
	DB	'ot much extra random data, consider using the -rand option', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
CONST	SEGMENT
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ DB 'Error getting pass'
	DB	'word', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@
CONST	SEGMENT
??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@ DB ' '
	DB	'                the random number generator', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@
CONST	SEGMENT
??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@ DB ' '
	DB	'                load the file (or the files in the directory)'
	DB	' into', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ DB ' -rand f'
	DB	'ile%cfile%c...', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
CONST	SEGMENT
??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ DB ' -'
	DB	'engine e       use engine e, possibly a hardware device.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@ECLHDDHL@?5?93?5?5?5?5?5?5?5?5?5?5?5?5?5?5use?53?5for?5the?5E@
CONST	SEGMENT
??_C@_0CI@ECLHDDHL@?5?93?5?5?5?5?5?5?5?5?5?5?5?5?5?5use?53?5for?5the?5E@ DB ' '
	DB	'-3              use 3 for the E value', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@PHOJIKJG@?5?9f4?5?5?5?5?5?5?5?5?5?5?5?5?5use?5F4?5?$CI0x10001@
CONST	SEGMENT
??_C@_0DD@PHOJIKJG@?5?9f4?5?5?5?5?5?5?5?5?5?5?5?5?5use?5F4?5?$CI0x10001@ DB ' '
	DB	'-f4             use F4 (0x10001) for the E value', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
CONST	SEGMENT
??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ DB ' -passo'
	DB	'ut arg    output file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@NEMOMECI@?5?9out?5file?5?5?5?5?5?5?5output?5the?5key?5@
CONST	SEGMENT
??_C@_0CK@NEMOMECI@?5?9out?5file?5?5?5?5?5?5?5output?5the?5key?5@ DB ' -o'
	DB	'ut file       output the key to ''file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'                encrypt PEM output with cbc camellia', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@
CONST	SEGMENT
??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ DB ' -camellia'
	DB	'128, -camellia192, -camellia256', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'                encrypt PEM output with cbc aes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
CONST	SEGMENT
??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ DB ' -aes128'
	DB	', -aes192, -aes256', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@CIMEKKME@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DD@CIMEKKME@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'                encrypt PEM output with cbc seed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KIGMBBIJ@?5?9seed?6?$AA@
CONST	SEGMENT
??_C@_07KIGMBBIJ@?5?9seed?6?$AA@ DB ' -seed', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@JFDOGDEB@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@
CONST	SEGMENT
??_C@_0EC@JFDOGDEB@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ DB ' '
	DB	'-idea           encrypt the generated key with IDEA in cbc mo'
	DB	'de', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@KENFKNBF@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@
CONST	SEGMENT
??_C@_0FD@KENFKNBF@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ DB ' '
	DB	'-des3           encrypt the generated key with DES in ede cbc'
	DB	' mode (168 bit key)', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@BBEPLNGO@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@
CONST	SEGMENT
??_C@_0EB@BBEPLNGO@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@ DB ' '
	DB	'-des            encrypt the generated key with DES in cbc mod'
	DB	'e', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PMIDOJOM@usage?3?5genrsa?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@
CONST	SEGMENT
??_C@_0CA@PMIDOJOM@usage?3?5genrsa?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@ DB 'u'
	DB	'sage: genrsa [args] [numbits]', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KCDBEMAI@?9passout?$AA@
CONST	SEGMENT
??_C@_08KCDBEMAI@?9passout?$AA@ DB '-passout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EJMHDLPD@?9camellia256?$AA@
CONST	SEGMENT
??_C@_0N@EJMHDLPD@?9camellia256?$AA@ DB '-camellia256', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DGAEKIHN@?9camellia192?$AA@
CONST	SEGMENT
??_C@_0N@DGAEKIHN@?9camellia192?$AA@ DB '-camellia192', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MALOKPBG@?9camellia128?$AA@
CONST	SEGMENT
??_C@_0N@MALOKPBG@?9camellia128?$AA@ DB '-camellia128', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MCLKJCJC@?9aes256?$AA@
CONST	SEGMENT
??_C@_07MCLKJCJC@?9aes256?$AA@ DB '-aes256', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LNHJABBM@?9aes192?$AA@
CONST	SEGMENT
??_C@_07LNHJABBM@?9aes192?$AA@ DB '-aes192', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07ELMDAGHH@?9aes128?$AA@
CONST	SEGMENT
??_C@_07ELMDAGHH@?9aes128?$AA@ DB '-aes128', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IAIHCPC@?9seed?$AA@
CONST	SEGMENT
??_C@_05IAIHCPC@?9seed?$AA@ DB '-seed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OHJDGOPB@?9idea?$AA@
CONST	SEGMENT
??_C@_05OHJDGOPB@?9idea?$AA@ DB '-idea', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DHJJCNDB@?9des3?$AA@
CONST	SEGMENT
??_C@_05DHJJCNDB@?9des3?$AA@ DB '-des3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04POMGKAPN@?9des?$AA@
CONST	SEGMENT
??_C@_04POMGKAPN@?9des?$AA@ DB '-des', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGFPCDPE@?9rand?$AA@
CONST	SEGMENT
??_C@_05LGFPCDPE@?9rand?$AA@ DB '-rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03HLJDBDGF@?9f4?$AA@
CONST	SEGMENT
??_C@_03HLJDBDGF@?9f4?$AA@ DB '-f4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03EDNOFFIF@?9F4?$AA@
CONST	SEGMENT
??_C@_03EDNOFFIF@?9F4?$AA@ DB '-F4', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MEEAJGGO@?93?$AA@
CONST	SEGMENT
??_C@_02MEEAJGGO@?93?$AA@ DB '-3', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@ENHGOLMG@unable?5to?5create?5BIO?5for?5output?6@
CONST	SEGMENT
??_C@_0CB@ENHGOLMG@unable?5to?5create?5BIO?5for?5output?6@ DB 'unable to '
	DB	'create BIO for output', 0aH, 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _genrsa_main
_TEXT	SEGMENT
_out$1$ = -56						; size = 4
_num$ = -52						; size = 4
_inrand$1$ = -48					; size = 4
_f4$1$ = -44						; size = 4
_rsa$1$ = -40						; size = 4
_passout$ = -36						; size = 4
_passargout$1$ = -32					; size = 4
_engine$1$ = -28					; size = 4
_outfile$1$ = -24					; size = 4
_cb_data$1 = -24					; size = 8
_bn$1$ = -16						; size = 4
_cb$ = -12						; size = 12
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_genrsa_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\genrsa.c
; Line 92
	mov	eax, 56					; 00000038H
	call	__chkstk
	push	ebx
	push	ebp
; Line 100
	xor	ebp, ebp
	mov	DWORD PTR _num$[esp+64], 2048		; 00000800H
	push	esi
	push	edi
	mov	ebx, 1
; Line 101
	mov	DWORD PTR _f4$1$[esp+72], 65537		; 00010001H
; Line 102
	mov	DWORD PTR _outfile$1$[esp+72], ebp
; Line 108
	xor	edi, edi
	mov	DWORD PTR _passargout$1$[esp+72], ebp
	mov	DWORD PTR _passout$[esp+72], ebp
	mov	DWORD PTR _engine$1$[esp+72], ebp
	mov	DWORD PTR _inrand$1$[esp+72], ebp
; Line 109
	call	_BN_new
; Line 110
	xor	esi, esi
	mov	DWORD PTR _bn$1$[esp+72], eax
	mov	DWORD PTR _rsa$1$[esp+72], esi
; Line 112
	test	eax, eax
	je	$LN65@genrsa_mai
; Line 116
	mov	eax, DWORD PTR _bio_err
	mov	DWORD PTR _cb$[esp+72], 2
	mov	DWORD PTR _cb$[esp+76], eax
	mov	DWORD PTR _cb$[esp+80], OFFSET _genrsa_cb
; Line 118
	test	eax, eax
	jne	SHORT $LN10@genrsa_mai
; Line 119
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN10@genrsa_mai
; Line 120
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN10@genrsa_mai:
; Line 122
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$err$161
; Line 124
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR _out$1$[esp+72], edi
	test	edi, edi
	jne	SHORT $LN12@genrsa_mai
; Line 125
	push	OFFSET ??_C@_0CB@ENHGOLMG@unable?5to?5create?5BIO?5for?5output?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 126
	jmp	$err$161
$LN12@genrsa_mai:
; Line 130
	mov	edi, DWORD PTR _argc$[esp+68]
	mov	ebx, DWORD PTR _argv$[esp+68]
	dec	edi
	add	ebx, 4
; Line 132
	test	edi, edi
	jle	$LN48@genrsa_mai
	npad	3
$LL2@genrsa_mai:
; Line 134
	mov	esi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, esi
	npad	7
$LL86@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN87@genrsa_mai
	test	dl, dl
	je	SHORT $LN88@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN87@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL86@genrsa_mai
$LN88@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN89@genrsa_mai
$LN87@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN89@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN14@genrsa_mai
; Line 135
	dec	edi
	cmp	edi, 1
	jl	$bad$162
; Line 137
	mov	esi, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+72], esi
	jmp	$LN49@genrsa_mai
$LN14@genrsa_mai:
; Line 138
	mov	ecx, OFFSET ??_C@_02MEEAJGGO@?93?$AA@
	mov	eax, esi
	npad	7
$LL90@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN91@genrsa_mai
	test	dl, dl
	je	SHORT $LN92@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN91@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL90@genrsa_mai
$LN92@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN93@genrsa_mai
$LN91@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN93@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN17@genrsa_mai
; Line 139
	mov	DWORD PTR _f4$1$[esp+72], 3
	jmp	$LN49@genrsa_mai
$LN17@genrsa_mai:
; Line 140
	mov	ecx, OFFSET ??_C@_03EDNOFFIF@?9F4?$AA@
	mov	eax, esi
	npad	3
$LL94@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN95@genrsa_mai
	test	dl, dl
	je	SHORT $LN96@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN95@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL94@genrsa_mai
$LN96@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN97@genrsa_mai
$LN95@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN97@genrsa_mai:
	test	eax, eax
	je	$LN21@genrsa_mai
	mov	ecx, OFFSET ??_C@_03HLJDBDGF@?9f4?$AA@
	mov	eax, esi
$LL98@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN99@genrsa_mai
	test	dl, dl
	je	SHORT $LN100@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN99@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL98@genrsa_mai
$LN100@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN101@genrsa_mai
$LN99@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN101@genrsa_mai:
	test	eax, eax
	je	$LN21@genrsa_mai
; Line 143
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, esi
$LL102@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN103@genrsa_mai
	test	dl, dl
	je	SHORT $LN104@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN103@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL102@genrsa_mai
$LN104@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN105@genrsa_mai
$LN103@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN105@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN22@genrsa_mai
; Line 144
	dec	edi
	cmp	edi, 1
	jl	$bad$162
; Line 146
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _engine$1$[esp+72], eax
; Line 147
	jmp	$LN49@genrsa_mai
$LN22@genrsa_mai:
; Line 149
	mov	ecx, OFFSET ??_C@_05LGFPCDPE@?9rand?$AA@
	mov	eax, esi
$LL106@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN107@genrsa_mai
	test	dl, dl
	je	SHORT $LN108@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN107@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL106@genrsa_mai
$LN108@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN109@genrsa_mai
$LN107@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN109@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN25@genrsa_mai
; Line 150
	dec	edi
	cmp	edi, 1
	jl	$bad$162
; Line 152
	mov	esi, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _inrand$1$[esp+72], esi
; Line 153
	jmp	$LN49@genrsa_mai
$LN25@genrsa_mai:
; Line 155
	mov	ecx, OFFSET ??_C@_04POMGKAPN@?9des?$AA@
	mov	eax, esi
	npad	6
$LL110@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN111@genrsa_mai
	test	dl, dl
	je	SHORT $LN112@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN111@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL110@genrsa_mai
$LN112@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN113@genrsa_mai
$LN111@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN113@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN28@genrsa_mai
; Line 156
	call	_EVP_des_cbc
	mov	ebp, eax
	jmp	$LN49@genrsa_mai
$LN28@genrsa_mai:
; Line 157
	mov	ecx, OFFSET ??_C@_05DHJJCNDB@?9des3?$AA@
	mov	eax, esi
	npad	4
$LL114@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN115@genrsa_mai
	test	dl, dl
	je	SHORT $LN116@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN115@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL114@genrsa_mai
$LN116@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN117@genrsa_mai
$LN115@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN117@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN30@genrsa_mai
; Line 158
	call	_EVP_des_ede3_cbc
	mov	ebp, eax
	jmp	$LN49@genrsa_mai
$LN30@genrsa_mai:
; Line 161
	mov	ecx, OFFSET ??_C@_05OHJDGOPB@?9idea?$AA@
	mov	eax, esi
	npad	4
$LL118@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN119@genrsa_mai
	test	dl, dl
	je	SHORT $LN120@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN119@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL118@genrsa_mai
$LN120@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN121@genrsa_mai
$LN119@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN121@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN32@genrsa_mai
; Line 162
	call	_EVP_idea_cbc
	mov	ebp, eax
	jmp	$LN49@genrsa_mai
$LN32@genrsa_mai:
; Line 165
	mov	ecx, OFFSET ??_C@_05IAIHCPC@?9seed?$AA@
	mov	eax, esi
	npad	4
$LL122@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN123@genrsa_mai
	test	dl, dl
	je	SHORT $LN124@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN123@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL122@genrsa_mai
$LN124@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN125@genrsa_mai
$LN123@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN125@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN34@genrsa_mai
; Line 166
	call	_EVP_seed_cbc
	mov	ebp, eax
	jmp	$LN49@genrsa_mai
$LN34@genrsa_mai:
; Line 169
	mov	ecx, OFFSET ??_C@_07ELMDAGHH@?9aes128?$AA@
	mov	eax, esi
	npad	4
$LL126@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN127@genrsa_mai
	test	dl, dl
	je	SHORT $LN128@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN127@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL126@genrsa_mai
$LN128@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN129@genrsa_mai
$LN127@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN129@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN36@genrsa_mai
; Line 170
	call	_EVP_aes_128_cbc
	mov	ebp, eax
	jmp	$LN49@genrsa_mai
$LN36@genrsa_mai:
; Line 171
	mov	ecx, OFFSET ??_C@_07LNHJABBM@?9aes192?$AA@
	mov	eax, esi
	npad	4
$LL130@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN131@genrsa_mai
	test	dl, dl
	je	SHORT $LN132@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN131@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL130@genrsa_mai
$LN132@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN133@genrsa_mai
$LN131@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN133@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN38@genrsa_mai
; Line 172
	call	_EVP_aes_192_cbc
	mov	ebp, eax
	jmp	$LN49@genrsa_mai
$LN38@genrsa_mai:
; Line 173
	mov	ecx, OFFSET ??_C@_07MCLKJCJC@?9aes256?$AA@
	mov	eax, esi
	npad	4
$LL134@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN135@genrsa_mai
	test	dl, dl
	je	SHORT $LN136@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN135@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL134@genrsa_mai
$LN136@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN137@genrsa_mai
$LN135@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN137@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN40@genrsa_mai
; Line 174
	call	_EVP_aes_256_cbc
	mov	ebp, eax
	jmp	$LN49@genrsa_mai
$LN40@genrsa_mai:
; Line 177
	mov	ecx, OFFSET ??_C@_0N@MALOKPBG@?9camellia128?$AA@
	mov	eax, esi
	npad	4
$LL138@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN139@genrsa_mai
	test	dl, dl
	je	SHORT $LN140@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN139@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL138@genrsa_mai
$LN140@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN141@genrsa_mai
$LN139@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN141@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN42@genrsa_mai
; Line 178
	call	_EVP_camellia_128_cbc
	mov	ebp, eax
	jmp	$LN49@genrsa_mai
$LN42@genrsa_mai:
; Line 179
	mov	ecx, OFFSET ??_C@_0N@DGAEKIHN@?9camellia192?$AA@
	mov	eax, esi
	npad	4
$LL142@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN143@genrsa_mai
	test	dl, dl
	je	SHORT $LN144@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN143@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL142@genrsa_mai
$LN144@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN145@genrsa_mai
$LN143@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN145@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN44@genrsa_mai
; Line 180
	call	_EVP_camellia_192_cbc
	mov	ebp, eax
	jmp	$LN49@genrsa_mai
$LN44@genrsa_mai:
; Line 181
	mov	ecx, OFFSET ??_C@_0N@EJMHDLPD@?9camellia256?$AA@
	mov	eax, esi
	npad	4
$LL146@genrsa_mai:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN147@genrsa_mai
	test	dl, dl
	je	SHORT $LN148@genrsa_mai
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN147@genrsa_mai
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL146@genrsa_mai
$LN148@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN149@genrsa_mai
$LN147@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN149@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN46@genrsa_mai
; Line 182
	call	_EVP_camellia_256_cbc
	mov	ebp, eax
	jmp	SHORT $LN49@genrsa_mai
$LN46@genrsa_mai:
; Line 184
	mov	eax, OFFSET ??_C@_08KCDBEMAI@?9passout?$AA@
$LL150@genrsa_mai:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN151@genrsa_mai
	test	cl, cl
	je	SHORT $LN152@genrsa_mai
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN151@genrsa_mai
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL150@genrsa_mai
$LN152@genrsa_mai:
	xor	eax, eax
	jmp	SHORT $LN153@genrsa_mai
$LN151@genrsa_mai:
	sbb	eax, eax
	or	eax, 1
$LN153@genrsa_mai:
	test	eax, eax
	jne	SHORT $LN48@genrsa_mai
; Line 185
	dec	edi
	cmp	edi, 1
	jl	SHORT $bad$162
; Line 187
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _passargout$1$[esp+72], eax
; Line 188
	jmp	SHORT $LN49@genrsa_mai
$LN21@genrsa_mai:
; Line 141
	mov	DWORD PTR _f4$1$[esp+72], 65537		; 00010001H
$LN49@genrsa_mai:
; Line 191
	dec	edi
	add	ebx, 4
	test	edi, edi
	jg	$LL2@genrsa_mai
$LN48@genrsa_mai:
; Line 193
	cmp	edi, 1
	jl	$LN51@genrsa_mai
	lea	eax, DWORD PTR _num$[esp+72]
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	push	DWORD PTR [ebx]
	call	_sscanf
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $bad$162
	cmp	DWORD PTR _num$[esp+72], 0
	jge	$LN51@genrsa_mai
$bad$162:
; Line 195
	push	OFFSET ??_C@_0CA@PMIDOJOM@usage?3?5genrsa?5?$FLargs?$FN?5?$FLnumbits?$FN?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 196
	push	OFFSET ??_C@_0EB@BBEPLNGO@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 198
	push	OFFSET ??_C@_0FD@KENFKNBF@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 201
	push	OFFSET ??_C@_0EC@JFDOGDEB@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5the?5gen@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 205
	push	OFFSET ??_C@_07KIGMBBIJ@?5?9seed?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 206
	push	OFFSET ??_C@_0DD@CIMEKKME@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 210
	push	OFFSET ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 211
	push	OFFSET ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 215
	push	OFFSET ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 216
	push	OFFSET ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 219
	push	OFFSET ??_C@_0CK@NEMOMECI@?5?9out?5file?5?5?5?5?5?5?5output?5the?5key?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 220
	push	OFFSET ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 222
	push	OFFSET ??_C@_0DD@PHOJIKJG@?5?9f4?5?5?5?5?5?5?5?5?5?5?5?5?5use?5F4?5?$CI0x10001@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 224
	push	OFFSET ??_C@_0CI@ECLHDDHL@?5?93?5?5?5?5?5?5?5?5?5?5?5?5?5?5use?53?5for?5the?5E@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 226
	push	OFFSET ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 229
	push	59					; 0000003bH
	push	59					; 0000003bH
	push	OFFSET ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 72					; 00000048H
; Line 231
	push	OFFSET ??_C@_0EF@IPNMFOEE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5load?5the?5file?5?$CI@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 233
	push	OFFSET ??_C@_0CO@HGDNDHEH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5the?5random?5numb@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN159@genrsa_mai:
; Line 241
	mov	edi, DWORD PTR _out$1$[esp+72]
$LN157@genrsa_mai:
	mov	ebx, 1
$err$161:
; Line 312
	push	DWORD PTR _bn$1$[esp+72]
	call	_BN_free
; Line 313
	mov	eax, DWORD PTR _rsa$1$[esp+76]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN64@genrsa_mai
; Line 314
	push	eax
	call	_RSA_free
	add	esp, 4
$LN64@genrsa_mai:
; Line 315
	test	edi, edi
	je	SHORT $LN65@genrsa_mai
; Line 316
	push	edi
	call	_BIO_free_all
	add	esp, 4
$LN65@genrsa_mai:
; Line 317
	mov	eax, DWORD PTR _passout$[esp+72]
	test	eax, eax
	je	SHORT $LN66@genrsa_mai
; Line 318
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN66@genrsa_mai:
; Line 319
	test	ebx, ebx
	je	SHORT $LN154@genrsa_mai
; Line 320
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN154@genrsa_mai:
; Line 322
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 323
	add	esp, 56					; 00000038H
	ret	0
$LN51@genrsa_mai:
; Line 237
	call	_ERR_load_crypto_strings
; Line 239
	lea	eax, DWORD PTR _passout$[esp+72]
	push	eax
	push	0
	push	DWORD PTR _passargout$1$[esp+80]
	push	0
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN53@genrsa_mai
; Line 240
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 241
	jmp	$LN159@genrsa_mai
$LN53@genrsa_mai:
; Line 244
	push	0
	push	DWORD PTR _engine$1$[esp+76]
	push	DWORD PTR _bio_err
	call	_setup_engine
; Line 247
	mov	ebx, DWORD PTR _outfile$1$[esp+84]
	add	esp, 12					; 0000000cH
	mov	esi, eax
	test	ebx, ebx
	jne	SHORT $LN54@genrsa_mai
; Line 248
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	mov	edi, DWORD PTR _out$1$[esp+76]
	push	eax
	push	ebx
	push	106					; 0000006aH
	push	edi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN56@genrsa_mai:
; Line 263
	push	1
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_load_file
	add	esp, 12					; 0000000cH
	test	eax, eax
	mov	eax, DWORD PTR _inrand$1$[esp+72]
	jne	SHORT $LN57@genrsa_mai
	test	eax, eax
	jne	SHORT $LN85@genrsa_mai
	call	_RAND_status
	test	eax, eax
	jne	SHORT $LN58@genrsa_mai
; Line 264
	push	OFFSET ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 267
	jmp	SHORT $LN58@genrsa_mai
$LN54@genrsa_mai:
; Line 256
	mov	edi, DWORD PTR _out$1$[esp+72]
	push	ebx
	push	5
	push	108					; 0000006cH
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN56@genrsa_mai
; Line 257
	push	ebx
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 258
	jmp	$LN157@genrsa_mai
$LN57@genrsa_mai:
; Line 267
	test	eax, eax
	je	SHORT $LN58@genrsa_mai
$LN85@genrsa_mai:
; Line 268
	push	eax
	call	_app_RAND_load_files
	push	eax
	push	OFFSET ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN58@genrsa_mai:
; Line 271
	push	DWORD PTR _num$[esp+72]
	push	OFFSET ??_C@_0DB@KBGJNLO@Generating?5RSA?5private?5key?0?5?$CFd?5b@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 276
	push	esi
	call	_RSA_new_method
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rsa$1$[esp+72], eax
; Line 278
	test	eax, eax
	je	$LN157@genrsa_mai
; Line 281
	push	DWORD PTR _f4$1$[esp+72]
	mov	esi, DWORD PTR _bn$1$[esp+76]
	push	esi
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	$LN157@genrsa_mai
	lea	eax, DWORD PTR _cb$[esp+72]
	push	eax
	push	esi
	push	DWORD PTR _num$[esp+80]
	mov	esi, DWORD PTR _rsa$1$[esp+84]
	push	esi
	call	_RSA_generate_key_ex
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN157@genrsa_mai
; Line 284
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_write_file
; Line 291
	mov	eax, DWORD PTR [esi+20]
	add	esp, 8
	xor	edx, edx
	mov	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	jle	SHORT $LN6@genrsa_mai
; Line 296
	mov	eax, DWORD PTR [eax]
$LL79@genrsa_mai:
	mov	edx, DWORD PTR [eax]
	lea	eax, DWORD PTR [eax+4]
	sub	ecx, 1
	jne	SHORT $LL79@genrsa_mai
$LN6@genrsa_mai:
; Line 298
	push	edx
	push	edx
	push	OFFSET ??_C@_0BC@MFKIOEF@e?5is?5?$CFld?5?$CI0x?$CFlX?$CJ?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 301
	mov	eax, DWORD PTR _passout$[esp+88]
	mov	DWORD PTR _cb_data$1[esp+88], eax
; Line 303
	lea	eax, DWORD PTR _cb_data$1[esp+88]
	push	eax
	push	OFFSET _password_callback
	push	0
	push	0
	push	ebp
	push	esi
	push	edi
	mov	DWORD PTR _cb_data$1[esp+120], ebx
	call	_PEM_write_bio_RSAPrivateKey
	xor	ecx, ecx
	add	esp, 44					; 0000002cH
	test	eax, eax
	mov	ebx, 1
	cmovne	ebx, ecx
	jmp	$err$161
_genrsa_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _genrsa_cb
_TEXT	SEGMENT
_c$ = 8							; size = 1
_p$ = 8							; size = 4
_n$ = 12						; size = 4
_cb$ = 16						; size = 4
_genrsa_cb PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\genrsa.c
; Line 329
	mov	ecx, DWORD PTR _p$[esp-4]
	mov	al, 42					; 0000002aH
	test	ecx, ecx
	jne	SHORT $LN2@genrsa_cb
; Line 330
	mov	BYTE PTR _c$[esp-4], 46			; 0000002eH
; Line 331
	jmp	SHORT $LN5@genrsa_cb
$LN2@genrsa_cb:
	cmp	ecx, 1
	jne	SHORT $LN3@genrsa_cb
; Line 332
	mov	BYTE PTR _c$[esp-4], 43			; 0000002bH
; Line 333
	jmp	SHORT $LN5@genrsa_cb
$LN3@genrsa_cb:
	cmp	ecx, 2
	jne	SHORT $LN4@genrsa_cb
; Line 334
	mov	BYTE PTR _c$[esp-4], 42			; 0000002aH
; Line 335
	jmp	SHORT $LN5@genrsa_cb
$LN4@genrsa_cb:
	cmp	ecx, 3
	movzx	eax, al
	mov	edx, 10					; 0000000aH
	cmove	eax, edx
	mov	BYTE PTR _c$[esp-4], al
$LN5@genrsa_cb:
; Line 337
	push	esi
	mov	esi, DWORD PTR _cb$[esp]
	lea	eax, DWORD PTR _c$[esp]
	push	1
	push	eax
	push	DWORD PTR [esi+4]
	call	_BIO_write
; Line 338
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR [esi+4]
	call	_BIO_ctrl
	add	esp, 28					; 0000001cH
; Line 342
	mov	eax, 1
	pop	esi
; Line 343
	ret	0
_genrsa_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sscanf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2268
	ret	0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2170
	ret	0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 91
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
; Line 92
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
END

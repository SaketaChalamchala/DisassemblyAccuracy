; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecs_vrf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ECDSA_do_verify
PUBLIC	_ECDSA_verify
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_ECDSA_SIG_new:PROC
EXTRN	_ECDSA_SIG_free:PROC
EXTRN	_i2d_ECDSA_SIG:PROC
EXTRN	_d2i_ECDSA_SIG:PROC
EXTRN	_ecdsa_check:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _ECDSA_verify
_TEXT	SEGMENT
_s$ = -8						; size = 4
_p$ = -4						; size = 4
_type$ = 8						; size = 4
_dgst$ = 12						; size = 4
_dgst_len$ = 16						; size = 4
_der$ = 20						; size = 4
_sigbuf$ = 20						; size = 4
_sig_len$ = 24						; size = 4
_eckey$ = 28						; size = 4
_ECDSA_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecs_vrf.c
; Line 88
	mov	eax, 8
	call	__chkstk
	push	ebp
	push	esi
; Line 90
	mov	esi, DWORD PTR _sigbuf$[esp+12]
; Line 93
	or	ebp, -1
	mov	DWORD PTR _p$[esp+16], esi
	mov	DWORD PTR _der$[esp+12], 0
; Line 95
	call	_ECDSA_SIG_new
	mov	DWORD PTR _s$[esp+16], eax
; Line 96
	test	eax, eax
	jne	SHORT $LN2@ECDSA_veri
; Line 97
	pop	esi
	or	eax, ebp
	pop	ebp
; Line 112
	add	esp, 8
	ret	0
$LN2@ECDSA_veri:
	push	ebx
; Line 98
	mov	ebx, DWORD PTR _sig_len$[esp+16]
	lea	eax, DWORD PTR _p$[esp+20]
	push	ebx
	push	eax
	lea	eax, DWORD PTR _s$[esp+28]
	push	eax
	call	_d2i_ECDSA_SIG
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN6@ECDSA_veri
; Line 101
	push	edi
	lea	eax, DWORD PTR _der$[esp+20]
	push	eax
	push	DWORD PTR _s$[esp+28]
	call	_i2d_ECDSA_SIG
	mov	edi, eax
	add	esp, 8
; Line 102
	cmp	edi, ebx
	jne	SHORT $err$18
	mov	ecx, DWORD PTR _der$[esp+20]
	mov	edx, edi
	sub	edx, 4
	jb	SHORT $LN13@ECDSA_veri
$LL14@ECDSA_veri:
	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN12@ECDSA_veri
	add	esi, 4
	add	ecx, 4
	sub	edx, 4
	jae	SHORT $LL14@ECDSA_veri
$LN13@ECDSA_veri:
	cmp	edx, -4					; fffffffcH
	je	SHORT $LN11@ECDSA_veri
$LN12@ECDSA_veri:
	mov	al, BYTE PTR [esi]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $err$18
	cmp	edx, -3					; fffffffdH
	je	SHORT $LN11@ECDSA_veri
	mov	al, BYTE PTR [esi+1]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $err$18
	cmp	edx, -2					; fffffffeH
	je	SHORT $LN11@ECDSA_veri
	mov	al, BYTE PTR [esi+2]
	cmp	al, BYTE PTR [ecx+2]
	jne	SHORT $err$18
	cmp	edx, -1
	je	SHORT $LN11@ECDSA_veri
	mov	al, BYTE PTR [esi+3]
	cmp	al, BYTE PTR [ecx+3]
	jne	SHORT $err$18
$LN11@ECDSA_veri:
; Line 74
	mov	esi, DWORD PTR _eckey$[esp+20]
; Line 104
	mov	ebx, DWORD PTR _s$[esp+24]
; Line 74
	push	esi
	call	_ecdsa_check
	add	esp, 4
; Line 75
	test	eax, eax
	jne	SHORT $LN9@ECDSA_veri
; Line 76
	xor	ebp, ebp
	jmp	SHORT $err$18
$LN9@ECDSA_veri:
; Line 77
	mov	eax, DWORD PTR [eax+12]
	push	esi
	push	ebx
	push	DWORD PTR _dgst_len$[esp+28]
	mov	eax, DWORD PTR [eax+12]
	push	DWORD PTR _dgst$[esp+32]
	call	eax
	add	esp, 16					; 00000010H
	mov	ebp, eax
$err$18:
; Line 106
	test	edi, edi
	jle	SHORT $LN16@ECDSA_veri
; Line 107
	push	edi
	push	DWORD PTR _der$[esp+24]
	call	_OPENSSL_cleanse
; Line 108
	push	DWORD PTR _der$[esp+28]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN16@ECDSA_veri:
	pop	edi
$LN6@ECDSA_veri:
; Line 110
	push	DWORD PTR _s$[esp+20]
	call	_ECDSA_SIG_free
	add	esp, 4
; Line 111
	mov	eax, ebp
	pop	ebx
	pop	esi
	pop	ebp
; Line 112
	add	esp, 8
	ret	0
_ECDSA_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ECDSA_do_verify
_TEXT	SEGMENT
_dgst$ = 8						; size = 4
_dgst_len$ = 12						; size = 4
_sig$ = 16						; size = 4
_eckey$ = 20						; size = 4
_ECDSA_do_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ecdsa\ecs_vrf.c
; Line 74
	push	DWORD PTR _eckey$[esp-4]
	call	_ecdsa_check
	add	esp, 4
; Line 75
	test	eax, eax
	jne	SHORT $LN2@ECDSA_do_v
; Line 78
	ret	0
$LN2@ECDSA_do_v:
; Line 77
	mov	eax, DWORD PTR [eax+12]
	mov	eax, DWORD PTR [eax+12]
	jmp	eax
_ECDSA_do_verify ENDP
_TEXT	ENDS
END

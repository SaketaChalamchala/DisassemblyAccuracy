; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_EVP_PKEY_sign_init
PUBLIC	_EVP_PKEY_sign
PUBLIC	_EVP_PKEY_verify_init
PUBLIC	_EVP_PKEY_verify
PUBLIC	_EVP_PKEY_verify_recover_init
PUBLIC	_EVP_PKEY_verify_recover
PUBLIC	_EVP_PKEY_encrypt_init
PUBLIC	_EVP_PKEY_encrypt
PUBLIC	_EVP_PKEY_decrypt_init
PUBLIC	_EVP_PKEY_decrypt
PUBLIC	_EVP_PKEY_derive_init
PUBLIC	_EVP_PKEY_derive_set_peer
PUBLIC	_EVP_PKEY_derive
PUBLIC	??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@ ; `string'
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_EVP_PKEY_size:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_PKEY_missing_parameters:PROC
EXTRN	_EVP_PKEY_cmp_parameters:PROC
;	COMDAT ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
CONST	SEGMENT
??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@ DB '.\crypto\evp\pme'
	DB	'th_fn.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_derive
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_key$ = 12						; size = 4
_pkeylen$ = 16						; size = 4
_EVP_PKEY_derive PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 334
	push	esi
; Line 335
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	$LN3@EVP_PKEY_d
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	$LN3@EVP_PKEY_d
	cmp	DWORD PTR [eax+96], 0
	je	$LN3@EVP_PKEY_d
; Line 340
	cmp	DWORD PTR [esi+16], 1024		; 00000400H
	je	SHORT $LN4@EVP_PKEY_d
; Line 341
	push	341					; 00000155H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	151					; 00000097H
	push	153					; 00000099H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 342
	or	eax, -1
	pop	esi
; Line 346
	ret	0
$LN4@EVP_PKEY_d:
; Line 344
	test	BYTE PTR [eax+4], 2
	push	edi
	mov	edi, DWORD PTR _pkeylen$[esp+4]
	je	SHORT $LN8@EVP_PKEY_d
	push	DWORD PTR [esi+8]
	call	_EVP_PKEY_size
	add	esp, 4
	cmp	DWORD PTR _key$[esp+4], 0
	jne	SHORT $LN6@EVP_PKEY_d
	mov	ecx, edi
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
	mov	eax, 1
; Line 346
	ret	0
$LN6@EVP_PKEY_d:
; Line 344
	cmp	DWORD PTR [edi], eax
	jae	SHORT $LN8@EVP_PKEY_d
	push	344					; 00000158H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	155					; 0000009bH
	push	153					; 00000099H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
; Line 346
	ret	0
$LN8@EVP_PKEY_d:
; Line 345
	mov	eax, DWORD PTR [esi]
	push	edi
	push	DWORD PTR _key$[esp+8]
	mov	eax, DWORD PTR [eax+96]
	push	esi
	call	eax
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
; Line 346
	ret	0
$LN3@EVP_PKEY_d:
; Line 336
	push	337					; 00000151H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	153					; 00000099H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 338
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 346
	ret	0
_EVP_PKEY_derive ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_derive_set_peer
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_peer$ = 12						; size = 4
_EVP_PKEY_derive_set_peer PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 270
	push	esi
; Line 274
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	$LN3@EVP_PKEY_d
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	$LN3@EVP_PKEY_d
	cmp	DWORD PTR [eax+96], 0
	jne	SHORT $LN4@EVP_PKEY_d
	cmp	DWORD PTR [eax+80], 0
	jne	SHORT $LN4@EVP_PKEY_d
	cmp	DWORD PTR [eax+88], 0
	je	$LN3@EVP_PKEY_d
$LN4@EVP_PKEY_d:
	mov	ecx, DWORD PTR [eax+100]
	test	ecx, ecx
	je	$LN3@EVP_PKEY_d
; Line 281
	mov	eax, DWORD PTR [esi+16]
	cmp	eax, 1024				; 00000400H
	je	SHORT $LN5@EVP_PKEY_d
	cmp	eax, 256				; 00000100H
	je	SHORT $LN5@EVP_PKEY_d
	cmp	eax, 512				; 00000200H
	je	SHORT $LN5@EVP_PKEY_d
; Line 282
	push	283					; 0000011bH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	151					; 00000097H
	push	155					; 0000009bH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 284
	or	eax, -1
	pop	esi
; Line 331
	ret	0
$LN5@EVP_PKEY_d:
	push	edi
; Line 287
	mov	edi, DWORD PTR _peer$[esp+4]
	push	edi
	push	0
	push	2
	push	esi
	call	ecx
	add	esp, 16					; 00000010H
; Line 289
	test	eax, eax
	jle	SHORT $LN14@EVP_PKEY_d
; Line 292
	cmp	eax, 2
	je	$LN15@EVP_PKEY_d
; Line 295
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	jne	SHORT $LN8@EVP_PKEY_d
; Line 296
	push	296					; 00000128H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	154					; 0000009aH
; Line 297
	jmp	SHORT $LN16@EVP_PKEY_d
$LN8@EVP_PKEY_d:
; Line 300
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN9@EVP_PKEY_d
; Line 301
	push	301					; 0000012dH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	101					; 00000065H
; Line 302
	jmp	SHORT $LN16@EVP_PKEY_d
$LN9@EVP_PKEY_d:
; Line 312
	push	edi
	call	_EVP_PKEY_missing_parameters
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN10@EVP_PKEY_d
	push	edi
	push	DWORD PTR [esi+8]
	call	_EVP_PKEY_cmp_parameters
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@EVP_PKEY_d
; Line 314
	push	314					; 0000013aH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	153					; 00000099H
$LN16@EVP_PKEY_d:
	push	155					; 0000009bH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 315
	or	eax, -1
$LN14@EVP_PKEY_d:
	pop	edi
	pop	esi
; Line 331
	ret	0
$LN10@EVP_PKEY_d:
; Line 318
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN11@EVP_PKEY_d
; Line 319
	push	eax
	call	_EVP_PKEY_free
	add	esp, 4
$LN11@EVP_PKEY_d:
; Line 322
	mov	eax, DWORD PTR [esi]
	push	edi
	push	1
	mov	DWORD PTR [esi+12], edi
	mov	eax, DWORD PTR [eax+100]
	push	2
	push	esi
	call	eax
	add	esp, 16					; 00000010H
; Line 324
	test	eax, eax
	jg	SHORT $LN12@EVP_PKEY_d
; Line 325
	pop	edi
	mov	DWORD PTR [esi+12], 0
	pop	esi
; Line 331
	ret	0
$LN12@EVP_PKEY_d:
; Line 329
	push	329					; 00000149H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	10					; 0000000aH
	lea	eax, DWORD PTR [edi+8]
	push	1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
$LN15@EVP_PKEY_d:
; Line 330
	pop	edi
	mov	eax, 1
	pop	esi
; Line 331
	ret	0
$LN3@EVP_PKEY_d:
; Line 275
	push	276					; 00000114H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	155					; 0000009bH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 277
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 331
	ret	0
_EVP_PKEY_derive_set_peer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_derive_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_EVP_PKEY_derive_init PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 253
	push	esi
; Line 255
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	SHORT $LN3@EVP_PKEY_d
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_d
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN3@EVP_PKEY_d
; Line 260
	mov	DWORD PTR [esi+16], 1024		; 00000400H
; Line 261
	mov	eax, DWORD PTR [eax+92]
	test	eax, eax
	jne	SHORT $LN4@EVP_PKEY_d
; Line 262
	mov	eax, 1
	pop	esi
; Line 267
	ret	0
$LN4@EVP_PKEY_d:
; Line 263
	push	esi
	call	eax
	add	esp, 4
; Line 264
	test	eax, eax
	jg	SHORT $LN1@EVP_PKEY_d
; Line 265
	mov	DWORD PTR [esi+16], 0
	pop	esi
; Line 267
	ret	0
$LN3@EVP_PKEY_d:
; Line 256
	push	257					; 00000101H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	154					; 0000009aH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 258
	mov	eax, -2					; fffffffeH
$LN1@EVP_PKEY_d:
	pop	esi
; Line 267
	ret	0
_EVP_PKEY_derive_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_decrypt
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_outlen$ = 16						; size = 4
_in$ = 20						; size = 4
_inlen$ = 24						; size = 4
_EVP_PKEY_decrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 238
	push	esi
; Line 239
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	$LN3@EVP_PKEY_d
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	$LN3@EVP_PKEY_d
	cmp	DWORD PTR [eax+88], 0
	je	$LN3@EVP_PKEY_d
; Line 244
	cmp	DWORD PTR [esi+16], 512			; 00000200H
	je	SHORT $LN4@EVP_PKEY_d
; Line 245
	push	245					; 000000f5H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	151					; 00000097H
	push	104					; 00000068H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 246
	or	eax, -1
	pop	esi
; Line 250
	ret	0
$LN4@EVP_PKEY_d:
; Line 248
	test	BYTE PTR [eax+4], 2
	push	edi
	mov	edi, DWORD PTR _outlen$[esp+4]
	je	SHORT $LN8@EVP_PKEY_d
	push	DWORD PTR [esi+8]
	call	_EVP_PKEY_size
	add	esp, 4
	cmp	DWORD PTR _out$[esp+4], 0
	jne	SHORT $LN6@EVP_PKEY_d
	mov	ecx, edi
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
	mov	eax, 1
; Line 250
	ret	0
$LN6@EVP_PKEY_d:
; Line 248
	cmp	DWORD PTR [edi], eax
	jae	SHORT $LN8@EVP_PKEY_d
	push	248					; 000000f8H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	155					; 0000009bH
	push	104					; 00000068H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
; Line 250
	ret	0
$LN8@EVP_PKEY_d:
; Line 249
	push	DWORD PTR _inlen$[esp+4]
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR _in$[esp+8]
	push	edi
	push	DWORD PTR _out$[esp+16]
	mov	eax, DWORD PTR [eax+88]
	push	esi
	call	eax
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
; Line 250
	ret	0
$LN3@EVP_PKEY_d:
; Line 240
	push	241					; 000000f1H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	104					; 00000068H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 242
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 250
	ret	0
_EVP_PKEY_decrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_decrypt_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_EVP_PKEY_decrypt_init PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 219
	push	esi
; Line 221
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	SHORT $LN3@EVP_PKEY_d
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_d
	cmp	DWORD PTR [eax+88], 0
	je	SHORT $LN3@EVP_PKEY_d
; Line 226
	mov	DWORD PTR [esi+16], 512			; 00000200H
; Line 227
	mov	eax, DWORD PTR [eax+84]
	test	eax, eax
	jne	SHORT $LN4@EVP_PKEY_d
; Line 228
	mov	eax, 1
	pop	esi
; Line 233
	ret	0
$LN4@EVP_PKEY_d:
; Line 229
	push	esi
	call	eax
	add	esp, 4
; Line 230
	test	eax, eax
	jg	SHORT $LN1@EVP_PKEY_d
; Line 231
	mov	DWORD PTR [esi+16], 0
	pop	esi
; Line 233
	ret	0
$LN3@EVP_PKEY_d:
; Line 222
	push	223					; 000000dfH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	138					; 0000008aH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 224
	mov	eax, -2					; fffffffeH
$LN1@EVP_PKEY_d:
	pop	esi
; Line 233
	ret	0
_EVP_PKEY_decrypt_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_encrypt
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_outlen$ = 16						; size = 4
_in$ = 20						; size = 4
_inlen$ = 24						; size = 4
_EVP_PKEY_encrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 204
	push	esi
; Line 205
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	$LN3@EVP_PKEY_e
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	$LN3@EVP_PKEY_e
	cmp	DWORD PTR [eax+80], 0
	je	$LN3@EVP_PKEY_e
; Line 210
	cmp	DWORD PTR [esi+16], 256			; 00000100H
	je	SHORT $LN4@EVP_PKEY_e
; Line 211
	push	211					; 000000d3H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	151					; 00000097H
	push	105					; 00000069H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 212
	or	eax, -1
	pop	esi
; Line 216
	ret	0
$LN4@EVP_PKEY_e:
; Line 214
	test	BYTE PTR [eax+4], 2
	push	edi
	mov	edi, DWORD PTR _outlen$[esp+4]
	je	SHORT $LN8@EVP_PKEY_e
	push	DWORD PTR [esi+8]
	call	_EVP_PKEY_size
	add	esp, 4
	cmp	DWORD PTR _out$[esp+4], 0
	jne	SHORT $LN6@EVP_PKEY_e
	mov	ecx, edi
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
	mov	eax, 1
; Line 216
	ret	0
$LN6@EVP_PKEY_e:
; Line 214
	cmp	DWORD PTR [edi], eax
	jae	SHORT $LN8@EVP_PKEY_e
	push	214					; 000000d6H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	155					; 0000009bH
	push	105					; 00000069H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
; Line 216
	ret	0
$LN8@EVP_PKEY_e:
; Line 215
	push	DWORD PTR _inlen$[esp+4]
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR _in$[esp+8]
	push	edi
	push	DWORD PTR _out$[esp+16]
	mov	eax, DWORD PTR [eax+80]
	push	esi
	call	eax
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
; Line 216
	ret	0
$LN3@EVP_PKEY_e:
; Line 206
	push	207					; 000000cfH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	105					; 00000069H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 208
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 216
	ret	0
_EVP_PKEY_encrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_encrypt_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_EVP_PKEY_encrypt_init PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 185
	push	esi
; Line 187
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	SHORT $LN3@EVP_PKEY_e
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_e
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN3@EVP_PKEY_e
; Line 192
	mov	DWORD PTR [esi+16], 256			; 00000100H
; Line 193
	mov	eax, DWORD PTR [eax+76]
	test	eax, eax
	jne	SHORT $LN4@EVP_PKEY_e
; Line 194
	mov	eax, 1
	pop	esi
; Line 199
	ret	0
$LN4@EVP_PKEY_e:
; Line 195
	push	esi
	call	eax
	add	esp, 4
; Line 196
	test	eax, eax
	jg	SHORT $LN1@EVP_PKEY_e
; Line 197
	mov	DWORD PTR [esi+16], 0
	pop	esi
; Line 199
	ret	0
$LN3@EVP_PKEY_e:
; Line 188
	push	189					; 000000bdH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	139					; 0000008bH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 190
	mov	eax, -2					; fffffffeH
$LN1@EVP_PKEY_e:
	pop	esi
; Line 199
	ret	0
_EVP_PKEY_encrypt_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_verify_recover
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_rout$ = 12						; size = 4
_routlen$ = 16						; size = 4
_sig$ = 20						; size = 4
_siglen$ = 24						; size = 4
_EVP_PKEY_verify_recover PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 170
	push	esi
; Line 171
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	$LN3@EVP_PKEY_v
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	$LN3@EVP_PKEY_v
	cmp	DWORD PTR [eax+56], 0
	je	$LN3@EVP_PKEY_v
; Line 176
	cmp	DWORD PTR [esi+16], 32			; 00000020H
	je	SHORT $LN4@EVP_PKEY_v
; Line 177
	push	177					; 000000b1H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	151					; 00000097H
	push	144					; 00000090H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 178
	or	eax, -1
	pop	esi
; Line 182
	ret	0
$LN4@EVP_PKEY_v:
; Line 180
	test	BYTE PTR [eax+4], 2
	push	edi
	mov	edi, DWORD PTR _routlen$[esp+4]
	je	SHORT $LN8@EVP_PKEY_v
	push	DWORD PTR [esi+8]
	call	_EVP_PKEY_size
	add	esp, 4
	cmp	DWORD PTR _rout$[esp+4], 0
	jne	SHORT $LN6@EVP_PKEY_v
	mov	ecx, edi
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
	mov	eax, 1
; Line 182
	ret	0
$LN6@EVP_PKEY_v:
; Line 180
	cmp	DWORD PTR [edi], eax
	jae	SHORT $LN8@EVP_PKEY_v
	push	180					; 000000b4H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	155					; 0000009bH
	push	144					; 00000090H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
; Line 182
	ret	0
$LN8@EVP_PKEY_v:
; Line 181
	push	DWORD PTR _siglen$[esp+4]
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR _sig$[esp+8]
	push	edi
	push	DWORD PTR _rout$[esp+16]
	mov	eax, DWORD PTR [eax+56]
	push	esi
	call	eax
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
; Line 182
	ret	0
$LN3@EVP_PKEY_v:
; Line 172
	push	173					; 000000adH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	144					; 00000090H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 174
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 182
	ret	0
_EVP_PKEY_verify_recover ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_verify_recover_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_EVP_PKEY_verify_recover_init PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 151
	push	esi
; Line 153
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	SHORT $LN3@EVP_PKEY_v
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_v
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN3@EVP_PKEY_v
; Line 158
	mov	DWORD PTR [esi+16], 32			; 00000020H
; Line 159
	mov	eax, DWORD PTR [eax+52]
	test	eax, eax
	jne	SHORT $LN4@EVP_PKEY_v
; Line 160
	mov	eax, 1
	pop	esi
; Line 165
	ret	0
$LN4@EVP_PKEY_v:
; Line 161
	push	esi
	call	eax
	add	esp, 4
; Line 162
	test	eax, eax
	jg	SHORT $LN1@EVP_PKEY_v
; Line 163
	mov	DWORD PTR [esi+16], 0
	pop	esi
; Line 165
	ret	0
$LN3@EVP_PKEY_v:
; Line 154
	push	155					; 0000009bH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	145					; 00000091H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 156
	mov	eax, -2					; fffffffeH
$LN1@EVP_PKEY_v:
	pop	esi
; Line 165
	ret	0
_EVP_PKEY_verify_recover_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_verify
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sig$ = 12						; size = 4
_siglen$ = 16						; size = 4
_tbs$ = 20						; size = 4
_tbslen$ = 24						; size = 4
_EVP_PKEY_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 138
	mov	eax, DWORD PTR _ctx$[esp-4]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_v
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@EVP_PKEY_v
	mov	ecx, DWORD PTR [ecx+48]
	test	ecx, ecx
	je	SHORT $LN3@EVP_PKEY_v
; Line 143
	cmp	DWORD PTR [eax+16], 16			; 00000010H
	je	SHORT $LN4@EVP_PKEY_v
; Line 144
	push	144					; 00000090H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	151					; 00000097H
	push	142					; 0000008eH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 145
	or	eax, -1
; Line 148
	ret	0
$LN4@EVP_PKEY_v:
; Line 147
	mov	DWORD PTR _ctx$[esp-4], eax
	jmp	ecx
$LN3@EVP_PKEY_v:
; Line 139
	push	140					; 0000008cH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	142					; 0000008eH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 141
	mov	eax, -2					; fffffffeH
; Line 148
	ret	0
_EVP_PKEY_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_verify_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_EVP_PKEY_verify_init PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 118
	push	esi
; Line 120
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	SHORT $LN3@EVP_PKEY_v
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_v
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN3@EVP_PKEY_v
; Line 125
	mov	DWORD PTR [esi+16], 16			; 00000010H
; Line 126
	mov	eax, DWORD PTR [eax+44]
	test	eax, eax
	jne	SHORT $LN4@EVP_PKEY_v
; Line 127
	mov	eax, 1
	pop	esi
; Line 132
	ret	0
$LN4@EVP_PKEY_v:
; Line 128
	push	esi
	call	eax
	add	esp, 4
; Line 129
	test	eax, eax
	jg	SHORT $LN1@EVP_PKEY_v
; Line 130
	mov	DWORD PTR [esi+16], 0
	pop	esi
; Line 132
	ret	0
$LN3@EVP_PKEY_v:
; Line 121
	push	122					; 0000007aH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	143					; 0000008fH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 123
	mov	eax, -2					; fffffffeH
$LN1@EVP_PKEY_v:
	pop	esi
; Line 132
	ret	0
_EVP_PKEY_verify_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_sign
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sig$ = 12						; size = 4
_siglen$ = 16						; size = 4
_tbs$ = 20						; size = 4
_tbslen$ = 24						; size = 4
_EVP_PKEY_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 103
	push	esi
; Line 104
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	$LN3@EVP_PKEY_s
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	$LN3@EVP_PKEY_s
	cmp	DWORD PTR [eax+40], 0
	je	$LN3@EVP_PKEY_s
; Line 109
	cmp	DWORD PTR [esi+16], 8
	je	SHORT $LN4@EVP_PKEY_s
; Line 110
	push	110					; 0000006eH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	151					; 00000097H
	push	140					; 0000008cH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 111
	or	eax, -1
	pop	esi
; Line 115
	ret	0
$LN4@EVP_PKEY_s:
; Line 113
	test	BYTE PTR [eax+4], 2
	push	edi
	mov	edi, DWORD PTR _siglen$[esp+4]
	je	SHORT $LN8@EVP_PKEY_s
	push	DWORD PTR [esi+8]
	call	_EVP_PKEY_size
	add	esp, 4
	cmp	DWORD PTR _sig$[esp+4], 0
	jne	SHORT $LN6@EVP_PKEY_s
	mov	ecx, edi
	pop	edi
	pop	esi
	mov	DWORD PTR [ecx], eax
	mov	eax, 1
; Line 115
	ret	0
$LN6@EVP_PKEY_s:
; Line 113
	cmp	DWORD PTR [edi], eax
	jae	SHORT $LN8@EVP_PKEY_s
	push	113					; 00000071H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	155					; 0000009bH
	push	140					; 0000008cH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
; Line 115
	ret	0
$LN8@EVP_PKEY_s:
; Line 114
	push	DWORD PTR _tbslen$[esp+4]
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR _tbs$[esp+8]
	push	edi
	push	DWORD PTR _sig$[esp+16]
	mov	eax, DWORD PTR [eax+40]
	push	esi
	call	eax
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
; Line 115
	ret	0
$LN3@EVP_PKEY_s:
; Line 105
	push	106					; 0000006aH
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	140					; 0000008cH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 107
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 115
	ret	0
_EVP_PKEY_sign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_PKEY_sign_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_EVP_PKEY_sign_init PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\pmeth_fn.c
; Line 84
	push	esi
; Line 86
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	SHORT $LN3@EVP_PKEY_s
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@EVP_PKEY_s
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN3@EVP_PKEY_s
; Line 91
	mov	DWORD PTR [esi+16], 8
; Line 92
	mov	eax, DWORD PTR [eax+36]
	test	eax, eax
	jne	SHORT $LN4@EVP_PKEY_s
; Line 93
	mov	eax, 1
	pop	esi
; Line 98
	ret	0
$LN4@EVP_PKEY_s:
; Line 94
	push	esi
	call	eax
	add	esp, 4
; Line 95
	test	eax, eax
	jg	SHORT $LN1@EVP_PKEY_s
; Line 96
	mov	DWORD PTR [esi+16], 0
	pop	esi
; Line 98
	ret	0
$LN3@EVP_PKEY_s:
; Line 87
	push	88					; 00000058H
	push	OFFSET ??_C@_0BI@NEAEJDGO@?4?2crypto?2evp?2pmeth_fn?4c?$AA@
	push	150					; 00000096H
	push	141					; 0000008dH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 89
	mov	eax, -2					; fffffffeH
$LN1@EVP_PKEY_s:
	pop	esi
; Line 98
	ret	0
_EVP_PKEY_sign_init ENDP
_TEXT	ENDS
END

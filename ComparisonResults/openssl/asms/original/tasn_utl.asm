; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_asn1_get_choice_selector
PUBLIC	_asn1_set_choice_selector
PUBLIC	_asn1_get_field_ptr
PUBLIC	_asn1_do_adb
PUBLIC	_asn1_do_lock
PUBLIC	_asn1_enc_init
PUBLIC	_asn1_enc_free
PUBLIC	_asn1_enc_restore
PUBLIC	_asn1_enc_save
PUBLIC	??_C@_0BJ@GCGGIIFI@?4?2crypto?2asn1?2tasn_utl?4c?$AA@ ; `string'
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ASN1_INTEGER_get:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0BJ@GCGGIIFI@?4?2crypto?2asn1?2tasn_utl?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@GCGGIIFI@?4?2crypto?2asn1?2tasn_utl?4c?$AA@ DB '.\crypto\asn1\t'
	DB	'asn_utl.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_get_enc_ptr
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_asn1_get_enc_ptr PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
; Line 132
	mov	eax, DWORD PTR _pval$[esp-4]
	test	eax, eax
	je	SHORT $LN3@asn1_get_e
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@asn1_get_e
; Line 134
	mov	eax, DWORD PTR _it$[esp-4]
	mov	eax, DWORD PTR [eax+16]
; Line 135
	test	eax, eax
	je	SHORT $LN3@asn1_get_e
	test	BYTE PTR [eax+4], 2
	je	SHORT $LN3@asn1_get_e
; Line 137
	mov	eax, DWORD PTR [eax+20]
	add	eax, ecx
; Line 138
	ret	0
$LN3@asn1_get_e:
; Line 133
	xor	eax, eax
; Line 138
	ret	0
_asn1_get_enc_ptr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_enc_save
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_in$ = 12						; size = 4
_inlen$ = 16						; size = 4
_it$ = 20						; size = 4
_asn1_enc_save PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
; Line 132
	mov	eax, DWORD PTR _pval$[esp-4]
	push	esi
	test	eax, eax
	je	SHORT $LN12@asn1_enc_s
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN12@asn1_enc_s
; Line 134
	mov	eax, DWORD PTR _it$[esp]
	mov	esi, DWORD PTR [eax+16]
; Line 135
	test	esi, esi
	je	SHORT $LN12@asn1_enc_s
	test	BYTE PTR [esi+4], 2
	je	SHORT $LN12@asn1_enc_s
; Line 137
	mov	esi, DWORD PTR [esi+20]
	add	esi, ecx
; Line 169
	je	SHORT $LN12@asn1_enc_s
; Line 172
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@asn1_enc_s
; Line 173
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@asn1_enc_s:
; Line 174
	push	edi
	mov	edi, DWORD PTR _inlen$[esp+4]
	push	174					; 000000aeH
	push	OFFSET ??_C@_0BJ@GCGGIIFI@?4?2crypto?2asn1?2tasn_utl?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi], eax
; Line 175
	test	eax, eax
	jne	SHORT $LN4@asn1_enc_s
	pop	edi
	pop	esi
; Line 182
	ret	0
$LN4@asn1_enc_s:
; Line 177
	push	edi
	push	DWORD PTR _in$[esp+8]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 178
	mov	DWORD PTR [esi+4], edi
; Line 179
	mov	DWORD PTR [esi+8], 0
; Line 181
	mov	eax, 1
	pop	edi
	pop	esi
; Line 182
	ret	0
$LN12@asn1_enc_s:
; Line 170
	mov	eax, 1
	pop	esi
; Line 182
	ret	0
_asn1_enc_save ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_enc_restore
_TEXT	SEGMENT
_len$ = 8						; size = 4
_out$ = 12						; size = 4
_pval$ = 16						; size = 4
_it$ = 20						; size = 4
_asn1_enc_restore PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
; Line 132
	mov	eax, DWORD PTR _pval$[esp-4]
	push	esi
	test	eax, eax
	je	SHORT $LN3@asn1_enc_r
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@asn1_enc_r
; Line 134
	mov	eax, DWORD PTR _it$[esp]
	mov	esi, DWORD PTR [eax+16]
; Line 135
	test	esi, esi
	je	SHORT $LN3@asn1_enc_r
	test	BYTE PTR [esi+4], 2
	je	SHORT $LN3@asn1_enc_r
; Line 137
	mov	esi, DWORD PTR [esi+20]
	add	esi, ecx
; Line 189
	je	SHORT $LN3@asn1_enc_r
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN3@asn1_enc_r
; Line 191
	push	edi
	mov	edi, DWORD PTR _out$[esp+4]
	test	edi, edi
	je	SHORT $LN4@asn1_enc_r
; Line 192
	push	DWORD PTR [esi+4]
	push	DWORD PTR [esi]
	push	DWORD PTR [edi]
	call	_memcpy
; Line 193
	mov	eax, DWORD PTR [esi+4]
	add	esp, 12					; 0000000cH
	add	DWORD PTR [edi], eax
$LN4@asn1_enc_r:
; Line 195
	mov	ecx, DWORD PTR _len$[esp+4]
	pop	edi
	test	ecx, ecx
	je	SHORT $LN5@asn1_enc_r
; Line 196
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx], eax
$LN5@asn1_enc_r:
; Line 197
	mov	eax, 1
	pop	esi
; Line 198
	ret	0
$LN3@asn1_enc_r:
; Line 190
	xor	eax, eax
	pop	esi
; Line 198
	ret	0
_asn1_enc_restore ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_enc_free
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_asn1_enc_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
; Line 132
	mov	eax, DWORD PTR _pval$[esp-4]
	test	eax, eax
	je	SHORT $LN2@asn1_enc_f
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@asn1_enc_f
; Line 134
	mov	eax, DWORD PTR _it$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax+16]
; Line 135
	test	esi, esi
	je	SHORT $LN11@asn1_enc_f
	test	BYTE PTR [esi+4], 2
	je	SHORT $LN11@asn1_enc_f
; Line 137
	mov	esi, DWORD PTR [esi+20]
	add	esi, ecx
; Line 155
	je	SHORT $LN11@asn1_enc_f
; Line 156
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@asn1_enc_f
; Line 157
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@asn1_enc_f:
; Line 158
	mov	DWORD PTR [esi], 0
; Line 159
	mov	DWORD PTR [esi+4], 0
; Line 160
	mov	DWORD PTR [esi+8], 1
$LN11@asn1_enc_f:
	pop	esi
$LN2@asn1_enc_f:
; Line 162
	ret	0
_asn1_enc_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_enc_init
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_asn1_enc_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
; Line 132
	mov	eax, DWORD PTR _pval$[esp-4]
	test	eax, eax
	je	SHORT $LN2@asn1_enc_i
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@asn1_enc_i
; Line 134
	mov	eax, DWORD PTR _it$[esp-4]
	mov	eax, DWORD PTR [eax+16]
; Line 135
	test	eax, eax
	je	SHORT $LN2@asn1_enc_i
	test	BYTE PTR [eax+4], 2
	je	SHORT $LN2@asn1_enc_i
; Line 137
	mov	eax, DWORD PTR [eax+20]
	add	eax, ecx
; Line 144
	je	SHORT $LN2@asn1_enc_i
; Line 145
	mov	DWORD PTR [eax], 0
; Line 146
	mov	DWORD PTR [eax+4], 0
; Line 147
	mov	DWORD PTR [eax+8], 1
$LN2@asn1_enc_i:
; Line 149
	ret	0
_asn1_enc_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_do_lock
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_op$ = 12						; size = 4
_it$ = 16						; size = 4
_asn1_do_lock PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
; Line 108
	mov	ecx, DWORD PTR _it$[esp-4]
	mov	al, BYTE PTR [ecx]
	cmp	al, 1
	je	SHORT $LN2@asn1_do_lo
	cmp	al, 6
	jne	SHORT $LN4@asn1_do_lo
$LN2@asn1_do_lo:
; Line 110
	mov	ecx, DWORD PTR [ecx+16]
; Line 111
	test	ecx, ecx
	je	SHORT $LN4@asn1_do_lo
	test	BYTE PTR [ecx+4], 1
	je	SHORT $LN4@asn1_do_lo
; Line 113
	mov	eax, DWORD PTR _pval$[esp-4]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, DWORD PTR [eax]
; Line 114
	mov	eax, DWORD PTR _op$[esp-4]
	test	eax, eax
	jne	SHORT $LN5@asn1_do_lo
; Line 115
	mov	DWORD PTR [edx], 1
; Line 116
	mov	eax, 1
; Line 127
	ret	0
$LN5@asn1_do_lo:
; Line 118
	push	118					; 00000076H
	push	OFFSET ??_C@_0BJ@GCGGIIFI@?4?2crypto?2asn1?2tasn_utl?4c?$AA@
	push	DWORD PTR [ecx+12]
	push	eax
	push	edx
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 127
	ret	0
$LN4@asn1_do_lo:
; Line 112
	xor	eax, eax
; Line 127
	ret	0
_asn1_do_lock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_do_adb
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_tt$ = 12						; size = 4
_nullerr$ = 16						; size = 4
_asn1_do_adb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
; Line 221
	push	esi
; Line 227
	mov	esi, DWORD PTR _tt$[esp]
	test	DWORD PTR [esi], 768			; 00000300H
	jne	SHORT $LN5@asn1_do_ad
; Line 228
	mov	eax, esi
	pop	esi
; Line 275
	ret	0
$LN5@asn1_do_ad:
; Line 231
	mov	eax, DWORD PTR [esi+16]
	push	edi
	call	eax
; Line 234
	mov	ecx, DWORD PTR _pval$[esp+4]
	mov	edi, eax
	mov	eax, DWORD PTR [edi+4]
	add	eax, DWORD PTR [ecx]
; Line 237
	jne	SHORT $LN6@asn1_do_ad
; Line 238
	mov	eax, DWORD PTR [edi+24]
	test	eax, eax
	je	SHORT $err$22
	pop	edi
	pop	esi
; Line 275
	ret	0
$LN6@asn1_do_ad:
; Line 247
	test	DWORD PTR [esi], 256			; 00000100H
; Line 248
	push	DWORD PTR [eax]
	je	SHORT $LN8@asn1_do_ad
	call	_OBJ_obj2nid
	jmp	SHORT $LN20@asn1_do_ad
$LN8@asn1_do_ad:
; Line 250
	call	_ASN1_INTEGER_get
$LN20@asn1_do_ad:
	mov	edx, DWORD PTR [edi+16]
	add	esp, 4
; Line 259
	xor	ecx, ecx
	mov	esi, eax
	mov	eax, DWORD PTR [edi+12]
	test	edx, edx
	jle	SHORT $LN3@asn1_do_ad
$LL4@asn1_do_ad:
; Line 260
	cmp	DWORD PTR [eax], esi
	je	SHORT $LN15@asn1_do_ad
; Line 259
	inc	ecx
	add	eax, 24					; 00000018H
	cmp	ecx, edx
	jl	SHORT $LL4@asn1_do_ad
$LN3@asn1_do_ad:
; Line 266
	mov	eax, DWORD PTR [edi+20]
	test	eax, eax
	jne	SHORT $LN19@asn1_do_ad
$err$22:
; Line 272
	cmp	DWORD PTR _nullerr$[esp+4], 0
	je	SHORT $LN12@asn1_do_ad
; Line 273
	push	273					; 00000111H
	push	OFFSET ??_C@_0BJ@GCGGIIFI@?4?2crypto?2asn1?2tasn_utl?4c?$AA@
	push	164					; 000000a4H
	push	110					; 0000006eH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN12@asn1_do_ad:
; Line 274
	xor	eax, eax
$LN19@asn1_do_ad:
	pop	edi
	pop	esi
; Line 275
	ret	0
$LN15@asn1_do_ad:
	pop	edi
; Line 261
	add	eax, 4
	pop	esi
; Line 275
	ret	0
_asn1_do_adb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_get_field_ptr
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_tt$ = 12						; size = 4
_asn1_get_field_ptr PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
; Line 204
	mov	eax, DWORD PTR _tt$[esp-4]
	test	DWORD PTR [eax], 1024			; 00000400H
	je	SHORT $LN2@asn1_get_f
; Line 205
	mov	eax, DWORD PTR _pval$[esp-4]
; Line 212
	ret	0
$LN2@asn1_get_f:
; Line 206
	mov	ecx, DWORD PTR _pval$[esp-4]
	mov	eax, DWORD PTR [eax+8]
	add	eax, DWORD PTR [ecx]
; Line 212
	ret	0
_asn1_get_field_ptr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_set_choice_selector
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_value$ = 12						; size = 4
_it$ = 16						; size = 4
_asn1_set_choice_selector PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
; Line 90
	mov	eax, DWORD PTR _it$[esp-4]
; Line 92
	mov	ecx, DWORD PTR _value$[esp-4]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _pval$[esp-4]
	add	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [edx], ecx
; Line 94
	ret	0
_asn1_set_choice_selector ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_get_choice_selector
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_asn1_get_choice_selector PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_utl.c
; Line 79
	mov	eax, DWORD PTR _it$[esp-4]
	mov	ecx, DWORD PTR _pval$[esp-4]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+eax]
; Line 80
	ret	0
_asn1_get_choice_selector ENDP
_TEXT	ENDS
END

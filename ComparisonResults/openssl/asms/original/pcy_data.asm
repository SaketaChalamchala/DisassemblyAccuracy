; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_data.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_policy_data_new
PUBLIC	_policy_data_free
PUBLIC	??_C@_0BL@EFACHDEK@?4?2crypto?2x509v3?2pcy_data?4c?$AA@ ; `string'
EXTRN	_sk_new_null:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_OBJ_dup:PROC
EXTRN	_POLICYQUALINFO_free:PROC
;	COMDAT ??_C@_0BL@EFACHDEK@?4?2crypto?2x509v3?2pcy_data?4c?$AA@
CONST	SEGMENT
??_C@_0BL@EFACHDEK@?4?2crypto?2x509v3?2pcy_data?4c?$AA@ DB '.\crypto\x509'
	DB	'v3\pcy_data.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _policy_data_free
_TEXT	SEGMENT
_data$ = 8						; size = 4
_policy_data_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_data.c
; Line 69
	push	esi
; Line 70
	mov	esi, DWORD PTR _data$[esp]
	push	DWORD PTR [esi+4]
	call	_ASN1_OBJECT_free
	add	esp, 4
; Line 72
	test	BYTE PTR [esi], 4
	jne	SHORT $LN2@policy_dat
; Line 73
	push	OFFSET _POLICYQUALINFO_free
	push	DWORD PTR [esi+8]
	call	_sk_pop_free
	add	esp, 8
$LN2@policy_dat:
; Line 74
	push	OFFSET _ASN1_OBJECT_free
	push	DWORD PTR [esi+12]
	call	_sk_pop_free
; Line 75
	push	esi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
	pop	esi
; Line 76
	ret	0
_policy_data_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _policy_data_new
_TEXT	SEGMENT
_policy$ = 8						; size = 4
_cid$ = 12						; size = 4
_crit$ = 16						; size = 4
_policy_data_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509v3\pcy_data.c
; Line 91
	mov	eax, DWORD PTR _cid$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR _policy$[esp]
	push	edi
	test	ebx, ebx
	jne	SHORT $LN2@policy_dat
	test	eax, eax
	jne	SHORT $LN16@policy_dat
	pop	edi
	pop	ebx
; Line 129
	ret	0
$LN2@policy_dat:
; Line 93
	test	eax, eax
	je	SHORT $LN3@policy_dat
$LN16@policy_dat:
; Line 94
	push	eax
	call	_OBJ_dup
	mov	edi, eax
	add	esp, 4
; Line 95
	test	edi, edi
	jne	SHORT $LN4@policy_dat
	pop	edi
	pop	ebx
; Line 129
	ret	0
$LN3@policy_dat:
; Line 98
	xor	edi, edi
$LN4@policy_dat:
	push	esi
; Line 99
	push	99					; 00000063H
	push	OFFSET ??_C@_0BL@EFACHDEK@?4?2crypto?2x509v3?2pcy_data?4c?$AA@
	push	16					; 00000010H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 100
	test	esi, esi
	je	SHORT $LN8@policy_dat
; Line 102
	call	_sk_new_null
	mov	DWORD PTR [esi+12], eax
; Line 103
	test	eax, eax
	jne	SHORT $LN7@policy_dat
; Line 104
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 105
	test	edi, edi
	je	SHORT $LN8@policy_dat
; Line 106
	push	edi
	call	_ASN1_OBJECT_free
	add	esp, 4
$LN8@policy_dat:
; Line 107
	pop	esi
	pop	edi
	xor	eax, eax
	pop	ebx
; Line 129
	ret	0
$LN7@policy_dat:
; Line 110
	mov	eax, DWORD PTR _crit$[esp+8]
	neg	eax
	sbb	eax, eax
	and	eax, 16					; 00000010H
	mov	DWORD PTR [esi], eax
; Line 115
	test	edi, edi
	je	SHORT $LN11@policy_dat
; Line 116
	mov	DWORD PTR [esi+4], edi
	jmp	SHORT $LN12@policy_dat
$LN11@policy_dat:
; Line 118
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [esi+4], eax
; Line 119
	mov	DWORD PTR [ebx], 0
$LN12@policy_dat:
; Line 122
	test	ebx, ebx
	je	SHORT $LN13@policy_dat
; Line 123
	mov	eax, DWORD PTR [ebx+4]
	mov	DWORD PTR [esi+8], eax
; Line 128
	mov	eax, esi
	pop	esi
	pop	edi
	mov	DWORD PTR [ebx+4], 0
	pop	ebx
; Line 129
	ret	0
$LN13@policy_dat:
; Line 126
	mov	DWORD PTR [esi+8], 0
; Line 128
	mov	eax, esi
	pop	esi
	pop	edi
	pop	ebx
; Line 129
	ret	0
_policy_data_new ENDP
_TEXT	ENDS
END

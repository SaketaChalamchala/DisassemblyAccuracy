; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\ca.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0M@MFMDLEDN@unspecified?$AA@		; `string'
PUBLIC	??_C@_0O@MCEAAJLH@keyCompromise?$AA@		; `string'
PUBLIC	??_C@_0N@NONEFGOE@CACompromise?$AA@		; `string'
PUBLIC	??_C@_0BD@BNOFAJLL@affiliationChanged?$AA@	; `string'
PUBLIC	??_C@_0L@NHCKNIFL@superseded?$AA@		; `string'
PUBLIC	??_C@_0BF@IGJCOPF@cessationOfOperation?$AA@	; `string'
PUBLIC	??_C@_0BA@FBHLCNLK@certificateHold?$AA@		; `string'
PUBLIC	??_C@_0O@BILLKPKO@removeFromCRL?$AA@		; `string'
PUBLIC	??_C@_0BA@BEFHDCOK@holdInstruction?$AA@		; `string'
PUBLIC	??_C@_07DBMHLFCD@keyTime?$AA@			; `string'
PUBLIC	??_C@_09LALKJNL@CAkeyTime?$AA@			; `string'
PUBLIC	??_C@_0BA@KGAGJMI@usage?3?5ca?5args?6?$AA@	; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0DB@FKAPAHFL@?5?9verbose?5?5?5?5?5?5?5?5?9?5Talk?5alot?5whi@ ; `string'
PUBLIC	??_C@_0CC@HLCCBAOC@?5?9config?5file?5?5?5?5?9?5A?5config?5file@ ; `string'
PUBLIC	??_C@_0DI@IBPOBFOL@?5?9name?5arg?5?5?5?5?5?5?5?9?5The?5particula@ ; `string'
PUBLIC	??_C@_0CH@MGCKJGBO@?5?9gencrl?5?5?5?5?5?5?5?5?5?9?5Generate?5a?5ne@ ; `string'
PUBLIC	??_C@_0DF@KLKOKIFA@?5?9crldays?5days?5?5?5?9?5Days?5is?5when?5@ ; `string'
PUBLIC	??_C@_0DG@LPFPOPON@?5?9crlhours?5hours?5?9?5Hours?5is?5when@ ; `string'
PUBLIC	??_C@_0DN@DIBKDMNL@?5?9startdate?5YYMMDDHHMMSSZ?5?5?9?5cer@ ; `string'
PUBLIC	??_C@_0EO@IAGCOGJL@?5?9enddate?5YYMMDDHHMMSSZ?5?5?5?5?9?5cer@ ; `string'
PUBLIC	??_C@_0EC@INDAPGOP@?5?9days?5arg?5?5?5?5?5?5?5?9?5number?5of?5day@ ; `string'
PUBLIC	??_C@_0DM@KJOMACAF@?5?9md?5arg?5?5?5?5?5?5?5?5?5?9?5md?5to?5use?0?5on@ ; `string'
PUBLIC	??_C@_0CP@JGPFBLCB@?5?9policy?5arg?5?5?5?5?5?9?5The?5CA?5?8polic@ ; `string'
PUBLIC	??_C@_0CF@FFDGFEBI@?5?9keyfile?5arg?5?5?5?5?9?5private?5key?5f@ ; `string'
PUBLIC	??_C@_0DM@BPFPGJII@?5?9keyform?5arg?5?5?5?5?9?5private?5key?5f@ ; `string'
PUBLIC	??_C@_0EF@MOAKPJDH@?5?9key?5arg?5?5?5?5?5?5?5?5?9?5key?5to?5decode@ ; `string'
PUBLIC	??_C@_0CH@DDNIALBJ@?5?9cert?5file?5?5?5?5?5?5?9?5The?5CA?5certif@ ; `string'
PUBLIC	??_C@_0EH@CIMLDKFI@?5?9selfsign?5?5?5?5?5?5?5?9?5sign?5a?5certif@ ; `string'
PUBLIC	??_C@_0EB@OLLNDJBK@?5?9in?5file?5?5?5?5?5?5?5?5?9?5The?5input?5PEM@ ; `string'
PUBLIC	??_C@_0DE@PNLNOAJK@?5?9out?5file?5?5?5?5?5?5?5?9?5Where?5to?5put?5@ ; `string'
PUBLIC	??_C@_0DF@DCFLNKAE@?5?9outdir?5dir?5?5?5?5?5?9?5Where?5to?5put?5@ ; `string'
PUBLIC	??_C@_0DL@FABCCFCA@?5?9infiles?5?4?4?4?4?5?5?5?9?5The?5last?5argu@ ; `string'
PUBLIC	??_C@_0EJ@OLPKBNMK@?5?9spkac?5file?5?5?5?5?5?9?5File?5contains@ ; `string'
PUBLIC	??_C@_0DN@ENJEEHPA@?5?9ss_cert?5file?5?5?5?9?5File?5contains@ ; `string'
PUBLIC	??_C@_0CK@CFFLOFEL@?5?9preserveDN?5?5?5?5?5?9?5Don?8t?5re?9orde@ ; `string'
PUBLIC	??_C@_0EI@EDHKPHNH@?5?9noemailDN?5?5?5?5?5?5?9?5Don?8t?5add?5the@ ; `string'
PUBLIC	??_C@_0CI@BKFIJOGN@?5?9batch?5?5?5?5?5?5?5?5?5?5?9?5Don?8t?5ask?5que@ ; `string'
PUBLIC	??_C@_0EN@GONOCOPI@?5?9msie_hack?5?5?5?5?5?5?9?5msie?5modifica@ ; `string'
PUBLIC	??_C@_0DJ@DNCKDHFC@?5?9revoke?5file?5?5?5?5?9?5Revoke?5a?5cert@ ; `string'
PUBLIC	??_C@_0DJ@IPIBIDNN@?5?9subj?5arg?5?5?5?5?5?5?5?9?5Use?5arg?5inste@ ; `string'
PUBLIC	??_C@_0DO@HMJDJBFA@?5?9utf8?5?5?5?5?5?5?5?5?5?5?5?9?5input?5charact@ ; `string'
PUBLIC	??_C@_0DI@BBJJEJJD@?5?9multivalue?9rdn?5?9?5enable?5suppor@ ; `string'
PUBLIC	??_C@_0EG@PLEJMFK@?5?9extensions?5?4?4?5?5?9?5Extension?5sec@ ; `string'
PUBLIC	??_C@_0EF@NJNPLHJK@?5?9extfile?5file?5?5?5?9?5Configuration@ ; `string'
PUBLIC	??_C@_0EK@GMBEAPHD@?5?9crlexts?5?4?4?5?5?5?5?5?9?5CRL?5extension@ ; `string'
PUBLIC	??_C@_0DO@HKPOAJEL@?5?9engine?5e?5?5?5?5?5?5?5?9?5use?5engine?5e?0@ ; `string'
PUBLIC	??_C@_0EF@GGDGHMDK@?5?9status?5serial?5?5?9?5Shows?5certifi@ ; `string'
PUBLIC	??_C@_0DI@GLPNHBII@?5?9updatedb?5?5?5?5?5?5?5?9?5Updates?5db?5fo@ ; `string'
_BSS	SEGMENT
_conf	DD	01H DUP (?)
_extconf DD	01H DUP (?)
_section DD	01H DUP (?)
_preserve DD	01H DUP (?)
_msie_hack DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0DI@GLPNHBII@?5?9updatedb?5?5?5?5?5?5?5?9?5Updates?5db?5fo@
CONST	SEGMENT
??_C@_0DI@GLPNHBII@?5?9updatedb?5?5?5?5?5?5?5?9?5Updates?5db?5fo@ DB ' -u'
	DB	'pdatedb       - Updates db for expired certificates', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@GGDGHMDK@?5?9status?5serial?5?5?9?5Shows?5certifi@
CONST	SEGMENT
??_C@_0EF@GGDGHMDK@?5?9status?5serial?5?5?9?5Shows?5certifi@ DB ' -status'
	DB	' serial  - Shows certificate status given the serial number', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@HKPOAJEL@?5?9engine?5e?5?5?5?5?5?5?5?9?5use?5engine?5e?0@
CONST	SEGMENT
??_C@_0DO@HKPOAJEL@?5?9engine?5e?5?5?5?5?5?5?5?9?5use?5engine?5e?0@ DB ' '
	DB	'-engine e       - use engine e, possibly a hardware device.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@GMBEAPHD@?5?9crlexts?5?4?4?5?5?5?5?5?9?5CRL?5extension@
CONST	SEGMENT
??_C@_0EK@GMBEAPHD@?5?9crlexts?5?4?4?5?5?5?5?5?9?5CRL?5extension@ DB ' -c'
	DB	'rlexts ..     - CRL extension section (override value in conf'
	DB	'ig file)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@NJNPLHJK@?5?9extfile?5file?5?5?5?9?5Configuration@
CONST	SEGMENT
??_C@_0EF@NJNPLHJK@?5?9extfile?5file?5?5?5?9?5Configuration@ DB ' -extfil'
	DB	'e file   - Configuration file with X509v3 extentions to add', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@PLEJMFK@?5?9extensions?5?4?4?5?5?9?5Extension?5sec@
CONST	SEGMENT
??_C@_0EG@PLEJMFK@?5?9extensions?5?4?4?5?5?9?5Extension?5sec@ DB ' -exten'
	DB	'sions ..  - Extension section (override value in config file)'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@BBJJEJJD@?5?9multivalue?9rdn?5?9?5enable?5suppor@
CONST	SEGMENT
??_C@_0DI@BBJJEJJD@?5?9multivalue?9rdn?5?9?5enable?5suppor@ DB ' -multiva'
	DB	'lue-rdn - enable support for multivalued RDNs', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@HMJDJBFA@?5?9utf8?5?5?5?5?5?5?5?5?5?5?5?9?5input?5charact@
CONST	SEGMENT
??_C@_0DO@HMJDJBFA@?5?9utf8?5?5?5?5?5?5?5?5?5?5?5?9?5input?5charact@ DB ' '
	DB	'-utf8           - input characters are UTF8 (default ASCII)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@IPIBIDNN@?5?9subj?5arg?5?5?5?5?5?5?5?9?5Use?5arg?5inste@
CONST	SEGMENT
??_C@_0DJ@IPIBIDNN@?5?9subj?5arg?5?5?5?5?5?5?5?9?5Use?5arg?5inste@ DB ' -'
	DB	'subj arg       - Use arg instead of request''s subject', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@DNCKDHFC@?5?9revoke?5file?5?5?5?5?9?5Revoke?5a?5cert@
CONST	SEGMENT
??_C@_0DJ@DNCKDHFC@?5?9revoke?5file?5?5?5?5?9?5Revoke?5a?5cert@ DB ' -rev'
	DB	'oke file    - Revoke a certificate (given in file)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@GONOCOPI@?5?9msie_hack?5?5?5?5?5?5?9?5msie?5modifica@
CONST	SEGMENT
??_C@_0EN@GONOCOPI@?5?9msie_hack?5?5?5?5?5?5?9?5msie?5modifica@ DB ' -msi'
	DB	'e_hack      - msie modifications to handle all those universa'
	DB	'l strings', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@BKFIJOGN@?5?9batch?5?5?5?5?5?5?5?5?5?5?9?5Don?8t?5ask?5que@
CONST	SEGMENT
??_C@_0CI@BKFIJOGN@?5?9batch?5?5?5?5?5?5?5?5?5?5?9?5Don?8t?5ask?5que@ DB ' '
	DB	'-batch          - Don''t ask questions', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@EDHKPHNH@?5?9noemailDN?5?5?5?5?5?5?9?5Don?8t?5add?5the@
CONST	SEGMENT
??_C@_0EI@EDHKPHNH@?5?9noemailDN?5?5?5?5?5?5?9?5Don?8t?5add?5the@ DB ' -n'
	DB	'oemailDN      - Don''t add the EMAIL field into certificate'''
	DB	' subject', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@CFFLOFEL@?5?9preserveDN?5?5?5?5?5?9?5Don?8t?5re?9orde@
CONST	SEGMENT
??_C@_0CK@CFFLOFEL@?5?9preserveDN?5?5?5?5?5?9?5Don?8t?5re?9orde@ DB ' -pr'
	DB	'eserveDN     - Don''t re-order the DN', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@ENJEEHPA@?5?9ss_cert?5file?5?5?5?9?5File?5contains@
CONST	SEGMENT
??_C@_0DN@ENJEEHPA@?5?9ss_cert?5file?5?5?5?9?5File?5contains@ DB ' -ss_ce'
	DB	'rt file   - File contains a self signed cert to sign', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@OLPKBNMK@?5?9spkac?5file?5?5?5?5?5?9?5File?5contains@
CONST	SEGMENT
??_C@_0EJ@OLPKBNMK@?5?9spkac?5file?5?5?5?5?5?9?5File?5contains@ DB ' -spk'
	DB	'ac file     - File contains DN and signed public key and chal'
	DB	'lenge', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@FABCCFCA@?5?9infiles?5?4?4?4?4?5?5?5?9?5The?5last?5argu@
CONST	SEGMENT
??_C@_0DL@FABCCFCA@?5?9infiles?5?4?4?4?4?5?5?5?9?5The?5last?5argu@ DB ' -'
	DB	'infiles ....   - The last argument, requests to process', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@DCFLNKAE@?5?9outdir?5dir?5?5?5?5?5?9?5Where?5to?5put?5@
CONST	SEGMENT
??_C@_0DF@DCFLNKAE@?5?9outdir?5dir?5?5?5?5?5?9?5Where?5to?5put?5@ DB ' -o'
	DB	'utdir dir     - Where to put output certificates', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@PNLNOAJK@?5?9out?5file?5?5?5?5?5?5?5?9?5Where?5to?5put?5@
CONST	SEGMENT
??_C@_0DE@PNLNOAJK@?5?9out?5file?5?5?5?5?5?5?5?9?5Where?5to?5put?5@ DB ' '
	DB	'-out file       - Where to put the output file(s)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@OLLNDJBK@?5?9in?5file?5?5?5?5?5?5?5?5?9?5The?5input?5PEM@
CONST	SEGMENT
??_C@_0EB@OLLNDJBK@?5?9in?5file?5?5?5?5?5?5?5?5?9?5The?5input?5PEM@ DB ' '
	DB	'-in file        - The input PEM encoded certificate request(s'
	DB	')', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@CIMLDKFI@?5?9selfsign?5?5?5?5?5?5?5?9?5sign?5a?5certif@
CONST	SEGMENT
??_C@_0EH@CIMLDKFI@?5?9selfsign?5?5?5?5?5?5?5?9?5sign?5a?5certif@ DB ' -s'
	DB	'elfsign       - sign a certificate with the key associated wi'
	DB	'th it', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DDNIALBJ@?5?9cert?5file?5?5?5?5?5?5?9?5The?5CA?5certif@
CONST	SEGMENT
??_C@_0CH@DDNIALBJ@?5?9cert?5file?5?5?5?5?5?5?9?5The?5CA?5certif@ DB ' -c'
	DB	'ert file      - The CA certificate', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@MOAKPJDH@?5?9key?5arg?5?5?5?5?5?5?5?5?9?5key?5to?5decode@
CONST	SEGMENT
??_C@_0EF@MOAKPJDH@?5?9key?5arg?5?5?5?5?5?5?5?5?9?5key?5to?5decode@ DB ' '
	DB	'-key arg        - key to decode the private key if it is encr'
	DB	'ypted', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@BPFPGJII@?5?9keyform?5arg?5?5?5?5?9?5private?5key?5f@
CONST	SEGMENT
??_C@_0DM@BPFPGJII@?5?9keyform?5arg?5?5?5?5?9?5private?5key?5f@ DB ' -key'
	DB	'form arg    - private key file format (PEM or ENGINE)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@FFDGFEBI@?5?9keyfile?5arg?5?5?5?5?9?5private?5key?5f@
CONST	SEGMENT
??_C@_0CF@FFDGFEBI@?5?9keyfile?5arg?5?5?5?5?9?5private?5key?5f@ DB ' -key'
	DB	'file arg    - private key file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@JGPFBLCB@?5?9policy?5arg?5?5?5?5?5?9?5The?5CA?5?8polic@
CONST	SEGMENT
??_C@_0CP@JGPFBLCB@?5?9policy?5arg?5?5?5?5?5?9?5The?5CA?5?8polic@ DB ' -p'
	DB	'olicy arg     - The CA ''policy'' to support', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@KJOMACAF@?5?9md?5arg?5?5?5?5?5?5?5?5?5?9?5md?5to?5use?0?5on@
CONST	SEGMENT
??_C@_0DM@KJOMACAF@?5?9md?5arg?5?5?5?5?5?5?5?5?5?9?5md?5to?5use?0?5on@ DB ' '
	DB	'-md arg         - md to use, one of md2, md5, sha or sha1', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@INDAPGOP@?5?9days?5arg?5?5?5?5?5?5?5?9?5number?5of?5day@
CONST	SEGMENT
??_C@_0EC@INDAPGOP@?5?9days?5arg?5?5?5?5?5?5?5?9?5number?5of?5day@ DB ' -'
	DB	'days arg       - number of days to certify the certificate fo'
	DB	'r', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@IAGCOGJL@?5?9enddate?5YYMMDDHHMMSSZ?5?5?5?5?9?5cer@
CONST	SEGMENT
??_C@_0EO@IAGCOGJL@?5?9enddate?5YYMMDDHHMMSSZ?5?5?5?5?9?5cer@ DB ' -endda'
	DB	'te YYMMDDHHMMSSZ    - certificate validity notAfter (override'
	DB	's -days)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DIBKDMNL@?5?9startdate?5YYMMDDHHMMSSZ?5?5?9?5cer@
CONST	SEGMENT
??_C@_0DN@DIBKDMNL@?5?9startdate?5YYMMDDHHMMSSZ?5?5?9?5cer@ DB ' -startda'
	DB	'te YYMMDDHHMMSSZ  - certificate validity notBefore', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@LPFPOPON@?5?9crlhours?5hours?5?9?5Hours?5is?5when@
CONST	SEGMENT
??_C@_0DG@LPFPOPON@?5?9crlhours?5hours?5?9?5Hours?5is?5when@ DB ' -crlhou'
	DB	'rs hours - Hours is when the next CRL is due', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KLKOKIFA@?5?9crldays?5days?5?5?5?9?5Days?5is?5when?5@
CONST	SEGMENT
??_C@_0DF@KLKOKIFA@?5?9crldays?5days?5?5?5?9?5Days?5is?5when?5@ DB ' -crl'
	DB	'days days   - Days is when the next CRL is due', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MGCKJGBO@?5?9gencrl?5?5?5?5?5?5?5?5?5?9?5Generate?5a?5ne@
CONST	SEGMENT
??_C@_0CH@MGCKJGBO@?5?9gencrl?5?5?5?5?5?5?5?5?5?9?5Generate?5a?5ne@ DB ' '
	DB	'-gencrl         - Generate a new CRL', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@IBPOBFOL@?5?9name?5arg?5?5?5?5?5?5?5?9?5The?5particula@
CONST	SEGMENT
??_C@_0DI@IBPOBFOL@?5?9name?5arg?5?5?5?5?5?5?5?9?5The?5particula@ DB ' -n'
	DB	'ame arg       - The particular CA definition to use', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HLCCBAOC@?5?9config?5file?5?5?5?5?9?5A?5config?5file@
CONST	SEGMENT
??_C@_0CC@HLCCBAOC@?5?9config?5file?5?5?5?5?9?5A?5config?5file@ DB ' -con'
	DB	'fig file    - A config file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@FKAPAHFL@?5?9verbose?5?5?5?5?5?5?5?5?9?5Talk?5alot?5whi@
CONST	SEGMENT
??_C@_0DB@FKAPAHFL@?5?9verbose?5?5?5?5?5?5?5?5?9?5Talk?5alot?5whi@ DB ' -'
	DB	'verbose        - Talk alot while doing things', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KGAGJMI@usage?3?5ca?5args?6?$AA@
CONST	SEGMENT
??_C@_0BA@KGAGJMI@usage?3?5ca?5args?6?$AA@ DB 'usage: ca args', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LALKJNL@CAkeyTime?$AA@
CONST	SEGMENT
??_C@_09LALKJNL@CAkeyTime?$AA@ DB 'CAkeyTime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DBMHLFCD@keyTime?$AA@
CONST	SEGMENT
??_C@_07DBMHLFCD@keyTime?$AA@ DB 'keyTime', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BEFHDCOK@holdInstruction?$AA@
CONST	SEGMENT
??_C@_0BA@BEFHDCOK@holdInstruction?$AA@ DB 'holdInstruction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BILLKPKO@removeFromCRL?$AA@
CONST	SEGMENT
??_C@_0O@BILLKPKO@removeFromCRL?$AA@ DB 'removeFromCRL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FBHLCNLK@certificateHold?$AA@
CONST	SEGMENT
??_C@_0BA@FBHLCNLK@certificateHold?$AA@ DB 'certificateHold', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IGJCOPF@cessationOfOperation?$AA@
CONST	SEGMENT
??_C@_0BF@IGJCOPF@cessationOfOperation?$AA@ DB 'cessationOfOperation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NHCKNIFL@superseded?$AA@
CONST	SEGMENT
??_C@_0L@NHCKNIFL@superseded?$AA@ DB 'superseded', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BNOFAJLL@affiliationChanged?$AA@
CONST	SEGMENT
??_C@_0BD@BNOFAJLL@affiliationChanged?$AA@ DB 'affiliationChanged', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NONEFGOE@CACompromise?$AA@
CONST	SEGMENT
??_C@_0N@NONEFGOE@CACompromise?$AA@ DB 'CACompromise', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MCEAAJLH@keyCompromise?$AA@
CONST	SEGMENT
??_C@_0O@MCEAAJLH@keyCompromise?$AA@ DB 'keyCompromise', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MFMDLEDN@unspecified?$AA@
CONST	SEGMENT
??_C@_0M@MFMDLEDN@unspecified?$AA@ DB 'unspecified', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_crl_reasons DD	FLAT:??_C@_0M@MFMDLEDN@unspecified?$AA@
	DD	FLAT:??_C@_0O@MCEAAJLH@keyCompromise?$AA@
	DD	FLAT:??_C@_0N@NONEFGOE@CACompromise?$AA@
	DD	FLAT:??_C@_0BD@BNOFAJLL@affiliationChanged?$AA@
	DD	FLAT:??_C@_0L@NHCKNIFL@superseded?$AA@
	DD	FLAT:??_C@_0BF@IGJCOPF@cessationOfOperation?$AA@
	DD	FLAT:??_C@_0BA@FBHLCNLK@certificateHold?$AA@
	DD	FLAT:??_C@_0O@BILLKPKO@removeFromCRL?$AA@
	DD	FLAT:??_C@_0BA@BEFHDCOK@holdInstruction?$AA@
	DD	FLAT:??_C@_07DBMHLFCD@keyTime?$AA@
	DD	FLAT:??_C@_09LALKJNL@CAkeyTime?$AA@
	ORG $+4
_ca_usage DD	FLAT:??_C@_0BA@KGAGJMI@usage?3?5ca?5args?6?$AA@
	DD	FLAT:??_C@_01EEMJAFIK@?6?$AA@
	DD	FLAT:??_C@_0DB@FKAPAHFL@?5?9verbose?5?5?5?5?5?5?5?5?9?5Talk?5alot?5whi@
	DD	FLAT:??_C@_0CC@HLCCBAOC@?5?9config?5file?5?5?5?5?9?5A?5config?5file@
	DD	FLAT:??_C@_0DI@IBPOBFOL@?5?9name?5arg?5?5?5?5?5?5?5?9?5The?5particula@
	DD	FLAT:??_C@_0CH@MGCKJGBO@?5?9gencrl?5?5?5?5?5?5?5?5?5?9?5Generate?5a?5ne@
	DD	FLAT:??_C@_0DF@KLKOKIFA@?5?9crldays?5days?5?5?5?9?5Days?5is?5when?5@
	DD	FLAT:??_C@_0DG@LPFPOPON@?5?9crlhours?5hours?5?9?5Hours?5is?5when@
	DD	FLAT:??_C@_0DN@DIBKDMNL@?5?9startdate?5YYMMDDHHMMSSZ?5?5?9?5cer@
	DD	FLAT:??_C@_0EO@IAGCOGJL@?5?9enddate?5YYMMDDHHMMSSZ?5?5?5?5?9?5cer@
	DD	FLAT:??_C@_0EC@INDAPGOP@?5?9days?5arg?5?5?5?5?5?5?5?9?5number?5of?5day@
	DD	FLAT:??_C@_0DM@KJOMACAF@?5?9md?5arg?5?5?5?5?5?5?5?5?5?9?5md?5to?5use?0?5on@
	DD	FLAT:??_C@_0CP@JGPFBLCB@?5?9policy?5arg?5?5?5?5?5?9?5The?5CA?5?8polic@
	DD	FLAT:??_C@_0CF@FFDGFEBI@?5?9keyfile?5arg?5?5?5?5?9?5private?5key?5f@
	DD	FLAT:??_C@_0DM@BPFPGJII@?5?9keyform?5arg?5?5?5?5?9?5private?5key?5f@
	DD	FLAT:??_C@_0EF@MOAKPJDH@?5?9key?5arg?5?5?5?5?5?5?5?5?9?5key?5to?5decode@
	DD	FLAT:??_C@_0CH@DDNIALBJ@?5?9cert?5file?5?5?5?5?5?5?9?5The?5CA?5certif@
	DD	FLAT:??_C@_0EH@CIMLDKFI@?5?9selfsign?5?5?5?5?5?5?5?9?5sign?5a?5certif@
	DD	FLAT:??_C@_0EB@OLLNDJBK@?5?9in?5file?5?5?5?5?5?5?5?5?9?5The?5input?5PEM@
	DD	FLAT:??_C@_0DE@PNLNOAJK@?5?9out?5file?5?5?5?5?5?5?5?9?5Where?5to?5put?5@
	DD	FLAT:??_C@_0DF@DCFLNKAE@?5?9outdir?5dir?5?5?5?5?5?9?5Where?5to?5put?5@
	DD	FLAT:??_C@_0DL@FABCCFCA@?5?9infiles?5?4?4?4?4?5?5?5?9?5The?5last?5argu@
	DD	FLAT:??_C@_0EJ@OLPKBNMK@?5?9spkac?5file?5?5?5?5?5?9?5File?5contains@
	DD	FLAT:??_C@_0DN@ENJEEHPA@?5?9ss_cert?5file?5?5?5?9?5File?5contains@
	DD	FLAT:??_C@_0CK@CFFLOFEL@?5?9preserveDN?5?5?5?5?5?9?5Don?8t?5re?9orde@
	DD	FLAT:??_C@_0EI@EDHKPHNH@?5?9noemailDN?5?5?5?5?5?5?9?5Don?8t?5add?5the@
	DD	FLAT:??_C@_0CI@BKFIJOGN@?5?9batch?5?5?5?5?5?5?5?5?5?5?9?5Don?8t?5ask?5que@
	DD	FLAT:??_C@_0EN@GONOCOPI@?5?9msie_hack?5?5?5?5?5?5?9?5msie?5modifica@
	DD	FLAT:??_C@_0DJ@DNCKDHFC@?5?9revoke?5file?5?5?5?5?9?5Revoke?5a?5cert@
	DD	FLAT:??_C@_0DJ@IPIBIDNN@?5?9subj?5arg?5?5?5?5?5?5?5?9?5Use?5arg?5inste@
	DD	FLAT:??_C@_0DO@HMJDJBFA@?5?9utf8?5?5?5?5?5?5?5?5?5?5?5?9?5input?5charact@
	DD	FLAT:??_C@_0DI@BBJJEJJD@?5?9multivalue?9rdn?5?9?5enable?5suppor@
	DD	FLAT:??_C@_0EG@PLEJMFK@?5?9extensions?5?4?4?5?5?9?5Extension?5sec@
	DD	FLAT:??_C@_0EF@NJNPLHJK@?5?9extfile?5file?5?5?5?9?5Configuration@
	DD	FLAT:??_C@_0EK@GMBEAPHD@?5?9crlexts?5?4?4?5?5?5?5?5?9?5CRL?5extension@
	DD	FLAT:??_C@_0DO@HKPOAJEL@?5?9engine?5e?5?5?5?5?5?5?5?9?5use?5engine?5e?0@
	DD	FLAT:??_C@_0EF@GGDGHMDK@?5?9status?5serial?5?5?9?5Shows?5certifi@
	DD	FLAT:??_C@_0DI@GLPNHBII@?5?9updatedb?5?5?5?5?5?5?5?9?5Updates?5db?5fo@
	DD	00H
_DATA	ENDS
PUBLIC	_unpack_revinfo
PUBLIC	_make_revocation_str
PUBLIC	_make_revoked
PUBLIC	_old_entry_print
PUBLIC	_ca_main
PUBLIC	??_C@_08FBJJFDKJ@?9verbose?$AA@			; `string'
PUBLIC	??_C@_07OOKHNANK@?9config?$AA@			; `string'
PUBLIC	??_C@_05IBCNGGP@?9name?$AA@			; `string'
PUBLIC	??_C@_05MDNNBOGG@?9subj?$AA@			; `string'
PUBLIC	??_C@_05HLKFBLKJ@?9utf8?$AA@			; `string'
PUBLIC	??_C@_0P@PCNAFLPB@?9create_serial?$AA@		; `string'
PUBLIC	??_C@_0BA@NIPEAEAE@?9multivalue?9rdn?$AA@	; `string'
PUBLIC	??_C@_0L@DKBOBAPE@?9startdate?$AA@		; `string'
PUBLIC	??_C@_08BOPFEEAL@?9enddate?$AA@			; `string'
PUBLIC	??_C@_05EFBFHALF@?9days?$AA@			; `string'
PUBLIC	??_C@_03MNHNKBNA@?9md?$AA@			; `string'
PUBLIC	??_C@_07EDOEKPLG@?9policy?$AA@			; `string'
PUBLIC	??_C@_08BLHBJKMB@?9keyfile?$AA@			; `string'
PUBLIC	??_C@_08OAHLMBGP@?9keyform?$AA@			; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_04FMEKFICB@?9key?$AA@			; `string'
PUBLIC	??_C@_05DLEDECNE@?9cert?$AA@			; `string'
PUBLIC	??_C@_09CLPCDNOK@?9selfsign?$AA@		; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_07DMKGDKOP@?9outdir?$AA@			; `string'
PUBLIC	??_C@_07FNCAFLJP@?9sigopt?$AA@			; `string'
PUBLIC	??_C@_07MLJOBJAC@?9notext?$AA@			; `string'
PUBLIC	??_C@_06COHPCLGM@?9batch?$AA@			; `string'
PUBLIC	??_C@_0M@MGGGCMAJ@?9preserveDN?$AA@		; `string'
PUBLIC	??_C@_0L@NIPNLDGA@?9noemailDN?$AA@		; `string'
PUBLIC	??_C@_07HPCKLCMH@?9gencrl?$AA@			; `string'
PUBLIC	??_C@_0L@DJPFPFBM@?9msie_hack?$AA@		; `string'
PUBLIC	??_C@_08IAPHBPNP@?9crldays?$AA@			; `string'
PUBLIC	??_C@_09JBBILJPK@?9crlhours?$AA@		; `string'
PUBLIC	??_C@_07CBJOAJDC@?9crlsec?$AA@			; `string'
PUBLIC	??_C@_08PBEJALD@?9infiles?$AA@			; `string'
PUBLIC	??_C@_08KGIDGCCC@?9ss_cert?$AA@			; `string'
PUBLIC	??_C@_06FDHPAOAM@?9spkac?$AA@			; `string'
PUBLIC	??_C@_07JCLPEBOD@?9revoke?$AA@			; `string'
PUBLIC	??_C@_06ICLHNOEL@?9valid?$AA@			; `string'
PUBLIC	??_C@_0M@BEOOFGDH@?9extensions?$AA@		; `string'
PUBLIC	??_C@_08LEGMGGCD@?9extfile?$AA@			; `string'
PUBLIC	??_C@_07KDLKDLMI@?9status?$AA@			; `string'
PUBLIC	??_C@_09BEFMJHAN@?9updatedb?$AA@		; `string'
PUBLIC	??_C@_08JIFOLNCJ@?9crlexts?$AA@			; `string'
PUBLIC	??_C@_0M@EJIMBBJA@?9crl_reason?$AA@		; `string'
PUBLIC	??_C@_09BGNIOPOI@?9crl_hold?$AA@		; `string'
PUBLIC	??_C@_0BA@IMJHBFJA@?9crl_compromise?$AA@	; `string'
PUBLIC	??_C@_0BD@NNIBNLBA@?9crl_CA_compromise?$AA@	; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@		; `string'
PUBLIC	??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@		; `string'
PUBLIC	??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@		; `string'
PUBLIC	??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_01KMDKNFGN@?1?$AA@			; `string'
PUBLIC	??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@		; `string'
PUBLIC	??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@ ; `string'
PUBLIC	??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@ ; `string'
PUBLIC	??_C@_0L@BIKOHKFP@default_ca?$AA@		; `string'
PUBLIC	??_C@_02DGMJAJHC@ca?$AA@			; `string'
PUBLIC	??_C@_08NOLCFLKC@oid_file?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_08OFLJHDDG@RANDFILE?$AA@			; `string'
PUBLIC	??_C@_0M@NPFHBEIA@string_mask?$AA@		; `string'
PUBLIC	??_C@_0CH@PNKCABBA@Invalid?5global?5string?5mask?5setti@ ; `string'
PUBLIC	??_C@_04LHHHFLPP@utf8?$AA@			; `string'
PUBLIC	??_C@_03ICICOMAL@yes?$AA@			; `string'
PUBLIC	??_C@_0P@HOGDIGGB@unique_subject?$AA@		; `string'
PUBLIC	??_C@_08PBOCEOLL@database?$AA@			; `string'
PUBLIC	??_C@_0BM@EHONGJEE@Error?5verifying?5serial?5?$CFs?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0M@BCLPOPCL@private_key?$AA@		; `string'
PUBLIC	??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; `string'
PUBLIC	??_C@_0P@HBHFBBML@CA?5private?5key?$AA@		; `string'
PUBLIC	??_C@_0M@LLNFCECG@certificate?$AA@		; `string'
PUBLIC	??_C@_0P@KDJNKNNI@CA?5certificate?$AA@		; `string'
PUBLIC	??_C@_0DA@DPECBGP@CA?5certificate?5and?5CA?5private?5ke@ ; `string'
PUBLIC	??_C@_08ILAKLJGO@preserve?$AA@			; `string'
PUBLIC	??_C@_09PMPAOOFG@msie_hack?$AA@			; `string'
PUBLIC	??_C@_08OFOKMJGD@name_opt?$AA@			; `string'
PUBLIC	??_C@_0BM@KALABIFI@Invalid?5name?5options?3?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_08MJPDBNNH@cert_opt?$AA@			; `string'
PUBLIC	??_C@_0CD@BFABCJIA@Invalid?5certificate?5options?3?5?$CC?$CFs@ ; `string'
PUBLIC	??_C@_0BA@JKMALOEE@copy_extensions?$AA@		; `string'
PUBLIC	??_C@_0CF@GNKAKOCI@Invalid?5extension?5copy?5option?3?5?$CC@ ; `string'
PUBLIC	??_C@_0O@MCICMBPC@new_certs_dir?$AA@		; `string'
PUBLIC	??_C@_0EL@MHBJEKA@there?5needs?5to?5be?5defined?5a?5dire@ ; `string'
PUBLIC	??_C@_0CI@LLBHJJJN@I?5am?5unable?5to?5access?5the?5?$CFs?5dir@ ; `string'
PUBLIC	??_C@_0BL@MMFEOCD@?$CFs?5need?5to?5be?5a?5directory?6?$AA@ ; `string'
PUBLIC	??_C@_0DG@GALGPOKE@entry?5?$CFd?3?5not?5revoked?5yet?0?5but?5h@ ; `string'
PUBLIC	??_C@_0O@BCAKHCIK@?5in?5entry?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0BP@KJFBFOIG@entry?5?$CFd?3?5invalid?5expiry?5date?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@DGNHGOCC@entry?5?$CFd?3?5bad?5serial?5number?5leng@ ; `string'
PUBLIC	??_C@_0EE@PDLJBMCP@entry?5?$CFd?3?5bad?5serial?5number?5char@ ; `string'
PUBLIC	??_C@_0CF@MGCGHPBH@?$CFd?5entries?5loaded?5from?5the?5datab@ ; `string'
PUBLIC	??_C@_0BC@EHEMHFHP@generating?5index?6?$AA@	; `string'
PUBLIC	??_C@_0BB@GPBLOKCE@Updating?5?$CFs?5?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@DHKOJLMG@Malloc?5failure?6?$AA@	; `string'
PUBLIC	??_C@_0CC@BEOKHPOI@No?5entries?5found?5to?5mark?5expired@ ; `string'
PUBLIC	??_C@_03CLCAEGCJ@new?$AA@			; `string'
PUBLIC	??_C@_03PNKCFLFB@old?$AA@			; `string'
PUBLIC	??_C@_0CE@BKGMBKFP@Done?4?5?$CFd?5entries?5marked?5as?5expir@ ; `string'
PUBLIC	??_C@_0CF@JLMMFMBJ@ERROR?3?5loading?5the?5config?5file?5?8@ ; `string'
PUBLIC	??_C@_0CI@PFACNGKK@ERROR?3?5on?5line?5?$CFld?5of?5config?5fil@ ; `string'
PUBLIC	??_C@_0CI@GJHHEJDC@Successfully?5loaded?5extensions?5f@ ; `string'
PUBLIC	??_C@_0L@ICCCPLKC@extensions?$AA@		; `string'
PUBLIC	??_C@_07DLHCIBDH@default?$AA@			; `string'
PUBLIC	??_C@_0L@GPEHKDBA@default_md?$AA@		; `string'
PUBLIC	??_C@_0BD@JLOHALFC@no?5default?5digest?6?$AA@	; `string'
PUBLIC	??_C@_0CK@PCPNIALC@?$CFs?5is?5an?5unsupported?5message?5dig@ ; `string'
PUBLIC	??_C@_0M@BNJACADD@email_in_dn?$AA@		; `string'
PUBLIC	??_C@_02KAJCLHKP@no?$AA@			; `string'
PUBLIC	??_C@_0BG@GDPDFCPO@message?5digest?5is?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_06NJNJNICG@policy?$AA@			; `string'
PUBLIC	??_C@_0O@BNCCCDFL@policy?5is?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_06KCELPKEE@serial?$AA@			; `string'
PUBLIC	??_C@_0BA@DDJOFEBJ@x509_extensions?$AA@		; `string'
PUBLIC	??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@ ; `string'
PUBLIC	??_C@_0BC@LHDIFPNN@default_startdate?$AA@	; `string'
PUBLIC	??_C@_0EG@BGKOLOEI@start?5date?5is?5invalid?0?5it?5should@ ; `string'
PUBLIC	??_C@_05MGEAPCOL@today?$AA@			; `string'
PUBLIC	??_C@_0BA@OICENKHG@default_enddate?$AA@		; `string'
PUBLIC	??_C@_0EE@ECCHIHFP@end?5date?5is?5invalid?0?5it?5should?5b@ ; `string'
PUBLIC	??_C@_0N@GAOBGEON@default_days?$AA@		; `string'
PUBLIC	??_C@_0CM@LBMHJEAI@cannot?5lookup?5how?5many?5days?5to?5c@ ; `string'
PUBLIC	??_C@_0CD@PJANBPCG@error?5while?5loading?5serial?5numbe@ ; `string'
PUBLIC	??_C@_0BK@ELOFGAEO@next?5serial?5number?5is?500?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@FOPOPEHK@next?5serial?5number?5is?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CB@LPAMDNLJ@unable?5to?5find?5?8section?8?5for?5?$CFs?6@ ; `string'
PUBLIC	??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@ ; `string'
PUBLIC	??_C@_0DM@KFBODCJH@?6?$CFd?5out?5of?5?$CFd?5certificate?5reques@ ; `string'
PUBLIC	??_C@_0CD@CCMDMABJ@CERTIFICATION?5CANCELED?3?5I?1O?5erro@ ; `string'
PUBLIC	??_C@_0BI@LFFBCNEP@CERTIFICATION?5CANCELED?6?$AA@ ; `string'
PUBLIC	??_C@_0CI@IOAEAKNK@Write?5out?5database?5with?5?$CFd?5new?5e@ ; `string'
PUBLIC	??_C@_0BK@DNHCMKMD@writing?5new?5certificates?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@CIOHDAIP@certificate?5file?5name?5too?5long?6?$AA@ ; `string'
PUBLIC	??_C@_04JFFKLGJF@?$CF02X?$AA@			; `string'
PUBLIC	??_C@_0M@JKCPKPL@writing?5?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_0BD@FCLJNDBO@Data?5Base?5Updated?6?$AA@	; `string'
PUBLIC	??_C@_0P@LMJCLHAD@crl_extensions?$AA@		; `string'
PUBLIC	??_C@_0CI@FHNGLKKG@Error?5Loading?5CRL?5extension?5sect@ ; `string'
PUBLIC	??_C@_09FMEKEDFM@crlnumber?$AA@			; `string'
PUBLIC	??_C@_0CA@NKEONCG@error?5while?5loading?5CRL?5number?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@CNLEMMI@default_crl_days?$AA@		; `string'
PUBLIC	??_C@_0BC@BCEJBAGO@default_crl_hours?$AA@	; `string'
PUBLIC	??_C@_0DF@JPCFHIM@cannot?5lookup?5how?5long?5until?5the@ ; `string'
PUBLIC	??_C@_0M@LKOGJLM@making?5CRL?6?$AA@		; `string'
PUBLIC	??_C@_0BO@LBJONHE@error?5setting?5CRL?5nextUpdate?6?$AA@ ; `string'
PUBLIC	??_C@_0N@HFKLMDGD@signing?5CRL?6?$AA@		; `string'
PUBLIC	??_C@_0BA@BINEDGJD@no?5input?5files?6?$AA@	; `string'
PUBLIC	??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@ ; `string'
PUBLIC	??_C@_0CJ@GLEJHDFB@Error?5reading?5certificate?5reques@ ; `string'
PUBLIC	??_C@_0CO@BGGIPDIE@Check?5that?5the?5request?5matches?5t@ ; `string'
PUBLIC	??_C@_0DF@NBEBGKAJ@Certificate?5request?5and?5CA?5priva@ ; `string'
PUBLIC	??_C@_0BM@JDNMMHMG@error?5unpacking?5public?5key?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@PMPNIMKJ@Signature?5verification?5problems?4@ ; `string'
PUBLIC	??_C@_0DB@IDIGBDHM@Signature?5did?5not?5match?5the?5cert@ ; `string'
PUBLIC	??_C@_0O@OKNNLJOD@Signature?5ok?6?$AA@		; `string'
PUBLIC	??_C@_0CJ@GEOLDMJL@Signature?5did?5not?5match?5the?5cert@ ; `string'
PUBLIC	??_C@_0O@NPENBAOL@malloc?5error?6?$AA@		; `string'
PUBLIC	??_C@_0DA@FNDAHFFM@The?5Subject?8s?5Distinguished?5Name@ ; `string'
PUBLIC	??_C@_0DC@JDICNINH@?6emailAddress?5type?5needs?5to?5be?5o@ ; `string'
PUBLIC	??_C@_0EF@KCEAFLOC@?6The?5string?5contains?5characters?5@ ; `string'
PUBLIC	??_C@_0DC@KCFNOMEL@?$CFs?3unknown?5object?5type?5in?5?8polic@ ; `string'
PUBLIC	??_C@_08EBGGHLAO@optional?$AA@			; `string'
PUBLIC	??_C@_08IGEDNDPC@supplied?$AA@			; `string'
PUBLIC	??_C@_0DE@OGHONDIE@The?5?$CFs?5field?5needed?5to?5be?5suppli@ ; `string'
PUBLIC	??_C@_05FNONLPDI@match?$AA@			; `string'
PUBLIC	??_C@_0CE@DJNNFNJL@The?5mandatory?5?$CFs?5field?5was?5missi@ ; `string'
PUBLIC	??_C@_0FC@CLLIHKBK@The?5?$CFs?5field?5does?5not?5exist?5in?5t@ ; `string'
PUBLIC	??_C@_04HIBGFPH@NULL?$AA@			; `string'
PUBLIC	??_C@_0FE@MJNFEBBH@The?5?$CFs?5field?5needed?5to?5be?5the?5sa@ ; `string'
PUBLIC	??_C@_0CL@EDGMFLIN@?$CFs?3invalid?5type?5in?5?8policy?8?5conf@ ; `string'
PUBLIC	??_C@_0ED@OGMFDFPB@The?5subject?5name?5appears?5to?5be?5o@ ; `string'
PUBLIC	??_C@_02PLJDPFIO@00?$AA@			; `string'
PUBLIC	??_C@_0CN@OLLJEEHJ@ERROR?3There?5is?5already?5a?5certifi@ ; `string'
PUBLIC	??_C@_0DB@DKJIEMJH@ERROR?3Serial?5number?5?$CFs?5has?5alrea@ ; `string'
PUBLIC	??_C@_0DF@CNJACNGP@?5?5?5?5?5?5check?5the?5database?1serial_@ ; `string'
PUBLIC	??_C@_0CO@OBOHPCBI@The?5matching?5entry?5has?5the?5follo@ ; `string'
PUBLIC	??_C@_07DFJMKFNB@Expired?$AA@			; `string'
PUBLIC	??_C@_07DBODGOEF@Revoked?$AA@			; `string'
PUBLIC	??_C@_05HNPPNPM@Valid?$AA@			; `string'
PUBLIC	??_C@_0CA@LFJLPPLE@?6invalid?5type?0?5Data?5base?5error?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@MAIOLJKM@Type?5?5?5?5?5?5?5?5?5?5?3?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_05PKCPKOLM@undef?$AA@			; `string'
PUBLIC	??_C@_0BD@NMJPNPKD@Was?5revoked?5on?3?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@NONICKGN@Expires?5on?5?5?5?5?3?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@FFCFMPEF@Serial?5Number?5?3?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@OIHIMAIP@File?5name?5?5?5?5?5?3?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLCDJGCP@Subject?5Name?5?5?3?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0ED@HKAGAIMJ@Everything?5appears?5to?5be?5ok?0?5cre@ ; `string'
PUBLIC	??_C@_0CA@GNPALBJL@Extra?5configuration?5file?5found?6?$AA@ ; `string'
PUBLIC	??_C@_0CI@CDCFDCNK@ERROR?3?5adding?5extensions?5in?5sect@ ; `string'
PUBLIC	??_C@_0CK@HDEGCLBM@Successfully?5added?5extensions?5fr@ ; `string'
PUBLIC	??_C@_0CL@IJAJCKJM@Successfully?5added?5extensions?5fr@ ; `string'
PUBLIC	??_C@_0CH@GCHAKPCA@ERROR?3?5adding?5extensions?5from?5re@ ; `string'
PUBLIC	??_C@_0BG@KCAMCGGE@Certificate?5Details?3?6?$AA@ ; `string'
PUBLIC	??_C@_0CG@HAEJFJKD@Certificate?5is?5to?5be?5certified?5u@ ; `string'
PUBLIC	??_C@_0M@BLIKBEEG@?5?$CI?$CFld?5days?$CJ?$AA@	; `string'
PUBLIC	??_C@_0BN@PBKJGAOM@Sign?5the?5certificate?$DP?5?$FLy?1n?$FN?3?$AA@ ; `string'
PUBLIC	??_C@_0CO@EICLBDNG@CERTIFICATE?5WILL?5NOT?5BE?5CERTIFIE@ ; `string'
PUBLIC	??_C@_0CD@CAANIMB@CERTIFICATE?5WILL?5NOT?5BE?5CERTIFIE@ ; `string'
PUBLIC	??_C@_07CIFAGBMG@unknown?$AA@			; `string'
PUBLIC	??_C@_0BL@ILNAPLLO@failed?5to?5update?5database?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@HFPMKNMK@TXT_DB?5error?5number?5?$CFld?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@BNDHOAPM@error?5on?5line?5?$CFld?5of?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CB@HEFHHIFF@no?5name?1value?5pairs?5found?5in?5?$CFs?6@ ; `string'
PUBLIC	??_C@_05BKCNMPMD@SPKAC?$AA@			; `string'
PUBLIC	??_C@_0CJ@IGILIHJB@unable?5to?5load?5Netscape?5SPKAC?5st@ ; `string'
PUBLIC	??_C@_0CK@BHFKNBFM@Netscape?5SPKAC?5structure?5not?5fou@ ; `string'
PUBLIC	??_C@_0DE@JFKAOFNC@Check?5that?5the?5SPKAC?5request?5mat@ ; `string'
PUBLIC	??_C@_0CC@KHDGLDHB@error?5unpacking?5SPKAC?5public?5key@ ; `string'
PUBLIC	??_C@_0DD@JJCAIGEL@signature?5verification?5failed?5on@ ; `string'
PUBLIC	??_C@_0DB@DCAJBECB@Adding?5Entry?5with?5serial?5number?5@ ; `string'
PUBLIC	??_C@_0BO@NAPPGGPG@ERROR?3name?5does?5not?5match?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@GKDPOOPJ@ERROR?3Already?5present?0?5serial?5nu@ ; `string'
PUBLIC	??_C@_0CJ@EKIABMDE@ERROR?3Already?5revoked?0?5serial?5nu@ ; `string'
PUBLIC	??_C@_0BK@DFOGDJO@Revoking?5Certificate?5?$CFs?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@BMAAMPCP@Error?5in?5revocation?5arguments?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@IBICPFBA@Serial?5?$CFs?5not?5present?5in?5db?4?6?$AA@ ; `string'
PUBLIC	??_C@_0P@KBBAHPCN@?$CFs?$DNValid?5?$CI?$CFc?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@FFCJGCAD@?$CFs?$DNRevoked?5?$CI?$CFc?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@HJEOPHIK@?$CFs?$DNExpired?5?$CI?$CFc?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@CMGCMFBH@?$CFs?$DNSuspended?5?$CI?$CFc?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@OGOMGIJL@?$CFs?$DNUnknown?5?$CI?$CFc?$CJ?4?6?$AA@ ; `string'
PUBLIC	??_C@_02CNFIOGBL@49?$AA@			; `string'
PUBLIC	??_C@_0M@OMINNFDO@?$CFs?$DNExpired?6?$AA@	; `string'
PUBLIC	??_C@_0BH@NKOOAKFK@Unknown?5CRL?5reason?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@OAMFEEJM@Invalid?5object?5identifier?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CO@GEFMGEIH@Invalid?5time?5format?5?$CFs?4?5Need?5YYY@ ; `string'
PUBLIC	??_C@_01IHBHIGKO@?0?$AA@			; `string'
PUBLIC	??_C@_0M@FPAMBEHE@PRINTABLE?3?8?$AA@		; `string'
PUBLIC	??_C@_0M@OICOEHIA@T61STRING?3?8?$AA@		; `string'
PUBLIC	??_C@_0M@KEGLEMJI@IA5STRING?3?8?$AA@		; `string'
PUBLIC	??_C@_0BC@MLMKONMK@UNIVERSALSTRING?3?8?$AA@	; `string'
PUBLIC	??_C@_0M@EJNHLAGD@ASN?41?5?$CF2d?3?8?$AA@	; `string'
PUBLIC	??_C@_02HAOIJKIC@?$CFc?$AA@			; `string'
PUBLIC	??_C@_07HLMBFCJG@?20x?$CF02X?$AA@		; `string'
PUBLIC	??_C@_02DOECAPGL@?$FO?$DP?$AA@			; `string'
PUBLIC	??_C@_03IFDPOEBN@?$FO?$CFc?$AA@			; `string'
PUBLIC	??_C@_02MHFDJOAC@?8?6?$AA@			; `string'
PUBLIC	??_C@_0BL@NEBNLEOC@memory?5allocation?5failure?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@ENJPCCNL@invalid?5revocation?5date?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@EKGDAIMG@invalid?5reason?5code?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@GLHGHJBD@missing?5hold?5instruction?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@BBNDMJI@invalid?5object?5identifier?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@OCEDLCGI@missing?5compromised?5time?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@DFFODFGO@invalid?5compromised?5time?5?$CFs?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fgets:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__atol:PROC
EXTRN	__imp__getenv:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp___stricmp:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	__imp__toupper:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_CONF_load:PROC
EXTRN	_CONF_get_section:PROC
EXTRN	_CONF_free:PROC
EXTRN	_NCONF_new:PROC
EXTRN	_NCONF_free:PROC
EXTRN	_NCONF_load:PROC
EXTRN	_NCONF_get_section:PROC
EXTRN	_NCONF_get_string:PROC
EXTRN	_NCONF_get_number_e:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_BN_add_word:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_bn2hex:PROC
EXTRN	_BN_hex2bn:PROC
EXTRN	_TXT_DB_write:PROC
EXTRN	_TXT_DB_get_by_index:PROC
EXTRN	_TXT_DB_insert:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_ASN1_STRING_cmp:PROC
EXTRN	_ASN1_INTEGER_new:PROC
EXTRN	_ASN1_INTEGER_free:PROC
EXTRN	_ASN1_ENUMERATED_new:PROC
EXTRN	_ASN1_ENUMERATED_free:PROC
EXTRN	_ASN1_UTCTIME_set_string:PROC
EXTRN	_ASN1_GENERALIZEDTIME_set_string:PROC
EXTRN	_ASN1_TIME_diff:PROC
EXTRN	_ASN1_UTCTIME_new:PROC
EXTRN	_ASN1_UTCTIME_free:PROC
EXTRN	_ASN1_GENERALIZEDTIME_new:PROC
EXTRN	_ASN1_GENERALIZEDTIME_free:PROC
EXTRN	_ASN1_TIME_new:PROC
EXTRN	_ASN1_TIME_free:PROC
EXTRN	_ASN1_TIME_set_string:PROC
EXTRN	_i2a_ASN1_OBJECT:PROC
EXTRN	_ASN1_INTEGER_set:PROC
EXTRN	_BN_to_ASN1_INTEGER:PROC
EXTRN	_ASN1_INTEGER_to_BN:PROC
EXTRN	_ASN1_ENUMERATED_set:PROC
EXTRN	_ASN1_PRINTABLE_type:PROC
EXTRN	_ASN1_TIME_print:PROC
EXTRN	_ASN1_UNIVERSALSTRING_to_string:PROC
EXTRN	_ASN1_STRING_set_default_mask_asc:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_nid2ln:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_txt2obj:PROC
EXTRN	_OBJ_txt2nid:PROC
EXTRN	_OBJ_cleanup:PROC
EXTRN	_OBJ_create_objects:PROC
EXTRN	_EVP_md5:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_PKEY_copy_parameters:PROC
EXTRN	_EVP_PKEY_missing_parameters:PROC
EXTRN	_EVP_PKEY_get_default_digest_nid:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BUF_strlcat:PROC
EXTRN	_X509_verify:PROC
EXTRN	_X509_REQ_verify:PROC
EXTRN	_NETSCAPE_SPKI_verify:PROC
EXTRN	_NETSCAPE_SPKI_b64_decode:PROC
EXTRN	_NETSCAPE_SPKI_get_pubkey:PROC
EXTRN	_i2d_X509_bio:PROC
EXTRN	_X509_NAME_dup:PROC
EXTRN	_X509_time_adj_ex:PROC
EXTRN	_X509_gmtime_adj:PROC
EXTRN	_X509_get_default_cert_area:PROC
EXTRN	_X509_to_X509_REQ:PROC
EXTRN	_X509_REQ_new:PROC
EXTRN	_X509_REQ_free:PROC
EXTRN	_X509_EXTENSION_free:PROC
EXTRN	_X509_NAME_ENTRY_free:PROC
EXTRN	_X509_NAME_new:PROC
EXTRN	_X509_NAME_free:PROC
EXTRN	_X509_new:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_REVOKED_new:PROC
EXTRN	_X509_CRL_new:PROC
EXTRN	_X509_CRL_free:PROC
EXTRN	_X509_CRL_add0_revoked:PROC
EXTRN	_NETSCAPE_SPKI_free:PROC
EXTRN	_X509_NAME_oneline:PROC
EXTRN	_X509_get_serialNumber:PROC
EXTRN	_X509_set_issuer_name:PROC
EXTRN	_X509_set_subject_name:PROC
EXTRN	_X509_get_subject_name:PROC
EXTRN	_X509_set_pubkey:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_X509_REQ_set_subject_name:PROC
EXTRN	_X509_REQ_set_pubkey:PROC
EXTRN	_X509_REQ_get_pubkey:PROC
EXTRN	_X509_CRL_set_version:PROC
EXTRN	_X509_CRL_set_issuer_name:PROC
EXTRN	_X509_CRL_set_lastUpdate:PROC
EXTRN	_X509_CRL_set_nextUpdate:PROC
EXTRN	_X509_CRL_sort:PROC
EXTRN	_X509_REVOKED_set_serialNumber:PROC
EXTRN	_X509_REVOKED_set_revocationDate:PROC
EXTRN	_X509_REQ_check_private_key:PROC
EXTRN	_X509_check_private_key:PROC
EXTRN	_X509_print_ex:PROC
EXTRN	_X509_print:PROC
EXTRN	_X509_REQ_print:PROC
EXTRN	_X509_NAME_entry_count:PROC
EXTRN	_X509_NAME_get_index_by_NID:PROC
EXTRN	_X509_NAME_get_index_by_OBJ:PROC
EXTRN	_X509_NAME_get_entry:PROC
EXTRN	_X509_NAME_delete_entry:PROC
EXTRN	_X509_NAME_add_entry:PROC
EXTRN	_X509_NAME_add_entry_by_NID:PROC
EXTRN	_X509_NAME_ENTRY_get_object:PROC
EXTRN	_X509_NAME_ENTRY_get_data:PROC
EXTRN	_X509_CRL_add1_ext_i2d:PROC
EXTRN	_X509_REVOKED_add1_ext_i2d:PROC
EXTRN	_X509V3_EXT_add_nconf:PROC
EXTRN	_X509V3_EXT_CRL_add_nconf:PROC
EXTRN	_X509V3_set_nconf:PROC
EXTRN	_X509V3_set_ctx:PROC
EXTRN	_PEM_write_bio_X509:PROC
EXTRN	_PEM_read_bio_X509_REQ:PROC
EXTRN	_PEM_write_bio_X509_CRL:PROC
EXTRN	__imp___access:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_write_file:PROC
EXTRN	_str2fmt:PROC
EXTRN	_set_cert_ex:PROC
EXTRN	_set_name_ex:PROC
EXTRN	_set_ext_copy:PROC
EXTRN	_copy_extensions:PROC
EXTRN	_app_passwd:PROC
EXTRN	_add_oid_section:PROC
EXTRN	_load_cert:PROC
EXTRN	_load_key:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_load_serial:PROC
EXTRN	_save_serial:PROC
EXTRN	_rotate_serial:PROC
EXTRN	_load_index:PROC
EXTRN	_index_index:PROC
EXTRN	_save_index:PROC
EXTRN	_rotate_index:PROC
EXTRN	_free_index:PROC
EXTRN	_index_name_cmp:PROC
EXTRN	_parse_yesno:PROC
EXTRN	_parse_name:PROC
EXTRN	_do_X509_sign:PROC
EXTRN	_do_X509_CRL_sign:PROC
EXTRN	_app_isdir:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BN@DFFODFGO@invalid?5compromised?5time?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@DFFODFGO@invalid?5compromised?5time?5?$CFs?6?$AA@ DB 'invalid c'
	DB	'ompromised time %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OCEDLCGI@missing?5compromised?5time?6?$AA@
CONST	SEGMENT
??_C@_0BK@OCEDLCGI@missing?5compromised?5time?6?$AA@ DB 'missing compromi'
	DB	'sed time', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BBNDMJI@invalid?5object?5identifier?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BO@BBNDMJI@invalid?5object?5identifier?5?$CFs?6?$AA@ DB 'invalid o'
	DB	'bject identifier %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GLHGHJBD@missing?5hold?5instruction?6?$AA@
CONST	SEGMENT
??_C@_0BK@GLHGHJBD@missing?5hold?5instruction?6?$AA@ DB 'missing hold ins'
	DB	'truction', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EKGDAIMG@invalid?5reason?5code?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BI@EKGDAIMG@invalid?5reason?5code?5?$CFs?6?$AA@ DB 'invalid reason'
	DB	' code %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@ENJPCCNL@invalid?5revocation?5date?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BM@ENJPCCNL@invalid?5revocation?5date?5?$CFs?6?$AA@ DB 'invalid re'
	DB	'vocation date %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NEBNLEOC@memory?5allocation?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BL@NEBNLEOC@memory?5allocation?5failure?6?$AA@ DB 'memory allocati'
	DB	'on failure', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MHFDJOAC@?8?6?$AA@
CONST	SEGMENT
??_C@_02MHFDJOAC@?8?6?$AA@ DB '''', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03IFDPOEBN@?$FO?$CFc?$AA@
CONST	SEGMENT
??_C@_03IFDPOEBN@?$FO?$CFc?$AA@ DB '^%c', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DOECAPGL@?$FO?$DP?$AA@
CONST	SEGMENT
??_C@_02DOECAPGL@?$FO?$DP?$AA@ DB '^?', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HLMBFCJG@?20x?$CF02X?$AA@
CONST	SEGMENT
??_C@_07HLMBFCJG@?20x?$CF02X?$AA@ DB '\0x%02X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02HAOIJKIC@?$CFc?$AA@
CONST	SEGMENT
??_C@_02HAOIJKIC@?$CFc?$AA@ DB '%c', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EJNHLAGD@ASN?41?5?$CF2d?3?8?$AA@
CONST	SEGMENT
??_C@_0M@EJNHLAGD@ASN?41?5?$CF2d?3?8?$AA@ DB 'ASN.1 %2d:''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MLMKONMK@UNIVERSALSTRING?3?8?$AA@
CONST	SEGMENT
??_C@_0BC@MLMKONMK@UNIVERSALSTRING?3?8?$AA@ DB 'UNIVERSALSTRING:''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KEGLEMJI@IA5STRING?3?8?$AA@
CONST	SEGMENT
??_C@_0M@KEGLEMJI@IA5STRING?3?8?$AA@ DB 'IA5STRING:''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OICOEHIA@T61STRING?3?8?$AA@
CONST	SEGMENT
??_C@_0M@OICOEHIA@T61STRING?3?8?$AA@ DB 'T61STRING:''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FPAMBEHE@PRINTABLE?3?8?$AA@
CONST	SEGMENT
??_C@_0M@FPAMBEHE@PRINTABLE?3?8?$AA@ DB 'PRINTABLE:''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0?$AA@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0?$AA@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GEFMGEIH@Invalid?5time?5format?5?$CFs?4?5Need?5YYY@
CONST	SEGMENT
??_C@_0CO@GEFMGEIH@Invalid?5time?5format?5?$CFs?4?5Need?5YYY@ DB 'Invalid'
	DB	' time format %s. Need YYYYMMDDHHMMSSZ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OAMFEEJM@Invalid?5object?5identifier?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BO@OAMFEEJM@Invalid?5object?5identifier?5?$CFs?6?$AA@ DB 'Invalid '
	DB	'object identifier %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NKOOAKFK@Unknown?5CRL?5reason?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BH@NKOOAKFK@Unknown?5CRL?5reason?5?$CFs?6?$AA@ DB 'Unknown CRL rea'
	DB	'son %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OMINNFDO@?$CFs?$DNExpired?6?$AA@
CONST	SEGMENT
??_C@_0M@OMINNFDO@?$CFs?$DNExpired?6?$AA@ DB '%s=Expired', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02CNFIOGBL@49?$AA@
CONST	SEGMENT
??_C@_02CNFIOGBL@49?$AA@ DB '49', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OGOMGIJL@?$CFs?$DNUnknown?5?$CI?$CFc?$CJ?4?6?$AA@
CONST	SEGMENT
??_C@_0BC@OGOMGIJL@?$CFs?$DNUnknown?5?$CI?$CFc?$CJ?4?6?$AA@ DB '%s=Unknow'
	DB	'n (%c).', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CMGCMFBH@?$CFs?$DNSuspended?5?$CI?$CFc?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BD@CMGCMFBH@?$CFs?$DNSuspended?5?$CI?$CFc?$CJ?6?$AA@ DB '%s=Suspen'
	DB	'ded (%c)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HJEOPHIK@?$CFs?$DNExpired?5?$CI?$CFc?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BB@HJEOPHIK@?$CFs?$DNExpired?5?$CI?$CFc?$CJ?6?$AA@ DB '%s=Expired '
	DB	'(%c)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FFCJGCAD@?$CFs?$DNRevoked?5?$CI?$CFc?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BB@FFCJGCAD@?$CFs?$DNRevoked?5?$CI?$CFc?$CJ?6?$AA@ DB '%s=Revoked '
	DB	'(%c)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KBBAHPCN@?$CFs?$DNValid?5?$CI?$CFc?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0P@KBBAHPCN@?$CFs?$DNValid?5?$CI?$CFc?$CJ?6?$AA@ DB '%s=Valid (%c)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@IBICPFBA@Serial?5?$CFs?5not?5present?5in?5db?4?6?$AA@
CONST	SEGMENT
??_C@_0BO@IBICPFBA@Serial?5?$CFs?5not?5present?5in?5db?4?6?$AA@ DB 'Seria'
	DB	'l %s not present in db.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BMAAMPCP@Error?5in?5revocation?5arguments?6?$AA@
CONST	SEGMENT
??_C@_0BP@BMAAMPCP@Error?5in?5revocation?5arguments?6?$AA@ DB 'Error in r'
	DB	'evocation arguments', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DFOGDJO@Revoking?5Certificate?5?$CFs?4?6?$AA@
CONST	SEGMENT
??_C@_0BK@DFOGDJO@Revoking?5Certificate?5?$CFs?4?6?$AA@ DB 'Revoking Cert'
	DB	'ificate %s.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EKIABMDE@ERROR?3Already?5revoked?0?5serial?5nu@
CONST	SEGMENT
??_C@_0CJ@EKIABMDE@ERROR?3Already?5revoked?0?5serial?5nu@ DB 'ERROR:Alrea'
	DB	'dy revoked, serial number %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GKDPOOPJ@ERROR?3Already?5present?0?5serial?5nu@
CONST	SEGMENT
??_C@_0CJ@GKDPOOPJ@ERROR?3Already?5present?0?5serial?5nu@ DB 'ERROR:Alrea'
	DB	'dy present, serial number %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NAPPGGPG@ERROR?3name?5does?5not?5match?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BO@NAPPGGPG@ERROR?3name?5does?5not?5match?5?$CFs?6?$AA@ DB 'ERROR:'
	DB	'name does not match %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@DCAJBECB@Adding?5Entry?5with?5serial?5number?5@
CONST	SEGMENT
??_C@_0DB@DCAJBECB@Adding?5Entry?5with?5serial?5number?5@ DB 'Adding Entr'
	DB	'y with serial number %s to DB for %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@JJCAIGEL@signature?5verification?5failed?5on@
CONST	SEGMENT
??_C@_0DD@JJCAIGEL@signature?5verification?5failed?5on@ DB 'signature ver'
	DB	'ification failed on SPKAC public key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KHDGLDHB@error?5unpacking?5SPKAC?5public?5key@
CONST	SEGMENT
??_C@_0CC@KHDGLDHB@error?5unpacking?5SPKAC?5public?5key@ DB 'error unpack'
	DB	'ing SPKAC public key', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@JFKAOFNC@Check?5that?5the?5SPKAC?5request?5mat@
CONST	SEGMENT
??_C@_0DE@JFKAOFNC@Check?5that?5the?5SPKAC?5request?5mat@ DB 'Check that '
	DB	'the SPKAC request matches the signature', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BHFKNBFM@Netscape?5SPKAC?5structure?5not?5fou@
CONST	SEGMENT
??_C@_0CK@BHFKNBFM@Netscape?5SPKAC?5structure?5not?5fou@ DB 'Netscape SPK'
	DB	'AC structure not found in %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IGILIHJB@unable?5to?5load?5Netscape?5SPKAC?5st@
CONST	SEGMENT
??_C@_0CJ@IGILIHJB@unable?5to?5load?5Netscape?5SPKAC?5st@ DB 'unable to l'
	DB	'oad Netscape SPKAC structure', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05BKCNMPMD@SPKAC?$AA@
CONST	SEGMENT
??_C@_05BKCNMPMD@SPKAC?$AA@ DB 'SPKAC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@HEFHHIFF@no?5name?1value?5pairs?5found?5in?5?$CFs?6@
CONST	SEGMENT
??_C@_0CB@HEFHHIFF@no?5name?1value?5pairs?5found?5in?5?$CFs?6@ DB 'no nam'
	DB	'e/value pairs found in %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BNDHOAPM@error?5on?5line?5?$CFld?5of?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BJ@BNDHOAPM@error?5on?5line?5?$CFld?5of?5?$CFs?6?$AA@ DB 'error on'
	DB	' line %ld of %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HFPMKNMK@TXT_DB?5error?5number?5?$CFld?6?$AA@
CONST	SEGMENT
??_C@_0BJ@HFPMKNMK@TXT_DB?5error?5number?5?$CFld?6?$AA@ DB 'TXT_DB error '
	DB	'number %ld', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@ILNAPLLO@failed?5to?5update?5database?6?$AA@
CONST	SEGMENT
??_C@_0BL@ILNAPLLO@failed?5to?5update?5database?6?$AA@ DB 'failed to upda'
	DB	'te database', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07CIFAGBMG@unknown?$AA@
CONST	SEGMENT
??_C@_07CIFAGBMG@unknown?$AA@ DB 'unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CAANIMB@CERTIFICATE?5WILL?5NOT?5BE?5CERTIFIE@
CONST	SEGMENT
??_C@_0CD@CAANIMB@CERTIFICATE?5WILL?5NOT?5BE?5CERTIFIE@ DB 'CERTIFICATE W'
	DB	'ILL NOT BE CERTIFIED', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@EICLBDNG@CERTIFICATE?5WILL?5NOT?5BE?5CERTIFIE@
CONST	SEGMENT
??_C@_0CO@EICLBDNG@CERTIFICATE?5WILL?5NOT?5BE?5CERTIFIE@ DB 'CERTIFICATE '
	DB	'WILL NOT BE CERTIFIED: I/O error', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PBKJGAOM@Sign?5the?5certificate?$DP?5?$FLy?1n?$FN?3?$AA@
CONST	SEGMENT
??_C@_0BN@PBKJGAOM@Sign?5the?5certificate?$DP?5?$FLy?1n?$FN?3?$AA@ DB 'Si'
	DB	'gn the certificate? [y/n]:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BLIKBEEG@?5?$CI?$CFld?5days?$CJ?$AA@
CONST	SEGMENT
??_C@_0M@BLIKBEEG@?5?$CI?$CFld?5days?$CJ?$AA@ DB ' (%ld days)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HAEJFJKD@Certificate?5is?5to?5be?5certified?5u@
CONST	SEGMENT
??_C@_0CG@HAEJFJKD@Certificate?5is?5to?5be?5certified?5u@ DB 'Certificate'
	DB	' is to be certified until ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KCAMCGGE@Certificate?5Details?3?6?$AA@
CONST	SEGMENT
??_C@_0BG@KCAMCGGE@Certificate?5Details?3?6?$AA@ DB 'Certificate Details:'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GCHAKPCA@ERROR?3?5adding?5extensions?5from?5re@
CONST	SEGMENT
??_C@_0CH@GCHAKPCA@ERROR?3?5adding?5extensions?5from?5re@ DB 'ERROR: addi'
	DB	'ng extensions from request', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@IJAJCKJM@Successfully?5added?5extensions?5fr@
CONST	SEGMENT
??_C@_0CL@IJAJCKJM@Successfully?5added?5extensions?5fr@ DB 'Successfully '
	DB	'added extensions from config', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@HDEGCLBM@Successfully?5added?5extensions?5fr@
CONST	SEGMENT
??_C@_0CK@HDEGCLBM@Successfully?5added?5extensions?5fr@ DB 'Successfully '
	DB	'added extensions from file.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CDCFDCNK@ERROR?3?5adding?5extensions?5in?5sect@
CONST	SEGMENT
??_C@_0CI@CDCFDCNK@ERROR?3?5adding?5extensions?5in?5sect@ DB 'ERROR: addi'
	DB	'ng extensions in section %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@GNPALBJL@Extra?5configuration?5file?5found?6?$AA@
CONST	SEGMENT
??_C@_0CA@GNPALBJL@Extra?5configuration?5file?5found?6?$AA@ DB 'Extra con'
	DB	'figuration file found', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@HKAGAIMJ@Everything?5appears?5to?5be?5ok?0?5cre@
CONST	SEGMENT
??_C@_0ED@HKAGAIMJ@Everything?5appears?5to?5be?5ok?0?5cre@ DB 'Everything'
	DB	' appears to be ok, creating and signing the certificate', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLCDJGCP@Subject?5Name?5?5?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@OLCDJGCP@Subject?5Name?5?5?3?$CFs?6?$AA@ DB 'Subject Name  :%s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OIHIMAIP@File?5name?5?5?5?5?5?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@OIHIMAIP@File?5name?5?5?5?5?5?3?$CFs?6?$AA@ DB 'File name     :'
	DB	'%s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FFCFMPEF@Serial?5Number?5?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@FFCFMPEF@Serial?5Number?5?3?$CFs?6?$AA@ DB 'Serial Number :%s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NONICKGN@Expires?5on?5?5?5?5?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NONICKGN@Expires?5on?5?5?5?5?3?$CFs?6?$AA@ DB 'Expires on    :%'
	DB	's', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NMJPNPKD@Was?5revoked?5on?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NMJPNPKD@Was?5revoked?5on?3?$CFs?6?$AA@ DB 'Was revoked on:%s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_05PKCPKOLM@undef?$AA@
CONST	SEGMENT
??_C@_05PKCPKOLM@undef?$AA@ DB 'undef', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MAIOLJKM@Type?5?5?5?5?5?5?5?5?5?5?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@MAIOLJKM@Type?5?5?5?5?5?5?5?5?5?5?3?$CFs?6?$AA@ DB 'Type       '
	DB	'   :%s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LFJLPPLE@?6invalid?5type?0?5Data?5base?5error?6?$AA@
CONST	SEGMENT
??_C@_0CA@LFJLPPLE@?6invalid?5type?0?5Data?5base?5error?6?$AA@ DB 0aH, 'i'
	DB	'nvalid type, Data base error', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05HNPPNPM@Valid?$AA@
CONST	SEGMENT
??_C@_05HNPPNPM@Valid?$AA@ DB 'Valid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DBODGOEF@Revoked?$AA@
CONST	SEGMENT
??_C@_07DBODGOEF@Revoked?$AA@ DB 'Revoked', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DFJMKFNB@Expired?$AA@
CONST	SEGMENT
??_C@_07DFJMKFNB@Expired?$AA@ DB 'Expired', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@OBOHPCBI@The?5matching?5entry?5has?5the?5follo@
CONST	SEGMENT
??_C@_0CO@OBOHPCBI@The?5matching?5entry?5has?5the?5follo@ DB 'The matchin'
	DB	'g entry has the following details', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@CNJACNGP@?5?5?5?5?5?5check?5the?5database?1serial_@
CONST	SEGMENT
??_C@_0DF@CNJACNGP@?5?5?5?5?5?5check?5the?5database?1serial_@ DB '      c'
	DB	'heck the database/serial_file for corruption', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@DKJIEMJH@ERROR?3Serial?5number?5?$CFs?5has?5alrea@
CONST	SEGMENT
??_C@_0DB@DKJIEMJH@ERROR?3Serial?5number?5?$CFs?5has?5alrea@ DB 'ERROR:Se'
	DB	'rial number %s has already been issued,', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OLLJEEHJ@ERROR?3There?5is?5already?5a?5certifi@
CONST	SEGMENT
??_C@_0CN@OLLJEEHJ@ERROR?3There?5is?5already?5a?5certifi@ DB 'ERROR:There'
	DB	' is already a certificate for %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02PLJDPFIO@00?$AA@
CONST	SEGMENT
??_C@_02PLJDPFIO@00?$AA@ DB '00', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@OGMFDFPB@The?5subject?5name?5appears?5to?5be?5o@
CONST	SEGMENT
??_C@_0ED@OGMFDFPB@The?5subject?5name?5appears?5to?5be?5o@ DB 'The subjec'
	DB	't name appears to be ok, checking data base for clashes', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EDGMFLIN@?$CFs?3invalid?5type?5in?5?8policy?8?5conf@
CONST	SEGMENT
??_C@_0CL@EDGMFLIN@?$CFs?3invalid?5type?5in?5?8policy?8?5conf@ DB '%s:inv'
	DB	'alid type in ''policy'' configuration', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@MJNFEBBH@The?5?$CFs?5field?5needed?5to?5be?5the?5sa@
CONST	SEGMENT
??_C@_0FE@MJNFEBBH@The?5?$CFs?5field?5needed?5to?5be?5the?5sa@ DB 'The %s'
	DB	' field needed to be the same in the', 0aH, 'CA certificate (%'
	DB	's) and the request (%s)', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HIBGFPH@NULL?$AA@
CONST	SEGMENT
??_C@_04HIBGFPH@NULL?$AA@ DB 'NULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@CLLIHKBK@The?5?$CFs?5field?5does?5not?5exist?5in?5t@
CONST	SEGMENT
??_C@_0FC@CLLIHKBK@The?5?$CFs?5field?5does?5not?5exist?5in?5t@ DB 'The %s'
	DB	' field does not exist in the CA certificate,', 0aH, 'the ''po'
	DB	'licy'' is misconfigured', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DJNNFNJL@The?5mandatory?5?$CFs?5field?5was?5missi@
CONST	SEGMENT
??_C@_0CE@DJNNFNJL@The?5mandatory?5?$CFs?5field?5was?5missi@ DB 'The mand'
	DB	'atory %s field was missing', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05FNONLPDI@match?$AA@
CONST	SEGMENT
??_C@_05FNONLPDI@match?$AA@ DB 'match', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@OGHONDIE@The?5?$CFs?5field?5needed?5to?5be?5suppli@
CONST	SEGMENT
??_C@_0DE@OGHONDIE@The?5?$CFs?5field?5needed?5to?5be?5suppli@ DB 'The %s '
	DB	'field needed to be supplied and was missing', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IGEDNDPC@supplied?$AA@
CONST	SEGMENT
??_C@_08IGEDNDPC@supplied?$AA@ DB 'supplied', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EBGGHLAO@optional?$AA@
CONST	SEGMENT
??_C@_08EBGGHLAO@optional?$AA@ DB 'optional', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KCFNOMEL@?$CFs?3unknown?5object?5type?5in?5?8polic@
CONST	SEGMENT
??_C@_0DC@KCFNOMEL@?$CFs?3unknown?5object?5type?5in?5?8polic@ DB '%s:unkn'
	DB	'own object type in ''policy'' configuration', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@KCEAFLOC@?6The?5string?5contains?5characters?5@
CONST	SEGMENT
??_C@_0EF@KCEAFLOC@?6The?5string?5contains?5characters?5@ DB 0aH, 'The st'
	DB	'ring contains characters that are illegal for the ASN.1 type', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@JDICNINH@?6emailAddress?5type?5needs?5to?5be?5o@
CONST	SEGMENT
??_C@_0DC@JDICNINH@?6emailAddress?5type?5needs?5to?5be?5o@ DB 0aH, 'email'
	DB	'Address type needs to be of type IA5STRING', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FNDAHFFM@The?5Subject?8s?5Distinguished?5Name@
CONST	SEGMENT
??_C@_0DA@FNDAHFFM@The?5Subject?8s?5Distinguished?5Name@ DB 'The Subject'''
	DB	's Distinguished Name is as follows', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NPENBAOL@malloc?5error?6?$AA@
CONST	SEGMENT
??_C@_0O@NPENBAOL@malloc?5error?6?$AA@ DB 'malloc error', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GEOLDMJL@Signature?5did?5not?5match?5the?5cert@
CONST	SEGMENT
??_C@_0CJ@GEOLDMJL@Signature?5did?5not?5match?5the?5cert@ DB 'Signature d'
	DB	'id not match the certificate', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OKNNLJOD@Signature?5ok?6?$AA@
CONST	SEGMENT
??_C@_0O@OKNNLJOD@Signature?5ok?6?$AA@ DB 'Signature ok', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@IDIGBDHM@Signature?5did?5not?5match?5the?5cert@
CONST	SEGMENT
??_C@_0DB@IDIGBDHM@Signature?5did?5not?5match?5the?5cert@ DB 'Signature d'
	DB	'id not match the certificate request', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PMPNIMKJ@Signature?5verification?5problems?4@
CONST	SEGMENT
??_C@_0CF@PMPNIMKJ@Signature?5verification?5problems?4@ DB 'Signature ver'
	DB	'ification problems....', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JDNMMHMG@error?5unpacking?5public?5key?6?$AA@
CONST	SEGMENT
??_C@_0BM@JDNMMHMG@error?5unpacking?5public?5key?6?$AA@ DB 'error unpacki'
	DB	'ng public key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NBEBGKAJ@Certificate?5request?5and?5CA?5priva@
CONST	SEGMENT
??_C@_0DF@NBEBGKAJ@Certificate?5request?5and?5CA?5priva@ DB 'Certificate '
	DB	'request and CA private key do not match', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BGGIPDIE@Check?5that?5the?5request?5matches?5t@
CONST	SEGMENT
??_C@_0CO@BGGIPDIE@Check?5that?5the?5request?5matches?5t@ DB 'Check that '
	DB	'the request matches the signature', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GLEJHDFB@Error?5reading?5certificate?5reques@
CONST	SEGMENT
??_C@_0CJ@GLEJHDFB@Error?5reading?5certificate?5reques@ DB 'Error reading'
	DB	' certificate request in %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
CONST	SEGMENT
??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@ DB 'vari'
	DB	'able lookup failed for %s::%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BINEDGJD@no?5input?5files?6?$AA@
CONST	SEGMENT
??_C@_0BA@BINEDGJD@no?5input?5files?6?$AA@ DB 'no input files', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HFKLMDGD@signing?5CRL?6?$AA@
CONST	SEGMENT
??_C@_0N@HFKLMDGD@signing?5CRL?6?$AA@ DB 'signing CRL', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LBJONHE@error?5setting?5CRL?5nextUpdate?6?$AA@
CONST	SEGMENT
??_C@_0BO@LBJONHE@error?5setting?5CRL?5nextUpdate?6?$AA@ DB 'error settin'
	DB	'g CRL nextUpdate', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LKOGJLM@making?5CRL?6?$AA@
CONST	SEGMENT
??_C@_0M@LKOGJLM@making?5CRL?6?$AA@ DB 'making CRL', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@JPCFHIM@cannot?5lookup?5how?5long?5until?5the@
CONST	SEGMENT
??_C@_0DF@JPCFHIM@cannot?5lookup?5how?5long?5until?5the@ DB 'cannot looku'
	DB	'p how long until the next CRL is issued', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BCEJBAGO@default_crl_hours?$AA@
CONST	SEGMENT
??_C@_0BC@BCEJBAGO@default_crl_hours?$AA@ DB 'default_crl_hours', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CNLEMMI@default_crl_days?$AA@
CONST	SEGMENT
??_C@_0BB@CNLEMMI@default_crl_days?$AA@ DB 'default_crl_days', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NKEONCG@error?5while?5loading?5CRL?5number?6?$AA@
CONST	SEGMENT
??_C@_0CA@NKEONCG@error?5while?5loading?5CRL?5number?6?$AA@ DB 'error whi'
	DB	'le loading CRL number', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FMEKEDFM@crlnumber?$AA@
CONST	SEGMENT
??_C@_09FMEKEDFM@crlnumber?$AA@ DB 'crlnumber', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FHNGLKKG@Error?5Loading?5CRL?5extension?5sect@
CONST	SEGMENT
??_C@_0CI@FHNGLKKG@Error?5Loading?5CRL?5extension?5sect@ DB 'Error Loadin'
	DB	'g CRL extension section %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LMJCLHAD@crl_extensions?$AA@
CONST	SEGMENT
??_C@_0P@LMJCLHAD@crl_extensions?$AA@ DB 'crl_extensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FCLJNDBO@Data?5Base?5Updated?6?$AA@
CONST	SEGMENT
??_C@_0BD@FCLJNDBO@Data?5Base?5Updated?6?$AA@ DB 'Data Base Updated', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JKCPKPL@writing?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0M@JKCPKPL@writing?5?$CFs?6?$AA@ DB 'writing %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFFKLGJF@?$CF02X?$AA@
CONST	SEGMENT
??_C@_04JFFKLGJF@?$CF02X?$AA@ DB '%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CIOHDAIP@certificate?5file?5name?5too?5long?6?$AA@
CONST	SEGMENT
??_C@_0CA@CIOHDAIP@certificate?5file?5name?5too?5long?6?$AA@ DB 'certific'
	DB	'ate file name too long', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DNHCMKMD@writing?5new?5certificates?6?$AA@
CONST	SEGMENT
??_C@_0BK@DNHCMKMD@writing?5new?5certificates?6?$AA@ DB 'writing new cert'
	DB	'ificates', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@IOAEAKNK@Write?5out?5database?5with?5?$CFd?5new?5e@
CONST	SEGMENT
??_C@_0CI@IOAEAKNK@Write?5out?5database?5with?5?$CFd?5new?5e@ DB 'Write o'
	DB	'ut database with %d new entries', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LFFBCNEP@CERTIFICATION?5CANCELED?6?$AA@
CONST	SEGMENT
??_C@_0BI@LFFBCNEP@CERTIFICATION?5CANCELED?6?$AA@ DB 'CERTIFICATION CANCE'
	DB	'LED', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CCMDMABJ@CERTIFICATION?5CANCELED?3?5I?1O?5erro@
CONST	SEGMENT
??_C@_0CD@CCMDMABJ@CERTIFICATION?5CANCELED?3?5I?1O?5erro@ DB 'CERTIFICATI'
	DB	'ON CANCELED: I/O error', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@KFBODCJH@?6?$CFd?5out?5of?5?$CFd?5certificate?5reques@
CONST	SEGMENT
??_C@_0DM@KFBODCJH@?6?$CFd?5out?5of?5?$CFd?5certificate?5reques@ DB 0aH, '%'
	DB	'd out of %d certificate requests certified, commit? [y/n]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@ DB 'Memory allocati'
	DB	'on failure', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LPAMDNLJ@unable?5to?5find?5?8section?8?5for?5?$CFs?6@
CONST	SEGMENT
??_C@_0CB@LPAMDNLJ@unable?5to?5find?5?8section?8?5for?5?$CFs?6@ DB 'unabl'
	DB	'e to find ''section'' for %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FOPOPEHK@next?5serial?5number?5is?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BK@FOPOPEHK@next?5serial?5number?5is?5?$CFs?6?$AA@ DB 'next serial'
	DB	' number is %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ELOFGAEO@next?5serial?5number?5is?500?6?$AA@
CONST	SEGMENT
??_C@_0BK@ELOFGAEO@next?5serial?5number?5is?500?6?$AA@ DB 'next serial nu'
	DB	'mber is 00', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PJANBPCG@error?5while?5loading?5serial?5numbe@
CONST	SEGMENT
??_C@_0CD@PJANBPCG@error?5while?5loading?5serial?5numbe@ DB 'error while '
	DB	'loading serial number', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@LBMHJEAI@cannot?5lookup?5how?5many?5days?5to?5c@
CONST	SEGMENT
??_C@_0CM@LBMHJEAI@cannot?5lookup?5how?5many?5days?5to?5c@ DB 'cannot loo'
	DB	'kup how many days to certify for', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GAOBGEON@default_days?$AA@
CONST	SEGMENT
??_C@_0N@GAOBGEON@default_days?$AA@ DB 'default_days', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@ECCHIHFP@end?5date?5is?5invalid?0?5it?5should?5b@
CONST	SEGMENT
??_C@_0EE@ECCHIHFP@end?5date?5is?5invalid?0?5it?5should?5b@ DB 'end date '
	DB	'is invalid, it should be YYMMDDHHMMSSZ or YYYYMMDDHHMMSSZ', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OICENKHG@default_enddate?$AA@
CONST	SEGMENT
??_C@_0BA@OICENKHG@default_enddate?$AA@ DB 'default_enddate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGEAPCOL@today?$AA@
CONST	SEGMENT
??_C@_05MGEAPCOL@today?$AA@ DB 'today', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@BGKOLOEI@start?5date?5is?5invalid?0?5it?5should@
CONST	SEGMENT
??_C@_0EG@BGKOLOEI@start?5date?5is?5invalid?0?5it?5should@ DB 'start date'
	DB	' is invalid, it should be YYMMDDHHMMSSZ or YYYYMMDDHHMMSSZ', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LHDIFPNN@default_startdate?$AA@
CONST	SEGMENT
??_C@_0BC@LHDIFPNN@default_startdate?$AA@ DB 'default_startdate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@
CONST	SEGMENT
??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@ DB 'Error Loadin'
	DB	'g extension section %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DDJOFEBJ@x509_extensions?$AA@
CONST	SEGMENT
??_C@_0BA@DDJOFEBJ@x509_extensions?$AA@ DB 'x509_extensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KCELPKEE@serial?$AA@
CONST	SEGMENT
??_C@_06KCELPKEE@serial?$AA@ DB 'serial', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BNCCCDFL@policy?5is?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0O@BNCCCDFL@policy?5is?5?$CFs?6?$AA@ DB 'policy is %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06NJNJNICG@policy?$AA@
CONST	SEGMENT
??_C@_06NJNJNICG@policy?$AA@ DB 'policy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GDPDFCPO@message?5digest?5is?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BG@GDPDFCPO@message?5digest?5is?5?$CFs?6?$AA@ DB 'message digest i'
	DB	's %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02KAJCLHKP@no?$AA@
CONST	SEGMENT
??_C@_02KAJCLHKP@no?$AA@ DB 'no', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BNJACADD@email_in_dn?$AA@
CONST	SEGMENT
??_C@_0M@BNJACADD@email_in_dn?$AA@ DB 'email_in_dn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PCPNIALC@?$CFs?5is?5an?5unsupported?5message?5dig@
CONST	SEGMENT
??_C@_0CK@PCPNIALC@?$CFs?5is?5an?5unsupported?5message?5dig@ DB '%s is an'
	DB	' unsupported message digest type', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JLOHALFC@no?5default?5digest?6?$AA@
CONST	SEGMENT
??_C@_0BD@JLOHALFC@no?5default?5digest?6?$AA@ DB 'no default digest', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GPEHKDBA@default_md?$AA@
CONST	SEGMENT
??_C@_0L@GPEHKDBA@default_md?$AA@ DB 'default_md', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLHCIBDH@default?$AA@
CONST	SEGMENT
??_C@_07DLHCIBDH@default?$AA@ DB 'default', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ICCCPLKC@extensions?$AA@
CONST	SEGMENT
??_C@_0L@ICCCPLKC@extensions?$AA@ DB 'extensions', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GJHHEJDC@Successfully?5loaded?5extensions?5f@
CONST	SEGMENT
??_C@_0CI@GJHHEJDC@Successfully?5loaded?5extensions?5f@ DB 'Successfully '
	DB	'loaded extensions file %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PFACNGKK@ERROR?3?5on?5line?5?$CFld?5of?5config?5fil@
CONST	SEGMENT
??_C@_0CI@PFACNGKK@ERROR?3?5on?5line?5?$CFld?5of?5config?5fil@ DB 'ERROR:'
	DB	' on line %ld of config file ''%s''', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JLMMFMBJ@ERROR?3?5loading?5the?5config?5file?5?8@
CONST	SEGMENT
??_C@_0CF@JLMMFMBJ@ERROR?3?5loading?5the?5config?5file?5?8@ DB 'ERROR: lo'
	DB	'ading the config file ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BKGMBKFP@Done?4?5?$CFd?5entries?5marked?5as?5expir@
CONST	SEGMENT
??_C@_0CE@BKGMBKFP@Done?4?5?$CFd?5entries?5marked?5as?5expir@ DB 'Done. %'
	DB	'd entries marked as expired', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03PNKCFLFB@old?$AA@
CONST	SEGMENT
??_C@_03PNKCFLFB@old?$AA@ DB 'old', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CLCAEGCJ@new?$AA@
CONST	SEGMENT
??_C@_03CLCAEGCJ@new?$AA@ DB 'new', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BEOKHPOI@No?5entries?5found?5to?5mark?5expired@
CONST	SEGMENT
??_C@_0CC@BEOKHPOI@No?5entries?5found?5to?5mark?5expired@ DB 'No entries '
	DB	'found to mark expired', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DHKOJLMG@Malloc?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BA@DHKOJLMG@Malloc?5failure?6?$AA@ DB 'Malloc failure', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GPBLOKCE@Updating?5?$CFs?5?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BB@GPBLOKCE@Updating?5?$CFs?5?4?4?4?6?$AA@ DB 'Updating %s ...', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EHEMHFHP@generating?5index?6?$AA@
CONST	SEGMENT
??_C@_0BC@EHEMHFHP@generating?5index?6?$AA@ DB 'generating index', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MGCGHPBH@?$CFd?5entries?5loaded?5from?5the?5datab@
CONST	SEGMENT
??_C@_0CF@MGCGHPBH@?$CFd?5entries?5loaded?5from?5the?5datab@ DB '%d entri'
	DB	'es loaded from the database', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@PDLJBMCP@entry?5?$CFd?3?5bad?5serial?5number?5char@
CONST	SEGMENT
??_C@_0EE@PDLJBMCP@entry?5?$CFd?3?5bad?5serial?5number?5char@ DB 'entry %'
	DB	'd: bad serial number characters, char pos %ld, char is ''%c'''
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DGNHGOCC@entry?5?$CFd?3?5bad?5serial?5number?5leng@
CONST	SEGMENT
??_C@_0CJ@DGNHGOCC@entry?5?$CFd?3?5bad?5serial?5number?5leng@ DB 'entry %'
	DB	'd: bad serial number length (%d)', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KJFBFOIG@entry?5?$CFd?3?5invalid?5expiry?5date?6?$AA@
CONST	SEGMENT
??_C@_0BP@KJFBFOIG@entry?5?$CFd?3?5invalid?5expiry?5date?6?$AA@ DB 'entry'
	DB	' %d: invalid expiry date', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BCAKHCIK@?5in?5entry?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0O@BCAKHCIK@?5in?5entry?5?$CFd?6?$AA@ DB ' in entry %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@GALGPOKE@entry?5?$CFd?3?5not?5revoked?5yet?0?5but?5h@
CONST	SEGMENT
??_C@_0DG@GALGPOKE@entry?5?$CFd?3?5not?5revoked?5yet?0?5but?5h@ DB 'entry'
	DB	' %d: not revoked yet, but has a revocation date', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MMFEOCD@?$CFs?5need?5to?5be?5a?5directory?6?$AA@
CONST	SEGMENT
??_C@_0BL@MMFEOCD@?$CFs?5need?5to?5be?5a?5directory?6?$AA@ DB '%s need to'
	DB	' be a directory', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LLBHJJJN@I?5am?5unable?5to?5access?5the?5?$CFs?5dir@
CONST	SEGMENT
??_C@_0CI@LLBHJJJN@I?5am?5unable?5to?5access?5the?5?$CFs?5dir@ DB 'I am u'
	DB	'nable to access the %s directory', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@MHBJEKA@there?5needs?5to?5be?5defined?5a?5dire@
CONST	SEGMENT
??_C@_0EL@MHBJEKA@there?5needs?5to?5be?5defined?5a?5dire@ DB 'there needs'
	DB	' to be defined a directory for new certificate to be placed i'
	DB	'n', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MCICMBPC@new_certs_dir?$AA@
CONST	SEGMENT
??_C@_0O@MCICMBPC@new_certs_dir?$AA@ DB 'new_certs_dir', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GNKAKOCI@Invalid?5extension?5copy?5option?3?5?$CC@
CONST	SEGMENT
??_C@_0CF@GNKAKOCI@Invalid?5extension?5copy?5option?3?5?$CC@ DB 'Invalid '
	DB	'extension copy option: "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JKMALOEE@copy_extensions?$AA@
CONST	SEGMENT
??_C@_0BA@JKMALOEE@copy_extensions?$AA@ DB 'copy_extensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BFABCJIA@Invalid?5certificate?5options?3?5?$CC?$CFs@
CONST	SEGMENT
??_C@_0CD@BFABCJIA@Invalid?5certificate?5options?3?5?$CC?$CFs@ DB 'Invali'
	DB	'd certificate options: "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MJPDBNNH@cert_opt?$AA@
CONST	SEGMENT
??_C@_08MJPDBNNH@cert_opt?$AA@ DB 'cert_opt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KALABIFI@Invalid?5name?5options?3?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BM@KALABIFI@Invalid?5name?5options?3?5?$CC?$CFs?$CC?6?$AA@ DB 'Inv'
	DB	'alid name options: "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OFOKMJGD@name_opt?$AA@
CONST	SEGMENT
??_C@_08OFOKMJGD@name_opt?$AA@ DB 'name_opt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PMPAOOFG@msie_hack?$AA@
CONST	SEGMENT
??_C@_09PMPAOOFG@msie_hack?$AA@ DB 'msie_hack', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ILAKLJGO@preserve?$AA@
CONST	SEGMENT
??_C@_08ILAKLJGO@preserve?$AA@ DB 'preserve', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DPECBGP@CA?5certificate?5and?5CA?5private?5ke@
CONST	SEGMENT
??_C@_0DA@DPECBGP@CA?5certificate?5and?5CA?5private?5ke@ DB 'CA certifica'
	DB	'te and CA private key do not match', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KDJNKNNI@CA?5certificate?$AA@
CONST	SEGMENT
??_C@_0P@KDJNKNNI@CA?5certificate?$AA@ DB 'CA certificate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LLNFCECG@certificate?$AA@
CONST	SEGMENT
??_C@_0M@LLNFCECG@certificate?$AA@ DB 'certificate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HBHFBBML@CA?5private?5key?$AA@
CONST	SEGMENT
??_C@_0P@HBHFBBML@CA?5private?5key?$AA@ DB 'CA private key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
CONST	SEGMENT
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ DB 'Error getting pass'
	DB	'word', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BCLPOPCL@private_key?$AA@
CONST	SEGMENT
??_C@_0M@BCLPOPCL@private_key?$AA@ DB 'private_key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EHONGJEE@Error?5verifying?5serial?5?$CFs?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BM@EHONGJEE@Error?5verifying?5serial?5?$CFs?$CB?6?$AA@ DB 'Error v'
	DB	'erifying serial %s!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PBOCEOLL@database?$AA@
CONST	SEGMENT
??_C@_08PBOCEOLL@database?$AA@ DB 'database', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HOGDIGGB@unique_subject?$AA@
CONST	SEGMENT
??_C@_0P@HOGDIGGB@unique_subject?$AA@ DB 'unique_subject', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICICOMAL@yes?$AA@
CONST	SEGMENT
??_C@_03ICICOMAL@yes?$AA@ DB 'yes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LHHHFLPP@utf8?$AA@
CONST	SEGMENT
??_C@_04LHHHFLPP@utf8?$AA@ DB 'utf8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PNKCABBA@Invalid?5global?5string?5mask?5setti@
CONST	SEGMENT
??_C@_0CH@PNKCABBA@Invalid?5global?5string?5mask?5setti@ DB 'Invalid glob'
	DB	'al string mask setting %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NPFHBEIA@string_mask?$AA@
CONST	SEGMENT
??_C@_0M@NPFHBEIA@string_mask?$AA@ DB 'string_mask', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OFLJHDDG@RANDFILE?$AA@
CONST	SEGMENT
??_C@_08OFLJHDDG@RANDFILE?$AA@ DB 'RANDFILE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NOLCFLKC@oid_file?$AA@
CONST	SEGMENT
??_C@_08NOLCFLKC@oid_file?$AA@ DB 'oid_file', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DGMJAJHC@ca?$AA@
CONST	SEGMENT
??_C@_02DGMJAJHC@ca?$AA@ DB 'ca', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BIKOHKFP@default_ca?$AA@
CONST	SEGMENT
??_C@_0L@BIKOHKFP@default_ca?$AA@ DB 'default_ca', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@
CONST	SEGMENT
??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@ DB 'error o'
	DB	'n line %ld of config file ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@
CONST	SEGMENT
??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@ DB 'error l'
	DB	'oading the config file ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@ DB 'Using con'
	DB	'figuration from %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@
CONST	SEGMENT
??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@ DB 'openssl.cnf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1?$AA@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1?$AA@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@ DB 'Out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
CONST	SEGMENT
??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@ DB '.\apps\ca.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@
CONST	SEGMENT
??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@ DB 'SSLEAY_CONF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@
CONST	SEGMENT
??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@ DB 'OPENSSL_CONF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NNIBNLBA@?9crl_CA_compromise?$AA@
CONST	SEGMENT
??_C@_0BD@NNIBNLBA@?9crl_CA_compromise?$AA@ DB '-crl_CA_compromise', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMJHBFJA@?9crl_compromise?$AA@
CONST	SEGMENT
??_C@_0BA@IMJHBFJA@?9crl_compromise?$AA@ DB '-crl_compromise', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BGNIOPOI@?9crl_hold?$AA@
CONST	SEGMENT
??_C@_09BGNIOPOI@?9crl_hold?$AA@ DB '-crl_hold', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EJIMBBJA@?9crl_reason?$AA@
CONST	SEGMENT
??_C@_0M@EJIMBBJA@?9crl_reason?$AA@ DB '-crl_reason', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JIFOLNCJ@?9crlexts?$AA@
CONST	SEGMENT
??_C@_08JIFOLNCJ@?9crlexts?$AA@ DB '-crlexts', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BEFMJHAN@?9updatedb?$AA@
CONST	SEGMENT
??_C@_09BEFMJHAN@?9updatedb?$AA@ DB '-updatedb', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KDLKDLMI@?9status?$AA@
CONST	SEGMENT
??_C@_07KDLKDLMI@?9status?$AA@ DB '-status', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LEGMGGCD@?9extfile?$AA@
CONST	SEGMENT
??_C@_08LEGMGGCD@?9extfile?$AA@ DB '-extfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BEOOFGDH@?9extensions?$AA@
CONST	SEGMENT
??_C@_0M@BEOOFGDH@?9extensions?$AA@ DB '-extensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICLHNOEL@?9valid?$AA@
CONST	SEGMENT
??_C@_06ICLHNOEL@?9valid?$AA@ DB '-valid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JCLPEBOD@?9revoke?$AA@
CONST	SEGMENT
??_C@_07JCLPEBOD@?9revoke?$AA@ DB '-revoke', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FDHPAOAM@?9spkac?$AA@
CONST	SEGMENT
??_C@_06FDHPAOAM@?9spkac?$AA@ DB '-spkac', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KGIDGCCC@?9ss_cert?$AA@
CONST	SEGMENT
??_C@_08KGIDGCCC@?9ss_cert?$AA@ DB '-ss_cert', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PBEJALD@?9infiles?$AA@
CONST	SEGMENT
??_C@_08PBEJALD@?9infiles?$AA@ DB '-infiles', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CBJOAJDC@?9crlsec?$AA@
CONST	SEGMENT
??_C@_07CBJOAJDC@?9crlsec?$AA@ DB '-crlsec', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JBBILJPK@?9crlhours?$AA@
CONST	SEGMENT
??_C@_09JBBILJPK@?9crlhours?$AA@ DB '-crlhours', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08IAPHBPNP@?9crldays?$AA@
CONST	SEGMENT
??_C@_08IAPHBPNP@?9crldays?$AA@ DB '-crldays', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DJPFPFBM@?9msie_hack?$AA@
CONST	SEGMENT
??_C@_0L@DJPFPFBM@?9msie_hack?$AA@ DB '-msie_hack', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HPCKLCMH@?9gencrl?$AA@
CONST	SEGMENT
??_C@_07HPCKLCMH@?9gencrl?$AA@ DB '-gencrl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NIPNLDGA@?9noemailDN?$AA@
CONST	SEGMENT
??_C@_0L@NIPNLDGA@?9noemailDN?$AA@ DB '-noemailDN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MGGGCMAJ@?9preserveDN?$AA@
CONST	SEGMENT
??_C@_0M@MGGGCMAJ@?9preserveDN?$AA@ DB '-preserveDN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06COHPCLGM@?9batch?$AA@
CONST	SEGMENT
??_C@_06COHPCLGM@?9batch?$AA@ DB '-batch', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MLJOBJAC@?9notext?$AA@
CONST	SEGMENT
??_C@_07MLJOBJAC@?9notext?$AA@ DB '-notext', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FNCAFLJP@?9sigopt?$AA@
CONST	SEGMENT
??_C@_07FNCAFLJP@?9sigopt?$AA@ DB '-sigopt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DMKGDKOP@?9outdir?$AA@
CONST	SEGMENT
??_C@_07DMKGDKOP@?9outdir?$AA@ DB '-outdir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CLPCDNOK@?9selfsign?$AA@
CONST	SEGMENT
??_C@_09CLPCDNOK@?9selfsign?$AA@ DB '-selfsign', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05DLEDECNE@?9cert?$AA@
CONST	SEGMENT
??_C@_05DLEDECNE@?9cert?$AA@ DB '-cert', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FMEKFICB@?9key?$AA@
CONST	SEGMENT
??_C@_04FMEKFICB@?9key?$AA@ DB '-key', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAHLMBGP@?9keyform?$AA@
CONST	SEGMENT
??_C@_08OAHLMBGP@?9keyform?$AA@ DB '-keyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BLHBJKMB@?9keyfile?$AA@
CONST	SEGMENT
??_C@_08BLHBJKMB@?9keyfile?$AA@ DB '-keyfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EDOEKPLG@?9policy?$AA@
CONST	SEGMENT
??_C@_07EDOEKPLG@?9policy?$AA@ DB '-policy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03MNHNKBNA@?9md?$AA@
CONST	SEGMENT
??_C@_03MNHNKBNA@?9md?$AA@ DB '-md', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05EFBFHALF@?9days?$AA@
CONST	SEGMENT
??_C@_05EFBFHALF@?9days?$AA@ DB '-days', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BOPFEEAL@?9enddate?$AA@
CONST	SEGMENT
??_C@_08BOPFEEAL@?9enddate?$AA@ DB '-enddate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DKBOBAPE@?9startdate?$AA@
CONST	SEGMENT
??_C@_0L@DKBOBAPE@?9startdate?$AA@ DB '-startdate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NIPEAEAE@?9multivalue?9rdn?$AA@
CONST	SEGMENT
??_C@_0BA@NIPEAEAE@?9multivalue?9rdn?$AA@ DB '-multivalue-rdn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PCNAFLPB@?9create_serial?$AA@
CONST	SEGMENT
??_C@_0P@PCNAFLPB@?9create_serial?$AA@ DB '-create_serial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HLKFBLKJ@?9utf8?$AA@
CONST	SEGMENT
??_C@_05HLKFBLKJ@?9utf8?$AA@ DB '-utf8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MDNNBOGG@?9subj?$AA@
CONST	SEGMENT
??_C@_05MDNNBOGG@?9subj?$AA@ DB '-subj', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IBCNGGP@?9name?$AA@
CONST	SEGMENT
??_C@_05IBCNGGP@?9name?$AA@ DB '-name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OOKHNANK@?9config?$AA@
CONST	SEGMENT
??_C@_07OOKHNANK@?9config?$AA@ DB '-config', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FBJJFDKJ@?9verbose?$AA@
CONST	SEGMENT
??_C@_08FBJJFDKJ@?9verbose?$AA@ DB '-verbose', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ca_main
_TEXT	SEGMENT
_dbfile$2$ = -1064					; size = 4
_configfile$1$ = -1064					; size = 4
_verbose$1$ = -1060					; size = 4
_serial$ = -1056					; size = 4
_db$1$ = -1052						; size = 4
_days$ = -1048						; size = 4
_extensions$2$ = -1044					; size = 4
_startdate$1$ = -1040					; size = 4
_x$ = -1036						; size = 4
_batch$1$ = -1032					; size = 4
_total$1$ = -1028					; size = 4
_total_done$1$ = -1024					; size = 4
_cert_sk$1$ = -1020					; size = 4
_sigopts$1$ = -1016					; size = 4
_pkey$1$ = -1012					; size = 4
_enddate$1$ = -1008					; size = 4
_email_dn$1$ = -1004					; size = 4
_chtype$1$ = -1000					; size = 4
_crlhours$ = -996					; size = 4
_crldays$ = -992					; size = 4
_ret$1$ = -988						; size = 4
_crlnumber$1$ = -984					; size = 4
_x509$1$ = -980						; size = 4
_argv$GSCopy$1$ = -976					; size = 4
_x$1$ = -976						; size = 4
_req$1$ = -972						; size = 4
_default_op$1$ = -968					; size = 4
_Sout$1$ = -964						; size = 4
_key$ = -960						; size = 4
_serialfile$1$ = -956					; size = 4
_md$1$ = -956						; size = 4
_def_nid$1 = -956					; size = 4
_certopt$ = -952					; size = 4
_multirdn$1$ = -948					; size = 4
_subj$1$ = -944						; size = 4
_crl_ext$1$ = -940					; size = 4
_infile$1$ = -936					; size = 4
_rev_type$2$ = -932					; size = 4
_rev_arg$1$ = -928					; size = 4
_ext_copy$ = -924					; size = 4
_nameopt$ = -920					; size = 4
_x509p$2$ = -916					; size = 4
_certfile$1$ = -916					; size = 4
_i$4$ = -912						; size = 4
_create_ser$1$ = -912					; size = 4
_gencrl$1$ = -908					; size = 4
_out$1$ = -904						; size = 4
_crl$1$ = -900						; size = 4
_errorline$ = -896					; size = 4
_policy$1$ = -892					; size = 4
_selfsign$1$ = -888					; size = 4
_dgst$1$ = -884						; size = 4
_extfile$1$ = -884					; size = 4
_outdir$1$ = -880					; size = 4
_crlnumberfile$1$ = -876				; size = 4
_output_der$1$ = -876					; size = 4
_db_attr$ = -872					; size = 4
_spkac_file$1$ = -868					; size = 4
_outfile$1$ = -864					; size = 4
_ss_cert_file$1$ = -860					; size = 4
_crlsec$1$ = -856					; size = 4
_dorevoke$1$ = -852					; size = 4
_tofree$1$ = -848					; size = 4
_Cout$1$ = -844						; size = 4
_in$1$ = -840						; size = 4
_ser_status$1$ = -836					; size = 4
_keyfile$1$ = -832					; size = 4
_passargin$1$ = -828					; size = 4
_keyform$1$ = -824					; size = 4
_doupdatedb$1$ = -820					; size = 4
_notext$1$ = -816					; size = 4
_e$1$ = -812						; size = 4
_randfile$1$ = -808					; size = 4
_free_key$1$ = -804					; size = 4
_crlctx$2 = -800					; size = 28
_ctx$3 = -800						; size = 28
_ctx$4 = -800						; size = 28
_buf$ = -772						; size = 768
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_ca_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 246
	mov	eax, 1064				; 00000428H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1064], eax
; Line 267
	xor	eax, eax
	mov	DWORD PTR _passargin$1$[esp+1064], 0
	push	ebx
	push	ebp
	push	esi
	xor	esi, esi
	mov	DWORD PTR _create_ser$1$[esp+1076], 0
; Line 323
	xor	ebp, ebp
	mov	DWORD PTR _free_key$1$[esp+1076], 0
	push	edi
	mov	edi, DWORD PTR _argv$[esp+1076]
	mov	DWORD PTR _total$1$[esp+1080], 0
	mov	DWORD PTR _total_done$1$[esp+1080], 0
	mov	DWORD PTR _ret$1$[esp+1080], 1
	mov	DWORD PTR _email_dn$1$[esp+1080], 1
	mov	DWORD PTR _req$1$[esp+1080], 0
	mov	DWORD PTR _verbose$1$[esp+1080], 0
	mov	DWORD PTR _gencrl$1$[esp+1080], 0
	mov	DWORD PTR _dorevoke$1$[esp+1080], 0
	mov	DWORD PTR _doupdatedb$1$[esp+1080], 0
	mov	DWORD PTR _crldays$[esp+1080], 0
	mov	DWORD PTR _crlhours$[esp+1080], 0
	mov	DWORD PTR _crlsec$1$[esp+1080], 0
	mov	DWORD PTR _errorline$[esp+1080], -1
	mov	DWORD PTR _configfile$1$[esp+1080], esi
	mov	DWORD PTR _md$1$[esp+1080], esi
	mov	DWORD PTR _policy$1$[esp+1080], eax
	mov	DWORD PTR _keyfile$1$[esp+1080], eax
	mov	DWORD PTR _certfile$1$[esp+1080], eax
	mov	DWORD PTR _keyform$1$[esp+1080], 3
	mov	DWORD PTR _infile$1$[esp+1080], eax
	mov	DWORD PTR _spkac_file$1$[esp+1080], eax
	mov	DWORD PTR _ss_cert_file$1$[esp+1080], eax
	mov	DWORD PTR _ser_status$1$[esp+1080], eax
	mov	DWORD PTR _pkey$1$[esp+1080], eax
	mov	DWORD PTR _output_der$1$[esp+1080], eax
	mov	DWORD PTR _outfile$1$[esp+1080], eax
	mov	DWORD PTR _outdir$1$[esp+1080], eax
	mov	DWORD PTR _extensions$2$[esp+1080], eax
	mov	DWORD PTR _extfile$1$[esp+1080], eax
	mov	DWORD PTR _subj$1$[esp+1080], eax
	mov	DWORD PTR _chtype$1$[esp+1080], 4097	; 00001001H
	mov	DWORD PTR _multirdn$1$[esp+1080], eax
	mov	DWORD PTR _crl_ext$1$[esp+1080], eax
	mov	DWORD PTR _rev_type$2$[esp+1080], eax
	mov	DWORD PTR _rev_arg$1$[esp+1080], eax
	mov	DWORD PTR _serial$[esp+1080], eax
	mov	DWORD PTR _crlnumber$1$[esp+1080], eax
	mov	DWORD PTR _startdate$1$[esp+1080], eax
	mov	DWORD PTR _enddate$1$[esp+1080], eax
	mov	DWORD PTR _days$[esp+1080], eax
	mov	DWORD PTR _batch$1$[esp+1080], eax
	mov	DWORD PTR _notext$1$[esp+1080], eax
	mov	DWORD PTR _nameopt$[esp+1080], eax
	mov	DWORD PTR _certopt$[esp+1080], eax
	mov	DWORD PTR _default_op$1$[esp+1080], 1
	mov	DWORD PTR _ext_copy$[esp+1080], eax
	mov	DWORD PTR _selfsign$1$[esp+1080], eax
	mov	DWORD PTR _x509$1$[esp+1080], eax
	mov	DWORD PTR _x$[esp+1080], eax
	mov	DWORD PTR _in$1$[esp+1080], eax
	mov	DWORD PTR _out$1$[esp+1080], eax
	mov	DWORD PTR _Sout$1$[esp+1080], eax
	mov	DWORD PTR _Cout$1$[esp+1080], eax
	mov	DWORD PTR _db$1$[esp+1080], eax
	mov	DWORD PTR _crl$1$[esp+1080], eax
	mov	DWORD PTR _cert_sk$1$[esp+1080], eax
	mov	DWORD PTR _sigopts$1$[esp+1080], eax
	mov	DWORD PTR _randfile$1$[esp+1080], eax
; Line 336
	mov	DWORD PTR _conf, eax
; Line 337
	mov	DWORD PTR _key$[esp+1080], eax
; Line 338
	mov	DWORD PTR _section, eax
; Line 340
	mov	DWORD PTR _preserve, eax
; Line 341
	mov	DWORD PTR _msie_hack, eax
; Line 342
	cmp	DWORD PTR _bio_err, eax
	jne	SHORT $LN25@ca_main
; Line 343
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN25@ca_main
; Line 344
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN25@ca_main:
; Line 346
	mov	ebx, DWORD PTR _argc$[esp+1076]
; Line 347
	add	edi, 4
	dec	ebx
	mov	DWORD PTR _argv$GSCopy$1$[esp+1080], edi
	mov	DWORD PTR _argc$[esp+1076], ebx
; Line 348
	cmp	ebx, 1
	jl	$LN154@ca_main
$LL2@ca_main:
; Line 349
	mov	esi, DWORD PTR [edi]
	mov	edx, OFFSET ??_C@_08FBJJFDKJ@?9verbose?$AA@
	mov	ecx, esi
	npad	4
$LL487@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN488@ca_main
	test	al, al
	je	SHORT $LN489@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN488@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL487@ca_main
$LN489@ca_main:
	xor	eax, eax
	jmp	SHORT $LN490@ca_main
$LN488@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN490@ca_main:
	test	eax, eax
	jne	SHORT $LN26@ca_main
; Line 350
	mov	DWORD PTR _verbose$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN26@ca_main:
; Line 351
	mov	edx, OFFSET ??_C@_07OOKHNANK@?9config?$AA@
	mov	ecx, esi
	npad	3
$LL491@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN492@ca_main
	test	al, al
	je	SHORT $LN493@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN492@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL491@ca_main
$LN493@ca_main:
	xor	eax, eax
	jmp	SHORT $LN494@ca_main
$LN492@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN494@ca_main:
	test	eax, eax
	jne	SHORT $LN28@ca_main
; Line 352
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 354
	mov	esi, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _configfile$1$[esp+1080], esi
	jmp	$LN152@ca_main
$LN28@ca_main:
; Line 355
	mov	edx, OFFSET ??_C@_05IBCNGGP@?9name?$AA@
	mov	ecx, esi
	npad	7
$LL495@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN496@ca_main
	test	al, al
	je	SHORT $LN497@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN496@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL495@ca_main
$LN497@ca_main:
	xor	eax, eax
	jmp	SHORT $LN498@ca_main
$LN496@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN498@ca_main:
	test	eax, eax
	jne	SHORT $LN31@ca_main
; Line 356
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 358
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _section, eax
	jmp	$LN700@ca_main
$LN31@ca_main:
; Line 359
	mov	edx, OFFSET ??_C@_05MDNNBOGG@?9subj?$AA@
	mov	ecx, esi
	npad	6
$LL499@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN500@ca_main
	test	al, al
	je	SHORT $LN501@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN500@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL499@ca_main
$LN501@ca_main:
	xor	eax, eax
	jmp	SHORT $LN502@ca_main
$LN500@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN502@ca_main:
	test	eax, eax
	jne	SHORT $LN34@ca_main
; Line 360
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 362
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _subj$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN34@ca_main:
; Line 364
	mov	edx, OFFSET ??_C@_05HLKFBLKJ@?9utf8?$AA@
	mov	ecx, esi
	npad	4
$LL503@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN504@ca_main
	test	al, al
	je	SHORT $LN505@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN504@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL503@ca_main
$LN505@ca_main:
	xor	eax, eax
	jmp	SHORT $LN506@ca_main
$LN504@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN506@ca_main:
	test	eax, eax
	jne	SHORT $LN37@ca_main
; Line 365
	mov	DWORD PTR _chtype$1$[esp+1080], 4096	; 00001000H
	jmp	$LN700@ca_main
$LN37@ca_main:
; Line 366
	mov	edx, OFFSET ??_C@_0P@PCNAFLPB@?9create_serial?$AA@
	mov	ecx, esi
	npad	3
$LL507@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN508@ca_main
	test	al, al
	je	SHORT $LN509@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN508@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL507@ca_main
$LN509@ca_main:
	xor	eax, eax
	jmp	SHORT $LN510@ca_main
$LN508@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN510@ca_main:
	test	eax, eax
	jne	SHORT $LN39@ca_main
; Line 367
	mov	DWORD PTR _create_ser$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN39@ca_main:
; Line 368
	mov	edx, OFFSET ??_C@_0BA@NIPEAEAE@?9multivalue?9rdn?$AA@
	mov	ecx, esi
$LL511@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN512@ca_main
	test	al, al
	je	SHORT $LN513@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN512@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL511@ca_main
$LN513@ca_main:
	xor	eax, eax
	jmp	SHORT $LN514@ca_main
$LN512@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN514@ca_main:
	test	eax, eax
	jne	SHORT $LN41@ca_main
; Line 369
	mov	DWORD PTR _multirdn$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN41@ca_main:
; Line 370
	mov	edx, OFFSET ??_C@_0L@DKBOBAPE@?9startdate?$AA@
	mov	ecx, esi
$LL515@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN516@ca_main
	test	al, al
	je	SHORT $LN517@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN516@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL515@ca_main
$LN517@ca_main:
	xor	eax, eax
	jmp	SHORT $LN518@ca_main
$LN516@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN518@ca_main:
	test	eax, eax
	jne	SHORT $LN43@ca_main
; Line 371
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 373
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _startdate$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN43@ca_main:
; Line 374
	mov	edx, OFFSET ??_C@_08BOPFEEAL@?9enddate?$AA@
	mov	ecx, esi
	npad	7
$LL519@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN520@ca_main
	test	al, al
	je	SHORT $LN521@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN520@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL519@ca_main
$LN521@ca_main:
	xor	eax, eax
	jmp	SHORT $LN522@ca_main
$LN520@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN522@ca_main:
	test	eax, eax
	jne	SHORT $LN46@ca_main
; Line 375
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 377
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _enddate$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN46@ca_main:
; Line 378
	mov	edx, OFFSET ??_C@_05EFBFHALF@?9days?$AA@
	mov	ecx, esi
	npad	7
$LL523@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN524@ca_main
	test	al, al
	je	SHORT $LN525@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN524@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL523@ca_main
$LN525@ca_main:
	xor	eax, eax
	jmp	SHORT $LN526@ca_main
$LN524@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN526@ca_main:
	test	eax, eax
	jne	SHORT $LN49@ca_main
; Line 379
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 381
	push	DWORD PTR [edi+4]
	add	edi, 4
	call	DWORD PTR __imp__atoi
	add	esp, 4
	mov	DWORD PTR _days$[esp+1080], eax
	jmp	$LN700@ca_main
$LN49@ca_main:
; Line 382
	mov	edx, OFFSET ??_C@_03MNHNKBNA@?9md?$AA@
	mov	ecx, esi
$LL527@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN528@ca_main
	test	al, al
	je	SHORT $LN529@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN528@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL527@ca_main
$LN529@ca_main:
	xor	eax, eax
	jmp	SHORT $LN530@ca_main
$LN528@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN530@ca_main:
	test	eax, eax
	jne	SHORT $LN52@ca_main
; Line 383
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 385
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _md$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN52@ca_main:
; Line 386
	mov	edx, OFFSET ??_C@_07EDOEKPLG@?9policy?$AA@
	mov	ecx, esi
	npad	5
$LL531@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN532@ca_main
	test	al, al
	je	SHORT $LN533@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN532@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL531@ca_main
$LN533@ca_main:
	xor	eax, eax
	jmp	SHORT $LN534@ca_main
$LN532@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN534@ca_main:
	test	eax, eax
	jne	SHORT $LN55@ca_main
; Line 387
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 389
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _policy$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN55@ca_main:
; Line 390
	mov	edx, OFFSET ??_C@_08BLHBJKMB@?9keyfile?$AA@
	mov	ecx, esi
	npad	4
$LL535@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN536@ca_main
	test	al, al
	je	SHORT $LN537@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN536@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL535@ca_main
$LN537@ca_main:
	xor	eax, eax
	jmp	SHORT $LN538@ca_main
$LN536@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN538@ca_main:
	test	eax, eax
	jne	SHORT $LN58@ca_main
; Line 391
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 393
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _keyfile$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN58@ca_main:
; Line 394
	mov	edx, OFFSET ??_C@_08OAHLMBGP@?9keyform?$AA@
	mov	ecx, esi
	npad	4
$LL539@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN540@ca_main
	test	al, al
	je	SHORT $LN541@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN540@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL539@ca_main
$LN541@ca_main:
	xor	eax, eax
	jmp	SHORT $LN542@ca_main
$LN540@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN542@ca_main:
	test	eax, eax
	jne	SHORT $LN61@ca_main
; Line 395
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 397
	push	DWORD PTR [edi+4]
	add	edi, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _keyform$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN61@ca_main:
; Line 398
	mov	edx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	ecx, esi
$LL543@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN544@ca_main
	test	al, al
	je	SHORT $LN545@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN544@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL543@ca_main
$LN545@ca_main:
	xor	eax, eax
	jmp	SHORT $LN546@ca_main
$LN544@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN546@ca_main:
	test	eax, eax
	jne	SHORT $LN64@ca_main
; Line 399
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 401
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _passargin$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN64@ca_main:
; Line 402
	mov	edx, OFFSET ??_C@_04FMEKFICB@?9key?$AA@
	mov	ecx, esi
$LL547@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN548@ca_main
	test	al, al
	je	SHORT $LN549@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN548@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL547@ca_main
$LN549@ca_main:
	xor	eax, eax
	jmp	SHORT $LN550@ca_main
$LN548@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN550@ca_main:
	test	eax, eax
	jne	SHORT $LN67@ca_main
; Line 403
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 405
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _key$[esp+1080], eax
	jmp	$LN700@ca_main
$LN67@ca_main:
; Line 406
	mov	edx, OFFSET ??_C@_05DLEDECNE@?9cert?$AA@
	mov	ecx, esi
	npad	7
$LL551@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN552@ca_main
	test	al, al
	je	SHORT $LN553@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN552@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL551@ca_main
$LN553@ca_main:
	xor	eax, eax
	jmp	SHORT $LN554@ca_main
$LN552@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN554@ca_main:
	test	eax, eax
	jne	SHORT $LN70@ca_main
; Line 407
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 409
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _certfile$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN70@ca_main:
; Line 410
	mov	edx, OFFSET ??_C@_09CLPCDNOK@?9selfsign?$AA@
	mov	ecx, esi
	npad	4
$LL555@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN556@ca_main
	test	al, al
	je	SHORT $LN557@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN556@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL555@ca_main
$LN557@ca_main:
	xor	eax, eax
	jmp	SHORT $LN558@ca_main
$LN556@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN558@ca_main:
	test	eax, eax
	jne	SHORT $LN73@ca_main
; Line 411
	mov	DWORD PTR _selfsign$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN73@ca_main:
; Line 412
	mov	edx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	ecx, esi
$LL559@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN560@ca_main
	test	al, al
	je	SHORT $LN561@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN560@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL559@ca_main
$LN561@ca_main:
	xor	eax, eax
	jmp	SHORT $LN562@ca_main
$LN560@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN562@ca_main:
	test	eax, eax
	jne	SHORT $LN75@ca_main
; Line 413
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 415
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _infile$1$[esp+1080], eax
; Line 416
	mov	DWORD PTR _req$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN75@ca_main:
; Line 417
	mov	edx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	ecx, esi
$LL563@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN564@ca_main
	test	al, al
	je	SHORT $LN565@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN564@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL563@ca_main
$LN565@ca_main:
	xor	eax, eax
	jmp	SHORT $LN566@ca_main
$LN564@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN566@ca_main:
	test	eax, eax
	jne	SHORT $LN78@ca_main
; Line 418
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 420
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _outfile$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN78@ca_main:
; Line 421
	mov	edx, OFFSET ??_C@_07DMKGDKOP@?9outdir?$AA@
	mov	ecx, esi
$LL567@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN568@ca_main
	test	al, al
	je	SHORT $LN569@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN568@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL567@ca_main
$LN569@ca_main:
	xor	eax, eax
	jmp	SHORT $LN570@ca_main
$LN568@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN570@ca_main:
	test	eax, eax
	jne	SHORT $LN81@ca_main
; Line 422
	dec	ebx
	cmp	ebx, 1
	jl	SHORT $bad$714
; Line 424
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _outdir$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN81@ca_main:
; Line 425
	mov	edx, OFFSET ??_C@_07FNCAFLJP@?9sigopt?$AA@
	mov	ecx, esi
$LL571@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN572@ca_main
	test	al, al
	je	SHORT $LN573@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN572@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL571@ca_main
$LN573@ca_main:
	xor	eax, eax
	jmp	SHORT $LN574@ca_main
$LN572@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN574@ca_main:
	test	eax, eax
	jne	$LN84@ca_main
; Line 426
	dec	ebx
	cmp	ebx, 1
	jl	SHORT $bad$714
; Line 428
	mov	eax, DWORD PTR _sigopts$1$[esp+1080]
	test	eax, eax
	jne	SHORT $LN479@ca_main
; Line 429
	call	_sk_new_null
	mov	DWORD PTR _sigopts$1$[esp+1080], eax
; Line 430
	test	eax, eax
	je	SHORT $bad$714
$LN479@ca_main:
	push	DWORD PTR [edi+4]
	add	edi, 4
	push	eax
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	$LN700@ca_main
$bad$714:
; Line 529
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 540
	mov	eax, DWORD PTR _ca_usage
	add	esp, 12					; 0000000cH
	mov	esi, OFFSET _ca_usage
	test	eax, eax
	je	$LN369@ca_main
	npad	2
$LL6@ca_main:
; Line 541
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	eax, DWORD PTR [esi+4]
	lea	esi, DWORD PTR [esi+4]
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LL6@ca_main
; Line 542
	jmp	$LN369@ca_main
$LN84@ca_main:
; Line 432
	mov	edx, OFFSET ??_C@_07MLJOBJAC@?9notext?$AA@
	mov	ecx, esi
	npad	6
$LL575@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN576@ca_main
	test	al, al
	je	SHORT $LN577@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN576@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL575@ca_main
$LN577@ca_main:
	xor	eax, eax
	jmp	SHORT $LN578@ca_main
$LN576@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN578@ca_main:
	test	eax, eax
	jne	SHORT $LN90@ca_main
; Line 433
	mov	DWORD PTR _notext$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN90@ca_main:
; Line 434
	mov	edx, OFFSET ??_C@_06COHPCLGM@?9batch?$AA@
	mov	ecx, esi
$LL579@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN580@ca_main
	test	al, al
	je	SHORT $LN581@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN580@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL579@ca_main
$LN581@ca_main:
	xor	eax, eax
	jmp	SHORT $LN582@ca_main
$LN580@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN582@ca_main:
	test	eax, eax
	jne	SHORT $LN92@ca_main
; Line 435
	mov	DWORD PTR _batch$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN92@ca_main:
; Line 436
	mov	edx, OFFSET ??_C@_0M@MGGGCMAJ@?9preserveDN?$AA@
	mov	ecx, esi
	npad	3
$LL583@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN584@ca_main
	test	al, al
	je	SHORT $LN585@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN584@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL583@ca_main
$LN585@ca_main:
	xor	eax, eax
	jmp	SHORT $LN586@ca_main
$LN584@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN586@ca_main:
	test	eax, eax
	jne	SHORT $LN94@ca_main
; Line 437
	mov	DWORD PTR _preserve, 1
	jmp	$LN700@ca_main
$LN94@ca_main:
; Line 438
	mov	edx, OFFSET ??_C@_0L@NIPNLDGA@?9noemailDN?$AA@
	mov	ecx, esi
	npad	1
$LL587@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN588@ca_main
	test	al, al
	je	SHORT $LN589@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN588@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL587@ca_main
$LN589@ca_main:
	xor	eax, eax
	jmp	SHORT $LN590@ca_main
$LN588@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN590@ca_main:
	test	eax, eax
	jne	SHORT $LN96@ca_main
; Line 439
	mov	DWORD PTR _email_dn$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN96@ca_main:
; Line 440
	mov	edx, OFFSET ??_C@_07HPCKLCMH@?9gencrl?$AA@
	mov	ecx, esi
	npad	7
$LL591@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN592@ca_main
	test	al, al
	je	SHORT $LN593@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN592@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL591@ca_main
$LN593@ca_main:
	xor	eax, eax
	jmp	SHORT $LN594@ca_main
$LN592@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN594@ca_main:
	test	eax, eax
	jne	SHORT $LN98@ca_main
; Line 441
	mov	DWORD PTR _gencrl$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN98@ca_main:
; Line 442
	mov	edx, OFFSET ??_C@_0L@DJPFPFBM@?9msie_hack?$AA@
	mov	ecx, esi
$LL595@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN596@ca_main
	test	al, al
	je	SHORT $LN597@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN596@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL595@ca_main
$LN597@ca_main:
	xor	eax, eax
	jmp	SHORT $LN598@ca_main
$LN596@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN598@ca_main:
	test	eax, eax
	jne	SHORT $LN100@ca_main
; Line 443
	mov	DWORD PTR _msie_hack, 1
	jmp	$LN700@ca_main
$LN100@ca_main:
; Line 444
	mov	edx, OFFSET ??_C@_08IAPHBPNP@?9crldays?$AA@
	mov	ecx, esi
	npad	1
$LL599@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN600@ca_main
	test	al, al
	je	SHORT $LN601@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN600@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL599@ca_main
$LN601@ca_main:
	xor	eax, eax
	jmp	SHORT $LN602@ca_main
$LN600@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN602@ca_main:
	test	eax, eax
	jne	SHORT $LN102@ca_main
; Line 445
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 447
	push	DWORD PTR [edi+4]
	add	edi, 4
	call	DWORD PTR __imp__atol
	add	esp, 4
	mov	DWORD PTR _crldays$[esp+1080], eax
	jmp	$LN700@ca_main
$LN102@ca_main:
; Line 448
	mov	edx, OFFSET ??_C@_09JBBILJPK@?9crlhours?$AA@
	mov	ecx, esi
$LL603@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN604@ca_main
	test	al, al
	je	SHORT $LN605@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN604@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL603@ca_main
$LN605@ca_main:
	xor	eax, eax
	jmp	SHORT $LN606@ca_main
$LN604@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN606@ca_main:
	test	eax, eax
	jne	SHORT $LN105@ca_main
; Line 449
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 451
	push	DWORD PTR [edi+4]
	add	edi, 4
	call	DWORD PTR __imp__atol
	add	esp, 4
	mov	DWORD PTR _crlhours$[esp+1080], eax
	jmp	$LN700@ca_main
$LN105@ca_main:
; Line 452
	mov	edx, OFFSET ??_C@_07CBJOAJDC@?9crlsec?$AA@
	mov	ecx, esi
$LL607@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN608@ca_main
	test	al, al
	je	SHORT $LN609@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN608@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL607@ca_main
$LN609@ca_main:
	xor	eax, eax
	jmp	SHORT $LN610@ca_main
$LN608@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN610@ca_main:
	test	eax, eax
	jne	SHORT $LN108@ca_main
; Line 453
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 455
	push	DWORD PTR [edi+4]
	add	edi, 4
	call	DWORD PTR __imp__atol
	add	esp, 4
	mov	DWORD PTR _crlsec$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN108@ca_main:
; Line 456
	mov	edx, OFFSET ??_C@_08PBEJALD@?9infiles?$AA@
	mov	ecx, esi
	npad	7
$LL611@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN612@ca_main
	test	al, al
	je	SHORT $LN613@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN612@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL611@ca_main
$LN613@ca_main:
	xor	eax, eax
	jmp	SHORT $LN614@ca_main
$LN612@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN614@ca_main:
	test	eax, eax
	je	$LN415@ca_main
; Line 461
	mov	edx, OFFSET ??_C@_08KGIDGCCC@?9ss_cert?$AA@
	mov	ecx, esi
$LL615@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN616@ca_main
	test	al, al
	je	SHORT $LN617@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN616@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL615@ca_main
$LN617@ca_main:
	xor	eax, eax
	jmp	SHORT $LN618@ca_main
$LN616@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN618@ca_main:
	test	eax, eax
	jne	SHORT $LN113@ca_main
; Line 462
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 464
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _ss_cert_file$1$[esp+1080], eax
; Line 465
	mov	DWORD PTR _req$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN113@ca_main:
; Line 466
	mov	edx, OFFSET ??_C@_06FDHPAOAM@?9spkac?$AA@
	mov	ecx, esi
$LL619@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN620@ca_main
	test	al, al
	je	SHORT $LN621@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN620@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL619@ca_main
$LN621@ca_main:
	xor	eax, eax
	jmp	SHORT $LN622@ca_main
$LN620@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN622@ca_main:
	test	eax, eax
	jne	SHORT $LN116@ca_main
; Line 467
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 469
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _spkac_file$1$[esp+1080], eax
; Line 470
	mov	DWORD PTR _req$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN116@ca_main:
; Line 471
	mov	edx, OFFSET ??_C@_07JCLPEBOD@?9revoke?$AA@
	mov	ecx, esi
	npad	4
$LL623@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN624@ca_main
	test	al, al
	je	SHORT $LN625@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN624@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL623@ca_main
$LN625@ca_main:
	xor	eax, eax
	jmp	SHORT $LN626@ca_main
$LN624@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN626@ca_main:
	test	eax, eax
	jne	SHORT $LN119@ca_main
; Line 472
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 474
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _infile$1$[esp+1080], eax
; Line 475
	mov	DWORD PTR _dorevoke$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN119@ca_main:
; Line 476
	mov	edx, OFFSET ??_C@_06ICLHNOEL@?9valid?$AA@
	mov	ecx, esi
$LL627@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN628@ca_main
	test	al, al
	je	SHORT $LN629@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN628@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL627@ca_main
$LN629@ca_main:
	xor	eax, eax
	jmp	SHORT $LN630@ca_main
$LN628@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN630@ca_main:
	test	eax, eax
	jne	SHORT $LN122@ca_main
; Line 477
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 479
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _infile$1$[esp+1080], eax
; Line 480
	mov	DWORD PTR _dorevoke$1$[esp+1080], 2
	jmp	$LN700@ca_main
$LN122@ca_main:
; Line 481
	mov	edx, OFFSET ??_C@_0M@BEOOFGDH@?9extensions?$AA@
	mov	ecx, esi
	npad	2
$LL631@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN632@ca_main
	test	al, al
	je	SHORT $LN633@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN632@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL631@ca_main
$LN633@ca_main:
	xor	eax, eax
	jmp	SHORT $LN634@ca_main
$LN632@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN634@ca_main:
	test	eax, eax
	jne	SHORT $LN125@ca_main
; Line 482
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 484
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _extensions$2$[esp+1080], eax
	jmp	$LN700@ca_main
$LN125@ca_main:
; Line 485
	mov	edx, OFFSET ??_C@_08LEGMGGCD@?9extfile?$AA@
	mov	ecx, esi
	npad	7
$LL635@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN636@ca_main
	test	al, al
	je	SHORT $LN637@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN636@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL635@ca_main
$LN637@ca_main:
	xor	eax, eax
	jmp	SHORT $LN638@ca_main
$LN636@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN638@ca_main:
	test	eax, eax
	jne	SHORT $LN128@ca_main
; Line 486
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 488
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _extfile$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN128@ca_main:
; Line 489
	mov	edx, OFFSET ??_C@_07KDLKDLMI@?9status?$AA@
	mov	ecx, esi
	npad	4
$LL639@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN640@ca_main
	test	al, al
	je	SHORT $LN641@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN640@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL639@ca_main
$LN641@ca_main:
	xor	eax, eax
	jmp	SHORT $LN642@ca_main
$LN640@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN642@ca_main:
	test	eax, eax
	jne	SHORT $LN131@ca_main
; Line 490
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 492
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _ser_status$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN131@ca_main:
; Line 493
	mov	edx, OFFSET ??_C@_09BEFMJHAN@?9updatedb?$AA@
	mov	ecx, esi
	npad	4
$LL643@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN644@ca_main
	test	al, al
	je	SHORT $LN645@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN644@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL643@ca_main
$LN645@ca_main:
	xor	eax, eax
	jmp	SHORT $LN646@ca_main
$LN644@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN646@ca_main:
	test	eax, eax
	jne	SHORT $LN134@ca_main
; Line 494
	mov	DWORD PTR _doupdatedb$1$[esp+1080], 1
	jmp	$LN700@ca_main
$LN134@ca_main:
; Line 495
	mov	edx, OFFSET ??_C@_08JIFOLNCJ@?9crlexts?$AA@
	mov	ecx, esi
$LL647@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN648@ca_main
	test	al, al
	je	SHORT $LN649@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN648@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL647@ca_main
$LN649@ca_main:
	xor	eax, eax
	jmp	SHORT $LN650@ca_main
$LN648@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN650@ca_main:
	test	eax, eax
	jne	SHORT $LN136@ca_main
; Line 496
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 498
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _crl_ext$1$[esp+1080], eax
	jmp	$LN700@ca_main
$LN136@ca_main:
; Line 499
	mov	edx, OFFSET ??_C@_0M@EJIMBBJA@?9crl_reason?$AA@
	mov	ecx, esi
	npad	4
$LL651@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN652@ca_main
	test	al, al
	je	SHORT $LN653@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN652@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL651@ca_main
$LN653@ca_main:
	xor	eax, eax
	jmp	SHORT $LN654@ca_main
$LN652@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN654@ca_main:
	test	eax, eax
	jne	SHORT $LN139@ca_main
; Line 500
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 502
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _rev_arg$1$[esp+1080], eax
; Line 503
	mov	DWORD PTR _rev_type$2$[esp+1080], 1
	jmp	$LN700@ca_main
$LN139@ca_main:
; Line 504
	mov	edx, OFFSET ??_C@_09BGNIOPOI@?9crl_hold?$AA@
	mov	ecx, esi
$LL655@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN656@ca_main
	test	al, al
	je	SHORT $LN657@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN656@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL655@ca_main
$LN657@ca_main:
	xor	eax, eax
	jmp	SHORT $LN658@ca_main
$LN656@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN658@ca_main:
	test	eax, eax
	jne	SHORT $LN142@ca_main
; Line 505
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 507
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _rev_arg$1$[esp+1080], eax
; Line 508
	mov	DWORD PTR _rev_type$2$[esp+1080], 2
	jmp	$LN700@ca_main
$LN142@ca_main:
; Line 509
	mov	edx, OFFSET ??_C@_0BA@IMJHBFJA@?9crl_compromise?$AA@
	mov	ecx, esi
	npad	2
$LL659@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN660@ca_main
	test	al, al
	je	SHORT $LN661@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN660@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL659@ca_main
$LN661@ca_main:
	xor	eax, eax
	jmp	SHORT $LN662@ca_main
$LN660@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN662@ca_main:
	test	eax, eax
	jne	SHORT $LN145@ca_main
; Line 510
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 512
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _rev_arg$1$[esp+1080], eax
; Line 513
	mov	DWORD PTR _rev_type$2$[esp+1080], 3
	jmp	$LN700@ca_main
$LN145@ca_main:
; Line 514
	mov	edx, OFFSET ??_C@_0BD@NNIBNLBA@?9crl_CA_compromise?$AA@
	mov	ecx, esi
$LL663@ca_main:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN664@ca_main
	test	al, al
	je	SHORT $LN665@ca_main
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN664@ca_main
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL663@ca_main
$LN665@ca_main:
	xor	eax, eax
	jmp	SHORT $LN666@ca_main
$LN664@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN666@ca_main:
	test	eax, eax
	jne	SHORT $LN148@ca_main
; Line 515
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 517
	mov	eax, DWORD PTR [edi+4]
	add	edi, 4
	mov	DWORD PTR _rev_arg$1$[esp+1080], eax
; Line 518
	mov	DWORD PTR _rev_type$2$[esp+1080], 4
; Line 519
	jmp	SHORT $LN700@ca_main
$LN148@ca_main:
; Line 521
	mov	eax, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	npad	7
$LL667@ca_main:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN668@ca_main
	test	cl, cl
	je	SHORT $LN669@ca_main
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN668@ca_main
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL667@ca_main
$LN669@ca_main:
	xor	eax, eax
	jmp	SHORT $LN670@ca_main
$LN668@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN670@ca_main:
	test	eax, eax
	jne	$bad$714
; Line 522
	dec	ebx
	cmp	ebx, 1
	jl	$bad$714
; Line 524
	mov	ebp, DWORD PTR [edi+4]
	add	edi, 4
$LN700@ca_main:
	mov	esi, DWORD PTR _configfile$1$[esp+1080]
$LN152@ca_main:
; Line 533
	dec	ebx
; Line 534
	add	edi, 4
	mov	DWORD PTR _argc$[esp+1076], ebx
	mov	DWORD PTR _argv$GSCopy$1$[esp+1080], edi
	cmp	ebx, 1
	jge	$LL2@ca_main
; Line 1370
	jmp	SHORT $LN154@ca_main
$LN415@ca_main:
	mov	esi, DWORD PTR _configfile$1$[esp+1080]
; Line 457
	dec	ebx
; Line 458
	add	edi, 4
	mov	DWORD PTR _argc$[esp+1076], ebx
	mov	DWORD PTR _argv$GSCopy$1$[esp+1080], edi
; Line 459
	mov	DWORD PTR _req$1$[esp+1080], 1
$LN154@ca_main:
; Line 545
	call	_ERR_load_crypto_strings
; Line 548
	xor	ebx, ebx
	mov	DWORD PTR _tofree$1$[esp+1080], ebx
; Line 549
	test	esi, esi
	jne	$LN157@ca_main
; Line 550
	mov	esi, DWORD PTR __imp__getenv
	push	OFFSET ??_C@_0N@JPGHCLFD@OPENSSL_CONF?$AA@
	call	esi
	add	esp, 4
	mov	DWORD PTR _configfile$1$[esp+1080], eax
; Line 551
	test	eax, eax
	jne	$LN692@ca_main
; Line 552
	push	OFFSET ??_C@_0M@JALBFNKB@SSLEAY_CONF?$AA@
	call	esi
	mov	esi, eax
	add	esp, 4
; Line 553
	test	esi, esi
	jne	SHORT $LN157@ca_main
; Line 554
	call	_X509_get_default_cert_area
	mov	edi, eax
; Line 566
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL671@ca_main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL671@ca_main
	sub	ecx, edx
; Line 567
	push	567					; 00000237H
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	lea	esi, DWORD PTR [ecx+13]
	push	esi
	call	_CRYPTO_malloc
	mov	ebx, eax
	mov	DWORD PTR _tofree$1$[esp+1092], eax
	add	esp, 12					; 0000000cH
; Line 568
	test	ebx, ebx
	jne	SHORT $LN158@ca_main
; Line 569
	push	OFFSET ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 570
	jmp	$LN369@ca_main
$LN158@ca_main:
; Line 572
	push	esi
	push	edi
	push	ebx
	call	_BUF_strlcpy
; Line 573
	push	esi
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	push	ebx
	call	_BUF_strlcat
; Line 575
	push	esi
	push	OFFSET ??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@
	push	ebx
	call	_BUF_strlcat
	add	esp, 36					; 00000024H
; Line 576
	mov	esi, ebx
	jmp	SHORT $LN157@ca_main
$LN692@ca_main:
	mov	esi, DWORD PTR _configfile$1$[esp+1080]
$LN157@ca_main:
; Line 579
	push	esi
	push	OFFSET ??_C@_0BN@DBMBACJB@Using?5configuration?5from?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 580
	push	0
	call	_NCONF_new
; Line 581
	lea	ecx, DWORD PTR _errorline$[esp+1096]
	mov	DWORD PTR _conf, eax
	push	ecx
	push	esi
	push	eax
	call	_NCONF_load
	add	esp, 28					; 0000001cH
	test	eax, eax
	jg	SHORT $LN159@ca_main
; Line 582
	mov	eax, DWORD PTR _errorline$[esp+1080]
; Line 583
	push	esi
	test	eax, eax
	jg	SHORT $LN160@ca_main
	push	OFFSET ??_C@_0CE@NCMMMAJM@error?5loading?5the?5config?5file?5?8?$CF@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	$err$715
$LN160@ca_main:
; Line 586
	push	eax
	push	OFFSET ??_C@_0CH@MPAIMKJO@error?5on?5line?5?$CFld?5of?5config?5file@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 588
	jmp	$err$715
$LN159@ca_main:
; Line 590
	test	ebx, ebx
	je	SHORT $LN162@ca_main
; Line 591
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
; Line 592
	mov	DWORD PTR _tofree$1$[esp+1080], 0
$LN162@ca_main:
; Line 595
	push	DWORD PTR _conf
	push	DWORD PTR _bio_err
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$err$715
; Line 599
	push	0
	push	ebp
	push	DWORD PTR _bio_err
	call	_setup_engine
	add	esp, 12					; 0000000cH
	mov	ebx, eax
; Line 603
	cmp	DWORD PTR _section, 0
	mov	DWORD PTR _e$1$[esp+1080], ebx
	jne	SHORT $LN165@ca_main
; Line 604
	push	OFFSET ??_C@_0L@BIKOHKFP@default_ca?$AA@
	push	OFFSET ??_C@_02DGMJAJHC@ca?$AA@
	push	DWORD PTR _conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _section, eax
; Line 605
	test	eax, eax
	jne	SHORT $LN165@ca_main
; Line 606
	push	OFFSET ??_C@_0L@BIKOHKFP@default_ca?$AA@
	push	OFFSET ??_C@_02DGMJAJHC@ca?$AA@
	call	_lookup_fail
	add	esp, 8
; Line 607
	jmp	$err$715
$LN165@ca_main:
; Line 611
	mov	eax, DWORD PTR _conf
	test	eax, eax
	je	SHORT $LN171@ca_main
; Line 612
	push	OFFSET ??_C@_08NOLCFLKC@oid_file?$AA@
	push	0
	push	eax
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 613
	test	eax, eax
	jne	SHORT $LN478@ca_main
; Line 614
	call	_ERR_clear_error
; Line 615
	jmp	SHORT $LN170@ca_main
$LN478@ca_main:
; Line 618
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	eax
	call	_BIO_new_file
	mov	esi, eax
	add	esp, 8
; Line 619
	test	esi, esi
	jne	SHORT $LN169@ca_main
; Line 624
	call	_ERR_clear_error
; Line 625
	jmp	SHORT $LN170@ca_main
$LN169@ca_main:
; Line 626
	push	esi
	call	_OBJ_create_objects
; Line 627
	push	esi
	call	_BIO_free
	add	esp, 8
$LN170@ca_main:
; Line 630
	push	DWORD PTR _conf
	push	DWORD PTR _bio_err
	call	_add_oid_section
	add	esp, 8
	test	eax, eax
	je	$LN182@ca_main
; Line 632
	mov	eax, DWORD PTR _conf
$LN171@ca_main:
; Line 636
	push	OFFSET ??_C@_08OFLJHDDG@RANDFILE?$AA@
	push	OFFSET ??_C@_02DGMJAJHC@ca?$AA@
	push	eax
	call	_NCONF_get_string
	mov	ebp, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _randfile$1$[esp+1080], ebp
; Line 637
	test	ebp, ebp
	jne	SHORT $LN172@ca_main
; Line 638
	call	_ERR_clear_error
$LN172@ca_main:
; Line 639
	push	0
	push	DWORD PTR _bio_err
	push	ebp
	call	_app_RAND_load_file
; Line 641
	push	OFFSET ??_C@_0M@NPFHBEIA@string_mask?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 24					; 00000018H
; Line 642
	test	esi, esi
	jne	SHORT $LN477@ca_main
; Line 643
	call	_ERR_clear_error
$LN174@ca_main:
; Line 650
	mov	ebp, DWORD PTR _chtype$1$[esp+1080]
	cmp	ebp, 4096				; 00001000H
	je	$LN178@ca_main
; Line 651
	push	OFFSET ??_C@_04LHHHFLPP@utf8?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 652
	test	eax, eax
	jne	SHORT $LN176@ca_main
; Line 653
	call	_ERR_clear_error
	jmp	SHORT $LN178@ca_main
$LN477@ca_main:
; Line 645
	push	esi
	call	_ASN1_STRING_set_default_mask_asc
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN174@ca_main
; Line 646
	push	esi
	push	OFFSET ??_C@_0CH@PNKCABBA@Invalid?5global?5string?5mask?5setti@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 647
	jmp	$err$715
$LN176@ca_main:
; Line 654
	mov	ecx, OFFSET ??_C@_03ICICOMAL@yes?$AA@
$LL672@ca_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN673@ca_main
	test	dl, dl
	je	SHORT $LN674@ca_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN673@ca_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL672@ca_main
$LN674@ca_main:
	xor	eax, eax
	jmp	SHORT $LN675@ca_main
$LN673@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN675@ca_main:
	test	eax, eax
	mov	ecx, 4096				; 00001000H
	cmove	ebp, ecx
	mov	DWORD PTR _chtype$1$[esp+1080], ebp
$LN178@ca_main:
; Line 659
	push	OFFSET ??_C@_0P@HOGDIGGB@unique_subject?$AA@
	push	DWORD PTR _section
	mov	DWORD PTR _db_attr$[esp+1088], 1
	push	DWORD PTR _conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 660
	test	eax, eax
	je	SHORT $LN179@ca_main
; Line 664
	push	1
	push	eax
	call	_parse_yesno
	add	esp, 8
	mov	DWORD PTR _db_attr$[esp+1080], eax
; Line 665
	jmp	SHORT $LN180@ca_main
$LN179@ca_main:
; Line 666
	call	_ERR_clear_error
$LN180@ca_main:
; Line 676
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	DWORD PTR _in$1$[esp+1084], eax
; Line 677
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	edi, eax
	mov	DWORD PTR _out$1$[esp+1088], edi
; Line 678
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	mov	DWORD PTR _Sout$1$[esp+1092], esi
; Line 679
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 16					; 00000010H
	mov	ebp, eax
; Line 680
	cmp	DWORD PTR _in$1$[esp+1080], 0
	mov	DWORD PTR _Cout$1$[esp+1080], ebp
	je	$LN182@ca_main
	test	edi, edi
	je	$LN182@ca_main
	test	esi, esi
	je	$LN182@ca_main
	test	ebp, ebp
	je	$LN182@ca_main
; Line 687
	mov	ebp, DWORD PTR _ser_status$1$[esp+1080]
	test	ebp, ebp
	je	$LN183@ca_main
; Line 688
	push	OFFSET ??_C@_08PBOCEOLL@database?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN184@ca_main
$LN704@ca_main:
; Line 689
	push	OFFSET ??_C@_08PBOCEOLL@database?$AA@
	push	DWORD PTR _section
	call	_lookup_fail
	add	esp, 8
; Line 690
	jmp	$err$715
$LN184@ca_main:
; Line 692
	lea	ecx, DWORD PTR _db_attr$[esp+1080]
	push	ecx
	push	eax
	call	_load_index
	mov	esi, eax
	add	esp, 8
	mov	DWORD PTR _db$1$[esp+1080], esi
; Line 693
	test	esi, esi
	je	$err$715
; Line 696
	push	esi
	call	_index_index
	add	esp, 4
	test	eax, eax
	je	$err$715
; Line 699
	push	esi
	push	ebp
	call	_get_certificate_status
	add	esp, 8
	cmp	eax, 1
	je	$err$715
; Line 700
	push	ebp
	push	OFFSET ??_C@_0BM@EHONGJEE@Error?5verifying?5serial?5?$CFs?$CB?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 701
	jmp	$err$715
$LN183@ca_main:
; Line 707
	mov	ebp, DWORD PTR _keyfile$1$[esp+1080]
	test	ebp, ebp
	jne	SHORT $LN188@ca_main
	push	OFFSET ??_C@_0M@BCLPOPCL@private_key?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	ebp, eax
	add	esp, 12					; 0000000cH
	test	ebp, ebp
	jne	SHORT $LN188@ca_main
; Line 711
	push	OFFSET ??_C@_0M@BCLPOPCL@private_key?$AA@
	push	DWORD PTR _section
	call	_lookup_fail
	add	esp, 8
; Line 712
	jmp	$err$715
$LN188@ca_main:
; Line 714
	mov	eax, DWORD PTR _key$[esp+1080]
	test	eax, eax
	jne	SHORT $LN190@ca_main
; Line 716
	push	eax
	lea	eax, DWORD PTR _key$[esp+1084]
	mov	DWORD PTR _free_key$1$[esp+1084], 1
	push	eax
	push	0
	push	DWORD PTR _passargin$1$[esp+1092]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN689@ca_main
; Line 717
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 718
	jmp	$err$715
$LN689@ca_main:
	mov	eax, DWORD PTR _key$[esp+1080]
$LN190@ca_main:
; Line 721
	push	OFFSET ??_C@_0P@HBHFBBML@CA?5private?5key?$AA@
	push	ebx
	push	eax
	push	0
	push	DWORD PTR _keyform$1$[esp+1096]
	push	ebp
	push	DWORD PTR _bio_err
	call	_load_key
; Line 722
	mov	edx, DWORD PTR _key$[esp+1108]
	add	esp, 28					; 0000001cH
	mov	edi, eax
	mov	DWORD PTR _pkey$1$[esp+1080], edi
	test	edx, edx
	je	SHORT $LN191@ca_main
; Line 723
	mov	ecx, edx
	lea	esi, DWORD PTR [ecx+1]
	npad	7
$LL676@ca_main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL676@ca_main
	sub	ecx, esi
	push	ecx
	push	edx
	call	_OPENSSL_cleanse
	add	esp, 8
$LN191@ca_main:
; Line 724
	test	edi, edi
	je	$err$715
; Line 731
	mov	ebp, DWORD PTR _selfsign$1$[esp+1080]
	test	ebp, ebp
	je	SHORT $LN194@ca_main
	cmp	DWORD PTR _spkac_file$1$[esp+1080], 0
	jne	SHORT $LN194@ca_main
	cmp	DWORD PTR _ss_cert_file$1$[esp+1080], 0
	jne	SHORT $LN194@ca_main
	cmp	DWORD PTR _gencrl$1$[esp+1080], 0
	je	$LN197@ca_main
$LN194@ca_main:
; Line 733
	mov	eax, DWORD PTR _certfile$1$[esp+1080]
	test	eax, eax
	jne	SHORT $LN195@ca_main
	push	OFFSET ??_C@_0M@LLNFCECG@certificate?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN195@ca_main
; Line 736
	push	OFFSET ??_C@_0M@LLNFCECG@certificate?$AA@
	push	DWORD PTR _section
	call	_lookup_fail
	add	esp, 8
; Line 737
	jmp	$err$715
$LN195@ca_main:
; Line 739
	push	OFFSET ??_C@_0P@KDJNKNNI@CA?5certificate?$AA@
	push	ebx
	push	0
	push	3
	push	eax
	push	DWORD PTR _bio_err
	call	_load_cert
	add	esp, 24					; 00000018H
	mov	DWORD PTR _x509$1$[esp+1080], eax
; Line 741
	test	eax, eax
	je	$err$715
; Line 744
	push	edi
	push	eax
	call	_X509_check_private_key
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN197@ca_main
; Line 745
	push	OFFSET ??_C@_0DA@DPECBGP@CA?5certificate?5and?5CA?5private?5ke@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 747
	jmp	$err$715
$LN197@ca_main:
; Line 753
	push	OFFSET ??_C@_08ILAKLJGO@preserve?$AA@
	test	ebp, ebp
	mov	eax, 0
	push	OFFSET ??_C@_02DGMJAJHC@ca?$AA@
	cmove	eax, DWORD PTR _x509$1$[esp+1088]
	push	DWORD PTR _conf
	mov	DWORD PTR _x509p$2$[esp+1092], eax
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 754
	test	eax, eax
	jne	SHORT $LN476@ca_main
; Line 755
	call	_ERR_clear_error
; Line 756
	jmp	SHORT $LN200@ca_main
$LN476@ca_main:
	mov	al, BYTE PTR [eax]
	cmp	al, 121					; 00000079H
	je	SHORT $LN201@ca_main
	cmp	al, 89					; 00000059H
	jne	SHORT $LN200@ca_main
$LN201@ca_main:
; Line 757
	mov	DWORD PTR _preserve, 1
$LN200@ca_main:
; Line 758
	push	OFFSET ??_C@_09PMPAOOFG@msie_hack?$AA@
	push	OFFSET ??_C@_02DGMJAJHC@ca?$AA@
	push	DWORD PTR _conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 759
	test	eax, eax
	jne	SHORT $LN475@ca_main
; Line 760
	call	_ERR_clear_error
; Line 761
	jmp	SHORT $LN203@ca_main
$LN475@ca_main:
	mov	al, BYTE PTR [eax]
	cmp	al, 121					; 00000079H
	je	SHORT $LN204@ca_main
	cmp	al, 89					; 00000059H
	jne	SHORT $LN203@ca_main
$LN204@ca_main:
; Line 762
	mov	DWORD PTR _msie_hack, 1
$LN203@ca_main:
; Line 764
	push	OFFSET ??_C@_08OFOKMJGD@name_opt?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 766
	test	esi, esi
	je	SHORT $LN205@ca_main
; Line 767
	lea	eax, DWORD PTR _nameopt$[esp+1080]
	push	esi
	push	eax
	call	_set_name_ex
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN207@ca_main
; Line 768
	push	esi
	push	OFFSET ??_C@_0BM@KALABIFI@Invalid?5name?5options?3?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 769
	jmp	$err$715
$LN207@ca_main:
; Line 771
	mov	DWORD PTR _default_op$1$[esp+1080], 0
; Line 772
	jmp	SHORT $LN206@ca_main
$LN205@ca_main:
; Line 773
	call	_ERR_clear_error
$LN206@ca_main:
; Line 775
	push	OFFSET ??_C@_08MJPDBNNH@cert_opt?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 777
	test	esi, esi
	je	SHORT $LN208@ca_main
; Line 778
	lea	eax, DWORD PTR _certopt$[esp+1080]
	push	esi
	push	eax
	call	_set_cert_ex
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN210@ca_main
; Line 779
	push	esi
	push	OFFSET ??_C@_0CD@BFABCJIA@Invalid?5certificate?5options?3?5?$CC?$CFs@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 780
	jmp	$err$715
$LN210@ca_main:
; Line 782
	mov	DWORD PTR _default_op$1$[esp+1080], 0
; Line 783
	jmp	SHORT $LN209@ca_main
$LN208@ca_main:
; Line 784
	call	_ERR_clear_error
$LN209@ca_main:
; Line 786
	push	OFFSET ??_C@_0BA@JKMALOEE@copy_extensions?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 788
	test	esi, esi
	je	SHORT $LN211@ca_main
; Line 789
	lea	eax, DWORD PTR _ext_copy$[esp+1080]
	push	esi
	push	eax
	call	_set_ext_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN212@ca_main
; Line 790
	push	esi
	push	OFFSET ??_C@_0CF@GNKAKOCI@Invalid?5extension?5copy?5option?3?5?$CC@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 791
	jmp	$err$715
$LN211@ca_main:
; Line 794
	call	_ERR_clear_error
$LN212@ca_main:
; Line 798
	cmp	DWORD PTR _outdir$1$[esp+1080], 0
	jne	$LN217@ca_main
	cmp	DWORD PTR _req$1$[esp+1080], 0
	je	$LN217@ca_main
; Line 801
	push	OFFSET ??_C@_0O@MCICMBPC@new_certs_dir?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _outdir$1$[esp+1080], ebx
	test	ebx, ebx
	jne	SHORT $LN215@ca_main
; Line 802
	push	OFFSET ??_C@_0EL@MHBJEKA@there?5needs?5to?5be?5defined?5a?5dire@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 804
	jmp	$err$715
$LN215@ca_main:
; Line 820
	push	6
	push	ebx
	call	DWORD PTR __imp___access
	add	esp, 8
; Line 823
	push	ebx
	test	eax, eax
	je	SHORT $LN216@ca_main
	push	OFFSET ??_C@_0CI@LLBHJJJN@I?5am?5unable?5to?5access?5the?5?$CFs?5dir@
$LN707@ca_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 825
	push	ebx
	call	DWORD PTR __imp__perror
	add	esp, 16					; 00000010H
; Line 826
	jmp	$err$715
$LN216@ca_main:
; Line 829
	call	_app_isdir
	add	esp, 4
	test	eax, eax
	jg	SHORT $LN217@ca_main
; Line 830
	push	ebx
	push	OFFSET ??_C@_0BL@MMFEOCD@?$CFs?5need?5to?5be?5a?5directory?6?$AA@
; Line 832
	jmp	SHORT $LN707@ca_main
$LN217@ca_main:
; Line 839
	push	OFFSET ??_C@_08PBOCEOLL@database?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	ebp, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _dbfile$2$[esp+1080], ebp
	test	ebp, ebp
	je	$LN704@ca_main
; Line 843
	lea	eax, DWORD PTR _db_attr$[esp+1080]
	push	eax
	push	ebp
	call	_load_index
	mov	esi, eax
	add	esp, 8
	mov	DWORD PTR _db$1$[esp+1080], esi
; Line 844
	test	esi, esi
	je	$err$715
; Line 848
	mov	eax, DWORD PTR [esi+4]
	xor	ebx, ebx
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN8@ca_main
$LL9@ca_main:
; Line 849
	mov	eax, DWORD PTR [esi+4]
	push	ebx
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	edi, eax
	add	esp, 8
; Line 850
	mov	eax, DWORD PTR [edi]
	mov	cl, BYTE PTR [eax]
	cmp	cl, 82					; 00000052H
	je	SHORT $LN702@ca_main
	mov	eax, DWORD PTR [edi+8]
	cmp	BYTE PTR [eax], 0
	jne	$LN430@ca_main
; Line 856
	cmp	cl, 82					; 00000052H
	jne	SHORT $LN221@ca_main
$LN702@ca_main:
	push	DWORD PTR [edi+8]
	push	0
	call	_make_revoked
	add	esp, 8
	test	eax, eax
	je	$LN431@ca_main
$LN221@ca_main:
; Line 2337
	push	DWORD PTR [edi+4]
	push	0
	call	_ASN1_TIME_set_string
	add	esp, 8
; Line 861
	test	eax, eax
	je	$LN432@ca_main
; Line 865
	mov	edx, DWORD PTR [edi+12]
; Line 866
	mov	ecx, edx
	lea	esi, DWORD PTR [ecx+1]
$LL677@ca_main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL677@ca_main
	sub	ecx, esi
; Line 867
	cmp	BYTE PTR [edx], 45			; 0000002dH
	jne	SHORT $LN223@ca_main
; Line 868
	inc	edx
; Line 869
	dec	ecx
$LN223@ca_main:
; Line 871
	test	cl, 1
	jne	$LN225@ca_main
	cmp	ecx, 2
	jl	$LN225@ca_main
; Line 876
	mov	al, BYTE PTR [edx]
	test	al, al
	je	SHORT $LN7@ca_main
	npad	4
$LL10@ca_main:
; Line 877
	cmp	al, 48					; 00000030H
	jl	SHORT $LN227@ca_main
	cmp	al, 57					; 00000039H
	jle	SHORT $LN226@ca_main
$LN227@ca_main:
	cmp	al, 65					; 00000041H
	jl	SHORT $LN228@ca_main
	cmp	al, 70					; 00000046H
	jle	SHORT $LN226@ca_main
$LN228@ca_main:
	sub	al, 97					; 00000061H
	cmp	al, 5
	ja	$LN429@ca_main
$LN226@ca_main:
; Line 876
	mov	al, BYTE PTR [edx+1]
; Line 885
	inc	edx
	test	al, al
	jne	SHORT $LL10@ca_main
$LN7@ca_main:
; Line 848
	mov	esi, DWORD PTR _db$1$[esp+1080]
	inc	ebx
	mov	eax, DWORD PTR [esi+4]
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL9@ca_main
$LN8@ca_main:
; Line 888
	mov	ebx, DWORD PTR _verbose$1$[esp+1080]
; Line 889
	mov	edi, DWORD PTR __imp____acrt_iob_func
	test	ebx, ebx
	je	SHORT $LN230@ca_main
	push	1
	call	edi
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _out$1$[esp+1096]
	call	_BIO_ctrl
; Line 896
	push	DWORD PTR [esi+4]
	push	DWORD PTR _out$1$[esp+1104]
	call	_TXT_DB_write
; Line 897
	mov	eax, DWORD PTR [esi+4]
	push	DWORD PTR [eax+4]
	call	_sk_num
	push	eax
	push	OFFSET ??_C@_0CF@MGCGHPBH@?$CFd?5entries?5loaded?5from?5the?5datab@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 899
	push	OFFSET ??_C@_0BC@EHEMHFHP@generating?5index?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 52					; 00000034H
$LN230@ca_main:
; Line 902
	push	esi
	call	_index_index
	add	esp, 4
	test	eax, eax
	je	$err$715
; Line 907
	cmp	DWORD PTR _doupdatedb$1$[esp+1080], 0
	je	$LN698@ca_main
; Line 908
	test	ebx, ebx
	je	SHORT $LN233@ca_main
; Line 909
	push	ebp
	push	OFFSET ??_C@_0BB@GPBLOKCE@Updating?5?$CFs?5?4?4?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN233@ca_main:
; Line 911
	push	esi
	call	_do_updatedb
	mov	esi, eax
	add	esp, 4
; Line 912
	cmp	esi, -1
	jne	$LN234@ca_main
; Line 913
	push	OFFSET ??_C@_0BA@DHKOJLMG@Malloc?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$err$715
$LN430@ca_main:
; Line 851
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	push	OFFSET ??_C@_0DG@GALGPOKE@entry?5?$CFd?3?5not?5revoked?5yet?0?5but?5h@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 854
	jmp	$err$715
$LN431@ca_main:
; Line 858
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	push	OFFSET ??_C@_0O@BCAKHCIK@?5in?5entry?5?$CFd?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 859
	jmp	$err$715
$LN429@ca_main:
; Line 880
	movsx	eax, BYTE PTR [edx]
	sub	edx, DWORD PTR [edi+12]
	push	eax
	push	edx
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	push	OFFSET ??_C@_0EE@PDLJBMCP@entry?5?$CFd?3?5bad?5serial?5number?5char@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 20					; 00000014H
; Line 883
	jmp	$err$715
$LN225@ca_main:
; Line 872
	push	ecx
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	push	OFFSET ??_C@_0CJ@DGNHGOCC@entry?5?$CFd?3?5bad?5serial?5number?5leng@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
	jmp	$err$715
$LN432@ca_main:
; Line 862
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	push	OFFSET ??_C@_0BP@KJFBFOIG@entry?5?$CFd?3?5invalid?5expiry?5date?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 863
	jmp	$err$715
$LN234@ca_main:
; Line 915
	test	esi, esi
	jne	SHORT $LN236@ca_main
; Line 916
	test	ebx, ebx
	je	SHORT $LN698@ca_main
; Line 917
	push	OFFSET ??_C@_0CC@BEOKHPOI@No?5entries?5found?5to?5mark?5expired@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN698@ca_main:
	mov	ebp, DWORD PTR _verbose$1$[esp+1080]
$LN241@ca_main:
; Line 933
	mov	ebx, DWORD PTR _extfile$1$[esp+1080]
	test	ebx, ebx
	je	$LN247@ca_main
; Line 934
	push	0
	call	_NCONF_new
; Line 935
	lea	ecx, DWORD PTR _errorline$[esp+1084]
	mov	DWORD PTR _extconf, eax
	push	ecx
	push	ebx
	push	eax
	call	_NCONF_load
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	$LN243@ca_main
; Line 936
	mov	eax, DWORD PTR _errorline$[esp+1080]
; Line 937
	push	ebx
	test	eax, eax
	jg	SHORT $LN244@ca_main
	push	OFFSET ??_C@_0CF@JLMMFMBJ@ERROR?3?5loading?5the?5config?5file?5?8@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 943
	mov	DWORD PTR _ret$1$[esp+1080], 1
; Line 944
	jmp	$err$715
$LN236@ca_main:
; Line 919
	mov	ebx, DWORD PTR _db$1$[esp+1080]
	push	ebx
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	ebp
	call	_save_index
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$715
; Line 922
	push	OFFSET ??_C@_03PNKCFLFB@old?$AA@
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	ebp
	call	_rotate_index
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$715
; Line 925
	mov	ebp, DWORD PTR _verbose$1$[esp+1080]
	test	ebp, ebp
	je	$LN241@ca_main
; Line 926
	push	esi
	push	OFFSET ??_C@_0CE@BKGMBKFP@Done?4?5?$CFd?5entries?5marked?5as?5expir@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	jmp	$LN241@ca_main
$LN244@ca_main:
; Line 940
	push	eax
	push	OFFSET ??_C@_0CI@PFACNGKK@ERROR?3?5on?5line?5?$CFld?5of?5config?5fil@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 943
	mov	DWORD PTR _ret$1$[esp+1080], 1
; Line 944
	jmp	$err$715
$LN243@ca_main:
; Line 947
	test	ebp, ebp
	je	SHORT $LN246@ca_main
; Line 948
	push	ebx
	push	OFFSET ??_C@_0CI@GJHHEJDC@Successfully?5loaded?5extensions?5f@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN246@ca_main:
; Line 953
	cmp	DWORD PTR _extensions$2$[esp+1080], 0
	jne	SHORT $LN247@ca_main
	push	OFFSET ??_C@_0L@ICCCPLKC@extensions?$AA@
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	push	DWORD PTR _extconf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
	mov	ecx, OFFSET ??_C@_07DLHCIBDH@default?$AA@
	test	eax, eax
	cmovne	ecx, eax
	mov	DWORD PTR _extensions$2$[esp+1080], ecx
$LN247@ca_main:
; Line 959
	mov	ebp, DWORD PTR _req$1$[esp+1080]
	test	ebp, ebp
	jne	SHORT $LN249@ca_main
	cmp	DWORD PTR _gencrl$1$[esp+1080], ebp
	je	SHORT $LN251@ca_main
$LN249@ca_main:
; Line 960
	mov	ebx, DWORD PTR _outfile$1$[esp+1080]
	test	ebx, ebx
	je	SHORT $LN250@ca_main
; Line 961
	push	ebx
	push	5
	push	108					; 0000006cH
	push	DWORD PTR _Sout$1$[esp+1092]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN251@ca_main
; Line 962
	push	ebx
	call	DWORD PTR __imp__perror
; Line 963
	jmp	$LN703@ca_main
$LN250@ca_main:
; Line 966
	push	1
	call	edi
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _Sout$1$[esp+1096]
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN251@ca_main:
; Line 976
	mov	esi, DWORD PTR _md$1$[esp+1080]
	test	esi, esi
	jne	SHORT $LN253@ca_main
	push	OFFSET ??_C@_0L@GPEHKDBA@default_md?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN253@ca_main
; Line 979
	push	OFFSET ??_C@_0L@GPEHKDBA@default_md?$AA@
	push	DWORD PTR _section
	call	_lookup_fail
	add	esp, 8
	jmp	$err$715
$LN253@ca_main:
; Line 983
	mov	ecx, OFFSET ??_C@_07DLHCIBDH@default?$AA@
	mov	eax, esi
$LL678@ca_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN679@ca_main
	test	dl, dl
	je	SHORT $LN680@ca_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN679@ca_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL678@ca_main
$LN680@ca_main:
	xor	eax, eax
	jmp	SHORT $LN681@ca_main
$LN679@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN681@ca_main:
	test	eax, eax
	jne	SHORT $LN254@ca_main
; Line 985
	lea	eax, DWORD PTR _def_nid$1[esp+1080]
	push	eax
	push	DWORD PTR _pkey$1$[esp+1084]
	call	_EVP_PKEY_get_default_digest_nid
	add	esp, 8
	test	eax, eax
	jg	SHORT $LN255@ca_main
; Line 986
	push	OFFSET ??_C@_0BD@JLOHALFC@no?5default?5digest?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
	add	esp, 8
	jmp	$err$715
$LN255@ca_main:
; Line 989
	push	DWORD PTR _def_nid$1[esp+1080]
	call	_OBJ_nid2sn
	add	esp, 4
	mov	esi, eax
$LN254@ca_main:
; Line 992
	push	esi
	call	_EVP_get_digestbyname
	mov	ebx, eax
	add	esp, 4
	mov	DWORD PTR _dgst$1$[esp+1080], ebx
	test	ebx, ebx
	jne	SHORT $LN256@ca_main
; Line 993
	push	esi
	push	OFFSET ??_C@_0CK@PCPNIALC@?$CFs?5is?5an?5unsupported?5message?5dig@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 994
	jmp	$err$715
$LN256@ca_main:
; Line 997
	test	ebp, ebp
	je	$LN319@ca_main
; Line 998
	mov	ebp, DWORD PTR _email_dn$1$[esp+1080]
	cmp	ebp, 1
	jne	SHORT $LN259@ca_main
	push	OFFSET ??_C@_0M@BNJACADD@email_in_dn?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN259@ca_main
; Line 1002
	mov	ecx, OFFSET ??_C@_02KAJCLHKP@no?$AA@
	npad	5
$LL682@ca_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN683@ca_main
	test	dl, dl
	je	SHORT $LN684@ca_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN683@ca_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL682@ca_main
$LN684@ca_main:
	xor	eax, eax
	jmp	SHORT $LN685@ca_main
$LN683@ca_main:
	sbb	eax, eax
	or	eax, 1
$LN685@ca_main:
	xor	ecx, ecx
	test	eax, eax
	cmove	ebp, ecx
	mov	DWORD PTR _email_dn$1$[esp+1080], ebp
$LN259@ca_main:
; Line 1005
	mov	ebp, DWORD PTR _verbose$1$[esp+1080]
	test	ebp, ebp
	je	SHORT $LN260@ca_main
; Line 1006
	push	DWORD PTR [ebx]
	call	_OBJ_nid2ln
	push	eax
	push	OFFSET ??_C@_0BG@GDPDFCPO@message?5digest?5is?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN260@ca_main:
; Line 1008
	mov	edi, DWORD PTR _policy$1$[esp+1080]
	test	edi, edi
	jne	SHORT $LN261@ca_main
	push	OFFSET ??_C@_06NJNJNICG@policy?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	edi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _policy$1$[esp+1080], edi
	test	edi, edi
	jne	SHORT $LN261@ca_main
; Line 1012
	push	OFFSET ??_C@_06NJNJNICG@policy?$AA@
	push	DWORD PTR _section
	call	_lookup_fail
	add	esp, 8
	jmp	$err$715
$LN261@ca_main:
; Line 1015
	test	ebp, ebp
	je	SHORT $LN262@ca_main
; Line 1016
	push	edi
	push	OFFSET ??_C@_0O@BNCCCDFL@policy?5is?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN262@ca_main:
; Line 1019
	push	OFFSET ??_C@_06KCELPKEE@serial?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	ebp, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _serialfile$1$[esp+1080], ebp
	test	ebp, ebp
	jne	SHORT $LN263@ca_main
; Line 1020
	push	OFFSET ??_C@_06KCELPKEE@serial?$AA@
	push	DWORD PTR _section
	call	_lookup_fail
	add	esp, 8
	jmp	$err$715
$LN263@ca_main:
; Line 1024
	cmp	DWORD PTR _extconf, 0
	jne	SHORT $LN268@ca_main
; Line 1029
	mov	esi, DWORD PTR _extensions$2$[esp+1080]
	test	esi, esi
	jne	SHORT $LN474@ca_main
; Line 1030
	push	OFFSET ??_C@_0BA@DDJOFEBJ@x509_extensions?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _extensions$2$[esp+1080], esi
; Line 1031
	test	esi, esi
	jne	SHORT $LN474@ca_main
; Line 1032
	call	_ERR_clear_error
$LN268@ca_main:
; Line 1049
	mov	esi, DWORD PTR _startdate$1$[esp+1080]
	test	esi, esi
	jne	$LN473@ca_main
; Line 1050
	push	OFFSET ??_C@_0BC@LHDIFPNN@default_startdate?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _startdate$1$[esp+1080], esi
; Line 1052
	test	esi, esi
	jne	SHORT $LN473@ca_main
; Line 1053
	call	_ERR_clear_error
; Line 1055
	jmp	$LN472@ca_main
$LN474@ca_main:
; Line 1037
	push	1
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$4[esp+1096]
	push	0
	push	eax
	call	_X509V3_set_ctx
; Line 1038
	push	DWORD PTR _conf
	lea	eax, DWORD PTR _ctx$4[esp+1108]
	push	eax
	call	_X509V3_set_nconf
; Line 1039
	push	0
	push	esi
	lea	eax, DWORD PTR _ctx$4[esp+1120]
	push	eax
	push	DWORD PTR _conf
	call	_X509V3_EXT_add_nconf
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN268@ca_main
; Line 1040
	push	esi
	push	OFFSET ??_C@_0CE@CEBANHFH@Error?5Loading?5extension?5section?5@
$LN709@ca_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1043
	mov	DWORD PTR _ret$1$[esp+1080], 1
; Line 1044
	jmp	$err$715
$LN473@ca_main:
; Line 1055
	push	esi
	push	0
	call	_ASN1_TIME_set_string
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN271@ca_main
; Line 1056
	push	OFFSET ??_C@_0EG@BGKOLOEI@start?5date?5is?5invalid?0?5it?5should@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$err$715
$LN271@ca_main:
; Line 1060
	test	esi, esi
	jne	SHORT $LN272@ca_main
$LN472@ca_main:
; Line 1061
	mov	DWORD PTR _startdate$1$[esp+1080], OFFSET ??_C@_05MGEAPCOL@today?$AA@
$LN272@ca_main:
; Line 1063
	mov	esi, DWORD PTR _enddate$1$[esp+1080]
	test	esi, esi
	jne	SHORT $LN471@ca_main
; Line 1064
	push	OFFSET ??_C@_0BA@OICENKHG@default_enddate?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _enddate$1$[esp+1080], esi
; Line 1065
	test	esi, esi
	jne	SHORT $LN471@ca_main
; Line 1066
	call	_ERR_clear_error
$LN275@ca_main:
; Line 1074
	mov	eax, DWORD PTR _days$[esp+1080]
	test	eax, eax
	jne	SHORT $LN277@ca_main
; Line 1075
	lea	eax, DWORD PTR _days$[esp+1080]
	push	eax
	push	OFFSET ??_C@_0N@GAOBGEON@default_days?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_number_e
	add	esp, 16					; 00000010H
	neg	eax
	sbb	eax, eax
	and	eax, DWORD PTR _days$[esp+1080]
	mov	DWORD PTR _days$[esp+1080], eax
$LN277@ca_main:
; Line 1078
	test	esi, esi
	jne	SHORT $LN278@ca_main
	test	eax, eax
	jne	SHORT $LN278@ca_main
; Line 1079
	push	OFFSET ??_C@_0CM@LBMHJEAI@cannot?5lookup?5how?5many?5days?5to?5c@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$err$715
$LN471@ca_main:
; Line 1068
	push	esi
	push	0
	call	_ASN1_TIME_set_string
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN275@ca_main
; Line 1069
	push	OFFSET ??_C@_0EE@ECCHIHFP@end?5date?5is?5invalid?0?5it?5should?5b@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$err$715
$LN278@ca_main:
; Line 1084
	push	0
	push	DWORD PTR _create_ser$1$[esp+1084]
	push	ebp
	call	_load_serial
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _serial$[esp+1080], eax
	test	eax, eax
	jne	SHORT $LN279@ca_main
; Line 1085
	push	OFFSET ??_C@_0CD@PJANBPCG@error?5while?5loading?5serial?5numbe@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$err$715
$LN279@ca_main:
; Line 1088
	mov	esi, DWORD PTR _verbose$1$[esp+1080]
	test	esi, esi
	je	SHORT $LN282@ca_main
; Line 1089
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN281@ca_main
; Line 1090
	push	OFFSET ??_C@_0BK@ELOFGAEO@next?5serial?5number?5is?500?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $LN282@ca_main
$LN281@ca_main:
; Line 1092
	push	eax
	call	_BN_bn2hex
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	$err$715
; Line 1094
	push	esi
	push	OFFSET ??_C@_0BK@FOPOPEHK@next?5serial?5number?5is?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1095
	push	esi
	call	_CRYPTO_free
	mov	esi, DWORD PTR _verbose$1$[esp+1096]
	add	esp, 16					; 00000010H
$LN282@ca_main:
; Line 1099
	push	edi
	push	DWORD PTR _conf
	call	_NCONF_get_section
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	jne	SHORT $LN284@ca_main
; Line 1100
	mov	eax, DWORD PTR _policy$1$[esp+1080]
	push	eax
	push	OFFSET ??_C@_0CB@LPAMDNLJ@unable?5to?5find?5?8section?8?5for?5?$CFs?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1101
	jmp	$err$715
$LN284@ca_main:
; Line 1104
	call	_sk_new_null
	mov	DWORD PTR _cert_sk$1$[esp+1080], eax
	test	eax, eax
	jne	SHORT $LN285@ca_main
$LN711@ca_main:
; Line 1105
	push	OFFSET ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$err$715
$LN285@ca_main:
; Line 1108
	mov	eax, DWORD PTR _spkac_file$1$[esp+1080]
	test	eax, eax
	je	$LN693@ca_main
; Line 1110
	push	DWORD PTR _ext_copy$[esp+1080]
	mov	DWORD PTR _total$1$[esp+1084], 1
	push	DWORD PTR _default_op$1$[esp+1084]
	push	DWORD PTR _nameopt$[esp+1088]
	push	DWORD PTR _certopt$[esp+1092]
	push	esi
	push	DWORD PTR _conf
	mov	esi, DWORD PTR _extensions$2$[esp+1104]
	push	esi
	push	DWORD PTR _days$[esp+1108]
	push	DWORD PTR _enddate$1$[esp+1112]
	push	DWORD PTR _startdate$1$[esp+1116]
	push	DWORD PTR _email_dn$1$[esp+1120]
	push	DWORD PTR _multirdn$1$[esp+1124]
	push	DWORD PTR _chtype$1$[esp+1128]
	push	DWORD PTR _subj$1$[esp+1132]
	push	DWORD PTR _serial$[esp+1136]
	push	DWORD PTR _db$1$[esp+1140]
	push	edi
	push	DWORD PTR _sigopts$1$[esp+1148]
	push	ebx
	push	DWORD PTR _x509$1$[esp+1156]
	push	DWORD PTR _pkey$1$[esp+1160]
	push	eax
	lea	eax, DWORD PTR _x$[esp+1168]
	push	eax
	call	_certify_spkac
	add	esp, 92					; 0000005cH
; Line 1115
	test	eax, eax
	js	$err$715
; Line 1117
	jle	SHORT $LN695@ca_main
; Line 1119
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	mov	DWORD PTR _total_done$1$[esp+1088], 1
	call	_BIO_printf
; Line 1120
	push	1
	push	DWORD PTR _serial$[esp+1092]
	call	_BN_add_word
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$715
; Line 1122
	push	DWORD PTR _x$[esp+1080]
	push	DWORD PTR _cert_sk$1$[esp+1084]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN711@ca_main
; Line 1126
	cmp	DWORD PTR _outfile$1$[esp+1080], 0
	je	SHORT $LN695@ca_main
; Line 1128
	mov	ecx, 1
	mov	DWORD PTR _output_der$1$[esp+1080], 1
	mov	DWORD PTR _batch$1$[esp+1080], ecx
	jmp	SHORT $LN291@ca_main
$LN693@ca_main:
	mov	esi, DWORD PTR _extensions$2$[esp+1080]
$LN695@ca_main:
	mov	ecx, DWORD PTR _batch$1$[esp+1080]
$LN291@ca_main:
; Line 1132
	mov	eax, DWORD PTR _ss_cert_file$1$[esp+1080]
	test	eax, eax
	je	$LN296@ca_main
; Line 1134
	push	DWORD PTR _e$1$[esp+1080]
	inc	DWORD PTR _total$1$[esp+1084]
	push	DWORD PTR _ext_copy$[esp+1084]
	push	DWORD PTR _default_op$1$[esp+1088]
	push	DWORD PTR _nameopt$[esp+1092]
	push	DWORD PTR _certopt$[esp+1096]
	push	DWORD PTR _verbose$1$[esp+1100]
	push	DWORD PTR _conf
	push	esi
	push	ecx
	push	DWORD PTR _days$[esp+1116]
	push	DWORD PTR _enddate$1$[esp+1120]
	push	DWORD PTR _startdate$1$[esp+1124]
	push	DWORD PTR _email_dn$1$[esp+1128]
	push	DWORD PTR _multirdn$1$[esp+1132]
	push	DWORD PTR _chtype$1$[esp+1136]
	push	DWORD PTR _subj$1$[esp+1140]
	push	DWORD PTR _serial$[esp+1144]
	push	DWORD PTR _db$1$[esp+1148]
	push	edi
	push	DWORD PTR _sigopts$1$[esp+1156]
	push	ebx
	push	DWORD PTR _x509$1$[esp+1164]
	push	DWORD PTR _pkey$1$[esp+1168]
	push	eax
	lea	eax, DWORD PTR _x$[esp+1176]
	push	eax
	call	_certify_cert
	add	esp, 100				; 00000064H
; Line 1140
	test	eax, eax
	js	$err$715
; Line 1142
	jle	SHORT $LN296@ca_main
; Line 1143
	inc	DWORD PTR _total_done$1$[esp+1080]
; Line 1144
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1145
	push	1
	push	DWORD PTR _serial$[esp+1092]
	call	_BN_add_word
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$715
; Line 1147
	push	DWORD PTR _x$[esp+1080]
	push	DWORD PTR _cert_sk$1$[esp+1084]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN711@ca_main
$LN296@ca_main:
; Line 1153
	mov	eax, DWORD PTR _infile$1$[esp+1080]
	test	eax, eax
	je	$LN301@ca_main
; Line 1155
	push	DWORD PTR _selfsign$1$[esp+1080]
	inc	DWORD PTR _total$1$[esp+1084]
	push	DWORD PTR _ext_copy$[esp+1084]
	push	DWORD PTR _default_op$1$[esp+1088]
	push	DWORD PTR _nameopt$[esp+1092]
	push	DWORD PTR _certopt$[esp+1096]
	push	DWORD PTR _verbose$1$[esp+1100]
	push	DWORD PTR _conf
	push	esi
	push	DWORD PTR _batch$1$[esp+1112]
	push	DWORD PTR _days$[esp+1116]
	push	DWORD PTR _enddate$1$[esp+1120]
	push	DWORD PTR _startdate$1$[esp+1124]
	push	DWORD PTR _email_dn$1$[esp+1128]
	push	DWORD PTR _multirdn$1$[esp+1132]
	push	DWORD PTR _chtype$1$[esp+1136]
	push	DWORD PTR _subj$1$[esp+1140]
	push	DWORD PTR _serial$[esp+1144]
	push	DWORD PTR _db$1$[esp+1148]
	push	edi
	push	DWORD PTR _sigopts$1$[esp+1156]
	push	ebx
	push	DWORD PTR _x509p$2$[esp+1164]
	push	DWORD PTR _pkey$1$[esp+1168]
	push	eax
	lea	eax, DWORD PTR _x$[esp+1176]
	push	eax
	call	_certify
	add	esp, 100				; 00000064H
; Line 1159
	test	eax, eax
	js	$err$715
; Line 1161
	jle	SHORT $LN301@ca_main
; Line 1162
	inc	DWORD PTR _total_done$1$[esp+1080]
; Line 1163
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1164
	push	1
	push	DWORD PTR _serial$[esp+1092]
	call	_BN_add_word
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$715
; Line 1166
	push	DWORD PTR _x$[esp+1080]
	push	DWORD PTR _cert_sk$1$[esp+1084]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN711@ca_main
$LN301@ca_main:
; Line 1172
	xor	esi, esi
	cmp	DWORD PTR _argc$[esp+1076], esi
	jle	$LN486@ca_main
$LL14@ca_main:
; Line 1174
	push	DWORD PTR _selfsign$1$[esp+1080]
	mov	eax, DWORD PTR _argv$GSCopy$1$[esp+1084]
	push	DWORD PTR _ext_copy$[esp+1084]
	inc	DWORD PTR _total$1$[esp+1088]
	push	DWORD PTR _default_op$1$[esp+1088]
	push	DWORD PTR _nameopt$[esp+1092]
	push	DWORD PTR _certopt$[esp+1096]
	push	DWORD PTR _verbose$1$[esp+1100]
	push	DWORD PTR _conf
	push	DWORD PTR _extensions$2$[esp+1108]
	push	DWORD PTR _batch$1$[esp+1112]
	push	DWORD PTR _days$[esp+1116]
	push	DWORD PTR _enddate$1$[esp+1120]
	push	DWORD PTR _startdate$1$[esp+1124]
	push	DWORD PTR _email_dn$1$[esp+1128]
	push	DWORD PTR _multirdn$1$[esp+1132]
	push	DWORD PTR _chtype$1$[esp+1136]
	push	DWORD PTR _subj$1$[esp+1140]
	push	DWORD PTR _serial$[esp+1144]
	push	DWORD PTR _db$1$[esp+1148]
	push	edi
	push	DWORD PTR _sigopts$1$[esp+1156]
	push	ebx
	push	DWORD PTR _x509p$2$[esp+1164]
	push	DWORD PTR _pkey$1$[esp+1168]
	push	DWORD PTR [eax+esi*4]
	lea	eax, DWORD PTR _x$[esp+1176]
	push	eax
	call	_certify
	add	esp, 100				; 00000064H
; Line 1178
	test	eax, eax
	js	$err$715
; Line 1180
	jle	SHORT $LN12@ca_main
; Line 1181
	inc	DWORD PTR _total_done$1$[esp+1080]
; Line 1182
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1183
	push	1
	push	DWORD PTR _serial$[esp+1092]
	call	_BN_add_word
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$715
; Line 1185
	push	DWORD PTR _x$[esp+1080]
	push	DWORD PTR _cert_sk$1$[esp+1084]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN711@ca_main
$LN12@ca_main:
; Line 1172
	inc	esi
	cmp	esi, DWORD PTR _argc$[esp+1076]
	jl	$LL14@ca_main
$LN486@ca_main:
; Line 1196
	mov	esi, DWORD PTR _cert_sk$1$[esp+1080]
	push	esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN311@ca_main
; Line 1197
	cmp	DWORD PTR _batch$1$[esp+1080], 0
	jne	$LN309@ca_main
; Line 1198
	push	DWORD PTR _total$1$[esp+1080]
	push	DWORD PTR _total_done$1$[esp+1084]
	push	OFFSET ??_C@_0DM@KFBODCJH@?6?$CFd?5out?5of?5?$CFd?5certificate?5reques@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1201
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
; Line 1203
	push	0
	mov	BYTE PTR _buf$[esp+1116], 0
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	lea	eax, DWORD PTR _buf$[esp+1120]
	push	10					; 0000000aH
	push	eax
	call	DWORD PTR __imp__fgets
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	SHORT $LN308@ca_main
; Line 1204
	push	OFFSET ??_C@_0CD@CCMDMABJ@CERTIFICATION?5CANCELED?3?5I?1O?5erro@
$LN710@ca_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN363@ca_main:
; Line 1206
	mov	DWORD PTR _ret$1$[esp+1080], 0
; Line 1207
	jmp	$err$715
$LN308@ca_main:
; Line 1209
	mov	al, BYTE PTR _buf$[esp+1080]
	cmp	al, 121					; 00000079H
	je	SHORT $LN309@ca_main
	cmp	al, 89					; 00000059H
	je	SHORT $LN309@ca_main
; Line 1210
	push	OFFSET ??_C@_0BI@LFFBCNEP@CERTIFICATION?5CANCELED?6?$AA@
; Line 1212
	jmp	SHORT $LN710@ca_main
$LN309@ca_main:
; Line 1216
	push	esi
	call	_sk_num
	push	eax
	push	OFFSET ??_C@_0CI@IOAEAKNK@Write?5out?5database?5with?5?$CFd?5new?5e@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1219
	push	0
	push	DWORD PTR _serial$[esp+1100]
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	ebp
	call	_save_serial
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$715
; Line 1222
	push	DWORD PTR _db$1$[esp+1080]
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	DWORD PTR _dbfile$2$[esp+1088]
	call	_save_index
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$715
$LN311@ca_main:
; Line 1226
	cmp	DWORD PTR _verbose$1$[esp+1080], 0
	je	SHORT $LN312@ca_main
; Line 1227
	push	OFFSET ??_C@_0BK@DNHCMKMD@writing?5new?5certificates?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN312@ca_main:
; Line 1228
	xor	ebx, ebx
	push	esi
	mov	DWORD PTR _i$4$[esp+1084], ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN16@ca_main
$LL17@ca_main:
; Line 1232
	push	ebx
	push	esi
	call	_sk_value
; Line 1237
	mov	esi, DWORD PTR _outdir$1$[esp+1088]
	mov	edi, eax
	mov	ecx, esi
	mov	DWORD PTR _x$1$[esp+1088], edi
	add	esp, 8
	mov	eax, DWORD PTR [edi]
	lea	edx, DWORD PTR [ecx+1]
	mov	eax, DWORD PTR [eax+4]
	mov	ebp, DWORD PTR [eax]
	mov	ebx, DWORD PTR [eax+8]
	npad	4
$LL686@ca_main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL686@ca_main
	sub	ecx, edx
	test	ebp, ebp
	je	SHORT $LN376@ca_main
	mov	eax, 125				; 0000007dH
	sub	eax, ebp
	add	eax, eax
	jmp	SHORT $LN377@ca_main
$LN376@ca_main:
	mov	eax, 248				; 000000f8H
$LN377@ca_main:
	cmp	ecx, eax
	jae	$LN438@ca_main
; Line 1242
	lea	edx, DWORD PTR _buf$[esp+1592]
	mov	ecx, esi
	sub	edx, esi
$LL378@ca_main:
	mov	al, BYTE PTR [ecx]
	lea	ecx, DWORD PTR [ecx+1]
	mov	BYTE PTR [ecx+edx-1], al
	test	al, al
	jne	SHORT $LL378@ca_main
; Line 1245
	push	256					; 00000100H
	lea	eax, DWORD PTR _buf$[esp+1596]
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	push	eax
	call	_BUF_strlcat
; Line 1248
	lea	ecx, DWORD PTR _buf$[esp+1604]
	add	esp, 12					; 0000000cH
	lea	edx, DWORD PTR [ecx+1]
$LL687@ca_main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL687@ca_main
	sub	ecx, edx
	lea	esi, DWORD PTR _buf$[esp+1592]
	add	esi, ecx
; Line 1249
	test	ebp, ebp
	jle	$LN314@ca_main
; Line 1250
	xor	edi, edi
	test	ebp, ebp
	jle	SHORT $LN691@ca_main
$LL20@ca_main:
; Line 1251
	lea	eax, DWORD PTR _buf$[esp+1848]
	cmp	esi, eax
	jae	SHORT $LN691@ca_main
; Line 1253
	movzx	eax, BYTE PTR [ebx]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+1852]
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	sub	eax, esi
	push	eax
	push	esi
	call	_BIO_snprintf
	inc	edi
	add	esp, 16					; 00000010H
	inc	ebx
; Line 1256
	add	esi, 2
	cmp	edi, ebp
	jl	SHORT $LL20@ca_main
$LN691@ca_main:
	mov	edi, DWORD PTR _x$1$[esp+1080]
$LN315@ca_main:
; Line 1267
	cmp	DWORD PTR _verbose$1$[esp+1080], 0
	mov	DWORD PTR [esi], 1835364398		; 6d65702eH
	mov	BYTE PTR [esi+4], 0
	je	SHORT $LN317@ca_main
; Line 1268
	lea	eax, DWORD PTR _buf$[esp+1592]
	push	eax
	push	OFFSET ??_C@_0M@JKCPKPL@writing?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN317@ca_main:
; Line 1270
	mov	ebp, DWORD PTR _Cout$1$[esp+1080]
	lea	eax, DWORD PTR _buf$[esp+1592]
	push	eax
	push	5
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	$LN439@ca_main
; Line 2188
	mov	ebx, DWORD PTR _notext$1$[esp+1080]
	test	ebx, ebx
	jne	SHORT $LN383@ca_main
; Line 2189
	push	edi
	push	ebp
	call	_X509_print
	add	esp, 8
$LN383@ca_main:
; Line 2190
	push	edi
	push	ebp
	call	_PEM_write_bio_X509
; Line 1275
	push	ebx
	push	DWORD PTR _output_der$1$[esp+1092]
	push	edi
	push	DWORD PTR _Sout$1$[esp+1100]
	call	_write_new_certificate
	mov	ebx, DWORD PTR _i$4$[esp+1104]
	mov	esi, DWORD PTR _cert_sk$1$[esp+1104]
	inc	ebx
	push	esi
	mov	DWORD PTR _i$4$[esp+1108], ebx
	call	_sk_num
	add	esp, 28					; 0000001cH
	cmp	ebx, eax
	jl	$LL17@ca_main
; Line 1370
	mov	ebp, DWORD PTR _serialfile$1$[esp+1080]
$LN16@ca_main:
; Line 1278
	push	esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	je	SHORT $LN319@ca_main
; Line 1280
	push	OFFSET ??_C@_03PNKCFLFB@old?$AA@
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	ebp
	call	_rotate_serial
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$715
; Line 1283
	push	OFFSET ??_C@_03PNKCFLFB@old?$AA@
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	DWORD PTR _dbfile$2$[esp+1088]
	call	_rotate_index
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$715
; Line 1286
	push	OFFSET ??_C@_0BD@FCLJNDBO@Data?5Base?5Updated?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN319@ca_main:
; Line 1291
	cmp	DWORD PTR _gencrl$1$[esp+1080], 0
	je	$LN360@ca_main
; Line 1293
	mov	ebx, DWORD PTR _crl_ext$1$[esp+1080]
	xor	ebp, ebp
	test	ebx, ebx
	jne	$LN470@ca_main
; Line 1294
	push	OFFSET ??_C@_0P@LMJCLHAD@crl_extensions?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _crl_ext$1$[esp+1080], ebx
; Line 1295
	test	ebx, ebx
	jne	$LN470@ca_main
; Line 1296
	call	_ERR_clear_error
$LN326@ca_main:
; Line 1313
	push	OFFSET ??_C@_09FMEKEDFM@crlnumber?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_string
	mov	edi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _crlnumberfile$1$[esp+1080], edi
	test	edi, edi
	je	$LN328@ca_main
; Line 1314
	push	0
	push	0
	push	edi
	call	_load_serial
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _crlnumber$1$[esp+1080], eax
	test	eax, eax
	jne	$LN328@ca_main
; Line 1315
	push	OFFSET ??_C@_0CA@NKEONCG@error?5while?5loading?5CRL?5number?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$err$715
$LN314@ca_main:
; Line 1259
	mov	WORD PTR [esi], 12336			; 00003030H
; Line 1260
	add	esi, 2
	jmp	$LN315@ca_main
$LN439@ca_main:
; Line 1271
	lea	eax, DWORD PTR _buf$[esp+1592]
	push	eax
	call	DWORD PTR __imp__perror
; Line 1272
	jmp	$LN703@ca_main
$LN438@ca_main:
; Line 1238
	push	OFFSET ??_C@_0CA@CIOHDAIP@certificate?5file?5name?5too?5long?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$err$715
$LN470@ca_main:
; Line 1301
	push	1
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$3[esp+1096]
	push	0
	push	eax
	call	_X509V3_set_ctx
; Line 1302
	push	DWORD PTR _conf
	lea	eax, DWORD PTR _ctx$3[esp+1108]
	push	eax
	call	_X509V3_set_nconf
; Line 1303
	push	0
	push	ebx
	lea	eax, DWORD PTR _ctx$3[esp+1120]
	push	eax
	push	DWORD PTR _conf
	call	_X509V3_EXT_add_nconf
	add	esp, 48					; 00000030H
	test	eax, eax
	jne	$LN326@ca_main
; Line 1304
	push	ebx
	push	OFFSET ??_C@_0CI@FHNGLKKG@Error?5Loading?5CRL?5extension?5sect@
; Line 1308
	jmp	$LN709@ca_main
$LN328@ca_main:
; Line 1319
	cmp	DWORD PTR _crldays$[esp+1080], ebp
	jne	$LN332@ca_main
	cmp	DWORD PTR _crlhours$[esp+1080], ebp
	jne	$LN332@ca_main
	cmp	DWORD PTR _crlsec$1$[esp+1080], ebp
	jne	SHORT $LN332@ca_main
; Line 1320
	lea	eax, DWORD PTR _crldays$[esp+1080]
	push	eax
	push	OFFSET ??_C@_0BB@CNLEMMI@default_crl_days?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_number_e
	neg	eax
	sbb	eax, eax
	and	DWORD PTR _crldays$[esp+1096], eax
; Line 1323
	lea	eax, DWORD PTR _crlhours$[esp+1096]
	push	eax
	push	OFFSET ??_C@_0BC@BCEJBAGO@default_crl_hours?$AA@
	push	DWORD PTR _section
	push	DWORD PTR _conf
	call	_NCONF_get_number_e
	add	esp, 32					; 00000020H
	neg	eax
	sbb	eax, eax
	and	DWORD PTR _crlhours$[esp+1080], eax
; Line 1326
	call	_ERR_clear_error
; Line 1328
	cmp	DWORD PTR _crldays$[esp+1080], ebp
	jne	SHORT $LN332@ca_main
	cmp	DWORD PTR _crlhours$[esp+1080], ebp
	jne	SHORT $LN332@ca_main
; Line 1329
	push	OFFSET ??_C@_0DF@JPCFHIM@cannot?5lookup?5how?5long?5until?5the@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$err$715
$LN332@ca_main:
; Line 1334
	cmp	DWORD PTR _verbose$1$[esp+1080], ebp
	je	SHORT $LN333@ca_main
; Line 1335
	push	OFFSET ??_C@_0M@LKOGJLM@making?5CRL?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN333@ca_main:
; Line 1336
	call	_X509_CRL_new
	mov	ebx, eax
	mov	DWORD PTR _crl$1$[esp+1080], ebx
	test	ebx, ebx
	je	$err$715
; Line 1338
	push	DWORD PTR _x509$1$[esp+1080]
	call	_X509_get_subject_name
	push	eax
	push	ebx
	call	_X509_CRL_set_issuer_name
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$715
; Line 1341
	call	_ASN1_TIME_new
	mov	esi, eax
; Line 1342
	test	esi, esi
	je	$err$715
; Line 1344
	push	0
	push	esi
	call	_X509_gmtime_adj
; Line 1345
	push	esi
	push	ebx
	call	_X509_CRL_set_lastUpdate
; Line 1346
	imul	eax, DWORD PTR _crlhours$[esp+1096], 3600
	push	0
	add	eax, DWORD PTR _crlsec$1$[esp+1100]
	push	eax
	push	DWORD PTR _crldays$[esp+1104]
	push	esi
	call	_X509_time_adj_ex
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN337@ca_main
; Line 1348
	push	OFFSET ??_C@_0BO@LBJONHE@error?5setting?5CRL?5nextUpdate?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
	add	esp, 8
	jmp	$err$715
$LN337@ca_main:
; Line 1351
	push	esi
	push	ebx
	call	_X509_CRL_set_nextUpdate
; Line 1353
	push	esi
	call	_ASN1_TIME_free
; Line 1355
	mov	esi, DWORD PTR _db$1$[esp+1092]
	xor	ebx, ebx
	mov	eax, DWORD PTR [esi+4]
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	$LN22@ca_main
	npad	7
$LL23@ca_main:
; Line 1356
	mov	eax, DWORD PTR [esi+4]
	push	ebx
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	edi, eax
	add	esp, 8
; Line 1357
	mov	eax, DWORD PTR [edi]
	cmp	BYTE PTR [eax], 82			; 00000052H
	jne	$LN21@ca_main
; Line 1358
	call	_X509_REVOKED_new
	mov	esi, eax
	test	esi, esi
	je	$err$715
; Line 1360
	push	DWORD PTR [edi+8]
	push	esi
	call	_make_revoked
	add	esp, 8
; Line 1361
	test	eax, eax
	je	$err$715
; Line 1365
	push	DWORD PTR [edi+12]
	cmp	eax, 2
	mov	eax, 1
	cmove	ebp, eax
	lea	eax, DWORD PTR _serial$[esp+1084]
	push	eax
	call	_BN_hex2bn
	add	esp, 8
	test	eax, eax
	je	$err$715
; Line 1367
	push	0
	push	DWORD PTR _serial$[esp+1084]
	call	_BN_to_ASN1_INTEGER
; Line 1368
	push	DWORD PTR _serial$[esp+1088]
	mov	edi, eax
	call	_BN_free
	add	esp, 12					; 0000000cH
; Line 1369
	mov	DWORD PTR _serial$[esp+1080], 0
; Line 1370
	test	edi, edi
	je	$err$715
; Line 1372
	push	edi
	push	esi
	call	_X509_REVOKED_set_serialNumber
; Line 1373
	push	edi
	call	_ASN1_INTEGER_free
; Line 1374
	push	esi
	push	DWORD PTR _crl$1$[esp+1096]
	call	_X509_CRL_add0_revoked
	mov	esi, DWORD PTR _db$1$[esp+1100]
	add	esp, 20					; 00000014H
$LN21@ca_main:
; Line 1355
	mov	eax, DWORD PTR [esi+4]
	inc	ebx
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL23@ca_main
	mov	edi, DWORD PTR _crlnumberfile$1$[esp+1080]
$LN22@ca_main:
; Line 1381
	mov	ebx, DWORD PTR _crl$1$[esp+1080]
	push	ebx
	call	_X509_CRL_sort
	add	esp, 4
; Line 1384
	cmp	DWORD PTR _verbose$1$[esp+1080], 0
	je	SHORT $LN344@ca_main
; Line 1385
	push	OFFSET ??_C@_0N@HFKLMDGD@signing?5CRL?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN344@ca_main:
; Line 1389
	mov	esi, DWORD PTR _crl_ext$1$[esp+1080]
	test	esi, esi
	jne	SHORT $LN346@ca_main
	test	edi, edi
	je	$LN484@ca_main
$LN346@ca_main:
; Line 1391
	push	0
	push	ebx
	push	0
	push	0
	push	DWORD PTR _x509$1$[esp+1096]
	lea	eax, DWORD PTR _crlctx$2[esp+1100]
	push	eax
	call	_X509V3_set_ctx
; Line 1392
	push	DWORD PTR _conf
	lea	eax, DWORD PTR _crlctx$2[esp+1108]
	push	eax
	call	_X509V3_set_nconf
	add	esp, 32					; 00000020H
; Line 1394
	test	esi, esi
	je	SHORT $LN348@ca_main
; Line 1395
	push	ebx
	push	esi
	lea	eax, DWORD PTR _crlctx$2[esp+1088]
	push	eax
	push	DWORD PTR _conf
	call	_X509V3_EXT_CRL_add_nconf
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$715
$LN348@ca_main:
; Line 1397
	test	edi, edi
	je	SHORT $LN351@ca_main
; Line 1398
	mov	ebp, DWORD PTR _crlnumber$1$[esp+1080]
	push	0
	push	ebp
	call	_BN_to_ASN1_INTEGER
	mov	esi, eax
	add	esp, 8
; Line 1399
	test	esi, esi
	je	$err$715
; Line 1401
	push	0
	push	0
	push	esi
	push	88					; 00000058H
	push	ebx
	call	_X509_CRL_add1_ext_i2d
; Line 1402
	push	esi
	call	_ASN1_INTEGER_free
; Line 1403
	mov	ebp, 1
; Line 1404
	push	ebp
	push	DWORD PTR _crlnumber$1$[esp+1108]
	call	_BN_add_word
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$err$715
	mov	esi, DWORD PTR _crl_ext$1$[esp+1080]
$LN351@ca_main:
; Line 1408
	test	esi, esi
	jne	SHORT $LN353@ca_main
$LN484@ca_main:
	test	ebp, ebp
	je	SHORT $LN354@ca_main
$LN353@ca_main:
; Line 1409
	push	1
	push	ebx
	call	_X509_CRL_set_version
	add	esp, 8
	test	eax, eax
	je	$err$715
$LN354@ca_main:
; Line 1415
	mov	ebp, DWORD PTR _crlnumber$1$[esp+1080]
	test	edi, edi
	je	SHORT $LN356@ca_main
	push	0
	push	ebp
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	edi
	call	_save_serial
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$715
$LN356@ca_main:
; Line 1418
	test	ebp, ebp
	je	SHORT $LN357@ca_main
; Line 1419
	push	ebp
	call	_BN_free
	add	esp, 4
; Line 1420
	mov	DWORD PTR _crlnumber$1$[esp+1080], 0
$LN357@ca_main:
; Line 1423
	push	DWORD PTR _sigopts$1$[esp+1080]
	push	DWORD PTR _dgst$1$[esp+1084]
	push	DWORD PTR _pkey$1$[esp+1088]
	push	ebx
	push	DWORD PTR _bio_err
	call	_do_X509_CRL_sign
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$err$715
; Line 1426
	push	ebx
	push	DWORD PTR _Sout$1$[esp+1084]
	call	_PEM_write_bio_X509_CRL
	add	esp, 8
; Line 1428
	test	edi, edi
	je	SHORT $LN360@ca_main
; Line 1429
	push	OFFSET ??_C@_03PNKCFLFB@old?$AA@
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	edi
	call	_rotate_serial
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$err$715
$LN360@ca_main:
; Line 1434
	mov	edi, DWORD PTR _dorevoke$1$[esp+1080]
	test	edi, edi
	je	$LN363@ca_main
; Line 1435
	mov	eax, DWORD PTR _infile$1$[esp+1080]
	test	eax, eax
	jne	SHORT $LN362@ca_main
; Line 1436
	push	OFFSET ??_C@_0BA@BINEDGJD@no?5input?5files?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$err$715
$LN362@ca_main:
; Line 1440
	push	eax
	push	DWORD PTR _e$1$[esp+1084]
	push	0
	push	3
	push	eax
	push	DWORD PTR _bio_err
	call	_load_cert
	mov	esi, eax
	add	esp, 24					; 00000018H
; Line 1441
	test	esi, esi
	je	SHORT $err$715
; Line 1445
	push	DWORD PTR _rev_arg$1$[esp+1080]
	mov	eax, DWORD PTR _rev_type$2$[esp+1084]
	or	ecx, -1
	mov	ebx, DWORD PTR _db$1$[esp+1084]
	cmp	edi, 2
	cmove	eax, ecx
	push	eax
	push	ebx
	push	esi
	call	_do_revoke
	add	esp, 16					; 00000010H
; Line 1446
	test	eax, eax
	jle	SHORT $err$715
; Line 1448
	push	esi
	call	_X509_free
; Line 1450
	push	ebx
	mov	ebx, DWORD PTR _dbfile$2$[esp+1088]
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	ebx
	call	_save_index
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$715
; Line 1453
	push	OFFSET ??_C@_03PNKCFLFB@old?$AA@
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	push	ebx
	call	_rotate_index
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$715
; Line 1456
	push	OFFSET ??_C@_0BD@FCLJNDBO@Data?5Base?5Updated?6?$AA@
; Line 1460
	jmp	$LN710@ca_main
$LN182@ca_main:
; Line 681
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
$LN703@ca_main:
	add	esp, 4
$err$715:
; Line 1462
	mov	eax, DWORD PTR _tofree$1$[esp+1080]
	test	eax, eax
	je	SHORT $LN369@ca_main
; Line 1463
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN369@ca_main:
; Line 1464
	push	DWORD PTR _Cout$1$[esp+1080]
	call	_BIO_free_all
; Line 1465
	push	DWORD PTR _Sout$1$[esp+1084]
	call	_BIO_free_all
; Line 1466
	push	DWORD PTR _out$1$[esp+1088]
	call	_BIO_free_all
; Line 1467
	push	DWORD PTR _in$1$[esp+1092]
	call	_BIO_free_all
; Line 1469
	mov	eax, DWORD PTR _cert_sk$1$[esp+1096]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN370@ca_main
; Line 1470
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN370@ca_main:
; Line 1472
	mov	esi, DWORD PTR _ret$1$[esp+1080]
	test	esi, esi
	je	SHORT $LN371@ca_main
; Line 1473
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN371@ca_main:
; Line 1474
	push	DWORD PTR _bio_err
	push	DWORD PTR _randfile$1$[esp+1084]
	call	_app_RAND_write_file
	add	esp, 8
; Line 1475
	cmp	DWORD PTR _free_key$1$[esp+1080], 0
	je	SHORT $LN372@ca_main
	mov	eax, DWORD PTR _key$[esp+1080]
	test	eax, eax
	je	SHORT $LN372@ca_main
; Line 1476
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN372@ca_main:
; Line 1477
	push	DWORD PTR _serial$[esp+1080]
	call	_BN_free
; Line 1478
	push	DWORD PTR _crlnumber$1$[esp+1084]
	call	_BN_free
; Line 1479
	push	DWORD PTR _db$1$[esp+1088]
	call	_free_index
; Line 1480
	mov	eax, DWORD PTR _sigopts$1$[esp+1092]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN373@ca_main
; Line 1481
	push	eax
	call	_sk_free
	add	esp, 4
$LN373@ca_main:
; Line 1482
	push	DWORD PTR _pkey$1$[esp+1080]
	call	_EVP_PKEY_free
; Line 1483
	mov	eax, DWORD PTR _x509$1$[esp+1084]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN374@ca_main
; Line 1484
	push	eax
	call	_X509_free
	add	esp, 4
$LN374@ca_main:
; Line 1485
	push	DWORD PTR _crl$1$[esp+1080]
	call	_X509_CRL_free
; Line 1486
	push	DWORD PTR _conf
	call	_NCONF_free
; Line 1487
	push	DWORD PTR _extconf
	call	_NCONF_free
	add	esp, 12					; 0000000cH
; Line 1488
	call	_OBJ_cleanup
; Line 1491
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1080]
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1064				; 00000428H
	ret	0
_ca_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _old_entry_print
_TEXT	SEGMENT
_buf$ = -32						; size = 25
__$ArrayPad$ = -4					; size = 4
_bp$ = 8						; size = 4
_obj$ = 12						; size = 4
_str$ = 16						; size = 4
_old_entry_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 2770
	mov	eax, 32					; 00000020H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+32], eax
	mov	eax, DWORD PTR _obj$[esp+28]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _str$[esp+36]
	push	esi
	mov	esi, DWORD PTR _bp$[esp+40]
	push	edi
; Line 2773
	push	eax
	push	esi
; Line 2774
	lea	edi, DWORD PTR _buf$[esp+56]
	call	_i2a_ASN1_OBJECT
; Line 2775
	mov	ebx, 22					; 00000016H
	add	esp, 8
	sub	ebx, eax
	test	ebx, ebx
	jle	SHORT $LN4@old_entry_
	mov	ecx, ebx
	mov	eax, 538976288				; 20202020H
	mov	edx, ecx
	shr	ecx, 2
	rep stosd
	mov	ecx, edx
	and	ecx, 3
	rep stosb
	lea	edi, DWORD PTR _buf$[esp+48]
	add	edi, ebx
$LN4@old_entry_:
; Line 2779
	lea	eax, DWORD PTR _buf$[esp+48]
	mov	WORD PTR [edi], 58			; 0000003aH
	push	eax
	push	esi
	call	_BIO_puts
; Line 2781
	mov	eax, DWORD PTR [ebp+4]
	add	esp, 8
	cmp	eax, 19					; 00000013H
	jne	SHORT $LN8@old_entry_
; Line 2782
	push	OFFSET ??_C@_0M@FPAMBEHE@PRINTABLE?3?8?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $LN15@old_entry_
$LN8@old_entry_:
; Line 2783
	cmp	eax, 20					; 00000014H
	jne	SHORT $LN10@old_entry_
; Line 2784
	push	OFFSET ??_C@_0M@OICOEHIA@T61STRING?3?8?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $LN15@old_entry_
$LN10@old_entry_:
; Line 2785
	cmp	eax, 22					; 00000016H
	jne	SHORT $LN12@old_entry_
; Line 2786
	push	OFFSET ??_C@_0M@KEGLEMJI@IA5STRING?3?8?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $LN15@old_entry_
$LN12@old_entry_:
; Line 2787
	cmp	eax, 28					; 0000001cH
	jne	SHORT $LN14@old_entry_
; Line 2788
	push	OFFSET ??_C@_0BC@MLMKONMK@UNIVERSALSTRING?3?8?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $LN15@old_entry_
$LN14@old_entry_:
; Line 2790
	push	eax
	push	OFFSET ??_C@_0M@EJNHLAGD@ASN?41?5?$CF2d?3?8?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN15@old_entry_:
; Line 2793
	mov	edi, DWORD PTR [ebp]
	mov	ebx, DWORD PTR [ebp+8]
	test	edi, edi
	jle	SHORT $LN6@old_entry_
	npad	4
$LL7@old_entry_:
; Line 2794
	mov	al, BYTE PTR [ebx]
	cmp	al, 32					; 00000020H
	jl	SHORT $LN16@old_entry_
	cmp	al, 126					; 0000007eH
	jg	SHORT $LN16@old_entry_
; Line 2795
	movsx	eax, al
	push	eax
	push	OFFSET ??_C@_02HAOIJKIC@?$CFc?$AA@
	jmp	SHORT $LN31@old_entry_
$LN16@old_entry_:
; Line 2796
	test	al, al
	jns	SHORT $LN18@old_entry_
; Line 2797
	movsx	eax, al
	push	eax
	push	OFFSET ??_C@_07HLMBFCJG@?20x?$CF02X?$AA@
	jmp	SHORT $LN31@old_entry_
$LN18@old_entry_:
; Line 2798
	cmp	al, 247					; 000000f7H
	jne	SHORT $LN20@old_entry_
; Line 2799
	push	OFFSET ??_C@_02DOECAPGL@?$FO?$DP?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $LN21@old_entry_
$LN20@old_entry_:
; Line 2801
	movsx	eax, al
	add	eax, 64					; 00000040H
	push	eax
	push	OFFSET ??_C@_03IFDPOEBN@?$FO?$CFc?$AA@
$LN31@old_entry_:
	push	esi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN21@old_entry_:
; Line 2802
	dec	edi
	inc	ebx
	test	edi, edi
	jg	SHORT $LL7@old_entry_
$LN6@old_entry_:
; Line 2804
	push	OFFSET ??_C@_02MHFDJOAC@?8?6?$AA@
	push	esi
	call	_BIO_printf
; Line 2806
	mov	ecx, DWORD PTR __$ArrayPad$[esp+56]
	add	esp, 8
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	ret	0
_old_entry_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _make_revoked
_TEXT	SEGMENT
_hold$ = -16						; size = 4
_comp_time$ = -12					; size = 4
_revDate$ = -8						; size = 4
_reason_code$ = -4					; size = 4
_rev$ = 8						; size = 4
_str$ = 12						; size = 4
_make_revoked PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 2715
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	edi
; Line 2725
	push	DWORD PTR _str$[esp+20]
	lea	eax, DWORD PTR _comp_time$[esp+28]
	mov	DWORD PTR _reason_code$[esp+28], -1
	push	eax
	lea	eax, DWORD PTR _hold$[esp+32]
	xor	ebx, ebx
	push	eax
	lea	eax, DWORD PTR _reason_code$[esp+36]
	mov	DWORD PTR _hold$[esp+36], ebx
	push	eax
	lea	eax, DWORD PTR _revDate$[esp+40]
	mov	DWORD PTR _comp_time$[esp+40], ebx
	push	eax
	xor	edi, edi
	mov	DWORD PTR _revDate$[esp+44], ebx
	call	_unpack_revinfo
	add	esp, 20					; 00000014H
; Line 2727
	test	eax, eax
	je	$LN12@make_revok
; Line 2730
	push	ebp
	mov	ebp, DWORD PTR _reason_code$[esp+28]
	push	esi
	mov	esi, DWORD PTR _rev$[esp+28]
	test	esi, esi
	je	$LN11@make_revok
	push	DWORD PTR _revDate$[esp+32]
	push	esi
	call	_X509_REVOKED_set_revocationDate
	add	esp, 8
	test	eax, eax
	je	SHORT $LN16@make_revok
; Line 2733
	cmp	ebp, -1
	je	SHORT $LN7@make_revok
; Line 2734
	call	_ASN1_ENUMERATED_new
	mov	edi, eax
; Line 2735
	test	edi, edi
	je	SHORT $LN16@make_revok
	push	ebp
	push	edi
	call	_ASN1_ENUMERATED_set
	add	esp, 8
	test	eax, eax
	je	SHORT $LN16@make_revok
; Line 2737
	push	ebx
	push	ebx
	push	edi
	push	141					; 0000008dH
	push	esi
	call	_X509_REVOKED_add1_ext_i2d
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN16@make_revok
$LN7@make_revok:
; Line 2741
	mov	ecx, DWORD PTR _comp_time$[esp+32]
	test	ecx, ecx
	je	SHORT $LN9@make_revok
; Line 2742
	push	0
	push	0
	push	ecx
	push	142					; 0000008eH
	push	esi
	call	_X509_REVOKED_add1_ext_i2d
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN16@make_revok
$LN9@make_revok:
; Line 2746
	mov	eax, DWORD PTR _hold$[esp+32]
	test	eax, eax
	je	SHORT $LN11@make_revok
; Line 2747
	push	0
	push	0
	push	eax
	push	430					; 000001aeH
	push	esi
	call	_X509_REVOKED_add1_ext_i2d
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN16@make_revok
$LN11@make_revok:
; Line 2752
	xor	ebx, ebx
	cmp	ebp, -1
	setne	bl
	inc	ebx
$LN16@make_revok:
	pop	esi
	pop	ebp
$LN12@make_revok:
; Line 2761
	push	DWORD PTR _hold$[esp+24]
	call	_ASN1_OBJECT_free
; Line 2762
	push	DWORD PTR _comp_time$[esp+28]
	call	_ASN1_GENERALIZEDTIME_free
; Line 2763
	push	edi
	call	_ASN1_ENUMERATED_free
; Line 2764
	push	DWORD PTR _revDate$[esp+36]
	call	_ASN1_TIME_free
	add	esp, 16					; 00000010H
; Line 2766
	mov	eax, ebx
	pop	edi
	pop	ebx
; Line 2767
	add	esp, 16					; 00000010H
	ret	0
_make_revoked ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _make_revocation_str
_TEXT	SEGMENT
_revtm$1$ = 8						; size = 4
_rev_type$ = 8						; size = 4
_rev_arg$ = 12						; size = 4
_make_revocation_str PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 2618
	push	ebx
	push	ebp
	push	esi
; Line 2624
	mov	esi, DWORD PTR _rev_type$[esp+8]
	xor	ebx, ebx
	push	edi
	xor	edi, edi
	lea	eax, DWORD PTR [esi-1]
	cmp	eax, 3
	ja	$LN15@make_revoc
	jmp	DWORD PTR $LN35@make_revoc[eax*4]
$LN8@make_revoc:
; Line 2629
	mov	ebp, DWORD PTR _rev_arg$[esp+12]
	xor	esi, esi
	mov	ebx, DWORD PTR __imp___stricmp
	npad	5
$LL6@make_revoc:
; Line 2630
	push	DWORD PTR _crl_reasons[esi*4]
	push	ebp
	call	ebx
	add	esp, 8
	test	eax, eax
	je	SHORT $LN25@make_revoc
; Line 2629
	inc	esi
	cmp	esi, 8
	jl	SHORT $LL6@make_revoc
; Line 2630
	jmp	SHORT $LN29@make_revoc
$LN25@make_revoc:
; Line 2631
	mov	ebx, DWORD PTR _crl_reasons[esi*4]
; Line 2635
	test	ebx, ebx
	jne	SHORT $LN15@make_revoc
$LN29@make_revoc:
; Line 2636
	push	ebp
	push	OFFSET ??_C@_0BH@NKOOAKFK@Unknown?5CRL?5reason?5?$CFs?6?$AA@
$LN32@make_revoc:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN33@make_revoc:
; Line 2637
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 2704
	ret	0
$LN11@make_revoc:
; Line 2644
	mov	edi, DWORD PTR _rev_arg$[esp+12]
	push	0
	push	edi
	call	_OBJ_txt2obj
	mov	esi, eax
; Line 2645
	push	esi
	call	_ASN1_OBJECT_free
	add	esp, 12					; 0000000cH
; Line 2647
	test	esi, esi
	jne	SHORT $LN12@make_revoc
; Line 2648
	push	edi
	push	OFFSET ??_C@_0BO@OAMFEEJM@Invalid?5object?5identifier?5?$CFs?6?$AA@
; Line 2649
	jmp	SHORT $LN32@make_revoc
$LN12@make_revoc:
; Line 2652
	mov	ebx, OFFSET ??_C@_0BA@BEFHDCOK@holdInstruction?$AA@
; Line 2654
	jmp	SHORT $LN15@make_revoc
$LN13@make_revoc:
; Line 2660
	mov	edi, DWORD PTR _rev_arg$[esp+12]
	push	edi
	push	0
	call	_ASN1_GENERALIZEDTIME_set_string
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN14@make_revoc
; Line 2661
	push	edi
	push	OFFSET ??_C@_0CO@GEFMGEIH@Invalid?5time?5format?5?$CFs?4?5Need?5YYY@
; Line 2664
	jmp	SHORT $LN32@make_revoc
$LN14@make_revoc:
; Line 2667
	cmp	esi, 3
	mov	ebx, OFFSET ??_C@_07DBMHLFCD@keyTime?$AA@
	mov	eax, OFFSET ??_C@_09LALKJNL@CAkeyTime?$AA@
	cmovne	ebx, eax
$LN15@make_revoc:
; Line 2676
	push	0
	push	0
	call	_X509_gmtime_adj
	add	esp, 8
	mov	DWORD PTR _revtm$1$[esp+12], eax
; Line 2678
	test	eax, eax
	je	SHORT $LN33@make_revoc
; Line 2681
	mov	esi, DWORD PTR [eax]
	inc	esi
; Line 2683
	test	ebx, ebx
	je	SHORT $LN18@make_revoc
; Line 2684
	mov	ecx, ebx
	lea	edx, DWORD PTR [ecx+1]
$LL30@make_revoc:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL30@make_revoc
	sub	ecx, edx
	inc	esi
	add	esi, ecx
$LN18@make_revoc:
; Line 2685
	test	edi, edi
	je	SHORT $LN19@make_revoc
; Line 2686
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
	npad	7
$LL31@make_revoc:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL31@make_revoc
	sub	ecx, edx
	inc	esi
	add	esi, ecx
$LN19@make_revoc:
; Line 2688
	push	2688					; 00000a80H
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	push	esi
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 2690
	test	ebp, ebp
	je	$LN33@make_revoc
; Line 2693
	mov	eax, DWORD PTR _revtm$1$[esp+12]
	push	esi
	push	DWORD PTR [eax+8]
	push	ebp
	call	_BUF_strlcpy
	add	esp, 12					; 0000000cH
; Line 2694
	test	ebx, ebx
	je	SHORT $LN21@make_revoc
; Line 2695
	push	esi
	push	OFFSET ??_C@_01IHBHIGKO@?0?$AA@
	push	ebp
	call	_BUF_strlcat
; Line 2696
	push	esi
	push	ebx
	push	ebp
	call	_BUF_strlcat
	add	esp, 24					; 00000018H
$LN21@make_revoc:
; Line 2698
	test	edi, edi
	je	SHORT $LN22@make_revoc
; Line 2699
	push	esi
	push	OFFSET ??_C@_01IHBHIGKO@?0?$AA@
	push	ebp
	call	_BUF_strlcat
; Line 2700
	push	esi
	push	edi
	push	ebp
	call	_BUF_strlcat
	add	esp, 24					; 00000018H
$LN22@make_revoc:
; Line 2702
	push	DWORD PTR _revtm$1$[esp+12]
	call	_ASN1_UTCTIME_free
	add	esp, 4
; Line 2703
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2704
	ret	0
	npad	1
$LN35@make_revoc:
	DD	$LN8@make_revoc
	DD	$LN11@make_revoc
	DD	$LN13@make_revoc
	DD	$LN13@make_revoc
_make_revocation_str ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _check_time_format
_TEXT	SEGMENT
_str$ = 8						; size = 4
_check_time_format PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 2337
	push	DWORD PTR _str$[esp-4]
	push	0
	call	_ASN1_TIME_set_string
	add	esp, 8
; Line 2338
	ret	0
_check_time_format ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_updatedb
_TEXT	SEGMENT
_a_tm$2$ = -8						; size = 4
_a_y2k$1$ = -4						; size = 4
_db$ = 8						; size = 4
_do_updatedb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 2528
	mov	eax, 8
	call	__chkstk
	push	edi
; Line 2530
	xor	edi, edi
; Line 2534
	call	_ASN1_UTCTIME_new
; Line 2535
	test	eax, eax
	jne	SHORT $LN5@do_updated
; Line 2536
	or	eax, -1
	pop	edi
; Line 2590
	add	esp, 8
	ret	0
$LN5@do_updated:
	push	ebx
	push	ebp
; Line 2539
	push	0
	push	eax
	call	_X509_gmtime_adj
	mov	ebx, eax
; Line 2540
	push	2540					; 000009ecH
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	mov	DWORD PTR _a_tm$2$[esp+36], ebx
	mov	eax, DWORD PTR [ebx]
	inc	eax
	push	eax
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 20					; 00000014H
; Line 2541
	test	ebp, ebp
	jne	SHORT $LN6@do_updated
; Line 2542
	or	edi, -1
; Line 2543
	jmp	$err$30
$LN6@do_updated:
	push	esi
; Line 2546
	push	DWORD PTR [ebx]
	push	DWORD PTR [ebx+8]
	push	ebp
	call	_memcpy
; Line 2547
	mov	eax, DWORD PTR [ebx]
; Line 2549
	push	2
	push	OFFSET ??_C@_02CNFIOGBL@49?$AA@
	push	ebp
	mov	BYTE PTR [eax+ebp], 0
	call	DWORD PTR __imp__strncmp
; Line 2554
	mov	esi, DWORD PTR _db$[esp+44]
	xor	ecx, ecx
	test	eax, eax
	setle	cl
	xor	ebx, ebx
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR _a_y2k$1$[esp+48], ecx
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 28					; 0000001cH
	test	eax, eax
	jle	$LN25@do_updated
	npad	7
$LL4@do_updated:
; Line 2555
	mov	eax, DWORD PTR [esi+4]
	push	ebx
	push	DWORD PTR [eax+4]
	call	_sk_value
	mov	esi, eax
	add	esp, 8
; Line 2557
	mov	eax, DWORD PTR [esi]
	cmp	BYTE PTR [eax], 86			; 00000056H
	jne	SHORT $LN2@do_updated
; Line 2559
	push	2
	push	OFFSET ??_C@_02CNFIOGBL@49?$AA@
	push	DWORD PTR [esi+4]
	call	DWORD PTR __imp__strncmp
	xor	ecx, ecx
	add	esp, 12					; 0000000cH
	test	eax, eax
; Line 2564
	mov	eax, DWORD PTR _a_y2k$1$[esp+24]
	setle	cl
	cmp	ecx, eax
	jne	SHORT $LN27@do_updated
; Line 2566
	mov	ecx, DWORD PTR [esi+4]
	mov	eax, ebp
	npad	1
$LL21@do_updated:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN22@do_updated
	test	dl, dl
	je	SHORT $LN23@do_updated
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN22@do_updated
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL21@do_updated
$LN23@do_updated:
	xor	eax, eax
	jmp	SHORT $LN24@do_updated
$LN22@do_updated:
	sbb	eax, eax
	or	eax, 1
$LN24@do_updated:
	test	eax, eax
	jg	SHORT $LN2@do_updated
; Line 2572
	jmp	SHORT $LN28@do_updated
$LN27@do_updated:
; Line 2573
	jge	SHORT $LN2@do_updated
$LN28@do_updated:
; Line 2574
	mov	eax, DWORD PTR [esi]
; Line 2576
	inc	edi
	mov	BYTE PTR [eax], 69			; 00000045H
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+1], 0
; Line 2578
	push	DWORD PTR [esi+12]
	push	OFFSET ??_C@_0M@OMINNFDO@?$CFs?$DNExpired?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN2@do_updated:
; Line 2554
	mov	esi, DWORD PTR _db$[esp+20]
	inc	ebx
	mov	eax, DWORD PTR [esi+4]
	push	DWORD PTR [eax+4]
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL4@do_updated
$LN25@do_updated:
	mov	ebx, DWORD PTR _a_tm$2$[esp+24]
	pop	esi
$err$30:
; Line 2586
	push	ebx
	call	_ASN1_UTCTIME_free
; Line 2587
	push	ebp
	call	_CRYPTO_free
	add	esp, 8
; Line 2589
	mov	eax, edi
	pop	ebp
	pop	ebx
	pop	edi
; Line 2590
	add	esp, 8
	ret	0
_do_updatedb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_certificate_status
_TEXT	SEGMENT
_row$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_serial$ = 8						; size = 4
_db$ = 12						; size = 4
_get_certificate_status PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 2456
	mov	eax, 28					; 0000001cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+28], eax
	push	ebx
	mov	ebx, DWORD PTR _db$[esp+28]
	xorps	xmm0, xmm0
	push	esi
	mov	esi, DWORD PTR _serial$[esp+32]
; Line 2465
	mov	ecx, esi
	push	edi
	or	edi, -1
	mov	DWORD PTR _row$[esp+56], 0
	movups	XMMWORD PTR _row$[esp+40], xmm0
	mov	DWORD PTR _row$[esp+60], 0
	lea	edx, DWORD PTR [ecx+1]
$LL44@get_certif:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL44@get_certif
	sub	ecx, edx
	push	2465					; 000009a1H
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	lea	eax, DWORD PTR [ecx+2]
	push	eax
	call	_CRYPTO_malloc
	mov	edx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _row$[esp+52], edx
; Line 2466
	test	edx, edx
	jne	SHORT $LN11@get_certif
; Line 2467
	push	OFFSET ??_C@_0BA@DHKOJLMG@Malloc?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2468
	jmp	$err$52
$LN11@get_certif:
; Line 2471
	mov	ecx, esi
	lea	edi, DWORD PTR [ecx+1]
$LL45@get_certif:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL45@get_certif
	sub	ecx, edi
	test	cl, 1
; Line 2478
	mov	ecx, esi
	je	SHORT $LN12@get_certif
	mov	BYTE PTR [edx], 48			; 00000030H
	lea	edx, DWORD PTR [ecx+1]
	npad	4
$LL46@get_certif:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL46@get_certif
	mov	eax, DWORD PTR _row$[esp+52]
	sub	ecx, edx
	push	ecx
	inc	eax
	push	esi
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2479
	lea	ecx, DWORD PTR [esi+1]
	npad	4
$LL47@get_certif:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL47@get_certif
	mov	eax, DWORD PTR _row$[esp+52]
	sub	esi, ecx
	mov	BYTE PTR [esi+eax+1], 0
; Line 2480
	jmp	SHORT $LN13@get_certif
$LN12@get_certif:
; Line 2482
	lea	edi, DWORD PTR [ecx+1]
$LL48@get_certif:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL48@get_certif
	sub	ecx, edi
	push	ecx
	push	esi
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2483
	lea	ecx, DWORD PTR [esi+1]
	npad	2
$LL49@get_certif:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL49@get_certif
	mov	eax, DWORD PTR _row$[esp+52]
	sub	esi, ecx
	mov	BYTE PTR [esi+eax], 0
$LN13@get_certif:
; Line 2487
	mov	eax, DWORD PTR _row$[esp+52]
	xor	esi, esi
	mov	al, BYTE PTR [eax]
	test	al, al
	je	SHORT $LN6@get_certif
	mov	edi, DWORD PTR __imp__toupper
$LL7@get_certif:
; Line 2488
	movzx	eax, al
	push	eax
	call	edi
	mov	ecx, DWORD PTR _row$[esp+56]
	lea	esi, DWORD PTR [esi+1]
	add	esp, 4
	mov	BYTE PTR [ecx+esi-1], al
	mov	eax, DWORD PTR _row$[esp+52]
	mov	al, BYTE PTR [eax+esi]
	test	al, al
	jne	SHORT $LL7@get_certif
$LN6@get_certif:
; Line 2493
	lea	eax, DWORD PTR _row$[esp+40]
	mov	edi, 1
	push	eax
	push	3
	push	DWORD PTR [ebx+4]
	call	_TXT_DB_get_by_index
	add	esp, 12					; 0000000cH
; Line 2494
	test	eax, eax
	jne	SHORT $LN14@get_certif
; Line 2495
	push	DWORD PTR _row$[esp+52]
	push	OFFSET ??_C@_0BO@IBICPFBA@Serial?5?$CFs?5not?5present?5in?5db?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2497
	jmp	$LN50@get_certif
$LN14@get_certif:
; Line 2498
	mov	eax, DWORD PTR [eax]
	mov	al, BYTE PTR [eax]
	cmp	al, 86					; 00000056H
	jne	SHORT $LN16@get_certif
; Line 2499
	push	86					; 00000056H
	push	DWORD PTR _row$[esp+56]
	push	OFFSET ??_C@_0P@KBBAHPCN@?$CFs?$DNValid?5?$CI?$CFc?$CJ?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 2501
	jmp	SHORT $err$52
$LN16@get_certif:
; Line 2502
	cmp	al, 82					; 00000052H
	jne	SHORT $LN18@get_certif
; Line 2503
	push	82					; 00000052H
	push	DWORD PTR _row$[esp+56]
	push	OFFSET ??_C@_0BB@FFCJGCAD@?$CFs?$DNRevoked?5?$CI?$CFc?$CJ?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 2505
	jmp	SHORT $err$52
$LN18@get_certif:
; Line 2506
	cmp	al, 69					; 00000045H
	jne	SHORT $LN20@get_certif
; Line 2507
	push	69					; 00000045H
	push	DWORD PTR _row$[esp+56]
	push	OFFSET ??_C@_0BB@HJEOPHIK@?$CFs?$DNExpired?5?$CI?$CFc?$CJ?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 2509
	jmp	SHORT $err$52
$LN20@get_certif:
; Line 2510
	cmp	al, 83					; 00000053H
	jne	SHORT $LN22@get_certif
; Line 2511
	push	83					; 00000053H
	push	DWORD PTR _row$[esp+56]
	push	OFFSET ??_C@_0BD@CMGCMFBH@?$CFs?$DNSuspended?5?$CI?$CFc?$CJ?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 2513
	jmp	SHORT $err$52
$LN22@get_certif:
; Line 2515
	movsx	eax, al
	push	eax
	push	DWORD PTR _row$[esp+56]
	push	OFFSET ??_C@_0BC@OGOMGIJL@?$CFs?$DNUnknown?5?$CI?$CFc?$CJ?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN50@get_certif:
; Line 2517
	or	edi, -1
$err$52:
; Line 2520
	xor	esi, esi
	npad	7
$LL10@get_certif:
; Line 2521
	mov	eax, DWORD PTR _row$[esp+esi*4+40]
	test	eax, eax
	je	SHORT $LN8@get_certif
; Line 2522
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN8@get_certif:
; Line 2520
	inc	esi
	cmp	esi, 6
	jl	SHORT $LL10@get_certif
; Line 2525
	mov	ecx, DWORD PTR __$ArrayPad$[esp+40]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	ret	0
_get_certificate_status ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_revoke
_TEXT	SEGMENT
_x509$GSCopy$1$ = -36					; size = 4
_value$GSCopy$1$ = -32					; size = 4
_row$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_x509$ = 8						; size = 4
_db$ = 12						; size = 4
_type$ = 16						; size = 4
_value$ = 20						; size = 4
_do_revoke PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 2341
	mov	eax, 36					; 00000024H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+36], eax
	mov	eax, DWORD PTR _value$[esp+32]
	xorps	xmm0, xmm0
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _db$[esp+40]
; Line 2346
	or	ebx, -1
	push	esi
	mov	esi, DWORD PTR _x509$[esp+44]
	push	edi
	mov	edi, DWORD PTR _type$[esp+48]
; Line 2350
	push	0
	push	0
	push	esi
	mov	DWORD PTR _x509$GSCopy$1$[esp+64], esi
	mov	DWORD PTR _value$GSCopy$1$[esp+64], eax
	movups	XMMWORD PTR _row$[esp+64], xmm0
	mov	DWORD PTR _row$[esp+80], 0
	mov	DWORD PTR _row$[esp+84], 0
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _row$[esp+72], eax
; Line 2351
	push	0
	push	esi
	call	_X509_get_serialNumber
	add	esp, 4
	push	eax
	call	_ASN1_INTEGER_to_BN
	mov	esi, eax
	add	esp, 8
; Line 2352
	test	esi, esi
	je	$err$61
; Line 2354
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN12@do_revoke
; Line 2355
	push	OFFSET ??_C@_02PLJDPFIO@00?$AA@
	call	_BUF_strdup
	jmp	SHORT $LN57@do_revoke
$LN12@do_revoke:
; Line 2357
	push	esi
	call	_BN_bn2hex
$LN57@do_revoke:
	add	esp, 4
	mov	DWORD PTR _row$[esp+64], eax
; Line 2358
	push	esi
	call	_BN_free
	add	esp, 4
; Line 2359
	cmp	DWORD PTR _row$[esp+72], 0
	je	$LN15@do_revoke
	cmp	DWORD PTR _row$[esp+64], 0
	je	$LN15@do_revoke
; Line 2367
	lea	eax, DWORD PTR _row$[esp+52]
	push	eax
	push	3
	push	DWORD PTR [ebp+4]
	call	_TXT_DB_get_by_index
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 2368
	test	esi, esi
	jne	$LN16@do_revoke
; Line 2369
	push	DWORD PTR _row$[esp+72]
	push	DWORD PTR _row$[esp+68]
	push	OFFSET ??_C@_0DB@DCAJBECB@Adding?5Entry?5with?5serial?5number?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2374
	push	2374					; 00000946H
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	push	2
	call	_CRYPTO_malloc
	mov	DWORD PTR _row$[esp+80], eax
; Line 2376
	mov	eax, DWORD PTR _x509$GSCopy$1$[esp+80]
; Line 2377
	push	2377					; 00000949H
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+16]
	mov	esi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi]
	inc	eax
	push	eax
	call	_CRYPTO_malloc
	mov	DWORD PTR _row$[esp+96], eax
; Line 2378
	push	DWORD PTR [esi]
	push	DWORD PTR [esi+8]
	push	eax
	call	_memcpy
; Line 2379
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR _row$[esp+108]
; Line 2384
	push	2384					; 00000950H
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	push	8
	mov	BYTE PTR [eax+ecx], 0
	mov	DWORD PTR _row$[esp+124], 0
	call	_CRYPTO_malloc
	add	esp, 64					; 00000040H
	mov	DWORD PTR _row$[esp+68], eax
; Line 2388
	cmp	DWORD PTR _row$[esp+52], 0
	je	$LN15@do_revoke
	cmp	DWORD PTR _row$[esp+56], 0
	je	$LN15@do_revoke
	test	eax, eax
	je	$LN15@do_revoke
; Line 2393
	push	8
	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	push	eax
	call	_BUF_strlcpy
; Line 2394
	mov	eax, DWORD PTR _row$[esp+64]
; Line 2398
	push	2398					; 0000095eH
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	push	28					; 0000001cH
	mov	BYTE PTR [eax], 86			; 00000056H
	mov	eax, DWORD PTR _row$[esp+76]
	mov	BYTE PTR [eax+1], 0
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 24					; 00000018H
	test	ecx, ecx
	je	$LN15@do_revoke
; Line 2405
	mov	eax, DWORD PTR _row$[esp+52]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _row$[esp+56]
; Line 2406
	mov	DWORD PTR _row$[esp+52], 0
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _row$[esp+60]
	mov	DWORD PTR _row$[esp+56], 0
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _row$[esp+64]
	mov	DWORD PTR _row$[esp+60], 0
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR _row$[esp+68]
	mov	DWORD PTR _row$[esp+64], 0
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR _row$[esp+72]
	mov	DWORD PTR _row$[esp+68], 0
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR _row$[esp+72], 0
; Line 2410
	push	ecx
	mov	DWORD PTR [ecx+24], 0
	push	DWORD PTR [ebp+4]
	call	_TXT_DB_insert
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN21@do_revoke
; Line 2411
	push	OFFSET ??_C@_0BL@ILNAPLLO@failed?5to?5update?5database?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2412
	mov	eax, DWORD PTR [ebp+4]
	push	DWORD PTR [eax+16]
	push	OFFSET ??_C@_0BJ@HFPMKNMK@TXT_DB?5error?5number?5?$CFld?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 20					; 00000014H
; Line 2413
	jmp	$err$61
$LN21@do_revoke:
; Line 2417
	cmp	edi, -1
	jne	SHORT $LN22@do_revoke
; Line 2418
	lea	ebx, DWORD PTR [edi+2]
	jmp	$err$61
$LN22@do_revoke:
; Line 2420
	push	DWORD PTR _value$GSCopy$1$[esp+52]
	push	edi
	push	ebp
	push	DWORD PTR _x509$GSCopy$1$[esp+64]
	call	_do_revoke
	add	esp, 16					; 00000010H
	mov	ebx, eax
	jmp	$err$61
$LN16@do_revoke:
; Line 2424
	lea	eax, DWORD PTR _row$[esp+52]
	push	esi
	push	eax
	call	_index_name_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN24@do_revoke
; Line 2425
	push	DWORD PTR _row$[esp+72]
	push	OFFSET ??_C@_0BO@NAPPGGPG@ERROR?3name?5does?5not?5match?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2426
	jmp	$err$61
$LN24@do_revoke:
; Line 2427
	cmp	edi, -1
	jne	SHORT $LN26@do_revoke
; Line 2428
	push	DWORD PTR _row$[esp+64]
	push	OFFSET ??_C@_0CJ@GKDPOOPJ@ERROR?3Already?5present?0?5serial?5nu@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2430
	jmp	SHORT $err$61
$LN26@do_revoke:
; Line 2431
	mov	eax, DWORD PTR [esi]
	cmp	BYTE PTR [eax], 82			; 00000052H
	jne	SHORT $LN28@do_revoke
; Line 2432
	push	DWORD PTR _row$[esp+64]
	push	OFFSET ??_C@_0CJ@EKIABMDE@ERROR?3Already?5revoked?0?5serial?5nu@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2434
	jmp	SHORT $err$61
$LN28@do_revoke:
; Line 2436
	push	DWORD PTR [esi+12]
	push	OFFSET ??_C@_0BK@DFOGDJO@Revoking?5Certificate?5?$CFs?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2437
	push	DWORD PTR _value$GSCopy$1$[esp+64]
	push	edi
	call	_make_revocation_str
	mov	ecx, eax
	add	esp, 20					; 00000014H
; Line 2438
	test	ecx, ecx
	jne	SHORT $LN30@do_revoke
; Line 2439
	push	OFFSET ??_C@_0BP@BMAAMPCP@Error?5in?5revocation?5arguments?6?$AA@
; Line 2440
	jmp	SHORT $LN59@do_revoke
$LN30@do_revoke:
; Line 2442
	mov	eax, DWORD PTR [esi]
; Line 2446
	mov	ebx, 1
	mov	BYTE PTR [eax], 82			; 00000052H
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [eax+1], 0
	mov	DWORD PTR [esi+8], ecx
	jmp	SHORT $err$61
$LN15@do_revoke:
; Line 2360
	push	OFFSET ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
$LN59@do_revoke:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$err$61:
; Line 2448
	xor	esi, esi
$LL10@do_revoke:
; Line 2449
	mov	eax, DWORD PTR _row$[esp+esi*4+52]
	test	eax, eax
	je	SHORT $LN8@do_revoke
; Line 2450
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN8@do_revoke:
; Line 2448
	inc	esi
	cmp	esi, 6
	jl	SHORT $LL10@do_revoke
; Line 2453
	mov	ecx, DWORD PTR __$ArrayPad$[esp+52]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
_do_revoke ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_body
_TEXT	SEGMENT
_subject$1$ = -184					; size = 4
_CAname$1$ = -180					; size = 4
_cv$1$ = -176						; size = 4
_ret$1$ = -176						; size = 4
_req$GSCopy$1$ = -172					; size = 4
_name$1$ = -168						; size = 4
_dn_subject$1$ = -164					; size = 4
_ok$1$ = -160						; size = 4
_str$2$ = -156						; size = 4
_x509$GSCopy$1$ = -152					; size = 4
_enddate$GSCopy$1$ = -148				; size = 4
_tdays$1 = -148						; size = 4
_obj$2$ = -144						; size = 4
_i$2$ = -140						; size = 4
_policy$GSCopy$1$ = -136				; size = 4
_str2$1$ = -132						; size = 4
_serial$GSCopy$1$ = -128				; size = 4
_ext_sect$GSCopy$1$ = -124				; size = 4
_pkey$GSCopy$1$ = -120					; size = 4
_db$GSCopy$1$ = -116					; size = 4
_last$1$ = -112						; size = 4
_startdate$GSCopy$1$ = -108				; size = 4
_lconf$GSCopy$1$ = -104					; size = 4
_sigopts$GSCopy$1$ = -100				; size = 4
_dgst$GSCopy$1$ = -96					; size = 4
_tmptm$1$ = -92						; size = 4
_xret$GSCopy$1$ = -88					; size = 4
_ctx$2 = -84						; size = 28
_row$ = -56						; size = 24
_buf$ = -32						; size = 25
__$ArrayPad$ = -4					; size = 4
_xret$ = 8						; size = 4
_pkey$ = 12						; size = 4
_x509$ = 16						; size = 4
_dgst$ = 20						; size = 4
_sigopts$ = 24						; size = 4
_policy$ = 28						; size = 4
_db$ = 32						; size = 4
_serial$ = 36						; size = 4
_subj$ = 40						; size = 4
_chtype$ = 44						; size = 4
_multirdn$ = 48						; size = 4
_email_dn$ = 52						; size = 4
_startdate$ = 56					; size = 4
_enddate$ = 60						; size = 4
_days$ = 64						; size = 4
_batch$ = 68						; size = 4
_verbose$ = 72						; size = 4
_req$ = 76						; size = 4
_ext_sect$ = 80						; size = 4
_lconf$ = 84						; size = 4
_certopt$ = 88						; size = 4
_nameopt$ = 92						; size = 4
_default_op$ = 96					; size = 4
_ext_copy$ = 100					; size = 4
_selfsign$ = 104					; size = 4
_do_body PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 1633
	mov	eax, 184				; 000000b8H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+184], eax
	push	ebx
	push	ebp
	push	esi
; Line 1634
	push	edi
	mov	eax, DWORD PTR _xret$[esp+196]
	mov	DWORD PTR _xret$GSCopy$1$[esp+200], eax
	mov	eax, DWORD PTR _pkey$[esp+196]
	mov	DWORD PTR _pkey$GSCopy$1$[esp+200], eax
	mov	eax, DWORD PTR _x509$[esp+196]
	mov	DWORD PTR _x509$GSCopy$1$[esp+200], eax
	mov	eax, DWORD PTR _dgst$[esp+196]
	mov	DWORD PTR _dgst$GSCopy$1$[esp+200], eax
	mov	eax, DWORD PTR _sigopts$[esp+196]
	mov	DWORD PTR _sigopts$GSCopy$1$[esp+200], eax
	mov	eax, DWORD PTR _policy$[esp+196]
	mov	DWORD PTR _policy$GSCopy$1$[esp+200], eax
	mov	eax, DWORD PTR _serial$[esp+196]
	mov	DWORD PTR _serial$GSCopy$1$[esp+200], eax
	mov	eax, DWORD PTR _startdate$[esp+196]
	mov	DWORD PTR _startdate$GSCopy$1$[esp+200], eax
	mov	eax, DWORD PTR _enddate$[esp+196]
	mov	ebx, DWORD PTR _multirdn$[esp+196]
	mov	DWORD PTR _enddate$GSCopy$1$[esp+200], eax
	mov	eax, DWORD PTR _req$[esp+196]
	mov	ebp, DWORD PTR _ext_sect$[esp+196]
	mov	DWORD PTR _req$GSCopy$1$[esp+200], eax
	mov	eax, DWORD PTR _lconf$[esp+196]
	mov	esi, DWORD PTR _db$[esp+196]
	mov	DWORD PTR _lconf$GSCopy$1$[esp+200], eax
	xor	eax, eax
	mov	edi, DWORD PTR _chtype$[esp+196]
	mov	DWORD PTR _db$GSCopy$1$[esp+200], esi
	mov	esi, DWORD PTR _subj$[esp+196]
	mov	DWORD PTR _ext_sect$GSCopy$1$[esp+200], ebp
	xor	ebp, ebp
	mov	DWORD PTR _dn_subject$1$[esp+200], eax
; Line 1644
	mov	DWORD PTR _ok$1$[esp+200], -1
; Line 1652
	call	_ASN1_UTCTIME_new
	mov	DWORD PTR _tmptm$1$[esp+200], eax
; Line 1653
	test	eax, eax
	jne	SHORT $LN22@do_body
; Line 1654
	push	OFFSET ??_C@_0O@NPENBAOL@malloc?5error?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1655
	xor	eax, eax
	jmp	$LN1@do_body
$LN22@do_body:
; Line 1659
	mov	DWORD PTR _row$[esp+216], ebp
	xorps	xmm0, xmm0
	mov	DWORD PTR _row$[esp+220], ebp
	movups	XMMWORD PTR _row$[esp+200], xmm0
; Line 1661
	test	esi, esi
	je	SHORT $LN234@do_body
; Line 1662
	push	ebx
	push	edi
	push	esi
	call	_parse_name
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1664
	test	esi, esi
	jne	SHORT $LN24@do_body
; Line 1665
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 1666
	xor	edi, edi
	xor	ebx, ebx
	jmp	$err$248
$LN24@do_body:
; Line 1668
	mov	ebx, DWORD PTR _req$GSCopy$1$[esp+200]
	push	esi
	push	ebx
	call	_X509_REQ_set_subject_name
; Line 1669
	mov	eax, DWORD PTR [ebx]
; Line 1670
	push	esi
	mov	DWORD PTR [eax+8], 1
	call	_X509_NAME_free
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN23@do_body
$LN234@do_body:
	mov	ebx, DWORD PTR _req$GSCopy$1$[esp+200]
$LN23@do_body:
; Line 1673
	cmp	DWORD PTR _default_op$[esp+196], ebp
	je	SHORT $LN25@do_body
; Line 1674
	push	OFFSET ??_C@_0DA@FNDAHFFM@The?5Subject?8s?5Distinguished?5Name@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN25@do_body:
; Line 1677
	mov	eax, DWORD PTR [ebx]
; Line 1678
	xor	ebp, ebp
	mov	ebx, DWORD PTR [eax+16]
	push	ebx
	mov	DWORD PTR _name$1$[esp+204], ebx
	call	_X509_NAME_entry_count
	add	esp, 4
	test	eax, eax
	jle	$LN203@do_body
$LL7@do_body:
; Line 1679
	push	ebp
	push	ebx
	call	_X509_NAME_get_entry
	mov	edi, eax
; Line 1680
	push	edi
	call	_X509_NAME_ENTRY_get_data
; Line 1681
	push	edi
	mov	esi, eax
	call	_X509_NAME_ENTRY_get_object
	add	esp, 16					; 00000010H
	mov	ebx, eax
; Line 1683
	cmp	DWORD PTR _msie_hack, 0
	je	SHORT $LN29@do_body
; Line 1685
	push	DWORD PTR [edi]
	call	_OBJ_obj2nid
	add	esp, 4
	mov	edi, eax
; Line 1687
	cmp	DWORD PTR [esi+4], 28			; 0000001cH
	jne	SHORT $LN27@do_body
; Line 1688
	push	esi
	call	_ASN1_UNIVERSALSTRING_to_string
	add	esp, 4
$LN27@do_body:
; Line 1690
	cmp	DWORD PTR [esi+4], 22			; 00000016H
	jne	SHORT $LN28@do_body
	cmp	edi, 48					; 00000030H
	je	SHORT $LN199@do_body
; Line 1692
	mov	DWORD PTR [esi+4], 20			; 00000014H
$LN28@do_body:
; Line 1694
	cmp	edi, 48					; 00000030H
	jne	SHORT $LN29@do_body
$LN199@do_body:
	cmp	DWORD PTR [esi+4], 19			; 00000013H
	jne	SHORT $LN29@do_body
; Line 1696
	mov	DWORD PTR [esi+4], 22			; 00000016H
$LN29@do_body:
; Line 1700
	push	ebx
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 48					; 00000030H
	jne	SHORT $LN30@do_body
	cmp	DWORD PTR _email_dn$[esp+196], 0
	je	SHORT $LN5@do_body
$LN30@do_body:
; Line 1704
	push	ebx
	call	_OBJ_obj2nid
	add	esp, 4
	cmp	eax, 48					; 00000030H
	jne	SHORT $LN31@do_body
	cmp	DWORD PTR [esi+4], 22			; 00000016H
	jne	$LN154@do_body
$LN31@do_body:
; Line 1711
	mov	eax, DWORD PTR [esi+4]
	cmp	eax, 30					; 0000001eH
	je	SHORT $LN33@do_body
	cmp	eax, 12					; 0000000cH
	je	SHORT $LN33@do_body
; Line 1712
	push	DWORD PTR [esi]
	push	DWORD PTR [esi+8]
	call	_ASN1_PRINTABLE_type
	add	esp, 8
; Line 1714
	cmp	eax, 20					; 00000014H
	jne	SHORT $LN35@do_body
	cmp	DWORD PTR [esi+4], eax
	je	SHORT $LN33@do_body
$LN34@do_body:
; Line 1717
	push	OFFSET ??_C@_0EF@KCEAFLOC@?6The?5string?5contains?5characters?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1719
	xor	ebp, ebp
	xor	edi, edi
	xor	ebx, ebx
	jmp	SHORT $err$248
$LN35@do_body:
; Line 1714
	cmp	eax, 22					; 00000016H
	jne	SHORT $LN33@do_body
	cmp	DWORD PTR [esi+4], 19			; 00000013H
	je	SHORT $LN34@do_body
$LN33@do_body:
; Line 1723
	cmp	DWORD PTR _default_op$[esp+196], 0
	je	SHORT $LN5@do_body
; Line 1724
	push	esi
	push	ebx
	push	DWORD PTR _bio_err
	call	_old_entry_print
	add	esp, 12					; 0000000cH
$LN5@do_body:
; Line 1678
	mov	ebx, DWORD PTR _name$1$[esp+200]
	inc	ebp
	push	ebx
	call	_X509_NAME_entry_count
	add	esp, 4
	cmp	ebp, eax
	jl	$LL7@do_body
$LN203@do_body:
; Line 1728
	call	_X509_NAME_new
	mov	DWORD PTR _subject$1$[esp+200], eax
	test	eax, eax
	jne	$LN37@do_body
; Line 1729
	push	OFFSET ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1730
	xor	ebp, ebp
$LN231@do_body:
	xor	edi, edi
$LN233@do_body:
	mov	ebx, DWORD PTR _subject$1$[esp+200]
$err$248:
; Line 2147
	xor	esi, esi
$LL21@do_body:
; Line 2148
	mov	eax, DWORD PTR _row$[esp+esi*4+200]
	test	eax, eax
	je	SHORT $LN19@do_body
; Line 2149
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN19@do_body:
; Line 2147
	inc	esi
	cmp	esi, 6
	jl	SHORT $LL21@do_body
; Line 2151
	test	ebp, ebp
	je	SHORT $LN131@do_body
; Line 2152
	push	ebp
	call	_X509_NAME_free
	add	esp, 4
$LN131@do_body:
; Line 2153
	test	ebx, ebx
	je	SHORT $LN132@do_body
; Line 2154
	push	ebx
	call	_X509_NAME_free
	add	esp, 4
$LN132@do_body:
; Line 2155
	mov	eax, DWORD PTR _dn_subject$1$[esp+200]
	test	eax, eax
	je	SHORT $LN133@do_body
	cmp	DWORD PTR _email_dn$[esp+196], 0
	jne	SHORT $LN133@do_body
; Line 2156
	push	eax
	call	_X509_NAME_free
	add	esp, 4
$LN133@do_body:
; Line 2158
	push	DWORD PTR _tmptm$1$[esp+200]
	call	_ASN1_UTCTIME_free
; Line 2159
	mov	esi, DWORD PTR _ok$1$[esp+204]
	add	esp, 4
	test	esi, esi
	jg	$LN135@do_body
; Line 2160
	test	edi, edi
	je	$LN136@do_body
; Line 2161
	push	edi
	call	_X509_free
	add	esp, 4
; Line 2163
	jmp	$LN136@do_body
$LN154@do_body:
; Line 1706
	push	OFFSET ??_C@_0DC@JDICNINH@?6emailAddress?5type?5needs?5to?5be?5o@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1708
	xor	ebp, ebp
	xor	edi, edi
	xor	ebx, ebx
	jmp	$err$248
$LN37@do_body:
; Line 1734
	cmp	DWORD PTR _selfsign$[esp+196], 0
	je	SHORT $LN38@do_body
; Line 1735
	push	ebx
	call	_X509_NAME_dup
	mov	ebp, eax
	mov	DWORD PTR _CAname$1$[esp+204], ebp
	jmp	SHORT $LN236@do_body
$LN38@do_body:
; Line 1737
	mov	eax, DWORD PTR _x509$GSCopy$1$[esp+200]
	mov	eax, DWORD PTR [eax]
	push	DWORD PTR [eax+20]
	call	_X509_NAME_dup
	mov	ebp, eax
	mov	DWORD PTR _CAname$1$[esp+204], eax
$LN236@do_body:
	add	esp, 4
; Line 1738
	test	ebp, ebp
	je	$LN231@do_body
; Line 1742
	mov	edi, DWORD PTR _policy$GSCopy$1$[esp+200]
	xor	eax, eax
	xor	esi, esi
	mov	DWORD PTR _str2$1$[esp+200], eax
	push	edi
	mov	DWORD PTR _str$2$[esp+204], eax
	mov	DWORD PTR _i$2$[esp+204], esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN9@do_body
	npad	6
$LL10@do_body:
; Line 1743
	push	esi
	push	edi
	call	_sk_value
	mov	esi, eax
	mov	DWORD PTR _cv$1$[esp+208], esi
; Line 1744
	push	DWORD PTR [esi+4]
	call	_OBJ_txt2nid
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN162@do_body
; Line 1750
	push	eax
	call	_OBJ_nid2obj
	add	esp, 4
	mov	DWORD PTR _obj$2$[esp+200], eax
; Line 1752
	or	edi, -1
	jmp	SHORT $LN11@do_body
$LL229@do_body:
	mov	ebx, DWORD PTR _name$1$[esp+200]
$LN11@do_body:
; Line 1755
	push	edi
	push	eax
	push	ebx
	call	_X509_NAME_get_index_by_OBJ
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 1756
	test	ebx, ebx
	jns	SHORT $LN42@do_body
; Line 1757
	cmp	edi, -1
	jne	$LN8@do_body
; Line 1759
	xor	ebp, ebp
; Line 1760
	jmp	SHORT $LN43@do_body
$LN42@do_body:
; Line 1761
	push	ebx
	push	DWORD PTR _name$1$[esp+204]
	call	_X509_NAME_get_entry
	add	esp, 8
	mov	ebp, eax
$LN43@do_body:
; Line 1767
	mov	esi, DWORD PTR [esi+8]
	mov	edi, ebx
	mov	DWORD PTR _last$1$[esp+200], edi
	mov	edx, OFFSET ??_C@_08EBGGHLAO@optional?$AA@
	mov	ecx, esi
$LL204@do_body:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN205@do_body
	test	al, al
	je	SHORT $LN206@do_body
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN205@do_body
	add	ecx, 2
	add	edx, 2
	test	al, al
	jne	SHORT $LL204@do_body
$LN206@do_body:
	xor	eax, eax
	jmp	SHORT $LN207@do_body
$LN205@do_body:
	sbb	eax, eax
	or	eax, 1
$LN207@do_body:
	test	eax, eax
	jne	SHORT $LN45@do_body
; Line 1768
	test	ebp, ebp
	je	$LN60@do_body
; Line 1769
	mov	esi, ebp
; Line 1770
	jmp	$LN58@do_body
$LN45@do_body:
	mov	ecx, OFFSET ??_C@_08IGEDNDPC@supplied?$AA@
	mov	eax, esi
$LL208@do_body:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN209@do_body
	test	dl, dl
	je	SHORT $LN210@do_body
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN209@do_body
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL208@do_body
$LN210@do_body:
	xor	eax, eax
	jmp	SHORT $LN211@do_body
$LN209@do_body:
	sbb	eax, eax
	or	eax, 1
$LN211@do_body:
	test	eax, eax
	jne	SHORT $LN48@do_body
; Line 1771
	test	ebp, ebp
	je	$LN157@do_body
; Line 1777
	mov	esi, ebp
; Line 1778
	jmp	$LN58@do_body
$LN48@do_body:
	mov	eax, OFFSET ??_C@_05FNONLPDI@match?$AA@
	npad	1
$LL212@do_body:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN213@do_body
	test	cl, cl
	je	SHORT $LN214@do_body
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN213@do_body
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL212@do_body
$LN214@do_body:
	xor	eax, eax
	jmp	SHORT $LN215@do_body
$LN213@do_body:
	sbb	eax, eax
	or	eax, 1
$LN215@do_body:
	test	eax, eax
	jne	$LN52@do_body
; Line 1781
	test	ebp, ebp
	je	$LN158@do_body
; Line 1788
	or	edi, -1
	npad	8
$again2$249:
; Line 1791
	mov	esi, DWORD PTR _CAname$1$[esp+200]
	push	edi
	push	DWORD PTR _obj$2$[esp+204]
	push	esi
	call	_X509_NAME_get_index_by_OBJ
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 1792
	test	ebx, ebx
	js	$LN200@do_body
; Line 1799
	push	ebx
	push	esi
	call	_X509_NAME_get_entry
; Line 1800
	push	ebp
	mov	esi, eax
	call	_X509_NAME_ENTRY_get_data
; Line 1801
	push	esi
	mov	DWORD PTR _str$2$[esp+216], eax
	call	_X509_NAME_ENTRY_get_data
; Line 1803
	push	eax
	mov	DWORD PTR _str2$1$[esp+220], eax
	mov	edi, ebx
	mov	eax, DWORD PTR _str$2$[esp+220]
	push	eax
	call	_ASN1_STRING_cmp
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $again2$249
; Line 1806
	test	ebx, ebx
	js	$LN159@do_body
	mov	edi, DWORD PTR _last$1$[esp+200]
$LN58@do_body:
; Line 1821
	test	esi, esi
	je	SHORT $LN60@do_body
; Line 1822
	push	0
	push	-1
	push	esi
	push	DWORD PTR _subject$1$[esp+212]
	call	_X509_NAME_add_entry
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN160@do_body
$LN60@do_body:
; Line 1829
	mov	eax, DWORD PTR _obj$2$[esp+200]
	mov	esi, DWORD PTR _cv$1$[esp+200]
	test	ebx, ebx
	jns	$LL229@do_body
$LN8@do_body:
; Line 1742
	mov	esi, DWORD PTR _i$2$[esp+200]
	mov	edi, DWORD PTR _policy$GSCopy$1$[esp+200]
	inc	esi
	push	edi
	mov	DWORD PTR _i$2$[esp+204], esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jge	$LN228@do_body
	mov	ebx, DWORD PTR _name$1$[esp+200]
	jmp	$LL10@do_body
$LN157@do_body:
; Line 1772
	mov	eax, DWORD PTR _cv$1$[esp+200]
	push	DWORD PTR [eax+4]
	push	OFFSET ??_C@_0DE@OGHONDIE@The?5?$CFs?5field?5needed?5to?5be?5suppli@
$LN240@do_body:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1775
	mov	ebp, DWORD PTR _CAname$1$[esp+212]
	add	esp, 12					; 0000000cH
	jmp	$LN231@do_body
$LN160@do_body:
; Line 1824
	push	esi
	call	_X509_NAME_ENTRY_free
; Line 1825
	push	OFFSET ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
; Line 1826
	jmp	SHORT $LN240@do_body
$LN200@do_body:
; Line 1792
	cmp	edi, -1
	je	SHORT $LN155@do_body
$LN159@do_body:
; Line 1807
	mov	eax, DWORD PTR _str$2$[esp+200]
	mov	ecx, OFFSET ??_C@_04HIBGFPH@NULL?$AA@
	test	eax, eax
	je	SHORT $LN140@do_body
	mov	ecx, DWORD PTR [eax+8]
$LN140@do_body:
	mov	eax, DWORD PTR _str2$1$[esp+200]
	test	eax, eax
	jne	SHORT $LN141@do_body
	mov	eax, OFFSET ??_C@_04HIBGFPH@NULL?$AA@
	jmp	SHORT $LN142@do_body
$LN141@do_body:
	mov	eax, DWORD PTR [eax+8]
$LN142@do_body:
	push	ecx
	push	eax
	mov	eax, DWORD PTR _cv$1$[esp+208]
	push	DWORD PTR [eax+4]
	push	OFFSET ??_C@_0FE@MJNFEBBH@The?5?$CFs?5field?5needed?5to?5be?5the?5sa@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	ebp, DWORD PTR _CAname$1$[esp+220]
	add	esp, 20					; 00000014H
	jmp	$LN231@do_body
$LN155@do_body:
; Line 1793
	mov	eax, DWORD PTR _cv$1$[esp+200]
	push	DWORD PTR [eax+4]
	push	OFFSET ??_C@_0FC@CLLIHKBK@The?5?$CFs?5field?5does?5not?5exist?5in?5t@
; Line 1796
	jmp	SHORT $LN240@do_body
$LN158@do_body:
; Line 1782
	mov	eax, DWORD PTR _cv$1$[esp+200]
	push	DWORD PTR [eax+4]
	push	OFFSET ??_C@_0CE@DJNNFNJL@The?5mandatory?5?$CFs?5field?5was?5missi@
; Line 1785
	jmp	$LN240@do_body
$LN52@do_body:
; Line 1815
	mov	eax, DWORD PTR _cv$1$[esp+200]
	push	DWORD PTR [eax+8]
	push	OFFSET ??_C@_0CL@EDGMFLIN@?$CFs?3invalid?5type?5in?5?8policy?8?5conf@
; Line 1818
	jmp	$LN240@do_body
$LN162@do_body:
; Line 1745
	push	DWORD PTR [esi+4]
	push	OFFSET ??_C@_0DC@KCFNOMEL@?$CFs?3unknown?5object?5type?5in?5?8polic@
; Line 1748
	jmp	$LN240@do_body
$LN228@do_body:
	mov	ebp, DWORD PTR _CAname$1$[esp+200]
$LN9@do_body:
; Line 1834
	cmp	DWORD PTR _preserve, 0
	je	SHORT $LN64@do_body
; Line 1835
	push	DWORD PTR _subject$1$[esp+200]
	call	_X509_NAME_free
; Line 1837
	push	DWORD PTR _name$1$[esp+204]
	call	_X509_NAME_dup
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _subject$1$[esp+200], ebx
; Line 1838
	test	ebx, ebx
	je	$LN230@do_body
$LN64@do_body:
; Line 1842
	mov	ebx, DWORD PTR _verbose$[esp+196]
	test	ebx, ebx
	je	SHORT $LN65@do_body
; Line 1843
	push	OFFSET ??_C@_0ED@OGMFDFPB@The?5subject?5name?5appears?5to?5be?5o@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN65@do_body:
; Line 1852
	cmp	DWORD PTR _email_dn$[esp+196], 0
	je	SHORT $LN66@do_body
; Line 1853
	mov	eax, DWORD PTR _subject$1$[esp+200]
	mov	DWORD PTR _dn_subject$1$[esp+200], eax
	jmp	SHORT $LN15@do_body
$LN66@do_body:
; Line 1860
	push	DWORD PTR _subject$1$[esp+200]
	call	_X509_NAME_dup
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR _dn_subject$1$[esp+200], esi
	test	esi, esi
	jne	SHORT $LN150@do_body
$LN245@do_body:
; Line 1861
	push	OFFSET ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1862
	jmp	$LN231@do_body
$LN150@do_body:
; Line 1866
	push	-1
	push	48					; 00000030H
	push	esi
	call	_X509_NAME_get_index_by_NID
	mov	edi, eax
	add	esp, 12					; 0000000cH
	test	edi, edi
	js	SHORT $LN15@do_body
	mov	ebx, DWORD PTR _dn_subject$1$[esp+200]
	npad	7
$LL14@do_body:
; Line 1867
	push	edi
	push	ebx
	call	_X509_NAME_get_entry
; Line 1868
	push	edi
	push	ebx
	mov	esi, eax
	call	_X509_NAME_delete_entry
; Line 1869
	push	esi
	call	_X509_NAME_ENTRY_free
	push	-1
	push	48					; 00000030H
	push	ebx
	call	_X509_NAME_get_index_by_NID
	mov	edi, eax
	add	esp, 32					; 00000020H
	test	edi, edi
	jns	SHORT $LL14@do_body
	mov	ebx, DWORD PTR _verbose$[esp+196]
$LN15@do_body:
; Line 1873
	mov	eax, DWORD PTR _serial$GSCopy$1$[esp+200]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN69@do_body
; Line 1874
	push	OFFSET ??_C@_02PLJDPFIO@00?$AA@
	call	_BUF_strdup
	jmp	SHORT $LN237@do_body
$LN69@do_body:
; Line 1876
	push	eax
	call	_BN_bn2hex
$LN237@do_body:
	add	esp, 4
	mov	DWORD PTR _row$[esp+212], eax
; Line 1877
	test	eax, eax
	je	$LN245@do_body
; Line 1882
	mov	edi, DWORD PTR _db$GSCopy$1$[esp+200]
	cmp	DWORD PTR [edi], 0
	je	SHORT $LN197@do_body
; Line 1885
	lea	eax, DWORD PTR _row$[esp+200]
	push	eax
	push	5
	push	DWORD PTR [edi+4]
	call	_TXT_DB_get_by_index
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1886
	test	esi, esi
	je	SHORT $LN197@do_body
; Line 1887
	push	DWORD PTR _row$[esp+220]
	push	OFFSET ??_C@_0CN@OLLJEEHJ@ERROR?3There?5is?5already?5a?5certifi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1892
	jmp	SHORT $LN196@do_body
$LN197@do_body:
; Line 1893
	lea	eax, DWORD PTR _row$[esp+200]
	push	eax
	push	3
	push	DWORD PTR [edi+4]
	call	_TXT_DB_get_by_index
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1894
	test	esi, esi
	je	$LN76@do_body
; Line 1895
	push	DWORD PTR _row$[esp+212]
	push	OFFSET ??_C@_0DB@DKJIEMJH@ERROR?3Serial?5number?5?$CFs?5has?5alrea@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1898
	push	OFFSET ??_C@_0DF@CNJACNGP@?5?5?5?5?5?5check?5the?5database?1serial_@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 20					; 00000014H
$LN196@do_body:
; Line 1904
	push	OFFSET ??_C@_0CO@OBOHPCBI@The?5matching?5entry?5has?5the?5follo@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1905
	mov	eax, DWORD PTR [esi]
	add	esp, 8
	mov	cl, BYTE PTR [eax]
	cmp	cl, 69					; 00000045H
	jne	SHORT $LN77@do_body
; Line 1906
	mov	eax, OFFSET ??_C@_07DFJMKFNB@Expired?$AA@
	jmp	SHORT $LN81@do_body
$LN77@do_body:
; Line 1907
	cmp	cl, 82					; 00000052H
	jne	SHORT $LN79@do_body
; Line 1908
	mov	eax, OFFSET ??_C@_07DBODGOEF@Revoked?$AA@
	jmp	SHORT $LN81@do_body
$LN79@do_body:
; Line 1909
	cmp	cl, 86					; 00000056H
	mov	eax, OFFSET ??_C@_05HNPPNPM@Valid?$AA@
	mov	edx, OFFSET ??_C@_0CA@LFJLPPLE@?6invalid?5type?0?5Data?5base?5error?6?$AA@
	cmovne	eax, edx
$LN81@do_body:
; Line 1913
	push	eax
	push	OFFSET ??_C@_0BD@MAIOLJKM@Type?5?5?5?5?5?5?5?5?5?5?3?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1914
	mov	eax, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	mov	edi, OFFSET ??_C@_05PKCPKOLM@undef?$AA@
	cmp	BYTE PTR [eax], 82			; 00000052H
	jne	SHORT $LN83@do_body
; Line 1915
	mov	eax, DWORD PTR [esi+4]
; Line 1916
	mov	ecx, edi
	test	eax, eax
	cmovne	ecx, eax
; Line 1918
	push	ecx
	push	OFFSET ??_C@_0BD@NMJPNPKD@Was?5revoked?5on?3?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN83@do_body:
; Line 1920
	mov	eax, DWORD PTR [esi+4]
; Line 1921
	mov	ecx, edi
	test	eax, eax
	cmovne	ecx, eax
; Line 1923
	push	ecx
	push	OFFSET ??_C@_0BD@NONICKGN@Expires?5on?5?5?5?5?3?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1924
	mov	eax, DWORD PTR [esi+12]
; Line 1925
	mov	ecx, edi
	test	eax, eax
	cmovne	ecx, eax
; Line 1927
	push	ecx
	push	OFFSET ??_C@_0BD@FFCFMPEF@Serial?5Number?5?3?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1928
	mov	eax, DWORD PTR [esi+16]
; Line 1929
	mov	ecx, edi
	test	eax, eax
	cmovne	ecx, eax
; Line 1931
	push	ecx
	push	OFFSET ??_C@_0BD@OIHIMAIP@File?5name?5?5?5?5?5?3?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1932
	mov	eax, DWORD PTR [esi+20]
; Line 1933
	test	eax, eax
	cmovne	edi, eax
; Line 1935
	push	edi
	push	OFFSET ??_C@_0BD@OLCDJGCP@Subject?5Name?5?5?3?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 48					; 00000030H
; Line 1936
	mov	DWORD PTR _ok$1$[esp+200], -1
; Line 1937
	jmp	$LN231@do_body
$LN76@do_body:
; Line 1941
	test	ebx, ebx
	je	SHORT $LN89@do_body
; Line 1942
	push	OFFSET ??_C@_0ED@HKAGAIMJ@Everything?5appears?5to?5be?5ok?0?5cre@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN89@do_body:
; Line 1945
	call	_X509_new
	mov	edi, eax
	mov	DWORD PTR _ret$1$[esp+200], edi
	test	edi, edi
	je	$LN233@do_body
; Line 1947
	mov	ebp, DWORD PTR [edi]
; Line 1955
	mov	eax, DWORD PTR _serial$GSCopy$1$[esp+200]
	push	DWORD PTR [ebp+4]
	push	eax
	call	_BN_to_ASN1_INTEGER
	add	esp, 8
	test	eax, eax
	je	$LN244@do_body
; Line 1957
	cmp	DWORD PTR _selfsign$[esp+196], 0
	je	SHORT $LN92@do_body
; Line 1958
	mov	ebx, DWORD PTR _subject$1$[esp+200]
	push	ebx
	push	edi
	call	_X509_set_issuer_name
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN95@do_body
	mov	ebp, DWORD PTR _CAname$1$[esp+200]
	jmp	$err$248
$LN92@do_body:
; Line 1961
	push	DWORD PTR _x509$GSCopy$1$[esp+200]
	call	_X509_get_subject_name
	push	eax
	push	edi
	call	_X509_set_issuer_name
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN244@do_body
$LN95@do_body:
; Line 1965
	mov	esi, DWORD PTR _startdate$GSCopy$1$[esp+200]
	mov	ecx, OFFSET ??_C@_05MGEAPCOL@today?$AA@
	mov	eax, esi
	npad	3
$LL216@do_body:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN217@do_body
	test	dl, dl
	je	SHORT $LN218@do_body
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN217@do_body
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL216@do_body
$LN218@do_body:
	xor	eax, eax
	jmp	SHORT $LN219@do_body
$LN217@do_body:
	sbb	eax, eax
	or	eax, 1
$LN219@do_body:
	test	eax, eax
; Line 1966
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+16]
	jne	SHORT $LN96@do_body
	push	0
	push	DWORD PTR [eax]
	call	_X509_gmtime_adj
	jmp	SHORT $LN238@do_body
$LN96@do_body:
; Line 1968
	push	esi
	push	DWORD PTR [eax]
	call	_ASN1_TIME_set_string
$LN238@do_body:
; Line 1970
	mov	eax, DWORD PTR _enddate$GSCopy$1$[esp+208]
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN98@do_body
; Line 1971
	mov	ebx, DWORD PTR _days$[esp+196]
	push	eax
	push	eax
	mov	eax, DWORD PTR [edi]
	push	ebx
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	call	_X509_time_adj_ex
	add	esp, 16					; 00000010H
	jmp	SHORT $LN99@do_body
$LN98@do_body:
; Line 1974
	push	eax
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	call	_ASN1_TIME_set_string
; Line 1975
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	lea	eax, DWORD PTR _tdays$1[esp+212]
	push	0
	push	0
	push	eax
	call	_ASN1_TIME_diff
; Line 1976
	mov	ebx, DWORD PTR _tdays$1[esp+224]
	add	esp, 24					; 00000018H
$LN99@do_body:
; Line 1979
	push	DWORD PTR _subject$1$[esp+200]
	push	edi
	call	_X509_set_subject_name
	add	esp, 8
	test	eax, eax
	je	$LN244@do_body
; Line 1982
	push	DWORD PTR _req$GSCopy$1$[esp+200]
	call	_X509_REQ_get_pubkey
	mov	edi, eax
; Line 1983
	mov	eax, DWORD PTR _ret$1$[esp+204]
	push	edi
	push	eax
	call	_X509_set_pubkey
; Line 1984
	push	edi
	mov	esi, eax
	call	_EVP_PKEY_free
	add	esp, 16					; 00000010H
; Line 1985
	test	esi, esi
	je	$LN222@do_body
; Line 1989
	mov	esi, DWORD PTR _ext_sect$GSCopy$1$[esp+200]
	test	esi, esi
	je	$LN232@do_body
; Line 1991
	cmp	DWORD PTR [ebp], 0
	jne	SHORT $LN104@do_body
; Line 1992
	call	_ASN1_INTEGER_new
	mov	DWORD PTR [ebp], eax
	test	eax, eax
	je	$LN222@do_body
$LN104@do_body:
; Line 1994
	push	2
	push	DWORD PTR [ebp]
	call	_ASN1_INTEGER_set
; Line 1999
	mov	eax, DWORD PTR [ebp+36]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN105@do_body
; Line 2000
	push	OFFSET _X509_EXTENSION_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN105@do_body:
; Line 2005
	cmp	DWORD PTR _selfsign$[esp+196], 0
; Line 2006
	lea	eax, DWORD PTR _ctx$2[esp+200]
	mov	edi, DWORD PTR _ret$1$[esp+200]
	push	0
	push	0
	push	DWORD PTR _req$GSCopy$1$[esp+208]
	mov	DWORD PTR [ebp+36], 0
	push	edi
	je	SHORT $LN106@do_body
	push	edi
	jmp	SHORT $LN239@do_body
$LN106@do_body:
; Line 2008
	push	DWORD PTR _x509$GSCopy$1$[esp+216]
$LN239@do_body:
	push	eax
	call	_X509V3_set_ctx
; Line 2010
	mov	eax, DWORD PTR _extconf
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN108@do_body
; Line 2011
	mov	esi, DWORD PTR _verbose$[esp+196]
	test	esi, esi
	je	SHORT $LN110@do_body
; Line 2012
	push	OFFSET ??_C@_0CA@GNPALBJL@Extra?5configuration?5file?5found?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	eax, DWORD PTR _extconf
	add	esp, 8
$LN110@do_body:
; Line 2015
	push	eax
	lea	eax, DWORD PTR _ctx$2[esp+204]
	push	eax
	call	_X509V3_set_nconf
; Line 2021
	mov	ebp, DWORD PTR _ext_sect$GSCopy$1$[esp+208]
	lea	eax, DWORD PTR _ctx$2[esp+208]
	push	edi
	push	ebp
	push	eax
	push	DWORD PTR _extconf
	call	_X509V3_EXT_add_nconf
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN111@do_body
; Line 2022
	push	ebp
$LN243@do_body:
	push	OFFSET ??_C@_0CI@CDCFDCNK@ERROR?3?5adding?5extensions?5in?5sect@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2025
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
$LN244@do_body:
; Line 2026
	mov	ebp, DWORD PTR _CAname$1$[esp+200]
	jmp	$LN233@do_body
$LN111@do_body:
; Line 2028
	test	esi, esi
	je	SHORT $LN115@do_body
; Line 2029
	push	OFFSET ??_C@_0CK@HDEGCLBM@Successfully?5added?5extensions?5fr@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2031
	jmp	SHORT $LN115@do_body
$LN108@do_body:
; Line 2033
	mov	ebp, DWORD PTR _lconf$GSCopy$1$[esp+200]
	lea	eax, DWORD PTR _ctx$2[esp+200]
	push	ebp
	push	eax
	call	_X509V3_set_nconf
; Line 2035
	push	edi
	push	esi
	lea	eax, DWORD PTR _ctx$2[esp+216]
	push	eax
	push	ebp
	call	_X509V3_EXT_add_nconf
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN114@do_body
; Line 2036
	push	esi
; Line 2040
	jmp	SHORT $LN243@do_body
$LN114@do_body:
; Line 2043
	mov	esi, DWORD PTR _verbose$[esp+196]
	test	esi, esi
	je	SHORT $LN115@do_body
; Line 2044
	push	OFFSET ??_C@_0CL@IJAJCKJM@Successfully?5added?5extensions?5fr@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $LN115@do_body
$LN232@do_body:
	mov	edi, DWORD PTR _ret$1$[esp+200]
$LN115@do_body:
; Line 2051
	push	DWORD PTR _ext_copy$[esp+196]
	push	DWORD PTR _req$GSCopy$1$[esp+204]
	push	edi
	call	_copy_extensions
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN116@do_body
; Line 2052
	push	OFFSET ??_C@_0CH@GCHAKPCA@ERROR?3?5adding?5extensions?5from?5re@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2053
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	mov	ebp, DWORD PTR _CAname$1$[esp+212]
	add	esp, 12					; 0000000cH
	jmp	$LN233@do_body
$LN116@do_body:
; Line 2058
	cmp	DWORD PTR _email_dn$[esp+196], 0
	jne	SHORT $LN118@do_body
; Line 2059
	mov	eax, DWORD PTR _dn_subject$1$[esp+200]
	push	eax
	push	edi
	call	_X509_set_subject_name
	add	esp, 8
	test	eax, eax
	je	$LN244@do_body
$LN118@do_body:
; Line 2063
	cmp	DWORD PTR _default_op$[esp+196], 0
	jne	SHORT $LN119@do_body
; Line 2064
	push	OFFSET ??_C@_0BG@KCAMCGGE@Certificate?5Details?3?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2068
	mov	eax, DWORD PTR _certopt$[esp+204]
	or	eax, 520				; 00000208H
; Line 2069
	push	eax
	push	DWORD PTR _nameopt$[esp+208]
	push	edi
	push	DWORD PTR _bio_err
	call	_X509_print_ex
	add	esp, 24					; 00000018H
$LN119@do_body:
; Line 2072
	push	OFFSET ??_C@_0CG@HAEJFJKD@Certificate?5is?5to?5be?5certified?5u@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2073
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+16]
	push	DWORD PTR [eax+4]
	push	DWORD PTR _bio_err
	call	_ASN1_TIME_print
	add	esp, 16					; 00000010H
; Line 2074
	test	ebx, ebx
	je	SHORT $LN120@do_body
; Line 2075
	push	ebx
	push	OFFSET ??_C@_0M@BLIKBEEG@?5?$CI?$CFld?5days?$CJ?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN120@do_body:
; Line 2076
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2078
	cmp	DWORD PTR _batch$[esp+196], 0
	jne	$LN123@do_body
; Line 2080
	push	OFFSET ??_C@_0BN@PBKJGAOM@Sign?5the?5certificate?$DP?5?$FLy?1n?$FN?3?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2081
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
; Line 2083
	push	0
	mov	BYTE PTR _buf$[esp+228], 0
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	lea	eax, DWORD PTR _buf$[esp+232]
	push	24					; 00000018H
	push	eax
	call	DWORD PTR __imp__fgets
	add	esp, 40					; 00000028H
	test	eax, eax
	jne	SHORT $LN122@do_body
; Line 2084
	push	OFFSET ??_C@_0CO@EICLBDNG@CERTIFICATE?5WILL?5NOT?5BE?5CERTIFIE@
$LN246@do_body:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	ebp, DWORD PTR _CAname$1$[esp+208]
	add	esp, 8
; Line 2086
	mov	DWORD PTR _ok$1$[esp+200], 0
	jmp	$LN233@do_body
$LN122@do_body:
; Line 2089
	mov	al, BYTE PTR _buf$[esp+200]
	cmp	al, 121					; 00000079H
	je	SHORT $LN123@do_body
	cmp	al, 89					; 00000059H
	je	SHORT $LN123@do_body
; Line 2090
	push	OFFSET ??_C@_0CD@CAANIMB@CERTIFICATE?5WILL?5NOT?5BE?5CERTIFIE@
; Line 2092
	jmp	SHORT $LN246@do_body
$LN123@do_body:
; Line 2096
	push	edi
	call	_X509_get_pubkey
	mov	esi, eax
; Line 2097
	push	esi
	call	_EVP_PKEY_missing_parameters
	mov	ebx, DWORD PTR _pkey$GSCopy$1$[esp+208]
	add	esp, 8
	test	eax, eax
	je	SHORT $LN124@do_body
	push	ebx
	call	_EVP_PKEY_missing_parameters
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN124@do_body
; Line 2099
	push	ebx
	push	esi
	call	_EVP_PKEY_copy_parameters
	add	esp, 8
$LN124@do_body:
; Line 2100
	push	esi
	call	_EVP_PKEY_free
; Line 2102
	push	DWORD PTR _sigopts$GSCopy$1$[esp+204]
	push	DWORD PTR _dgst$GSCopy$1$[esp+208]
	push	ebx
	push	edi
	push	DWORD PTR _bio_err
	call	_do_X509_sign
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN244@do_body
; Line 2106
	push	2106					; 0000083aH
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	push	2
	call	_CRYPTO_malloc
	mov	DWORD PTR _row$[esp+212], eax
; Line 2108
	mov	eax, DWORD PTR [edi]
; Line 2109
	push	2109					; 0000083dH
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	mov	eax, DWORD PTR [eax+16]
	mov	esi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [esi]
	inc	eax
	push	eax
	call	_CRYPTO_malloc
	mov	DWORD PTR _row$[esp+228], eax
; Line 2110
	push	DWORD PTR [esi]
	push	DWORD PTR [esi+8]
	push	eax
	call	_memcpy
; Line 2111
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR _row$[esp+240]
; Line 2116
	push	2116					; 00000844H
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	push	8
	mov	BYTE PTR [eax+ecx], 0
	mov	DWORD PTR _row$[esp+256], 0
	call	_CRYPTO_malloc
	add	esp, 48					; 00000030H
	mov	DWORD PTR _row$[esp+216], eax
; Line 2117
	push	0
	push	0
	push	edi
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _row$[esp+220], eax
; Line 2120
	cmp	DWORD PTR _row$[esp+200], 0
	je	SHORT $LN127@do_body
	cmp	DWORD PTR _row$[esp+204], 0
	je	SHORT $LN127@do_body
	mov	ecx, DWORD PTR _row$[esp+216]
	test	ecx, ecx
	je	SHORT $LN127@do_body
	test	eax, eax
	je	SHORT $LN127@do_body
; Line 2124
	push	8
	push	OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	push	ecx
	call	_BUF_strlcpy
; Line 2125
	mov	eax, DWORD PTR _row$[esp+212]
; Line 2129
	push	2129					; 00000851H
	push	OFFSET ??_C@_0M@OCJPIPNB@?4?2apps?2ca?4c?$AA@
	push	28					; 0000001cH
	mov	BYTE PTR [eax], 86			; 00000056H
	mov	eax, DWORD PTR _row$[esp+224]
	mov	BYTE PTR [eax+1], 0
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 24					; 00000018H
	test	ecx, ecx
	jne	SHORT $LN128@do_body
$LN127@do_body:
; Line 2130
	push	OFFSET ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	ebp, DWORD PTR _CAname$1$[esp+208]
	add	esp, 8
	jmp	$LN233@do_body
$LN128@do_body:
; Line 2135
	mov	eax, DWORD PTR _row$[esp+200]
; Line 2140
	mov	esi, DWORD PTR _db$GSCopy$1$[esp+200]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _row$[esp+204]
	mov	DWORD PTR _row$[esp+200], 0
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _row$[esp+208]
	mov	DWORD PTR _row$[esp+204], 0
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _row$[esp+212]
	mov	DWORD PTR _row$[esp+208], 0
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR _row$[esp+216]
	mov	DWORD PTR _row$[esp+212], 0
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR _row$[esp+220]
	mov	DWORD PTR _row$[esp+216], 0
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR _row$[esp+220], 0
	push	ecx
	mov	DWORD PTR [ecx+24], 0
	push	DWORD PTR [esi+4]
	call	_TXT_DB_insert
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN129@do_body
; Line 2141
	push	OFFSET ??_C@_0BL@ILNAPLLO@failed?5to?5update?5database?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2142
	mov	eax, DWORD PTR [esi+4]
	push	DWORD PTR [eax+16]
	push	OFFSET ??_C@_0BJ@HFPMKNMK@TXT_DB?5error?5number?5?$CFld?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	ebp, DWORD PTR _CAname$1$[esp+220]
	add	esp, 20					; 00000014H
	jmp	$LN233@do_body
$LN129@do_body:
; Line 2026
	mov	ebp, DWORD PTR _CAname$1$[esp+200]
; Line 2145
	mov	DWORD PTR _ok$1$[esp+200], 1
	jmp	$LN233@do_body
$LN222@do_body:
	mov	ebp, DWORD PTR _CAname$1$[esp+200]
	mov	edi, DWORD PTR _ret$1$[esp+200]
	jmp	$LN233@do_body
$LN230@do_body:
	xor	edi, edi
	jmp	$err$248
$LN135@do_body:
; Line 2164
	mov	eax, DWORD PTR _xret$GSCopy$1$[esp+200]
	mov	DWORD PTR [eax], edi
$LN136@do_body:
; Line 2165
	mov	eax, esi
$LN1@do_body:
; Line 2166
	mov	ecx, DWORD PTR __$ArrayPad$[esp+200]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 184				; 000000b8H
	ret	0
_do_body ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _write_new_certificate
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_x$ = 12						; size = 4
_output_der$ = 16					; size = 4
_notext$ = 20						; size = 4
_write_new_certificate PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 2172
	cmp	DWORD PTR _output_der$[esp-4], 0
	je	SHORT $LN2@write_new_
; Line 2173
	push	DWORD PTR _x$[esp-4]
	push	DWORD PTR _bp$[esp]
	call	_i2d_X509_bio
; Line 2190
	add	esp, 8
; Line 2191
	ret	0
$LN2@write_new_:
; Line 2188
	cmp	DWORD PTR _notext$[esp-4], 0
	jne	SHORT $LN3@write_new_
; Line 2189
	push	DWORD PTR _x$[esp-4]
	push	DWORD PTR _bp$[esp]
	call	_X509_print
	add	esp, 8
$LN3@write_new_:
; Line 2190
	push	DWORD PTR _x$[esp-4]
	push	DWORD PTR _bp$[esp]
	call	_PEM_write_bio_X509
	add	esp, 8
; Line 2191
	ret	0
_write_new_certificate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _certify_spkac
_TEXT	SEGMENT
_req$1$ = -24						; size = 4
_spki$1$ = -20						; size = 4
_errline$ = -16						; size = 4
_n$1$ = -12						; size = 4
_sk$1$ = -8						; size = 4
_parms$1$ = -4						; size = 4
_xret$ = 8						; size = 4
_infile$ = 12						; size = 4
_pkey$ = 16						; size = 4
_x509$ = 20						; size = 4
_dgst$ = 24						; size = 4
_sigopts$ = 28						; size = 4
_policy$ = 32						; size = 4
_db$ = 36						; size = 4
_serial$ = 40						; size = 4
_subj$ = 44						; size = 4
_chtype$ = 48						; size = 4
_multirdn$ = 52						; size = 4
_email_dn$ = 56						; size = 4
_startdate$ = 60					; size = 4
_enddate$ = 64						; size = 4
_days$ = 68						; size = 4
_ext_sect$ = 72						; size = 4
_lconf$ = 76						; size = 4
_verbose$ = 80						; size = 4
_certopt$ = 84						; size = 4
_nameopt$ = 88						; size = 4
_default_op$ = 92					; size = 4
_ext_copy$ = 96						; size = 4
_certify_spkac PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 2202
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	ebx
; Line 2222
	mov	ebx, DWORD PTR _infile$[esp+24]
	lea	eax, DWORD PTR _errline$[esp+28]
	push	ebp
	push	edi
	push	eax
	xor	ebp, ebp
	push	ebx
	push	ebp
	mov	DWORD PTR _spki$1$[esp+48], ebp
	call	_CONF_load
	mov	edi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _parms$1$[esp+36], edi
; Line 2223
	test	edi, edi
	jne	SHORT $LN8@certify_sp
; Line 2224
	push	ebx
	push	DWORD PTR _errline$[esp+40]
	push	OFFSET ??_C@_0BJ@BNDHOAPM@error?5on?5line?5?$CFld?5of?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2225
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 20					; 00000014H
; Line 2332
	or	eax, -1
	pop	edi
	pop	ebp
	pop	ebx
; Line 2333
	add	esp, 24					; 00000018H
	ret	0
$LN8@certify_sp:
	push	esi
; Line 2229
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	push	edi
	call	_CONF_get_section
	mov	esi, eax
; Line 2230
	push	esi
	mov	DWORD PTR _sk$1$[esp+52], esi
	call	_sk_num
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN9@certify_sp
; Line 2231
	push	ebx
	push	OFFSET ??_C@_0CB@HEFHHIFF@no?5name?1value?5pairs?5found?5in?5?$CFs?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2232
	push	edi
	call	_CONF_free
	add	esp, 16					; 00000010H
; Line 2233
	or	esi, -1
	jmp	$LN22@certify_sp
$LN9@certify_sp:
; Line 2243
	call	_X509_REQ_new
	mov	DWORD PTR _req$1$[esp+40], eax
; Line 2244
	test	eax, eax
	jne	SHORT $LN10@certify_sp
; Line 2245
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 2246
	or	esi, -1
	jmp	$LN22@certify_sp
$LN10@certify_sp:
; Line 2253
	mov	eax, DWORD PTR [eax]
; Line 2255
	xor	ebx, ebx
; Line 2256
	push	esi
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR _n$1$[esp+44], eax
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN40@certify_sp
	npad	3
$LL4@certify_sp:
; Line 2259
	push	ebx
	push	esi
	call	_sk_value
	mov	ebp, eax
	add	esp, 8
; Line 2260
	mov	esi, DWORD PTR [ebp+4]
; Line 2264
	mov	ecx, esi
	mov	al, BYTE PTR [ecx]
	test	al, al
	je	SHORT $LN14@certify_sp
$LL7@certify_sp:
; Line 2265
	cmp	al, 58					; 0000003aH
	je	SHORT $LN30@certify_sp
	cmp	al, 44					; 0000002cH
	je	SHORT $LN30@certify_sp
	cmp	al, 46					; 0000002eH
	je	SHORT $LN30@certify_sp
; Line 2264
	mov	al, BYTE PTR [ecx+1]
	inc	ecx
	test	al, al
	jne	SHORT $LL7@certify_sp
; Line 2286
	jmp	SHORT $LN14@certify_sp
$LN30@certify_sp:
; Line 2266
	inc	ecx
; Line 2267
	cmp	BYTE PTR [ecx], 0
	cmovne	esi, ecx
$LN14@certify_sp:
; Line 2272
	mov	edi, DWORD PTR [ebp+8]
; Line 2273
	push	esi
	call	_OBJ_txt2nid
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN15@certify_sp
; Line 2274
	mov	eax, OFFSET ??_C@_05BKCNMPMD@SPKAC?$AA@
	npad	7
$LL42@certify_sp:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN43@certify_sp
	test	cl, cl
	je	SHORT $LN44@certify_sp
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN43@certify_sp
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL42@certify_sp
$LN44@certify_sp:
	xor	eax, eax
	jmp	SHORT $LN45@certify_sp
$LN43@certify_sp:
	sbb	eax, eax
	or	eax, 1
$LN45@certify_sp:
	test	eax, eax
	jne	SHORT $LN47@certify_sp
; Line 2275
	push	-1
	push	DWORD PTR [ebp+8]
	call	_NETSCAPE_SPKI_b64_decode
	mov	ebp, eax
	add	esp, 8
	mov	DWORD PTR _spki$1$[esp+40], ebp
; Line 2276
	test	ebp, ebp
	jne	SHORT $LN50@certify_sp
; Line 2277
	push	OFFSET ??_C@_0CJ@IGILIHJB@unable?5to?5load?5Netscape?5SPKAC?5st@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2279
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	jmp	$LN51@certify_sp
$LN15@certify_sp:
; Line 2286
	push	0
	push	-1
	push	-1
	push	edi
	mov	edi, DWORD PTR _chtype$[esp+52]
	push	edi
	push	eax
	push	DWORD PTR _n$1$[esp+64]
	call	_X509_NAME_add_entry_by_NID
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$LN48@certify_sp
	mov	ebp, DWORD PTR _spki$1$[esp+40]
	jmp	SHORT $LN2@certify_sp
$LN47@certify_sp:
	mov	ebp, DWORD PTR _spki$1$[esp+40]
$LN50@certify_sp:
	mov	edi, DWORD PTR _chtype$[esp+36]
$LN2@certify_sp:
; Line 2256
	mov	esi, DWORD PTR _sk$1$[esp+40]
	inc	ebx
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	eax, ebx
	jg	$LL4@certify_sp
; Line 2290
	test	ebp, ebp
	je	$LN40@certify_sp
; Line 2300
	push	OFFSET ??_C@_0DE@JFKAOFNC@Check?5that?5the?5SPKAC?5request?5mat@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2303
	push	ebp
	call	_NETSCAPE_SPKI_get_pubkey
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN20@certify_sp
; Line 2304
	push	OFFSET ??_C@_0CC@KHDGLDHB@error?5unpacking?5SPKAC?5public?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2305
	jmp	$LN48@certify_sp
$LN20@certify_sp:
; Line 2308
	push	esi
	push	ebp
	call	_NETSCAPE_SPKI_verify
	add	esp, 8
; Line 2309
	test	eax, eax
	jg	SHORT $LN21@certify_sp
; Line 2310
	push	OFFSET ??_C@_0DD@JJCAIGEL@signature?5verification?5failed?5on@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2312
	jmp	$LN48@certify_sp
$LN21@certify_sp:
; Line 2314
	push	OFFSET ??_C@_0O@OKNNLJOD@Signature?5ok?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2316
	mov	ebx, DWORD PTR _req$1$[esp+48]
	push	esi
	push	ebx
	call	_X509_REQ_set_pubkey
; Line 2317
	push	esi
	call	_EVP_PKEY_free
; Line 2318
	push	0
	push	DWORD PTR _ext_copy$[esp+60]
	push	DWORD PTR _default_op$[esp+64]
	push	DWORD PTR _nameopt$[esp+68]
	push	DWORD PTR _certopt$[esp+72]
	push	DWORD PTR _lconf$[esp+76]
	push	DWORD PTR _ext_sect$[esp+80]
	push	ebx
	push	DWORD PTR _verbose$[esp+88]
	push	1
	push	DWORD PTR _days$[esp+96]
	push	DWORD PTR _enddate$[esp+100]
	push	DWORD PTR _startdate$[esp+104]
	push	DWORD PTR _email_dn$[esp+108]
	push	DWORD PTR _multirdn$[esp+112]
	push	edi
	push	DWORD PTR _subj$[esp+120]
	push	DWORD PTR _serial$[esp+124]
	push	DWORD PTR _db$[esp+128]
	push	DWORD PTR _policy$[esp+132]
	push	DWORD PTR _sigopts$[esp+136]
	push	DWORD PTR _dgst$[esp+140]
	push	DWORD PTR _x509$[esp+144]
	push	DWORD PTR _pkey$[esp+148]
	push	DWORD PTR _xret$[esp+152]
	call	_do_body
	add	esp, 120				; 00000078H
	mov	esi, eax
	jmp	SHORT $err$53
$LN40@certify_sp:
; Line 2291
	push	DWORD PTR _infile$[esp+36]
	push	OFFSET ??_C@_0CK@BHFKNBFM@Netscape?5SPKAC?5structure?5not?5fou@
	push	DWORD PTR _bio_err
	call	_BIO_printf
$LN51@certify_sp:
	add	esp, 12					; 0000000cH
$LN48@certify_sp:
	mov	ebx, DWORD PTR _req$1$[esp+40]
	or	esi, -1
$err$53:
; Line 2324
	push	ebx
	call	_X509_REQ_free
	mov	ebp, DWORD PTR _spki$1$[esp+44]
	add	esp, 4
	mov	edi, DWORD PTR _parms$1$[esp+40]
$LN22@certify_sp:
; Line 2326
	push	edi
	call	_CONF_free
	add	esp, 4
; Line 2327
	test	ebp, ebp
	je	SHORT $LN46@certify_sp
; Line 2328
	push	ebp
	call	_NETSCAPE_SPKI_free
	add	esp, 4
$LN46@certify_sp:
; Line 2332
	mov	eax, esi
	pop	esi
	pop	edi
	pop	ebp
	pop	ebx
; Line 2333
	add	esp, 24					; 00000018H
	ret	0
_certify_spkac ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _certify_cert
_TEXT	SEGMENT
_xret$ = 8						; size = 4
_infile$ = 12						; size = 4
_pkey$ = 16						; size = 4
_x509$ = 20						; size = 4
_dgst$ = 24						; size = 4
_sigopts$ = 28						; size = 4
_policy$ = 32						; size = 4
_db$ = 36						; size = 4
_serial$ = 40						; size = 4
_subj$ = 44						; size = 4
_chtype$ = 48						; size = 4
_multirdn$ = 52						; size = 4
_email_dn$ = 56						; size = 4
_startdate$ = 60					; size = 4
_enddate$ = 64						; size = 4
_days$ = 68						; size = 4
_batch$ = 72						; size = 4
_ext_sect$ = 76						; size = 4
_lconf$ = 80						; size = 4
_verbose$ = 84						; size = 4
_certopt$ = 88						; size = 4
_nameopt$ = 92						; size = 4
_default_op$ = 96					; size = 4
_ext_copy$ = 100					; size = 4
_e$ = 104						; size = 4
_certify_cert PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 1584
	mov	eax, DWORD PTR _infile$[esp-4]
	push	esi
	push	edi
	push	eax
	push	DWORD PTR _e$[esp+8]
	or	edi, -1
	push	0
	push	3
	push	eax
	push	DWORD PTR _bio_err
	call	_load_cert
	mov	esi, eax
	add	esp, 24					; 00000018H
	test	esi, esi
	je	$LN12@certify_ce
; Line 1586
	cmp	DWORD PTR _verbose$[esp+4], 0
	je	SHORT $LN3@certify_ce
; Line 1587
	push	esi
	push	DWORD PTR _bio_err
	call	_X509_print
	add	esp, 8
$LN3@certify_ce:
; Line 1589
	push	ebx
	push	OFFSET ??_C@_0CO@BGGIPDIE@Check?5that?5the?5request?5matches?5t@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1591
	push	esi
	call	_X509_get_pubkey
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jne	SHORT $LN4@certify_ce
; Line 1592
	push	OFFSET ??_C@_0BM@JDNMMHMG@error?5unpacking?5public?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1621
	push	esi
	call	_X509_free
	add	esp, 4
; Line 1622
	mov	eax, edi
	pop	ebx
	pop	edi
	pop	esi
; Line 1623
	ret	0
$LN4@certify_ce:
	push	ebp
; Line 1595
	push	ebx
	push	esi
	call	_X509_verify
; Line 1596
	push	ebx
	mov	ebp, eax
	call	_EVP_PKEY_free
	add	esp, 12					; 0000000cH
; Line 1597
	test	ebp, ebp
	jns	SHORT $LN14@certify_ce
; Line 1599
	push	OFFSET ??_C@_0CF@PMPNIMKJ@Signature?5verification?5problems?4@
	push	DWORD PTR _bio_err
	xor	edi, edi
	call	_BIO_printf
	add	esp, 8
	pop	ebp
; Line 1621
	push	esi
	call	_X509_free
	add	esp, 4
; Line 1622
	mov	eax, edi
	pop	ebx
	pop	edi
	pop	esi
; Line 1623
	ret	0
$LN14@certify_ce:
; Line 1602
	jne	SHORT $LN6@certify_ce
; Line 1604
	push	OFFSET ??_C@_0CJ@GEOLDMJL@Signature?5did?5not?5match?5the?5cert@
	push	DWORD PTR _bio_err
	xor	edi, edi
	call	_BIO_printf
	add	esp, 8
	pop	ebp
; Line 1621
	push	esi
	call	_X509_free
	add	esp, 4
; Line 1622
	mov	eax, edi
	pop	ebx
	pop	edi
	pop	esi
; Line 1623
	ret	0
$LN6@certify_ce:
; Line 1607
	push	OFFSET ??_C@_0O@OKNNLJOD@Signature?5ok?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1609
	call	_EVP_md5
	push	eax
	push	0
	push	esi
	call	_X509_to_X509_REQ
	mov	ebx, eax
	add	esp, 20					; 00000014H
	test	ebx, ebx
	je	SHORT $LN13@certify_ce
; Line 1612
	push	0
	push	DWORD PTR _ext_copy$[esp+16]
	push	DWORD PTR _default_op$[esp+20]
	push	DWORD PTR _nameopt$[esp+24]
	push	DWORD PTR _certopt$[esp+28]
	push	DWORD PTR _lconf$[esp+32]
	push	DWORD PTR _ext_sect$[esp+36]
	push	ebx
	push	DWORD PTR _verbose$[esp+44]
	push	DWORD PTR _batch$[esp+48]
	push	DWORD PTR _days$[esp+52]
	push	DWORD PTR _enddate$[esp+56]
	push	DWORD PTR _startdate$[esp+60]
	push	DWORD PTR _email_dn$[esp+64]
	push	DWORD PTR _multirdn$[esp+68]
	push	DWORD PTR _chtype$[esp+72]
	push	DWORD PTR _subj$[esp+76]
	push	DWORD PTR _serial$[esp+80]
	push	DWORD PTR _db$[esp+84]
	push	DWORD PTR _policy$[esp+88]
	push	DWORD PTR _sigopts$[esp+92]
	push	DWORD PTR _dgst$[esp+96]
	push	DWORD PTR _x509$[esp+100]
	push	DWORD PTR _pkey$[esp+104]
	push	DWORD PTR _xret$[esp+108]
	call	_do_body
	mov	edi, eax
$err$16:
; Line 1619
	push	ebx
	call	_X509_REQ_free
	add	esp, 104				; 00000068H
$LN13@certify_ce:
; Line 1621
	pop	ebp
	push	esi
	call	_X509_free
	add	esp, 4
	pop	ebx
$LN12@certify_ce:
; Line 1622
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1623
	ret	0
_certify_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _certify
_TEXT	SEGMENT
_xret$ = 8						; size = 4
_infile$ = 12						; size = 4
_pkey$ = 16						; size = 4
_x509$ = 20						; size = 4
_dgst$ = 24						; size = 4
_sigopts$ = 28						; size = 4
_policy$ = 32						; size = 4
_db$ = 36						; size = 4
_serial$ = 40						; size = 4
_subj$ = 44						; size = 4
_chtype$ = 48						; size = 4
_multirdn$ = 52						; size = 4
_email_dn$ = 56						; size = 4
_startdate$ = 60					; size = 4
_enddate$ = 64						; size = 4
_days$ = 68						; size = 4
_batch$ = 72						; size = 4
_ext_sect$ = 76						; size = 4
_lconf$ = 80						; size = 4
_verbose$ = 84						; size = 4
_certopt$ = 88						; size = 4
_nameopt$ = 92						; size = 4
_default_op$ = 96					; size = 4
_ext_copy$ = 100					; size = 4
_selfsign$ = 104					; size = 4
_certify PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 1506
	push	ebx
	push	ebp
	push	edi
; Line 1510
	or	edi, -1
; Line 1512
	call	_BIO_s_file
	push	eax
	call	_BIO_new
; Line 1514
	mov	ebp, DWORD PTR _infile$[esp+12]
	mov	ebx, eax
	push	ebp
	push	3
	push	108					; 0000006cH
	push	ebx
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
	test	eax, eax
	jg	SHORT $LN2@certify
; Line 1515
	push	ebp
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 1516
	jmp	$LN10@certify
$LN2@certify:
	push	esi
; Line 1518
	push	0
	push	0
	push	0
	push	ebx
	call	_PEM_read_bio_X509_REQ
	mov	esi, eax
	add	esp, 16					; 00000010H
	test	esi, esi
	jne	SHORT $LN3@certify
; Line 1519
	push	ebp
	push	OFFSET ??_C@_0CJ@GLEJHDFB@Error?5reading?5certificate?5reques@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1521
	jmp	$LN14@certify
$LN3@certify:
; Line 1523
	cmp	DWORD PTR _verbose$[esp+12], 0
	je	SHORT $LN4@certify
; Line 1524
	push	esi
	push	DWORD PTR _bio_err
	call	_X509_REQ_print
	add	esp, 8
$LN4@certify:
; Line 1526
	push	OFFSET ??_C@_0CO@BGGIPDIE@Check?5that?5the?5request?5matches?5t@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1528
	cmp	DWORD PTR _selfsign$[esp+12], 0
	je	SHORT $LN5@certify
	push	DWORD PTR _pkey$[esp+12]
	push	esi
	call	_X509_REQ_check_private_key
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@certify
; Line 1529
	push	OFFSET ??_C@_0DF@NBEBGKAJ@Certificate?5request?5and?5CA?5priva@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1531
	xor	edi, edi
; Line 1532
	jmp	$err$19
$LN5@certify:
; Line 1534
	push	esi
	call	_X509_REQ_get_pubkey
	mov	ebp, eax
	add	esp, 4
	test	ebp, ebp
	jne	SHORT $LN6@certify
; Line 1535
	push	OFFSET ??_C@_0BM@JDNMMHMG@error?5unpacking?5public?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1536
	jmp	$err$19
$LN6@certify:
; Line 1538
	push	ebp
	push	esi
	call	_X509_REQ_verify
; Line 1539
	push	ebp
	mov	edi, eax
	call	_EVP_PKEY_free
	add	esp, 12					; 0000000cH
; Line 1540
	test	edi, edi
	jns	SHORT $LN15@certify
; Line 1542
	push	OFFSET ??_C@_0CF@PMPNIMKJ@Signature?5verification?5problems?4@
$LN17@certify:
	push	DWORD PTR _bio_err
	xor	edi, edi
	call	_BIO_printf
; Line 1543
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 1544
	jmp	$err$19
$LN15@certify:
; Line 1546
	jne	SHORT $LN8@certify
; Line 1548
	push	OFFSET ??_C@_0DB@IDIGBDHM@Signature?5did?5not?5match?5the?5cert@
; Line 1551
	jmp	SHORT $LN17@certify
$LN8@certify:
; Line 1553
	push	OFFSET ??_C@_0O@OKNNLJOD@Signature?5ok?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1555
	push	DWORD PTR _selfsign$[esp+20]
	push	DWORD PTR _ext_copy$[esp+24]
	push	DWORD PTR _default_op$[esp+28]
	push	DWORD PTR _nameopt$[esp+32]
	push	DWORD PTR _certopt$[esp+36]
	push	DWORD PTR _lconf$[esp+40]
	push	DWORD PTR _ext_sect$[esp+44]
	push	esi
	push	DWORD PTR _verbose$[esp+52]
	push	DWORD PTR _batch$[esp+56]
	push	DWORD PTR _days$[esp+60]
	push	DWORD PTR _enddate$[esp+64]
	push	DWORD PTR _startdate$[esp+68]
	push	DWORD PTR _email_dn$[esp+72]
	push	DWORD PTR _multirdn$[esp+76]
	push	DWORD PTR _chtype$[esp+80]
	push	DWORD PTR _subj$[esp+84]
	push	DWORD PTR _serial$[esp+88]
	push	DWORD PTR _db$[esp+92]
	push	DWORD PTR _policy$[esp+96]
	push	DWORD PTR _sigopts$[esp+100]
	push	DWORD PTR _dgst$[esp+104]
	push	DWORD PTR _x509$[esp+108]
	push	DWORD PTR _pkey$[esp+112]
	push	DWORD PTR _xret$[esp+116]
	call	_do_body
	add	esp, 108				; 0000006cH
	mov	edi, eax
$err$19:
; Line 1562
	push	esi
	call	_X509_REQ_free
	add	esp, 4
$LN14@certify:
	pop	esi
$LN10@certify:
; Line 1563
	test	ebx, ebx
	je	SHORT $LN13@certify
; Line 1564
	push	ebx
	call	_BIO_free
	add	esp, 4
$LN13@certify:
; Line 1565
	mov	eax, edi
	pop	edi
	pop	ebp
	pop	ebx
; Line 1566
	ret	0
_certify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _lookup_fail
_TEXT	SEGMENT
_name$ = 8						; size = 4
_tag$ = 12						; size = 4
_lookup_fail PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 1495
	push	DWORD PTR _tag$[esp-4]
	push	DWORD PTR _name$[esp]
	push	OFFSET ??_C@_0CD@NEOGLMMJ@variable?5lookup?5failed?5for?5?$CFs?3?3?$CF@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 1496
	ret	0
_lookup_fail ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _unpack_revinfo
_TEXT	SEGMENT
_ret$1$ = -12						; size = 4
_tmp$1$ = -8						; size = 4
_hold$1$ = -4						; size = 4
_prevtm$ = 8						; size = 4
_preason$ = 12						; size = 4
_phold$ = 16						; size = 4
_pinvtm$ = 20						; size = 4
_str$ = 24						; size = 4
_unpack_revinfo PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ca.c
; Line 2810
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 2818
	push	DWORD PTR _str$[esp+24]
	xor	ebx, ebx
	xor	edi, edi
	or	esi, -1
	mov	DWORD PTR _ret$1$[esp+32], ebx
	mov	DWORD PTR _hold$1$[esp+32], ebx
	xor	ebp, ebp
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR _tmp$1$[esp+28], eax
; Line 2820
	test	eax, eax
	jne	SHORT $LN5@unpack_rev
; Line 2821
	push	OFFSET ??_C@_0BL@NEBNLEOC@memory?5allocation?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2822
	jmp	$LN31@unpack_rev
$LN5@unpack_rev:
; Line 2825
	mov	ebp, DWORD PTR __imp__strchr
	push	44					; 0000002cH
	push	eax
	call	ebp
	add	esp, 8
; Line 2829
	test	eax, eax
	je	SHORT $LN7@unpack_rev
; Line 2830
	mov	BYTE PTR [eax], bl
; Line 2831
	inc	eax
; Line 2833
	push	44					; 0000002cH
	push	eax
	mov	ebx, eax
	call	ebp
	add	esp, 8
; Line 2834
	test	eax, eax
	je	SHORT $LN7@unpack_rev
; Line 2835
	mov	BYTE PTR [eax], 0
; Line 2836
	lea	edi, DWORD PTR [eax+1]
$LN7@unpack_rev:
; Line 2840
	mov	ebp, DWORD PTR _prevtm$[esp+24]
	test	ebp, ebp
	je	SHORT $LN10@unpack_rev
; Line 2841
	call	_ASN1_UTCTIME_new
	mov	DWORD PTR [ebp], eax
; Line 2842
	test	eax, eax
	jne	SHORT $LN9@unpack_rev
; Line 2843
	push	OFFSET ??_C@_0BL@NEBNLEOC@memory?5allocation?5failure?6?$AA@
$LN45@unpack_rev:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2844
	xor	ebp, ebp
	jmp	$err$49
$LN9@unpack_rev:
; Line 2846
	mov	ebp, DWORD PTR _tmp$1$[esp+28]
	push	ebp
	push	eax
	call	_ASN1_UTCTIME_set_string
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@unpack_rev
; Line 2847
	push	ebp
	push	OFFSET ??_C@_0BM@ENJPCCNL@invalid?5revocation?5date?5?$CFs?6?$AA@
$LN47@unpack_rev:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2848
	xor	ebp, ebp
	jmp	$err$49
$LN10@unpack_rev:
; Line 2851
	test	ebx, ebx
	je	SHORT $LN44@unpack_rev
; Line 2852
	mov	ebp, DWORD PTR __imp___stricmp
	xor	esi, esi
	npad	5
$LL4@unpack_rev:
; Line 2853
	push	DWORD PTR _crl_reasons[esi*4]
	push	ebx
	call	ebp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN36@unpack_rev
; Line 2852
	inc	esi
	cmp	esi, 11					; 0000000bH
	jb	SHORT $LL4@unpack_rev
; Line 2859
	push	ebx
	push	OFFSET ??_C@_0BI@EKGDAIMG@invalid?5reason?5code?5?$CFs?6?$AA@
; Line 2860
	jmp	SHORT $LN47@unpack_rev
$LN36@unpack_rev:
; Line 2858
	cmp	esi, -1
	jne	SHORT $LN13@unpack_rev
; Line 2859
	push	ebx
	push	OFFSET ??_C@_0BI@EKGDAIMG@invalid?5reason?5code?5?$CFs?6?$AA@
; Line 2860
	jmp	SHORT $LN47@unpack_rev
$LN13@unpack_rev:
; Line 2863
	cmp	esi, 7
	jne	SHORT $LN14@unpack_rev
; Line 2864
	mov	esi, 8
$LN44@unpack_rev:
	xor	ebp, ebp
$LN26@unpack_rev:
; Line 2901
	mov	eax, DWORD PTR _preason$[esp+24]
	test	eax, eax
	je	SHORT $LN28@unpack_rev
; Line 2902
	mov	DWORD PTR [eax], esi
$LN28@unpack_rev:
; Line 2903
	mov	eax, DWORD PTR _pinvtm$[esp+24]
	test	eax, eax
	je	$LN29@unpack_rev
; Line 2904
	mov	DWORD PTR [eax], ebp
	jmp	$LN30@unpack_rev
$LN14@unpack_rev:
; Line 2865
	cmp	esi, 8
	jne	SHORT $LN16@unpack_rev
; Line 2866
	test	edi, edi
	jne	SHORT $LN18@unpack_rev
; Line 2867
	push	OFFSET ??_C@_0BK@GLHGHJBD@missing?5hold?5instruction?6?$AA@
; Line 2868
	jmp	$LN45@unpack_rev
$LN18@unpack_rev:
; Line 2871
	push	0
	push	edi
	mov	esi, 6
	call	_OBJ_txt2obj
	add	esp, 8
	mov	DWORD PTR _hold$1$[esp+28], eax
; Line 2873
	test	eax, eax
	jne	SHORT $LN19@unpack_rev
; Line 2874
	push	edi
	push	OFFSET ??_C@_0BO@BBNDMJI@invalid?5object?5identifier?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	xor	ebp, ebp
	jmp	$err$49
$LN19@unpack_rev:
; Line 2878
	mov	ecx, DWORD PTR _phold$[esp+24]
; Line 2880
	xor	ebp, ebp
	test	ecx, ecx
	je	SHORT $LN26@unpack_rev
; Line 2879
	mov	DWORD PTR [ecx], eax
; Line 2880
	jmp	SHORT $LN26@unpack_rev
$LN16@unpack_rev:
	cmp	esi, 9
	je	SHORT $LN22@unpack_rev
	cmp	esi, 10					; 0000000aH
	jne	SHORT $LN44@unpack_rev
$LN22@unpack_rev:
; Line 2881
	test	edi, edi
	jne	SHORT $LN23@unpack_rev
; Line 2882
	push	OFFSET ??_C@_0BK@OCEDLCGI@missing?5compromised?5time?6?$AA@
; Line 2883
	jmp	$LN45@unpack_rev
$LN23@unpack_rev:
; Line 2885
	call	_ASN1_GENERALIZEDTIME_new
	mov	ebp, eax
; Line 2886
	test	ebp, ebp
	jne	SHORT $LN24@unpack_rev
; Line 2887
	push	OFFSET ??_C@_0BL@NEBNLEOC@memory?5allocation?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2888
	jmp	SHORT $err$49
$LN24@unpack_rev:
; Line 2890
	push	edi
	push	ebp
	call	_ASN1_GENERALIZEDTIME_set_string
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN25@unpack_rev
; Line 2891
	push	edi
	push	OFFSET ??_C@_0BN@DFFODFGO@invalid?5compromised?5time?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2892
	jmp	SHORT $err$49
$LN25@unpack_rev:
; Line 2894
	xor	eax, eax
	cmp	esi, 9
	setne	al
	lea	esi, DWORD PTR [eax+1]
	jmp	$LN26@unpack_rev
$LN29@unpack_rev:
; Line 2906
	push	ebp
	call	_ASN1_GENERALIZEDTIME_free
	add	esp, 4
$LN30@unpack_rev:
; Line 2908
	mov	DWORD PTR _ret$1$[esp+28], 1
$err$49:
; Line 2913
	push	DWORD PTR _tmp$1$[esp+28]
	call	_CRYPTO_free
	add	esp, 4
$LN31@unpack_rev:
; Line 2914
	cmp	DWORD PTR _phold$[esp+24], 0
	jne	SHORT $LN32@unpack_rev
; Line 2915
	push	DWORD PTR _hold$1$[esp+28]
	call	_ASN1_OBJECT_free
	add	esp, 4
$LN32@unpack_rev:
; Line 2916
	cmp	DWORD PTR _pinvtm$[esp+24], 0
	jne	SHORT $LN41@unpack_rev
; Line 2917
	push	ebp
	call	_ASN1_GENERALIZEDTIME_free
	add	esp, 4
$LN41@unpack_rev:
; Line 2919
	mov	eax, DWORD PTR _ret$1$[esp+28]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2920
	add	esp, 12					; 0000000cH
	ret	0
_unpack_revinfo ENDP
_TEXT	ENDS
END

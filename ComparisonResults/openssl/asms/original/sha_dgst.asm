; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha_dgst.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_SHA_version
CONST	SEGMENT
_SHA_version DB	'SHA part of OpenSSL 1.0.2h  3 May 2016', 00H
CONST	ENDS
PUBLIC	_SHA_Init
PUBLIC	_SHA_Update
PUBLIC	_SHA_Final
PUBLIC	_SHA_Transform
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtpy
;	COMDAT _sha_block_data_order
_TEXT	SEGMENT
_XX14$4$ = -84						; size = 4
_XX10$2$ = -80						; size = 4
_XX10$1$ = -80						; size = 4
_XX0$4$ = -80						; size = 4
_E$21$ = -80						; size = 4
_XX6$2$ = -76						; size = 4
_XX6$1$ = -76						; size = 4
_XX1$4$ = -76						; size = 4
_B$23$ = -76						; size = 4
_A$20$ = -76						; size = 4
_XX2$4$ = -72						; size = 4
_XX0$3$ = -72						; size = 4
_XX0$2$ = -72						; size = 4
_XX13$2$ = -68						; size = 4
_XX13$1$ = -68						; size = 4
_C$21$ = -68						; size = 4
_B$26$ = -68						; size = 4
_A$33$ = -68						; size = 4
_XX4$5$ = -64						; size = 4
_XX1$3$ = -64						; size = 4
_XX1$2$ = -64						; size = 4
_E$24$ = -64						; size = 4
_D$27$ = -64						; size = 4
_XX6$5$ = -60						; size = 4
_XX6$4$ = -60						; size = 4
_XX2$3$ = -60						; size = 4
_XX2$2$ = -60						; size = 4
_XX1$1$ = -60						; size = 4
_C$24$ = -60						; size = 4
_XX3$5$ = -56						; size = 4
_XX3$4$ = -56						; size = 4
_XX3$3$ = -56						; size = 4
_XX3$2$ = -56						; size = 4
_A$5$ = -56						; size = 4
_XX4$4$ = -52						; size = 4
_XX4$3$ = -52						; size = 4
_XX4$2$ = -52						; size = 4
_XX0$1$ = -52						; size = 4
_D$31$ = -52						; size = 4
_XX5$5$ = -48						; size = 4
_XX5$4$ = -48						; size = 4
_XX5$3$ = -48						; size = 4
_XX5$2$ = -48						; size = 4
_XX3$1$ = -48						; size = 4
_XX7$5$ = -44						; size = 4
_XX7$4$ = -44						; size = 4
_XX7$3$ = -44						; size = 4
_XX7$2$ = -44						; size = 4
_XX2$1$ = -44						; size = 4
_XX8$4$ = -40						; size = 4
_XX8$3$ = -40						; size = 4
_XX8$2$ = -40						; size = 4
_XX7$1$ = -40						; size = 4
_XX9$4$ = -36						; size = 4
_XX9$3$ = -36						; size = 4
_XX9$2$ = -36						; size = 4
_XX5$1$ = -36						; size = 4
_E$33$ = -36						; size = 4
_XX12$4$ = -32						; size = 4
_XX11$3$ = -32						; size = 4
_XX11$2$ = -32						; size = 4
_XX4$1$ = -32						; size = 4
_XX12$2$ = -28						; size = 4
_XX11$4$ = -28						; size = 4
_T$9$ = -28						; size = 4
_E$4$ = -28						; size = 4
_D$24$ = -28						; size = 4
_D$21$ = -28						; size = 4
_C$6$ = -28						; size = 4
_B$5$ = -28						; size = 4
_A$26$ = -28						; size = 4
_A$23$ = -28						; size = 4
_XX12$1$ = -24						; size = 4
_XX6$3$ = -24						; size = 4
_T$33$ = -24						; size = 4
_T$27$ = -24						; size = 4
_C$31$ = -24						; size = 4
_XX11$1$ = -20						; size = 4
_XX10$4$ = -20						; size = 4
_XX10$3$ = -20						; size = 4
_T$4$ = -20						; size = 4
_D$33$ = -20						; size = 4
_XX13$4$ = -16						; size = 4
_XX12$3$ = -16						; size = 4
_XX9$1$ = -16						; size = 4
_C$18$ = -16						; size = 4
_XX13$3$ = -12						; size = 4
_XX8$1$ = -12						; size = 4
_C$33$ = -12						; size = 4
_B$33$ = -12						; size = 4
_B$20$ = -12						; size = 4
_B$1$ = -12						; size = 4
_A$29$ = -12						; size = 4
_A$17$ = -12						; size = 4
_T$24$ = -8						; size = 4
_T$21$ = -8						; size = 4
_T$15$ = -8						; size = 4
_T$12$ = -8						; size = 4
_T$6$ = -8						; size = 4
_E$31$ = -8						; size = 4
_E$27$ = -8						; size = 4
_E$18$ = -8						; size = 4
_D$15$ = -8						; size = 4
_D$12$ = -8						; size = 4
_C$4$ = -8						; size = 4
_B$35$ = -8						; size = 4
_B$29$ = -8						; size = 4
_B$17$ = -8						; size = 4
_B$14$ = -8						; size = 4
_A$31$ = -8						; size = 4
_A$8$ = -8						; size = 4
_A$3$ = -8						; size = 4
_XX10$5$ = -4						; size = 4
_T$31$ = -4						; size = 4
_T$18$ = -4						; size = 4
_E$15$ = -4						; size = 4
_E$12$ = -4						; size = 4
_E$6$ = -4						; size = 4
_D$18$ = -4						; size = 4
_C$27$ = -4						; size = 4
_C$15$ = -4						; size = 4
_C$12$ = -4						; size = 4
_B$31$ = -4						; size = 4
_B$8$ = -4						; size = 4
_A$14$ = -4						; size = 4
_A$11$ = -4						; size = 4
_XX15$3$ = 8						; size = 4
_D$4$ = 8						; size = 4
_B$3$ = 8						; size = 4
_A$1$ = 8						; size = 4
_c$ = 8							; size = 4
_p$ = 12						; size = 4
_num$ = 16						; size = 4
_sha_block_data_order PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha_locl.h
; Line 213
	mov	eax, 84					; 00000054H
	call	__chkstk
; Line 223
	mov	eax, DWORD PTR _c$[esp+80]
	push	ebx
	push	ebp
	push	esi
	mov	edx, DWORD PTR [eax]
; Line 225
	mov	esi, DWORD PTR [eax+8]
	push	edi
	mov	DWORD PTR _A$1$[esp+96], edx
	npad	5
$LL2@sha_block_:
; Line 276
	mov	edi, DWORD PTR _p$[esp+96]
; Line 280
	rol	edx, 5
	movzx	ebx, BYTE PTR [edi]
	movzx	ecx, BYTE PTR [edi+1]
	shl	ecx, 16					; 00000010H
	movzx	ebp, BYTE PTR [edi+4]
	shl	ebx, 24					; 00000018H
	or	ebx, ecx
	shl	ebp, 24					; 00000018H
	movzx	ecx, BYTE PTR [edi+2]
	shl	ecx, 8
	or	ebx, ecx
	movzx	ecx, BYTE PTR [edi+3]
	or	ebx, ecx
	movzx	ecx, BYTE PTR [edi+5]
	shl	ecx, 16					; 00000010H
	add	edx, ebx
	or	ebp, ecx
	mov	DWORD PTR _XX0$1$[esp+100], ebx
	movzx	ecx, BYTE PTR [edi+6]
	shl	ecx, 8
	or	ebp, ecx
; Line 281
	movzx	ebx, BYTE PTR [edi+8]
	movzx	ecx, BYTE PTR [edi+7]
	or	ebp, ecx
	shl	ebx, 24					; 00000018H
	mov	ecx, DWORD PTR [eax+12]
	xor	ecx, esi
	mov	DWORD PTR _XX1$1$[esp+100], ebp
	and	ecx, DWORD PTR [eax+4]
	xor	ecx, DWORD PTR [eax+12]
	mov	esi, DWORD PTR [eax+16]
	add	ecx, edx
	add	esi, 1518500249				; 5a827999H
	add	esi, ecx
	mov	ecx, DWORD PTR [eax+4]
	rol	ecx, 30					; 0000001eH
; Line 283
	mov	edx, esi
	mov	DWORD PTR _B$1$[esp+100], ecx
	movzx	ecx, BYTE PTR [edi+9]
	shl	ecx, 16					; 00000010H
	or	ebx, ecx
	rol	edx, 5
	movzx	ecx, BYTE PTR [edi+10]
	add	edx, ebp
	shl	ecx, 8
	or	ebx, ecx
	movzx	ecx, BYTE PTR [edi+11]
	or	ebx, ecx
	add	edi, 12					; 0000000cH
	mov	ecx, DWORD PTR [eax+8]
	xor	ecx, DWORD PTR _B$1$[esp+100]
	and	ecx, DWORD PTR _A$1$[esp+96]
	xor	ecx, DWORD PTR [eax+8]
	add	ecx, edx
	mov	DWORD PTR _p$[esp+96], edi
	mov	edi, DWORD PTR [eax+12]
; Line 284
	mov	edx, DWORD PTR _p$[esp+96]
	add	edi, 1518500249				; 5a827999H
	add	edi, ecx
	mov	DWORD PTR _XX2$1$[esp+100], ebx
	mov	ecx, DWORD PTR [eax]
	rol	ecx, 30					; 0000001eH
	movzx	ebp, BYTE PTR [edx]
	mov	DWORD PTR _A$1$[esp+96], ecx
	movzx	ecx, BYTE PTR [edx+1]
	shl	ecx, 16					; 00000010H
	shl	ebp, 24					; 00000018H
	or	ebp, ecx
	movzx	ecx, BYTE PTR [edx+2]
	shl	ecx, 8
	or	ebp, ecx
	movzx	ecx, BYTE PTR [edx+3]
	add	edx, 4
	or	ebp, ecx
; Line 286
	mov	ecx, DWORD PTR _B$1$[esp+100]
	mov	DWORD PTR _p$[esp+96], edx
	mov	edx, edi
	rol	edx, 5
	xor	ecx, DWORD PTR _A$1$[esp+96]
	mov	DWORD PTR _XX3$1$[esp+100], ebp
	and	ecx, esi
	add	edx, ebx
	xor	ecx, DWORD PTR _B$1$[esp+100]
	add	ecx, edx
	mov	ebx, DWORD PTR [eax+8]
	add	ebx, 1518500249				; 5a827999H
	rol	esi, 30					; 0000001eH
	add	ebx, ecx
; Line 287
	mov	ecx, DWORD PTR _p$[esp+96]
	movzx	edx, BYTE PTR [ecx]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	shl	edx, 24					; 00000018H
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	inc	DWORD PTR _p$[esp+96]
	movzx	ecx, BYTE PTR [ecx]
	or	edx, ecx
; Line 289
	mov	ecx, esi
	xor	ecx, DWORD PTR _A$1$[esp+96]
	and	ecx, edi
	mov	DWORD PTR _XX4$1$[esp+100], edx
	xor	ecx, DWORD PTR _A$1$[esp+96]
	mov	edx, ebx
	rol	edx, 5
	add	edx, ebp
	rol	edi, 30					; 0000001eH
	mov	ebp, DWORD PTR _B$1$[esp+100]
	add	ecx, edx
	add	ebp, 1518500249				; 5a827999H
	add	ebp, ecx
; Line 290
	mov	ecx, DWORD PTR _p$[esp+96]
	movzx	edx, BYTE PTR [ecx]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	shl	edx, 24					; 00000018H
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	inc	DWORD PTR _p$[esp+96]
	movzx	ecx, BYTE PTR [ecx]
	or	edx, ecx
; Line 292
	mov	ecx, esi
	xor	ecx, edi
	mov	DWORD PTR _XX5$1$[esp+100], edx
	and	ecx, ebx
	mov	edx, ebp
	rol	edx, 5
	xor	ecx, esi
	add	edx, DWORD PTR _XX4$1$[esp+100]
	add	ecx, edx
	rol	ebx, 30					; 0000001eH
	mov	edx, DWORD PTR _A$1$[esp+96]
	add	edx, 1518500249				; 5a827999H
	add	edx, ecx
; Line 293
	mov	ecx, DWORD PTR _p$[esp+96]
	mov	DWORD PTR _B$3$[esp+96], edx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 24					; 00000018H
	mov	DWORD PTR _XX6$1$[esp+100], ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	DWORD PTR _XX6$1$[esp+100], ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
; Line 295
	rol	edx, 5
	mov	DWORD PTR _p$[esp+96], ecx
	add	edx, DWORD PTR _XX5$1$[esp+100]
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	DWORD PTR _XX6$1$[esp+100], ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	inc	DWORD PTR _p$[esp+96]
	movzx	ecx, BYTE PTR [ecx]
	or	DWORD PTR _XX6$1$[esp+100], ecx
	mov	ecx, edi
	xor	ecx, ebx
	and	ecx, ebp
	rol	ebp, 30					; 0000001eH
	xor	ecx, edi
	add	ecx, edx
	lea	edx, DWORD PTR [esi+1518500249]
	add	edx, ecx
; Line 296
	mov	ecx, DWORD PTR _p$[esp+96]
	mov	DWORD PTR _A$3$[esp+100], edx
; Line 298
	rol	edx, 5
	add	edx, DWORD PTR _XX6$1$[esp+100]
	movzx	esi, BYTE PTR [ecx]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	shl	esi, 24					; 00000018H
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	esi, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	esi, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	inc	DWORD PTR _p$[esp+96]
	movzx	ecx, BYTE PTR [ecx]
	or	esi, ecx
	mov	ecx, ebx
	xor	ecx, ebp
	mov	DWORD PTR _XX7$1$[esp+100], esi
	mov	esi, DWORD PTR _B$3$[esp+96]
	and	ecx, esi
	xor	ecx, ebx
	rol	esi, 30					; 0000001eH
	add	ecx, edx
	lea	edx, DWORD PTR [edi+1518500249]
	add	edx, ecx
; Line 299
	mov	ecx, DWORD PTR _p$[esp+96]
	mov	DWORD PTR _T$4$[esp+100], edx
	movzx	edi, BYTE PTR [ecx]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	shl	edi, 24					; 00000018H
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	edi, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	edi, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	or	edi, ecx
	inc	DWORD PTR _p$[esp+96]
	mov	DWORD PTR _XX8$1$[esp+100], edi
; Line 301
	mov	edi, DWORD PTR _A$3$[esp+100]
	mov	ecx, ebp
	xor	ecx, esi
	rol	edx, 5
	and	ecx, edi
	add	edx, 1518500249				; 5a827999H
	add	edx, DWORD PTR _XX7$1$[esp+100]
	xor	ecx, ebp
	add	ecx, edx
	rol	edi, 30					; 0000001eH
	add	ebx, ecx
; Line 302
	mov	ecx, DWORD PTR _p$[esp+96]
	mov	DWORD PTR _E$4$[esp+100], ebx
	movzx	edx, BYTE PTR [ecx]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	shl	edx, 24					; 00000018H
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	inc	DWORD PTR _p$[esp+96]
	movzx	ecx, BYTE PTR [ecx]
	or	edx, ecx
; Line 304
	mov	ecx, esi
	xor	ecx, edi
	mov	DWORD PTR _XX9$1$[esp+100], edx
	and	ecx, DWORD PTR _T$4$[esp+100]
	mov	edx, ebx
	xor	ecx, esi
	rol	edx, 5
	add	edx, DWORD PTR _XX8$1$[esp+100]
	add	ecx, edx
	lea	edx, DWORD PTR [ebp+1518500249]
	add	edx, ecx
	mov	ebp, DWORD PTR _T$4$[esp+100]
; Line 305
	mov	ecx, DWORD PTR _p$[esp+96]
	rol	ebp, 30					; 0000001eH
	mov	DWORD PTR _D$4$[esp+96], edx
; Line 307
	rol	edx, 5
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 24					; 00000018H
	mov	DWORD PTR _XX10$1$[esp+100], ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	add	edx, DWORD PTR _XX9$1$[esp+100]
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	DWORD PTR _XX10$1$[esp+100], ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	DWORD PTR _XX10$1$[esp+100], ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	inc	DWORD PTR _p$[esp+96]
	movzx	ecx, BYTE PTR [ecx]
	or	DWORD PTR _XX10$1$[esp+100], ecx
	mov	ecx, ebp
	xor	ecx, edi
	and	ecx, ebx
	lea	ebx, DWORD PTR [esi+1518500249]
	mov	esi, DWORD PTR _E$4$[esp+100]
	xor	ecx, edi
	add	ecx, edx
	add	ebx, ecx
; Line 308
	mov	ecx, DWORD PTR _p$[esp+96]
	rol	esi, 30					; 0000001eH
	mov	DWORD PTR _E$4$[esp+100], esi
	movzx	edx, BYTE PTR [ecx]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	shl	edx, 24					; 00000018H
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	inc	DWORD PTR _p$[esp+96]
	movzx	ecx, BYTE PTR [ecx]
	or	edx, ecx
; Line 310
	mov	ecx, ebp
	xor	ecx, esi
	mov	DWORD PTR _XX11$1$[esp+100], edx
	and	ecx, DWORD PTR _D$4$[esp+96]
	lea	esi, DWORD PTR [edi+1518500249]
; Line 311
	mov	edi, DWORD PTR _p$[esp+96]
	xor	ecx, ebp
	rol	DWORD PTR _D$4$[esp+96], 30		; 0000001eH
	mov	edx, ebx
	rol	edx, 5
; Line 313
	add	ebp, 1518500249				; 5a827999H
	add	edx, DWORD PTR _XX10$1$[esp+100]
	add	ecx, edx
	movzx	edx, BYTE PTR [edi]
	add	esi, ecx
	shl	edx, 24					; 00000018H
	movzx	ecx, BYTE PTR [edi+1]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	movzx	ecx, BYTE PTR [edi+2]
	shl	ecx, 8
	or	edx, ecx
	movzx	ecx, BYTE PTR [edi+3]
	or	edx, ecx
	add	edi, 4
	mov	DWORD PTR _XX12$1$[esp+100], edx
	mov	edx, esi
	mov	DWORD PTR _p$[esp+96], edi
	mov	edi, DWORD PTR _E$4$[esp+100]
	mov	ecx, edi
	xor	ecx, DWORD PTR _D$4$[esp+96]
	and	ecx, ebx
	rol	edx, 5
	add	edx, DWORD PTR _XX11$1$[esp+100]
	xor	ecx, edi
	add	ecx, edx
	rol	ebx, 30					; 0000001eH
	add	ebp, ecx
	mov	DWORD PTR _C$4$[esp+100], ebx
; Line 314
	mov	ecx, DWORD PTR _p$[esp+96]
	movzx	edx, BYTE PTR [ecx]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	shl	edx, 24					; 00000018H
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	inc	DWORD PTR _p$[esp+96]
	movzx	ecx, BYTE PTR [ecx]
	or	edx, ecx
	mov	DWORD PTR _XX13$1$[esp+100], edx
; Line 316
	mov	edx, ebp
	rol	edx, 5
	add	edx, DWORD PTR _XX12$1$[esp+100]
	add	edi, 1518500249				; 5a827999H
	mov	ecx, DWORD PTR _D$4$[esp+96]
	xor	ecx, ebx
	and	ecx, esi
	rol	esi, 30					; 0000001eH
	xor	ecx, DWORD PTR _D$4$[esp+96]
	add	ecx, edx
	mov	DWORD PTR _B$5$[esp+100], esi
	add	edi, ecx
; Line 317
	mov	ecx, DWORD PTR _p$[esp+96]
	movzx	edx, BYTE PTR [ecx]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	shl	edx, 24					; 00000018H
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	inc	DWORD PTR _p$[esp+96]
	movzx	ecx, BYTE PTR [ecx]
	or	edx, ecx
; Line 319
	mov	ecx, ebx
	xor	ecx, esi
	mov	DWORD PTR _XX14$4$[esp+100], edx
	and	ecx, ebp
	mov	edx, edi
	xor	ecx, ebx
	rol	edx, 5
	add	edx, DWORD PTR _XX13$1$[esp+100]
	mov	ebx, DWORD PTR _D$4$[esp+96]
	add	ecx, edx
	add	ebx, 1518500249				; 5a827999H
	rol	ebp, 30					; 0000001eH
	add	ebx, ecx
	mov	DWORD PTR _A$5$[esp+100], ebp
; Line 320
	mov	ecx, DWORD PTR _p$[esp+96]
	movzx	edx, BYTE PTR [ecx]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	shl	edx, 24					; 00000018H
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	movzx	ecx, BYTE PTR [ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	ecx, DWORD PTR _p$[esp+96]
	inc	ecx
	mov	DWORD PTR _p$[esp+96], ecx
	inc	DWORD PTR _p$[esp+96]
	movzx	ecx, BYTE PTR [ecx]
	or	edx, ecx
; Line 322
	mov	ecx, esi
	mov	DWORD PTR _XX15$3$[esp+96], edx
	xor	ecx, ebp
	and	ecx, edi
	mov	edx, ebx
	xor	ecx, esi
	rol	edx, 5
	add	edx, DWORD PTR _XX14$4$[esp+100]
	mov	esi, DWORD PTR _C$4$[esp+100]
	add	ecx, edx
	add	esi, 1518500249				; 5a827999H
	rol	edi, 30					; 0000001eH
	add	esi, ecx
	mov	DWORD PTR _T$6$[esp+100], edi
; Line 323
	mov	edx, esi
	mov	ecx, edi
	rol	edx, 5
	add	edx, DWORD PTR _XX15$3$[esp+96]
	xor	ecx, ebp
	and	ecx, ebx
	rol	ebx, 30					; 0000001eH
	xor	ecx, ebp
	mov	DWORD PTR _E$6$[esp+100], ebx
	add	ecx, edx
	mov	ebp, DWORD PTR _B$5$[esp+100]
	add	ebp, 1518500249				; 5a827999H
	add	ebp, ecx
; Line 326
	mov	ecx, DWORD PTR _XX13$1$[esp+100]
	xor	ecx, DWORD PTR _XX8$1$[esp+100]
	mov	edx, ebp
	xor	ecx, DWORD PTR _XX2$1$[esp+100]
	xor	ecx, DWORD PTR _XX0$1$[esp+100]
	mov	DWORD PTR _XX0$2$[esp+100], ecx
	mov	ecx, edi
	xor	ecx, ebx
	rol	edx, 5
	add	edx, DWORD PTR _A$5$[esp+100]
	and	ecx, esi
	xor	edi, ecx
	rol	esi, 30					; 0000001eH
; Line 327
	mov	ecx, DWORD PTR _XX14$4$[esp+100]
	add	edi, edx
	xor	ecx, DWORD PTR _XX9$1$[esp+100]
	xor	ecx, DWORD PTR _XX3$1$[esp+100]
	xor	ecx, DWORD PTR _XX1$1$[esp+100]
	mov	edx, DWORD PTR _XX0$2$[esp+100]
	add	edx, 1518500249				; 5a827999H
	mov	DWORD PTR _XX1$2$[esp+100], ecx
	add	edi, edx
	mov	ecx, ebx
	xor	ecx, esi
	mov	edx, edi
	and	ecx, ebp
	rol	edx, 5
	add	edx, DWORD PTR _T$6$[esp+100]
	xor	ebx, ecx
; Line 328
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	add	ebx, edx
	xor	ecx, DWORD PTR _XX10$1$[esp+100]
	xor	ecx, DWORD PTR _XX4$1$[esp+100]
	mov	edx, DWORD PTR _XX1$2$[esp+100]
	xor	ecx, DWORD PTR _XX2$1$[esp+100]
	add	edx, 1518500249				; 5a827999H
	add	ebx, edx
	rol	ebp, 30					; 0000001eH
	mov	DWORD PTR _C$6$[esp+100], ebp
	mov	edx, ebx
	xor	ebp, esi
	rol	edx, 5
	add	edx, DWORD PTR _E$6$[esp+100]
	and	ebp, edi
	mov	DWORD PTR _XX2$2$[esp+100], ecx
	xor	ebp, esi
	add	ebp, edx
	rol	edi, 30					; 0000001eH
	mov	edx, ecx
	mov	DWORD PTR _B$8$[esp+100], edi
; Line 329
	mov	ecx, DWORD PTR _XX11$1$[esp+100]
	add	edx, 1518500249				; 5a827999H
	xor	ecx, DWORD PTR _XX5$1$[esp+100]
	add	ebp, edx
	xor	ecx, DWORD PTR _XX3$1$[esp+100]
	mov	edx, ebp
	xor	ecx, DWORD PTR _XX0$2$[esp+100]
	mov	DWORD PTR _XX3$2$[esp+100], ecx
	mov	ecx, DWORD PTR _C$6$[esp+100]
	xor	ecx, edi
	rol	edx, 5
	add	esi, edx
	and	ecx, ebx
	xor	ecx, DWORD PTR _C$6$[esp+100]
	mov	edx, DWORD PTR _XX3$2$[esp+100]
	add	esi, ecx
; Line 331
	mov	ecx, DWORD PTR _XX12$1$[esp+100]
	add	edx, 1518500249				; 5a827999H
	add	esi, edx
	rol	ebx, 30					; 0000001eH
	mov	DWORD PTR _A$8$[esp+100], ebx
	xor	ecx, DWORD PTR _XX6$1$[esp+100]
	xor	edi, ebp
	xor	ecx, DWORD PTR _XX4$1$[esp+100]
	xor	edi, ebx
	xor	ecx, DWORD PTR _XX1$2$[esp+100]
	mov	edx, esi
	rol	edx, 5
	add	edx, DWORD PTR _C$6$[esp+100]
	mov	DWORD PTR _XX4$2$[esp+100], ecx
	add	edi, edx
	mov	edx, ecx
	rol	ebp, 30					; 0000001eH
; Line 332
	mov	ecx, DWORD PTR _XX13$1$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	xor	ecx, DWORD PTR _XX7$1$[esp+100]
	add	edi, edx
	xor	ecx, DWORD PTR _XX5$1$[esp+100]
	mov	edx, edi
	xor	ecx, DWORD PTR _XX2$2$[esp+100]
	mov	DWORD PTR _XX5$2$[esp+100], ecx
	mov	ecx, ebp
	xor	ecx, esi
	rol	edx, 5
	add	edx, DWORD PTR _B$8$[esp+100]
	xor	ebx, ecx
; Line 333
	mov	ecx, DWORD PTR _XX14$4$[esp+100]
	add	ebx, edx
	xor	ecx, DWORD PTR _XX8$1$[esp+100]
	xor	ecx, DWORD PTR _XX6$1$[esp+100]
	xor	ecx, DWORD PTR _XX3$2$[esp+100]
	mov	edx, DWORD PTR _XX5$2$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	mov	DWORD PTR _XX6$2$[esp+100], ecx
	add	ebx, edx
	mov	DWORD PTR _T$9$[esp+100], ebp
	rol	esi, 30					; 0000001eH
	mov	edx, ebx
	rol	edx, 5
	xor	ebp, esi
	add	edx, DWORD PTR _A$8$[esp+100]
	xor	ebp, edi
	add	ebp, edx
	rol	edi, 30					; 0000001eH
	mov	edx, ecx
; Line 334
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	xor	ecx, DWORD PTR _XX9$1$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	xor	ecx, DWORD PTR _XX7$1$[esp+100]
	add	ebp, edx
	xor	ecx, DWORD PTR _XX4$2$[esp+100]
	mov	edx, ebp
	mov	DWORD PTR _XX7$2$[esp+100], ecx
	mov	ecx, esi
	xor	ecx, edi
	rol	edx, 5
	add	edx, DWORD PTR _T$9$[esp+100]
	xor	ecx, ebx
	add	ecx, edx
	rol	ebx, 30					; 0000001eH
	mov	edx, DWORD PTR _XX7$2$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
; Line 335
	mov	ecx, DWORD PTR _XX10$1$[esp+100]
	xor	ecx, DWORD PTR _XX8$1$[esp+100]
	xor	ecx, DWORD PTR _XX5$2$[esp+100]
	xor	ecx, DWORD PTR _XX0$2$[esp+100]
	mov	DWORD PTR _XX8$2$[esp+100], ecx
	mov	ecx, edi
	mov	DWORD PTR _A$11$[esp+100], edx
	xor	ecx, ebx
	rol	edx, 5
	xor	ecx, ebp
	add	edx, esi
	rol	ebp, 30					; 0000001eH
	add	ecx, edx
	mov	edx, DWORD PTR _XX8$2$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
; Line 336
	mov	ecx, DWORD PTR _XX11$1$[esp+100]
	xor	ecx, DWORD PTR _XX9$1$[esp+100]
	mov	DWORD PTR _T$12$[esp+100], edx
	xor	ecx, DWORD PTR _XX6$2$[esp+100]
	xor	ecx, DWORD PTR _XX1$2$[esp+100]
	mov	DWORD PTR _XX9$2$[esp+100], ecx
	mov	ecx, ebx
	xor	ecx, ebp
	mov	esi, DWORD PTR _A$11$[esp+100]
	xor	ecx, esi
	rol	edx, 5
	add	edx, edi
	rol	esi, 30					; 0000001eH
	add	ecx, edx
; Line 337
	mov	edi, DWORD PTR _T$12$[esp+100]
	mov	edx, DWORD PTR _XX9$2$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
	mov	ecx, DWORD PTR _XX12$1$[esp+100]
	xor	ecx, DWORD PTR _XX10$1$[esp+100]
	xor	ecx, DWORD PTR _XX7$2$[esp+100]
	xor	ecx, DWORD PTR _XX2$2$[esp+100]
	mov	DWORD PTR _XX10$2$[esp+100], ecx
	mov	ecx, edi
	xor	ecx, ebp
	mov	DWORD PTR _E$12$[esp+100], edx
	xor	ecx, esi
	rol	edx, 5
	add	edx, ebx
	rol	edi, 30					; 0000001eH
	add	ecx, edx
; Line 338
	mov	ebx, DWORD PTR _E$12$[esp+100]
	mov	edx, DWORD PTR _XX10$2$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
	mov	ecx, DWORD PTR _XX13$1$[esp+100]
	xor	ecx, DWORD PTR _XX11$1$[esp+100]
	xor	ecx, DWORD PTR _XX8$2$[esp+100]
	xor	ecx, DWORD PTR _XX3$2$[esp+100]
	mov	DWORD PTR _XX11$2$[esp+100], ecx
	mov	ecx, edi
	xor	ecx, ebx
	mov	DWORD PTR _D$12$[esp+100], edx
	xor	ecx, esi
	rol	edx, 5
	add	edx, ebp
	rol	ebx, 30					; 0000001eH
	add	ecx, edx
; Line 339
	mov	ebp, DWORD PTR _D$12$[esp+100]
	mov	edx, DWORD PTR _XX11$2$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
	mov	ecx, DWORD PTR _XX14$4$[esp+100]
	xor	ecx, DWORD PTR _XX12$1$[esp+100]
	xor	ecx, DWORD PTR _XX9$2$[esp+100]
	xor	ecx, DWORD PTR _XX4$2$[esp+100]
	mov	DWORD PTR _XX12$2$[esp+100], ecx
	mov	ecx, edi
	mov	DWORD PTR _C$12$[esp+100], edx
	xor	ecx, ebx
	rol	edx, 5
	xor	ecx, ebp
	add	edx, esi
	rol	ebp, 30					; 0000001eH
	add	ecx, edx
; Line 340
	mov	esi, DWORD PTR _C$12$[esp+100]
	mov	edx, DWORD PTR _XX12$2$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	xor	ecx, DWORD PTR _XX13$1$[esp+100]
	xor	ecx, DWORD PTR _XX10$2$[esp+100]
	xor	ecx, DWORD PTR _XX5$2$[esp+100]
	mov	DWORD PTR _XX13$2$[esp+100], ecx
	mov	ecx, ebx
	mov	DWORD PTR _B$14$[esp+100], edx
	xor	ecx, ebp
	rol	edx, 5
	xor	ecx, esi
	add	edx, edi
	add	ecx, edx
	mov	edx, DWORD PTR _XX13$2$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
; Line 341
	mov	ecx, DWORD PTR _XX14$4$[esp+100]
	xor	ecx, DWORD PTR _XX11$2$[esp+100]
	xor	ecx, DWORD PTR _XX6$2$[esp+100]
	xor	ecx, DWORD PTR _XX0$2$[esp+100]
	mov	DWORD PTR _XX14$4$[esp+100], ecx
	mov	ecx, ebp
	mov	edi, DWORD PTR _B$14$[esp+100]
	mov	DWORD PTR _A$14$[esp+100], edx
	rol	edx, 5
	add	edx, ebx
	rol	esi, 30					; 0000001eH
	xor	ecx, esi
; Line 342
	mov	ebx, DWORD PTR _A$14$[esp+100]
	xor	ecx, edi
	rol	edi, 30					; 0000001eH
	add	ecx, edx
	mov	edx, DWORD PTR _XX14$4$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	xor	ecx, DWORD PTR _XX12$2$[esp+100]
	xor	ecx, DWORD PTR _XX7$2$[esp+100]
	xor	ecx, DWORD PTR _XX1$2$[esp+100]
	mov	DWORD PTR _XX15$3$[esp+96], ecx
	mov	ecx, esi
	xor	ecx, edi
	mov	DWORD PTR _T$15$[esp+100], edx
	xor	ecx, ebx
	rol	edx, 5
	add	edx, ebp
	rol	ebx, 30					; 0000001eH
	add	ecx, edx
; Line 344
	mov	ebp, DWORD PTR _T$15$[esp+100]
	mov	edx, DWORD PTR _XX15$3$[esp+96]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
	mov	ecx, DWORD PTR _XX13$2$[esp+100]
	xor	ecx, DWORD PTR _XX8$2$[esp+100]
	xor	ecx, DWORD PTR _XX2$2$[esp+100]
	xor	DWORD PTR _XX0$2$[esp+100], ecx
	mov	ecx, ebp
	xor	ecx, edi
	mov	DWORD PTR _E$15$[esp+100], edx
	xor	ecx, ebx
	rol	edx, 5
	add	edx, esi
	rol	ebp, 30					; 0000001eH
	add	ecx, edx
; Line 345
	mov	esi, DWORD PTR _E$15$[esp+100]
	mov	edx, DWORD PTR _XX0$3$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
	mov	ecx, DWORD PTR _XX14$4$[esp+100]
	xor	ecx, DWORD PTR _XX9$2$[esp+100]
	xor	ecx, DWORD PTR _XX3$2$[esp+100]
	xor	DWORD PTR _XX1$2$[esp+100], ecx
	mov	ecx, ebp
	mov	DWORD PTR _D$15$[esp+100], edx
	xor	ecx, esi
	rol	edx, 5
	xor	ecx, ebx
	add	edx, edi
	rol	esi, 30					; 0000001eH
; Line 346
	mov	edi, DWORD PTR _D$15$[esp+100]
	add	ecx, edx
	mov	edx, DWORD PTR _XX1$3$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	xor	ecx, DWORD PTR _XX10$2$[esp+100]
	xor	ecx, DWORD PTR _XX4$2$[esp+100]
	xor	DWORD PTR _XX2$2$[esp+100], ecx
	mov	ecx, ebp
	mov	DWORD PTR _C$15$[esp+100], edx
	xor	ecx, esi
	rol	edx, 5
	xor	ecx, edi
	add	edx, ebx
	add	ecx, edx
	mov	edx, DWORD PTR _XX2$3$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
; Line 347
	mov	ebx, DWORD PTR _C$15$[esp+100]
	mov	ecx, DWORD PTR _XX11$2$[esp+100]
	xor	ecx, DWORD PTR _XX5$2$[esp+100]
	xor	ecx, DWORD PTR _XX3$2$[esp+100]
	xor	ecx, DWORD PTR _XX0$3$[esp+100]
	mov	DWORD PTR _XX3$3$[esp+100], ecx
	mov	ecx, esi
	mov	DWORD PTR _B$17$[esp+100], edx
	rol	edx, 5
	add	edx, ebp
	rol	edi, 30					; 0000001eH
	xor	ecx, edi
; Line 348
	mov	ebp, DWORD PTR _XX12$2$[esp+100]
	xor	ebp, DWORD PTR _XX6$2$[esp+100]
	xor	ecx, ebx
	add	ecx, edx
	xor	ebp, DWORD PTR _XX4$2$[esp+100]
	mov	edx, DWORD PTR _XX3$3$[esp+100]
	xor	ebp, DWORD PTR _XX1$3$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	ecx, edx
	rol	ebx, 30					; 0000001eH
	mov	DWORD PTR _A$17$[esp+100], ecx
	mov	edx, ecx
	rol	edx, 5
	mov	ecx, edi
	xor	ecx, ebx
	mov	DWORD PTR _XX4$3$[esp+100], ebp
	mov	ebp, DWORD PTR _B$17$[esp+100]
	add	edx, esi
	mov	esi, DWORD PTR _XX4$3$[esp+100]
	xor	ecx, ebp
	add	edx, ecx
	rol	ebp, 30					; 0000001eH
; Line 349
	mov	ecx, DWORD PTR _XX13$2$[esp+100]
	add	esi, 1859775393				; 6ed9eba1H
	xor	ecx, DWORD PTR _XX7$2$[esp+100]
	add	edx, esi
	xor	ecx, DWORD PTR _XX5$2$[esp+100]
	xor	ecx, DWORD PTR _XX2$3$[esp+100]
	mov	esi, DWORD PTR _A$17$[esp+100]
	mov	DWORD PTR _XX5$3$[esp+100], ecx
	mov	ecx, ebx
	xor	ecx, ebp
	mov	DWORD PTR _T$18$[esp+100], edx
	xor	ecx, esi
	rol	edx, 5
	add	edx, edi
	rol	esi, 30					; 0000001eH
	add	ecx, edx
; Line 350
	mov	edi, DWORD PTR _T$18$[esp+100]
	mov	edx, DWORD PTR _XX5$3$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	mov	DWORD PTR _A$17$[esp+100], esi
	add	edx, ecx
	mov	ecx, DWORD PTR _XX14$4$[esp+100]
	xor	ecx, DWORD PTR _XX8$2$[esp+100]
	xor	ecx, DWORD PTR _XX6$2$[esp+100]
	xor	ecx, DWORD PTR _XX3$3$[esp+100]
	mov	DWORD PTR _XX6$3$[esp+100], ecx
	mov	ecx, edi
	mov	DWORD PTR _E$18$[esp+100], edx
	xor	ecx, ebp
	rol	edx, 5
	xor	ecx, esi
	add	edx, ebx
	rol	edi, 30					; 0000001eH
; Line 351
	mov	ebx, DWORD PTR _E$18$[esp+100]
	add	ecx, edx
	mov	edx, DWORD PTR _XX6$3$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	edx, ecx
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	xor	ecx, DWORD PTR _XX9$2$[esp+100]
	xor	ecx, DWORD PTR _XX7$2$[esp+100]
	xor	ecx, DWORD PTR _XX4$3$[esp+100]
	mov	DWORD PTR _D$18$[esp+100], edx
	mov	DWORD PTR _XX7$3$[esp+100], ecx
	mov	ecx, edi
	rol	edx, 5
	add	edx, ebp
	xor	ecx, ebx
	xor	ecx, esi
; Line 353
	mov	ebp, DWORD PTR _XX10$2$[esp+100]
	add	ecx, edx
	xor	ebp, DWORD PTR _XX8$2$[esp+100]
	xor	ebp, DWORD PTR _XX5$3$[esp+100]
	mov	edx, DWORD PTR _XX7$3$[esp+100]
	xor	ebp, DWORD PTR _XX0$3$[esp+100]
	add	edx, 1859775393				; 6ed9eba1H
	add	ecx, edx
	rol	ebx, 30					; 0000001eH
	mov	DWORD PTR _C$18$[esp+100], ecx
	mov	esi, ecx
	rol	esi, 5
	mov	edx, ebx
	mov	DWORD PTR _XX8$3$[esp+100], ebp
	mov	ecx, ebx
	mov	ebp, DWORD PTR _D$18$[esp+100]
	or	edx, ebp
	and	edx, edi
	and	ecx, ebp
	or	edx, ecx
	rol	ebp, 30					; 0000001eH
	add	edx, DWORD PTR _A$17$[esp+100]
	lea	ecx, DWORD PTR [esi-1894007588]
	add	edx, DWORD PTR _XX8$3$[esp+100]
; Line 354
	mov	esi, DWORD PTR _XX11$2$[esp+100]
	add	ecx, edx
	xor	esi, DWORD PTR _XX9$2$[esp+100]
	mov	edx, ebp
	xor	esi, DWORD PTR _XX6$3$[esp+100]
	or	edx, DWORD PTR _C$18$[esp+100]
	xor	esi, DWORD PTR _XX1$3$[esp+100]
	and	edx, ebx
	mov	DWORD PTR _XX9$3$[esp+100], esi
	mov	esi, ecx
	mov	DWORD PTR _B$20$[esp+100], ecx
	mov	ecx, ebp
	and	ecx, DWORD PTR _C$18$[esp+100]
	or	edx, ecx
	rol	esi, 5
	add	edx, edi
	mov	edi, DWORD PTR _C$18$[esp+100]
	add	edx, DWORD PTR _XX9$3$[esp+100]
	rol	edi, 30					; 0000001eH
	lea	ecx, DWORD PTR [esi-1894007588]
; Line 355
	mov	esi, DWORD PTR _XX12$2$[esp+100]
	xor	esi, DWORD PTR _XX10$2$[esp+100]
	add	ecx, edx
	xor	esi, DWORD PTR _XX7$3$[esp+100]
	mov	edx, edi
	or	edx, DWORD PTR _B$20$[esp+100]
	xor	esi, DWORD PTR _XX2$3$[esp+100]
	and	edx, ebp
	mov	DWORD PTR _A$20$[esp+100], ecx
	mov	DWORD PTR _XX10$3$[esp+100], esi
	mov	esi, ecx
	rol	esi, 5
	mov	ecx, edi
	and	ecx, DWORD PTR _B$20$[esp+100]
	or	edx, ecx
	add	edx, ebx
	mov	ebx, DWORD PTR _B$20$[esp+100]
	add	edx, DWORD PTR _XX10$3$[esp+100]
	lea	ecx, DWORD PTR [esi-1894007588]
	add	ecx, edx
	rol	ebx, 30					; 0000001eH
; Line 356
	mov	edx, DWORD PTR _XX13$2$[esp+100]
	mov	esi, ecx
	xor	edx, DWORD PTR _XX11$2$[esp+100]
	xor	edx, DWORD PTR _XX8$3$[esp+100]
	xor	edx, DWORD PTR _XX3$3$[esp+100]
	mov	DWORD PTR _XX11$3$[esp+100], edx
	mov	edx, ebx
	or	edx, DWORD PTR _A$20$[esp+100]
	mov	DWORD PTR _T$21$[esp+100], ecx
	and	edx, edi
	mov	ecx, ebx
	rol	esi, 5
	and	ecx, DWORD PTR _A$20$[esp+100]
	or	edx, ecx
; Line 357
	add	edi, -1894007588			; 8f1bbcdcH
	add	edx, ebp
	lea	ecx, DWORD PTR [esi-1894007588]
	add	edx, DWORD PTR _XX11$3$[esp+100]
	add	ecx, edx
	mov	ebp, DWORD PTR _A$20$[esp+100]
	mov	edx, DWORD PTR _XX14$4$[esp+100]
	mov	esi, ecx
	xor	edx, DWORD PTR _XX12$2$[esp+100]
	xor	edx, DWORD PTR _XX9$3$[esp+100]
	xor	edx, DWORD PTR _XX4$3$[esp+100]
	mov	DWORD PTR _XX12$3$[esp+100], edx
	mov	DWORD PTR _E$21$[esp+100], ecx
	mov	ecx, DWORD PTR _T$21$[esp+100]
	mov	edx, ecx
	rol	ebp, 30					; 0000001eH
	or	edx, ebp
	rol	esi, 5
	and	edx, ebx
	and	ecx, ebp
	or	ecx, edx
; Line 358
	mov	edx, DWORD PTR _XX15$3$[esp+96]
	xor	edx, DWORD PTR _XX13$2$[esp+100]
	add	ecx, edi
	xor	edx, DWORD PTR _XX10$3$[esp+100]
	xor	edx, DWORD PTR _XX5$3$[esp+100]
	add	ecx, DWORD PTR _XX12$3$[esp+100]
	mov	edi, DWORD PTR _T$21$[esp+100]
	add	ecx, esi
	mov	DWORD PTR _XX13$3$[esp+100], edx
	mov	esi, ecx
	mov	DWORD PTR _D$21$[esp+100], ecx
	rol	edi, 30					; 0000001eH
	rol	esi, 5
	mov	edx, edi
	or	edx, DWORD PTR _E$21$[esp+100]
	mov	ecx, edi
	and	ecx, DWORD PTR _E$21$[esp+100]
	and	edx, ebp
	or	edx, ecx
	add	edx, ebx
	lea	ecx, DWORD PTR [esi-1894007588]
	add	edx, DWORD PTR _XX13$3$[esp+100]
	mov	ebx, DWORD PTR _E$21$[esp+100]
	add	ecx, edx
; Line 359
	mov	edx, DWORD PTR _XX14$4$[esp+100]
	mov	esi, ecx
	xor	edx, DWORD PTR _XX11$3$[esp+100]
	xor	edx, DWORD PTR _XX6$3$[esp+100]
	xor	edx, DWORD PTR _XX0$3$[esp+100]
	mov	DWORD PTR _XX14$4$[esp+100], edx
	mov	DWORD PTR _C$21$[esp+100], ecx
	rol	ebx, 30					; 0000001eH
	mov	edx, ebx
	rol	esi, 5
	or	edx, DWORD PTR _D$21$[esp+100]
	mov	ecx, ebx
	and	ecx, DWORD PTR _D$21$[esp+100]
	and	edx, edi
	or	edx, ecx
	add	edx, ebp
	lea	ecx, DWORD PTR [esi-1894007588]
	add	edx, DWORD PTR _XX14$4$[esp+100]
	mov	ebp, DWORD PTR _D$21$[esp+100]
	add	ecx, edx
; Line 360
	mov	edx, DWORD PTR _XX15$3$[esp+96]
	mov	esi, ecx
	xor	edx, DWORD PTR _XX12$3$[esp+100]
	xor	edx, DWORD PTR _XX7$3$[esp+100]
	xor	edx, DWORD PTR _XX1$3$[esp+100]
	rol	ebp, 30					; 0000001eH
	mov	DWORD PTR _XX15$3$[esp+96], edx
	mov	edx, ebp
	or	edx, DWORD PTR _C$21$[esp+100]
	mov	DWORD PTR _B$23$[esp+100], ecx
	and	edx, ebx
	mov	ecx, ebp
	rol	esi, 5
	and	ecx, DWORD PTR _C$21$[esp+100]
	or	edx, ecx
	add	edx, edi
	lea	ecx, DWORD PTR [esi-1894007588]
	add	edx, DWORD PTR _XX15$3$[esp+96]
	add	ecx, edx
	mov	edi, DWORD PTR _C$21$[esp+100]
; Line 361
	mov	edx, DWORD PTR _XX13$3$[esp+100]
	mov	esi, ecx
	xor	edx, DWORD PTR _XX8$3$[esp+100]
	xor	edx, DWORD PTR _XX2$3$[esp+100]
	xor	edx, DWORD PTR _XX0$3$[esp+100]
	mov	DWORD PTR _XX0$4$[esp+100], edx
	mov	DWORD PTR _A$23$[esp+100], ecx
	rol	edi, 30					; 0000001eH
	mov	edx, edi
	rol	esi, 5
	or	edx, DWORD PTR _B$23$[esp+100]
	mov	ecx, edi
	and	ecx, DWORD PTR _B$23$[esp+100]
	and	edx, ebp
	or	edx, ecx
	add	edx, ebx
	lea	ecx, DWORD PTR [esi-1894007588]
	add	edx, DWORD PTR _XX0$4$[esp+100]
	add	ecx, edx
	mov	ebx, DWORD PTR _B$23$[esp+100]
; Line 362
	mov	edx, DWORD PTR _XX14$4$[esp+100]
	mov	esi, ecx
	xor	edx, DWORD PTR _XX9$3$[esp+100]
	xor	edx, DWORD PTR _XX3$3$[esp+100]
	xor	edx, DWORD PTR _XX1$3$[esp+100]
	mov	DWORD PTR _XX1$4$[esp+100], edx
	mov	DWORD PTR _T$24$[esp+100], ecx
	rol	ebx, 30					; 0000001eH
	rol	esi, 5
	mov	edx, ebx
	or	edx, DWORD PTR _A$23$[esp+100]
	mov	ecx, ebx
	and	ecx, DWORD PTR _A$23$[esp+100]
	and	edx, edi
	or	edx, ecx
; Line 363
	add	edi, -1894007588			; 8f1bbcdcH
	add	edx, ebp
	lea	ecx, DWORD PTR [esi-1894007588]
	add	edx, DWORD PTR _XX1$4$[esp+100]
	add	ecx, edx
	mov	ebp, DWORD PTR _A$23$[esp+100]
	mov	edx, DWORD PTR _XX15$3$[esp+96]
	mov	esi, ecx
	xor	edx, DWORD PTR _XX10$3$[esp+100]
	xor	edx, DWORD PTR _XX4$3$[esp+100]
	xor	edx, DWORD PTR _XX2$3$[esp+100]
	mov	DWORD PTR _XX2$4$[esp+100], edx
	mov	DWORD PTR _E$24$[esp+100], ecx
	mov	ecx, DWORD PTR _T$24$[esp+100]
	mov	edx, ecx
	rol	ebp, 30					; 0000001eH
	or	edx, ebp
	rol	esi, 5
	and	edx, ebx
	and	ecx, ebp
	or	ecx, edx
; Line 364
	mov	edx, DWORD PTR _XX11$3$[esp+100]
	xor	edx, DWORD PTR _XX5$3$[esp+100]
	add	ecx, edi
	xor	edx, DWORD PTR _XX3$3$[esp+100]
	xor	edx, DWORD PTR _XX0$4$[esp+100]
	add	ecx, DWORD PTR _XX2$4$[esp+100]
	mov	edi, DWORD PTR _T$24$[esp+100]
	add	ecx, esi
	mov	DWORD PTR _XX3$4$[esp+100], edx
	mov	esi, ecx
	rol	edi, 30					; 0000001eH
	mov	DWORD PTR _D$24$[esp+100], ecx
	mov	edx, edi
	or	edx, DWORD PTR _E$24$[esp+100]
	mov	ecx, edi
	and	ecx, DWORD PTR _E$24$[esp+100]
	and	edx, ebp
	or	edx, ecx
	rol	esi, 5
	add	edx, ebx
	add	edx, DWORD PTR _XX3$4$[esp+100]
	lea	ecx, DWORD PTR [esi-1894007588]
	add	ecx, edx
	mov	ebx, DWORD PTR _E$24$[esp+100]
; Line 365
	mov	edx, DWORD PTR _XX12$3$[esp+100]
	mov	esi, ecx
	xor	edx, DWORD PTR _XX6$3$[esp+100]
	xor	edx, DWORD PTR _XX4$3$[esp+100]
	xor	edx, DWORD PTR _XX1$4$[esp+100]
	mov	DWORD PTR _XX4$4$[esp+100], edx
	mov	DWORD PTR _C$24$[esp+100], ecx
	rol	ebx, 30					; 0000001eH
	mov	edx, ebx
	rol	esi, 5
	or	edx, DWORD PTR _D$24$[esp+100]
	mov	ecx, ebx
	and	ecx, DWORD PTR _D$24$[esp+100]
	and	edx, edi
	or	edx, ecx
	add	edx, ebp
	lea	ecx, DWORD PTR [esi-1894007588]
	add	edx, DWORD PTR _XX4$4$[esp+100]
	add	ecx, edx
	mov	ebp, DWORD PTR _D$24$[esp+100]
; Line 366
	mov	edx, DWORD PTR _XX13$3$[esp+100]
	mov	esi, ecx
	xor	edx, DWORD PTR _XX7$3$[esp+100]
	xor	edx, DWORD PTR _XX5$3$[esp+100]
	xor	edx, DWORD PTR _XX2$4$[esp+100]
	mov	DWORD PTR _XX5$4$[esp+100], edx
	mov	DWORD PTR _B$26$[esp+100], ecx
	rol	ebp, 30					; 0000001eH
	mov	edx, ebp
	rol	esi, 5
	or	edx, DWORD PTR _C$24$[esp+100]
	mov	ecx, ebp
	and	ecx, DWORD PTR _C$24$[esp+100]
	and	edx, ebx
	or	edx, ecx
	add	edx, edi
	lea	ecx, DWORD PTR [esi-1894007588]
	add	edx, DWORD PTR _XX5$4$[esp+100]
	mov	edi, DWORD PTR _C$24$[esp+100]
	add	ecx, edx
; Line 367
	mov	edx, DWORD PTR _XX14$4$[esp+100]
	mov	esi, ecx
	xor	edx, DWORD PTR _XX8$3$[esp+100]
	xor	edx, DWORD PTR _XX6$3$[esp+100]
	xor	edx, DWORD PTR _XX3$4$[esp+100]
	mov	DWORD PTR _XX6$4$[esp+100], edx
	rol	edi, 30					; 0000001eH
	mov	DWORD PTR _A$26$[esp+100], ecx
	mov	edx, edi
	or	edx, DWORD PTR _B$26$[esp+100]
	mov	ecx, edi
	and	ecx, DWORD PTR _B$26$[esp+100]
	and	edx, ebp
	or	edx, ecx
	rol	esi, 5
	mov	ecx, DWORD PTR _B$26$[esp+100]
	add	edx, ebx
	add	edx, DWORD PTR _XX6$4$[esp+100]
	add	esi, -1894007588			; 8f1bbcdcH
; Line 368
	mov	ebx, DWORD PTR _XX15$3$[esp+96]
	add	edx, esi
	xor	ebx, DWORD PTR _XX9$3$[esp+100]
	add	ebp, -1894007588			; 8f1bbcdcH
	xor	ebx, DWORD PTR _XX7$3$[esp+100]
	xor	ebx, DWORD PTR _XX4$4$[esp+100]
	mov	DWORD PTR _T$27$[esp+100], edx
	rol	ecx, 30					; 0000001eH
	mov	DWORD PTR _XX7$4$[esp+100], ebx
	mov	ebx, edx
	mov	edx, ecx
	mov	DWORD PTR _B$26$[esp+100], ecx
	or	edx, DWORD PTR _A$26$[esp+100]
	and	ecx, DWORD PTR _A$26$[esp+100]
	and	edx, edi
	or	edx, ecx
	rol	ebx, 5
	add	edx, ebp
	add	edx, DWORD PTR _XX7$4$[esp+100]
; Line 369
	add	edi, -1894007588			; 8f1bbcdcH
	mov	ebp, DWORD PTR _A$26$[esp+100]
	add	ebx, edx
	mov	edx, DWORD PTR _T$27$[esp+100]
	mov	esi, ebx
	mov	ecx, DWORD PTR _XX10$3$[esp+100]
	xor	ecx, DWORD PTR _XX8$3$[esp+100]
	xor	ecx, DWORD PTR _XX5$4$[esp+100]
	xor	ecx, DWORD PTR _XX0$4$[esp+100]
	rol	ebp, 30					; 0000001eH
	or	edx, ebp
	mov	DWORD PTR _A$26$[esp+100], ebp
	and	edx, DWORD PTR _B$26$[esp+100]
	and	ebp, DWORD PTR _T$27$[esp+100]
	or	ebp, edx
	mov	DWORD PTR _XX8$4$[esp+100], ecx
	add	ebp, edi
	rol	esi, 5
; Line 370
	mov	edi, DWORD PTR _XX11$3$[esp+100]
	add	ebp, ecx
	mov	ecx, DWORD PTR _T$27$[esp+100]
	add	ebp, esi
	xor	edi, DWORD PTR _XX9$3$[esp+100]
	mov	esi, ebp
	xor	edi, DWORD PTR _XX6$4$[esp+100]
	xor	edi, DWORD PTR _XX1$4$[esp+100]
	rol	ecx, 30					; 0000001eH
	mov	edx, ecx
	mov	DWORD PTR _T$27$[esp+100], ecx
	or	edx, ebx
	rol	esi, 5
	and	edx, DWORD PTR _A$26$[esp+100]
	and	ecx, ebx
	or	edx, ecx
	mov	DWORD PTR _XX9$4$[esp+100], edi
	add	edx, DWORD PTR _B$26$[esp+100]
; Line 371
	mov	ecx, DWORD PTR _XX12$3$[esp+100]
	add	edx, edi
	xor	ecx, DWORD PTR _XX10$3$[esp+100]
	lea	edi, DWORD PTR [esi-1894007588]
	xor	ecx, DWORD PTR _XX7$4$[esp+100]
	add	edi, edx
	xor	ecx, DWORD PTR _XX2$4$[esp+100]
	mov	esi, edi
	rol	ebx, 30					; 0000001eH
	mov	edx, ebx
	mov	DWORD PTR _E$27$[esp+100], ebx
	or	edx, ebp
	rol	esi, 5
	and	edx, DWORD PTR _T$27$[esp+100]
	and	ebx, ebp
	or	edx, ebx
	rol	ebp, 30					; 0000001eH
	add	edx, DWORD PTR _A$26$[esp+100]
	add	edx, ecx
	mov	DWORD PTR _XX10$4$[esp+100], ecx
; Line 372
	mov	ecx, DWORD PTR _XX13$3$[esp+100]
	lea	ebx, DWORD PTR [esi-1894007588]
	xor	ecx, DWORD PTR _XX11$3$[esp+100]
	add	ebx, edx
	xor	ecx, DWORD PTR _XX8$4$[esp+100]
	mov	edx, ebp
	xor	ecx, DWORD PTR _XX3$4$[esp+100]
	or	edx, edi
	and	edx, DWORD PTR _E$27$[esp+100]
	mov	esi, ebx
	rol	esi, 5
	mov	DWORD PTR _D$27$[esp+100], ebp
	and	ebp, edi
	or	edx, ebp
	rol	edi, 30					; 0000001eH
	add	edx, DWORD PTR _T$27$[esp+100]
	lea	ebp, DWORD PTR [esi-1894007588]
	mov	DWORD PTR _XX11$4$[esp+100], ecx
; Line 374
	mov	esi, DWORD PTR _XX14$4$[esp+100]
	add	edx, ecx
	xor	esi, DWORD PTR _XX12$3$[esp+100]
	add	ebp, edx
	xor	esi, DWORD PTR _XX9$4$[esp+100]
	mov	DWORD PTR _C$27$[esp+100], edi
	xor	esi, DWORD PTR _XX4$4$[esp+100]
	mov	edx, ebp
	mov	ecx, DWORD PTR _D$27$[esp+100]
	xor	ecx, edi
	rol	edx, 5
	add	edx, DWORD PTR _E$27$[esp+100]
	xor	ecx, ebx
	add	ecx, esi
	mov	DWORD PTR _XX12$4$[esp+100], esi
	rol	ebx, 30					; 0000001eH
	mov	DWORD PTR _B$29$[esp+100], ebx
	lea	esi, DWORD PTR [edx-899497514]
	add	esi, ecx
; Line 375
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	xor	ecx, DWORD PTR _XX13$3$[esp+100]
	mov	edx, esi
	xor	ecx, DWORD PTR _XX10$4$[esp+100]
	xor	ecx, DWORD PTR _XX5$4$[esp+100]
	mov	DWORD PTR _XX13$4$[esp+100], ecx
	mov	ecx, edi
	xor	ecx, ebx
	rol	edx, 5
	add	edx, DWORD PTR _D$27$[esp+100]
	xor	ecx, ebp
	add	ecx, DWORD PTR _XX13$4$[esp+100]
	rol	ebp, 30					; 0000001eH
	mov	DWORD PTR _A$29$[esp+100], ebp
	lea	edi, DWORD PTR [edx-899497514]
	add	edi, ecx
; Line 376
	mov	ecx, DWORD PTR _XX14$4$[esp+100]
	xor	ecx, DWORD PTR _XX11$4$[esp+100]
	mov	edx, edi
	xor	ecx, DWORD PTR _XX6$4$[esp+100]
	xor	ecx, DWORD PTR _XX0$4$[esp+100]
	mov	DWORD PTR _XX14$4$[esp+100], ecx
	mov	ecx, esi
	xor	ecx, ebx
	rol	edx, 5
	add	edx, DWORD PTR _C$27$[esp+100]
	xor	ecx, ebp
	add	ecx, DWORD PTR _XX14$4$[esp+100]
	rol	esi, 30					; 0000001eH
	lea	ebx, DWORD PTR [edx-899497514]
	add	ebx, ecx
; Line 377
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	xor	ecx, DWORD PTR _XX12$4$[esp+100]
	mov	edx, ebx
	xor	ecx, DWORD PTR _XX7$4$[esp+100]
	xor	ecx, DWORD PTR _XX1$4$[esp+100]
	mov	DWORD PTR _XX15$3$[esp+96], ecx
	mov	ecx, esi
	xor	ecx, edi
	rol	edx, 5
	add	edx, DWORD PTR _B$29$[esp+100]
	xor	ecx, ebp
	add	ecx, DWORD PTR _XX15$3$[esp+96]
	rol	edi, 30					; 0000001eH
	lea	ebp, DWORD PTR [edx-899497514]
	add	ebp, ecx
; Line 378
	mov	ecx, DWORD PTR _XX13$4$[esp+100]
	xor	ecx, DWORD PTR _XX8$4$[esp+100]
	mov	edx, ebp
	xor	ecx, DWORD PTR _XX2$4$[esp+100]
	xor	DWORD PTR _XX0$4$[esp+100], ecx
	mov	ecx, esi
	xor	ecx, edi
	rol	edx, 5
	add	edx, DWORD PTR _A$29$[esp+100]
	xor	ecx, ebx
	add	ecx, -899497514				; ca62c1d6H
	rol	ebx, 30					; 0000001eH
	add	ecx, DWORD PTR _XX0$4$[esp+100]
	add	edx, ecx
; Line 379
	mov	ecx, DWORD PTR _XX14$4$[esp+100]
	xor	ecx, DWORD PTR _XX9$4$[esp+100]
	xor	ecx, DWORD PTR _XX3$4$[esp+100]
	xor	DWORD PTR _XX1$4$[esp+100], ecx
	mov	ecx, edi
	mov	DWORD PTR _B$31$[esp+100], edx
	rol	edx, 5
	xor	ecx, ebx
	add	edx, DWORD PTR _XX1$4$[esp+100]
	xor	ecx, ebp
	add	esi, -899497514				; ca62c1d6H
	rol	ebp, 30					; 0000001eH
	add	ecx, esi
; Line 380
	mov	esi, DWORD PTR _B$31$[esp+100]
	add	edx, ecx
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	xor	ecx, DWORD PTR _XX10$4$[esp+100]
	xor	ecx, DWORD PTR _XX4$4$[esp+100]
	xor	DWORD PTR _XX2$4$[esp+100], ecx
	mov	ecx, ebx
	xor	ecx, ebp
	mov	DWORD PTR _A$31$[esp+100], edx
	xor	ecx, esi
	rol	edx, 5
	add	ecx, -899497514				; ca62c1d6H
	rol	esi, 30					; 0000001eH
	add	ecx, DWORD PTR _XX2$4$[esp+100]
	add	edx, edi
	add	edx, ecx
; Line 381
	mov	edi, DWORD PTR _A$31$[esp+100]
	mov	ecx, DWORD PTR _XX11$4$[esp+100]
	xor	ecx, DWORD PTR _XX5$4$[esp+100]
	xor	ecx, DWORD PTR _XX3$4$[esp+100]
	xor	ecx, DWORD PTR _XX0$4$[esp+100]
	mov	DWORD PTR _XX3$5$[esp+100], ecx
	mov	ecx, ebp
	xor	ecx, esi
	mov	DWORD PTR _T$31$[esp+100], edx
	xor	ecx, edi
	rol	edx, 5
	add	ecx, -899497514				; ca62c1d6H
	rol	edi, 30					; 0000001eH
	add	ecx, DWORD PTR _XX3$5$[esp+100]
	add	edx, ebx
	add	edx, ecx
; Line 382
	mov	ebx, DWORD PTR _T$31$[esp+100]
	mov	ecx, DWORD PTR _XX12$4$[esp+100]
	xor	ecx, DWORD PTR _XX6$4$[esp+100]
	xor	ecx, DWORD PTR _XX4$4$[esp+100]
	xor	ecx, DWORD PTR _XX1$4$[esp+100]
	mov	DWORD PTR _XX4$5$[esp+100], ecx
	mov	ecx, ebx
	mov	DWORD PTR _E$31$[esp+100], edx
	xor	ecx, esi
	rol	edx, 5
	xor	ecx, edi
	add	edx, ebp
	rol	ebx, 30					; 0000001eH
; Line 383
	mov	ebp, DWORD PTR _E$31$[esp+100]
	add	ecx, -899497514				; ca62c1d6H
	add	ecx, DWORD PTR _XX4$5$[esp+100]
	add	ecx, edx
	mov	edx, DWORD PTR _XX13$4$[esp+100]
	xor	edx, DWORD PTR _XX7$4$[esp+100]
	xor	edx, DWORD PTR _XX5$4$[esp+100]
	xor	edx, DWORD PTR _XX2$4$[esp+100]
	mov	DWORD PTR _XX5$5$[esp+100], edx
	mov	edx, ecx
	mov	DWORD PTR _D$31$[esp+100], ecx
	mov	ecx, ebx
	xor	ecx, ebp
	rol	edx, 5
	xor	ecx, edi
	rol	ebp, 30					; 0000001eH
	add	edx, esi
	add	ecx, -899497514				; ca62c1d6H
	add	ecx, DWORD PTR _XX5$5$[esp+100]
; Line 384
	mov	esi, DWORD PTR _D$31$[esp+100]
	add	ecx, edx
	mov	edx, DWORD PTR _XX14$4$[esp+100]
	xor	edx, DWORD PTR _XX8$4$[esp+100]
	xor	edx, DWORD PTR _XX6$4$[esp+100]
	xor	edx, DWORD PTR _XX3$5$[esp+100]
	mov	DWORD PTR _XX6$5$[esp+100], edx
	mov	edx, ecx
	mov	DWORD PTR _C$31$[esp+100], ecx
	mov	ecx, ebx
	rol	edx, 5
	xor	ecx, ebp
	xor	ecx, esi
	add	edx, edi
	add	ecx, -899497514				; ca62c1d6H
; Line 385
	mov	edi, DWORD PTR _C$31$[esp+100]
	add	ecx, DWORD PTR _XX6$5$[esp+100]
	add	ecx, edx
	rol	esi, 30					; 0000001eH
	mov	edx, DWORD PTR _XX15$3$[esp+96]
	xor	edx, DWORD PTR _XX9$4$[esp+100]
	xor	edx, DWORD PTR _XX7$4$[esp+100]
	xor	edx, DWORD PTR _XX4$5$[esp+100]
	mov	DWORD PTR _B$33$[esp+100], ecx
	mov	DWORD PTR _XX7$5$[esp+100], edx
	mov	edx, ecx
	mov	ecx, ebp
	rol	edx, 5
	xor	ecx, esi
	mov	DWORD PTR _D$31$[esp+100], esi
	xor	ecx, edi
; Line 386
	mov	esi, DWORD PTR _XX10$4$[esp+100]
	xor	esi, DWORD PTR _XX8$4$[esp+100]
	add	ecx, -899497514				; ca62c1d6H
	add	ecx, DWORD PTR _XX7$5$[esp+100]
	add	edx, ebx
	add	ecx, edx
	xor	esi, DWORD PTR _XX5$5$[esp+100]
	xor	esi, DWORD PTR _XX0$4$[esp+100]
	mov	edx, ecx
	mov	DWORD PTR _A$33$[esp+100], ecx
	mov	ecx, DWORD PTR _D$31$[esp+100]
	rol	edi, 30					; 0000001eH
	xor	ecx, edi
; Line 388
	mov	ebx, DWORD PTR _XX12$4$[esp+100]
	xor	ebx, DWORD PTR _XX10$4$[esp+100]
	mov	DWORD PTR _C$31$[esp+100], edi
	mov	edi, DWORD PTR _B$33$[esp+100]
	xor	ecx, edi
	add	ecx, -899497514				; ca62c1d6H
	xor	ebx, DWORD PTR _XX7$5$[esp+100]
	add	ecx, esi
	xor	ebx, DWORD PTR _XX2$4$[esp+100]
	rol	edx, 5
	add	ebp, edx
	rol	edi, 30					; 0000001eH
	add	ebp, ecx
	mov	DWORD PTR _B$33$[esp+100], edi
	mov	ecx, DWORD PTR _C$31$[esp+100]
	mov	edx, ebp
	xor	ecx, DWORD PTR _B$33$[esp+100]
	xor	ecx, DWORD PTR _A$33$[esp+100]
	mov	edi, DWORD PTR _XX11$4$[esp+100]
	add	ecx, -899497514				; ca62c1d6H
	xor	edi, DWORD PTR _XX9$4$[esp+100]
	xor	edi, DWORD PTR _XX6$5$[esp+100]
	xor	edi, DWORD PTR _XX1$4$[esp+100]
	rol	DWORD PTR _A$33$[esp+100], 30		; 0000001eH
	add	ecx, edi
	rol	edx, 5
	add	edx, DWORD PTR _D$31$[esp+100]
	add	ecx, edx
	mov	DWORD PTR _XX10$5$[esp+100], ebx
	mov	edx, ecx
	mov	DWORD PTR _E$33$[esp+100], ecx
	mov	ecx, ebp
	rol	edx, 5
	xor	ecx, DWORD PTR _B$33$[esp+100]
	add	edx, -899497514				; ca62c1d6H
	add	edx, DWORD PTR _C$31$[esp+100]
	xor	ecx, DWORD PTR _A$33$[esp+100]
	rol	ebp, 30					; 0000001eH
	add	ecx, ebx
	mov	DWORD PTR _T$33$[esp+100], ebp
	add	ecx, edx
; Line 389
	mov	ebp, DWORD PTR _XX13$4$[esp+100]
	mov	edx, ecx
	xor	ebp, DWORD PTR _XX11$4$[esp+100]
	xor	ebp, esi
	mov	DWORD PTR _D$33$[esp+100], ecx
	xor	ebp, DWORD PTR _XX3$5$[esp+100]
	mov	ecx, DWORD PTR _T$33$[esp+100]
	rol	edx, 5
	add	edx, DWORD PTR _B$33$[esp+100]
	mov	esi, DWORD PTR _E$33$[esp+100]
	xor	ecx, esi
	xor	ecx, DWORD PTR _A$33$[esp+100]
; Line 390
	mov	ebx, DWORD PTR _XX14$4$[esp+100]
	add	ecx, -899497514				; ca62c1d6H
	xor	ebx, DWORD PTR _XX12$4$[esp+100]
	add	ecx, ebp
	add	ecx, edx
	rol	esi, 30					; 0000001eH
	mov	DWORD PTR _E$33$[esp+100], esi
	mov	edx, ecx
	xor	esi, DWORD PTR _T$33$[esp+100]
	xor	ebx, edi
	mov	edi, DWORD PTR _D$33$[esp+100]
	xor	esi, edi
	xor	ebx, DWORD PTR _XX4$5$[esp+100]
	add	esi, -899497514				; ca62c1d6H
	rol	edx, 5
	add	esi, ebx
	add	edx, DWORD PTR _A$33$[esp+100]
	add	esi, edx
	mov	DWORD PTR _C$33$[esp+100], ecx
; Line 391
	mov	edx, DWORD PTR _XX15$3$[esp+96]
	xor	edx, DWORD PTR _XX13$4$[esp+100]
	xor	edx, DWORD PTR _XX10$5$[esp+100]
	xor	edx, DWORD PTR _XX5$5$[esp+100]
	rol	edi, 30					; 0000001eH
	add	edx, -899497514				; ca62c1d6H
	mov	DWORD PTR _D$33$[esp+100], edi
	xor	edi, DWORD PTR _E$33$[esp+100]
	xor	edi, ecx
	mov	DWORD PTR _B$35$[esp+100], esi
	add	edi, edx
	rol	esi, 5
	add	esi, DWORD PTR _T$33$[esp+100]
	add	edi, esi
	mov	esi, ecx
; Line 392
	mov	ecx, DWORD PTR _XX14$4$[esp+100]
	mov	edx, edi
	xor	ecx, ebp
	rol	esi, 30					; 0000001eH
	xor	ecx, DWORD PTR _XX6$5$[esp+100]
	xor	ecx, DWORD PTR _XX0$4$[esp+100]
	mov	ebp, DWORD PTR _B$35$[esp+100]
	mov	DWORD PTR _XX14$4$[esp+100], ecx
	mov	ecx, DWORD PTR _D$33$[esp+100]
	xor	ecx, esi
	mov	DWORD PTR _C$33$[esp+100], esi
	mov	esi, DWORD PTR _XX14$4$[esp+100]
	xor	ecx, ebp
	add	esi, -899497514				; ca62c1d6H
	rol	edx, 5
	add	edx, DWORD PTR _E$33$[esp+100]
	add	esi, ecx
; Line 393
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	add	esi, edx
; Line 396
	add	DWORD PTR [eax+4], esi
	xor	ecx, ebx
	xor	ecx, DWORD PTR _XX7$5$[esp+100]
	mov	edx, esi
	xor	ecx, DWORD PTR _XX1$4$[esp+100]
	mov	ebx, DWORD PTR _C$33$[esp+100]
	mov	DWORD PTR _XX15$3$[esp+96], ecx
	mov	ecx, ebx
	rol	ebp, 30					; 0000001eH
	xor	ecx, ebp
	rol	edx, 5
	add	edx, DWORD PTR _D$33$[esp+100]
	xor	ecx, edi
	add	DWORD PTR _XX15$3$[esp+96], ecx
	mov	ecx, DWORD PTR _XX15$3$[esp+96]
	add	ecx, -899497514				; ca62c1d6H
	rol	edi, 30					; 0000001eH
; Line 397
	add	edi, DWORD PTR [eax+8]
	add	ecx, edx
	add	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR [eax]
; Line 398
	add	DWORD PTR [eax+12], ebp
	mov	DWORD PTR _A$1$[esp+96], edx
	mov	DWORD PTR [eax+8], edi
; Line 399
	add	DWORD PTR [eax+16], ebx
; Line 401
	sub	DWORD PTR _num$[esp+96], 1
	je	SHORT $LN11@sha_block_
; Line 406
	mov	esi, edi
; Line 410
	jmp	$LL2@sha_block_
$LN11@sha_block_:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 411
	add	esp, 84					; 00000054H
	ret	0
_sha_block_data_order ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA_Transform
_TEXT	SEGMENT
_c$ = 8							; size = 4
_data$ = 12						; size = 4
_SHA_Transform PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\tmp32dll\md32_common.h
; Line 358
	push	1
	push	DWORD PTR _data$[esp]
	push	DWORD PTR _c$[esp+4]
	call	_sha_block_data_order
	add	esp, 12					; 0000000cH
; Line 359
	ret	0
_SHA_Transform ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA_Final
_TEXT	SEGMENT
_md$ = 8						; size = 4
_c$ = 12						; size = 4
_SHA_Final PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\tmp32dll\md32_common.h
; Line 362
	push	ebx
; Line 363
	mov	ebx, DWORD PTR _c$[esp]
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebx+28]
; Line 364
	mov	esi, DWORD PTR [ebx+92]
; Line 366
	mov	BYTE PTR [esi+edi], 128			; 00000080H
; Line 367
	inc	esi
; Line 369
	cmp	esi, 56					; 00000038H
	jbe	SHORT $LN5@SHA_Final
; Line 370
	mov	eax, 64					; 00000040H
	sub	eax, esi
	push	eax
	lea	eax, DWORD PTR [esi+edi]
	push	0
	push	eax
	call	_memset
; Line 372
	push	1
	push	edi
	push	ebx
	xor	esi, esi
	call	_sha_block_data_order
	add	esp, 24					; 00000018H
$LN5@SHA_Final:
; Line 374
	mov	eax, 56					; 00000038H
	sub	eax, esi
	push	eax
	lea	eax, DWORD PTR [esi+edi]
	push	0
	push	eax
	call	_memset
; Line 378
	movzx	eax, BYTE PTR [ebx+27]
	mov	BYTE PTR [edi+56], al
	movzx	eax, BYTE PTR [ebx+26]
	mov	BYTE PTR [edi+57], al
	movzx	eax, BYTE PTR [ebx+25]
	mov	BYTE PTR [edi+58], al
	movzx	eax, BYTE PTR [ebx+24]
	mov	BYTE PTR [edi+59], al
; Line 379
	movzx	eax, BYTE PTR [ebx+23]
	mov	BYTE PTR [edi+60], al
	movzx	eax, BYTE PTR [ebx+22]
	mov	BYTE PTR [edi+61], al
	movzx	eax, BYTE PTR [ebx+21]
; Line 385
	push	1
	mov	BYTE PTR [edi+62], al
	movzx	eax, BYTE PTR [ebx+20]
	push	edi
	push	ebx
	mov	BYTE PTR [edi+63], al
	call	_sha_block_data_order
; Line 387
	push	64					; 00000040H
	push	0
	push	edi
	mov	DWORD PTR [ebx+92], 0
	call	_memset
; Line 392
	mov	ecx, DWORD PTR [ebx]
	add	esp, 36					; 00000024H
	mov	edx, DWORD PTR _md$[esp+8]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+1], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+2], al
	mov	BYTE PTR [edx+3], cl
	mov	ecx, DWORD PTR [ebx+4]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+4], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+5], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+6], al
	mov	BYTE PTR [edx+7], cl
	mov	ecx, DWORD PTR [ebx+8]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+8], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+9], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+10], al
	mov	BYTE PTR [edx+11], cl
	mov	ecx, DWORD PTR [ebx+12]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+12], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+13], al
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [edx+14], al
	mov	BYTE PTR [edx+15], cl
	mov	ecx, DWORD PTR [ebx+16]
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [edx+16], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [edx+17], al
	mov	eax, ecx
	pop	edi
	shr	eax, 8
	mov	BYTE PTR [edx+18], al
; Line 395
	mov	eax, 1
	pop	esi
	mov	BYTE PTR [edx+19], cl
	pop	ebx
; Line 396
	ret	0
_SHA_Final ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA_Update
_TEXT	SEGMENT
_c$ = 8							; size = 4
_data_$ = 12						; size = 4
_len$ = 16						; size = 4
_SHA_Update PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\tmp32dll\md32_common.h
; Line 301
	push	ebp
; Line 302
	mov	ebp, DWORD PTR _data_$[esp]
	push	edi
; Line 307
	mov	edi, DWORD PTR _len$[esp+4]
	test	edi, edi
	je	$LN13@SHA_Update
; Line 310
	push	ebx
	mov	ebx, DWORD PTR _c$[esp+8]
	mov	eax, DWORD PTR [ebx+20]
	lea	ecx, DWORD PTR [eax+edi*8]
; Line 315
	cmp	ecx, eax
	jae	SHORT $LN3@SHA_Update
; Line 316
	inc	DWORD PTR [ebx+24]
$LN3@SHA_Update:
; Line 317
	mov	eax, edi
; Line 319
	mov	DWORD PTR [ebx+20], ecx
; Line 321
	mov	ecx, DWORD PTR [ebx+92]
	shr	eax, 29					; 0000001dH
	add	DWORD PTR [ebx+24], eax
	push	esi
; Line 322
	test	ecx, ecx
	je	SHORT $LN6@SHA_Update
; Line 323
	lea	edx, DWORD PTR [ebx+28]
; Line 325
	cmp	edi, 64					; 00000040H
	jae	SHORT $LN7@SHA_Update
	lea	eax, DWORD PTR [ecx+edi]
	cmp	eax, 64					; 00000040H
	jae	SHORT $LN7@SHA_Update
; Line 334
	push	edi
	lea	eax, DWORD PTR [edx+ecx]
	push	ebp
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 353
	mov	eax, 1
	add	DWORD PTR [ebx+92], edi
	pop	esi
	pop	ebx
	pop	edi
	pop	ebp
; Line 354
	ret	0
$LN7@SHA_Update:
; Line 326
	mov	esi, 64					; 00000040H
	lea	eax, DWORD PTR [edx+ecx]
	sub	esi, ecx
	push	esi
	push	ebp
	push	eax
	call	_memcpy
; Line 327
	push	1
	lea	eax, DWORD PTR [ebx+28]
	push	eax
	push	ebx
	call	_sha_block_data_order
; Line 332
	push	64					; 00000040H
	lea	eax, DWORD PTR [ebx+28]
	mov	DWORD PTR [ebx+92], 0
	push	0
	push	eax
	add	ebp, esi
	sub	edi, esi
	call	_memset
	add	esp, 36					; 00000024H
$LN6@SHA_Update:
; Line 340
	mov	esi, edi
	shr	esi, 6
; Line 341
	test	esi, esi
	je	SHORT $LN8@SHA_Update
; Line 342
	push	esi
	push	ebp
	push	ebx
	call	_sha_block_data_order
; Line 343
	shl	esi, 6
	add	esp, 12					; 0000000cH
; Line 344
	add	ebp, esi
; Line 345
	sub	edi, esi
$LN8@SHA_Update:
; Line 348
	test	edi, edi
	je	SHORT $LN9@SHA_Update
; Line 351
	push	edi
	lea	eax, DWORD PTR [ebx+28]
	mov	DWORD PTR [ebx+92], edi
	push	ebp
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN9@SHA_Update:
	pop	esi
	pop	ebx
$LN13@SHA_Update:
	pop	edi
; Line 353
	mov	eax, 1
	pop	ebp
; Line 354
	ret	0
_SHA_Update ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SHA_Init
_TEXT	SEGMENT
_c$ = 8							; size = 4
_SHA_Init PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\sha\sha_locl.h
; Line 130
	push	esi
; Line 131
	mov	esi, DWORD PTR _c$[esp]
	push	96					; 00000060H
	push	0
	push	esi
	call	_memset
	add	esp, 12					; 0000000cH
; Line 132
	mov	DWORD PTR [esi], 1732584193		; 67452301H
; Line 133
	mov	DWORD PTR [esi+4], -271733879		; efcdab89H
; Line 137
	mov	eax, 1
	mov	DWORD PTR [esi+8], -1732584194		; 98badcfeH
	mov	DWORD PTR [esi+12], 271733878		; 10325476H
	mov	DWORD PTR [esi+16], -1009589776		; c3d2e1f0H
	pop	esi
; Line 138
	ret	0
_SHA_Init ENDP
_TEXT	ENDS
END

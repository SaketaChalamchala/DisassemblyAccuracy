; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_obj.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?hex@?1??X509_NAME_oneline@@9@9 DB '0123456789ABCDEF', 00H ; `X509_NAME_oneline'::`2'::hex
CONST	ENDS
PUBLIC	_X509_NAME_oneline
PUBLIC	??_C@_0N@MJCHLFGM@NO?5X509_NAME?$AA@		; `string'
PUBLIC	??_C@_0BJ@GNDHDHAM@?4?2crypto?2x509?2x509_obj?4c?$AA@ ; `string'
EXTRN	__imp__strncpy:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BUF_MEM_new:PROC
EXTRN	_BUF_MEM_free:PROC
EXTRN	_BUF_MEM_grow:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_i2t_ASN1_OBJECT:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BJ@GNDHDHAM@?4?2crypto?2x509?2x509_obj?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@GNDHDHAM@?4?2crypto?2x509?2x509_obj?4c?$AA@ DB '.\crypto\x509\x'
	DB	'509_obj.c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MJCHLFGM@NO?5X509_NAME?$AA@
CONST	SEGMENT
??_C@_0N@MJCHLFGM@NO?5X509_NAME?$AA@ DB 'NO X509_NAME', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_oneline
_TEXT	SEGMENT
_b$1$ = -132						; size = 4
_i$1$ = -128						; size = 4
_l$1$ = -124						; size = 4
_s$1$ = -120						; size = 4
_p$2$ = -116						; size = 4
_len$GSCopy$1$ = -112					; size = 4
_ne$1$ = -108						; size = 4
_a$GSCopy$1$ = -104					; size = 4
_gs_doit$ = -100					; size = 16
_tmp_buf$ = -84						; size = 80
__$ArrayPad$ = -4					; size = 4
_a$ = 8							; size = 4
_buf$ = 12						; size = 4
_len$ = 16						; size = 4
_X509_NAME_oneline PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\x509\x509_obj.c
; Line 74
	mov	eax, 132				; 00000084H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+132], eax
	push	ebx
	mov	ebx, DWORD PTR _buf$[esp+132]
	push	ebp
	mov	ebp, DWORD PTR _len$[esp+136]
	push	esi
; Line 81
	xor	esi, esi
	mov	DWORD PTR _p$2$[esp+144], ebx
	mov	DWORD PTR _b$1$[esp+144], esi
	push	edi
	mov	edi, DWORD PTR _a$[esp+144]
	mov	DWORD PTR _a$GSCopy$1$[esp+148], edi
; Line 89
	test	ebx, ebx
	jne	SHORT $LN14@X509_NAME_
; Line 90
	call	_BUF_MEM_new
	mov	esi, eax
	mov	DWORD PTR _b$1$[esp+148], esi
	test	esi, esi
	je	$err$75
; Line 92
	push	200					; 000000c8H
	push	esi
	call	_BUF_MEM_grow
	add	esp, 8
	test	eax, eax
	je	$err$75
; Line 94
	mov	eax, DWORD PTR [esi+4]
; Line 95
	mov	ebp, 200				; 000000c8H
	mov	BYTE PTR [eax], bl
	jmp	SHORT $LN18@X509_NAME_
$LN14@X509_NAME_:
; Line 96
	test	ebp, ebp
	je	$LN73@X509_NAME_
$LN18@X509_NAME_:
; Line 99
	test	edi, edi
	jne	SHORT $LN19@X509_NAME_
; Line 100
	test	esi, esi
	je	SHORT $LN20@X509_NAME_
; Line 101
	mov	ebx, DWORD PTR [esi+4]
; Line 102
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN20@X509_NAME_:
; Line 104
	push	ebp
	push	OFFSET ??_C@_0N@MJCHLFGM@NO?5X509_NAME?$AA@
	push	ebx
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
; Line 105
	mov	BYTE PTR [ebx+ebp-1], 0
; Line 106
	jmp	$LN44@X509_NAME_
$LN19@X509_NAME_:
; Line 111
	push	DWORD PTR [edi]
	dec	ebp
	mov	DWORD PTR _l$1$[esp+152], 0
	xor	ebx, ebx
	mov	DWORD PTR _len$GSCopy$1$[esp+152], ebp
	mov	DWORD PTR _i$1$[esp+152], ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN53@X509_NAME_
$LL4@X509_NAME_:
; Line 112
	push	ebx
	push	DWORD PTR [edi]
	call	_sk_value
	mov	ebp, eax
	mov	DWORD PTR _ne$1$[esp+156], ebp
; Line 113
	push	DWORD PTR [ebp]
	call	_OBJ_obj2nid
	add	esp, 12					; 0000000cH
; Line 114
	test	eax, eax
	je	SHORT $LN22@X509_NAME_
	push	eax
	call	_OBJ_nid2sn
	add	esp, 4
	mov	DWORD PTR _s$1$[esp+148], eax
	test	eax, eax
	jne	SHORT $LN21@X509_NAME_
$LN22@X509_NAME_:
; Line 115
	push	DWORD PTR [ebp]
	lea	eax, DWORD PTR _tmp_buf$[esp+152]
	push	80					; 00000050H
	push	eax
	call	_i2t_ASN1_OBJECT
; Line 116
	lea	eax, DWORD PTR _tmp_buf$[esp+160]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _s$1$[esp+148], eax
$LN21@X509_NAME_:
; Line 118
	mov	ebx, eax
	lea	ecx, DWORD PTR [ebx+1]
$LL67@X509_NAME_:
	mov	al, BYTE PTR [ebx]
	inc	ebx
	test	al, al
	jne	SHORT $LL67@X509_NAME_
; Line 121
	mov	eax, DWORD PTR [ebp+4]
	sub	ebx, ecx
	mov	edi, DWORD PTR [eax]
; Line 122
	cmp	edi, 1048576				; 00100000H
	jg	$LN50@X509_NAME_
; Line 140
	cmp	DWORD PTR [eax+4], 27			; 0000001bH
	mov	ebp, DWORD PTR [eax+8]
	jne	SHORT $LN24@X509_NAME_
	mov	eax, edi
	and	eax, -2147483645			; 80000003H
	jns	SHORT $LN68@X509_NAME_
	dec	eax
	or	eax, -4					; fffffffcH
	inc	eax
$LN68@X509_NAME_:
	jne	SHORT $LN24@X509_NAME_
; Line 141
	xor	edx, edx
	xor	esi, esi
	xor	eax, eax
	mov	DWORD PTR _gs_doit$[esp+156], edx
; Line 142
	xor	ecx, ecx
	mov	DWORD PTR _gs_doit$[esp+152], esi
	mov	DWORD PTR _gs_doit$[esp+148], eax
	test	edi, edi
	jle	SHORT $LN6@X509_NAME_
	npad	5
$LL7@X509_NAME_:
; Line 143
	cmp	BYTE PTR [ecx+ebp], dl
	je	SHORT $LN5@X509_NAME_
; Line 144
	mov	eax, ecx
	and	eax, 3
	mov	DWORD PTR _gs_doit$[esp+eax*4+148], 1
$LN5@X509_NAME_:
; Line 142
	inc	ecx
	cmp	ecx, edi
	jl	SHORT $LL7@X509_NAME_
	mov	edx, DWORD PTR _gs_doit$[esp+156]
	mov	esi, DWORD PTR _gs_doit$[esp+152]
	mov	eax, DWORD PTR _gs_doit$[esp+148]
$LN6@X509_NAME_:
; Line 146
	or	eax, esi
; Line 147
	mov	DWORD PTR _gs_doit$[esp+160], 1
	or	eax, edx
	jne	SHORT $LN69@X509_NAME_
; Line 149
	mov	DWORD PTR _gs_doit$[esp+156], 0
	mov	DWORD PTR _gs_doit$[esp+152], 0
	mov	DWORD PTR _gs_doit$[esp+148], 0
; Line 152
	jmp	SHORT $LN25@X509_NAME_
$LN24@X509_NAME_:
; Line 153
	mov	DWORD PTR _gs_doit$[esp+160], 1
$LN69@X509_NAME_:
	mov	DWORD PTR _gs_doit$[esp+148], 1
	mov	DWORD PTR _gs_doit$[esp+152], 1
	mov	DWORD PTR _gs_doit$[esp+156], 1
$LN25@X509_NAME_:
; Line 155
	xor	ecx, ecx
	xor	edx, edx
	test	edi, edi
	jle	SHORT $LN9@X509_NAME_
$LL10@X509_NAME_:
; Line 156
	mov	eax, ecx
	and	eax, 3
	cmp	DWORD PTR _gs_doit$[esp+eax*4+148], 0
	je	SHORT $LN8@X509_NAME_
; Line 160
	mov	al, BYTE PTR [ecx+ebp]
	inc	edx
	cmp	al, 32					; 00000020H
	jb	SHORT $LN31@X509_NAME_
	cmp	al, 126					; 0000007eH
	jbe	SHORT $LN8@X509_NAME_
$LN31@X509_NAME_:
; Line 161
	add	edx, 3
$LN8@X509_NAME_:
; Line 155
	inc	ecx
	cmp	ecx, edi
	jl	SHORT $LL10@X509_NAME_
$LN9@X509_NAME_:
; Line 169
	mov	ecx, DWORD PTR _l$1$[esp+148]
; Line 170
	lea	eax, DWORD PTR [edx+ebx]
	mov	ebp, ecx
	add	ecx, 2
	add	ecx, eax
	mov	DWORD PTR _l$1$[esp+148], ecx
; Line 171
	cmp	ecx, 1048576				; 00100000H
	jg	$LN51@X509_NAME_
; Line 175
	mov	esi, DWORD PTR _b$1$[esp+148]
	test	esi, esi
	je	SHORT $LN33@X509_NAME_
; Line 176
	lea	eax, DWORD PTR [ecx+1]
	push	eax
	push	esi
	call	_BUF_MEM_grow
	add	esp, 8
	test	eax, eax
	je	$err$75
; Line 178
	mov	esi, DWORD PTR [esi+4]
	jmp	SHORT $LN70@X509_NAME_
$LN33@X509_NAME_:
; Line 179
	cmp	ecx, DWORD PTR _len$GSCopy$1$[esp+148]
	jg	$LN42@X509_NAME_
; Line 182
	mov	esi, DWORD PTR _p$2$[esp+148]
$LN70@X509_NAME_:
	add	esi, ebp
; Line 184
	push	ebx
	push	DWORD PTR _s$1$[esp+152]
	mov	BYTE PTR [esi], 47			; 0000002fH
	inc	esi
	push	esi
	call	_memcpy
; Line 189
	mov	eax, DWORD PTR _ne$1$[esp+160]
	add	esi, ebx
	add	esp, 12					; 0000000cH
; Line 192
	xor	ecx, ecx
	mov	BYTE PTR [esi], 61			; 0000003dH
	inc	esi
	mov	eax, DWORD PTR [eax+4]
	mov	ebx, DWORD PTR [eax+8]
	test	edi, edi
	jle	SHORT $LN12@X509_NAME_
	npad	5
$LL13@X509_NAME_:
; Line 193
	mov	eax, ecx
	and	eax, 3
	cmp	DWORD PTR _gs_doit$[esp+eax*4+148], 0
	je	SHORT $LN11@X509_NAME_
; Line 196
	movzx	edx, BYTE PTR [ecx+ebx]
; Line 197
	lea	eax, DWORD PTR [edx-32]
	cmp	eax, 94					; 0000005eH
	ja	SHORT $LN41@X509_NAME_
; Line 203
	mov	BYTE PTR [esi], dl
	inc	esi
	jmp	SHORT $LN11@X509_NAME_
$LN41@X509_NAME_:
; Line 200
	mov	eax, edx
	mov	WORD PTR [esi], 30812			; 0000785cH
	sar	eax, 4
; Line 201
	and	edx, 15					; 0000000fH
	and	eax, 15					; 0000000fH
	movzx	eax, BYTE PTR ?hex@?1??X509_NAME_oneline@@9@9[eax]
	mov	BYTE PTR [esi+2], al
	movzx	eax, BYTE PTR ?hex@?1??X509_NAME_oneline@@9@9[edx]
	mov	BYTE PTR [esi+3], al
	add	esi, 4
$LN11@X509_NAME_:
; Line 192
	inc	ecx
	cmp	ecx, edi
	jl	SHORT $LL13@X509_NAME_
$LN12@X509_NAME_:
; Line 111
	mov	edi, DWORD PTR _a$GSCopy$1$[esp+148]
	mov	ebx, DWORD PTR _i$1$[esp+148]
; Line 215
	mov	BYTE PTR [esi], 0
	inc	ebx
	mov	DWORD PTR _i$1$[esp+148], ebx
	push	DWORD PTR [edi]
	call	_sk_num
	add	esp, 4
	cmp	ebx, eax
	jl	$LL4@X509_NAME_
$LN53@X509_NAME_:
; Line 217
	mov	eax, DWORD PTR _b$1$[esp+148]
	test	eax, eax
	je	SHORT $LN42@X509_NAME_
; Line 218
	mov	ebx, DWORD PTR [eax+4]
; Line 219
	push	eax
	call	_CRYPTO_free
	add	esp, 4
; Line 220
	jmp	SHORT $LN43@X509_NAME_
$err$75:
; Line 226
	push	226					; 000000e2H
	push	OFFSET ??_C@_0BJ@GNDHDHAM@?4?2crypto?2x509?2x509_obj?4c?$AA@
	push	65					; 00000041H
	jmp	SHORT $LN71@X509_NAME_
$LN51@X509_NAME_:
; Line 172
	push	172					; 000000acH
; Line 173
	jmp	SHORT $LN72@X509_NAME_
$LN50@X509_NAME_:
; Line 123
	push	123					; 0000007bH
$LN72@X509_NAME_:
	push	OFFSET ??_C@_0BJ@GNDHDHAM@?4?2crypto?2x509?2x509_obj?4c?$AA@
	push	134					; 00000086H
$LN71@X509_NAME_:
	push	116					; 00000074H
	push	11					; 0000000bH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$end$76:
; Line 228
	mov	eax, DWORD PTR _b$1$[esp+148]
	push	eax
	call	_BUF_MEM_free
	add	esp, 4
$LN73@X509_NAME_:
; Line 229
	xor	eax, eax
	jmp	SHORT $LN1@X509_NAME_
$LN42@X509_NAME_:
	mov	ebx, DWORD PTR _p$2$[esp+148]
$LN43@X509_NAME_:
; Line 222
	cmp	DWORD PTR _i$1$[esp+148], 0
	jne	SHORT $LN44@X509_NAME_
; Line 223
	mov	BYTE PTR [ebx], 0
$LN44@X509_NAME_:
; Line 224
	mov	eax, ebx
$LN1@X509_NAME_:
; Line 230
	mov	ecx, DWORD PTR __$ArrayPad$[esp+148]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 132				; 00000084H
	ret	0
_X509_NAME_oneline ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_EC_version
CONST	SEGMENT
_EC_version DB	'EC part of OpenSSL 1.0.2h  3 May 2016', 00H
CONST	ENDS
PUBLIC	_EC_GROUP_new
PUBLIC	_EC_GROUP_free
PUBLIC	_EC_GROUP_clear_free
PUBLIC	_EC_GROUP_copy
PUBLIC	_EC_GROUP_dup
PUBLIC	_EC_GROUP_method_of
PUBLIC	_EC_METHOD_get_field_type
PUBLIC	_EC_GROUP_set_generator
PUBLIC	_EC_GROUP_get0_generator
PUBLIC	_EC_GROUP_get_mont_data
PUBLIC	_EC_GROUP_get_order
PUBLIC	_EC_GROUP_get_cofactor
PUBLIC	_EC_GROUP_set_curve_name
PUBLIC	_EC_GROUP_get_curve_name
PUBLIC	_EC_GROUP_set_asn1_flag
PUBLIC	_EC_GROUP_get_asn1_flag
PUBLIC	_EC_GROUP_set_point_conversion_form
PUBLIC	_EC_GROUP_get_point_conversion_form
PUBLIC	_EC_GROUP_get0_seed
PUBLIC	_EC_GROUP_get_seed_len
PUBLIC	_EC_GROUP_set_seed
PUBLIC	_EC_GROUP_set_curve_GFp
PUBLIC	_EC_GROUP_get_curve_GFp
PUBLIC	_EC_GROUP_set_curve_GF2m
PUBLIC	_EC_GROUP_get_curve_GF2m
PUBLIC	_EC_GROUP_get_degree
PUBLIC	_EC_GROUP_check_discriminant
PUBLIC	_EC_GROUP_cmp
PUBLIC	_EC_POINT_new
PUBLIC	_EC_POINT_free
PUBLIC	_EC_POINT_clear_free
PUBLIC	_EC_POINT_copy
PUBLIC	_EC_POINT_dup
PUBLIC	_EC_POINT_method_of
PUBLIC	_EC_POINT_set_to_infinity
PUBLIC	_EC_POINT_set_Jprojective_coordinates_GFp
PUBLIC	_EC_POINT_get_Jprojective_coordinates_GFp
PUBLIC	_EC_POINT_set_affine_coordinates_GFp
PUBLIC	_EC_POINT_get_affine_coordinates_GFp
PUBLIC	_EC_POINT_set_affine_coordinates_GF2m
PUBLIC	_EC_POINT_get_affine_coordinates_GF2m
PUBLIC	_EC_POINT_add
PUBLIC	_EC_POINT_dbl
PUBLIC	_EC_POINT_invert
PUBLIC	_EC_POINT_is_at_infinity
PUBLIC	_EC_POINT_is_on_curve
PUBLIC	_EC_POINT_cmp
PUBLIC	_EC_POINT_make_affine
PUBLIC	_EC_POINTs_make_affine
PUBLIC	_EC_POINTs_mul
PUBLIC	_EC_POINT_mul
PUBLIC	_EC_GROUP_precompute_mult
PUBLIC	_EC_GROUP_have_precompute_mult
PUBLIC	_EC_EX_DATA_set_data
PUBLIC	_EC_EX_DATA_get_data
PUBLIC	_EC_EX_DATA_free_data
PUBLIC	_EC_EX_DATA_clear_free_data
PUBLIC	_EC_EX_DATA_free_all_data
PUBLIC	_EC_EX_DATA_clear_free_all_data
PUBLIC	_ec_precompute_mont_data
PUBLIC	??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_CTX_start:PROC
EXTRN	_BN_CTX_get:PROC
EXTRN	_BN_CTX_end:PROC
EXTRN	_BN_init:PROC
EXTRN	_BN_clear_free:PROC
EXTRN	_BN_copy:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_MONT_CTX_new:PROC
EXTRN	_BN_MONT_CTX_free:PROC
EXTRN	_BN_MONT_CTX_set:PROC
EXTRN	_BN_MONT_CTX_copy:PROC
EXTRN	_ec_wNAF_mul:PROC
EXTRN	_ec_wNAF_precompute_mult:PROC
EXTRN	_ec_wNAF_have_precompute_mult:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
CONST	SEGMENT
??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@ DB '.\crypto\ec\ec_lib.'
	DB	'c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_precompute_mont_data
_TEXT	SEGMENT
_group$ = 8						; size = 4
_ec_precompute_mont_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 1102
	push	ebx
	push	esi
	push	edi
; Line 1103
	call	_BN_CTX_new
; Line 1106
	mov	esi, DWORD PTR _group$[esp+8]
	xor	edi, edi
	mov	ebx, eax
	test	DWORD PTR [esi+52], -2147483648		; 80000000H
	je	SHORT $err$12
; Line 1109
	mov	eax, DWORD PTR [esi+172]
	test	eax, eax
	je	SHORT $LN3@ec_precomp
; Line 1110
	push	eax
	call	_BN_MONT_CTX_free
	add	esp, 4
; Line 1111
	mov	DWORD PTR [esi+172], edi
$LN3@ec_precomp:
; Line 1114
	test	ebx, ebx
	je	SHORT $LN9@ec_precomp
; Line 1117
	call	_BN_MONT_CTX_new
	mov	DWORD PTR [esi+172], eax
; Line 1118
	test	eax, eax
	je	SHORT $err$12
; Line 1121
	push	ebx
	lea	ecx, DWORD PTR [esi+8]
	push	ecx
	push	eax
	call	_BN_MONT_CTX_set
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@ec_precomp
; Line 1122
	push	DWORD PTR [esi+172]
	call	_BN_MONT_CTX_free
	add	esp, 4
; Line 1123
	mov	DWORD PTR [esi+172], edi
; Line 1124
	jmp	SHORT $err$12
$LN6@ec_precomp:
; Line 1127
	mov	edi, 1
$err$12:
; Line 1131
	test	ebx, ebx
	je	SHORT $LN9@ec_precomp
; Line 1132
	push	ebx
	call	_BN_CTX_free
	add	esp, 4
$LN9@ec_precomp:
; Line 1133
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 1134
	ret	0
_ec_precompute_mont_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_EX_DATA_clear_free_all_data
_TEXT	SEGMENT
_ex_data$ = 8						; size = 4
_EC_EX_DATA_clear_free_all_data PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 682
	push	ebx
; Line 685
	mov	ebx, DWORD PTR _ex_data$[esp]
	test	ebx, ebx
	je	SHORT $LN1@EC_EX_DATA
; Line 688
	push	esi
	mov	esi, DWORD PTR [ebx]
; Line 689
	test	esi, esi
	je	SHORT $LN3@EC_EX_DATA
	push	edi
$LL2@EC_EX_DATA:
; Line 692
	push	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+16]
	mov	edi, DWORD PTR [esi]
	call	eax
; Line 693
	push	esi
	call	_CRYPTO_free
	add	esp, 8
; Line 695
	mov	esi, edi
	test	edi, edi
	jne	SHORT $LL2@EC_EX_DATA
	pop	edi
$LN3@EC_EX_DATA:
; Line 697
	mov	DWORD PTR [ebx], 0
	pop	esi
$LN1@EC_EX_DATA:
	pop	ebx
; Line 698
	ret	0
_EC_EX_DATA_clear_free_all_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_EX_DATA_free_all_data
_TEXT	SEGMENT
_ex_data$ = 8						; size = 4
_EC_EX_DATA_free_all_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 662
	push	ebx
; Line 665
	mov	ebx, DWORD PTR _ex_data$[esp]
	test	ebx, ebx
	je	SHORT $LN1@EC_EX_DATA
; Line 668
	push	esi
	mov	esi, DWORD PTR [ebx]
; Line 669
	test	esi, esi
	je	SHORT $LN3@EC_EX_DATA
	push	edi
$LL2@EC_EX_DATA:
; Line 672
	push	DWORD PTR [esi+4]
	mov	eax, DWORD PTR [esi+12]
	mov	edi, DWORD PTR [esi]
	call	eax
; Line 673
	push	esi
	call	_CRYPTO_free
	add	esp, 8
; Line 675
	mov	esi, edi
	test	edi, edi
	jne	SHORT $LL2@EC_EX_DATA
	pop	edi
$LN3@EC_EX_DATA:
; Line 677
	mov	DWORD PTR [ebx], 0
	pop	esi
$LN1@EC_EX_DATA:
	pop	ebx
; Line 678
	ret	0
_EC_EX_DATA_free_all_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_EX_DATA_clear_free_data
_TEXT	SEGMENT
_ex_data$ = 8						; size = 4
_dup_func$ = 12						; size = 4
_free_func$ = 16					; size = 4
_clear_free_func$ = 20					; size = 4
_EC_EX_DATA_clear_free_data PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 640
	push	edi
; Line 643
	mov	edi, DWORD PTR _ex_data$[esp]
	test	edi, edi
	je	SHORT $LN13@EC_EX_DATA
; Line 646
	cmp	DWORD PTR [edi], 0
	je	SHORT $LN13@EC_EX_DATA
	mov	ecx, DWORD PTR _clear_free_func$[esp]
	mov	edx, DWORD PTR _free_func$[esp]
	push	esi
	mov	esi, DWORD PTR _dup_func$[esp+4]
	npad	5
$LL4@EC_EX_DATA:
; Line 648
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+8], esi
	jne	SHORT $LN2@EC_EX_DATA
	cmp	DWORD PTR [eax+12], edx
	jne	SHORT $LN2@EC_EX_DATA
	cmp	DWORD PTR [eax+16], ecx
	je	SHORT $LN9@EC_EX_DATA
$LN2@EC_EX_DATA:
; Line 646
	mov	edi, eax
	cmp	DWORD PTR [edi], 0
	jne	SHORT $LL4@EC_EX_DATA
	pop	esi
	pop	edi
; Line 658
	ret	0
$LN9@EC_EX_DATA:
; Line 649
	mov	esi, DWORD PTR [eax]
; Line 651
	push	DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax+16]
	call	eax
; Line 652
	push	DWORD PTR [edi]
	call	_CRYPTO_free
	add	esp, 8
; Line 654
	mov	DWORD PTR [edi], esi
	pop	esi
$LN13@EC_EX_DATA:
	pop	edi
; Line 658
	ret	0
_EC_EX_DATA_clear_free_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_EX_DATA_free_data
_TEXT	SEGMENT
_ex_data$ = 8						; size = 4
_dup_func$ = 12						; size = 4
_free_func$ = 16					; size = 4
_clear_free_func$ = 20					; size = 4
_EC_EX_DATA_free_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 615
	push	edi
; Line 618
	mov	edi, DWORD PTR _ex_data$[esp]
	test	edi, edi
	je	SHORT $LN13@EC_EX_DATA
; Line 621
	cmp	DWORD PTR [edi], 0
	je	SHORT $LN13@EC_EX_DATA
	mov	ecx, DWORD PTR _clear_free_func$[esp]
	mov	edx, DWORD PTR _free_func$[esp]
	push	esi
	mov	esi, DWORD PTR _dup_func$[esp+4]
	npad	5
$LL4@EC_EX_DATA:
; Line 623
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+8], esi
	jne	SHORT $LN2@EC_EX_DATA
	cmp	DWORD PTR [eax+12], edx
	jne	SHORT $LN2@EC_EX_DATA
	cmp	DWORD PTR [eax+16], ecx
	je	SHORT $LN9@EC_EX_DATA
$LN2@EC_EX_DATA:
; Line 621
	mov	edi, eax
	cmp	DWORD PTR [edi], 0
	jne	SHORT $LL4@EC_EX_DATA
	pop	esi
	pop	edi
; Line 633
	ret	0
$LN9@EC_EX_DATA:
; Line 624
	mov	esi, DWORD PTR [eax]
; Line 626
	push	DWORD PTR [eax+4]
	mov	eax, DWORD PTR [eax+12]
	call	eax
; Line 627
	push	DWORD PTR [edi]
	call	_CRYPTO_free
	add	esp, 8
; Line 629
	mov	DWORD PTR [edi], esi
	pop	esi
$LN13@EC_EX_DATA:
	pop	edi
; Line 633
	ret	0
_EC_EX_DATA_free_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_EX_DATA_get_data
_TEXT	SEGMENT
_ex_data$ = 8						; size = 4
_dup_func$ = 12						; size = 4
_free_func$ = 16					; size = 4
_clear_free_func$ = 20					; size = 4
_EC_EX_DATA_get_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 601
	mov	eax, DWORD PTR _ex_data$[esp-4]
	push	esi
	test	eax, eax
	je	SHORT $LN12@EC_EX_DATA
	mov	ecx, DWORD PTR _clear_free_func$[esp]
	mov	edx, DWORD PTR _free_func$[esp]
	mov	esi, DWORD PTR _dup_func$[esp]
$LL4@EC_EX_DATA:
; Line 603
	cmp	DWORD PTR [eax+8], esi
	jne	SHORT $LN2@EC_EX_DATA
	cmp	DWORD PTR [eax+12], edx
	jne	SHORT $LN2@EC_EX_DATA
	cmp	DWORD PTR [eax+16], ecx
	je	SHORT $LN8@EC_EX_DATA
$LN2@EC_EX_DATA:
; Line 601
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	jne	SHORT $LL4@EC_EX_DATA
$LN12@EC_EX_DATA:
; Line 607
	xor	eax, eax
	pop	esi
; Line 608
	ret	0
$LN8@EC_EX_DATA:
; Line 604
	mov	eax, DWORD PTR [eax+4]
	pop	esi
; Line 608
	ret	0
_EC_EX_DATA_get_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_EX_DATA_set_data
_TEXT	SEGMENT
_ex_data$ = 8						; size = 4
_data$ = 12						; size = 4
_dup_func$ = 16						; size = 4
_free_func$ = 20					; size = 4
_clear_free_func$ = 24					; size = 4
_EC_EX_DATA_set_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 560
	push	ebp
; Line 563
	mov	ebp, DWORD PTR _ex_data$[esp]
	test	ebp, ebp
	jne	SHORT $LN5@EC_EX_DATA
; Line 564
	xor	eax, eax
	pop	ebp
; Line 591
	ret	0
$LN5@EC_EX_DATA:
; Line 566
	mov	eax, DWORD PTR [ebp]
	push	ebx
	mov	ebx, DWORD PTR _dup_func$[esp+4]
	push	esi
	mov	esi, DWORD PTR _clear_free_func$[esp+8]
	push	edi
	mov	edi, DWORD PTR _free_func$[esp+12]
	test	eax, eax
	je	SHORT $LN15@EC_EX_DATA
$LL4@EC_EX_DATA:
; Line 568
	cmp	DWORD PTR [eax+8], ebx
	jne	SHORT $LN2@EC_EX_DATA
	cmp	DWORD PTR [eax+12], edi
	jne	SHORT $LN2@EC_EX_DATA
	cmp	DWORD PTR [eax+16], esi
	je	SHORT $LN11@EC_EX_DATA
$LN2@EC_EX_DATA:
; Line 566
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	jne	SHORT $LL4@EC_EX_DATA
$LN15@EC_EX_DATA:
; Line 574
	cmp	DWORD PTR _data$[esp+12], 0
	je	SHORT $LN19@EC_EX_DATA
; Line 578
	push	578					; 00000242H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	20					; 00000014H
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 579
	test	ecx, ecx
	je	SHORT $LN20@EC_EX_DATA
; Line 582
	mov	eax, DWORD PTR _data$[esp+12]
	mov	DWORD PTR [ecx+4], eax
; Line 583
	mov	DWORD PTR [ecx+8], ebx
; Line 584
	mov	DWORD PTR [ecx+12], edi
; Line 585
	mov	DWORD PTR [ecx+16], esi
; Line 587
	mov	eax, DWORD PTR [ebp]
	mov	DWORD PTR [ecx], eax
; Line 588
	mov	DWORD PTR [ebp], ecx
$LN19@EC_EX_DATA:
; Line 590
	pop	edi
	pop	esi
	pop	ebx
	mov	eax, 1
	pop	ebp
; Line 591
	ret	0
$LN11@EC_EX_DATA:
; Line 569
	push	569					; 00000239H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	108					; 0000006cH
	push	211					; 000000d3H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN20@EC_EX_DATA:
; Line 570
	pop	edi
	pop	esi
	pop	ebx
	xor	eax, eax
	pop	ebp
; Line 591
	ret	0
_EC_EX_DATA_set_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_have_precompute_mult
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_have_precompute_mult PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 1086
	mov	eax, DWORD PTR _group$[esp-4]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+120], 0
	jne	SHORT $LN2@EC_GROUP_h
; Line 1088
	mov	DWORD PTR _group$[esp-4], eax
	jmp	_ec_wNAF_have_precompute_mult
$LN2@EC_GROUP_h:
; Line 1090
	mov	ecx, DWORD PTR [ecx+128]
	test	ecx, ecx
	je	SHORT $LN3@EC_GROUP_h
; Line 1091
	mov	DWORD PTR _group$[esp-4], eax
	jmp	ecx
$LN3@EC_GROUP_h:
; Line 1093
	xor	eax, eax
; Line 1095
	ret	0
_EC_GROUP_have_precompute_mult ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_precompute_mult
_TEXT	SEGMENT
_group$ = 8						; size = 4
_ctx$ = 12						; size = 4
_EC_GROUP_precompute_mult PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 1074
	mov	eax, DWORD PTR _group$[esp-4]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+120], 0
	jne	SHORT $LN2@EC_GROUP_p
; Line 1076
	mov	DWORD PTR _group$[esp-4], eax
	jmp	_ec_wNAF_precompute_mult
$LN2@EC_GROUP_p:
; Line 1078
	mov	ecx, DWORD PTR [ecx+124]
	test	ecx, ecx
	je	SHORT $LN3@EC_GROUP_p
; Line 1079
	mov	DWORD PTR _group$[esp-4], eax
	jmp	ecx
$LN3@EC_GROUP_p:
; Line 1081
	mov	eax, 1
; Line 1082
	ret	0
_EC_GROUP_precompute_mult ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_mul
_TEXT	SEGMENT
_points$ = -4						; size = 4
_group$ = 8						; size = 4
_r$ = 12						; size = 4
_g_scalar$ = 16						; size = 4
_scalars$ = 20						; size = 4
_point$ = 20						; size = 4
_p_scalar$ = 24						; size = 4
_ctx$ = 28						; size = 4
_EC_POINT_mul PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 1058
	mov	eax, 4
	call	__chkstk
; Line 1064
	mov	eax, DWORD PTR _point$[esp]
; Line 1065
	mov	ecx, DWORD PTR _p_scalar$[esp]
	mov	DWORD PTR _points$[esp+4], eax
	mov	DWORD PTR _scalars$[esp], ecx
; Line 1067
	test	eax, eax
	je	SHORT $LN3@EC_POINT_m
	test	ecx, ecx
	je	SHORT $LN3@EC_POINT_m
	mov	ecx, 1
	jmp	SHORT $LN4@EC_POINT_m
$LN3@EC_POINT_m:
	xor	ecx, ecx
$LN4@EC_POINT_m:
; Line 1049
	mov	edx, DWORD PTR _group$[esp]
	mov	eax, DWORD PTR [edx]
	mov	eax, DWORD PTR [eax+120]
	test	eax, eax
	jne	SHORT $LN6@EC_POINT_m
; Line 1051
	push	DWORD PTR _ctx$[esp]
	lea	eax, DWORD PTR _scalars$[esp+4]
	push	eax
	lea	eax, DWORD PTR _points$[esp+12]
	push	eax
	push	ecx
	push	DWORD PTR _g_scalar$[esp+16]
	push	DWORD PTR _r$[esp+20]
	push	edx
	call	_ec_wNAF_mul
	add	esp, 28					; 0000001cH
; Line 1070
	pop	ecx
	ret	0
$LN6@EC_POINT_m:
	push	esi
; Line 1053
	push	DWORD PTR _ctx$[esp+4]
	lea	esi, DWORD PTR _scalars$[esp+8]
	push	esi
	lea	esi, DWORD PTR _points$[esp+16]
	push	esi
	push	ecx
	push	DWORD PTR _g_scalar$[esp+20]
	push	DWORD PTR _r$[esp+24]
	push	edx
	call	eax
	add	esp, 28					; 0000001cH
	pop	esi
; Line 1070
	pop	ecx
	ret	0
_EC_POINT_mul ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINTs_mul
_TEXT	SEGMENT
_group$ = 8						; size = 4
_r$ = 12						; size = 4
_scalar$ = 16						; size = 4
_num$ = 20						; size = 4
_points$ = 24						; size = 4
_scalars$ = 28						; size = 4
_ctx$ = 32						; size = 4
_EC_POINTs_mul PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 1049
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+120]
	test	eax, eax
	jne	SHORT $LN2@EC_POINTs_
; Line 1051
	mov	DWORD PTR _group$[esp-4], ecx
	jmp	_ec_wNAF_mul
$LN2@EC_POINTs_:
; Line 1053
	mov	DWORD PTR _group$[esp-4], ecx
	jmp	eax
_EC_POINTs_mul ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINTs_make_affine
_TEXT	SEGMENT
_group$ = 8						; size = 4
_num$ = 12						; size = 4
_points$ = 16						; size = 4
_ctx$ = 20						; size = 4
_EC_POINTs_make_affine PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 1023
	push	ebx
; Line 1026
	mov	ebx, DWORD PTR _group$[esp]
	push	ebp
	push	esi
	mov	esi, DWORD PTR [ebx]
	mov	ebp, DWORD PTR [esi+116]
	test	ebp, ebp
	jne	SHORT $LN5@EC_POINTs_
; Line 1027
	push	1027					; 00000403H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	136					; 00000088H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1028
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
; Line 1037
	ret	0
$LN5@EC_POINTs_:
; Line 1030
	mov	edx, DWORD PTR _num$[esp+8]
	xor	ecx, ecx
	push	edi
	mov	edi, DWORD PTR _points$[esp+12]
	test	edx, edx
	je	SHORT $LN3@EC_POINTs_
$LL4@EC_POINTs_:
; Line 1031
	mov	eax, DWORD PTR [edi+ecx*4]
	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN9@EC_POINTs_
; Line 1030
	inc	ecx
	cmp	ecx, edx
	jb	SHORT $LL4@EC_POINTs_
$LN3@EC_POINTs_:
; Line 1036
	push	DWORD PTR _ctx$[esp+12]
	push	edi
	push	edx
	push	ebx
	call	ebp
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1037
	ret	0
$LN9@EC_POINTs_:
; Line 1032
	push	1032					; 00000408H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	136					; 00000088H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1033
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1037
	ret	0
_EC_POINTs_make_affine ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_make_affine
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_ctx$ = 16						; size = 4
_EC_POINT_make_affine PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 1010
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+112]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_m
; Line 1011
	push	1011					; 000003f3H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	120					; 00000078H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1012
	xor	eax, eax
; Line 1019
	ret	0
$LN2@EC_POINT_m:
	push	esi
; Line 1014
	mov	esi, DWORD PTR _point$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_m
; Line 1015
	push	1015					; 000003f7H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	120					; 00000078H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1016
	xor	eax, eax
	pop	esi
; Line 1019
	ret	0
$LN3@EC_POINT_m:
; Line 1018
	push	DWORD PTR _ctx$[esp]
	push	esi
	push	ecx
	call	edx
	add	esp, 12					; 0000000cH
	pop	esi
; Line 1019
	ret	0
_EC_POINT_make_affine ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_cmp
_TEXT	SEGMENT
_group$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_ctx$ = 20						; size = 4
_EC_POINT_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 997
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+108]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_c
; Line 998
	push	998					; 000003e6H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	113					; 00000071H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 999
	or	eax, -1
; Line 1006
	ret	0
$LN2@EC_POINT_c:
	push	esi
	push	edi
; Line 1001
	mov	edi, DWORD PTR _a$[esp+4]
	mov	esi, DWORD PTR [edi]
	cmp	eax, esi
	jne	SHORT $LN4@EC_POINT_c
	mov	eax, DWORD PTR _b$[esp+4]
	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN4@EC_POINT_c
; Line 1005
	push	DWORD PTR _ctx$[esp+4]
	push	eax
	push	edi
	push	ecx
	call	edx
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
; Line 1006
	ret	0
$LN4@EC_POINT_c:
; Line 1002
	push	1002					; 000003eaH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	113					; 00000071H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 1003
	or	eax, -1
	pop	edi
	pop	esi
; Line 1006
	ret	0
_EC_POINT_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_is_on_curve
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_ctx$ = 16						; size = 4
_EC_POINT_is_on_curve PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 983
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+104]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_i
; Line 984
	push	984					; 000003d8H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	119					; 00000077H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 985
	xor	eax, eax
; Line 992
	ret	0
$LN2@EC_POINT_i:
	push	esi
; Line 987
	mov	esi, DWORD PTR _point$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_i
; Line 988
	push	988					; 000003dcH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	119					; 00000077H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 989
	xor	eax, eax
	pop	esi
; Line 992
	ret	0
$LN3@EC_POINT_i:
; Line 991
	push	DWORD PTR _ctx$[esp]
	push	esi
	push	ecx
	call	edx
	add	esp, 12					; 0000000cH
	pop	esi
; Line 992
	ret	0
_EC_POINT_is_on_curve ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_is_at_infinity
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_EC_POINT_is_at_infinity PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 961
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+100]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_i
; Line 962
	push	963					; 000003c3H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	118					; 00000076H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 964
	xor	eax, eax
; Line 971
	ret	0
$LN2@EC_POINT_i:
	push	esi
; Line 966
	mov	esi, DWORD PTR _point$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_i
; Line 967
	push	967					; 000003c7H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	118					; 00000076H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 968
	xor	eax, eax
	pop	esi
; Line 971
	ret	0
$LN3@EC_POINT_i:
; Line 970
	push	esi
	push	ecx
	call	edx
	add	esp, 8
	pop	esi
; Line 971
	ret	0
_EC_POINT_is_at_infinity ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_invert
_TEXT	SEGMENT
_group$ = 8						; size = 4
_a$ = 12						; size = 4
_ctx$ = 16						; size = 4
_EC_POINT_invert PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 948
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+96]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_i
; Line 949
	push	949					; 000003b5H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	210					; 000000d2H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 950
	xor	eax, eax
; Line 957
	ret	0
$LN2@EC_POINT_i:
	push	esi
; Line 952
	mov	esi, DWORD PTR _a$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_i
; Line 953
	push	953					; 000003b9H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	210					; 000000d2H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 954
	xor	eax, eax
	pop	esi
; Line 957
	ret	0
$LN3@EC_POINT_i:
; Line 956
	push	DWORD PTR _ctx$[esp]
	push	esi
	push	ecx
	call	edx
	add	esp, 12					; 0000000cH
	pop	esi
; Line 957
	ret	0
_EC_POINT_invert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_dbl
_TEXT	SEGMENT
_group$ = 8						; size = 4
_r$ = 12						; size = 4
_a$ = 16						; size = 4
_ctx$ = 20						; size = 4
_EC_POINT_dbl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 935
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+92]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_d
; Line 936
	push	936					; 000003a8H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	115					; 00000073H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 937
	xor	eax, eax
; Line 944
	ret	0
$LN2@EC_POINT_d:
	push	esi
	push	edi
; Line 939
	mov	edi, DWORD PTR _r$[esp+4]
	mov	esi, DWORD PTR [edi]
	cmp	eax, esi
	jne	SHORT $LN4@EC_POINT_d
	mov	eax, DWORD PTR _a$[esp+4]
	cmp	esi, DWORD PTR [eax]
	jne	SHORT $LN4@EC_POINT_d
; Line 943
	push	DWORD PTR _ctx$[esp+4]
	push	eax
	push	edi
	push	ecx
	call	edx
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
; Line 944
	ret	0
$LN4@EC_POINT_d:
; Line 940
	push	940					; 000003acH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	115					; 00000073H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 941
	xor	eax, eax
	pop	edi
	pop	esi
; Line 944
	ret	0
_EC_POINT_dbl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_add
_TEXT	SEGMENT
_group$ = 8						; size = 4
_r$ = 12						; size = 4
_a$ = 16						; size = 4
_b$ = 20						; size = 4
_ctx$ = 24						; size = 4
_EC_POINT_add PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 920
	mov	edx, DWORD PTR _group$[esp-4]
	push	esi
	mov	eax, DWORD PTR [edx]
	mov	esi, DWORD PTR [eax+88]
	test	esi, esi
	jne	SHORT $LN2@EC_POINT_a
; Line 921
	push	921					; 00000399H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	112					; 00000070H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 922
	xor	eax, eax
	pop	esi
; Line 930
	ret	0
$LN2@EC_POINT_a:
	push	ebx
	push	edi
; Line 925
	mov	edi, DWORD PTR _r$[esp+8]
	mov	ecx, DWORD PTR [edi]
	cmp	eax, ecx
	jne	SHORT $LN4@EC_POINT_a
	mov	ebx, DWORD PTR _a$[esp+8]
	mov	eax, DWORD PTR [ebx]
	cmp	ecx, eax
	jne	SHORT $LN4@EC_POINT_a
	mov	ecx, DWORD PTR _b$[esp+8]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN4@EC_POINT_a
; Line 929
	push	DWORD PTR _ctx$[esp+8]
	push	ecx
	push	ebx
	push	edi
	push	edx
	call	esi
	add	esp, 20					; 00000014H
	pop	edi
	pop	ebx
	pop	esi
; Line 930
	ret	0
$LN4@EC_POINT_a:
; Line 926
	push	926					; 0000039eH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	112					; 00000070H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 927
	xor	eax, eax
	pop	edi
	pop	ebx
	pop	esi
; Line 930
	ret	0
_EC_POINT_add ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_get_affine_coordinates_GF2m
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_ctx$ = 24						; size = 4
_EC_POINT_get_affine_coordinates_GF2m PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 903
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+72]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_g
; Line 904
	push	905					; 00000389H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	183					; 000000b7H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 906
	xor	eax, eax
; Line 914
	ret	0
$LN2@EC_POINT_g:
	push	esi
; Line 908
	mov	esi, DWORD PTR _point$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_g
; Line 909
	push	910					; 0000038eH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	183					; 000000b7H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 911
	xor	eax, eax
	pop	esi
; Line 914
	ret	0
$LN3@EC_POINT_g:
; Line 913
	push	DWORD PTR _ctx$[esp]
	push	DWORD PTR _y$[esp+4]
	push	DWORD PTR _x$[esp+8]
	push	esi
	push	ecx
	call	edx
	add	esp, 20					; 00000014H
	pop	esi
; Line 914
	ret	0
_EC_POINT_get_affine_coordinates_GF2m ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_set_affine_coordinates_GF2m
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_ctx$ = 24						; size = 4
_EC_POINT_set_affine_coordinates_GF2m PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 867
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+68]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_s
; Line 868
	push	869					; 00000365H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	185					; 000000b9H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 870
	xor	eax, eax
; Line 878
	ret	0
$LN2@EC_POINT_s:
	push	esi
; Line 872
	mov	esi, DWORD PTR _point$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_s
; Line 873
	push	874					; 0000036aH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	185					; 000000b9H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 875
	xor	eax, eax
	pop	esi
; Line 878
	ret	0
$LN3@EC_POINT_s:
; Line 877
	push	DWORD PTR _ctx$[esp]
	push	DWORD PTR _y$[esp+4]
	push	DWORD PTR _x$[esp+8]
	push	esi
	push	ecx
	call	edx
	add	esp, 20					; 00000014H
	pop	esi
; Line 878
	ret	0
_EC_POINT_set_affine_coordinates_GF2m ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_get_affine_coordinates_GFp
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_ctx$ = 24						; size = 4
_EC_POINT_get_affine_coordinates_GFp PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 885
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+72]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_g
; Line 886
	push	887					; 00000377H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	116					; 00000074H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 888
	xor	eax, eax
; Line 896
	ret	0
$LN2@EC_POINT_g:
	push	esi
; Line 890
	mov	esi, DWORD PTR _point$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_g
; Line 891
	push	892					; 0000037cH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	116					; 00000074H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 893
	xor	eax, eax
	pop	esi
; Line 896
	ret	0
$LN3@EC_POINT_g:
; Line 895
	push	DWORD PTR _ctx$[esp]
	push	DWORD PTR _y$[esp+4]
	push	DWORD PTR _x$[esp+8]
	push	esi
	push	ecx
	call	edx
	add	esp, 20					; 00000014H
	pop	esi
; Line 896
	ret	0
_EC_POINT_get_affine_coordinates_GFp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_set_affine_coordinates_GFp
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_ctx$ = 24						; size = 4
_EC_POINT_set_affine_coordinates_GFp PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 849
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+68]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_s
; Line 850
	push	851					; 00000353H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	124					; 0000007cH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 852
	xor	eax, eax
; Line 860
	ret	0
$LN2@EC_POINT_s:
	push	esi
; Line 854
	mov	esi, DWORD PTR _point$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_s
; Line 855
	push	856					; 00000358H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	124					; 0000007cH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 857
	xor	eax, eax
	pop	esi
; Line 860
	ret	0
$LN3@EC_POINT_s:
; Line 859
	push	DWORD PTR _ctx$[esp]
	push	DWORD PTR _y$[esp+4]
	push	DWORD PTR _x$[esp+8]
	push	esi
	push	ecx
	call	edx
	add	esp, 20					; 00000014H
	pop	esi
; Line 860
	ret	0
_EC_POINT_set_affine_coordinates_GFp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_get_Jprojective_coordinates_GFp
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_z$ = 24						; size = 4
_ctx$ = 28						; size = 4
_EC_POINT_get_Jprojective_coordinates_GFp PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 831
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+64]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_g
; Line 832
	push	833					; 00000341H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	117					; 00000075H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 834
	xor	eax, eax
; Line 843
	ret	0
$LN2@EC_POINT_g:
	push	esi
; Line 836
	mov	esi, DWORD PTR _point$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_g
; Line 837
	push	838					; 00000346H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	117					; 00000075H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 839
	xor	eax, eax
	pop	esi
; Line 843
	ret	0
$LN3@EC_POINT_g:
; Line 841
	push	DWORD PTR _ctx$[esp]
	push	DWORD PTR _z$[esp+4]
	push	DWORD PTR _y$[esp+8]
	push	DWORD PTR _x$[esp+12]
	push	esi
	push	ecx
	call	edx
	add	esp, 24					; 00000018H
	pop	esi
; Line 843
	ret	0
_EC_POINT_get_Jprojective_coordinates_GFp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_set_Jprojective_coordinates_GFp
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_z$ = 24						; size = 4
_ctx$ = 28						; size = 4
_EC_POINT_set_Jprojective_coordinates_GFp PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 812
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+60]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_s
; Line 813
	push	814					; 0000032eH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	126					; 0000007eH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 815
	xor	eax, eax
; Line 824
	ret	0
$LN2@EC_POINT_s:
	push	esi
; Line 817
	mov	esi, DWORD PTR _point$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_s
; Line 818
	push	819					; 00000333H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	126					; 0000007eH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 820
	xor	eax, eax
	pop	esi
; Line 824
	ret	0
$LN3@EC_POINT_s:
; Line 822
	push	DWORD PTR _ctx$[esp]
	push	DWORD PTR _z$[esp+4]
	push	DWORD PTR _y$[esp+8]
	push	DWORD PTR _x$[esp+12]
	push	esi
	push	ecx
	call	edx
	add	esp, 24					; 00000018H
	pop	esi
; Line 824
	ret	0
_EC_POINT_set_Jprojective_coordinates_GFp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_set_to_infinity
_TEXT	SEGMENT
_group$ = 8						; size = 4
_point$ = 12						; size = 4
_EC_POINT_set_to_infinity PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 795
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+56]
	test	edx, edx
	jne	SHORT $LN2@EC_POINT_s
; Line 796
	push	797					; 0000031dH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	127					; 0000007fH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 798
	xor	eax, eax
; Line 805
	ret	0
$LN2@EC_POINT_s:
	push	esi
; Line 800
	mov	esi, DWORD PTR _point$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $LN3@EC_POINT_s
; Line 801
	push	801					; 00000321H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	127					; 0000007fH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 802
	xor	eax, eax
	pop	esi
; Line 805
	ret	0
$LN3@EC_POINT_s:
; Line 804
	push	esi
	push	ecx
	call	edx
	add	esp, 8
	pop	esi
; Line 805
	ret	0
_EC_POINT_set_to_infinity ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_method_of
_TEXT	SEGMENT
_point$ = 8						; size = 4
_EC_POINT_method_of PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 790
	mov	eax, DWORD PTR _point$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 791
	ret	0
_EC_POINT_method_of ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_dup
_TEXT	SEGMENT
_a$ = 8							; size = 4
_group$ = 12						; size = 4
_EC_POINT_dup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 774
	cmp	DWORD PTR _a$[esp-4], 0
	jne	SHORT $LN2@EC_POINT_d
; Line 775
	xor	eax, eax
; Line 786
	ret	0
$LN2@EC_POINT_d:
	push	esi
; Line 777
	push	DWORD PTR _group$[esp]
	call	_EC_POINT_new
	mov	esi, eax
	add	esp, 4
; Line 778
	test	esi, esi
	je	SHORT $LN12@EC_POINT_d
; Line 780
	push	DWORD PTR _a$[esp]
	push	esi
	call	_EC_POINT_copy
	add	esp, 8
; Line 781
	test	eax, eax
	jne	SHORT $LN4@EC_POINT_d
; Line 736
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+44]
	test	eax, eax
	je	SHORT $LN9@EC_POINT_d
; Line 737
	push	esi
	call	eax
	add	esp, 4
$LN9@EC_POINT_d:
; Line 738
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN12@EC_POINT_d:
; Line 783
	xor	eax, eax
	pop	esi
; Line 786
	ret	0
$LN4@EC_POINT_d:
; Line 785
	mov	eax, esi
	pop	esi
; Line 786
	ret	0
_EC_POINT_dup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_copy
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_EC_POINT_copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 756
	mov	eax, DWORD PTR _dest$[esp-4]
	push	esi
	mov	edx, DWORD PTR [eax]
	mov	esi, DWORD PTR [edx+52]
	test	esi, esi
	jne	SHORT $LN2@EC_POINT_c
; Line 757
	push	757					; 000002f5H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	114					; 00000072H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 758
	xor	eax, eax
	pop	esi
; Line 767
	ret	0
$LN2@EC_POINT_c:
; Line 760
	mov	ecx, DWORD PTR _src$[esp]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN3@EC_POINT_c
; Line 761
	push	761					; 000002f9H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	114					; 00000072H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 762
	xor	eax, eax
	pop	esi
; Line 767
	ret	0
$LN3@EC_POINT_c:
; Line 764
	cmp	eax, ecx
	jne	SHORT $LN4@EC_POINT_c
; Line 765
	mov	eax, 1
	pop	esi
; Line 767
	ret	0
$LN4@EC_POINT_c:
; Line 766
	push	ecx
	push	eax
	call	esi
	add	esp, 8
	pop	esi
; Line 767
	ret	0
_EC_POINT_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_clear_free
_TEXT	SEGMENT
_point$ = 8						; size = 4
_EC_POINT_clear_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 742
	push	esi
; Line 743
	mov	esi, DWORD PTR _point$[esp]
	test	esi, esi
	je	SHORT $LN1@EC_POINT_c
; Line 746
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+48]
	test	eax, eax
	jne	SHORT $LN7@EC_POINT_c
; Line 748
	mov	eax, DWORD PTR [ecx+44]
	test	eax, eax
	je	SHORT $LN5@EC_POINT_c
$LN7@EC_POINT_c:
; Line 749
	push	esi
	call	eax
	add	esp, 4
$LN5@EC_POINT_c:
; Line 750
	push	68					; 00000044H
	push	esi
	call	_OPENSSL_cleanse
; Line 751
	push	esi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN1@EC_POINT_c:
	pop	esi
; Line 752
	ret	0
_EC_POINT_clear_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_free
_TEXT	SEGMENT
_point$ = 8						; size = 4
_EC_POINT_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 732
	push	esi
; Line 733
	mov	esi, DWORD PTR _point$[esp]
	test	esi, esi
	je	SHORT $LN1@EC_POINT_f
; Line 736
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+44]
	test	eax, eax
	je	SHORT $LN3@EC_POINT_f
; Line 737
	push	esi
	call	eax
	add	esp, 4
$LN3@EC_POINT_f:
; Line 738
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@EC_POINT_f:
	pop	esi
; Line 739
	ret	0
_EC_POINT_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_POINT_new
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_POINT_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 703
	push	edi
; Line 706
	mov	edi, DWORD PTR _group$[esp]
	test	edi, edi
	jne	SHORT $LN2@EC_POINT_n
; Line 707
	push	707					; 000002c3H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	67					; 00000043H
	push	121					; 00000079H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 708
	xor	eax, eax
	pop	edi
; Line 729
	ret	0
$LN2@EC_POINT_n:
; Line 710
	mov	eax, DWORD PTR [edi]
	cmp	DWORD PTR [eax+40], 0
	jne	SHORT $LN3@EC_POINT_n
; Line 711
	push	711					; 000002c7H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	121					; 00000079H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 712
	xor	eax, eax
	pop	edi
; Line 729
	ret	0
$LN3@EC_POINT_n:
	push	esi
; Line 715
	push	715					; 000002cbH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	68					; 00000044H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 716
	test	esi, esi
	jne	SHORT $LN4@EC_POINT_n
; Line 717
	push	717					; 000002cdH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	65					; 00000041H
	push	121					; 00000079H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 718
	xor	eax, eax
	pop	esi
	pop	edi
; Line 729
	ret	0
$LN4@EC_POINT_n:
; Line 721
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [esi], eax
; Line 723
	push	esi
	mov	eax, DWORD PTR [eax+40]
	call	eax
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@EC_POINT_n
; Line 724
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 725
	xor	eax, eax
	pop	esi
	pop	edi
; Line 729
	ret	0
$LN5@EC_POINT_n:
; Line 728
	mov	eax, esi
	pop	esi
	pop	edi
; Line 729
	ret	0
_EC_POINT_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_cmp
_TEXT	SEGMENT
_a2$1$ = -16						; size = 4
_b2$1$ = -12						; size = 4
_b3$1$ = -8						; size = 4
_a3$1$ = -4						; size = 4
_b1$1$ = 8						; size = 4
_a$ = 8							; size = 4
_a1$1$ = 12						; size = 4
_b$ = 12						; size = 4
_ctx$ = 16						; size = 4
_EC_GROUP_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 484
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
; Line 490
	mov	ebx, DWORD PTR _b$[esp+16]
	push	ebp
	push	edi
	mov	edi, DWORD PTR _a$[esp+24]
	xor	ebp, ebp
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+4]
	cmp	eax, DWORD PTR [ecx+4]
	je	SHORT $LN2@EC_GROUP_c
$LN48@EC_GROUP_c:
	pop	edi
	pop	ebp
; Line 492
	mov	eax, 1
	pop	ebx
; Line 553
	add	esp, 16					; 00000010H
	ret	0
$LN2@EC_GROUP_c:
; Line 494
	mov	eax, DWORD PTR [edi+48]
	test	eax, eax
	je	SHORT $LN3@EC_GROUP_c
	mov	ecx, DWORD PTR [ebx+48]
	test	ecx, ecx
	je	SHORT $LN3@EC_GROUP_c
	cmp	eax, ecx
	jne	SHORT $LN48@EC_GROUP_c
$LN3@EC_GROUP_c:
	push	esi
; Line 498
	mov	esi, DWORD PTR _ctx$[esp+28]
	test	esi, esi
	jne	SHORT $LN5@EC_GROUP_c
; Line 499
	call	_BN_CTX_new
	mov	esi, eax
	mov	ebp, esi
; Line 500
	test	esi, esi
	je	$LN17@EC_GROUP_c
$LN5@EC_GROUP_c:
; Line 503
	push	esi
	call	_BN_CTX_start
; Line 504
	push	esi
	call	_BN_CTX_get
; Line 505
	push	esi
	mov	DWORD PTR _a1$1$[esp+40], eax
	call	_BN_CTX_get
; Line 506
	push	esi
	mov	DWORD PTR _a2$1$[esp+48], eax
	call	_BN_CTX_get
; Line 507
	push	esi
	mov	DWORD PTR _a3$1$[esp+52], eax
	call	_BN_CTX_get
; Line 508
	push	esi
	mov	DWORD PTR _b1$1$[esp+52], eax
	call	_BN_CTX_get
; Line 509
	push	esi
	mov	DWORD PTR _b2$1$[esp+60], eax
	call	_BN_CTX_get
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _b3$1$[esp+32], eax
; Line 511
	push	esi
	test	eax, eax
	je	$LN47@EC_GROUP_c
; Line 521
	push	DWORD PTR _a3$1$[esp+36]
	mov	eax, DWORD PTR [edi]
	push	DWORD PTR _a2$1$[esp+40]
	push	DWORD PTR _a1$1$[esp+40]
	mov	eax, DWORD PTR [eax+28]
	push	edi
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN19@EC_GROUP_c
	mov	eax, DWORD PTR [ebx]
	push	esi
	push	DWORD PTR _b3$1$[esp+36]
	push	DWORD PTR _b2$1$[esp+40]
	mov	eax, DWORD PTR [eax+28]
	push	DWORD PTR _b1$1$[esp+40]
	push	ebx
	call	eax
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN19@EC_GROUP_c
; Line 525
	push	DWORD PTR _b1$1$[esp+28]
	push	DWORD PTR _a1$1$[esp+32]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	$LN19@EC_GROUP_c
	push	DWORD PTR _b2$1$[esp+32]
	push	DWORD PTR _a2$1$[esp+36]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	$LN19@EC_GROUP_c
	push	DWORD PTR _b3$1$[esp+32]
	push	DWORD PTR _a3$1$[esp+36]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	$LN19@EC_GROUP_c
; Line 529
	push	esi
	push	DWORD PTR [ebx+4]
	push	DWORD PTR [edi+4]
	push	edi
	call	_EC_POINT_cmp
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN19@EC_GROUP_c
; Line 537
	push	esi
	push	DWORD PTR _a1$1$[esp+32]
	push	edi
	call	_EC_GROUP_get_order
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN16@EC_GROUP_c
	push	esi
	push	DWORD PTR _b1$1$[esp+32]
	push	ebx
	call	_EC_GROUP_get_order
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN16@EC_GROUP_c
	push	esi
	push	DWORD PTR _a2$1$[esp+36]
	push	edi
	call	_EC_GROUP_get_cofactor
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN16@EC_GROUP_c
	mov	edi, DWORD PTR _b2$1$[esp+32]
	push	esi
	push	edi
	push	ebx
	call	_EC_GROUP_get_cofactor
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN16@EC_GROUP_c
; Line 544
	push	DWORD PTR _b1$1$[esp+28]
	push	DWORD PTR _a1$1$[esp+32]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN19@EC_GROUP_c
	push	edi
	push	DWORD PTR _a2$1$[esp+36]
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN45@EC_GROUP_c
$LN19@EC_GROUP_c:
; Line 545
	mov	ebx, 1
	jmp	SHORT $LN18@EC_GROUP_c
$LN16@EC_GROUP_c:
; Line 539
	push	esi
$LN47@EC_GROUP_c:
	call	_BN_CTX_end
	add	esp, 4
; Line 540
	test	ebp, ebp
	je	SHORT $LN17@EC_GROUP_c
; Line 541
	push	esi
	call	_BN_CTX_free
	add	esp, 4
$LN17@EC_GROUP_c:
; Line 542
	pop	esi
	pop	edi
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 553
	add	esp, 16					; 00000010H
	ret	0
$LN45@EC_GROUP_c:
	xor	ebx, ebx
$LN18@EC_GROUP_c:
; Line 548
	push	esi
	call	_BN_CTX_end
	add	esp, 4
; Line 549
	test	ebp, ebp
	je	SHORT $LN20@EC_GROUP_c
; Line 550
	push	esi
	call	_BN_CTX_free
	add	esp, 4
$LN20@EC_GROUP_c:
; Line 552
	pop	esi
	pop	edi
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 553
	add	esp, 16					; 00000010H
	ret	0
_EC_GROUP_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_check_discriminant
_TEXT	SEGMENT
_group$ = 8						; size = 4
_ctx$ = 12						; size = 4
_EC_GROUP_check_discriminant PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 475
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+36]
	test	eax, eax
	jne	SHORT $LN2@EC_GROUP_c
; Line 476
	push	477					; 000001ddH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	171					; 000000abH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 478
	xor	eax, eax
; Line 481
	ret	0
$LN2@EC_GROUP_c:
; Line 480
	mov	DWORD PTR _group$[esp-4], ecx
	jmp	eax
_EC_GROUP_check_discriminant ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_degree
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_get_degree PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 466
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+32]
	test	eax, eax
	jne	SHORT $LN2@EC_GROUP_g
; Line 467
	push	467					; 000001d3H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	173					; 000000adH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 468
	xor	eax, eax
; Line 471
	ret	0
$LN2@EC_GROUP_g:
; Line 470
	mov	DWORD PTR _group$[esp-4], ecx
	jmp	eax
_EC_GROUP_get_degree ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_curve_GF2m
_TEXT	SEGMENT
_group$ = 8						; size = 4
_p$ = 12						; size = 4
_a$ = 16						; size = 4
_b$ = 20						; size = 4
_ctx$ = 24						; size = 4
_EC_GROUP_get_curve_GF2m PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 455
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+28]
	test	eax, eax
	jne	SHORT $LN2@EC_GROUP_g
; Line 456
	push	457					; 000001c9H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	172					; 000000acH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 458
	xor	eax, eax
; Line 461
	ret	0
$LN2@EC_GROUP_g:
; Line 460
	mov	DWORD PTR _group$[esp-4], ecx
	jmp	eax
_EC_GROUP_get_curve_GF2m ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_set_curve_GF2m
_TEXT	SEGMENT
_group$ = 8						; size = 4
_p$ = 12						; size = 4
_a$ = 16						; size = 4
_b$ = 20						; size = 4
_ctx$ = 24						; size = 4
_EC_GROUP_set_curve_GF2m PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 444
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	test	eax, eax
	jne	SHORT $LN2@EC_GROUP_s
; Line 445
	push	446					; 000001beH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	176					; 000000b0H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 447
	xor	eax, eax
; Line 450
	ret	0
$LN2@EC_GROUP_s:
; Line 449
	mov	DWORD PTR _group$[esp-4], ecx
	jmp	eax
_EC_GROUP_set_curve_GF2m ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_curve_GFp
_TEXT	SEGMENT
_group$ = 8						; size = 4
_p$ = 12						; size = 4
_a$ = 16						; size = 4
_b$ = 20						; size = 4
_ctx$ = 24						; size = 4
_EC_GROUP_get_curve_GFp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 433
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+28]
	test	eax, eax
	jne	SHORT $LN2@EC_GROUP_g
; Line 434
	push	434					; 000001b2H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	130					; 00000082H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 435
	xor	eax, eax
; Line 438
	ret	0
$LN2@EC_GROUP_g:
; Line 437
	mov	DWORD PTR _group$[esp-4], ecx
	jmp	eax
_EC_GROUP_get_curve_GFp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_set_curve_GFp
_TEXT	SEGMENT
_group$ = 8						; size = 4
_p$ = 12						; size = 4
_a$ = 16						; size = 4
_b$ = 20						; size = 4
_ctx$ = 24						; size = 4
_EC_GROUP_set_curve_GFp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 423
	mov	ecx, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+24]
	test	eax, eax
	jne	SHORT $LN2@EC_GROUP_s
; Line 424
	push	424					; 000001a8H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	109					; 0000006dH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 425
	xor	eax, eax
; Line 428
	ret	0
$LN2@EC_GROUP_s:
; Line 427
	mov	DWORD PTR _group$[esp-4], ecx
	jmp	eax
_EC_GROUP_set_curve_GFp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_set_seed
_TEXT	SEGMENT
_group$ = 8						; size = 4
_p$ = 12						; size = 4
_len$ = 16						; size = 4
_EC_GROUP_set_seed PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 392
	push	esi
; Line 393
	mov	esi, DWORD PTR _group$[esp]
	push	edi
	mov	eax, DWORD PTR [esi+60]
	test	eax, eax
	je	SHORT $LN2@EC_GROUP_s
; Line 394
	push	eax
	call	_CRYPTO_free
	add	esp, 4
; Line 395
	mov	DWORD PTR [esi+60], 0
; Line 396
	mov	DWORD PTR [esi+64], 0
$LN2@EC_GROUP_s:
; Line 399
	mov	edi, DWORD PTR _len$[esp+4]
	test	edi, edi
	je	SHORT $LN4@EC_GROUP_s
	cmp	DWORD PTR _p$[esp+4], 0
	je	SHORT $LN4@EC_GROUP_s
; Line 402
	push	402					; 00000192H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	edi
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+60], eax
	test	eax, eax
	jne	SHORT $LN5@EC_GROUP_s
	pop	edi
	pop	esi
; Line 408
	ret	0
$LN5@EC_GROUP_s:
; Line 404
	push	edi
	push	DWORD PTR _p$[esp+8]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 405
	mov	DWORD PTR [esi+64], edi
; Line 407
	mov	eax, edi
	pop	edi
	pop	esi
; Line 408
	ret	0
$LN4@EC_GROUP_s:
	pop	edi
; Line 400
	mov	eax, 1
	pop	esi
; Line 408
	ret	0
_EC_GROUP_set_seed ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_seed_len
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_get_seed_len PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 417
	mov	eax, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [eax+64]
; Line 418
	ret	0
_EC_GROUP_get_seed_len ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get0_seed
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_get0_seed PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 412
	mov	eax, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [eax+60]
; Line 413
	ret	0
_EC_GROUP_get0_seed ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_point_conversion_form
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_get_point_conversion_form PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 388
	mov	eax, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [eax+56]
; Line 389
	ret	0
_EC_GROUP_get_point_conversion_form ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_set_point_conversion_form
_TEXT	SEGMENT
_group$ = 8						; size = 4
_form$ = 12						; size = 4
_EC_GROUP_set_point_conversion_form PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 382
	mov	eax, DWORD PTR _group$[esp-4]
	mov	ecx, DWORD PTR _form$[esp-4]
	mov	DWORD PTR [eax+56], ecx
; Line 383
	ret	0
_EC_GROUP_set_point_conversion_form ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_asn1_flag
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_get_asn1_flag PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 376
	mov	eax, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [eax+52]
	and	eax, 2147483647				; 7fffffffH
; Line 377
	ret	0
_EC_GROUP_get_asn1_flag ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_set_asn1_flag
_TEXT	SEGMENT
_group$ = 8						; size = 4
_flag$ = 12						; size = 4
_EC_GROUP_set_asn1_flag PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 370
	mov	ecx, DWORD PTR _group$[esp-4]
; Line 371
	mov	eax, DWORD PTR [ecx+52]
	xor	eax, DWORD PTR _flag$[esp-4]
	and	eax, 2147483647				; 7fffffffH
	xor	DWORD PTR [ecx+52], eax
; Line 372
	ret	0
_EC_GROUP_set_asn1_flag ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_curve_name
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_get_curve_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 365
	mov	eax, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [eax+48]
; Line 366
	ret	0
_EC_GROUP_get_curve_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_set_curve_name
_TEXT	SEGMENT
_group$ = 8						; size = 4
_nid$ = 12						; size = 4
_EC_GROUP_set_curve_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 360
	mov	eax, DWORD PTR _group$[esp-4]
	mov	ecx, DWORD PTR _nid$[esp-4]
	mov	DWORD PTR [eax+48], ecx
; Line 361
	ret	0
_EC_GROUP_set_curve_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_cofactor
_TEXT	SEGMENT
_group$ = 8						; size = 4
_cofactor$ = 12						; size = 4
_ctx$ = 16						; size = 4
_EC_GROUP_get_cofactor PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 351
	push	esi
; Line 352
	mov	esi, DWORD PTR _group$[esp]
	lea	eax, DWORD PTR [esi+28]
	push	eax
	push	DWORD PTR _cofactor$[esp+4]
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@EC_GROUP_g
	pop	esi
; Line 356
	ret	0
$LN2@EC_GROUP_g:
; Line 355
	xor	eax, eax
	cmp	DWORD PTR [esi+32], eax
	pop	esi
	setne	al
; Line 356
	ret	0
_EC_GROUP_get_cofactor ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_order
_TEXT	SEGMENT
_group$ = 8						; size = 4
_order$ = 12						; size = 4
_ctx$ = 16						; size = 4
_EC_GROUP_get_order PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 343
	mov	eax, DWORD PTR _group$[esp-4]
	push	esi
	mov	esi, DWORD PTR _order$[esp]
	add	eax, 8
	push	eax
	push	esi
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@EC_GROUP_g
	pop	esi
; Line 347
	ret	0
$LN2@EC_GROUP_g:
; Line 346
	xor	eax, eax
	cmp	DWORD PTR [esi+4], eax
	pop	esi
	setne	al
; Line 347
	ret	0
_EC_GROUP_get_order ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get_mont_data
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_get_mont_data PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 338
	mov	eax, DWORD PTR _group$[esp-4]
	test	DWORD PTR [eax+52], -2147483648		; 80000000H
	je	SHORT $LN3@EC_GROUP_g
	mov	eax, DWORD PTR [eax+172]
; Line 339
	ret	0
$LN3@EC_GROUP_g:
; Line 338
	xor	eax, eax
; Line 339
	ret	0
_EC_GROUP_get_mont_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_get0_generator
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_get0_generator PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 333
	mov	eax, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [eax+4]
; Line 334
	ret	0
_EC_GROUP_get0_generator ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_set_generator
_TEXT	SEGMENT
_group$ = 8						; size = 4
_generator$ = 12					; size = 4
_order$ = 16						; size = 4
_cofactor$ = 20						; size = 4
_EC_GROUP_set_generator PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 296
	cmp	DWORD PTR _generator$[esp-4], 0
	jne	SHORT $LN2@EC_GROUP_s
; Line 297
	push	297					; 00000129H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	67					; 00000043H
	push	111					; 0000006fH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 298
	xor	eax, eax
; Line 329
	ret	0
$LN2@EC_GROUP_s:
	push	esi
; Line 301
	mov	esi, DWORD PTR _group$[esp]
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN4@EC_GROUP_s
; Line 302
	push	esi
	call	_EC_POINT_new
	add	esp, 4
	mov	DWORD PTR [esi+4], eax
; Line 303
	test	eax, eax
	je	SHORT $LN14@EC_GROUP_s
$LN4@EC_GROUP_s:
; Line 306
	push	DWORD PTR _generator$[esp]
	push	DWORD PTR [esi+4]
	call	_EC_POINT_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN14@EC_GROUP_s
; Line 309
	mov	eax, DWORD PTR _order$[esp]
	test	eax, eax
	je	SHORT $LN6@EC_GROUP_s
; Line 310
	push	eax
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@EC_GROUP_s
	pop	esi
; Line 329
	ret	0
$LN6@EC_GROUP_s:
; Line 313
	lea	eax, DWORD PTR [esi+8]
	push	0
	push	eax
	call	_BN_set_word
	add	esp, 8
$LN7@EC_GROUP_s:
; Line 315
	mov	eax, DWORD PTR _cofactor$[esp]
	test	eax, eax
	je	SHORT $LN9@EC_GROUP_s
; Line 316
	push	eax
	lea	eax, DWORD PTR [esi+28]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@EC_GROUP_s
$LN14@EC_GROUP_s:
; Line 317
	xor	eax, eax
	pop	esi
; Line 329
	ret	0
$LN9@EC_GROUP_s:
; Line 319
	lea	eax, DWORD PTR [esi+28]
	push	0
	push	eax
	call	_BN_set_word
	add	esp, 8
$LN10@EC_GROUP_s:
; Line 326
	push	esi
	call	_ec_precompute_mont_data
	add	esp, 4
; Line 328
	mov	eax, 1
	pop	esi
; Line 329
	ret	0
_EC_GROUP_set_generator ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_METHOD_get_field_type
_TEXT	SEGMENT
_meth$ = 8						; size = 4
_EC_METHOD_get_field_type PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 290
	mov	eax, DWORD PTR _meth$[esp-4]
	mov	eax, DWORD PTR [eax+4]
; Line 291
	ret	0
_EC_METHOD_get_field_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_method_of
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_method_of PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 285
	mov	eax, DWORD PTR _group$[esp-4]
	mov	eax, DWORD PTR [eax]
; Line 286
	ret	0
_EC_GROUP_method_of ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_dup
_TEXT	SEGMENT
_a$ = 8							; size = 4
_EC_GROUP_dup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 260
	push	edi
; Line 264
	mov	edi, DWORD PTR _a$[esp]
	test	edi, edi
	jne	SHORT $LN2@EC_GROUP_d
; Line 265
	xor	eax, eax
	pop	edi
; Line 281
	ret	0
$LN2@EC_GROUP_d:
	push	esi
; Line 267
	push	DWORD PTR [edi]
	call	_EC_GROUP_new
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	SHORT $LN11@EC_GROUP_d
; Line 269
	push	edi
	push	esi
	call	_EC_GROUP_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@EC_GROUP_d
; Line 277
	push	esi
	call	_EC_GROUP_free
	add	esp, 4
$LN11@EC_GROUP_d:
; Line 278
	pop	esi
	xor	eax, eax
	pop	edi
; Line 281
	ret	0
$LN5@EC_GROUP_d:
; Line 280
	mov	eax, esi
	pop	esi
	pop	edi
; Line 281
	ret	0
_EC_GROUP_dup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_copy
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_EC_GROUP_copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 172
	push	esi
; Line 175
	mov	esi, DWORD PTR _dest$[esp]
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN5@EC_GROUP_c
; Line 176
	push	176					; 000000b0H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	106					; 0000006aH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 177
	xor	eax, eax
	pop	esi
; Line 257
	ret	0
$LN5@EC_GROUP_c:
	push	ebx
; Line 179
	mov	ebx, DWORD PTR _src$[esp+4]
	cmp	eax, DWORD PTR [ebx]
	je	SHORT $LN6@EC_GROUP_c
; Line 180
	push	180					; 000000b4H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	101					; 00000065H
	push	106					; 0000006aH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 181
	xor	eax, eax
	pop	ebx
	pop	esi
; Line 257
	ret	0
$LN6@EC_GROUP_c:
; Line 183
	cmp	esi, ebx
	jne	SHORT $LN7@EC_GROUP_c
; Line 184
	pop	ebx
	mov	eax, 1
	pop	esi
; Line 257
	ret	0
$LN7@EC_GROUP_c:
	push	ebp
	push	edi
; Line 186
	lea	ebp, DWORD PTR [esi+68]
	push	ebp
	call	_EC_EX_DATA_free_all_data
; Line 188
	mov	edi, DWORD PTR [ebx+68]
	add	esp, 4
	test	edi, edi
	je	SHORT $LN3@EC_GROUP_c
$LL4@EC_GROUP_c:
; Line 189
	push	DWORD PTR [edi+4]
	mov	eax, DWORD PTR [edi+8]
	call	eax
	add	esp, 4
; Line 191
	test	eax, eax
	je	$LN40@EC_GROUP_c
; Line 193
	push	DWORD PTR [edi+16]
	push	DWORD PTR [edi+12]
	push	DWORD PTR [edi+8]
	push	eax
	push	ebp
	call	_EC_EX_DATA_set_data
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN40@EC_GROUP_c
; Line 188
	mov	edi, DWORD PTR [edi]
	test	edi, edi
	jne	SHORT $LL4@EC_GROUP_c
$LN3@EC_GROUP_c:
; Line 199
	test	DWORD PTR [ebx+52], -2147483648		; 80000000H
	je	SHORT $LN10@EC_GROUP_c
	cmp	DWORD PTR [ebx+172], 0
	je	SHORT $LN10@EC_GROUP_c
; Line 200
	cmp	DWORD PTR [esi+172], 0
	jne	SHORT $LN13@EC_GROUP_c
; Line 201
	call	_BN_MONT_CTX_new
	mov	DWORD PTR [esi+172], eax
; Line 202
	test	eax, eax
	je	SHORT $LN40@EC_GROUP_c
$LN13@EC_GROUP_c:
; Line 205
	push	DWORD PTR [ebx+172]
	push	DWORD PTR [esi+172]
	call	_BN_MONT_CTX_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN15@EC_GROUP_c
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 257
	ret	0
$LN10@EC_GROUP_c:
; Line 209
	test	DWORD PTR [esi+52], -2147483648		; 80000000H
	je	SHORT $LN15@EC_GROUP_c
	mov	eax, DWORD PTR [esi+172]
	test	eax, eax
	je	SHORT $LN15@EC_GROUP_c
; Line 210
	push	eax
	call	_BN_MONT_CTX_free
	add	esp, 4
; Line 211
	mov	DWORD PTR [esi+172], 0
$LN15@EC_GROUP_c:
; Line 215
	cmp	DWORD PTR [ebx+4], 0
	je	SHORT $LN16@EC_GROUP_c
; Line 216
	cmp	DWORD PTR [esi+4], 0
	jne	SHORT $LN19@EC_GROUP_c
; Line 217
	push	esi
	call	_EC_POINT_new
	add	esp, 4
	mov	DWORD PTR [esi+4], eax
; Line 218
	test	eax, eax
	je	SHORT $LN40@EC_GROUP_c
$LN19@EC_GROUP_c:
; Line 221
	push	DWORD PTR [ebx+4]
	push	DWORD PTR [esi+4]
	call	_EC_POINT_copy
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN21@EC_GROUP_c
$LN40@EC_GROUP_c:
	pop	edi
	pop	ebp
	pop	ebx
; Line 222
	xor	eax, eax
	pop	esi
; Line 257
	ret	0
$LN16@EC_GROUP_c:
; Line 225
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN21@EC_GROUP_c
; Line 226
	push	eax
	call	_EC_POINT_clear_free
	add	esp, 4
; Line 227
	mov	DWORD PTR [esi+4], 0
$LN21@EC_GROUP_c:
; Line 231
	lea	eax, DWORD PTR [ebx+8]
	push	eax
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN40@EC_GROUP_c
; Line 233
	lea	eax, DWORD PTR [ebx+28]
	push	eax
	lea	eax, DWORD PTR [esi+28]
	push	eax
	call	_BN_copy
	add	esp, 8
	test	eax, eax
	je	SHORT $LN40@EC_GROUP_c
; Line 236
	mov	eax, DWORD PTR [ebx+48]
	mov	DWORD PTR [esi+48], eax
; Line 237
	mov	eax, DWORD PTR [ebx+52]
	mov	DWORD PTR [esi+52], eax
; Line 238
	mov	eax, DWORD PTR [ebx+56]
	mov	DWORD PTR [esi+56], eax
; Line 240
	cmp	DWORD PTR [ebx+60], 0
; Line 241
	mov	eax, DWORD PTR [esi+60]
	je	SHORT $LN24@EC_GROUP_c
	test	eax, eax
	je	SHORT $LN26@EC_GROUP_c
; Line 242
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN26@EC_GROUP_c:
; Line 243
	push	243					; 000000f3H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	DWORD PTR [ebx+64]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+60], eax
; Line 244
	test	eax, eax
	je	$LN40@EC_GROUP_c
; Line 246
	push	DWORD PTR [ebx+64]
	push	DWORD PTR [ebx+60]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN40@EC_GROUP_c
; Line 248
	mov	eax, DWORD PTR [ebx+64]
	mov	DWORD PTR [esi+64], eax
; Line 256
	mov	eax, DWORD PTR [esi]
	push	ebx
	push	esi
	mov	eax, DWORD PTR [eax+20]
	call	eax
	add	esp, 8
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 257
	ret	0
$LN24@EC_GROUP_c:
; Line 250
	test	eax, eax
	je	SHORT $LN29@EC_GROUP_c
; Line 251
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN29@EC_GROUP_c:
; Line 256
	mov	eax, DWORD PTR [esi]
	mov	DWORD PTR [esi+60], 0
	mov	DWORD PTR [esi+64], 0
	push	ebx
	mov	eax, DWORD PTR [eax+20]
	push	esi
	call	eax
	add	esp, 8
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 257
	ret	0
_EC_GROUP_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_clear_free
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_clear_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 143
	push	esi
; Line 144
	mov	esi, DWORD PTR _group$[esp]
	test	esi, esi
	je	$LN1@EC_GROUP_c
; Line 147
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx+16]
	test	eax, eax
	jne	SHORT $LN16@EC_GROUP_c
; Line 149
	mov	eax, DWORD PTR [ecx+12]
	test	eax, eax
	je	SHORT $LN5@EC_GROUP_c
$LN16@EC_GROUP_c:
; Line 150
	push	esi
	call	eax
	add	esp, 4
$LN5@EC_GROUP_c:
; Line 152
	lea	eax, DWORD PTR [esi+68]
	push	eax
	call	_EC_EX_DATA_clear_free_all_data
	add	esp, 4
; Line 154
	test	DWORD PTR [esi+52], -2147483648		; 80000000H
	je	SHORT $LN6@EC_GROUP_c
	mov	eax, DWORD PTR [esi+172]
	test	eax, eax
	je	SHORT $LN6@EC_GROUP_c
; Line 155
	push	eax
	call	_BN_MONT_CTX_free
	add	esp, 4
$LN6@EC_GROUP_c:
; Line 157
	push	edi
	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN10@EC_GROUP_c
; Line 746
	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ecx+48]
	test	eax, eax
	jne	SHORT $LN17@EC_GROUP_c
; Line 748
	mov	eax, DWORD PTR [ecx+44]
	test	eax, eax
	je	SHORT $LN14@EC_GROUP_c
$LN17@EC_GROUP_c:
; Line 749
	push	edi
	call	eax
	add	esp, 4
$LN14@EC_GROUP_c:
; Line 750
	push	68					; 00000044H
	push	edi
	call	_OPENSSL_cleanse
; Line 751
	push	edi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN10@EC_GROUP_c:
; Line 159
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	_BN_clear_free
; Line 160
	lea	eax, DWORD PTR [esi+28]
	push	eax
	call	_BN_clear_free
; Line 162
	mov	eax, DWORD PTR [esi+60]
	add	esp, 8
	pop	edi
	test	eax, eax
	je	SHORT $LN8@EC_GROUP_c
; Line 163
	push	DWORD PTR [esi+64]
	push	eax
	call	_OPENSSL_cleanse
; Line 164
	push	DWORD PTR [esi+60]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN8@EC_GROUP_c:
; Line 167
	push	176					; 000000b0H
	push	esi
	call	_OPENSSL_cleanse
; Line 168
	push	esi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN1@EC_GROUP_c:
	pop	esi
; Line 169
	ret	0
_EC_GROUP_clear_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_free
_TEXT	SEGMENT
_group$ = 8						; size = 4
_EC_GROUP_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 119
	push	esi
; Line 120
	mov	esi, DWORD PTR _group$[esp]
	test	esi, esi
	je	$LN1@EC_GROUP_f
; Line 123
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	je	SHORT $LN3@EC_GROUP_f
; Line 124
	push	esi
	call	eax
	add	esp, 4
$LN3@EC_GROUP_f:
; Line 126
	lea	eax, DWORD PTR [esi+68]
	push	eax
	call	_EC_EX_DATA_free_all_data
	add	esp, 4
; Line 128
	test	DWORD PTR [esi+52], -2147483648		; 80000000H
	je	SHORT $LN4@EC_GROUP_f
	mov	eax, DWORD PTR [esi+172]
	test	eax, eax
	je	SHORT $LN4@EC_GROUP_f
; Line 129
	push	eax
	call	_BN_MONT_CTX_free
	add	esp, 4
$LN4@EC_GROUP_f:
; Line 131
	push	edi
	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN8@EC_GROUP_f
; Line 736
	mov	eax, DWORD PTR [edi]
	mov	eax, DWORD PTR [eax+44]
	test	eax, eax
	je	SHORT $LN10@EC_GROUP_f
; Line 737
	push	edi
	call	eax
	add	esp, 4
$LN10@EC_GROUP_f:
; Line 738
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN8@EC_GROUP_f:
; Line 133
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	_BN_free
; Line 134
	lea	eax, DWORD PTR [esi+28]
	push	eax
	call	_BN_free
; Line 136
	mov	eax, DWORD PTR [esi+60]
	add	esp, 8
	pop	edi
	test	eax, eax
	je	SHORT $LN6@EC_GROUP_f
; Line 137
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN6@EC_GROUP_f:
; Line 139
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@EC_GROUP_f:
	pop	esi
; Line 140
	ret	0
_EC_GROUP_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EC_GROUP_new
_TEXT	SEGMENT
_meth$ = 8						; size = 4
_EC_GROUP_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_lib.c
; Line 76
	push	edi
; Line 79
	mov	edi, DWORD PTR _meth$[esp]
	test	edi, edi
	jne	SHORT $LN2@EC_GROUP_n
; Line 80
	push	80					; 00000050H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	108					; 0000006cH
	push	108					; 0000006cH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 81
	xor	eax, eax
	pop	edi
; Line 116
	ret	0
$LN2@EC_GROUP_n:
; Line 83
	cmp	DWORD PTR [edi+8], 0
	jne	SHORT $LN3@EC_GROUP_n
; Line 84
	push	84					; 00000054H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	66					; 00000042H
	push	108					; 0000006cH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 85
	xor	eax, eax
	pop	edi
; Line 116
	ret	0
$LN3@EC_GROUP_n:
	push	esi
; Line 88
	push	88					; 00000058H
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	176					; 000000b0H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 89
	test	esi, esi
	jne	SHORT $LN4@EC_GROUP_n
; Line 90
	push	90					; 0000005aH
	push	OFFSET ??_C@_0BF@KGHFPEKG@?4?2crypto?2ec?2ec_lib?4c?$AA@
	push	65					; 00000041H
	push	108					; 0000006cH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 91
	xor	eax, eax
	pop	esi
	pop	edi
; Line 116
	ret	0
$LN4@EC_GROUP_n:
; Line 100
	lea	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [esi], edi
	push	eax
	mov	DWORD PTR [esi+68], 0
	mov	DWORD PTR [esi+172], 0
	mov	DWORD PTR [esi+4], 0
	call	_BN_init
; Line 101
	lea	eax, DWORD PTR [esi+28]
	push	eax
	call	_BN_init
; Line 103
	mov	DWORD PTR [esi+48], 0
; Line 104
	mov	DWORD PTR [esi+52], -2147483648		; 80000000H
; Line 105
	mov	DWORD PTR [esi+56], 4
; Line 107
	mov	DWORD PTR [esi+60], 0
; Line 108
	mov	DWORD PTR [esi+64], 0
; Line 110
	mov	eax, DWORD PTR [edi+8]
	push	esi
	call	eax
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@EC_GROUP_n
; Line 111
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 112
	xor	eax, eax
	pop	esi
	pop	edi
; Line 116
	ret	0
$LN5@EC_GROUP_n:
; Line 115
	mov	eax, esi
	pop	esi
	pop	edi
; Line 116
	ret	0
_EC_GROUP_new ENDP
_TEXT	ENDS
END

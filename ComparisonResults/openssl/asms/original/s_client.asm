; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BA@ENIBCIEA@Client_identity?$AA@		; `string'
PUBLIC	??_C@_0BB@FHAPCDKO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@ ; `string'
PUBLIC	_srtp_profiles
_BSS	SEGMENT
_c_nbio	DD	01H DUP (?)
_c_Pause DD	01H DUP (?)
_c_debug DD	01H DUP (?)
_c_tlsextdebug DD 01H DUP (?)
_c_status_req DD 01H DUP (?)
_c_msg	DD	01H DUP (?)
_c_showcerts DD	01H DUP (?)
_keymatexportlabel DD 01H DUP (?)
_bio_c_out DD	01H DUP (?)
_bio_c_msg DD	01H DUP (?)
_c_quiet DD	01H DUP (?)
_c_ign_eof DD	01H DUP (?)
_c_brief DD	01H DUP (?)
_srtp_profiles DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0BB@FHAPCDKO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_0BB@FHAPCDKO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@ DB '            '
	DB	'    ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ENIBCIEA@Client_identity?$AA@
CONST	SEGMENT
??_C@_0BA@ENIBCIEA@Client_identity?$AA@ DB 'Client_identity', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_keymatexportlen DD 014H
_psk_identity DD FLAT:??_C@_0BA@ENIBCIEA@Client_identity?$AA@
?space@?1??print_stuff@@9@9 DD FLAT:??_C@_0BB@FHAPCDKO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$AA@ ; `print_stuff'::`2'::space
_DATA	ENDS
PUBLIC	_s_client_main
PUBLIC	??_C@_0P@BMNLBCBB@psk_client_cb?6?$AA@		; `string'
PUBLIC	??_C@_0DE@DGENHHJB@NULL?5received?5PSK?5identity?5hint?0@ ; `string'
PUBLIC	??_C@_0CB@IKEGHPFG@Received?5PSK?5identity?5hint?5?8?$CFs?8?6@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0BO@LCEIEJNP@created?5identity?5?8?$CFs?8?5len?$DN?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@ ; `string'
PUBLIC	??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@ ; `string'
PUBLIC	??_C@_0BE@PJLKILKF@created?5PSK?5len?$DN?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BO@EOLEIMOP@Error?5in?5PSK?5client?5callback?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@NDGJLAD@usage?3?5s_client?5args?6?$AA@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0CI@NFDFDEBP@?5?9host?5host?5?5?5?5?5?9?5use?5?9connect?5i@ ; `string'
PUBLIC	??_C@_0CI@PJFPIDML@?5?9port?5port?5?5?5?5?5?9?5use?5?9connect?5i@ ; `string'
PUBLIC	??_C@_04MAHDEHKL@4433?$AA@			; `string'
PUBLIC	??_C@_09IPAEKDAI@localhost?$AA@			; `string'
PUBLIC	??_C@_0DM@DAAPOIGI@?5?9connect?5host?3port?5?9?5who?5to?5con@ ; `string'
PUBLIC	??_C@_0EA@PAPKIBFG@?5?9verify_hostname?5host?5?9?5check?5p@ ; `string'
PUBLIC	??_C@_0DP@DJCBKCN@?5?9verify_email?5email?5?9?5check?5pee@ ; `string'
PUBLIC	??_C@_0DO@GNFHPCIL@?5?9verify_ip?5ipaddr?5?9?5check?5peer?5@ ; `string'
PUBLIC	??_C@_0DI@EHAJMJGI@?5?9verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@ ; `string'
PUBLIC	??_C@_0DE@GOBPIMCB@?5?9verify_return_error?5?9?5return?5v@ ; `string'
PUBLIC	??_C@_0DO@JADCCCHM@?5?9cert?5arg?5?5?5?5?5?9?5certificate?5fil@ ; `string'
PUBLIC	??_C@_0DO@ILODNPNH@?5?9certform?5arg?5?9?5certificate?5for@ ; `string'
PUBLIC	??_C@_0DL@PJJGJLED@?5?9key?5arg?5?5?5?5?5?5?9?5Private?5key?5fil@ ; `string'
PUBLIC	??_C@_0DC@IGMNKLKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5not?5specified?5b@ ; `string'
PUBLIC	??_C@_0DG@BDHNDFAC@?5?9keyform?5arg?5?5?9?5key?5format?5?$CIPEM@ ; `string'
PUBLIC	??_C@_0DG@BFMFFOFA@?5?9pass?5arg?5?5?5?5?5?9?5private?5key?5fil@ ; `string'
PUBLIC	??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@ ; `string'
PUBLIC	??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@ ; `string'
PUBLIC	??_C@_0ED@DIMIHAHA@?5?9no_alt_chains?5?9?5only?5ever?5use?5@ ; `string'
PUBLIC	??_C@_0EL@GFHFDCBM@?5?9reconnect?5?5?5?5?9?5Drop?5and?5re?9mak@ ; `string'
PUBLIC	??_C@_0EH@LLKOEDPP@?5?9pause?5?5?5?5?5?5?5?5?9?5sleep?$CI1?$CJ?5after?5@ ; `string'
PUBLIC	??_C@_0EH@BDHGGPAE@?5?9prexit?5?5?5?5?5?5?5?9?5print?5session?5i@ ; `string'
PUBLIC	??_C@_0DF@GLAOCGMB@?5?9showcerts?5?5?5?5?9?5show?5all?5certif@ ; `string'
PUBLIC	??_C@_0BP@MAGFDDJA@?5?9debug?5?5?5?5?5?5?5?5?9?5extra?5output?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@PGHHBNJL@?5?9msg?5?5?5?5?5?5?5?5?5?5?9?5Show?5protocol?5m@ ; `string'
PUBLIC	??_C@_0CM@INMICKPN@?5?9nbio_test?5?5?5?5?9?5more?5ssl?5protoc@ ; `string'
PUBLIC	??_C@_0CJ@JEECEKMM@?5?9state?5?5?5?5?5?5?5?5?9?5print?5the?5?8ssl?8@ ; `string'
PUBLIC	??_C@_0CL@DKKNEEF@?5?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9bl@ ; `string'
PUBLIC	??_C@_0DF@NJANHEED@?5?9crlf?5?5?5?5?5?5?5?5?5?9?5convert?5LF?5from@ ; `string'
PUBLIC	??_C@_0CF@KGGGIGOL@?5?9quiet?5?5?5?5?5?5?5?5?9?5no?5s_client?5out@ ; `string'
PUBLIC	??_C@_0DJ@ODIMJIII@?5?9ign_eof?5?5?5?5?5?5?9?5ignore?5input?5eo@ ; `string'
PUBLIC	??_C@_0CJ@CNCLIHNG@?5?9no_ign_eof?5?5?5?9?5don?8t?5ignore?5in@ ; `string'
PUBLIC	??_C@_0CD@GMCGEHFF@?5?9psk_identity?5arg?5?9?5PSK?5identit@ ; `string'
PUBLIC	??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@ ; `string'
PUBLIC	??_C@_0DG@OIHFJCKN@?5?9srpuser?5user?5?5?5?5?5?9?5SRP?5authent@ ; `string'
PUBLIC	??_C@_0CK@OEIKAKOJ@?5?9srppass?5arg?5?5?5?5?5?5?9?5password?5fo@ ; `string'
PUBLIC	??_C@_0ED@FPNBJBED@?5?9srp_lateuser?5?5?5?5?5?9?5SRP?5usernam@ ; `string'
PUBLIC	??_C@_0EA@LJHOGEKL@?5?9srp_moregroups?5?5?5?9?5Tolerate?5ot@ ; `string'
PUBLIC	??_C@_0EB@CBLIKAJL@?5?9srp_strength?5int?5?9?5minimal?5len@ ; `string'
PUBLIC	??_C@_0CB@MAIOMCAD@?5?9ssl2?5?5?5?5?5?5?5?5?5?9?5just?5use?5SSLv2?6@ ; `string'
PUBLIC	??_C@_0CB@MAPJFFCJ@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5just?5use?5SSLv3?6@ ; `string'
PUBLIC	??_C@_0CD@OKJOIPFP@?5?9tls1_2?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?4@ ; `string'
PUBLIC	??_C@_0CD@OKAGDGCB@?5?9tls1_1?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?4@ ; `string'
PUBLIC	??_C@_0CB@BKPMKFPI@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?6@ ; `string'
PUBLIC	??_C@_0CC@GHLBHJFE@?5?9dtls1?5?5?5?5?5?5?5?5?9?5just?5use?5DTLSv1@ ; `string'
PUBLIC	??_C@_0CK@FDEOHNN@?5?9fallback_scsv?5?9?5send?5TLS_FALLB@ ; `string'
PUBLIC	??_C@_0CJ@EJGKILCM@?5?9mtu?5?5?5?5?5?5?5?5?5?5?9?5set?5the?5link?5la@ ; `string'
PUBLIC	??_C@_0EM@PCDENACO@?5?9no_tls1_2?1?9no_tls1_1?1?9no_tls1?1@ ; `string'
PUBLIC	??_C@_0ED@MFJFCDHF@?5?9bugs?5?5?5?5?5?5?5?5?5?9?5Switch?5on?5all?5S@ ; `string'
PUBLIC	??_C@_0EF@CHKHEFMC@?5?9cipher?5?5?5?5?5?5?5?9?5preferred?5ciphe@ ; `string'
PUBLIC	??_C@_0DD@BAPEMNH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5command?5to?5see?5@ ; `string'
PUBLIC	??_C@_0EA@DCAOMMPP@?5?9starttls?5prot?5?9?5use?5the?5STARTT@ ; `string'
PUBLIC	??_C@_0DN@IJPNAMPE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5for?5those?5proto@ ; `string'
PUBLIC	??_C@_0EC@OLPHKLOO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?8prot?8?5defines?5@ ; `string'
PUBLIC	??_C@_0EA@DPONNPMK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5only?5?$CCsmtp?$CC?0?5?$CCp@ ; `string'
PUBLIC	??_C@_0CB@GJKLJCEJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5are?5supported?4?6@ ; `string'
PUBLIC	??_C@_0DK@KOEJDDIL@?5?9engine?5id?5?5?5?5?9?5Initialise?5and?5@ ; `string'
PUBLIC	??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ ; `string'
PUBLIC	??_C@_0CP@FINJMHON@?5?9sess_out?5arg?5?9?5file?5to?5write?5S@ ; `string'
PUBLIC	??_C@_0DA@KFOBHKFJ@?5?9sess_in?5arg?5?5?9?5file?5to?5read?5SS@ ; `string'
PUBLIC	??_C@_0EC@FHACLOOJ@?5?9servername?5host?5?5?9?5Set?5TLS?5ext@ ; `string'
PUBLIC	??_C@_0DO@PMCEEEHA@?5?9tlsextdebug?5?5?5?5?5?5?9?5hex?5dump?5of@ ; `string'
PUBLIC	??_C@_0DN@LAKBFBKC@?5?9status?5?5?5?5?5?5?5?5?5?5?5?9?5request?5cer@ ; `string'
PUBLIC	??_C@_0EA@ENBACIIO@?5?9no_ticket?5?5?5?5?5?5?5?5?9?5disable?5use@ ; `string'
PUBLIC	??_C@_0FC@BBKAOJN@?5?9serverinfo?5types?5?9?5send?5empty?5@ ; `string'
PUBLIC	??_C@_0EK@MFOKJOIK@?5?9curves?5arg?5?5?5?5?5?5?5?9?5Elliptic?5cu@ ; `string'
PUBLIC	??_C@_0EN@BHNFHAEP@?5?9sigalgs?5arg?5?5?5?5?5?5?9?5Signature?5a@ ; `string'
PUBLIC	??_C@_0ED@MMODELKC@?5?9client_sigalgs?5arg?5?9?5Signature@ ; `string'
PUBLIC	??_C@_0EK@MJPJCKJC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5certifica@ ; `string'
PUBLIC	??_C@_0GJ@BLOKIDOO@?5?9nextprotoneg?5arg?5?9?5enable?5NPN?5@ ; `string'
PUBLIC	??_C@_0GK@ILJJODGL@?5?9alpn?5arg?5?5?5?5?5?5?5?5?5?9?5enable?5ALPN@ ; `string'
PUBLIC	??_C@_0EJ@DKJMGLID@?5?9legacy_renegotiation?5?9?5enable?5@ ; `string'
PUBLIC	??_C@_0FF@IDLIJFPH@?5?9use_srtp?5profiles?5?9?5Offer?5SRTP@ ; `string'
PUBLIC	??_C@_0DN@MIJBJIJH@?5?9keymatexport?5label?5?5?5?9?5Export?5@ ; `string'
PUBLIC	??_C@_0EL@MBBJFPLO@?5?9keymatexportlen?5len?5?5?9?5Export?5@ ; `string'
PUBLIC	??_C@_0BO@EJEAHALL@Can?8t?5use?5SSL_get_servername?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@OOEDJGNB@SRP?5parameters?3?6?$AA@	; `string'
PUBLIC	??_C@_03LDFPIHBN@?7N?$DN?$AA@			; `string'
PUBLIC	??_C@_04CJBFMKNC@?6?7g?$DN?$AA@			; `string'
PUBLIC	??_C@_0EA@KOBHGEOG@SRP?5param?5N?5and?5g?5are?5not?5known?5@ ; `string'
PUBLIC	??_C@_0BN@CDLPHCL@SRP?5param?5N?5and?5g?5rejected?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@HDOLKHPP@?4?2apps?2s_client?4c?$AA@	; `string'
PUBLIC	??_C@_0BA@DHKOJLMG@Malloc?5failure?6?$AA@	; `string'
PUBLIC	??_C@_08HKPOPMKK@SRP?5user?$AA@			; `string'
PUBLIC	??_C@_0BF@JEGFLCOO@Can?8t?5read?5Password?6?$AA@ ; `string'
PUBLIC	??_C@_0CB@DPBPIEJP@Protocols?5advertised?5by?5server?3?5@ ; `string'
PUBLIC	??_C@_02KEGNLNML@?0?5?$AA@			; `string'
PUBLIC	??_C@_0BM@NCNCDCOM@SERVERINFO?5FOR?5EXTENSION?5?$CFd?$AA@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_05CCOMPJJG@?9host?$AA@			; `string'
PUBLIC	??_C@_05HDLOEPOC@?9port?$AA@			; `string'
PUBLIC	??_C@_08FABEHMEN@?9connect?$AA@			; `string'
PUBLIC	??_C@_07FILEFCOC@?9verify?$AA@			; `string'
PUBLIC	??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_05DLEDECNE@?9cert?$AA@			; `string'
PUBLIC	??_C@_04LKNJOOFD@?9CRL?$AA@			; `string'
PUBLIC	??_C@_0O@FJDFGOOH@?9crl_download?$AA@		; `string'
PUBLIC	??_C@_09GHKKFCPJ@?9sess_out?$AA@		; `string'
PUBLIC	??_C@_08INMLDHJG@?9sess_in?$AA@			; `string'
PUBLIC	??_C@_09ECGGEOOO@?9certform?$AA@		; `string'
PUBLIC	??_C@_08PDJLLFEO@?9CRLform?$AA@			; `string'
PUBLIC	??_C@_0BF@JEHPJFIB@?9verify_return_error?$AA@	; `string'
PUBLIC	??_C@_0O@IOFAKFNC@?9verify_quiet?$AA@		; `string'
PUBLIC	??_C@_06DBECBIEA@?9brief?$AA@			; `string'
PUBLIC	??_C@_07KBCABHOD@?9prexit?$AA@			; `string'
PUBLIC	??_C@_05JIMBNDFL@?9crlf?$AA@			; `string'
PUBLIC	??_C@_06HONEMELG@?9quiet?$AA@			; `string'
PUBLIC	??_C@_08BPJEDGGD@?9ign_eof?$AA@			; `string'
PUBLIC	??_C@_0M@PIMNDHCE@?9no_ign_eof?$AA@		; `string'
PUBLIC	??_C@_06HBFFDCKE@?9pause?$AA@			; `string'
PUBLIC	??_C@_06OHOHKFPP@?9debug?$AA@			; `string'
PUBLIC	??_C@_0N@DOFNHFMN@?9tlsextdebug?$AA@		; `string'
PUBLIC	??_C@_07KDLKDLMI@?9status?$AA@			; `string'
PUBLIC	??_C@_04LFMLOHOA@?9msg?$AA@			; `string'
PUBLIC	??_C@_08OAMMFJFJ@?9msgfile?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0L@EKNPMKDB@?9showcerts?$AA@		; `string'
PUBLIC	??_C@_0L@DGAHAHFJ@?9nbio_test?$AA@		; `string'
PUBLIC	??_C@_06IFPFIOLF@?9state?$AA@			; `string'
PUBLIC	??_C@_0O@COHIAFOB@?9psk_identity?$AA@		; `string'
PUBLIC	??_C@_04LLANCHKO@?9psk?$AA@			; `string'
PUBLIC	??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_08CDOPKGGH@?9srpuser?$AA@			; `string'
PUBLIC	??_C@_08BAKPFIIA@?9srppass?$AA@			; `string'
PUBLIC	??_C@_0O@JBHNBGII@?9srp_strength?$AA@		; `string'
PUBLIC	??_C@_0CA@MGEDBAFN@SRP?5minimal?5length?5for?5N?5is?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0O@NAANMEJK@?9srp_lateuser?$AA@		; `string'
PUBLIC	??_C@_0BA@HGDBOPC@?9srp_moregroups?$AA@		; `string'
PUBLIC	??_C@_05IHFBIKKN@?9ssl3?$AA@			; `string'
PUBLIC	??_C@_07ODMKFECP@?9tls1_2?$AA@			; `string'
PUBLIC	??_C@_07MIOHAHOM@?9tls1_1?$AA@			; `string'
PUBLIC	??_C@_05BIEHJHLL@?9tls1?$AA@			; `string'
PUBLIC	??_C@_05DIDPLGID@?9dtls?$AA@			; `string'
PUBLIC	??_C@_06LCNEOKJO@?9dtls1?$AA@			; `string'
PUBLIC	??_C@_08CFINCDNK@?9dtls1_2?$AA@			; `string'
PUBLIC	??_C@_08MDOIANFM@?9timeout?$AA@			; `string'
PUBLIC	??_C@_04MIHAIBLG@?9mtu?$AA@			; `string'
PUBLIC	??_C@_0P@IADPNMPM@?9fallback_scsv?$AA@		; `string'
PUBLIC	??_C@_08OAHLMBGP@?9keyform?$AA@			; `string'
PUBLIC	??_C@_05NNOCMECB@?9pass?$AA@			; `string'
PUBLIC	??_C@_0M@MHFOFGHE@?9cert_chain?$AA@		; `string'
PUBLIC	??_C@_04FMEKFICB@?9key?$AA@			; `string'
PUBLIC	??_C@_0L@HGEOPGF@?9reconnect?$AA@		; `string'
PUBLIC	??_C@_07MNNNLALG@?9CApath?$AA@			; `string'
PUBLIC	??_C@_0N@IPPFFGOM@?9chainCApath?$AA@		; `string'
PUBLIC	??_C@_0O@NMJDGHEA@?9verifyCApath?$AA@		; `string'
PUBLIC	??_C@_0N@EBJMJDFN@?9build_chain?$AA@		; `string'
PUBLIC	??_C@_07EAFCHGPO@?9CAfile?$AA@			; `string'
PUBLIC	??_C@_0N@CHKJAKE@?9chainCAfile?$AA@		; `string'
PUBLIC	??_C@_0O@FBBMKBAI@?9verifyCAfile?$AA@		; `string'
PUBLIC	??_C@_0O@PMNNGHPN@?9nextprotoneg?$AA@		; `string'
PUBLIC	??_C@_05IPCCHAIL@?9alpn?$AA@			; `string'
PUBLIC	??_C@_0M@JIFAPBHK@?9serverinfo?$AA@		; `string'
PUBLIC	??_C@_05OHEBDJNH@?9nbio?$AA@			; `string'
PUBLIC	??_C@_09IBBJPNLN@?9starttls?$AA@		; `string'
PUBLIC	??_C@_04DCCEAEFJ@smtp?$AA@			; `string'
PUBLIC	??_C@_04DNAACBI@pop3?$AA@			; `string'
PUBLIC	??_C@_04CJJOKOB@imap?$AA@			; `string'
PUBLIC	??_C@_03LMDBDBEG@ftp?$AA@			; `string'
PUBLIC	??_C@_04ECPNJNJE@xmpp?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_0BD@KGIPPADG@?9ssl_client_engine?$AA@	; `string'
PUBLIC	??_C@_05LGFPCDPE@?9rand?$AA@			; `string'
PUBLIC	??_C@_0M@IEKJDKFH@?9servername?$AA@		; `string'
PUBLIC	??_C@_09BJOIJNBC@?9use_srtp?$AA@		; `string'
PUBLIC	??_C@_0O@HHCLPCNN@?9keymatexport?$AA@		; `string'
PUBLIC	??_C@_0BB@MLPFNLDC@?9keymatexportlen?$AA@	; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CG@GMAKMBJO@Error?5parsing?5?9nextprotoneg?5argu@ ; `string'
PUBLIC	??_C@_0CC@HCMIJPJF@Error?5getting?5client?5auth?5engine@ ; `string'
PUBLIC	??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ ; `string'
PUBLIC	??_C@_0CE@KPAFLOEO@client?5certificate?5private?5key?5f@ ; `string'
PUBLIC	??_C@_0BI@PGEJCCKA@client?5certificate?5file?$AA@ ; `string'
PUBLIC	??_C@_0BJ@LLIDDFFJ@client?5certificate?5chain?$AA@ ; `string'
PUBLIC	??_C@_0BD@PIKJPJLO@Error?5loading?5CRL?6?$AA@	; `string'
PUBLIC	??_C@_0BC@IKMGLJPK@Error?5adding?5CRL?6?$AA@	; `string'
PUBLIC	??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ ; `string'
PUBLIC	??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@HJJPNDHG@Error?5loading?5store?5locations?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@GPEALKDB@Error?5setting?5client?5auth?5engine@ ; `string'
PUBLIC	??_C@_0DI@FBFLLFGP@PSK?5key?5given?5or?5JPAKE?5in?5use?0?5s@ ; `string'
PUBLIC	??_C@_0BO@MDMDCKCI@Error?5parsing?5?9alpn?5argument?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@BPFDKLGC@Unable?5to?5set?5SRP?5username?6?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0BM@IGJCFOAJ@Can?8t?5open?5session?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@IEDADJGO@Unable?5to?5set?5TLS?5servername?5ext@ ; `string'
PUBLIC	??_C@_0BC@JOCHAJNG@connect?3errno?$DN?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@NADOOA@CONNECTED?$CI?$CF08X?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@FCELEJEG@turning?5on?5non?5blocking?5io?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@EFOPGOLI@getsockname?3errno?$DN?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@MCFEIGOI@MTU?5too?5small?4?5Must?5be?5at?5least?5@ ; `string'
PUBLIC	??_C@_0BD@LHDLOJJB@Failed?5to?5set?5MTU?6?$AA@	; `string'
PUBLIC	??_C@_0BK@PHAHJJON@EHLO?5openssl?4client?4net?$AN?6?$AA@ ; `string'
PUBLIC	??_C@_08EBJFDHCC@STARTTLS?$AA@			; `string'
PUBLIC	??_C@_0DJ@OPKCJHEL@didn?8t?5found?5starttls?5in?5server?5@ ; `string'
PUBLIC	??_C@_0L@ONDINJGD@STARTTLS?$AN?6?$AA@		; `string'
PUBLIC	??_C@_06FBDNPHJH@STLS?$AN?6?$AA@		; `string'
PUBLIC	??_C@_0P@MGFCPBHP@?4?5CAPABILITY?$AN?6?$AA@	; `string'
PUBLIC	??_C@_0DJ@JHIBNOHN@didn?8t?5found?5STARTTLS?5in?5server?5@ ; `string'
PUBLIC	??_C@_0N@NIGCLCLA@?4?5STARTTLS?$AN?6?$AA@	; `string'
PUBLIC	??_C@_0L@OHGLBBLC@AUTH?5TLS?$AN?6?$AA@		; `string'
PUBLIC	??_C@_0GM@FECAPAJN@?$DMstream?3stream?5xmlns?3stream?$DN?8htt@ ; `string'
PUBLIC	??_C@_0DC@NBLOOCGC@?$DMstarttls?5xmlns?$DN?8urn?3ietf?3params@ ; `string'
PUBLIC	??_C@_0BC@LEBLAAG@?1stream?3features?$DO?$AA@	; `string'
PUBLIC	??_C@_0DE@GLBLEBGP@?$DMstarttls?5xmlns?$DN?8urn?3ietf?3params@ ; `string'
PUBLIC	??_C@_08GCBBJIEO@?$DMproceed?$AA@		; `string'
PUBLIC	??_C@_0BP@MDBFDAKI@Error?5writing?5session?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@KAHEJIIO@CONNECTION?5ESTABLISHED?6?$AA@ ; `string'
PUBLIC	??_C@_0CE@OHKMHPKO@drop?5connection?5and?5then?5reconne@ ; `string'
PUBLIC	??_C@_0P@LOJOMIHN@bad?5select?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0BB@LACOGFPG@TIMEOUT?5occured?6?$AA@	; `string'
PUBLIC	??_C@_0P@OPONFPJP@write?5W?5BLOCK?6?$AA@	; `string'
PUBLIC	??_C@_0P@KFHKBKNA@write?5R?5BLOCK?6?$AA@	; `string'
PUBLIC	??_C@_0P@DAFEJAEO@write?5X?5BLOCK?6?$AA@	; `string'
PUBLIC	??_C@_09NMGONKDH@shutdown?6?$AA@		; `string'
PUBLIC	??_C@_0BA@ODFKGKPA@write?3errno?$DN?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_05PHCCFBBB@DONE?6?$AA@			; `string'
PUBLIC	??_C@_0O@LLFHAMNO@read?5W?5BLOCK?6?$AA@		; `string'
PUBLIC	??_C@_0O@PBMAEJJB@read?5R?5BLOCK?6?$AA@		; `string'
PUBLIC	??_C@_0O@GEOOMDAP@read?5X?5BLOCK?6?$AA@		; `string'
PUBLIC	??_C@_0BN@DEIKJIGB@CONNECTION?5CLOSED?5BY?5SERVER?6?$AA@ ; `string'
PUBLIC	??_C@_0P@OCNFKBKF@read?3errno?$DN?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_07HGLGAKII@closed?6?$AA@			; `string'
PUBLIC	??_C@_1CE@OEKFEFMG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAs?$AA_?$AAc?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?4?$AAc?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@KKDDCBII@?$AAl?$AAf?$AA_?$AAn?$AAu?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_0P@HJFNKGPE@RENEGOTIATING?6?$AA@		; `string'
PUBLIC	??_C@_0O@ICIFEBNC@HEARTBEATING?6?$AA@		; `string'
PUBLIC	??_C@_0BH@EDGFPEIJ@?9?9?9?6Certificate?5chain?6?$AA@ ; `string'
PUBLIC	??_C@_09HDEJJOFD@?$CF2d?5s?3?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_08FCBCKNAC@?5?5?5i?3?$CFs?6?$AA@		; `string'
PUBLIC	??_C@_04JIKOKJIN@?9?9?9?6?$AA@			; `string'
PUBLIC	??_C@_0BE@CIPDPBOH@Server?5certificate?6?$AA@	; `string'
PUBLIC	??_C@_0M@JEDHOBJK@subject?$DN?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0L@HCGAGKOB@issuer?$DN?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BP@KIJJNOJC@no?5peer?5certificate?5available?6?$AA@ ; `string'
PUBLIC	??_C@_0CM@KDCDCBFK@?9?9?9?6Acceptable?5client?5certificat@ ; `string'
PUBLIC	??_C@_0CJ@LNBNMGME@?9?9?9?6No?5client?5certificate?5CA?5nam@ ; `string'
PUBLIC	??_C@_0DA@PBGEFJML@?9?9?9?6Ciphers?5common?5between?5both?5@ ; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_0DM@IBEKNAJH@?9?9?9?6SSL?5handshake?5has?5read?5?$CFld?5b@ ; `string'
PUBLIC	??_C@_0N@GOGBFOHK@?9?9?9?6Reused?0?5?$AA@	; `string'
PUBLIC	??_C@_09CFNAMCPG@?9?9?9?6New?0?5?$AA@		; `string'
PUBLIC	??_C@_0BC@CNENGAEP@?$CFs?0?5Cipher?5is?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@FPGCCJFF@Server?5public?5key?5is?5?$CFd?5bit?6?$AA@ ; `string'
PUBLIC	??_C@_04CGMGFKEF@?5NOT?$AA@			; `string'
PUBLIC	??_C@_0CF@HNLNDOIK@Secure?5Renegotiation?5IS?$CFs?5suppor@ ; `string'
PUBLIC	??_C@_04OKGDLNCL@NONE?$AA@			; `string'
PUBLIC	??_C@_0BB@LGMJFOIL@Compression?3?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0P@GDKPJDML@Expansion?3?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BF@PHJGCFEL@Next?5protocol?3?5?$CI?$CFd?$CJ?5?$AA@ ; `string'
PUBLIC	??_C@_0BA@OGCHPHFE@ALPN?5protocol?3?5?$AA@	; `string'
PUBLIC	??_C@_0BE@FNAAOJAJ@No?5ALPN?5negotiated?6?$AA@	; `string'
PUBLIC	??_C@_0CH@FCLNMFKH@SRTP?5Extension?5negotiated?0?5profi@ ; `string'
PUBLIC	??_C@_0BL@LPMKCGAM@Keying?5material?5exporter?3?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@CNJDMPIH@?5?5?5?5Label?3?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@HGLPNLLM@?5?5?5?5Length?3?5?$CFi?5bytes?6?$AA@ ; `string'
PUBLIC	??_C@_0L@DLCKNELL@?5?5?5?5Error?6?$AA@		; `string'
PUBLIC	??_C@_0BG@DLJBAMO@?5?5?5?5Keying?5material?3?5?$AA@ ; `string'
PUBLIC	??_C@_04JFFKLGJF@?$CF02X?$AA@			; `string'
PUBLIC	??_C@_0BA@JHILPHML@OCSP?5response?3?5?$AA@	; `string'
PUBLIC	??_C@_0BC@HNJKPPAA@no?5response?5sent?6?$AA@	; `string'
PUBLIC	??_C@_0BG@ICBBIDNI@response?5parse?5error?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@FLGIDGJF@?6?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@ ; `string'
PUBLIC	??_C@_0CI@PKCPDAIB@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@ ; `string'
EXTRN	__imp___wassert:PROC
EXTRN	__imp__isxdigit:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__atol:PROC
EXTRN	__imp__strstr:PROC
EXTRN	___WSAFDIsSet@8:PROC
EXTRN	__imp__closesocket@4:PROC
EXTRN	__imp__getsockname@12:PROC
EXTRN	__imp__select@20:PROC
EXTRN	__imp__shutdown@8:PROC
EXTRN	__imp__WSAGetLastError@0:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BIO_set_callback:PROC
EXTRN	_BIO_set_callback_arg:PROC
EXTRN	_BIO_number_read:PROC
EXTRN	_BIO_number_written:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_gets:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_push:PROC
EXTRN	_BIO_pop:PROC
EXTRN	_BIO_s_null:PROC
EXTRN	_BIO_f_buffer:PROC
EXTRN	_BIO_f_nbio_test:PROC
EXTRN	_BIO_dump_indent:PROC
EXTRN	_BIO_socket_ioctl:PROC
EXTRN	_BIO_new_socket:PROC
EXTRN	_BIO_new_dgram:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_add_word:PROC
EXTRN	_BN_cmp:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_mod_exp:PROC
EXTRN	_BN_print:PROC
EXTRN	_BN_rshift1:PROC
EXTRN	_BN_hex2bn:PROC
EXTRN	_BN_is_prime_ex:PROC
EXTRN	_EVP_PKEY_bits:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_X509_VERIFY_PARAM_free:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_CRL_free:PROC
EXTRN	_X509_NAME_oneline:PROC
EXTRN	_X509_get_issuer_name:PROC
EXTRN	_X509_get_subject_name:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_RAND_status:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ENGINE_by_id:PROC
EXTRN	_ENGINE_free:PROC
EXTRN	_OCSP_RESPONSE_free:PROC
EXTRN	_d2i_OCSP_RESPONSE:PROC
EXTRN	_OCSP_RESPONSE_print:PROC
EXTRN	_app_RAND_load_file:PROC
EXTRN	_app_RAND_load_files:PROC
EXTRN	_password_callback:PROC
EXTRN	_str2fmt:PROC
EXTRN	_app_passwd:PROC
EXTRN	_load_cert:PROC
EXTRN	_load_crl:PROC
EXTRN	_load_key:PROC
EXTRN	_load_certs:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_args_verify:PROC
EXTRN	_next_protos_parse:PROC
EXTRN	_raw_read_stdin:PROC
EXTRN	_raw_write_stdout:PROC
EXTRN	_PEM_write_bio:PROC
EXTRN	_PEM_write_bio_X509:PROC
EXTRN	_SSL_set_msg_callback:PROC
EXTRN	_SSL_CTX_set_info_callback:PROC
EXTRN	_SSL_CTX_set_client_cert_engine:PROC
EXTRN	_SSL_CTX_set_next_proto_select_cb:PROC
EXTRN	_SSL_get0_next_proto_negotiated:PROC
EXTRN	_SSL_select_next_proto:PROC
EXTRN	_SSL_CTX_set_alpn_protos:PROC
EXTRN	_SSL_get0_alpn_selected:PROC
EXTRN	_SSL_CTX_set_psk_client_callback:PROC
EXTRN	_SSL_CTX_add_client_custom_ext:PROC
EXTRN	_SSL_get_servername:PROC
EXTRN	_SSL_get_servername_type:PROC
EXTRN	_SSL_export_keying_material:PROC
EXTRN	_SSL_CTX_set_tlsext_use_srtp:PROC
EXTRN	_SSL_get_selected_srtp_profile:PROC
EXTRN	_PEM_read_bio_SSL_SESSION:PROC
EXTRN	_PEM_write_bio_SSL_SESSION:PROC
EXTRN	_SSL_CTX_new:PROC
EXTRN	_SSL_CTX_free:PROC
EXTRN	_SSL_get_current_cipher:PROC
EXTRN	_SSL_CIPHER_get_version:PROC
EXTRN	_SSL_CIPHER_get_name:PROC
EXTRN	_SSL_get_fd:PROC
EXTRN	_SSL_get_shared_ciphers:PROC
EXTRN	_SSL_pending:PROC
EXTRN	_SSL_set_bio:PROC
EXTRN	_SSL_get_rbio:PROC
EXTRN	_SSL_get_wbio:PROC
EXTRN	_SSL_load_error_strings:PROC
EXTRN	_SSL_SESSION_print:PROC
EXTRN	_SSL_SESSION_free:PROC
EXTRN	_SSL_set_session:PROC
EXTRN	_SSL_get_peer_certificate:PROC
EXTRN	_SSL_get_peer_cert_chain:PROC
EXTRN	_SSL_CTX_set_verify:PROC
EXTRN	_SSL_new:PROC
EXTRN	_SSL_CTX_set1_param:PROC
EXTRN	_SSL_CTX_set_srp_username:PROC
EXTRN	_SSL_CTX_set_srp_strength:PROC
EXTRN	_SSL_CTX_set_srp_client_pwd_callback:PROC
EXTRN	_SSL_CTX_set_srp_verify_param_callback:PROC
EXTRN	_SSL_CTX_set_srp_cb_arg:PROC
EXTRN	_SSL_get_srp_g:PROC
EXTRN	_SSL_get_srp_N:PROC
EXTRN	_SSL_free:PROC
EXTRN	_SSL_read:PROC
EXTRN	_SSL_write:PROC
EXTRN	_SSL_ctrl:PROC
EXTRN	_SSL_callback_ctrl:PROC
EXTRN	_SSL_CTX_ctrl:PROC
EXTRN	_SSL_CTX_callback_ctrl:PROC
EXTRN	_SSL_get_error:PROC
EXTRN	_SSLv3_client_method:PROC
EXTRN	_SSLv23_client_method:PROC
EXTRN	_TLSv1_client_method:PROC
EXTRN	_TLSv1_1_client_method:PROC
EXTRN	_TLSv1_2_client_method:PROC
EXTRN	_DTLSv1_client_method:PROC
EXTRN	_DTLSv1_2_client_method:PROC
EXTRN	_DTLS_client_method:PROC
EXTRN	_SSL_renegotiate:PROC
EXTRN	_SSL_shutdown:PROC
EXTRN	_SSL_get_client_CA_list:PROC
EXTRN	_SSL_set_connect_state:PROC
EXTRN	_SSL_library_init:PROC
EXTRN	_SSL_version:PROC
EXTRN	_SSL_CTX_set_default_verify_paths:PROC
EXTRN	_SSL_CTX_load_verify_locations:PROC
EXTRN	_SSL_get_session:PROC
EXTRN	_SSL_state:PROC
EXTRN	_SSL_get_current_compression:PROC
EXTRN	_SSL_get_current_expansion:PROC
EXTRN	_SSL_COMP_get_name:PROC
EXTRN	_SSL_set_debug:PROC
EXTRN	_SSL_cache_hit:PROC
EXTRN	_SSL_CONF_CTX_new:PROC
EXTRN	_SSL_CONF_CTX_free:PROC
EXTRN	_SSL_CONF_CTX_set_flags:PROC
EXTRN	_SRP_check_known_gN_param:PROC
EXTRN	__imp___kbhit:PROC
EXTRN	_verify_callback:PROC
EXTRN	_set_cert_key_stuff:PROC
EXTRN	_ssl_print_sigalgs:PROC
EXTRN	_ssl_print_tmp_key:PROC
EXTRN	_init_client:PROC
EXTRN	_extract_host_port:PROC
EXTRN	_bio_dump_callback:PROC
EXTRN	_apps_ssl_info_callback:PROC
EXTRN	_msg_cb:PROC
EXTRN	_tlsext_cb:PROC
EXTRN	_ssl_ctx_set_excert:PROC
EXTRN	_ssl_excert_free:PROC
EXTRN	_args_excert:PROC
EXTRN	_load_excert:PROC
EXTRN	_print_ssl_summary:PROC
EXTRN	_args_ssl:PROC
EXTRN	_args_ssl_call:PROC
EXTRN	_ssl_ctx_add_crls:PROC
EXTRN	_ssl_load_stores:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_bio_err:DWORD
EXTRN	_psk_key:DWORD
EXTRN	_verify_depth:DWORD
EXTRN	_verify_error:DWORD
EXTRN	_verify_return_error:DWORD
EXTRN	_verify_quiet:DWORD
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_next_proto DB	0cH DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0CI@PKCPDAIB@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
CONST	SEGMENT
??_C@_0CI@PKCPDAIB@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@ DB '='
	DB	'=====================================', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FLGIDGJF@?6?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
CONST	SEGMENT
??_C@_0CJ@FLGIDGJF@?6?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@ DB 0aH
	DB	'======================================', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@ICBBIDNI@response?5parse?5error?6?$AA@
CONST	SEGMENT
??_C@_0BG@ICBBIDNI@response?5parse?5error?6?$AA@ DB 'response parse error'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HNJKPPAA@no?5response?5sent?6?$AA@
CONST	SEGMENT
??_C@_0BC@HNJKPPAA@no?5response?5sent?6?$AA@ DB 'no response sent', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JHILPHML@OCSP?5response?3?5?$AA@
CONST	SEGMENT
??_C@_0BA@JHILPHML@OCSP?5response?3?5?$AA@ DB 'OCSP response: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFFKLGJF@?$CF02X?$AA@
CONST	SEGMENT
??_C@_04JFFKLGJF@?$CF02X?$AA@ DB '%02X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DLJBAMO@?5?5?5?5Keying?5material?3?5?$AA@
CONST	SEGMENT
??_C@_0BG@DLJBAMO@?5?5?5?5Keying?5material?3?5?$AA@ DB '    Keying materi'
	DB	'al: ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DLCKNELL@?5?5?5?5Error?6?$AA@
CONST	SEGMENT
??_C@_0L@DLCKNELL@?5?5?5?5Error?6?$AA@ DB '    Error', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HGLPNLLM@?5?5?5?5Length?3?5?$CFi?5bytes?6?$AA@
CONST	SEGMENT
??_C@_0BG@HGLPNLLM@?5?5?5?5Length?3?5?$CFi?5bytes?6?$AA@ DB '    Length: '
	DB	'%i bytes', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CNJDMPIH@?5?5?5?5Label?3?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BB@CNJDMPIH@?5?5?5?5Label?3?5?8?$CFs?8?6?$AA@ DB '    Label: ''%s'''
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LPMKCGAM@Keying?5material?5exporter?3?6?$AA@
CONST	SEGMENT
??_C@_0BL@LPMKCGAM@Keying?5material?5exporter?3?6?$AA@ DB 'Keying materia'
	DB	'l exporter:', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@FCLNMFKH@SRTP?5Extension?5negotiated?0?5profi@
CONST	SEGMENT
??_C@_0CH@FCLNMFKH@SRTP?5Extension?5negotiated?0?5profi@ DB 'SRTP Extensi'
	DB	'on negotiated, profile=%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FNAAOJAJ@No?5ALPN?5negotiated?6?$AA@
CONST	SEGMENT
??_C@_0BE@FNAAOJAJ@No?5ALPN?5negotiated?6?$AA@ DB 'No ALPN negotiated', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OGCHPHFE@ALPN?5protocol?3?5?$AA@
CONST	SEGMENT
??_C@_0BA@OGCHPHFE@ALPN?5protocol?3?5?$AA@ DB 'ALPN protocol: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PHJGCFEL@Next?5protocol?3?5?$CI?$CFd?$CJ?5?$AA@
CONST	SEGMENT
??_C@_0BF@PHJGCFEL@Next?5protocol?3?5?$CI?$CFd?$CJ?5?$AA@ DB 'Next protoc'
	DB	'ol: (%d) ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GDKPJDML@Expansion?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0P@GDKPJDML@Expansion?3?5?$CFs?6?$AA@ DB 'Expansion: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LGMJFOIL@Compression?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BB@LGMJFOIL@Compression?3?5?$CFs?6?$AA@ DB 'Compression: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKGDLNCL@NONE?$AA@
CONST	SEGMENT
??_C@_04OKGDLNCL@NONE?$AA@ DB 'NONE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HNLNDOIK@Secure?5Renegotiation?5IS?$CFs?5suppor@
CONST	SEGMENT
??_C@_0CF@HNLNDOIK@Secure?5Renegotiation?5IS?$CFs?5suppor@ DB 'Secure Ren'
	DB	'egotiation IS%s supported', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGMGFKEF@?5NOT?$AA@
CONST	SEGMENT
??_C@_04CGMGFKEF@?5NOT?$AA@ DB ' NOT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FPGCCJFF@Server?5public?5key?5is?5?$CFd?5bit?6?$AA@
CONST	SEGMENT
??_C@_0BN@FPGCCJFF@Server?5public?5key?5is?5?$CFd?5bit?6?$AA@ DB 'Server '
	DB	'public key is %d bit', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CNENGAEP@?$CFs?0?5Cipher?5is?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BC@CNENGAEP@?$CFs?0?5Cipher?5is?5?$CFs?6?$AA@ DB '%s, Cipher is %s'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09CFNAMCPG@?9?9?9?6New?0?5?$AA@
CONST	SEGMENT
??_C@_09CFNAMCPG@?9?9?9?6New?0?5?$AA@ DB '---', 0aH, 'New, ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GOGBFOHK@?9?9?9?6Reused?0?5?$AA@
CONST	SEGMENT
??_C@_0N@GOGBFOHK@?9?9?9?6Reused?0?5?$AA@ DB '---', 0aH, 'Reused, ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@IBEKNAJH@?9?9?9?6SSL?5handshake?5has?5read?5?$CFld?5b@
CONST	SEGMENT
??_C@_0DM@IBEKNAJH@?9?9?9?6SSL?5handshake?5has?5read?5?$CFld?5b@ DB '---', 0aH
	DB	'SSL handshake has read %ld bytes and written %ld bytes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PBGEFJML@?9?9?9?6Ciphers?5common?5between?5both?5@
CONST	SEGMENT
??_C@_0DA@PBGEFJML@?9?9?9?6Ciphers?5common?5between?5both?5@ DB '---', 0aH
	DB	'Ciphers common between both SSL endpoints:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@LNBNMGME@?9?9?9?6No?5client?5certificate?5CA?5nam@
CONST	SEGMENT
??_C@_0CJ@LNBNMGME@?9?9?9?6No?5client?5certificate?5CA?5nam@ DB '---', 0aH
	DB	'No client certificate CA names sent', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KDCDCBFK@?9?9?9?6Acceptable?5client?5certificat@
CONST	SEGMENT
??_C@_0CM@KDCDCBFK@?9?9?9?6Acceptable?5client?5certificat@ DB '---', 0aH, 'A'
	DB	'cceptable client certificate CA names', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KIJJNOJC@no?5peer?5certificate?5available?6?$AA@
CONST	SEGMENT
??_C@_0BP@KIJJNOJC@no?5peer?5certificate?5available?6?$AA@ DB 'no peer ce'
	DB	'rtificate available', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HCGAGKOB@issuer?$DN?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0L@HCGAGKOB@issuer?$DN?$CFs?6?$AA@ DB 'issuer=%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JEDHOBJK@subject?$DN?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0M@JEDHOBJK@subject?$DN?$CFs?6?$AA@ DB 'subject=%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CIPDPBOH@Server?5certificate?6?$AA@
CONST	SEGMENT
??_C@_0BE@CIPDPBOH@Server?5certificate?6?$AA@ DB 'Server certificate', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04JIKOKJIN@?9?9?9?6?$AA@
CONST	SEGMENT
??_C@_04JIKOKJIN@?9?9?9?6?$AA@ DB '---', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FCBCKNAC@?5?5?5i?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_08FCBCKNAC@?5?5?5i?3?$CFs?6?$AA@ DB '   i:%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HDEJJOFD@?$CF2d?5s?3?$CFs?6?$AA@
CONST	SEGMENT
??_C@_09HDEJJOFD@?$CF2d?5s?3?$CFs?6?$AA@ DB '%2d s:%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EDGFPEIJ@?9?9?9?6Certificate?5chain?6?$AA@
CONST	SEGMENT
??_C@_0BH@EDGFPEIJ@?9?9?9?6Certificate?5chain?6?$AA@ DB '---', 0aH, 'Cert'
	DB	'ificate chain', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ICIFEBNC@HEARTBEATING?6?$AA@
CONST	SEGMENT
??_C@_0O@ICIFEBNC@HEARTBEATING?6?$AA@ DB 'HEARTBEATING', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HJFNKGPE@RENEGOTIATING?6?$AA@
CONST	SEGMENT
??_C@_0P@HJFNKGPE@RENEGOTIATING?6?$AA@ DB 'RENEGOTIATING', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KKDDCBII@?$AAl?$AAf?$AA_?$AAn?$AAu?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@KKDDCBII@?$AAl?$AAf?$AA_?$AAn?$AAu?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'l'
	DB	00H, 'f', 00H, '_', 00H, 'n', 00H, 'u', 00H, 'm', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@OEKFEFMG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAs?$AA_?$AAc?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?4?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@OEKFEFMG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAs?$AA_?$AAc?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?4?$AAc?$AA?$AA@ DB '.'
	DB	00H, '\', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 's', 00H, '\', 00H
	DB	's', 00H, '_', 00H, 'c', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, '.', 00H, 'c', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HGLGAKII@closed?6?$AA@
CONST	SEGMENT
??_C@_07HGLGAKII@closed?6?$AA@ DB 'closed', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OCNFKBKF@read?3errno?$DN?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0P@OCNFKBKF@read?3errno?$DN?$CFd?6?$AA@ DB 'read:errno=%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DEIKJIGB@CONNECTION?5CLOSED?5BY?5SERVER?6?$AA@
CONST	SEGMENT
??_C@_0BN@DEIKJIGB@CONNECTION?5CLOSED?5BY?5SERVER?6?$AA@ DB 'CONNECTION C'
	DB	'LOSED BY SERVER', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GEOOMDAP@read?5X?5BLOCK?6?$AA@
CONST	SEGMENT
??_C@_0O@GEOOMDAP@read?5X?5BLOCK?6?$AA@ DB 'read X BLOCK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PBMAEJJB@read?5R?5BLOCK?6?$AA@
CONST	SEGMENT
??_C@_0O@PBMAEJJB@read?5R?5BLOCK?6?$AA@ DB 'read R BLOCK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LLFHAMNO@read?5W?5BLOCK?6?$AA@
CONST	SEGMENT
??_C@_0O@LLFHAMNO@read?5W?5BLOCK?6?$AA@ DB 'read W BLOCK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PHCCFBBB@DONE?6?$AA@
CONST	SEGMENT
??_C@_05PHCCFBBB@DONE?6?$AA@ DB 'DONE', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ODFKGKPA@write?3errno?$DN?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BA@ODFKGKPA@write?3errno?$DN?$CFd?6?$AA@ DB 'write:errno=%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NMGONKDH@shutdown?6?$AA@
CONST	SEGMENT
??_C@_09NMGONKDH@shutdown?6?$AA@ DB 'shutdown', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DAFEJAEO@write?5X?5BLOCK?6?$AA@
CONST	SEGMENT
??_C@_0P@DAFEJAEO@write?5X?5BLOCK?6?$AA@ DB 'write X BLOCK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KFHKBKNA@write?5R?5BLOCK?6?$AA@
CONST	SEGMENT
??_C@_0P@KFHKBKNA@write?5R?5BLOCK?6?$AA@ DB 'write R BLOCK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OPONFPJP@write?5W?5BLOCK?6?$AA@
CONST	SEGMENT
??_C@_0P@OPONFPJP@write?5W?5BLOCK?6?$AA@ DB 'write W BLOCK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LACOGFPG@TIMEOUT?5occured?6?$AA@
CONST	SEGMENT
??_C@_0BB@LACOGFPG@TIMEOUT?5occured?6?$AA@ DB 'TIMEOUT occured', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LOJOMIHN@bad?5select?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0P@LOJOMIHN@bad?5select?5?$CFd?6?$AA@ DB 'bad select %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OHKMHPKO@drop?5connection?5and?5then?5reconne@
CONST	SEGMENT
??_C@_0CE@OHKMHPKO@drop?5connection?5and?5then?5reconne@ DB 'drop connect'
	DB	'ion and then reconnect', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KAHEJIIO@CONNECTION?5ESTABLISHED?6?$AA@
CONST	SEGMENT
??_C@_0BI@KAHEJIIO@CONNECTION?5ESTABLISHED?6?$AA@ DB 'CONNECTION ESTABLIS'
	DB	'HED', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MDBFDAKI@Error?5writing?5session?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BP@MDBFDAKI@Error?5writing?5session?5file?5?$CFs?6?$AA@ DB 'Error '
	DB	'writing session file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GCBBJIEO@?$DMproceed?$AA@
CONST	SEGMENT
??_C@_08GCBBJIEO@?$DMproceed?$AA@ DB '<proceed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GLBLEBGP@?$DMstarttls?5xmlns?$DN?8urn?3ietf?3params@
CONST	SEGMENT
??_C@_0DE@GLBLEBGP@?$DMstarttls?5xmlns?$DN?8urn?3ietf?3params@ DB '<start'
	DB	'tls xmlns=''urn:ietf:params:xml:ns:xmpp-tls''/>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LEBLAAG@?1stream?3features?$DO?$AA@
CONST	SEGMENT
??_C@_0BC@LEBLAAG@?1stream?3features?$DO?$AA@ DB '/stream:features>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NBLOOCGC@?$DMstarttls?5xmlns?$DN?8urn?3ietf?3params@
CONST	SEGMENT
??_C@_0DC@NBLOOCGC@?$DMstarttls?5xmlns?$DN?8urn?3ietf?3params@ DB '<start'
	DB	'tls xmlns=''urn:ietf:params:xml:ns:xmpp-tls''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GM@FECAPAJN@?$DMstream?3stream?5xmlns?3stream?$DN?8htt@
CONST	SEGMENT
??_C@_0GM@FECAPAJN@?$DMstream?3stream?5xmlns?3stream?$DN?8htt@ DB '<strea'
	DB	'm:stream xmlns:stream=''http://etherx.jabber.org/streams'' xm'
	DB	'lns=''jabber:client'' to=''%s'' version=''1.0''>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OHGLBBLC@AUTH?5TLS?$AN?6?$AA@
CONST	SEGMENT
??_C@_0L@OHGLBBLC@AUTH?5TLS?$AN?6?$AA@ DB 'AUTH TLS', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NIGCLCLA@?4?5STARTTLS?$AN?6?$AA@
CONST	SEGMENT
??_C@_0N@NIGCLCLA@?4?5STARTTLS?$AN?6?$AA@ DB '. STARTTLS', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@JHIBNOHN@didn?8t?5found?5STARTTLS?5in?5server?5@
CONST	SEGMENT
??_C@_0DJ@JHIBNOHN@didn?8t?5found?5STARTTLS?5in?5server?5@ DB 'didn''t fo'
	DB	'und STARTTLS in server response, try anyway...', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MGFCPBHP@?4?5CAPABILITY?$AN?6?$AA@
CONST	SEGMENT
??_C@_0P@MGFCPBHP@?4?5CAPABILITY?$AN?6?$AA@ DB '. CAPABILITY', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FBDNPHJH@STLS?$AN?6?$AA@
CONST	SEGMENT
??_C@_06FBDNPHJH@STLS?$AN?6?$AA@ DB 'STLS', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ONDINJGD@STARTTLS?$AN?6?$AA@
CONST	SEGMENT
??_C@_0L@ONDINJGD@STARTTLS?$AN?6?$AA@ DB 'STARTTLS', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@OPKCJHEL@didn?8t?5found?5starttls?5in?5server?5@
CONST	SEGMENT
??_C@_0DJ@OPKCJHEL@didn?8t?5found?5starttls?5in?5server?5@ DB 'didn''t fo'
	DB	'und starttls in server response, try anyway...', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EBJFDHCC@STARTTLS?$AA@
CONST	SEGMENT
??_C@_08EBJFDHCC@STARTTLS?$AA@ DB 'STARTTLS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PHAHJJON@EHLO?5openssl?4client?4net?$AN?6?$AA@
CONST	SEGMENT
??_C@_0BK@PHAHJJON@EHLO?5openssl?4client?4net?$AN?6?$AA@ DB 'EHLO openssl'
	DB	'.client.net', 0dH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LHDLOJJB@Failed?5to?5set?5MTU?6?$AA@
CONST	SEGMENT
??_C@_0BD@LHDLOJJB@Failed?5to?5set?5MTU?6?$AA@ DB 'Failed to set MTU', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MCFEIGOI@MTU?5too?5small?4?5Must?5be?5at?5least?5@
CONST	SEGMENT
??_C@_0CF@MCFEIGOI@MTU?5too?5small?4?5Must?5be?5at?5least?5@ DB 'MTU too '
	DB	'small. Must be at least %ld', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EFOPGOLI@getsockname?3errno?$DN?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BG@EFOPGOLI@getsockname?3errno?$DN?$CFd?6?$AA@ DB 'getsockname:err'
	DB	'no=%d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FCELEJEG@turning?5on?5non?5blocking?5io?6?$AA@
CONST	SEGMENT
??_C@_0BM@FCELEJEG@turning?5on?5non?5blocking?5io?6?$AA@ DB 'turning on n'
	DB	'on blocking io', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NADOOA@CONNECTED?$CI?$CF08X?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BB@NADOOA@CONNECTED?$CI?$CF08X?$CJ?6?$AA@ DB 'CONNECTED(%08X)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JOCHAJNG@connect?3errno?$DN?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BC@JOCHAJNG@connect?3errno?$DN?$CFd?6?$AA@ DB 'connect:errno=%d', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IEDADJGO@Unable?5to?5set?5TLS?5servername?5ext@
CONST	SEGMENT
??_C@_0CJ@IEDADJGO@Unable?5to?5set?5TLS?5servername?5ext@ DB 'Unable to s'
	DB	'et TLS servername extension.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IGJCFOAJ@Can?8t?5open?5session?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BM@IGJCFOAJ@Can?8t?5open?5session?5file?5?$CFs?6?$AA@ DB 'Can''t o'
	DB	'pen session file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BPFDKLGC@Unable?5to?5set?5SRP?5username?6?$AA@
CONST	SEGMENT
??_C@_0BM@BPFDKLGC@Unable?5to?5set?5SRP?5username?6?$AA@ DB 'Unable to se'
	DB	't SRP username', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MDMDCKCI@Error?5parsing?5?9alpn?5argument?6?$AA@
CONST	SEGMENT
??_C@_0BO@MDMDCKCI@Error?5parsing?5?9alpn?5argument?6?$AA@ DB 'Error pars'
	DB	'ing -alpn argument', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@FBFLLFGP@PSK?5key?5given?5or?5JPAKE?5in?5use?0?5s@
CONST	SEGMENT
??_C@_0DI@FBFLLFGP@PSK?5key?5given?5or?5JPAKE?5in?5use?0?5s@ DB 'PSK key '
	DB	'given or JPAKE in use, setting client callback', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GPEALKDB@Error?5setting?5client?5auth?5engine@
CONST	SEGMENT
??_C@_0CC@GPEALKDB@Error?5setting?5client?5auth?5engine@ DB 'Error settin'
	DB	'g client auth engine', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HJJPNDHG@Error?5loading?5store?5locations?6?$AA@
CONST	SEGMENT
??_C@_0BP@HJJPNDHG@Error?5loading?5store?5locations?6?$AA@ DB 'Error load'
	DB	'ing store locations', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
CONST	SEGMENT
??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@ DB '%ld sem'
	DB	'i-random bytes loaded', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
CONST	SEGMENT
??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@ DB 'warning, n'
	DB	'ot much extra random data, consider using the -rand option', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IKMGLJPK@Error?5adding?5CRL?6?$AA@
CONST	SEGMENT
??_C@_0BC@IKMGLJPK@Error?5adding?5CRL?6?$AA@ DB 'Error adding CRL', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PIKJPJLO@Error?5loading?5CRL?6?$AA@
CONST	SEGMENT
??_C@_0BD@PIKJPJLO@Error?5loading?5CRL?6?$AA@ DB 'Error loading CRL', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LLIDDFFJ@client?5certificate?5chain?$AA@
CONST	SEGMENT
??_C@_0BJ@LLIDDFFJ@client?5certificate?5chain?$AA@ DB 'client certificate'
	DB	' chain', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PGEJCCKA@client?5certificate?5file?$AA@
CONST	SEGMENT
??_C@_0BI@PGEJCCKA@client?5certificate?5file?$AA@ DB 'client certificate '
	DB	'file', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@KPAFLOEO@client?5certificate?5private?5key?5f@
CONST	SEGMENT
??_C@_0CE@KPAFLOEO@client?5certificate?5private?5key?5f@ DB 'client certi'
	DB	'ficate private key file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
CONST	SEGMENT
??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@ DB 'Error getting pass'
	DB	'word', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HCMIJPJF@Error?5getting?5client?5auth?5engine@
CONST	SEGMENT
??_C@_0CC@HCMIJPJF@Error?5getting?5client?5auth?5engine@ DB 'Error gettin'
	DB	'g client auth engine', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GMAKMBJO@Error?5parsing?5?9nextprotoneg?5argu@
CONST	SEGMENT
??_C@_0CG@GMAKMBJO@Error?5parsing?5?9nextprotoneg?5argu@ DB 'Error parsin'
	DB	'g -nextprotoneg argument', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MLPFNLDC@?9keymatexportlen?$AA@
CONST	SEGMENT
??_C@_0BB@MLPFNLDC@?9keymatexportlen?$AA@ DB '-keymatexportlen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HHCLPCNN@?9keymatexport?$AA@
CONST	SEGMENT
??_C@_0O@HHCLPCNN@?9keymatexport?$AA@ DB '-keymatexport', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BJOIJNBC@?9use_srtp?$AA@
CONST	SEGMENT
??_C@_09BJOIJNBC@?9use_srtp?$AA@ DB '-use_srtp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IEKJDKFH@?9servername?$AA@
CONST	SEGMENT
??_C@_0M@IEKJDKFH@?9servername?$AA@ DB '-servername', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGFPCDPE@?9rand?$AA@
CONST	SEGMENT
??_C@_05LGFPCDPE@?9rand?$AA@ DB '-rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KGIPPADG@?9ssl_client_engine?$AA@
CONST	SEGMENT
??_C@_0BD@KGIPPADG@?9ssl_client_engine?$AA@ DB '-ssl_client_engine', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04ECPNJNJE@xmpp?$AA@
CONST	SEGMENT
??_C@_04ECPNJNJE@xmpp?$AA@ DB 'xmpp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03LMDBDBEG@ftp?$AA@
CONST	SEGMENT
??_C@_03LMDBDBEG@ftp?$AA@ DB 'ftp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04CJJOKOB@imap?$AA@
CONST	SEGMENT
??_C@_04CJJOKOB@imap?$AA@ DB 'imap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DNAACBI@pop3?$AA@
CONST	SEGMENT
??_C@_04DNAACBI@pop3?$AA@ DB 'pop3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DCCEAEFJ@smtp?$AA@
CONST	SEGMENT
??_C@_04DCCEAEFJ@smtp?$AA@ DB 'smtp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09IBBJPNLN@?9starttls?$AA@
CONST	SEGMENT
??_C@_09IBBJPNLN@?9starttls?$AA@ DB '-starttls', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OHEBDJNH@?9nbio?$AA@
CONST	SEGMENT
??_C@_05OHEBDJNH@?9nbio?$AA@ DB '-nbio', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JIFAPBHK@?9serverinfo?$AA@
CONST	SEGMENT
??_C@_0M@JIFAPBHK@?9serverinfo?$AA@ DB '-serverinfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05IPCCHAIL@?9alpn?$AA@
CONST	SEGMENT
??_C@_05IPCCHAIL@?9alpn?$AA@ DB '-alpn', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PMNNGHPN@?9nextprotoneg?$AA@
CONST	SEGMENT
??_C@_0O@PMNNGHPN@?9nextprotoneg?$AA@ DB '-nextprotoneg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FBBMKBAI@?9verifyCAfile?$AA@
CONST	SEGMENT
??_C@_0O@FBBMKBAI@?9verifyCAfile?$AA@ DB '-verifyCAfile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CHKJAKE@?9chainCAfile?$AA@
CONST	SEGMENT
??_C@_0N@CHKJAKE@?9chainCAfile?$AA@ DB '-chainCAfile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EAFCHGPO@?9CAfile?$AA@
CONST	SEGMENT
??_C@_07EAFCHGPO@?9CAfile?$AA@ DB '-CAfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EBJMJDFN@?9build_chain?$AA@
CONST	SEGMENT
??_C@_0N@EBJMJDFN@?9build_chain?$AA@ DB '-build_chain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NMJDGHEA@?9verifyCApath?$AA@
CONST	SEGMENT
??_C@_0O@NMJDGHEA@?9verifyCApath?$AA@ DB '-verifyCApath', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IPPFFGOM@?9chainCApath?$AA@
CONST	SEGMENT
??_C@_0N@IPPFFGOM@?9chainCApath?$AA@ DB '-chainCApath', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNNNLALG@?9CApath?$AA@
CONST	SEGMENT
??_C@_07MNNNLALG@?9CApath?$AA@ DB '-CApath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HGEOPGF@?9reconnect?$AA@
CONST	SEGMENT
??_C@_0L@HGEOPGF@?9reconnect?$AA@ DB '-reconnect', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FMEKFICB@?9key?$AA@
CONST	SEGMENT
??_C@_04FMEKFICB@?9key?$AA@ DB '-key', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHFOFGHE@?9cert_chain?$AA@
CONST	SEGMENT
??_C@_0M@MHFOFGHE@?9cert_chain?$AA@ DB '-cert_chain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NNOCMECB@?9pass?$AA@
CONST	SEGMENT
??_C@_05NNOCMECB@?9pass?$AA@ DB '-pass', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAHLMBGP@?9keyform?$AA@
CONST	SEGMENT
??_C@_08OAHLMBGP@?9keyform?$AA@ DB '-keyform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IADPNMPM@?9fallback_scsv?$AA@
CONST	SEGMENT
??_C@_0P@IADPNMPM@?9fallback_scsv?$AA@ DB '-fallback_scsv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MIHAIBLG@?9mtu?$AA@
CONST	SEGMENT
??_C@_04MIHAIBLG@?9mtu?$AA@ DB '-mtu', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MDOIANFM@?9timeout?$AA@
CONST	SEGMENT
??_C@_08MDOIANFM@?9timeout?$AA@ DB '-timeout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CFINCDNK@?9dtls1_2?$AA@
CONST	SEGMENT
??_C@_08CFINCDNK@?9dtls1_2?$AA@ DB '-dtls1_2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LCNEOKJO@?9dtls1?$AA@
CONST	SEGMENT
??_C@_06LCNEOKJO@?9dtls1?$AA@ DB '-dtls1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DIDPLGID@?9dtls?$AA@
CONST	SEGMENT
??_C@_05DIDPLGID@?9dtls?$AA@ DB '-dtls', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BIEHJHLL@?9tls1?$AA@
CONST	SEGMENT
??_C@_05BIEHJHLL@?9tls1?$AA@ DB '-tls1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MIOHAHOM@?9tls1_1?$AA@
CONST	SEGMENT
??_C@_07MIOHAHOM@?9tls1_1?$AA@ DB '-tls1_1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07ODMKFECP@?9tls1_2?$AA@
CONST	SEGMENT
??_C@_07ODMKFECP@?9tls1_2?$AA@ DB '-tls1_2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IHFBIKKN@?9ssl3?$AA@
CONST	SEGMENT
??_C@_05IHFBIKKN@?9ssl3?$AA@ DB '-ssl3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HGDBOPC@?9srp_moregroups?$AA@
CONST	SEGMENT
??_C@_0BA@HGDBOPC@?9srp_moregroups?$AA@ DB '-srp_moregroups', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NAANMEJK@?9srp_lateuser?$AA@
CONST	SEGMENT
??_C@_0O@NAANMEJK@?9srp_lateuser?$AA@ DB '-srp_lateuser', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MGEDBAFN@SRP?5minimal?5length?5for?5N?5is?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0CA@MGEDBAFN@SRP?5minimal?5length?5for?5N?5is?5?$CFd?6?$AA@ DB 'SRP'
	DB	' minimal length for N is %d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBHNBGII@?9srp_strength?$AA@
CONST	SEGMENT
??_C@_0O@JBHNBGII@?9srp_strength?$AA@ DB '-srp_strength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BAKPFIIA@?9srppass?$AA@
CONST	SEGMENT
??_C@_08BAKPFIIA@?9srppass?$AA@ DB '-srppass', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CDOPKGGH@?9srpuser?$AA@
CONST	SEGMENT
??_C@_08CDOPKGGH@?9srpuser?$AA@ DB '-srpuser', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@ DB 'Not a hex nu'
	DB	'mber ''%s''', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LLANCHKO@?9psk?$AA@
CONST	SEGMENT
??_C@_04LLANCHKO@?9psk?$AA@ DB '-psk', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@COHIAFOB@?9psk_identity?$AA@
CONST	SEGMENT
??_C@_0O@COHIAFOB@?9psk_identity?$AA@ DB '-psk_identity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06IFPFIOLF@?9state?$AA@
CONST	SEGMENT
??_C@_06IFPFIOLF@?9state?$AA@ DB '-state', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DGAHAHFJ@?9nbio_test?$AA@
CONST	SEGMENT
??_C@_0L@DGAHAHFJ@?9nbio_test?$AA@ DB '-nbio_test', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EKNPMKDB@?9showcerts?$AA@
CONST	SEGMENT
??_C@_0L@EKNPMKDB@?9showcerts?$AA@ DB '-showcerts', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08OAMMFJFJ@?9msgfile?$AA@
CONST	SEGMENT
??_C@_08OAMMFJFJ@?9msgfile?$AA@ DB '-msgfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04LFMLOHOA@?9msg?$AA@
CONST	SEGMENT
??_C@_04LFMLOHOA@?9msg?$AA@ DB '-msg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KDLKDLMI@?9status?$AA@
CONST	SEGMENT
??_C@_07KDLKDLMI@?9status?$AA@ DB '-status', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DOFNHFMN@?9tlsextdebug?$AA@
CONST	SEGMENT
??_C@_0N@DOFNHFMN@?9tlsextdebug?$AA@ DB '-tlsextdebug', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OHOHKFPP@?9debug?$AA@
CONST	SEGMENT
??_C@_06OHOHKFPP@?9debug?$AA@ DB '-debug', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HBFFDCKE@?9pause?$AA@
CONST	SEGMENT
??_C@_06HBFFDCKE@?9pause?$AA@ DB '-pause', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PIMNDHCE@?9no_ign_eof?$AA@
CONST	SEGMENT
??_C@_0M@PIMNDHCE@?9no_ign_eof?$AA@ DB '-no_ign_eof', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BPJEDGGD@?9ign_eof?$AA@
CONST	SEGMENT
??_C@_08BPJEDGGD@?9ign_eof?$AA@ DB '-ign_eof', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HONEMELG@?9quiet?$AA@
CONST	SEGMENT
??_C@_06HONEMELG@?9quiet?$AA@ DB '-quiet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JIMBNDFL@?9crlf?$AA@
CONST	SEGMENT
??_C@_05JIMBNDFL@?9crlf?$AA@ DB '-crlf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBCABHOD@?9prexit?$AA@
CONST	SEGMENT
??_C@_07KBCABHOD@?9prexit?$AA@ DB '-prexit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DBECBIEA@?9brief?$AA@
CONST	SEGMENT
??_C@_06DBECBIEA@?9brief?$AA@ DB '-brief', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IOFAKFNC@?9verify_quiet?$AA@
CONST	SEGMENT
??_C@_0O@IOFAKFNC@?9verify_quiet?$AA@ DB '-verify_quiet', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JEHPJFIB@?9verify_return_error?$AA@
CONST	SEGMENT
??_C@_0BF@JEHPJFIB@?9verify_return_error?$AA@ DB '-verify_return_error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PDJLLFEO@?9CRLform?$AA@
CONST	SEGMENT
??_C@_08PDJLLFEO@?9CRLform?$AA@ DB '-CRLform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09ECGGEOOO@?9certform?$AA@
CONST	SEGMENT
??_C@_09ECGGEOOO@?9certform?$AA@ DB '-certform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08INMLDHJG@?9sess_in?$AA@
CONST	SEGMENT
??_C@_08INMLDHJG@?9sess_in?$AA@ DB '-sess_in', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GHKKFCPJ@?9sess_out?$AA@
CONST	SEGMENT
??_C@_09GHKKFCPJ@?9sess_out?$AA@ DB '-sess_out', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FJDFGOOH@?9crl_download?$AA@
CONST	SEGMENT
??_C@_0O@FJDFGOOH@?9crl_download?$AA@ DB '-crl_download', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LKNJOOFD@?9CRL?$AA@
CONST	SEGMENT
??_C@_04LKNJOOFD@?9CRL?$AA@ DB '-CRL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DLEDECNE@?9cert?$AA@
CONST	SEGMENT
??_C@_05DLEDECNE@?9cert?$AA@ DB '-cert', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@ DB 'verify depth is %d'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07FILEFCOC@?9verify?$AA@
CONST	SEGMENT
??_C@_07FILEFCOC@?9verify?$AA@ DB '-verify', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FABEHMEN@?9connect?$AA@
CONST	SEGMENT
??_C@_08FABEHMEN@?9connect?$AA@ DB '-connect', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05HDLOEPOC@?9port?$AA@
CONST	SEGMENT
??_C@_05HDLOEPOC@?9port?$AA@ DB '-port', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CCOMPJJG@?9host?$AA@
CONST	SEGMENT
??_C@_05CCOMPJJG@?9host?$AA@ DB '-host', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@ DB 'out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NCNCDCOM@SERVERINFO?5FOR?5EXTENSION?5?$CFd?$AA@
CONST	SEGMENT
??_C@_0BM@NCNCDCOM@SERVERINFO?5FOR?5EXTENSION?5?$CFd?$AA@ DB 'SERVERINFO '
	DB	'FOR EXTENSION %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KEGNLNML@?0?5?$AA@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5?$AA@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DPBPIEJP@Protocols?5advertised?5by?5server?3?5@
CONST	SEGMENT
??_C@_0CB@DPBPIEJP@Protocols?5advertised?5by?5server?3?5@ DB 'Protocols a'
	DB	'dvertised by server: ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JEGFLCOO@Can?8t?5read?5Password?6?$AA@
CONST	SEGMENT
??_C@_0BF@JEGFLCOO@Can?8t?5read?5Password?6?$AA@ DB 'Can''t read Password'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08HKPOPMKK@SRP?5user?$AA@
CONST	SEGMENT
??_C@_08HKPOPMKK@SRP?5user?$AA@ DB 'SRP user', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DHKOJLMG@Malloc?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BA@DHKOJLMG@Malloc?5failure?6?$AA@ DB 'Malloc failure', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HDOLKHPP@?4?2apps?2s_client?4c?$AA@
CONST	SEGMENT
??_C@_0BC@HDOLKHPP@?4?2apps?2s_client?4c?$AA@ DB '.\apps\s_client.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CDLPHCL@SRP?5param?5N?5and?5g?5rejected?4?6?$AA@
CONST	SEGMENT
??_C@_0BN@CDLPHCL@SRP?5param?5N?5and?5g?5rejected?4?6?$AA@ DB 'SRP param '
	DB	'N and g rejected.', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@KOBHGEOG@SRP?5param?5N?5and?5g?5are?5not?5known?5@
CONST	SEGMENT
??_C@_0EA@KOBHGEOG@SRP?5param?5N?5and?5g?5are?5not?5known?5@ DB 'SRP para'
	DB	'm N and g are not known params, going to check deeper.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CJBFMKNC@?6?7g?$DN?$AA@
CONST	SEGMENT
??_C@_04CJBFMKNC@?6?7g?$DN?$AA@ DB 0aH, 09H, 'g=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03LDFPIHBN@?7N?$DN?$AA@
CONST	SEGMENT
??_C@_03LDFPIHBN@?7N?$DN?$AA@ DB 09H, 'N=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OOEDJGNB@SRP?5parameters?3?6?$AA@
CONST	SEGMENT
??_C@_0BB@OOEDJGNB@SRP?5parameters?3?6?$AA@ DB 'SRP parameters:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EJEAHALL@Can?8t?5use?5SSL_get_servername?6?$AA@
CONST	SEGMENT
??_C@_0BO@EJEAHALL@Can?8t?5use?5SSL_get_servername?6?$AA@ DB 'Can''t use '
	DB	'SSL_get_servername', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@MBBJFPLO@?5?9keymatexportlen?5len?5?5?9?5Export?5@
CONST	SEGMENT
??_C@_0EL@MBBJFPLO@?5?9keymatexportlen?5len?5?5?9?5Export?5@ DB ' -keymat'
	DB	'exportlen len  - Export len bytes of keying material (default'
	DB	' 20)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@MIJBJIJH@?5?9keymatexport?5label?5?5?5?9?5Export?5@
CONST	SEGMENT
??_C@_0DN@MIJBJIJH@?5?9keymatexport?5label?5?5?5?9?5Export?5@ DB ' -keyma'
	DB	'texport label   - Export keying material using label', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@IDLIJFPH@?5?9use_srtp?5profiles?5?9?5Offer?5SRTP@
CONST	SEGMENT
??_C@_0FF@IDLIJFPH@?5?9use_srtp?5profiles?5?9?5Offer?5SRTP@ DB ' -use_srt'
	DB	'p profiles - Offer SRTP key management with a colon-separated'
	DB	' profile list', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@DKJMGLID@?5?9legacy_renegotiation?5?9?5enable?5@
CONST	SEGMENT
??_C@_0EJ@DKJMGLID@?5?9legacy_renegotiation?5?9?5enable?5@ DB ' -legacy_r'
	DB	'enegotiation - enable use of legacy renegotiation (dangerous)'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@ILJJODGL@?5?9alpn?5arg?5?5?5?5?5?5?5?5?5?9?5enable?5ALPN@
CONST	SEGMENT
??_C@_0GK@ILJJODGL@?5?9alpn?5arg?5?5?5?5?5?5?5?5?5?9?5enable?5ALPN@ DB ' '
	DB	'-alpn arg         - enable ALPN extension, considering named '
	DB	'protocols supported (comma-separated list)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@BLOKIDOO@?5?9nextprotoneg?5arg?5?9?5enable?5NPN?5@
CONST	SEGMENT
??_C@_0GJ@BLOKIDOO@?5?9nextprotoneg?5arg?5?9?5enable?5NPN?5@ DB ' -nextpr'
	DB	'otoneg arg - enable NPN extension, considering named protocol'
	DB	's supported (comma-separated list)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@MJPJCKJC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5certifica@
CONST	SEGMENT
??_C@_0EK@MJPJCKJC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5certifica@ DB ' '
	DB	'                      certificate authentication (colon-separ'
	DB	'ated list)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@MMODELKC@?5?9client_sigalgs?5arg?5?9?5Signature@
CONST	SEGMENT
??_C@_0ED@MMODELKC@?5?9client_sigalgs?5arg?5?9?5Signature@ DB ' -client_s'
	DB	'igalgs arg - Signature algorithms to support for client', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@BHNFHAEP@?5?9sigalgs?5arg?5?5?5?5?5?5?9?5Signature?5a@
CONST	SEGMENT
??_C@_0EN@BHNFHAEP@?5?9sigalgs?5arg?5?5?5?5?5?5?9?5Signature?5a@ DB ' -si'
	DB	'galgs arg      - Signature algorithms to support (colon-separ'
	DB	'ated list)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@MFOKJOIK@?5?9curves?5arg?5?5?5?5?5?5?5?9?5Elliptic?5cu@
CONST	SEGMENT
??_C@_0EK@MFOKJOIK@?5?9curves?5arg?5?5?5?5?5?5?5?9?5Elliptic?5cu@ DB ' -c'
	DB	'urves arg       - Elliptic curves to advertise (colon-separat'
	DB	'ed list)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@BBKAOJN@?5?9serverinfo?5types?5?9?5send?5empty?5@
CONST	SEGMENT
??_C@_0FC@BBKAOJN@?5?9serverinfo?5types?5?9?5send?5empty?5@ DB ' -serveri'
	DB	'nfo types - send empty ClientHello extensions (comma-separate'
	DB	'd numbers)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@ENBACIIO@?5?9no_ticket?5?5?5?5?5?5?5?5?9?5disable?5use@
CONST	SEGMENT
??_C@_0EA@ENBACIIO@?5?9no_ticket?5?5?5?5?5?5?5?5?9?5disable?5use@ DB ' -n'
	DB	'o_ticket        - disable use of RFC4507bis session tickets', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@LAKBFBKC@?5?9status?5?5?5?5?5?5?5?5?5?5?5?9?5request?5cer@
CONST	SEGMENT
??_C@_0DN@LAKBFBKC@?5?9status?5?5?5?5?5?5?5?5?5?5?5?9?5request?5cer@ DB ' '
	DB	'-status           - request certificate status from server', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@PMCEEEHA@?5?9tlsextdebug?5?5?5?5?5?5?9?5hex?5dump?5of@
CONST	SEGMENT
??_C@_0DO@PMCEEEHA@?5?9tlsextdebug?5?5?5?5?5?5?9?5hex?5dump?5of@ DB ' -tl'
	DB	'sextdebug      - hex dump of all TLS extensions received', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@FHACLOOJ@?5?9servername?5host?5?5?9?5Set?5TLS?5ext@
CONST	SEGMENT
??_C@_0EC@FHACLOOJ@?5?9servername?5host?5?5?9?5Set?5TLS?5ext@ DB ' -serve'
	DB	'rname host  - Set TLS extension servername in ClientHello', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@KFOBHKFJ@?5?9sess_in?5arg?5?5?9?5file?5to?5read?5SS@
CONST	SEGMENT
??_C@_0DA@KFOBHKFJ@?5?9sess_in?5arg?5?5?9?5file?5to?5read?5SS@ DB ' -sess'
	DB	'_in arg  - file to read SSL session from', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FINJMHON@?5?9sess_out?5arg?5?9?5file?5to?5write?5S@
CONST	SEGMENT
??_C@_0CP@FINJMHON@?5?9sess_out?5arg?5?9?5file?5to?5write?5S@ DB ' -sess_'
	DB	'out arg - file to write SSL session to', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@ DB ' -rand f'
	DB	'ile%cfile%c...', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KOEJDDIL@?5?9engine?5id?5?5?5?5?9?5Initialise?5and?5@
CONST	SEGMENT
??_C@_0DK@KOEJDDIL@?5?9engine?5id?5?5?5?5?9?5Initialise?5and?5@ DB ' -eng'
	DB	'ine id    - Initialise and use the specified engine', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GJKLJCEJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5are?5supported?4?6@
CONST	SEGMENT
??_C@_0CB@GJKLJCEJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5are?5supported?4?6@ DB ' '
	DB	'                are supported.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@DPONNPMK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5only?5?$CCsmtp?$CC?0?5?$CCp@
CONST	SEGMENT
??_C@_0EA@DPONNPMK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5only?5?$CCsmtp?$CC?0?5?$CCp@ DB ' '
	DB	'                only "smtp", "pop3", "imap", "ftp" and "xmpp"'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@OLPHKLOO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?8prot?8?5defines?5@
CONST	SEGMENT
??_C@_0EC@OLPHKLOO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?8prot?8?5defines?5@ DB ' '
	DB	'                ''prot'' defines which one to assume.  Curren'
	DB	'tly,', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@IJPNAMPE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5for?5those?5proto@
CONST	SEGMENT
??_C@_0DN@IJPNAMPE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5for?5those?5proto@ DB ' '
	DB	'                for those protocols that support it, where', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@DCAOMMPP@?5?9starttls?5prot?5?9?5use?5the?5STARTT@
CONST	SEGMENT
??_C@_0EA@DCAOMMPP@?5?9starttls?5prot?5?9?5use?5the?5STARTT@ DB ' -startt'
	DB	'ls prot - use the STARTTLS command before starting TLS', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@BAPEMNH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5command?5to?5see?5@
CONST	SEGMENT
??_C@_0DD@BAPEMNH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5command?5to?5see?5@ DB ' '
	DB	'                command to see what is available', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@CHKHEFMC@?5?9cipher?5?5?5?5?5?5?5?9?5preferred?5ciphe@
CONST	SEGMENT
??_C@_0EF@CHKHEFMC@?5?9cipher?5?5?5?5?5?5?5?9?5preferred?5ciphe@ DB ' -ci'
	DB	'pher       - preferred cipher to use, use the ''openssl ciphe'
	DB	'rs''', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@MFJFCDHF@?5?9bugs?5?5?5?5?5?5?5?5?5?9?5Switch?5on?5all?5S@
CONST	SEGMENT
??_C@_0ED@MFJFCDHF@?5?9bugs?5?5?5?5?5?5?5?5?5?9?5Switch?5on?5all?5S@ DB ' '
	DB	'-bugs         - Switch on all SSL implementation bug workarou'
	DB	'nds', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@PCDENACO@?5?9no_tls1_2?1?9no_tls1_1?1?9no_tls1?1@
CONST	SEGMENT
??_C@_0EM@PCDENACO@?5?9no_tls1_2?1?9no_tls1_1?1?9no_tls1?1@ DB ' -no_tls1'
	DB	'_2/-no_tls1_1/-no_tls1/-no_ssl3/-no_ssl2 - turn off that prot'
	DB	'ocol', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EJGKILCM@?5?9mtu?5?5?5?5?5?5?5?5?5?5?9?5set?5the?5link?5la@
CONST	SEGMENT
??_C@_0CJ@EJGKILCM@?5?9mtu?5?5?5?5?5?5?5?5?5?5?9?5set?5the?5link?5la@ DB ' '
	DB	'-mtu          - set the link layer MTU', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@FDEOHNN@?5?9fallback_scsv?5?9?5send?5TLS_FALLB@
CONST	SEGMENT
??_C@_0CK@FDEOHNN@?5?9fallback_scsv?5?9?5send?5TLS_FALLB@ DB ' -fallback_'
	DB	'scsv - send TLS_FALLBACK_SCSV', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GHLBHJFE@?5?9dtls1?5?5?5?5?5?5?5?5?9?5just?5use?5DTLSv1@
CONST	SEGMENT
??_C@_0CC@GHLBHJFE@?5?9dtls1?5?5?5?5?5?5?5?5?9?5just?5use?5DTLSv1@ DB ' -'
	DB	'dtls1        - just use DTLSv1', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BKPMKFPI@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?6@
CONST	SEGMENT
??_C@_0CB@BKPMKFPI@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?6@ DB ' '
	DB	'-tls1         - just use TLSv1', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OKAGDGCB@?5?9tls1_1?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?4@
CONST	SEGMENT
??_C@_0CD@OKAGDGCB@?5?9tls1_1?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?4@ DB ' -'
	DB	'tls1_1       - just use TLSv1.1', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OKJOIPFP@?5?9tls1_2?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?4@
CONST	SEGMENT
??_C@_0CD@OKJOIPFP@?5?9tls1_2?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?4@ DB ' -'
	DB	'tls1_2       - just use TLSv1.2', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MAPJFFCJ@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5just?5use?5SSLv3?6@
CONST	SEGMENT
??_C@_0CB@MAPJFFCJ@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5just?5use?5SSLv3?6@ DB ' '
	DB	'-ssl3         - just use SSLv3', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@MAIOMCAD@?5?9ssl2?5?5?5?5?5?5?5?5?5?9?5just?5use?5SSLv2?6@
CONST	SEGMENT
??_C@_0CB@MAIOMCAD@?5?9ssl2?5?5?5?5?5?5?5?5?5?9?5just?5use?5SSLv2?6@ DB ' '
	DB	'-ssl2         - just use SSLv2', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@CBLIKAJL@?5?9srp_strength?5int?5?9?5minimal?5len@
CONST	SEGMENT
??_C@_0EB@CBLIKAJL@?5?9srp_strength?5int?5?9?5minimal?5len@ DB ' -srp_str'
	DB	'ength int - minimal length in bits for N (default %d).', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@LJHOGEKL@?5?9srp_moregroups?5?5?5?9?5Tolerate?5ot@
CONST	SEGMENT
??_C@_0EA@LJHOGEKL@?5?9srp_moregroups?5?5?5?9?5Tolerate?5ot@ DB ' -srp_mo'
	DB	'regroups   - Tolerate other than the known g N values.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@FPNBJBED@?5?9srp_lateuser?5?5?5?5?5?9?5SRP?5usernam@
CONST	SEGMENT
??_C@_0ED@FPNBJBED@?5?9srp_lateuser?5?5?5?5?5?9?5SRP?5usernam@ DB ' -srp_'
	DB	'lateuser     - SRP username into second ClientHello message', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@OEIKAKOJ@?5?9srppass?5arg?5?5?5?5?5?5?9?5password?5fo@
CONST	SEGMENT
??_C@_0CK@OEIKAKOJ@?5?9srppass?5arg?5?5?5?5?5?5?9?5password?5fo@ DB ' -sr'
	DB	'ppass arg      - password for ''user''', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@OIHFJCKN@?5?9srpuser?5user?5?5?5?5?5?9?5SRP?5authent@
CONST	SEGMENT
??_C@_0DG@OIHFJCKN@?5?9srpuser?5user?5?5?5?5?5?9?5SRP?5authent@ DB ' -srp'
	DB	'user user     - SRP authentification for ''user''', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@
CONST	SEGMENT
??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@ DB ' '
	DB	'-psk arg      - PSK in hex (without 0x)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GMCGEHFF@?5?9psk_identity?5arg?5?9?5PSK?5identit@
CONST	SEGMENT
??_C@_0CD@GMCGEHFF@?5?9psk_identity?5arg?5?9?5PSK?5identit@ DB ' -psk_ide'
	DB	'ntity arg - PSK identity', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@CNCLIHNG@?5?9no_ign_eof?5?5?5?9?5don?8t?5ignore?5in@
CONST	SEGMENT
??_C@_0CJ@CNCLIHNG@?5?9no_ign_eof?5?5?5?9?5don?8t?5ignore?5in@ DB ' -no_i'
	DB	'gn_eof   - don''t ignore input eof', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@ODIMJIII@?5?9ign_eof?5?5?5?5?5?5?9?5ignore?5input?5eo@
CONST	SEGMENT
??_C@_0DJ@ODIMJIII@?5?9ign_eof?5?5?5?5?5?5?9?5ignore?5input?5eo@ DB ' -ig'
	DB	'n_eof      - ignore input eof (default when -quiet)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KGGGIGOL@?5?9quiet?5?5?5?5?5?5?5?5?9?5no?5s_client?5out@
CONST	SEGMENT
??_C@_0CF@KGGGIGOL@?5?9quiet?5?5?5?5?5?5?5?5?9?5no?5s_client?5out@ DB ' -'
	DB	'quiet        - no s_client output', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NJANHEED@?5?9crlf?5?5?5?5?5?5?5?5?5?9?5convert?5LF?5from@
CONST	SEGMENT
??_C@_0DF@NJANHEED@?5?9crlf?5?5?5?5?5?5?5?5?5?9?5convert?5LF?5from@ DB ' '
	DB	'-crlf         - convert LF from terminal into CRLF', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DKKNEEF@?5?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9bl@
CONST	SEGMENT
??_C@_0CL@DKKNEEF@?5?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9bl@ DB ' '
	DB	'-nbio         - Run with non-blocking IO', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JEECEKMM@?5?9state?5?5?5?5?5?5?5?5?9?5print?5the?5?8ssl?8@
CONST	SEGMENT
??_C@_0CJ@JEECEKMM@?5?9state?5?5?5?5?5?5?5?5?9?5print?5the?5?8ssl?8@ DB ' '
	DB	'-state        - print the ''ssl'' states', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@INMICKPN@?5?9nbio_test?5?5?5?5?9?5more?5ssl?5protoc@
CONST	SEGMENT
??_C@_0CM@INMICKPN@?5?9nbio_test?5?5?5?5?9?5more?5ssl?5protoc@ DB ' -nbio'
	DB	'_test    - more ssl protocol testing', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@PGHHBNJL@?5?9msg?5?5?5?5?5?5?5?5?5?5?9?5Show?5protocol?5m@
CONST	SEGMENT
??_C@_0CJ@PGHHBNJL@?5?9msg?5?5?5?5?5?5?5?5?5?5?9?5Show?5protocol?5m@ DB ' '
	DB	'-msg          - Show protocol messages', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MAGFDDJA@?5?9debug?5?5?5?5?5?5?5?5?9?5extra?5output?6?$AA@
CONST	SEGMENT
??_C@_0BP@MAGFDDJA@?5?9debug?5?5?5?5?5?5?5?5?9?5extra?5output?6?$AA@ DB ' '
	DB	'-debug        - extra output', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@GLAOCGMB@?5?9showcerts?5?5?5?5?9?5show?5all?5certif@
CONST	SEGMENT
??_C@_0DF@GLAOCGMB@?5?9showcerts?5?5?5?5?9?5show?5all?5certif@ DB ' -show'
	DB	'certs    - show all certificates in the chain', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@BDHGGPAE@?5?9prexit?5?5?5?5?5?5?5?9?5print?5session?5i@
CONST	SEGMENT
??_C@_0EH@BDHGGPAE@?5?9prexit?5?5?5?5?5?5?5?9?5print?5session?5i@ DB ' -p'
	DB	'rexit       - print session information even on connection fa'
	DB	'ilure', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EH@LLKOEDPP@?5?9pause?5?5?5?5?5?5?5?5?9?5sleep?$CI1?$CJ?5after?5@
CONST	SEGMENT
??_C@_0EH@LLKOEDPP@?5?9pause?5?5?5?5?5?5?5?5?9?5sleep?$CI1?$CJ?5after?5@ DB ' '
	DB	'-pause        - sleep(1) after each read(2) and write(2) syst'
	DB	'em call', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@GFHFDCBM@?5?9reconnect?5?5?5?5?9?5Drop?5and?5re?9mak@
CONST	SEGMENT
??_C@_0EL@GFHFDCBM@?5?9reconnect?5?5?5?5?9?5Drop?5and?5re?9mak@ DB ' -rec'
	DB	'onnect    - Drop and re-make the connection with the same Ses'
	DB	'sion-ID', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@DIMIHAHA@?5?9no_alt_chains?5?9?5only?5ever?5use?5@
CONST	SEGMENT
??_C@_0ED@DIMIHAHA@?5?9no_alt_chains?5?9?5only?5ever?5use?5@ DB ' -no_alt'
	DB	'_chains - only ever use the first certificate chain found', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@
CONST	SEGMENT
??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@ DB ' -CAfi'
	DB	'le arg   - PEM format file of CA''s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@
CONST	SEGMENT
??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@ DB ' -CApa'
	DB	'th arg   - PEM format directory of CA''s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BFMFFOFA@?5?9pass?5arg?5?5?5?5?5?9?5private?5key?5fil@
CONST	SEGMENT
??_C@_0DG@BFMFFOFA@?5?9pass?5arg?5?5?5?5?5?9?5private?5key?5fil@ DB ' -pa'
	DB	'ss arg     - private key file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BDHNDFAC@?5?9keyform?5arg?5?5?9?5key?5format?5?$CIPEM@
CONST	SEGMENT
??_C@_0DG@BDHNDFAC@?5?9keyform?5arg?5?5?9?5key?5format?5?$CIPEM@ DB ' -ke'
	DB	'yform arg  - key format (PEM or DER) PEM default', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@IGMNKLKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5not?5specified?5b@
CONST	SEGMENT
??_C@_0DC@IGMNKLKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5not?5specified?5b@ DB ' '
	DB	'                not specified but cert file is.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@PJJGJLED@?5?9key?5arg?5?5?5?5?5?5?9?5Private?5key?5fil@
CONST	SEGMENT
??_C@_0DL@PJJGJLED@?5?9key?5arg?5?5?5?5?5?5?9?5Private?5key?5fil@ DB ' -k'
	DB	'ey arg      - Private key file to use, in cert file if', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@ILODNPNH@?5?9certform?5arg?5?9?5certificate?5for@
CONST	SEGMENT
??_C@_0DO@ILODNPNH@?5?9certform?5arg?5?9?5certificate?5for@ DB ' -certfor'
	DB	'm arg - certificate format (PEM or DER) PEM default', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@JADCCCHM@?5?9cert?5arg?5?5?5?5?5?9?5certificate?5fil@
CONST	SEGMENT
??_C@_0DO@JADCCCHM@?5?9cert?5arg?5?5?5?5?5?9?5certificate?5fil@ DB ' -cer'
	DB	't arg     - certificate file to use, PEM format assumed', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GOBPIMCB@?5?9verify_return_error?5?9?5return?5v@
CONST	SEGMENT
??_C@_0DE@GOBPIMCB@?5?9verify_return_error?5?9?5return?5v@ DB ' -verify_r'
	DB	'eturn_error - return verification errors', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@EHAJMJGI@?5?9verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@
CONST	SEGMENT
??_C@_0DI@EHAJMJGI@?5?9verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@ DB ' -ver'
	DB	'ify arg   - turn on peer certificate verification', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@GNFHPCIL@?5?9verify_ip?5ipaddr?5?9?5check?5peer?5@
CONST	SEGMENT
??_C@_0DO@GNFHPCIL@?5?9verify_ip?5ipaddr?5?9?5check?5peer?5@ DB ' -verify'
	DB	'_ip ipaddr - check peer certificate matches "ipaddr"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@DJCBKCN@?5?9verify_email?5email?5?9?5check?5pee@
CONST	SEGMENT
??_C@_0DP@DJCBKCN@?5?9verify_email?5email?5?9?5check?5pee@ DB ' -verify_e'
	DB	'mail email - check peer certificate matches "email"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@PAPKIBFG@?5?9verify_hostname?5host?5?9?5check?5p@
CONST	SEGMENT
??_C@_0EA@PAPKIBFG@?5?9verify_hostname?5host?5?9?5check?5p@ DB ' -verify_'
	DB	'hostname host - check peer certificate matches "host"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@DAAPOIGI@?5?9connect?5host?3port?5?9?5who?5to?5con@
CONST	SEGMENT
??_C@_0DM@DAAPOIGI@?5?9connect?5host?3port?5?9?5who?5to?5con@ DB ' -conne'
	DB	'ct host:port - who to connect to (default is %s:%s)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IPAEKDAI@localhost?$AA@
CONST	SEGMENT
??_C@_09IPAEKDAI@localhost?$AA@ DB 'localhost', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MAHDEHKL@4433?$AA@
CONST	SEGMENT
??_C@_04MAHDEHKL@4433?$AA@ DB '4433', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PJFPIDML@?5?9port?5port?5?5?5?5?5?9?5use?5?9connect?5i@
CONST	SEGMENT
??_C@_0CI@PJFPIDML@?5?9port?5port?5?5?5?5?5?9?5use?5?9connect?5i@ DB ' -p'
	DB	'ort port     - use -connect instead', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@NFDFDEBP@?5?9host?5host?5?5?5?5?5?9?5use?5?9connect?5i@
CONST	SEGMENT
??_C@_0CI@NFDFDEBP@?5?9host?5host?5?5?5?5?5?9?5use?5?9connect?5i@ DB ' -h'
	DB	'ost host     - use -connect instead', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NDGJLAD@usage?3?5s_client?5args?6?$AA@
CONST	SEGMENT
??_C@_0BG@NDGJLAD@usage?3?5s_client?5args?6?$AA@ DB 'usage: s_client args'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EOLEIMOP@Error?5in?5PSK?5client?5callback?6?$AA@
CONST	SEGMENT
??_C@_0BO@EOLEIMOP@Error?5in?5PSK?5client?5callback?6?$AA@ DB 'Error in P'
	DB	'SK client callback', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PJLKILKF@created?5PSK?5len?$DN?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BE@PJLKILKF@created?5PSK?5len?$DN?$CFd?6?$AA@ DB 'created PSK len='
	DB	'%d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@
CONST	SEGMENT
??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@ DB 'psk buffer'
	DB	' of callback is too small (%d) for key (%d)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@
CONST	SEGMENT
??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@ DB 'Could'
	DB	' not convert PSK key ''%s'' to BIGNUM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LCEIEJNP@created?5identity?5?8?$CFs?8?5len?$DN?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BO@LCEIEJNP@created?5identity?5?8?$CFs?8?5len?$DN?$CFd?6?$AA@ DB 'c'
	DB	'reated identity ''%s'' len=%d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@IKEGHPFG@Received?5PSK?5identity?5hint?5?8?$CFs?8?6@
CONST	SEGMENT
??_C@_0CB@IKEGHPFG@Received?5PSK?5identity?5hint?5?8?$CFs?8?6@ DB 'Receiv'
	DB	'ed PSK identity hint ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@DGENHHJB@NULL?5received?5PSK?5identity?5hint?0@
CONST	SEGMENT
??_C@_0DE@DGENHHJB@NULL?5received?5PSK?5identity?5hint?0@ DB 'NULL receiv'
	DB	'ed PSK identity hint, continuing anyway', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BMNLBCBB@psk_client_cb?6?$AA@
CONST	SEGMENT
??_C@_0P@BMNLBCBB@psk_client_cb?6?$AA@ DB 'psk_client_cb', 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _s_client_main
_TEXT	SEGMENT
_meth$1$ = -1048					; size = 4
_alpn_len$1 = -1048					; size = 2
_argv$GSCopy$ = -1044					; size = 4
_cbuf$1$ = -1040					; size = 4
_read_ssl$1$ = -1036					; size = 4
_passarg$1$ = -1036					; size = 4
_mbuf$1$ = -1032					; size = 4
_write_ssl$1$ = -1028					; size = 4
_servername$1$ = -1028					; size = 4
_read_tty$1$ = -1024					; size = 4
_sess_in$1$ = -1024					; size = 4
_write_tty$1$ = -1020					; size = 4
_serverinfo_types_count$1$ = -1020			; size = 4
_crls$1$ = -1016					; size = 4
_ssl_pending$1$ = -1012					; size = 4
_sbio$1$ = -1012					; size = 4
_crl_download$1$ = -1012				; size = 4
_ssl_client_engine_id$1$ = -1008			; size = 4
_ctx$1$ = -1008						; size = 4
_cbuf_len$1$ = -1004					; size = 4
_CApath$1$ = -1004					; size = 4
_s$ = -1000						; size = 4
_sbuf$1$ = -996						; size = 4
_timeoutp$1$ = -992					; size = 4
_fbio$1$ = -992						; size = 4
_fbio$1$ = -992						; size = 4
_fallback_scsv$1$ = -992				; size = 4
_starttls_proto$1$ = -988				; size = 4
_inrand$1$ = -984					; size = 4
_con$1$ = -984						; size = 4
_cbuf_off$1$ = -980					; size = 4
_cert_file$1$ = -980					; size = 4
_ret$1$ = -976						; size = 4
_badarg$ = -972						; size = 4
_sbuf_len$1$ = -968					; size = 4
_next_proto_neg_in$1$ = -968				; size = 4
_sbuf_off$1$ = -964					; size = 4
_engine_id$1$ = -964					; size = 4
_socket_type$1$ = -960					; size = 4
_host$ = -956						; size = 4
_cctx$1$ = -952						; size = 4
_width$1$ = -948					; size = 4
_srp_lateuser$1$ = -948					; size = 4
_socket_mtu$1$ = -944					; size = 4
_port$ = -940						; size = 2
_in_init$1$ = -936					; size = 4
_exc$ = -932						; size = 4
_foundit$1$ = -928					; size = 4
_CAfile$1$ = -928					; size = 4
_build_chain$1$ = -924					; size = 4
_l$2 = -924						; size = 4
_key$1$ = -920						; size = 4
_chain$1$ = -916					; size = 4
_pass$ = -912						; size = 4
_vpm$ = -908						; size = 4
_ssl_args$ = -904					; size = 4
_sess_out$1$ = -900					; size = 4
_reconnect$1$ = -896					; size = 4
_full_log$1$ = -892					; size = 4
_cert$1$ = -888						; size = 4
_timeout$ = -884					; size = 8
_crl_format$1$ = -876					; size = 4
_srppass$1$ = -872					; size = 4
_chCAfile$1$ = -868					; size = 4
_chCApath$1$ = -864					; size = 4
_vfyCAfile$1$ = -860					; size = 4
_vfyCApath$1$ = -856					; size = 4
_ssl_client_engine$1$ = -852				; size = 4
_alpn_in$1$ = -848					; size = 4
_state$1$ = -844					; size = 4
_verify$1$ = -840					; size = 4
_key_file$1$ = -836					; size = 4
_key_format$1$ = -832					; size = 4
_cert_format$1$ = -828					; size = 4
_chain_file$1$ = -824					; size = 4
_enable_timeouts$1$ = -820				; size = 4
_nbio_test$1$ = -816					; size = 4
_crlf$1$ = -812						; size = 4
_prexit$1$ = -808					; size = 4
_crl_file$1$ = -804					; size = 4
_srp_arg$ = -800					; size = 24
_peerlen$ = -776					; size = 4
_tlsextcbp$ = -772					; size = 8
_tv$ = -764						; size = 8
tv470 = -756						; size = 4
_peer$ = -752						; size = 16
_writefds$ = -736					; size = 260
_readfds$ = -472					; size = 260
_serverinfo_types$ = -208				; size = 200
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_s_client_main PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 662
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	mov	eax, 1052				; 0000041cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1052], eax
	mov	eax, DWORD PTR _argv$[ebp]
	xorps	xmm0, xmm0
	push	ebx
; Line 669
	xor	ebx, ebx
	mov	DWORD PTR _argv$GSCopy$[esp+1056], eax
; Line 685
	xor	eax, eax
	mov	DWORD PTR _build_chain$1$[esp+1056], 0
	push	esi
; Line 716
	xor	esi, esi
	mov	DWORD PTR _state$1$[esp+1060], 0
	push	edi
	mov	DWORD PTR _sbuf$1$[esp+1064], ebx
	mov	DWORD PTR _mbuf$1$[esp+1064], ebx
	mov	DWORD PTR _port$[esp+1064], 4433	; 00001151H
	mov	DWORD PTR _full_log$1$[esp+1064], 1
	mov	DWORD PTR _host$[esp+1064], OFFSET ??_C@_09IPAEKDAI@localhost?$AA@
	mov	DWORD PTR _cert_file$1$[esp+1064], ebx
	mov	DWORD PTR _key_file$1$[esp+1064], ebx
	mov	DWORD PTR _chain_file$1$[esp+1064], ebx
	mov	DWORD PTR _cert_format$1$[esp+1064], 3
	mov	DWORD PTR _key_format$1$[esp+1064], 3
	mov	DWORD PTR _passarg$1$[esp+1064], ebx
	mov	DWORD PTR _pass$[esp+1064], ebx
	mov	DWORD PTR _cert$1$[esp+1064], ebx
	mov	DWORD PTR _key$1$[esp+1064], ebx
	mov	DWORD PTR _chain$1$[esp+1064], ebx
	mov	DWORD PTR _CApath$1$[esp+1064], ebx
	mov	DWORD PTR _CAfile$1$[esp+1064], ebx
	mov	DWORD PTR _chCApath$1$[esp+1064], ebx
	mov	DWORD PTR _chCAfile$1$[esp+1064], ebx
	mov	DWORD PTR _vfyCApath$1$[esp+1064], ebx
	mov	DWORD PTR _vfyCAfile$1$[esp+1064], ebx
	mov	DWORD PTR _reconnect$1$[esp+1064], eax
	mov	DWORD PTR _verify$1$[esp+1064], eax
	mov	DWORD PTR _crlf$1$[esp+1064], eax
	mov	DWORD PTR _ret$1$[esp+1064], 1
	mov	DWORD PTR _in_init$1$[esp+1064], 1
	mov	DWORD PTR _nbio_test$1$[esp+1064], eax
	mov	DWORD PTR _starttls_proto$1$[esp+1064], eax
	mov	DWORD PTR _prexit$1$[esp+1064], eax
	mov	DWORD PTR _vpm$[esp+1064], eax
	mov	DWORD PTR _badarg$[esp+1064], eax
	mov	DWORD PTR _socket_type$1$[esp+1064], 1
	mov	DWORD PTR _inrand$1$[esp+1064], eax
	mov	DWORD PTR _engine_id$1$[esp+1064], eax
	mov	DWORD PTR _ssl_client_engine_id$1$[esp+1064], eax
	mov	DWORD PTR _ssl_client_engine$1$[esp+1064], eax
	mov	DWORD PTR _servername$1$[esp+1064], eax
	mov	DWORD PTR _tlsextcbp$[esp+1064], eax
	mov	DWORD PTR _tlsextcbp$[esp+1068], eax
	mov	DWORD PTR _next_proto_neg_in$1$[esp+1064], esi
; Line 718
	mov	DWORD PTR _alpn_in$1$[esp+1064], eax
; Line 721
	mov	DWORD PTR _serverinfo_types_count$1$[esp+1064], eax
; Line 723
	mov	DWORD PTR _sess_in$1$[esp+1064], eax
; Line 724
	mov	DWORD PTR _sess_out$1$[esp+1064], eax
; Line 726
	mov	DWORD PTR _peerlen$[esp+1064], 16	; 00000010H
; Line 727
	mov	DWORD PTR _fallback_scsv$1$[esp+1064], eax
; Line 728
	mov	DWORD PTR _enable_timeouts$1$[esp+1064], eax
; Line 729
	mov	DWORD PTR _socket_mtu$1$[esp+1064], eax
; Line 737
	mov	DWORD PTR _srppass$1$[esp+1064], eax
; Line 738
	mov	DWORD PTR _srp_lateuser$1$[esp+1064], eax
	movups	XMMWORD PTR _srp_arg$[esp+1064], xmm0
; Line 739
	mov	DWORD PTR _srp_arg$[esp+1080], eax
	mov	DWORD PTR _srp_arg$[esp+1084], 1024	; 00000400H
; Line 741
	mov	DWORD PTR _exc$[esp+1064], eax
; Line 743
	mov	DWORD PTR _cctx$1$[esp+1064], eax
; Line 744
	mov	DWORD PTR _ssl_args$[esp+1064], eax
; Line 746
	mov	DWORD PTR _crl_file$1$[esp+1064], eax
; Line 747
	mov	DWORD PTR _crl_format$1$[esp+1064], 3
; Line 748
	mov	DWORD PTR _crl_download$1$[esp+1064], eax
; Line 749
	mov	DWORD PTR _crls$1$[esp+1064], eax
; Line 751
	call	_SSLv23_client_method
	mov	edi, eax
; Line 754
	mov	DWORD PTR _c_Pause, ebx
; Line 761
	mov	eax, DWORD PTR _bio_err
	mov	DWORD PTR _meth$1$[esp+1064], edi
	mov	DWORD PTR _c_quiet, ebx
	mov	DWORD PTR _c_ign_eof, ebx
	mov	DWORD PTR _c_debug, ebx
	mov	DWORD PTR _c_msg, ebx
	mov	DWORD PTR _c_showcerts, ebx
	test	eax, eax
	jne	SHORT $LN52@s_client_m
; Line 762
	push	eax
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR _bio_err, eax
$LN52@s_client_m:
; Line 764
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN958@s_client_m
; Line 767
	call	_SSL_CONF_CTX_new
	mov	DWORD PTR _cctx$1$[esp+1064], eax
; Line 768
	test	eax, eax
	je	$LN958@s_client_m
; Line 770
	push	4
	push	eax
	call	_SSL_CONF_CTX_set_flags
; Line 771
	push	1
	push	DWORD PTR _cctx$1$[esp+1076]
	call	_SSL_CONF_CTX_set_flags
; Line 774
	push	773					; 00000305H
	push	OFFSET ??_C@_0BC@HDOLKHPP@?4?2apps?2s_client?4c?$AA@
	push	8192					; 00002000H
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _cbuf$1$[esp+1064], ebx
	test	ebx, ebx
	je	$LN56@s_client_m
	push	774					; 00000306H
	push	OFFSET ??_C@_0BC@HDOLKHPP@?4?2apps?2s_client?4c?$AA@
	push	8192					; 00002000H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _sbuf$1$[esp+1064], eax
	test	eax, eax
	je	$LN56@s_client_m
	push	775					; 00000307H
	push	OFFSET ??_C@_0BC@HDOLKHPP@?4?2apps?2s_client?4c?$AA@
	push	8192					; 00002000H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _mbuf$1$[esp+1064], eax
	test	eax, eax
	je	$LN56@s_client_m
; Line 786
	mov	ecx, DWORD PTR _argc$[ebp]
; Line 787
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	dec	ecx
	add	ebx, 4
	mov	DWORD PTR _verify_depth, esi
	mov	DWORD PTR _verify_error, esi
	mov	DWORD PTR _c_nbio, esi
	mov	DWORD PTR _argc$[ebp], ecx
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
; Line 788
	cmp	ecx, 1
	jl	$LN260@s_client_m
$LN963@s_client_m:
; Line 789
	mov	esi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_05CCOMPJJG@?9host?$AA@
	mov	edi, DWORD PTR __imp__atoi
	mov	eax, esi
$LL617@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN618@s_client_m
	test	dl, dl
	je	SHORT $LN619@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN618@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL617@s_client_m
$LN619@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN620@s_client_m
$LN618@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN620@s_client_m:
	test	eax, eax
	jne	SHORT $LN57@s_client_m
; Line 790
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 792
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _host$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN57@s_client_m:
; Line 793
	mov	ecx, OFFSET ??_C@_05HDLOEPOC@?9port?$AA@
	mov	eax, esi
$LL621@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN622@s_client_m
	test	dl, dl
	je	SHORT $LN623@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN622@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL621@s_client_m
$LN623@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN624@s_client_m
$LN622@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN624@s_client_m:
	test	eax, eax
	jne	SHORT $LN60@s_client_m
; Line 794
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 796
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	push	DWORD PTR [ebx]
	call	edi
	movzx	eax, ax
	add	esp, 4
	mov	DWORD PTR _port$[esp+1064], eax
; Line 797
	test	ax, ax
; Line 799
	jmp	$LN978@s_client_m
$LN60@s_client_m:
	mov	ecx, OFFSET ??_C@_08FABEHMEN@?9connect?$AA@
	mov	eax, esi
	npad	1
$LL625@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN626@s_client_m
	test	dl, dl
	je	SHORT $LN627@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN626@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL625@s_client_m
$LN627@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN628@s_client_m
$LN626@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN628@s_client_m:
	test	eax, eax
	jne	SHORT $LN64@s_client_m
; Line 800
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 802
	lea	eax, DWORD PTR _port$[esp+1064]
	add	ebx, 4
	push	eax
	push	0
	lea	eax, DWORD PTR _host$[esp+1072]
	mov	DWORD PTR _argv$GSCopy$[esp+1072], ebx
	push	eax
	push	DWORD PTR [ebx]
	call	_extract_host_port
	add	esp, 16					; 00000010H
; Line 804
	jmp	$LN979@s_client_m
$LN64@s_client_m:
	mov	ecx, OFFSET ??_C@_07FILEFCOC@?9verify?$AA@
	mov	eax, esi
$LL629@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN630@s_client_m
	test	dl, dl
	je	SHORT $LN631@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN630@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL629@s_client_m
$LN631@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN632@s_client_m
$LN630@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN632@s_client_m:
	test	eax, eax
	jne	SHORT $LN68@s_client_m
; Line 806
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _verify$1$[esp+1064], 1
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 808
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	push	DWORD PTR [ebx]
	call	edi
	add	esp, 4
	mov	DWORD PTR _verify_depth, eax
; Line 809
	cmp	DWORD PTR _c_quiet, 0
	jne	$LN947@s_client_m
; Line 810
	push	eax
	push	OFFSET ??_C@_0BE@PGMKNIHF@verify?5depth?5is?5?$CFd?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 811
	jmp	$LN947@s_client_m
$LN68@s_client_m:
	mov	ecx, OFFSET ??_C@_05DLEDECNE@?9cert?$AA@
	mov	eax, esi
$LL633@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN634@s_client_m
	test	dl, dl
	je	SHORT $LN635@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN634@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL633@s_client_m
$LN635@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN636@s_client_m
$LN634@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN636@s_client_m:
	test	eax, eax
	jne	SHORT $LN72@s_client_m
; Line 812
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 814
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _cert_file$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN72@s_client_m:
; Line 815
	mov	ecx, OFFSET ??_C@_04LKNJOOFD@?9CRL?$AA@
	mov	eax, esi
$LL637@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN638@s_client_m
	test	dl, dl
	je	SHORT $LN639@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN638@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL637@s_client_m
$LN639@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN640@s_client_m
$LN638@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN640@s_client_m:
	test	eax, eax
	jne	SHORT $LN75@s_client_m
; Line 816
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 818
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _crl_file$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN75@s_client_m:
; Line 819
	mov	ecx, OFFSET ??_C@_0O@FJDFGOOH@?9crl_download?$AA@
	mov	eax, esi
	npad	3
$LL641@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN642@s_client_m
	test	dl, dl
	je	SHORT $LN643@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN642@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL641@s_client_m
$LN643@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN644@s_client_m
$LN642@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN644@s_client_m:
	test	eax, eax
	jne	SHORT $LN78@s_client_m
; Line 820
	mov	DWORD PTR _crl_download$1$[esp+1064], 1
	jmp	$LN948@s_client_m
$LN78@s_client_m:
; Line 821
	mov	ecx, OFFSET ??_C@_09GHKKFCPJ@?9sess_out?$AA@
	mov	eax, esi
	npad	3
$LL645@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN646@s_client_m
	test	dl, dl
	je	SHORT $LN647@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN646@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL645@s_client_m
$LN647@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN648@s_client_m
$LN646@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN648@s_client_m:
	test	eax, eax
	jne	SHORT $LN80@s_client_m
; Line 822
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 824
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _sess_out$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN80@s_client_m:
; Line 825
	mov	ecx, OFFSET ??_C@_08INMLDHJG@?9sess_in?$AA@
	mov	eax, esi
$LL649@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN650@s_client_m
	test	dl, dl
	je	SHORT $LN651@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN650@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL649@s_client_m
$LN651@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN652@s_client_m
$LN650@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN652@s_client_m:
	test	eax, eax
	jne	SHORT $LN83@s_client_m
; Line 826
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 828
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _sess_in$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN83@s_client_m:
; Line 829
	mov	ecx, OFFSET ??_C@_09ECGGEOOO@?9certform?$AA@
	mov	eax, esi
$LL653@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN654@s_client_m
	test	dl, dl
	je	SHORT $LN655@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN654@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL653@s_client_m
$LN655@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN656@s_client_m
$LN654@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN656@s_client_m:
	test	eax, eax
	jne	SHORT $LN86@s_client_m
; Line 830
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 832
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	push	DWORD PTR [ebx]
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _cert_format$1$[esp+1064], eax
	jmp	$LN947@s_client_m
$LN86@s_client_m:
; Line 833
	mov	eax, OFFSET ??_C@_08PDJLLFEO@?9CRLform?$AA@
$LL657@s_client_m:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN658@s_client_m
	test	cl, cl
	je	SHORT $LN659@s_client_m
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN658@s_client_m
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL657@s_client_m
$LN659@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN660@s_client_m
$LN658@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN660@s_client_m:
	test	eax, eax
	jne	SHORT $LN89@s_client_m
; Line 834
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 836
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	push	DWORD PTR [ebx]
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _crl_format$1$[esp+1064], eax
	jmp	$LN947@s_client_m
$LN89@s_client_m:
; Line 837
	lea	eax, DWORD PTR _vpm$[esp+1064]
	push	eax
	push	DWORD PTR _bio_err
	lea	eax, DWORD PTR _badarg$[esp+1072]
	push	eax
	lea	eax, DWORD PTR _argc$[ebp]
	push	eax
	lea	eax, DWORD PTR _argv$GSCopy$[esp+1080]
	push	eax
	call	_args_verify
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN92@s_client_m
$LN962@s_client_m:
; Line 838
	cmp	DWORD PTR _badarg$[esp+1064], 0
	jne	$bad$983
; Line 840
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, DWORD PTR _meth$1$[esp+1064]
	jmp	$LN531@s_client_m
$LN92@s_client_m:
; Line 841
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	ecx, OFFSET ??_C@_0BF@JEHPJFIB@?9verify_return_error?$AA@
	mov	esi, DWORD PTR [ebx]
	mov	eax, esi
$LL661@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN662@s_client_m
	test	dl, dl
	je	SHORT $LN663@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN662@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL661@s_client_m
$LN663@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN664@s_client_m
$LN662@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN664@s_client_m:
	test	eax, eax
	jne	SHORT $LN95@s_client_m
; Line 842
	mov	DWORD PTR _verify_return_error, 1
	jmp	$LN948@s_client_m
$LN95@s_client_m:
; Line 843
	mov	ecx, OFFSET ??_C@_0O@IOFAKFNC@?9verify_quiet?$AA@
	mov	eax, esi
$LL665@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN666@s_client_m
	test	dl, dl
	je	SHORT $LN667@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN666@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL665@s_client_m
$LN667@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN668@s_client_m
$LN666@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN668@s_client_m:
	test	eax, eax
	jne	SHORT $LN97@s_client_m
; Line 844
	mov	DWORD PTR _verify_quiet, 1
	jmp	$LN948@s_client_m
$LN97@s_client_m:
; Line 845
	mov	eax, OFFSET ??_C@_06DBECBIEA@?9brief?$AA@
$LL669@s_client_m:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN670@s_client_m
	test	cl, cl
	je	SHORT $LN671@s_client_m
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN670@s_client_m
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL669@s_client_m
$LN671@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN672@s_client_m
$LN670@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN672@s_client_m:
	test	eax, eax
	jne	SHORT $LN99@s_client_m
; Line 846
	mov	DWORD PTR _c_brief, 1
; Line 847
	mov	DWORD PTR _verify_quiet, 1
; Line 848
	mov	DWORD PTR _c_quiet, 1
	jmp	$LN948@s_client_m
$LN99@s_client_m:
; Line 849
	lea	eax, DWORD PTR _exc$[esp+1064]
	push	eax
	push	DWORD PTR _bio_err
	lea	eax, DWORD PTR _badarg$[esp+1072]
	push	eax
	lea	eax, DWORD PTR _argc$[ebp]
	push	eax
	lea	eax, DWORD PTR _argv$GSCopy$[esp+1080]
	push	eax
	call	_args_excert
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN962@s_client_m
; Line 853
	lea	eax, DWORD PTR _ssl_args$[esp+1064]
	push	eax
	push	DWORD PTR _bio_err
	lea	eax, DWORD PTR _badarg$[esp+1072]
	push	eax
	push	DWORD PTR _cctx$1$[esp+1076]
	lea	eax, DWORD PTR _argc$[ebp]
	push	eax
	lea	eax, DWORD PTR _argv$GSCopy$[esp+1084]
	push	eax
	call	_args_ssl
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	$LN962@s_client_m
; Line 857
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	ecx, OFFSET ??_C@_07KBCABHOD@?9prexit?$AA@
	mov	esi, DWORD PTR [ebx]
	mov	eax, esi
$LL673@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN674@s_client_m
	test	dl, dl
	je	SHORT $LN675@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN674@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL673@s_client_m
$LN675@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN676@s_client_m
$LN674@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN676@s_client_m:
	test	eax, eax
	jne	SHORT $LN107@s_client_m
; Line 858
	mov	DWORD PTR _prexit$1$[esp+1064], 1
	jmp	$LN948@s_client_m
$LN107@s_client_m:
; Line 859
	mov	ecx, OFFSET ??_C@_05JIMBNDFL@?9crlf?$AA@
	mov	eax, esi
$LL677@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN678@s_client_m
	test	dl, dl
	je	SHORT $LN679@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN678@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL677@s_client_m
$LN679@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN680@s_client_m
$LN678@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN680@s_client_m:
	test	eax, eax
	jne	SHORT $LN109@s_client_m
; Line 860
	mov	DWORD PTR _crlf$1$[esp+1064], 1
	jmp	$LN948@s_client_m
$LN109@s_client_m:
; Line 861
	mov	ecx, OFFSET ??_C@_06HONEMELG@?9quiet?$AA@
	mov	eax, esi
$LL681@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN682@s_client_m
	test	dl, dl
	je	SHORT $LN683@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN682@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL681@s_client_m
$LN683@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN684@s_client_m
$LN682@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN684@s_client_m:
	test	eax, eax
	jne	SHORT $LN111@s_client_m
; Line 862
	mov	DWORD PTR _c_quiet, 1
; Line 863
	mov	DWORD PTR _c_ign_eof, 1
	jmp	$LN948@s_client_m
$LN111@s_client_m:
; Line 864
	mov	ecx, OFFSET ??_C@_08BPJEDGGD@?9ign_eof?$AA@
	mov	eax, esi
	npad	1
$LL685@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN686@s_client_m
	test	dl, dl
	je	SHORT $LN687@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN686@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL685@s_client_m
$LN687@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN688@s_client_m
$LN686@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN688@s_client_m:
	test	eax, eax
	jne	SHORT $LN113@s_client_m
; Line 865
	mov	DWORD PTR _c_ign_eof, 1
	jmp	$LN948@s_client_m
$LN113@s_client_m:
; Line 866
	mov	ecx, OFFSET ??_C@_0M@PIMNDHCE@?9no_ign_eof?$AA@
	mov	eax, esi
	npad	1
$LL689@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN690@s_client_m
	test	dl, dl
	je	SHORT $LN691@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN690@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL689@s_client_m
$LN691@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN692@s_client_m
$LN690@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN692@s_client_m:
	test	eax, eax
	jne	SHORT $LN115@s_client_m
; Line 867
	mov	DWORD PTR _c_ign_eof, eax
	jmp	$LN948@s_client_m
$LN115@s_client_m:
; Line 868
	mov	ecx, OFFSET ??_C@_06HBFFDCKE@?9pause?$AA@
	mov	eax, esi
	npad	6
$LL693@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN694@s_client_m
	test	dl, dl
	je	SHORT $LN695@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN694@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL693@s_client_m
$LN695@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN696@s_client_m
$LN694@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN696@s_client_m:
	test	eax, eax
	jne	SHORT $LN117@s_client_m
; Line 869
	mov	DWORD PTR _c_Pause, 1
	jmp	$LN948@s_client_m
$LN117@s_client_m:
; Line 870
	mov	ecx, OFFSET ??_C@_06OHOHKFPP@?9debug?$AA@
	mov	eax, esi
	npad	1
$LL697@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN698@s_client_m
	test	dl, dl
	je	SHORT $LN699@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN698@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL697@s_client_m
$LN699@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN700@s_client_m
$LN698@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN700@s_client_m:
	test	eax, eax
	jne	SHORT $LN119@s_client_m
; Line 871
	mov	DWORD PTR _c_debug, 1
	jmp	$LN948@s_client_m
$LN119@s_client_m:
; Line 873
	mov	ecx, OFFSET ??_C@_0N@DOFNHFMN@?9tlsextdebug?$AA@
	mov	eax, esi
	npad	1
$LL701@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN702@s_client_m
	test	dl, dl
	je	SHORT $LN703@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN702@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL701@s_client_m
$LN703@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN704@s_client_m
$LN702@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN704@s_client_m:
	test	eax, eax
	jne	SHORT $LN121@s_client_m
; Line 874
	mov	DWORD PTR _c_tlsextdebug, 1
	jmp	$LN948@s_client_m
$LN121@s_client_m:
; Line 875
	mov	ecx, OFFSET ??_C@_07KDLKDLMI@?9status?$AA@
	mov	eax, esi
	npad	1
$LL705@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN706@s_client_m
	test	dl, dl
	je	SHORT $LN707@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN706@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL705@s_client_m
$LN707@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN708@s_client_m
$LN706@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN708@s_client_m:
	test	eax, eax
	jne	SHORT $LN123@s_client_m
; Line 876
	mov	DWORD PTR _c_status_req, 1
	jmp	$LN948@s_client_m
$LN123@s_client_m:
; Line 882
	mov	ecx, OFFSET ??_C@_04LFMLOHOA@?9msg?$AA@
	mov	eax, esi
	npad	1
$LL709@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN710@s_client_m
	test	dl, dl
	je	SHORT $LN711@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN710@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL709@s_client_m
$LN711@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN712@s_client_m
$LN710@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN712@s_client_m:
	test	eax, eax
	jne	SHORT $LN125@s_client_m
; Line 883
	mov	DWORD PTR _c_msg, 1
	jmp	$LN948@s_client_m
$LN125@s_client_m:
; Line 884
	mov	ecx, OFFSET ??_C@_08OAMMFJFJ@?9msgfile?$AA@
	mov	eax, esi
	npad	1
$LL713@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN714@s_client_m
	test	dl, dl
	je	SHORT $LN715@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN714@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL713@s_client_m
$LN715@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN716@s_client_m
$LN714@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN716@s_client_m:
	test	eax, eax
	jne	SHORT $LN127@s_client_m
; Line 885
	mov	eax, DWORD PTR _argc$[ebp]
	dec	eax
	mov	DWORD PTR _argc$[ebp], eax
	cmp	eax, 1
	jl	$bad$983
; Line 887
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	DWORD PTR [ebx]
	call	_BIO_new_file
	add	esp, 8
	mov	DWORD PTR _bio_c_msg, eax
; Line 888
	jmp	$LN947@s_client_m
$LN127@s_client_m:
; Line 893
	mov	ecx, OFFSET ??_C@_0L@EKNPMKDB@?9showcerts?$AA@
	mov	eax, esi
$LL717@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN718@s_client_m
	test	dl, dl
	je	SHORT $LN719@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN718@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL717@s_client_m
$LN719@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN720@s_client_m
$LN718@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN720@s_client_m:
	test	eax, eax
	jne	SHORT $LN130@s_client_m
; Line 894
	mov	DWORD PTR _c_showcerts, 1
	jmp	$LN948@s_client_m
$LN130@s_client_m:
; Line 895
	mov	ecx, OFFSET ??_C@_0L@DGAHAHFJ@?9nbio_test?$AA@
	mov	eax, esi
	npad	1
$LL721@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN722@s_client_m
	test	dl, dl
	je	SHORT $LN723@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN722@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL721@s_client_m
$LN723@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN724@s_client_m
$LN722@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN724@s_client_m:
	test	eax, eax
	jne	SHORT $LN132@s_client_m
; Line 896
	mov	DWORD PTR _nbio_test$1$[esp+1064], 1
	jmp	$LN948@s_client_m
$LN132@s_client_m:
; Line 897
	mov	ecx, OFFSET ??_C@_06IFPFIOLF@?9state?$AA@
	mov	eax, esi
$LL725@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN726@s_client_m
	test	dl, dl
	je	SHORT $LN727@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN726@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL725@s_client_m
$LN727@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN728@s_client_m
$LN726@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN728@s_client_m:
	test	eax, eax
	jne	SHORT $LN134@s_client_m
; Line 898
	mov	DWORD PTR _state$1$[esp+1064], 1
	jmp	$LN948@s_client_m
$LN134@s_client_m:
; Line 900
	mov	ecx, OFFSET ??_C@_0O@COHIAFOB@?9psk_identity?$AA@
	mov	eax, esi
$LL729@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN730@s_client_m
	test	dl, dl
	je	SHORT $LN731@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN730@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL729@s_client_m
$LN731@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN732@s_client_m
$LN730@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN732@s_client_m:
	test	eax, eax
	jne	SHORT $LN136@s_client_m
; Line 901
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 903
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _psk_identity, eax
	jmp	$LN948@s_client_m
$LN136@s_client_m:
; Line 904
	mov	ecx, OFFSET ??_C@_04LLANCHKO@?9psk?$AA@
	mov	eax, esi
$LL733@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN734@s_client_m
	test	dl, dl
	je	SHORT $LN735@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN734@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL733@s_client_m
$LN735@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN736@s_client_m
$LN734@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN736@s_client_m:
	test	eax, eax
	jne	$LN139@s_client_m
; Line 907
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 909
	add	ebx, 4
; Line 910
	xor	esi, esi
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	edi, DWORD PTR [ebx]
	mov	ecx, edi
	mov	DWORD PTR _psk_key, edi
	lea	edx, DWORD PTR [ecx+1]
$LL737@s_client_m:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL737@s_client_m
	sub	ecx, edx
	je	$LN948@s_client_m
$LL6@s_client_m:
; Line 911
	movzx	eax, BYTE PTR [edi+esi]
	push	eax
	call	DWORD PTR __imp__isxdigit
	add	esp, 4
	test	eax, eax
	je	$LN142@s_client_m
; Line 910
	mov	edi, DWORD PTR _psk_key
	inc	esi
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL738@s_client_m:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL738@s_client_m
	sub	ecx, edx
	cmp	esi, ecx
	jb	SHORT $LL6@s_client_m
; Line 916
	jmp	$LN947@s_client_m
$LN139@s_client_m:
; Line 919
	mov	ecx, OFFSET ??_C@_08CDOPKGGH@?9srpuser?$AA@
	mov	eax, esi
$LL739@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN740@s_client_m
	test	dl, dl
	je	SHORT $LN741@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN740@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL739@s_client_m
$LN741@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN742@s_client_m
$LN740@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN742@s_client_m:
	test	eax, eax
	jne	$LN143@s_client_m
; Line 920
	mov	eax, DWORD PTR _argc$[ebp]
	dec	eax
	mov	DWORD PTR _argc$[ebp], eax
	cmp	eax, 1
	jl	$bad$983
; Line 922
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _srp_arg$[esp+1068], eax
; Line 923
	call	_TLSv1_client_method
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	jmp	$LN259@s_client_m
$LN143@s_client_m:
; Line 924
	mov	ecx, OFFSET ??_C@_08BAKPFIIA@?9srppass?$AA@
	mov	eax, esi
	npad	4
$LL743@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN744@s_client_m
	test	dl, dl
	je	SHORT $LN745@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN744@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL743@s_client_m
$LN745@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN746@s_client_m
$LN744@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN746@s_client_m:
	test	eax, eax
	jne	$LN146@s_client_m
; Line 925
	mov	eax, DWORD PTR _argc$[ebp]
	dec	eax
	mov	DWORD PTR _argc$[ebp], eax
	cmp	eax, 1
	jl	$bad$983
; Line 927
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _srppass$1$[esp+1064], eax
; Line 928
	call	_TLSv1_client_method
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	jmp	$LN259@s_client_m
$LN146@s_client_m:
; Line 929
	mov	ecx, OFFSET ??_C@_0O@JBHNBGII@?9srp_strength?$AA@
	mov	eax, esi
	npad	4
$LL747@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN748@s_client_m
	test	dl, dl
	je	SHORT $LN749@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN748@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL747@s_client_m
$LN749@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN750@s_client_m
$LN748@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN750@s_client_m:
	test	eax, eax
	jne	$LN149@s_client_m
; Line 930
	mov	eax, DWORD PTR _argc$[ebp]
	dec	eax
	mov	DWORD PTR _argc$[ebp], eax
	cmp	eax, 1
	jl	$bad$983
; Line 932
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	push	DWORD PTR [ebx]
	call	edi
; Line 933
	push	eax
	push	OFFSET ??_C@_0CA@MGEDBAFN@SRP?5minimal?5length?5for?5N?5is?5?$CFd?6?$AA@
	push	DWORD PTR _bio_err
	mov	DWORD PTR _srp_arg$[esp+1100], eax
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 935
	call	_TLSv1_client_method
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	jmp	$LN259@s_client_m
$LN149@s_client_m:
; Line 936
	mov	ecx, OFFSET ??_C@_0O@NAANMEJK@?9srp_lateuser?$AA@
	mov	eax, esi
	npad	2
$LL751@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN752@s_client_m
	test	dl, dl
	je	SHORT $LN753@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN752@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL751@s_client_m
$LN753@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN754@s_client_m
$LN752@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN754@s_client_m:
	test	eax, eax
	jne	SHORT $LN152@s_client_m
; Line 937
	mov	DWORD PTR _srp_lateuser$1$[esp+1064], 1
; Line 938
	call	_TLSv1_client_method
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	jmp	$LN259@s_client_m
$LN152@s_client_m:
; Line 939
	mov	ecx, OFFSET ??_C@_0BA@HGDBOPC@?9srp_moregroups?$AA@
	mov	eax, esi
	npad	4
$LL755@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN756@s_client_m
	test	dl, dl
	je	SHORT $LN757@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN756@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL755@s_client_m
$LN757@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN758@s_client_m
$LN756@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN758@s_client_m:
	test	eax, eax
	jne	SHORT $LN154@s_client_m
; Line 940
	mov	DWORD PTR _srp_arg$[esp+1080], 1
; Line 941
	call	_TLSv1_client_method
; Line 942
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	jmp	$LN259@s_client_m
$LN154@s_client_m:
; Line 949
	mov	ecx, OFFSET ??_C@_05IHFBIKKN@?9ssl3?$AA@
	mov	eax, esi
	npad	1
$LL759@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN760@s_client_m
	test	dl, dl
	je	SHORT $LN761@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN760@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL759@s_client_m
$LN761@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN762@s_client_m
$LN760@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN762@s_client_m:
	test	eax, eax
	jne	SHORT $LN156@s_client_m
; Line 950
	call	_SSLv3_client_method
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	jmp	$LN259@s_client_m
$LN156@s_client_m:
; Line 953
	mov	ecx, OFFSET ??_C@_07ODMKFECP@?9tls1_2?$AA@
	mov	eax, esi
$LL763@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN764@s_client_m
	test	dl, dl
	je	SHORT $LN765@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN764@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL763@s_client_m
$LN765@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN766@s_client_m
$LN764@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN766@s_client_m:
	test	eax, eax
	jne	SHORT $LN158@s_client_m
; Line 954
	call	_TLSv1_2_client_method
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	jmp	$LN259@s_client_m
$LN158@s_client_m:
; Line 955
	mov	ecx, OFFSET ??_C@_07MIOHAHOM@?9tls1_1?$AA@
	mov	eax, esi
$LL767@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN768@s_client_m
	test	dl, dl
	je	SHORT $LN769@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN768@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL767@s_client_m
$LN769@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN770@s_client_m
$LN768@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN770@s_client_m:
	test	eax, eax
	jne	SHORT $LN160@s_client_m
; Line 956
	call	_TLSv1_1_client_method
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	jmp	$LN259@s_client_m
$LN160@s_client_m:
; Line 957
	mov	ecx, OFFSET ??_C@_05BIEHJHLL@?9tls1?$AA@
	mov	eax, esi
	npad	4
$LL771@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN772@s_client_m
	test	dl, dl
	je	SHORT $LN773@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN772@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL771@s_client_m
$LN773@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN774@s_client_m
$LN772@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN774@s_client_m:
	test	eax, eax
	jne	SHORT $LN162@s_client_m
; Line 958
	call	_TLSv1_client_method
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	jmp	$LN259@s_client_m
$LN162@s_client_m:
; Line 961
	mov	ecx, OFFSET ??_C@_05DIDPLGID@?9dtls?$AA@
	mov	eax, esi
$LL775@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN776@s_client_m
	test	dl, dl
	je	SHORT $LN777@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN776@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL775@s_client_m
$LN777@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN778@s_client_m
$LN776@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN778@s_client_m:
	test	eax, eax
	jne	SHORT $LN164@s_client_m
; Line 962
	call	_DTLS_client_method
; Line 963
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	mov	DWORD PTR _socket_type$1$[esp+1064], 2
	jmp	$LN259@s_client_m
$LN164@s_client_m:
; Line 964
	mov	ecx, OFFSET ??_C@_06LCNEOKJO@?9dtls1?$AA@
	mov	eax, esi
$LL779@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN780@s_client_m
	test	dl, dl
	je	SHORT $LN781@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN780@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL779@s_client_m
$LN781@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN782@s_client_m
$LN780@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN782@s_client_m:
	test	eax, eax
	jne	SHORT $LN166@s_client_m
; Line 965
	call	_DTLSv1_client_method
; Line 966
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	mov	DWORD PTR _socket_type$1$[esp+1064], 2
	jmp	$LN259@s_client_m
$LN166@s_client_m:
; Line 967
	mov	ecx, OFFSET ??_C@_08CFINCDNK@?9dtls1_2?$AA@
	mov	eax, esi
	npad	4
$LL783@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN784@s_client_m
	test	dl, dl
	je	SHORT $LN785@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN784@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL783@s_client_m
$LN785@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN786@s_client_m
$LN784@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN786@s_client_m:
	test	eax, eax
	jne	SHORT $LN168@s_client_m
; Line 968
	call	_DTLSv1_2_client_method
; Line 969
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
	mov	edi, eax
	mov	DWORD PTR _meth$1$[esp+1064], edi
	mov	DWORD PTR _socket_type$1$[esp+1064], 2
	jmp	$LN259@s_client_m
$LN168@s_client_m:
; Line 970
	mov	ecx, OFFSET ??_C@_08MDOIANFM@?9timeout?$AA@
	mov	eax, esi
$LL787@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN788@s_client_m
	test	dl, dl
	je	SHORT $LN789@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN788@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL787@s_client_m
$LN789@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN790@s_client_m
$LN788@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN790@s_client_m:
	test	eax, eax
	jne	SHORT $LN170@s_client_m
; Line 971
	mov	DWORD PTR _enable_timeouts$1$[esp+1064], 1
	jmp	$LN948@s_client_m
$LN170@s_client_m:
; Line 972
	mov	ecx, OFFSET ??_C@_04MIHAIBLG@?9mtu?$AA@
	mov	eax, esi
$LL791@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN792@s_client_m
	test	dl, dl
	je	$LN793@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN792@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL791@s_client_m
$LN793@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN794@s_client_m
$LN792@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN794@s_client_m:
	test	eax, eax
	jne	$LN172@s_client_m
; Line 973
	mov	eax, DWORD PTR _argc$[ebp]
	dec	eax
	mov	DWORD PTR _argc$[ebp], eax
	cmp	eax, 1
	jl	$bad$983
; Line 975
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	push	DWORD PTR [ebx]
	call	DWORD PTR __imp__atol
	add	esp, 4
	mov	DWORD PTR _socket_mtu$1$[esp+1064], eax
; Line 976
	jmp	$LN947@s_client_m
$LN172@s_client_m:
; Line 978
	mov	ecx, OFFSET ??_C@_0P@IADPNMPM@?9fallback_scsv?$AA@
	mov	eax, esi
	npad	5
$LL795@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN796@s_client_m
	test	dl, dl
	je	SHORT $LN797@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN796@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL795@s_client_m
$LN797@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN798@s_client_m
$LN796@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN798@s_client_m:
	test	eax, eax
	jne	SHORT $LN175@s_client_m
; Line 979
	mov	DWORD PTR _fallback_scsv$1$[esp+1064], 1
	jmp	$LN948@s_client_m
$LN175@s_client_m:
; Line 980
	mov	ecx, OFFSET ??_C@_08OAHLMBGP@?9keyform?$AA@
	mov	eax, esi
$LL799@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN800@s_client_m
	test	dl, dl
	je	SHORT $LN801@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN800@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL799@s_client_m
$LN801@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN802@s_client_m
$LN800@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN802@s_client_m:
	test	eax, eax
	jne	$LN177@s_client_m
; Line 981
	mov	eax, DWORD PTR _argc$[ebp]
	dec	eax
	mov	DWORD PTR _argc$[ebp], eax
	cmp	eax, 1
	jl	$bad$983
; Line 983
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	push	DWORD PTR [ebx]
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _key_format$1$[esp+1064], eax
	jmp	$LN947@s_client_m
$LN177@s_client_m:
; Line 984
	mov	ecx, OFFSET ??_C@_05NNOCMECB@?9pass?$AA@
	mov	eax, esi
$LL803@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN804@s_client_m
	test	dl, dl
	je	SHORT $LN805@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN804@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL803@s_client_m
$LN805@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN806@s_client_m
$LN804@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN806@s_client_m:
	test	eax, eax
	jne	$LN180@s_client_m
; Line 985
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 987
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _passarg$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN180@s_client_m:
; Line 988
	mov	ecx, OFFSET ??_C@_0M@MHFOFGHE@?9cert_chain?$AA@
	mov	eax, esi
$LL807@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN808@s_client_m
	test	dl, dl
	je	SHORT $LN809@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN808@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL807@s_client_m
$LN809@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN810@s_client_m
$LN808@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN810@s_client_m:
	test	eax, eax
	jne	$LN183@s_client_m
; Line 989
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 991
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _chain_file$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN183@s_client_m:
; Line 992
	mov	ecx, OFFSET ??_C@_04FMEKFICB@?9key?$AA@
	mov	eax, esi
	npad	3
$LL811@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN812@s_client_m
	test	dl, dl
	je	SHORT $LN813@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN812@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL811@s_client_m
$LN813@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN814@s_client_m
$LN812@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN814@s_client_m:
	test	eax, eax
	jne	$LN186@s_client_m
; Line 993
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 995
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _key_file$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN186@s_client_m:
; Line 996
	mov	ecx, OFFSET ??_C@_0L@HGEOPGF@?9reconnect?$AA@
	mov	eax, esi
	npad	3
$LL815@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN816@s_client_m
	test	dl, dl
	je	SHORT $LN817@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN816@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL815@s_client_m
$LN817@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN818@s_client_m
$LN816@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN818@s_client_m:
	test	eax, eax
	jne	SHORT $LN189@s_client_m
; Line 997
	mov	DWORD PTR _reconnect$1$[esp+1064], 5
	jmp	$LN948@s_client_m
$LN189@s_client_m:
; Line 998
	mov	ecx, OFFSET ??_C@_07MNNNLALG@?9CApath?$AA@
	mov	eax, esi
$LL819@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN820@s_client_m
	test	dl, dl
	je	SHORT $LN821@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN820@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL819@s_client_m
$LN821@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN822@s_client_m
$LN820@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN822@s_client_m:
	test	eax, eax
	jne	$LN191@s_client_m
; Line 999
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1001
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _CApath$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN191@s_client_m:
; Line 1002
	mov	ecx, OFFSET ??_C@_0N@IPPFFGOM@?9chainCApath?$AA@
	mov	eax, esi
	npad	2
$LL823@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN824@s_client_m
	test	dl, dl
	je	$LN825@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN824@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL823@s_client_m
$LN825@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN826@s_client_m
$LN824@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN826@s_client_m:
	test	eax, eax
	jne	$LN194@s_client_m
; Line 1003
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1005
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _chCApath$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN194@s_client_m:
; Line 1006
	mov	ecx, OFFSET ??_C@_0O@NMJDGHEA@?9verifyCApath?$AA@
	mov	eax, esi
$LL827@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN828@s_client_m
	test	dl, dl
	je	$LN829@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN828@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL827@s_client_m
$LN829@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN830@s_client_m
$LN828@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN830@s_client_m:
	test	eax, eax
	jne	$LN197@s_client_m
; Line 1007
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1009
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _vfyCApath$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN197@s_client_m:
; Line 1010
	mov	ecx, OFFSET ??_C@_0N@EBJMJDFN@?9build_chain?$AA@
	mov	eax, esi
$LL831@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN832@s_client_m
	test	dl, dl
	je	$LN833@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN832@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL831@s_client_m
$LN833@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN834@s_client_m
$LN832@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN834@s_client_m:
	test	eax, eax
	jne	$LN200@s_client_m
; Line 1011
	mov	DWORD PTR _build_chain$1$[esp+1064], 1
	jmp	$LN948@s_client_m
$LN200@s_client_m:
; Line 1012
	mov	ecx, OFFSET ??_C@_07EAFCHGPO@?9CAfile?$AA@
	mov	eax, esi
$LL835@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN836@s_client_m
	test	dl, dl
	je	$LN837@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN836@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL835@s_client_m
$LN837@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN838@s_client_m
$LN836@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN838@s_client_m:
	test	eax, eax
	jne	$LN202@s_client_m
; Line 1013
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1015
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _CAfile$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN202@s_client_m:
; Line 1016
	mov	ecx, OFFSET ??_C@_0N@CHKJAKE@?9chainCAfile?$AA@
	mov	eax, esi
	npad	5
$LL839@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN840@s_client_m
	test	dl, dl
	je	$LN841@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN840@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL839@s_client_m
$LN841@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN842@s_client_m
$LN840@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN842@s_client_m:
	test	eax, eax
	jne	$LN205@s_client_m
; Line 1017
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1019
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _chCAfile$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN205@s_client_m:
; Line 1020
	mov	ecx, OFFSET ??_C@_0O@FBBMKBAI@?9verifyCAfile?$AA@
	mov	eax, esi
$LL843@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN844@s_client_m
	test	dl, dl
	je	$LN845@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN844@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL843@s_client_m
$LN845@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN846@s_client_m
$LN844@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN846@s_client_m:
	test	eax, eax
	jne	$LN208@s_client_m
; Line 1021
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1023
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _vfyCAfile$1$[esp+1064], eax
; Line 1024
	jmp	$LN948@s_client_m
$LN208@s_client_m:
; Line 1027
	mov	ecx, OFFSET ??_C@_0O@PMNNGHPN@?9nextprotoneg?$AA@
	mov	eax, esi
	npad	6
$LL847@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN848@s_client_m
	test	dl, dl
	je	$LN849@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN848@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL847@s_client_m
$LN849@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN850@s_client_m
$LN848@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN850@s_client_m:
	test	eax, eax
	jne	$LN211@s_client_m
; Line 1028
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1030
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _next_proto_neg_in$1$[esp+1064], eax
; Line 1031
	jmp	$LN948@s_client_m
$LN211@s_client_m:
; Line 1033
	mov	ecx, OFFSET ??_C@_05IPCCHAIL@?9alpn?$AA@
	mov	eax, esi
$LL851@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN852@s_client_m
	test	dl, dl
	je	$LN853@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN852@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL851@s_client_m
$LN853@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN854@s_client_m
$LN852@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN854@s_client_m:
	test	eax, eax
	jne	$LN214@s_client_m
; Line 1034
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1036
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _alpn_in$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN214@s_client_m:
; Line 1037
	mov	ecx, OFFSET ??_C@_0M@JIFAPBHK@?9serverinfo?$AA@
	mov	eax, esi
	npad	9
$LL855@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN856@s_client_m
	test	dl, dl
	je	$LN857@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN856@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL855@s_client_m
$LN857@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN858@s_client_m
$LN856@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN858@s_client_m:
	test	eax, eax
	jne	$LN217@s_client_m
; Line 1042
	mov	ecx, DWORD PTR _argc$[ebp]
	xor	edx, edx
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1044
	add	ebx, 4
; Line 1045
	mov	DWORD PTR _serverinfo_types_count$1$[esp+1064], edx
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	ebx, DWORD PTR [ebx]
; Line 1046
	mov	edi, ebx
	lea	ecx, DWORD PTR [edi+1]
	npad	3
$LL859@s_client_m:
	mov	al, BYTE PTR [edi]
	inc	edi
	test	al, al
	jne	SHORT $LL859@s_client_m
	sub	edi, ecx
; Line 1047
	mov	esi, edx
	js	$LN947@s_client_m
; Line 1048
	mov	ecx, edx
	cmp	esi, edi
$LN961@s_client_m:
	je	$LN221@s_client_m
	cmp	BYTE PTR [ebx+esi], 44			; 0000002cH
	lea	eax, DWORD PTR [esi+1]
	jne	$LN220@s_client_m
$LN221@s_client_m:
; Line 1050
	lea	eax, DWORD PTR [ebx+edx]
	push	eax
	call	DWORD PTR __imp__atoi
	mov	ecx, DWORD PTR _serverinfo_types_count$1$[esp+1068]
	add	esp, 4
	mov	WORD PTR _serverinfo_types$[esp+ecx*2+1064], ax
; Line 1051
	inc	ecx
; Line 1052
	lea	eax, DWORD PTR [esi+1]
	mov	DWORD PTR _serverinfo_types_count$1$[esp+1064], ecx
	mov	edx, eax
$LN220@s_client_m:
; Line 1054
	cmp	ecx, 100				; 00000064H
	je	$LN947@s_client_m
; Line 1047
	mov	esi, eax
	cmp	esi, edi
	jle	SHORT $LN961@s_client_m
; Line 1057
	jmp	$LN947@s_client_m
$LN217@s_client_m:
; Line 1060
	mov	ecx, OFFSET ??_C@_05OHEBDJNH@?9nbio?$AA@
	mov	eax, esi
$LL860@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN861@s_client_m
	test	dl, dl
	je	$LN862@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN861@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL860@s_client_m
$LN862@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN863@s_client_m
$LN861@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN863@s_client_m:
	test	eax, eax
	jne	$LN223@s_client_m
; Line 1061
	mov	DWORD PTR _c_nbio, 1
; Line 1062
	jmp	$LN948@s_client_m
$LN223@s_client_m:
; Line 1064
	mov	ecx, OFFSET ??_C@_09IBBJPNLN@?9starttls?$AA@
	mov	eax, esi
$LL864@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN865@s_client_m
	test	dl, dl
	je	$LN866@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN865@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL864@s_client_m
$LN866@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN867@s_client_m
$LN865@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN867@s_client_m:
	test	eax, eax
	jne	$LN225@s_client_m
; Line 1065
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1067
	add	ebx, 4
; Line 1068
	mov	ecx, OFFSET ??_C@_04DCCEAEFJ@smtp?$AA@
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	esi, DWORD PTR [ebx]
	mov	eax, esi
	npad	2
$LL868@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN869@s_client_m
	test	dl, dl
	je	$LN870@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN869@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL868@s_client_m
$LN870@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN871@s_client_m
$LN869@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN871@s_client_m:
	test	eax, eax
	jne	SHORT $LN228@s_client_m
; Line 1069
	mov	DWORD PTR _starttls_proto$1$[esp+1064], 1
	jmp	$LN948@s_client_m
$LN228@s_client_m:
; Line 1070
	mov	ecx, OFFSET ??_C@_04DNAACBI@pop3?$AA@
	mov	eax, esi
	npad	7
$LL872@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN873@s_client_m
	test	dl, dl
	je	SHORT $LN874@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN873@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL872@s_client_m
$LN874@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN875@s_client_m
$LN873@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN875@s_client_m:
	test	eax, eax
	jne	SHORT $LN230@s_client_m
; Line 1071
	mov	DWORD PTR _starttls_proto$1$[esp+1064], 2
	jmp	$LN948@s_client_m
$LN230@s_client_m:
; Line 1072
	mov	ecx, OFFSET ??_C@_04CJJOKOB@imap?$AA@
	mov	eax, esi
$LL876@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN877@s_client_m
	test	dl, dl
	je	$LN878@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN877@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL876@s_client_m
$LN878@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN879@s_client_m
$LN877@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN879@s_client_m:
	test	eax, eax
	jne	SHORT $LN232@s_client_m
; Line 1073
	mov	DWORD PTR _starttls_proto$1$[esp+1064], 3
	jmp	$LN948@s_client_m
$LN232@s_client_m:
; Line 1074
	mov	ecx, OFFSET ??_C@_03LMDBDBEG@ftp?$AA@
	mov	eax, esi
	npad	6
$LL880@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN881@s_client_m
	test	dl, dl
	je	$LN882@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN881@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL880@s_client_m
$LN882@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN883@s_client_m
$LN881@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN883@s_client_m:
	test	eax, eax
	jne	SHORT $LN234@s_client_m
; Line 1075
	mov	DWORD PTR _starttls_proto$1$[esp+1064], 4
	jmp	$LN948@s_client_m
$LN234@s_client_m:
; Line 1076
	mov	eax, OFFSET ??_C@_04ECPNJNJE@xmpp?$AA@
	npad	9
$LL884@s_client_m:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	$LN885@s_client_m
	test	cl, cl
	je	$LN886@s_client_m
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	$LN885@s_client_m
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL884@s_client_m
$LN886@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN887@s_client_m
$LN885@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN887@s_client_m:
	test	eax, eax
	jne	$bad$983
; Line 1077
	mov	DWORD PTR _starttls_proto$1$[esp+1064], 5
; Line 1080
	jmp	$LN948@s_client_m
$LN225@s_client_m:
; Line 1082
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, esi
	npad	3
$LL888@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN889@s_client_m
	test	dl, dl
	je	$LN890@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN889@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL888@s_client_m
$LN890@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN891@s_client_m
$LN889@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN891@s_client_m:
	test	eax, eax
	jne	$LN238@s_client_m
; Line 1083
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1085
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _engine_id$1$[esp+1064], eax
	jmp	$LN948@s_client_m
$LN238@s_client_m:
; Line 1086
	mov	ecx, OFFSET ??_C@_0BD@KGIPPADG@?9ssl_client_engine?$AA@
	mov	eax, esi
$LL892@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN893@s_client_m
	test	dl, dl
	je	$LN894@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN893@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL892@s_client_m
$LN894@s_client_m:
	xor	eax, eax
	jmp	SHORT $LN895@s_client_m
$LN893@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN895@s_client_m:
	test	eax, eax
	jne	$LN241@s_client_m
; Line 1087
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1089
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _ssl_client_engine_id$1$[esp+1064], eax
; Line 1090
	jmp	$LN948@s_client_m
$LN241@s_client_m:
; Line 1092
	mov	ecx, OFFSET ??_C@_05LGFPCDPE@?9rand?$AA@
	mov	eax, esi
$LL896@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN897@s_client_m
	test	dl, dl
	je	$LN898@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN897@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL896@s_client_m
$LN898@s_client_m:
	xor	eax, eax
	jmp	$LN899@s_client_m
$LN897@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN899@s_client_m:
	test	eax, eax
	jne	$LN244@s_client_m
; Line 1093
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1095
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _inrand$1$[esp+1064], eax
; Line 1096
	jmp	$LN948@s_client_m
$LN244@s_client_m:
; Line 1098
	mov	ecx, OFFSET ??_C@_0M@IEKJDKFH@?9servername?$AA@
	mov	eax, esi
	npad	7
$LL900@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN901@s_client_m
	test	dl, dl
	je	$LN902@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN901@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL900@s_client_m
$LN902@s_client_m:
	xor	eax, eax
	jmp	$LN903@s_client_m
$LN901@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN903@s_client_m:
	test	eax, eax
	jne	$LN247@s_client_m
; Line 1099
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1101
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _servername$1$[esp+1064], eax
; Line 1103
	jmp	$LN948@s_client_m
$LN247@s_client_m:
; Line 1113
	mov	ecx, OFFSET ??_C@_09BJOIJNBC@?9use_srtp?$AA@
	mov	eax, esi
$LL904@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN905@s_client_m
	test	dl, dl
	je	$LN906@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN905@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL904@s_client_m
$LN906@s_client_m:
	xor	eax, eax
	jmp	$LN907@s_client_m
$LN905@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN907@s_client_m:
	test	eax, eax
	jne	$LN250@s_client_m
; Line 1114
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1116
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _srtp_profiles, eax
; Line 1117
	jmp	$LN948@s_client_m
$LN250@s_client_m:
; Line 1119
	mov	ecx, OFFSET ??_C@_0O@HHCLPCNN@?9keymatexport?$AA@
	mov	eax, esi
	npad	5
$LL908@s_client_m:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	$LN909@s_client_m
	test	dl, dl
	je	$LN910@s_client_m
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	$LN909@s_client_m
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL908@s_client_m
$LN910@s_client_m:
	xor	eax, eax
	jmp	$LN911@s_client_m
$LN909@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN911@s_client_m:
	test	eax, eax
	jne	$LN253@s_client_m
; Line 1120
	mov	ecx, DWORD PTR _argc$[ebp]
	dec	ecx
	mov	DWORD PTR _argc$[ebp], ecx
	cmp	ecx, 1
	jl	$bad$983
; Line 1122
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _keymatexportlabel, eax
	jmp	$LN948@s_client_m
$LN253@s_client_m:
; Line 1123
	mov	eax, OFFSET ??_C@_0BB@MLPFNLDC@?9keymatexportlen?$AA@
$LL912@s_client_m:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	$LN913@s_client_m
	test	cl, cl
	je	$LN914@s_client_m
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	$LN913@s_client_m
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL912@s_client_m
$LN914@s_client_m:
	xor	eax, eax
	jmp	$LN915@s_client_m
$LN913@s_client_m:
	sbb	eax, eax
	or	eax, 1
$LN915@s_client_m:
	test	eax, eax
	jne	$LN256@s_client_m
; Line 1124
	mov	eax, DWORD PTR _argc$[ebp]
	dec	eax
	mov	DWORD PTR _argc$[ebp], eax
	cmp	eax, 1
	jl	$bad$983
; Line 1126
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
	push	DWORD PTR [ebx]
	call	edi
	add	esp, 4
	mov	DWORD PTR _keymatexportlen, eax
$LN979@s_client_m:
; Line 1127
	test	eax, eax
$LN978@s_client_m:
	je	$bad$983
$LN947@s_client_m:
	mov	ebx, DWORD PTR _argv$GSCopy$[esp+1064]
$LN948@s_client_m:
	mov	edi, DWORD PTR _meth$1$[esp+1064]
$LN259@s_client_m:
; Line 1134
	dec	DWORD PTR _argc$[ebp]
; Line 1135
	add	ebx, 4
	mov	DWORD PTR _argv$GSCopy$[esp+1064], ebx
$LN531@s_client_m:
; Line 788
	cmp	DWORD PTR _argc$[ebp], 1
	jge	$LN963@s_client_m
; Line 1652
	mov	esi, DWORD PTR _next_proto_neg_in$1$[esp+1064]
$LN260@s_client_m:
; Line 1152
	call	_SSL_library_init
; Line 1153
	call	_SSL_load_error_strings
; Line 1156
	mov	DWORD PTR _next_proto+8, -1
; Line 1157
	test	esi, esi
	je	$LN261@s_client_m
; Line 1158
	push	esi
	push	OFFSET _next_proto+4
	call	_next_protos_parse
	add	esp, 8
	mov	DWORD PTR _next_proto, eax
; Line 1160
	test	eax, eax
	jne	$LN262@s_client_m
; Line 1161
	push	OFFSET ??_C@_0CG@GMAKMBJO@Error?5parsing?5?9nextprotoneg?5argu@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1162
	jmp	$LN976@s_client_m
$LN142@s_client_m:
; Line 913
	mov	eax, DWORD PTR _argv$GSCopy$[esp+1064]
	push	DWORD PTR [eax]
	push	OFFSET ??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@
; Line 914
	jmp	$LN964@s_client_m
$LN256@s_client_m:
; Line 1130
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
$LN964@s_client_m:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$bad$983:
; Line 1139
	call	_sc_usage
; Line 1140
	jmp	$LN976@s_client_m
$LN261@s_client_m:
; Line 1165
	mov	DWORD PTR _next_proto, 0
$LN262@s_client_m:
; Line 1169
	push	1
	push	DWORD PTR _engine_id$1$[esp+1068]
	push	DWORD PTR _bio_err
	call	_setup_engine
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1170
	mov	eax, DWORD PTR _ssl_client_engine_id$1$[esp+1064]
	test	eax, eax
	je	$LN265@s_client_m
; Line 1171
	push	eax
	call	_ENGINE_by_id
	add	esp, 4
	mov	DWORD PTR _ssl_client_engine$1$[esp+1064], eax
; Line 1172
	test	eax, eax
	jne	$LN265@s_client_m
; Line 1173
	push	OFFSET ??_C@_0CC@HCMIJPJF@Error?5getting?5client?5auth?5engine@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$LN976@s_client_m
$LN265@s_client_m:
; Line 1178
	push	0
	lea	eax, DWORD PTR _pass$[esp+1068]
	push	eax
	push	0
	push	DWORD PTR _passarg$1$[esp+1076]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN266@s_client_m
; Line 1179
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$LN976@s_client_m
$LN266@s_client_m:
; Line 1183
	mov	eax, DWORD PTR _key_file$1$[esp+1064]
; Line 1184
	mov	ebx, DWORD PTR _cert_file$1$[esp+1064]
	test	eax, eax
	jne	$LN587@s_client_m
	mov	eax, ebx
; Line 1186
	test	ebx, ebx
	je	$LN271@s_client_m
$LN587@s_client_m:
; Line 1188
	push	OFFSET ??_C@_0CE@KPAFLOEO@client?5certificate?5private?5key?5f@
	push	esi
	push	DWORD PTR _pass$[esp+1072]
	push	0
	push	DWORD PTR _key_format$1$[esp+1080]
	push	eax
	push	DWORD PTR _bio_err
	call	_load_key
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _key$1$[esp+1064], eax
; Line 1190
	test	eax, eax
	je	$LN977@s_client_m
; Line 1197
	test	ebx, ebx
	je	$LN271@s_client_m
; Line 1198
	push	OFFSET ??_C@_0BI@PGEJCCKA@client?5certificate?5file?$AA@
	push	esi
	push	0
	push	DWORD PTR _cert_format$1$[esp+1076]
	push	ebx
	push	DWORD PTR _bio_err
	call	_load_cert
	add	esp, 24					; 00000018H
	mov	DWORD PTR _cert$1$[esp+1064], eax
; Line 1201
	test	eax, eax
	je	$LN977@s_client_m
$LN271@s_client_m:
; Line 1207
	mov	eax, DWORD PTR _chain_file$1$[esp+1064]
	test	eax, eax
	je	$LN273@s_client_m
; Line 1208
	push	OFFSET ??_C@_0BJ@LLIDDFFJ@client?5certificate?5chain?$AA@
	push	esi
	push	0
	push	3
	push	eax
	push	DWORD PTR _bio_err
	call	_load_certs
	add	esp, 24					; 00000018H
	mov	DWORD PTR _chain$1$[esp+1064], eax
; Line 1210
	test	eax, eax
	je	$LN976@s_client_m
$LN273@s_client_m:
; Line 1214
	mov	eax, DWORD PTR _crl_file$1$[esp+1064]
	test	eax, eax
	je	$LN960@s_client_m
; Line 1216
	push	DWORD PTR _crl_format$1$[esp+1064]
	push	eax
	call	_load_crl
	mov	esi, eax
	add	esp, 8
; Line 1217
	test	esi, esi
	jne	$LN275@s_client_m
; Line 1218
	push	OFFSET ??_C@_0BD@PIKJPJLO@Error?5loading?5CRL?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 1219
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 1220
	jmp	$LN976@s_client_m
$LN275@s_client_m:
; Line 1222
	call	_sk_new_null
	mov	ebx, eax
	mov	DWORD PTR _crls$1$[esp+1064], ebx
; Line 1223
	test	ebx, ebx
	je	$LN277@s_client_m
	push	esi
	push	ebx
	call	_sk_push
	add	esp, 8
	test	eax, eax
	jne	$LN276@s_client_m
$LN277@s_client_m:
; Line 1224
	push	OFFSET ??_C@_0BC@IKMGLJPK@Error?5adding?5CRL?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 1225
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 1226
	push	esi
	call	_X509_CRL_free
	add	esp, 16					; 00000010H
$LN952@s_client_m:
; Line 1227
	mov	ebx, DWORD PTR _cbuf$1$[esp+1064]
	xor	esi, esi
	mov	edi, DWORD PTR _crls$1$[esp+1064]
	jmp	$LN428@s_client_m
$LN960@s_client_m:
	xor	ebx, ebx
$LN276@s_client_m:
; Line 1231
	push	DWORD PTR _bio_err
	lea	eax, DWORD PTR _exc$[esp+1068]
	push	eax
	call	_load_excert
	add	esp, 8
	test	eax, eax
	je	SHORT $LN952@s_client_m
; Line 1235
	push	1
	push	DWORD PTR _bio_err
	push	0
	call	_app_RAND_load_file
	add	esp, 12					; 0000000cH
	test	eax, eax
	mov	eax, DWORD PTR _inrand$1$[esp+1064]
	jne	$LN279@s_client_m
	test	eax, eax
	jne	$LN586@s_client_m
	call	_RAND_status
	test	eax, eax
	jne	$LN280@s_client_m
; Line 1236
	push	OFFSET ??_C@_0EG@NMHBLOCJ@warning?0?5not?5much?5extra?5random?5d@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1239
	jmp	$LN280@s_client_m
$LN279@s_client_m:
	test	eax, eax
	je	$LN280@s_client_m
$LN586@s_client_m:
; Line 1240
	push	eax
	call	_app_RAND_load_files
	push	eax
	push	OFFSET ??_C@_0BO@JENMPIEN@?$CFld?5semi?9random?5bytes?5loaded?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN280@s_client_m:
; Line 1243
	cmp	DWORD PTR _bio_c_out, 0
	jne	$LN285@s_client_m
; Line 1244
	cmp	DWORD PTR _c_quiet, 0
	je	$LN593@s_client_m
	cmp	DWORD PTR _c_debug, 0
	jne	$LN593@s_client_m
; Line 1245
	call	_BIO_s_null
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_c_out, eax
; Line 1246
	cmp	DWORD PTR _c_msg, 0
	je	$LN285@s_client_m
	cmp	DWORD PTR _bio_c_msg, 0
	jne	$LN285@s_client_m
; Line 1247
	mov	eax, DWORD PTR __imp____acrt_iob_func
	push	0
	push	1
	call	eax
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	mov	DWORD PTR _bio_c_msg, eax
; Line 1248
	jmp	$LN965@s_client_m
$LN593@s_client_m:
; Line 1250
	mov	eax, DWORD PTR __imp____acrt_iob_func
	push	0
	push	1
	call	eax
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	mov	DWORD PTR _bio_c_out, eax
$LN965@s_client_m:
	add	esp, 8
$LN285@s_client_m:
; Line 1254
	push	0
	lea	eax, DWORD PTR _srp_arg$[esp+1068]
	push	eax
	push	0
	push	DWORD PTR _srppass$1$[esp+1076]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN286@s_client_m
; Line 1255
	push	OFFSET ??_C@_0BI@IBJFBNHD@Error?5getting?5password?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1256
	mov	ebx, DWORD PTR _cbuf$1$[esp+1072]
	add	esp, 8
	mov	edi, DWORD PTR _crls$1$[esp+1064]
	xor	esi, esi
	jmp	$LN428@s_client_m
$LN286@s_client_m:
; Line 1260
	push	edi
	call	_SSL_CTX_new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR _ctx$1$[esp+1064], esi
; Line 1261
	test	esi, esi
	jne	$LN287@s_client_m
; Line 1262
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 1263
	mov	ebx, DWORD PTR _cbuf$1$[esp+1068]
	add	esp, 4
	mov	edi, DWORD PTR _crls$1$[esp+1064]
	jmp	$LN428@s_client_m
$LN287@s_client_m:
; Line 1266
	mov	eax, DWORD PTR _vpm$[esp+1064]
	test	eax, eax
	je	$LN288@s_client_m
; Line 1267
	push	eax
	push	esi
	call	_SSL_CTX_set1_param
	add	esp, 8
$LN288@s_client_m:
; Line 1269
	push	1
	push	1
	push	DWORD PTR _ssl_args$[esp+1072]
	push	DWORD PTR _cctx$1$[esp+1076]
	push	DWORD PTR _bio_err
	push	esi
	call	_args_ssl_call
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	$LN289@s_client_m
; Line 1270
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 1271
	mov	ebx, DWORD PTR _cbuf$1$[esp+1068]
	add	esp, 4
	mov	edi, DWORD PTR _crls$1$[esp+1064]
	jmp	$LN428@s_client_m
$LN289@s_client_m:
; Line 1274
	mov	edi, DWORD PTR _crl_download$1$[esp+1064]
	push	edi
	push	ebx
	push	DWORD PTR _chCAfile$1$[esp+1072]
	push	DWORD PTR _chCApath$1$[esp+1076]
	push	DWORD PTR _vfyCAfile$1$[esp+1080]
	push	DWORD PTR _vfyCApath$1$[esp+1084]
	push	esi
	call	_ssl_load_stores
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	$LN290@s_client_m
; Line 1276
	push	OFFSET ??_C@_0BP@HJJPNDHG@Error?5loading?5store?5locations?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1277
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 1278
	mov	ebx, DWORD PTR _cbuf$1$[esp+1076]
	add	esp, 12					; 0000000cH
	mov	edi, DWORD PTR _crls$1$[esp+1064]
	jmp	$LN428@s_client_m
$LN290@s_client_m:
; Line 1281
	mov	ebx, DWORD PTR _ssl_client_engine$1$[esp+1064]
	test	ebx, ebx
	je	$LN291@s_client_m
; Line 1282
	push	ebx
	push	esi
	call	_SSL_CTX_set_client_cert_engine
	add	esp, 8
	test	eax, eax
	jne	$LN292@s_client_m
; Line 1283
	push	OFFSET ??_C@_0CC@GPEALKDB@Error?5setting?5client?5auth?5engine@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 1284
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 1285
	push	ebx
	call	_ENGINE_free
; Line 1286
	mov	ebx, DWORD PTR _cbuf$1$[esp+1080]
	add	esp, 16					; 00000010H
	mov	edi, DWORD PTR _crls$1$[esp+1064]
	jmp	$LN428@s_client_m
$LN292@s_client_m:
; Line 1288
	push	ebx
	call	_ENGINE_free
	add	esp, 4
$LN291@s_client_m:
; Line 1294
	cmp	DWORD PTR _psk_key, 0
	je	$LN293@s_client_m
; Line 1299
	cmp	DWORD PTR _c_debug, 0
	je	$LN294@s_client_m
; Line 1300
	push	OFFSET ??_C@_0DI@FBFLLFGP@PSK?5key?5given?5or?5JPAKE?5in?5use?0?5s@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 8
$LN294@s_client_m:
; Line 1302
	push	OFFSET _psk_client_cb
	push	esi
	call	_SSL_CTX_set_psk_client_callback
	add	esp, 8
$LN293@s_client_m:
; Line 1306
	mov	eax, DWORD PTR _srtp_profiles
	test	eax, eax
	je	$LN295@s_client_m
; Line 1307
	push	eax
	push	esi
	call	_SSL_CTX_set_tlsext_use_srtp
	add	esp, 8
$LN295@s_client_m:
; Line 1309
	mov	eax, DWORD PTR _exc$[esp+1064]
	test	eax, eax
	je	$LN296@s_client_m
; Line 1310
	push	eax
	push	esi
	call	_ssl_ctx_set_excert
	add	esp, 8
$LN296@s_client_m:
; Line 1314
	cmp	DWORD PTR _next_proto, 0
	je	$LN297@s_client_m
; Line 1315
	push	OFFSET _next_proto
	push	OFFSET _next_proto_cb
	push	esi
	call	_SSL_CTX_set_next_proto_select_cb
	add	esp, 12					; 0000000cH
$LN297@s_client_m:
; Line 1317
	mov	eax, DWORD PTR _alpn_in$1$[esp+1064]
	test	eax, eax
	je	$LN298@s_client_m
; Line 1319
	push	eax
	lea	eax, DWORD PTR _alpn_len$1[esp+1068]
	push	eax
	call	_next_protos_parse
	mov	esi, eax
	add	esp, 8
; Line 1321
	test	esi, esi
	jne	$LN299@s_client_m
; Line 1322
	push	OFFSET ??_C@_0BO@MDMDCKCI@Error?5parsing?5?9alpn?5argument?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN954@s_client_m:
; Line 1323
	mov	ebx, DWORD PTR _cbuf$1$[esp+1064]
	mov	esi, DWORD PTR _ctx$1$[esp+1064]
	mov	edi, DWORD PTR _crls$1$[esp+1064]
	jmp	$LN428@s_client_m
$LN299@s_client_m:
; Line 1325
	movzx	eax, WORD PTR _alpn_len$1[esp+1064]
	push	eax
	push	esi
	push	DWORD PTR _ctx$1$[esp+1072]
	call	_SSL_CTX_set_alpn_protos
; Line 1326
	push	esi
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
$LN298@s_client_m:
; Line 1330
	mov	ebx, DWORD PTR _serverinfo_types_count$1$[esp+1064]
	xor	esi, esi
	test	ebx, ebx
	jle	$LN11@s_client_m
	mov	edi, DWORD PTR _ctx$1$[esp+1064]
	npad	4
$LL12@s_client_m:
; Line 1331
	movzx	eax, WORD PTR _serverinfo_types$[esp+esi*2+1064]
	push	0
	push	OFFSET _serverinfo_cli_parse_cb
	push	0
	push	0
	push	0
	push	eax
	push	edi
	call	_SSL_CTX_add_client_custom_ext
	inc	esi
	add	esp, 28					; 0000001cH
	cmp	esi, ebx
	jl	SHORT $LL12@s_client_m
	mov	edi, DWORD PTR _crl_download$1$[esp+1064]
$LN11@s_client_m:
; Line 1338
	cmp	DWORD PTR _state$1$[esp+1064], 0
; Line 1339
	mov	esi, DWORD PTR _ctx$1$[esp+1064]
	je	$LN300@s_client_m
	push	OFFSET _apps_ssl_info_callback
	push	esi
	call	_SSL_CTX_set_info_callback
	add	esp, 8
$LN300@s_client_m:
; Line 1345
	push	OFFSET _verify_callback
	push	DWORD PTR _verify$1$[esp+1068]
	push	esi
	call	_SSL_CTX_set_verify
; Line 1348
	mov	ecx, DWORD PTR _CAfile$1$[esp+1076]
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _CApath$1$[esp+1064]
	test	ecx, ecx
	jne	$LN302@s_client_m
	test	eax, eax
	je	$LN301@s_client_m
$LN302@s_client_m:
	push	eax
	push	ecx
	push	esi
	call	_SSL_CTX_load_verify_locations
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN301@s_client_m
; Line 1349
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN301@s_client_m:
; Line 1351
	push	esi
	call	_SSL_CTX_set_default_verify_paths
	add	esp, 4
	test	eax, eax
	jne	$LN303@s_client_m
; Line 1352
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN303@s_client_m:
; Line 1355
	push	edi
	mov	edi, DWORD PTR _crls$1$[esp+1068]
	push	edi
	push	esi
	call	_ssl_ctx_add_crls
; Line 1356
	push	DWORD PTR _build_chain$1$[esp+1076]
	push	DWORD PTR _chain$1$[esp+1080]
	push	DWORD PTR _key$1$[esp+1084]
	push	DWORD PTR _cert$1$[esp+1088]
	push	esi
	call	_set_cert_key_stuff
	add	esp, 32					; 00000020H
	test	eax, eax
	je	$LN951@s_client_m
; Line 1360
	mov	ebx, DWORD PTR _servername$1$[esp+1064]
	test	ebx, ebx
	je	$LN305@s_client_m
; Line 1361
	mov	eax, DWORD PTR _bio_err
; Line 1362
	push	OFFSET _ssl_servername_cb
	push	53					; 00000035H
	push	esi
	mov	DWORD PTR _tlsextcbp$[esp+1076], eax
	call	_SSL_CTX_callback_ctrl
; Line 1363
	lea	eax, DWORD PTR _tlsextcbp$[esp+1076]
	push	eax
	push	0
	push	54					; 00000036H
	push	esi
	call	_SSL_CTX_ctrl
	add	esp, 28					; 0000001cH
$LN305@s_client_m:
; Line 1366
	mov	eax, DWORD PTR _srp_arg$[esp+1068]
	test	eax, eax
	je	$LN308@s_client_m
; Line 1367
	cmp	DWORD PTR _srp_lateuser$1$[esp+1064], 0
	jne	$LN307@s_client_m
	push	eax
	push	esi
	call	_SSL_CTX_set_srp_username
	add	esp, 8
	test	eax, eax
	jne	$LN307@s_client_m
; Line 1368
	push	OFFSET ??_C@_0BM@BPFDKLGC@Unable?5to?5set?5SRP?5username?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN951@s_client_m:
; Line 1369
	mov	ebx, DWORD PTR _cbuf$1$[esp+1064]
	jmp	$LN428@s_client_m
$LN307@s_client_m:
; Line 1371
	mov	eax, DWORD PTR _c_msg
	mov	DWORD PTR _srp_arg$[esp+1072], eax
; Line 1372
	mov	eax, DWORD PTR _c_debug
	mov	DWORD PTR _srp_arg$[esp+1076], eax
; Line 1373
	lea	eax, DWORD PTR _srp_arg$[esp+1064]
	push	eax
	push	esi
	call	_SSL_CTX_set_srp_cb_arg
; Line 1374
	push	OFFSET _ssl_give_srp_client_pwd_cb
	push	esi
	call	_SSL_CTX_set_srp_client_pwd_callback
; Line 1375
	push	DWORD PTR _srp_arg$[esp+1100]
	push	esi
	call	_SSL_CTX_set_srp_strength
	add	esp, 24					; 00000018H
; Line 1376
	cmp	DWORD PTR _c_msg, 0
	jne	$LN309@s_client_m
	cmp	DWORD PTR _c_debug, 0
	jne	$LN309@s_client_m
	cmp	DWORD PTR _srp_arg$[esp+1080], 0
	jne	$LN308@s_client_m
$LN309@s_client_m:
; Line 1377
	push	OFFSET _ssl_srp_verify_param_cb
	push	esi
	call	_SSL_CTX_set_srp_verify_param_callback
	add	esp, 8
$LN308@s_client_m:
; Line 1383
	push	esi
	call	_SSL_new
; Line 1384
	mov	esi, DWORD PTR _sess_in$1$[esp+1068]
	add	esp, 4
	mov	edi, eax
	mov	DWORD PTR _con$1$[esp+1064], edi
	test	esi, esi
	je	$LN310@s_client_m
; Line 1386
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	esi
	call	_BIO_new_file
	mov	ebx, eax
	add	esp, 8
; Line 1387
	test	ebx, ebx
	jne	$LN311@s_client_m
; Line 1388
	push	esi
$LN974@s_client_m:
	push	OFFSET ??_C@_0BM@IGJCFOAJ@Can?8t?5open?5session?5file?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1389
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 1390
	jmp	$end$984
$LN311@s_client_m:
; Line 1392
	push	0
	push	0
	push	0
	push	ebx
	call	_PEM_read_bio_SSL_SESSION
; Line 1393
	push	ebx
	mov	esi, eax
	call	_BIO_free
	add	esp, 20					; 00000014H
; Line 1394
	test	esi, esi
	jne	$LN312@s_client_m
; Line 1395
	mov	eax, DWORD PTR _sess_in$1$[esp+1064]
	push	eax
; Line 1397
	jmp	SHORT $LN974@s_client_m
$LN312@s_client_m:
; Line 1399
	push	esi
	push	edi
	call	_SSL_set_session
; Line 1400
	push	esi
	call	_SSL_SESSION_free
	mov	ebx, DWORD PTR _servername$1$[esp+1076]
	add	esp, 12					; 0000000cH
$LN310@s_client_m:
; Line 1403
	cmp	DWORD PTR _fallback_scsv$1$[esp+1064], 0
	je	$LN313@s_client_m
; Line 1404
	push	0
	push	128					; 00000080H
	push	33					; 00000021H
	push	edi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
$LN313@s_client_m:
; Line 1407
	test	ebx, ebx
	je	$LN456@s_client_m
; Line 1408
	push	ebx
	push	0
	push	55					; 00000037H
	push	edi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN456@s_client_m
; Line 1409
	push	OFFSET ??_C@_0CJ@IEDADJGO@Unable?5to?5set?5TLS?5servername?5ext@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1410
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 1411
	jmp	$end$984
$LN456@s_client_m:
; Line 1430
	movsx	eax, WORD PTR _port$[esp+1064]
	mov	ebx, DWORD PTR _socket_type$1$[esp+1064]
	push	ebx
	push	eax
	push	DWORD PTR _host$[esp+1072]
	lea	eax, DWORD PTR _s$[esp+1076]
	push	eax
	call	_init_client
	mov	esi, DWORD PTR __imp__shutdown@8
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN523@s_client_m
	npad	13
$re_start$985:
; Line 1435
	push	DWORD PTR _s$[esp+1064]
	push	OFFSET ??_C@_0BB@NADOOA@CONNECTED?$CI?$CF08X?$CJ?6?$AA@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1438
	cmp	DWORD PTR _c_nbio, 0
	je	$LN318@s_client_m
; Line 1440
	push	OFFSET ??_C@_0BM@FCELEJEG@turning?5on?5non?5blocking?5io?6?$AA@
	push	DWORD PTR _bio_c_out
	mov	DWORD PTR _l$2[esp+1072], 1
	call	_BIO_printf
; Line 1441
	lea	eax, DWORD PTR _l$2[esp+1072]
	push	eax
	push	-2147195266				; 8004667eH
	push	DWORD PTR _s$[esp+1080]
	call	_BIO_socket_ioctl
	add	esp, 20					; 00000014H
	test	eax, eax
	js	$LN524@s_client_m
$LN318@s_client_m:
; Line 1447
	test	BYTE PTR _c_Pause, 1
	je	$LN319@s_client_m
; Line 1448
	push	1
	push	edi
	call	_SSL_set_debug
	add	esp, 8
$LN319@s_client_m:
; Line 1452
	push	0
	push	DWORD PTR _s$[esp+1068]
	cmp	ebx, 2
	jne	$LN320@s_client_m
	call	_BIO_new_dgram
	add	esp, 8
	mov	ebx, eax
; Line 1453
	lea	eax, DWORD PTR _peerlen$[esp+1064]
	mov	DWORD PTR _sbio$1$[esp+1064], ebx
	push	eax
	lea	eax, DWORD PTR _peer$[esp+1068]
	push	eax
	push	DWORD PTR _s$[esp+1072]
	call	DWORD PTR __imp__getsockname@12
	test	eax, eax
	js	$LN525@s_client_m
; Line 1460
	lea	eax, DWORD PTR _peer$[esp+1064]
	push	eax
	push	1
	push	32					; 00000020H
	push	ebx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 1462
	cmp	DWORD PTR _enable_timeouts$1$[esp+1064], 0
	je	$LN323@s_client_m
; Line 1465
	lea	eax, DWORD PTR _timeout$[esp+1064]
	mov	DWORD PTR _timeout$[esp+1064], 0
	push	eax
	push	0
	push	33					; 00000021H
	push	ebx
	mov	DWORD PTR _timeout$[esp+1084], 250000	; 0003d090H
	call	_BIO_ctrl
; Line 1469
	lea	eax, DWORD PTR _timeout$[esp+1080]
	mov	DWORD PTR _timeout$[esp+1080], 0
	push	eax
	push	0
	push	35					; 00000023H
	push	ebx
	mov	DWORD PTR _timeout$[esp+1100], 250000	; 0003d090H
	call	_BIO_ctrl
	add	esp, 32					; 00000020H
$LN323@s_client_m:
; Line 1472
	cmp	DWORD PTR _socket_mtu$1$[esp+1064], 0
; Line 1473
	push	0
	push	0
	je	$LN324@s_client_m
	push	121					; 00000079H
	push	edi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
; Line 1479
	push	0
	cmp	DWORD PTR _socket_mtu$1$[esp+1068], eax
	jl	$LN526@s_client_m
	push	4096					; 00001000H
	push	32					; 00000020H
	push	edi
	call	_SSL_ctrl
; Line 1480
	push	0
	push	DWORD PTR _socket_mtu$1$[esp+1084]
	push	120					; 00000078H
	push	edi
	call	_SSL_ctrl
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	$LN321@s_client_m
; Line 1481
	push	OFFSET ??_C@_0BD@LHDLOJJB@Failed?5to?5set?5MTU?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1482
	push	ebx
	call	_BIO_free
	add	esp, 12					; 0000000cH
; Line 1483
	jmp	$shut$986
$LN324@s_client_m:
; Line 1487
	push	39					; 00000027H
	push	ebx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 1488
	jmp	$LN321@s_client_m
$LN320@s_client_m:
; Line 1489
	call	_BIO_new_socket
	add	esp, 8
	mov	DWORD PTR _sbio$1$[esp+1064], eax
	mov	ebx, eax
$LN321@s_client_m:
; Line 1491
	cmp	DWORD PTR _nbio_test$1$[esp+1064], 0
	je	$LN328@s_client_m
; Line 1494
	call	_BIO_f_nbio_test
	push	eax
	call	_BIO_new
; Line 1495
	push	ebx
	push	eax
	call	_BIO_push
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _sbio$1$[esp+1064], ebx
$LN328@s_client_m:
; Line 1498
	cmp	DWORD PTR _c_debug, 0
	je	$LN329@s_client_m
; Line 1499
	push	1
	push	edi
	call	_SSL_set_debug
; Line 1500
	push	OFFSET _bio_dump_callback
	push	ebx
	call	_BIO_set_callback
; Line 1501
	push	DWORD PTR _bio_c_out
	push	ebx
	call	_BIO_set_callback_arg
	add	esp, 24					; 00000018H
$LN329@s_client_m:
; Line 1503
	cmp	DWORD PTR _c_msg, 0
	je	$LN330@s_client_m
; Line 1509
	push	OFFSET _msg_cb
	push	edi
	call	_SSL_set_msg_callback
; Line 1510
	mov	eax, DWORD PTR _bio_c_msg
	test	eax, eax
	mov	ecx, DWORD PTR _bio_c_out
	cmovne	ecx, eax
	push	ecx
	push	0
	push	16					; 00000010H
	push	edi
	call	_SSL_ctrl
	add	esp, 24					; 00000018H
$LN330@s_client_m:
; Line 1513
	cmp	DWORD PTR _c_tlsextdebug, 0
	je	$LN331@s_client_m
; Line 1514
	push	OFFSET _tlsext_cb
	push	56					; 00000038H
	push	edi
	call	_SSL_callback_ctrl
; Line 1515
	push	DWORD PTR _bio_c_out
	push	0
	push	57					; 00000039H
	push	edi
	call	_SSL_ctrl
	add	esp, 28					; 0000001cH
$LN331@s_client_m:
; Line 1517
	cmp	DWORD PTR _c_status_req, 0
	je	$LN332@s_client_m
; Line 1518
	push	0
	push	1
	push	65					; 00000041H
	push	edi
	call	_SSL_ctrl
; Line 1519
	mov	esi, DWORD PTR _ctx$1$[esp+1080]
	push	OFFSET _ocsp_resp_cb
	push	63					; 0000003fH
	push	esi
	call	_SSL_CTX_callback_ctrl
; Line 1520
	push	DWORD PTR _bio_c_out
	push	0
	push	64					; 00000040H
	push	esi
	call	_SSL_CTX_ctrl
	add	esp, 44					; 0000002cH
$LN332@s_client_m:
; Line 1539
	push	ebx
	push	ebx
	push	edi
	call	_SSL_set_bio
; Line 1540
	push	edi
	call	_SSL_set_connect_state
; Line 1543
	push	edi
	call	_SSL_get_fd
	inc	eax
; Line 1545
	mov	DWORD PTR _read_tty$1$[esp+1084], 1
	mov	DWORD PTR _width$1$[esp+1084], eax
; Line 1553
	xor	esi, esi
	xor	eax, eax
	mov	DWORD PTR _write_tty$1$[esp+1084], 0
	mov	DWORD PTR _cbuf_len$1$[esp+1084], eax
	add	esp, 20					; 00000014H
	mov	DWORD PTR _cbuf_off$1$[esp+1064], eax
; Line 1554
	mov	DWORD PTR _sbuf_off$1$[esp+1064], eax
; Line 1564
	mov	eax, DWORD PTR _starttls_proto$1$[esp+1064]
	mov	DWORD PTR _read_ssl$1$[esp+1064], 1
	mov	DWORD PTR _write_ssl$1$[esp+1064], 1
	mov	DWORD PTR _sbuf_len$1$[esp+1064], esi
	cmp	eax, 1
	jne	$LN333@s_client_m
; Line 1565
	mov	DWORD PTR _foundit$1$[esp+1064], esi
; Line 1566
	call	_BIO_f_buffer
	push	eax
	call	_BIO_new
	mov	esi, eax
; Line 1567
	push	ebx
	push	esi
	mov	DWORD PTR _fbio$1$[esp+1076], esi
	call	_BIO_push
	mov	eax, DWORD PTR _mbuf$1$[esp+1076]
	add	esp, 12					; 0000000cH
$LL15@s_client_m:
; Line 1570
	push	8192					; 00002000H
	push	eax
	push	esi
	call	_BIO_gets
	add	esp, 12					; 0000000cH
; Line 1572
	cmp	eax, 3
	jle	$LN335@s_client_m
	mov	eax, DWORD PTR _mbuf$1$[esp+1064]
	cmp	BYTE PTR [eax+3], 45			; 0000002dH
	je	SHORT $LL15@s_client_m
$LN335@s_client_m:
; Line 1574
	push	OFFSET ??_C@_0BK@PHAHJJON@EHLO?5openssl?4client?4net?$AN?6?$AA@
	push	esi
	call	_BIO_printf
; Line 1575
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
	mov	edi, DWORD PTR _foundit$1$[esp+1088]
	add	esp, 24					; 00000018H
	mov	ebx, DWORD PTR _mbuf$1$[esp+1064]
	npad	3
$LL18@s_client_m:
; Line 1578
	push	8192					; 00002000H
	push	ebx
	push	esi
	call	_BIO_gets
; Line 1579
	push	OFFSET ??_C@_08EBJFDHCC@STARTTLS?$AA@
	push	ebx
	mov	esi, eax
	call	DWORD PTR __imp__strstr
	add	esp, 20					; 00000014H
	test	eax, eax
	mov	eax, 1
	cmovne	edi, eax
; Line 1582
	cmp	esi, 3
	jle	$LN337@s_client_m
	cmp	BYTE PTR [ebx+3], 45			; 0000002dH
	mov	esi, DWORD PTR _fbio$1$[esp+1064]
	je	SHORT $LL18@s_client_m
$LN337@s_client_m:
; Line 1583
	mov	esi, DWORD PTR _fbio$1$[esp+1064]
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 1584
	push	esi
	call	_BIO_pop
; Line 1585
	push	esi
	call	_BIO_free
; Line 1586
	mov	ebx, DWORD PTR _sbio$1$[esp+1088]
	add	esp, 24					; 00000018H
	test	edi, edi
	mov	edi, DWORD PTR _con$1$[esp+1064]
	jne	$LN338@s_client_m
; Line 1587
	push	OFFSET ??_C@_0DJ@OPKCJHEL@didn?8t?5found?5starttls?5in?5server?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN338@s_client_m:
; Line 1590
	push	OFFSET ??_C@_0L@ONDINJGD@STARTTLS?$AN?6?$AA@
	push	ebx
	call	_BIO_printf
; Line 1591
	push	8192					; 00002000H
	push	DWORD PTR _sbuf$1$[esp+1076]
	push	ebx
	call	_BIO_read
	add	esp, 20					; 00000014H
	jmp	$LN944@s_client_m
$LN333@s_client_m:
; Line 1592
	cmp	eax, 2
	jne	$LN339@s_client_m
; Line 1593
	push	8192					; 00002000H
	push	DWORD PTR _mbuf$1$[esp+1068]
	push	ebx
	call	_BIO_read
; Line 1594
	push	OFFSET ??_C@_06FBDNPHJH@STLS?$AN?6?$AA@
	push	ebx
	call	_BIO_printf
; Line 1595
	push	8192					; 00002000H
	push	DWORD PTR _sbuf$1$[esp+1088]
	push	ebx
	call	_BIO_read
	add	esp, 32					; 00000020H
	jmp	$LN944@s_client_m
$LN339@s_client_m:
; Line 1596
	cmp	eax, 3
	jne	$LN341@s_client_m
; Line 1597
	xor	edi, edi
; Line 1598
	call	_BIO_f_buffer
	push	eax
	call	_BIO_new
; Line 1599
	push	ebx
	mov	ebx, eax
	mov	DWORD PTR _fbio$1$[esp+1072], eax
	push	ebx
	call	_BIO_push
; Line 1600
	mov	esi, DWORD PTR _mbuf$1$[esp+1076]
	push	8192					; 00002000H
	push	esi
	push	ebx
	call	_BIO_gets
; Line 1602
	push	OFFSET ??_C@_0P@MGFCPBHP@?4?5CAPABILITY?$AN?6?$AA@
	push	ebx
	call	_BIO_printf
; Line 1603
	push	edi
	push	edi
	push	11					; 0000000bH
	push	ebx
	call	_BIO_ctrl
	add	esp, 48					; 00000030H
$LL21@s_client_m:
; Line 1606
	push	8192					; 00002000H
	push	esi
	push	ebx
	call	_BIO_gets
; Line 1607
	push	OFFSET ??_C@_08EBJFDHCC@STARTTLS?$AA@
	push	DWORD PTR _mbuf$1$[esp+1080]
	mov	esi, eax
	call	DWORD PTR __imp__strstr
	add	esp, 20					; 00000014H
	test	eax, eax
	mov	eax, 1
	cmovne	edi, eax
; Line 1610
	cmp	esi, 3
	jle	$LN344@s_client_m
	mov	esi, DWORD PTR _mbuf$1$[esp+1064]
	cmp	BYTE PTR [esi], 46			; 0000002eH
	jne	SHORT $LL21@s_client_m
$LN344@s_client_m:
; Line 1611
	push	0
	push	0
	push	11					; 0000000bH
	push	ebx
	call	_BIO_ctrl
; Line 1612
	push	ebx
	call	_BIO_pop
; Line 1613
	push	ebx
	call	_BIO_free
; Line 1614
	mov	ebx, DWORD PTR _sbio$1$[esp+1088]
	add	esp, 24					; 00000018H
	test	edi, edi
	mov	edi, DWORD PTR _con$1$[esp+1064]
	jne	$LN345@s_client_m
; Line 1615
	push	OFFSET ??_C@_0DJ@JHIBNOHN@didn?8t?5found?5STARTTLS?5in?5server?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN345@s_client_m:
; Line 1618
	push	OFFSET ??_C@_0N@NIGCLCLA@?4?5STARTTLS?$AN?6?$AA@
	push	ebx
	call	_BIO_printf
; Line 1619
	push	8192					; 00002000H
	push	DWORD PTR _sbuf$1$[esp+1076]
	push	ebx
	call	_BIO_read
	add	esp, 20					; 00000014H
	jmp	$LN944@s_client_m
$LN341@s_client_m:
; Line 1620
	cmp	eax, 4
	jne	$LN346@s_client_m
; Line 1621
	call	_BIO_f_buffer
	push	eax
	call	_BIO_new
	mov	esi, eax
; Line 1622
	push	ebx
	push	esi
	call	_BIO_push
	mov	edi, DWORD PTR _mbuf$1$[esp+1076]
	add	esp, 12					; 0000000cH
$LL24@s_client_m:
; Line 1625
	push	8192					; 00002000H
	push	edi
	push	esi
	call	_BIO_gets
	add	esp, 12					; 0000000cH
; Line 1627
	cmp	eax, 3
	jle	$LN347@s_client_m
	cmp	BYTE PTR [edi+3], 45			; 0000002dH
	je	SHORT $LL24@s_client_m
$LN347@s_client_m:
; Line 1628
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 1629
	push	esi
	call	_BIO_pop
; Line 1630
	push	esi
	call	_BIO_free
; Line 1631
	push	OFFSET ??_C@_0L@OHGLBBLC@AUTH?5TLS?$AN?6?$AA@
	push	ebx
	call	_BIO_printf
; Line 1632
	push	8192					; 00002000H
	push	DWORD PTR _sbuf$1$[esp+1100]
	push	ebx
	call	_BIO_read
; Line 1634
	mov	edi, DWORD PTR _con$1$[esp+1108]
	add	esp, 44					; 0000002cH
	jmp	$LN944@s_client_m
$LN346@s_client_m:
	cmp	eax, 5
	jne	$LN944@s_client_m
; Line 1636
	push	DWORD PTR _host$[esp+1064]
	push	OFFSET ??_C@_0GM@FECAPAJN@?$DMstream?3stream?5xmlns?3stream?$DN?8htt@
	push	ebx
	call	_BIO_printf
; Line 1639
	mov	esi, DWORD PTR _mbuf$1$[esp+1076]
	push	8192					; 00002000H
	push	esi
	push	ebx
	call	_BIO_read
; Line 1641
	push	OFFSET ??_C@_0DC@NBLOOCGC@?$DMstarttls?5xmlns?$DN?8urn?3ietf?3params@
	push	esi
	mov	BYTE PTR [eax+esi], 0
	mov	esi, DWORD PTR __imp__strstr
	call	esi
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	$LN26@s_client_m
$LL25@s_client_m:
; Line 1643
	push	OFFSET ??_C@_0BC@LEBLAAG@?1stream?3features?$DO?$AA@
	push	DWORD PTR _mbuf$1$[esp+1068]
	call	esi
	add	esp, 8
	test	eax, eax
	jne	$LN946@s_client_m
; Line 1645
	push	8192					; 00002000H
	push	DWORD PTR _mbuf$1$[esp+1068]
	push	ebx
	call	_BIO_read
; Line 1646
	mov	ecx, DWORD PTR _mbuf$1$[esp+1076]
	push	OFFSET ??_C@_0DC@NBLOOCGC@?$DMstarttls?5xmlns?$DN?8urn?3ietf?3params@
	push	ecx
	mov	BYTE PTR [eax+ecx], 0
	call	esi
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LL25@s_client_m
$LN26@s_client_m:
; Line 1648
	push	OFFSET ??_C@_0DE@GLBLEBGP@?$DMstarttls?5xmlns?$DN?8urn?3ietf?3params@
	push	ebx
	call	_BIO_printf
; Line 1650
	push	8192					; 00002000H
	push	DWORD PTR _sbuf$1$[esp+1076]
	push	ebx
	call	_BIO_read
; Line 1651
	mov	ecx, DWORD PTR _sbuf$1$[esp+1084]
; Line 1652
	push	OFFSET ??_C@_08GCBBJIEO@?$DMproceed?$AA@
	push	ecx
	mov	BYTE PTR [eax+ecx], 0
	call	esi
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$LN946@s_client_m
; Line 1654
	mov	eax, DWORD PTR _mbuf$1$[esp+1064]
	mov	BYTE PTR [eax], 0
$LN944@s_client_m:
	mov	esi, DWORD PTR _read_ssl$1$[esp+1064]
$LN27@s_client_m:
; Line 1661
	push	edi
	mov	DWORD PTR _readfds$[esp+1068], 0
	mov	DWORD PTR _writefds$[esp+1068], 0
	call	_SSL_version
	add	esp, 4
	cmp	eax, 65279				; 0000feffH
	jne	$LN351@s_client_m
	lea	eax, DWORD PTR _timeout$[esp+1064]
	push	eax
	push	0
	push	73					; 00000049H
	push	edi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN351@s_client_m
; Line 1663
	lea	ebx, DWORD PTR _timeout$[esp+1064]
	mov	DWORD PTR _timeoutp$1$[esp+1064], ebx
	jmp	$LN352@s_client_m
$LN351@s_client_m:
; Line 1665
	mov	DWORD PTR _timeoutp$1$[esp+1064], 0
$LN352@s_client_m:
; Line 1667
	push	edi
	call	_SSL_state
	add	esp, 4
	test	eax, 12288				; 00003000H
	je	$LN353@s_client_m
	push	0
	push	0
	push	12					; 0000000cH
	push	edi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN353@s_client_m
; Line 1668
	mov	DWORD PTR _in_init$1$[esp+1064], 1
; Line 1669
	xor	ebx, ebx
; Line 1670
	jmp	$LN362@s_client_m
$LN353@s_client_m:
; Line 1672
	cmp	DWORD PTR _in_init$1$[esp+1064], 0
	mov	ebx, 1
	je	$LN362@s_client_m
; Line 1684
	mov	eax, DWORD PTR _sess_out$1$[esp+1064]
	mov	DWORD PTR _in_init$1$[esp+1064], 0
	test	eax, eax
	je	$LN358@s_client_m
; Line 1685
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	push	eax
	call	_BIO_new_file
	mov	esi, eax
	add	esp, 8
; Line 1686
	test	esi, esi
	je	$LN357@s_client_m
; Line 1687
	push	edi
	call	_SSL_get_session
	push	eax
	push	esi
	call	_PEM_write_bio_SSL_SESSION
; Line 1688
	push	esi
	call	_BIO_free
	add	esp, 16					; 00000010H
; Line 1689
	jmp	$LN358@s_client_m
$LN357@s_client_m:
; Line 1690
	mov	eax, DWORD PTR _sess_out$1$[esp+1064]
	push	eax
	push	OFFSET ??_C@_0BP@MDBFDAKI@Error?5writing?5session?5file?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN358@s_client_m:
; Line 1693
	cmp	DWORD PTR _c_brief, 0
	je	$LN359@s_client_m
; Line 1694
	push	OFFSET ??_C@_0BI@KAHEJIIO@CONNECTION?5ESTABLISHED?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
; Line 1695
	push	edi
	push	DWORD PTR _bio_err
	call	_print_ssl_summary
	add	esp, 16					; 00000010H
$LN359@s_client_m:
; Line 1698
	mov	esi, DWORD PTR _full_log$1$[esp+1064]
	push	esi
	push	edi
	push	DWORD PTR _bio_c_out
	call	_print_stuff
	add	esp, 12					; 0000000cH
; Line 1699
	test	esi, esi
	jle	$LN360@s_client_m
; Line 1700
	dec	esi
	mov	DWORD PTR _full_log$1$[esp+1064], esi
$LN360@s_client_m:
; Line 1702
	cmp	DWORD PTR _starttls_proto$1$[esp+1064], 0
	je	$LN361@s_client_m
; Line 1703
	push	DWORD PTR _mbuf$1$[esp+1064]
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1705
	mov	DWORD PTR _starttls_proto$1$[esp+1064], 0
$LN361@s_client_m:
; Line 1708
	mov	eax, DWORD PTR _reconnect$1$[esp+1064]
	test	eax, eax
	jne	$LN516@s_client_m
	mov	esi, DWORD PTR _read_ssl$1$[esp+1064]
$LN362@s_client_m:
; Line 1720
	test	esi, esi
	je	$LN446@s_client_m
	push	edi
	call	_SSL_pending
	add	esp, 4
	test	eax, eax
	je	$LN446@s_client_m
	mov	esi, 1
$LN940@s_client_m:
	mov	ebx, DWORD PTR _write_ssl$1$[esp+1064]
$LN379@s_client_m:
; Line 1827
	push	edi
	call	_SSL_version
	add	esp, 4
	cmp	eax, 65279				; 0000feffH
	jne	$LN380@s_client_m
	push	0
	push	0
	push	74					; 0000004aH
	push	edi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	$LN380@s_client_m
; Line 1828
	push	OFFSET ??_C@_0BB@LACOGFPG@TIMEOUT?5occured?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN380@s_client_m:
; Line 1831
	test	esi, esi
	jne	$LN404@s_client_m
	lea	eax, DWORD PTR _writefds$[esp+1064]
	push	eax
	push	edi
	call	_SSL_get_fd
	add	esp, 4
	push	eax
	call	___WSAFDIsSet@8
	test	eax, eax
	je	$LN595@s_client_m
; Line 1832
	mov	eax, DWORD PTR _cbuf_off$1$[esp+1064]
	mov	ebx, DWORD PTR _cbuf_len$1$[esp+1064]
	add	eax, DWORD PTR _cbuf$1$[esp+1064]
	push	ebx
	push	eax
	push	edi
	call	_SSL_write
	mov	esi, eax
; Line 1833
	push	esi
	push	edi
	call	_SSL_get_error
	add	esp, 20					; 00000014H
	cmp	eax, 6
	ja	$LN944@s_client_m
	jmp	DWORD PTR $LN981@s_client_m[eax*4]
$LN446@s_client_m:
; Line 1720
	xor	esi, esi
	mov	DWORD PTR _ssl_pending$1$[esp+1064], esi
; Line 1735
	test	ebx, ebx
	je	$LN365@s_client_m
	cmp	DWORD PTR _write_tty$1$[esp+1064], esi
	jne	$LN940@s_client_m
$LN365@s_client_m:
; Line 1736
	mov	ecx, DWORD PTR _read_ssl$1$[esp+1064]
	test	ecx, ecx
	je	$LN31@s_client_m
; Line 1737
	mov	eax, DWORD PTR _readfds$[esp+1064]
	xor	esi, esi
	test	eax, eax
	je	$LN514@s_client_m
$LL35@s_client_m:
	push	edi
	call	_SSL_get_fd
	add	esp, 4
	cmp	DWORD PTR _readfds$[esp+esi*4+1068], eax
	mov	eax, DWORD PTR _readfds$[esp+1064]
	je	$LN514@s_client_m
	inc	esi
	cmp	esi, eax
	jb	SHORT $LL35@s_client_m
$LN514@s_client_m:
	cmp	esi, eax
	jne	$LN31@s_client_m
	cmp	eax, 64					; 00000040H
	jae	$LN31@s_client_m
	push	edi
	call	_SSL_get_fd
	add	esp, 4
	mov	DWORD PTR _readfds$[esp+esi*4+1068], eax
	inc	DWORD PTR _readfds$[esp+1064]
$LN31@s_client_m:
; Line 1738
	mov	ebx, DWORD PTR _write_ssl$1$[esp+1064]
	test	ebx, ebx
	je	$LN37@s_client_m
; Line 1739
	mov	eax, DWORD PTR _writefds$[esp+1064]
	xor	esi, esi
	test	eax, eax
	je	$LN515@s_client_m
	npad	6
$LL41@s_client_m:
	push	edi
	call	_SSL_get_fd
	add	esp, 4
	cmp	DWORD PTR _writefds$[esp+esi*4+1068], eax
	mov	eax, DWORD PTR _writefds$[esp+1064]
	je	$LN515@s_client_m
	inc	esi
	cmp	esi, eax
	jb	SHORT $LL41@s_client_m
$LN515@s_client_m:
	cmp	esi, eax
	jne	$LN37@s_client_m
	cmp	eax, 64					; 00000040H
	jae	$LN37@s_client_m
	push	edi
	call	_SSL_get_fd
	add	esp, 4
	mov	DWORD PTR _writefds$[esp+esi*4+1068], eax
	inc	DWORD PTR _writefds$[esp+1064]
$LN37@s_client_m:
; Line 1761
	cmp	DWORD PTR _write_tty$1$[esp+1064], 0
	jne	$LN937@s_client_m
; Line 1762
	cmp	DWORD PTR _read_tty$1$[esp+1064], 0
	je	$LN375@s_client_m
; Line 1765
	lea	eax, DWORD PTR _tv$[esp+1064]
	mov	DWORD PTR _tv$[esp+1064], 1
	push	eax
	push	0
	lea	eax, DWORD PTR _writefds$[esp+1072]
	mov	DWORD PTR _tv$[esp+1076], 0
	push	eax
	lea	eax, DWORD PTR _readfds$[esp+1076]
	push	eax
	push	DWORD PTR _width$1$[esp+1080]
	call	DWORD PTR __imp__select@20
; Line 1768
	test	eax, eax
	jne	$LN970@s_client_m
	call	DWORD PTR __imp___kbhit
	test	eax, eax
	jne	$LN937@s_client_m
; Line 1769
	jmp	$LN944@s_client_m
$LN375@s_client_m:
; Line 1780
	push	DWORD PTR _timeoutp$1$[esp+1064]
	lea	eax, DWORD PTR _writefds$[esp+1068]
	push	0
	push	eax
	lea	eax, DWORD PTR _readfds$[esp+1076]
	push	eax
	push	DWORD PTR _width$1$[esp+1080]
	call	DWORD PTR __imp__select@20
; Line 1818
	test	eax, eax
$LN970@s_client_m:
	js	$LN517@s_client_m
$LN937@s_client_m:
	mov	esi, DWORD PTR _ssl_pending$1$[esp+1064]
	jmp	$LN379@s_client_m
$LN383@s_client_m:
; Line 1835
	add	DWORD PTR _cbuf_off$1$[esp+1064], esi
; Line 1836
	sub	ebx, esi
	mov	DWORD PTR _cbuf_len$1$[esp+1064], ebx
; Line 1837
	test	esi, esi
	jle	$end$984
; Line 1840
	test	ebx, ebx
	jg	$LN426@s_client_m
; Line 1842
	xor	ecx, ecx
	mov	DWORD PTR _read_tty$1$[esp+1064], 1
	mov	DWORD PTR _write_ssl$1$[esp+1064], ecx
; Line 1843
	jmp	$LN944@s_client_m
$LN387@s_client_m:
; Line 1850
	push	OFFSET ??_C@_0P@OPONFPJP@write?5W?5BLOCK?6?$AA@
; Line 1853
	jmp	$LN969@s_client_m
$LN388@s_client_m:
; Line 1855
	push	OFFSET ??_C@_0P@KFHKBKNA@write?5R?5BLOCK?6?$AA@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 8
; Line 1856
	mov	DWORD PTR _write_tty$1$[esp+1064], 0
; Line 1857
	mov	esi, 1
; Line 1858
	xor	ecx, ecx
	mov	DWORD PTR _read_ssl$1$[esp+1064], esi
	mov	DWORD PTR _write_ssl$1$[esp+1064], ecx
; Line 1859
	jmp	$LN27@s_client_m
$LN389@s_client_m:
; Line 1861
	push	OFFSET ??_C@_0P@DAFEJAEO@write?5X?5BLOCK?6?$AA@
; Line 1959
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 8
; Line 2044
	jmp	$LN944@s_client_m
$LN390@s_client_m:
; Line 1864
	test	ebx, ebx
	jne	$LN519@s_client_m
; Line 1870
	xor	ecx, ecx
	mov	DWORD PTR _read_tty$1$[esp+1064], 1
	mov	DWORD PTR _write_ssl$1$[esp+1064], ecx
; Line 1871
	jmp	$LN944@s_client_m
$LN392@s_client_m:
; Line 1875
	test	esi, esi
	jne	$LN520@s_client_m
	test	ebx, ebx
	jne	$LN520@s_client_m
; Line 1881
	xor	ecx, ecx
	mov	DWORD PTR _read_tty$1$[esp+1064], 1
	mov	DWORD PTR _write_ssl$1$[esp+1064], ecx
; Line 1888
	jmp	$LN944@s_client_m
$LN595@s_client_m:
; Line 1891
	cmp	DWORD PTR _write_tty$1$[esp+1064], 0
	je	$LN596@s_client_m
; Line 1899
	mov	eax, DWORD PTR _sbuf$1$[esp+1064]
	mov	ebx, DWORD PTR _sbuf_len$1$[esp+1064]
	mov	esi, DWORD PTR _sbuf_off$1$[esp+1064]
	add	eax, esi
	push	ebx
	push	eax
	call	_raw_write_stdout
	add	esp, 8
; Line 1901
	test	eax, eax
	jle	$LN521@s_client_m
; Line 1909
	add	esi, eax
	sub	ebx, eax
	mov	DWORD PTR _sbuf_off$1$[esp+1064], esi
; Line 1910
	mov	esi, DWORD PTR _read_ssl$1$[esp+1064]
	mov	DWORD PTR _sbuf_len$1$[esp+1064], ebx
	test	ebx, ebx
	jg	$LN27@s_client_m
; Line 1911
	mov	esi, 1
; Line 1912
	mov	DWORD PTR _write_tty$1$[esp+1064], 0
	mov	DWORD PTR _read_ssl$1$[esp+1064], esi
; Line 1913
	jmp	$LN27@s_client_m
$LN596@s_client_m:
; Line 1914
	lea	eax, DWORD PTR _readfds$[esp+1064]
	push	eax
	push	edi
	call	_SSL_get_fd
	add	esp, 4
	push	eax
	call	___WSAFDIsSet@8
	test	eax, eax
	jne	$LN404@s_client_m
; Line 1980
	call	DWORD PTR __imp___kbhit
	mov	esi, DWORD PTR _read_ssl$1$[esp+1064]
	test	eax, eax
	je	$LN27@s_client_m
; Line 1994
	cmp	DWORD PTR _crlf$1$[esp+1064], 0
	je	$LN417@s_client_m
; Line 1997
	push	4096					; 00001000H
	push	DWORD PTR _cbuf$1$[esp+1068]
	call	_raw_read_stdin
	mov	ebx, eax
	add	esp, 8
	mov	eax, DWORD PTR _cbuf$1$[esp+1064]
; Line 1998
	xor	edx, edx
; Line 2000
	xor	ecx, ecx
	mov	DWORD PTR _cbuf_len$1$[esp+1064], ebx
	test	ebx, ebx
	jle	$LN47@s_client_m
	npad	9
$LL543@s_client_m:
; Line 2001
	cmp	BYTE PTR [ecx+eax], 10			; 0000000aH
	jne	$LN544@s_client_m
; Line 2002
	inc	edx
$LN544@s_client_m:
; Line 2000
	inc	ecx
	cmp	ecx, ebx
	jl	SHORT $LL543@s_client_m
$LN47@s_client_m:
; Line 2003
	lea	esi, DWORD PTR [ebx-1]
	test	esi, esi
	js	$LN50@s_client_m
	npad	5
$LL51@s_client_m:
; Line 2004
	mov	edi, DWORD PTR _cbuf$1$[esp+1064]
	lea	ecx, DWORD PTR [esi+edx]
	mov	al, BYTE PTR [esi+eax]
	mov	BYTE PTR [ecx+edi], al
; Line 2005
	mov	eax, edi
	cmp	BYTE PTR [esi+eax], 10			; 0000000aH
	jne	$LN49@s_client_m
; Line 2006
	dec	edx
; Line 2008
	mov	ecx, edi
	inc	ebx
	lea	eax, DWORD PTR [esi+edx]
	mov	BYTE PTR [eax+ecx], 13			; 0000000dH
	mov	eax, edi
$LN49@s_client_m:
; Line 2003
	sub	esi, 1
	jns	SHORT $LL51@s_client_m
	mov	edi, DWORD PTR _con$1$[esp+1064]
	mov	DWORD PTR _cbuf_len$1$[esp+1064], ebx
$LN50@s_client_m:
; Line 2011
	test	edx, edx
	je	$LN955@s_client_m
	push	2011					; 000007dbH
	push	OFFSET ??_C@_1CE@OEKFEFMG@?$AA?4?$AA?2?$AAa?$AAp?$AAp?$AAs?$AA?2?$AAs?$AA_?$AAc?$AAl?$AAi?$AAe?$AAn?$AAt?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BI@KKDDCBII@?$AAl?$AAf?$AA_?$AAn?$AAu?$AAm?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN955@s_client_m:
	mov	esi, DWORD PTR _cbuf$1$[esp+1064]
$LN418@s_client_m:
; Line 2015
	cmp	DWORD PTR _c_ign_eof, 0
	jne	$LN425@s_client_m
	test	ebx, ebx
	jle	$LN422@s_client_m
	mov	al, BYTE PTR [esi]
	cmp	al, 81					; 00000051H
	je	$LN422@s_client_m
; Line 2021
	cmp	al, 82					; 00000052H
	jne	$LN598@s_client_m
; Line 2022
	push	OFFSET ??_C@_0P@HJFNKGPE@RENEGOTIATING?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2023
	push	edi
	call	_SSL_renegotiate
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _write_ssl$1$[esp+1064], 1
; Line 2024
	xor	eax, eax
	mov	DWORD PTR _cbuf_len$1$[esp+1064], eax
	mov	DWORD PTR _read_tty$1$[esp+1064], eax
	jmp	$LN944@s_client_m
$LN417@s_client_m:
; Line 2013
	mov	esi, DWORD PTR _cbuf$1$[esp+1064]
	push	8192					; 00002000H
	push	esi
	call	_raw_read_stdin
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _cbuf_len$1$[esp+1064], ebx
	jmp	SHORT $LN418@s_client_m
$LN598@s_client_m:
; Line 2027
	cmp	al, 66					; 00000042H
	jne	$LN425@s_client_m
; Line 2028
	push	OFFSET ??_C@_0O@ICIFEBNC@HEARTBEATING?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2029
	push	0
	push	0
	push	85					; 00000055H
	push	edi
	call	_SSL_ctrl
	add	esp, 24					; 00000018H
	mov	DWORD PTR _write_ssl$1$[esp+1064], 1
; Line 2030
	xor	eax, eax
	mov	DWORD PTR _cbuf_len$1$[esp+1064], eax
	mov	DWORD PTR _read_tty$1$[esp+1064], eax
	jmp	$LN944@s_client_m
$LN425@s_client_m:
; Line 2035
	mov	DWORD PTR _cbuf_off$1$[esp+1064], 0
	mov	DWORD PTR _read_tty$1$[esp+1064], 0
	mov	DWORD PTR _write_ssl$1$[esp+1064], 1
	jmp	$LN944@s_client_m
$LN404@s_client_m:
; Line 1925
	push	1024					; 00000400H
	push	DWORD PTR _sbuf$1$[esp+1068]
	push	edi
	call	_SSL_read
	mov	esi, eax
; Line 1936
	push	esi
	push	edi
	call	_SSL_get_error
	add	esp, 20					; 00000014H
	cmp	eax, 6
	ja	$LN944@s_client_m
	jmp	DWORD PTR $LN982@s_client_m[eax*4]
$LN405@s_client_m:
; Line 1938
	test	esi, esi
	jle	$end$984
; Line 1940
	xor	eax, eax
; Line 1941
	mov	DWORD PTR _sbuf_len$1$[esp+1064], esi
; Line 1943
	xor	esi, esi
	mov	DWORD PTR _sbuf_off$1$[esp+1064], eax
	mov	DWORD PTR _read_ssl$1$[esp+1064], esi
; Line 1944
	mov	DWORD PTR _write_tty$1$[esp+1064], 1
; Line 1945
	jmp	$LN27@s_client_m
$LN407@s_client_m:
; Line 1947
	push	OFFSET ??_C@_0O@LLFHAMNO@read?5W?5BLOCK?6?$AA@
$LN969@s_client_m:
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 8
$LN426@s_client_m:
; Line 1949
	mov	DWORD PTR _read_tty$1$[esp+1064], 0
	mov	DWORD PTR _write_ssl$1$[esp+1064], 1
; Line 1950
	jmp	$LN944@s_client_m
$LN408@s_client_m:
; Line 1952
	push	OFFSET ??_C@_0O@PBMAEJJB@read?5R?5BLOCK?6?$AA@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 8
; Line 1953
	mov	DWORD PTR _write_tty$1$[esp+1064], 0
; Line 1955
	cmp	DWORD PTR _read_tty$1$[esp+1064], 0
	mov	esi, 1
	mov	DWORD PTR _read_ssl$1$[esp+1064], esi
	jne	$LN27@s_client_m
	test	ebx, ebx
	jne	$LN27@s_client_m
; Line 1956
	mov	DWORD PTR _write_ssl$1$[esp+1064], esi
; Line 1957
	jmp	$LN27@s_client_m
$LN410@s_client_m:
; Line 1959
	push	OFFSET ??_C@_0O@GEOOMDAP@read?5X?5BLOCK?6?$AA@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 8
; Line 2044
	jmp	$LN944@s_client_m
$LN516@s_client_m:
; Line 1710
	push	OFFSET ??_C@_0CE@OHKMHPKO@drop?5connection?5and?5then?5reconne@
	push	DWORD PTR _bio_c_out
	dec	eax
	mov	DWORD PTR _reconnect$1$[esp+1072], eax
	call	_BIO_printf
; Line 1712
	push	edi
	call	_SSL_shutdown
; Line 1713
	push	edi
	call	_SSL_set_connect_state
	add	esp, 16					; 00000010H
; Line 1714
	push	0
	push	edi
	call	_SSL_get_fd
	mov	esi, DWORD PTR __imp__shutdown@8
	add	esp, 4
	push	eax
	call	esi
	push	edi
	call	_SSL_get_fd
	add	esp, 4
	push	eax
	call	DWORD PTR __imp__closesocket@4
	movsx	eax, WORD PTR _port$[esp+1064]
	mov	ebx, DWORD PTR _socket_type$1$[esp+1064]
	push	ebx
	push	eax
	push	DWORD PTR _host$[esp+1072]
	lea	eax, DWORD PTR _s$[esp+1076]
	push	eax
	call	_init_client
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$re_start$985
$LN523@s_client_m:
; Line 1431
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	OFFSET ??_C@_0BC@JOCHAJNG@connect?3errno?$DN?$CFd?6?$AA@
$LN971@s_client_m:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1432
	push	0
	push	DWORD PTR _s$[esp+1068]
	call	esi
	push	DWORD PTR _s$[esp+1064]
$LN973@s_client_m:
	call	DWORD PTR __imp__closesocket@4
$end$984:
; Line 2053
	test	edi, edi
	je	$LN954@s_client_m
; Line 2054
	cmp	DWORD PTR _prexit$1$[esp+1064], 0
	je	$LN429@s_client_m
; Line 2055
	push	1
	push	edi
	push	DWORD PTR _bio_c_out
	call	_print_stuff
	add	esp, 12					; 0000000cH
$LN429@s_client_m:
; Line 2056
	push	edi
	call	_SSL_free
	mov	ebx, DWORD PTR _cbuf$1$[esp+1068]
	add	esp, 4
	mov	esi, DWORD PTR _ctx$1$[esp+1064]
	mov	edi, DWORD PTR _crls$1$[esp+1064]
	jmp	$LN428@s_client_m
$LN524@s_client_m:
; Line 1442
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 1443
	jmp	SHORT $end$984
$LN526@s_client_m:
; Line 1474
	push	0
	push	121					; 00000079H
	push	edi
	call	_SSL_ctrl
	push	eax
	push	OFFSET ??_C@_0CF@MCFEIGOI@MTU?5too?5small?4?5Must?5be?5at?5least?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1476
	push	ebx
	call	_BIO_free
	add	esp, 32					; 00000020H
; Line 1477
	jmp	$shut$986
$LN525@s_client_m:
; Line 1454
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	OFFSET ??_C@_0BG@EFOPGOLI@getsockname?3errno?$DN?$CFd?6?$AA@
; Line 1457
	jmp	$LN971@s_client_m
$LN517@s_client_m:
; Line 1819
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	OFFSET ??_C@_0P@LOJOMIHN@bad?5select?5?$CFd?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1821
	jmp	$LN946@s_client_m
$LN519@s_client_m:
; Line 1865
	push	OFFSET ??_C@_09NMGONKDH@shutdown?6?$AA@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 8
; Line 1866
	xor	ebx, ebx
	mov	DWORD PTR _ret$1$[esp+1064], ebx
; Line 1867
	jmp	$LN946@s_client_m
$LN520@s_client_m:
; Line 1876
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	OFFSET ??_C@_0BA@ODFKGKPA@write?3errno?$DN?$CFd?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1878
	jmp	$LN946@s_client_m
$LN521@s_client_m:
; Line 1902
	push	OFFSET ??_C@_05PHCCFBBB@DONE?6?$AA@
$LN972@s_client_m:
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 8
; Line 1903
	mov	DWORD PTR _ret$1$[esp+1064], 0
; Line 1904
	jmp	$LN946@s_client_m
$LN422@s_client_m:
; Line 2016
	push	OFFSET ??_C@_05PHCCFBBB@DONE?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2017
	mov	DWORD PTR _ret$1$[esp+1064], 0
; Line 2018
	jmp	$LN946@s_client_m
$LN411@s_client_m:
; Line 1962
	call	DWORD PTR __imp__WSAGetLastError@0
; Line 1963
	cmp	DWORD PTR _c_brief, 0
	mov	ebx, eax
	mov	DWORD PTR _ret$1$[esp+1064], ebx
	je	$LN412@s_client_m
; Line 1964
	push	OFFSET ??_C@_0BN@DEIKJIGB@CONNECTION?5CLOSED?5BY?5SERVER?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_puts
	add	esp, 8
	jmp	$LN946@s_client_m
$LN412@s_client_m:
; Line 1966
	push	ebx
	push	OFFSET ??_C@_0P@OCNFKBKF@read?3errno?$DN?$CFd?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1967
	jmp	$LN946@s_client_m
$LN414@s_client_m:
; Line 1969
	push	OFFSET ??_C@_07HGLGAKII@closed?6?$AA@
; Line 1971
	jmp	$LN972@s_client_m
$LN415@s_client_m:
; Line 1973
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN946@s_client_m:
	mov	esi, DWORD PTR __imp__shutdown@8
$shut$986:
; Line 2048
	cmp	DWORD PTR _in_init$1$[esp+1064], 0
	je	$LN427@s_client_m
; Line 2049
	mov	eax, DWORD PTR _full_log$1$[esp+1064]
	push	eax
	push	edi
	push	DWORD PTR _bio_c_out
	call	_print_stuff
	add	esp, 12					; 0000000cH
$LN427@s_client_m:
; Line 2050
	push	edi
	call	_SSL_shutdown
	add	esp, 4
; Line 2051
	push	0
	push	edi
	call	_SSL_get_fd
	add	esp, 4
	push	eax
	call	esi
	push	edi
	call	_SSL_get_fd
	add	esp, 4
	push	eax
	jmp	$LN973@s_client_m
$LN56@s_client_m:
; Line 776
	push	OFFSET ??_C@_0P@PCJPAHLM@out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$LN958@s_client_m
$LN977@s_client_m:
; Line 1202
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN976@s_client_m:
; Line 1162
	mov	ebx, DWORD PTR _cbuf$1$[esp+1064]
$LN958@s_client_m:
	xor	esi, esi
	xor	edi, edi
$LN428@s_client_m:
; Line 2059
	mov	eax, DWORD PTR _next_proto
	test	eax, eax
	je	$LN430@s_client_m
; Line 2060
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN430@s_client_m:
; Line 2062
	test	esi, esi
	je	$LN431@s_client_m
; Line 2063
	push	esi
	call	_SSL_CTX_free
	add	esp, 4
$LN431@s_client_m:
; Line 2064
	mov	eax, DWORD PTR _cert$1$[esp+1064]
	test	eax, eax
	je	$LN432@s_client_m
; Line 2065
	push	eax
	call	_X509_free
	add	esp, 4
$LN432@s_client_m:
; Line 2066
	test	edi, edi
	je	$LN433@s_client_m
; Line 2067
	push	OFFSET _X509_CRL_free
	push	edi
	call	_sk_pop_free
	add	esp, 8
$LN433@s_client_m:
; Line 2068
	mov	eax, DWORD PTR _key$1$[esp+1064]
	test	eax, eax
	je	$LN434@s_client_m
; Line 2069
	push	eax
	call	_EVP_PKEY_free
	add	esp, 4
$LN434@s_client_m:
; Line 2070
	mov	eax, DWORD PTR _chain$1$[esp+1064]
	test	eax, eax
	je	$LN435@s_client_m
; Line 2071
	push	OFFSET _X509_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN435@s_client_m:
; Line 2072
	mov	eax, DWORD PTR _pass$[esp+1064]
	test	eax, eax
	je	$LN436@s_client_m
; Line 2073
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN436@s_client_m:
; Line 2075
	push	DWORD PTR _srp_arg$[esp+1064]
	call	_CRYPTO_free
; Line 2077
	mov	eax, DWORD PTR _vpm$[esp+1068]
	add	esp, 4
	test	eax, eax
	je	$LN437@s_client_m
; Line 2078
	push	eax
	call	_X509_VERIFY_PARAM_free
	add	esp, 4
$LN437@s_client_m:
; Line 2079
	push	DWORD PTR _exc$[esp+1064]
	call	_ssl_excert_free
; Line 2080
	mov	eax, DWORD PTR _ssl_args$[esp+1068]
	add	esp, 4
	test	eax, eax
	je	$LN438@s_client_m
; Line 2081
	push	eax
	call	_sk_free
	add	esp, 4
$LN438@s_client_m:
; Line 2082
	mov	eax, DWORD PTR _cctx$1$[esp+1064]
	test	eax, eax
	je	$LN439@s_client_m
; Line 2083
	push	eax
	call	_SSL_CONF_CTX_free
	add	esp, 4
$LN439@s_client_m:
; Line 2088
	test	ebx, ebx
	je	$LN440@s_client_m
; Line 2089
	push	8192					; 00002000H
	push	ebx
	call	_OPENSSL_cleanse
; Line 2090
	push	ebx
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN440@s_client_m:
; Line 2092
	mov	ebx, DWORD PTR _sbuf$1$[esp+1064]
	test	ebx, ebx
	je	$LN441@s_client_m
; Line 2093
	push	8192					; 00002000H
	push	ebx
	call	_OPENSSL_cleanse
; Line 2094
	push	ebx
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN441@s_client_m:
; Line 2096
	mov	ebx, DWORD PTR _mbuf$1$[esp+1064]
	test	ebx, ebx
	je	$LN442@s_client_m
; Line 2097
	push	8192					; 00002000H
	push	ebx
	call	_OPENSSL_cleanse
; Line 2098
	push	ebx
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN442@s_client_m:
; Line 2100
	mov	eax, DWORD PTR _bio_c_out
	test	eax, eax
	je	$LN443@s_client_m
; Line 2101
	push	eax
	call	_BIO_free
	add	esp, 4
; Line 2102
	mov	DWORD PTR _bio_c_out, 0
$LN443@s_client_m:
; Line 2104
	mov	eax, DWORD PTR _bio_c_msg
	test	eax, eax
	je	$LN927@s_client_m
; Line 2105
	push	eax
	call	_BIO_free
	add	esp, 4
; Line 2106
	mov	DWORD PTR _bio_c_msg, 0
$LN927@s_client_m:
; Line 2110
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1064]
	mov	eax, DWORD PTR _ret$1$[esp+1064]
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN981@s_client_m:
	DD	$LN383@s_client_m
	DD	$LN415@s_client_m
	DD	$LN388@s_client_m
	DD	$LN387@s_client_m
	DD	$LN389@s_client_m
	DD	$LN392@s_client_m
	DD	$LN390@s_client_m
$LN982@s_client_m:
	DD	$LN405@s_client_m
	DD	$LN415@s_client_m
	DD	$LN408@s_client_m
	DD	$LN407@s_client_m
	DD	$LN410@s_client_m
	DD	$LN411@s_client_m
	DD	$LN414@s_client_m
_s_client_main ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _serverinfo_cli_parse_cb
_TEXT	SEGMENT
_pem_name$ = -65644					; size = 100
_ext_buf$ = -65544					; size = 65540
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_serverinfo_cli_parse_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 631
	mov	eax, 65644				; 0001006cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+65644], eax
; Line 638
	mov	edx, DWORD PTR _inlen$[esp+65640]
	mov	ecx, DWORD PTR _in$[esp+65640]
	push	ebx
	mov	ebx, DWORD PTR _ext_type$[esp+65644]
	mov	eax, ebx
	shr	eax, 8
	mov	BYTE PTR _ext_buf$[esp+65648], al
	mov	eax, edx
	shr	eax, 8
; Line 640
	push	edx
	mov	BYTE PTR _ext_buf$[esp+65654], al
	lea	eax, DWORD PTR _ext_buf$[esp+65656]
	push	ecx
	push	eax
	mov	BYTE PTR _ext_buf$[esp+65661], bl
	mov	BYTE PTR _ext_buf$[esp+65663], dl
	call	_memcpy
; Line 642
	push	ebx
	push	OFFSET ??_C@_0BM@NCNCDCOM@SERVERINFO?5FOR?5EXTENSION?5?$CFd?$AA@
	lea	eax, DWORD PTR _pem_name$[esp+65668]
	push	100					; 00000064H
	push	eax
	call	_BIO_snprintf
; Line 644
	mov	eax, DWORD PTR _inlen$[esp+65672]
	add	eax, 4
	push	eax
	lea	eax, DWORD PTR _ext_buf$[esp+65680]
	push	eax
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	eax, DWORD PTR _pem_name$[esp+65688]
	push	eax
	push	DWORD PTR _bio_c_out
	call	_PEM_write_bio
; Line 646
	mov	ecx, DWORD PTR __$ArrayPad$[esp+65696]
	add	esp, 48					; 00000030H
	mov	eax, 1
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 65644				; 0001006cH
	ret	0
_serverinfo_cli_parse_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _next_proto_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_out$ = 12						; size = 4
_outlen$ = 16						; size = 4
_in$ = 20						; size = 4
_inlen$ = 24						; size = 4
_arg$ = 28						; size = 4
_next_proto_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 609
	cmp	DWORD PTR _c_quiet, 0
	push	ebx
	mov	ebx, DWORD PTR _in$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _inlen$[esp+8]
	jne	SHORT $LN5@next_proto
; Line 612
	push	OFFSET ??_C@_0CB@DPBPIEJP@Protocols?5advertised?5by?5server?3?5@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 8
; Line 613
	xor	esi, esi
	test	edi, edi
	je	SHORT $LN3@next_proto
	npad	3
$LL2@next_proto:
; Line 614
	test	esi, esi
	je	SHORT $LN6@next_proto
; Line 615
	push	2
	push	OFFSET ??_C@_02KEGNLNML@?0?5?$AA@
	push	DWORD PTR _bio_c_out
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN6@next_proto:
; Line 616
	movzx	eax, BYTE PTR [esi+ebx]
	push	eax
	lea	eax, DWORD PTR [ebx+1]
	add	eax, esi
	push	eax
	push	DWORD PTR _bio_c_out
	call	_BIO_write
; Line 617
	movzx	eax, BYTE PTR [esi+ebx]
	add	esp, 12					; 0000000cH
	inc	esi
	add	esi, eax
	cmp	esi, edi
	jb	SHORT $LL2@next_proto
$LN3@next_proto:
; Line 619
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_c_out
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN5@next_proto:
; Line 622
	mov	esi, DWORD PTR _arg$[esp+8]
	movzx	eax, WORD PTR [esi+4]
	push	eax
	push	DWORD PTR [esi]
	push	edi
	push	ebx
	push	DWORD PTR _outlen$[esp+24]
	push	DWORD PTR _out$[esp+28]
	call	_SSL_select_next_proto
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+8], eax
; Line 624
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 625
	ret	0
_next_proto_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_give_srp_client_pwd_cb
_TEXT	SEGMENT
_cb_tmp$ = -8						; size = 8
_s$ = 8							; size = 4
_arg$ = 12						; size = 4
_ssl_give_srp_client_pwd_cb PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 565
	mov	eax, 8
	call	__chkstk
	push	esi
; Line 567
	push	567					; 00000237H
	push	OFFSET ??_C@_0BC@HDOLKHPP@?4?2apps?2s_client?4c?$AA@
	push	1025					; 00000401H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 571
	test	esi, esi
	jne	SHORT $LN2@ssl_give_s
; Line 572
	push	OFFSET ??_C@_0BA@DHKOJLMG@Malloc?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 573
	xor	eax, eax
	pop	esi
; Line 586
	add	esp, 8
	ret	0
$LN2@ssl_give_s:
; Line 576
	mov	eax, DWORD PTR _arg$[esp+8]
; Line 577
	mov	DWORD PTR _cb_tmp$[esp+16], OFFSET ??_C@_08HKPOPMKK@SRP?5user?$AA@
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _cb_tmp$[esp+12], eax
; Line 578
	lea	eax, DWORD PTR _cb_tmp$[esp+12]
	push	eax
	push	0
	push	1024					; 00000400H
	push	esi
	call	_password_callback
	add	esp, 16					; 00000010H
	test	eax, eax
	jns	SHORT $LN3@ssl_give_s
; Line 579
	push	OFFSET ??_C@_0BF@JEGFLCOO@Can?8t?5read?5Password?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 580
	push	esi
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
; Line 581
	xor	eax, eax
	pop	esi
; Line 586
	add	esp, 8
	ret	0
$LN3@ssl_give_s:
; Line 583
	mov	BYTE PTR [eax+esi], 0
; Line 585
	mov	eax, esi
	pop	esi
; Line 586
	add	esp, 8
	ret	0
_ssl_give_srp_client_pwd_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_srp_verify_param_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_arg$ = 12						; size = 4
_ssl_srp_verify_param_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 528
	push	ebx
	push	esi
; Line 531
	mov	esi, DWORD PTR _s$[esp+4]
	push	edi
	push	esi
	call	_SSL_get_srp_N
	mov	ebx, eax
	add	esp, 4
	test	ebx, ebx
	je	$LN3@ssl_srp_ve
	push	esi
	call	_SSL_get_srp_g
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	$LN3@ssl_srp_ve
; Line 533
	mov	esi, DWORD PTR _arg$[esp+8]
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN5@ssl_srp_ve
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN5@ssl_srp_ve
	cmp	DWORD PTR [esi+16], 1
	jne	SHORT $LN4@ssl_srp_ve
$LN5@ssl_srp_ve:
; Line 534
	push	OFFSET ??_C@_0BB@OOEDJGNB@SRP?5parameters?3?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 535
	push	OFFSET ??_C@_03LDFPIHBN@?7N?$DN?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 536
	push	ebx
	push	DWORD PTR _bio_err
	call	_BN_print
; Line 537
	push	OFFSET ??_C@_04CJBFMKNC@?6?7g?$DN?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 538
	push	edi
	push	DWORD PTR _bio_err
	call	_BN_print
; Line 539
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 48					; 00000030H
$LN4@ssl_srp_ve:
; Line 542
	push	ebx
	push	edi
	call	_SRP_check_known_gN_param
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@ssl_srp_ve
$LN11@ssl_srp_ve:
	pop	edi
	pop	esi
; Line 543
	mov	eax, 1
	pop	ebx
; Line 560
	ret	0
$LN6@ssl_srp_ve:
; Line 545
	cmp	DWORD PTR [esi+16], 1
	jne	SHORT $LN9@ssl_srp_ve
; Line 546
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN8@ssl_srp_ve
; Line 547
	push	OFFSET ??_C@_0EA@KOBHGEOG@SRP?5param?5N?5and?5g?5are?5not?5known?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN8@ssl_srp_ve:
; Line 555
	push	edi
	call	_BN_num_bits
	add	esp, 4
	cmp	eax, 64					; 00000040H
	jg	SHORT $LN9@ssl_srp_ve
	push	edi
	push	ebx
	call	_srp_Verify_N_and_g
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@ssl_srp_ve
$LN9@ssl_srp_ve:
; Line 558
	push	OFFSET ??_C@_0BN@CDLPHCL@SRP?5param?5N?5and?5g?5rejected?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN3@ssl_srp_ve:
; Line 532
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 560
	ret	0
_ssl_srp_verify_param_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _srp_Verify_N_and_g
_TEXT	SEGMENT
_N$ = 8							; size = 4
_g$ = 12						; size = 4
_srp_Verify_N_and_g PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 487
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 488
	call	_BN_CTX_new
	mov	ebx, eax
; Line 489
	call	_BN_new
	mov	ebp, eax
; Line 490
	call	_BN_new
; Line 491
	cmp	DWORD PTR _g$[esp+12], 0
	mov	edi, eax
	je	$LN6@srp_Verify
	mov	esi, DWORD PTR _N$[esp+12]
	test	esi, esi
	je	$LN6@srp_Verify
	test	ebx, ebx
	je	SHORT $LN6@srp_Verify
	cmp	DWORD PTR [esi+4], 0
	jle	SHORT $LN6@srp_Verify
	mov	eax, DWORD PTR [esi]
	test	BYTE PTR [eax], 1
	je	SHORT $LN6@srp_Verify
	push	0
	push	ebx
	push	64					; 00000040H
	push	esi
	call	_BN_is_prime_ex
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN6@srp_Verify
	test	ebp, ebp
	je	SHORT $LN6@srp_Verify
	push	esi
	push	ebp
	call	_BN_rshift1
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@srp_Verify
	push	0
	push	ebx
	push	64					; 00000040H
	push	ebp
	call	_BN_is_prime_ex
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN6@srp_Verify
	test	edi, edi
	je	SHORT $LN6@srp_Verify
	push	ebx
	push	esi
	push	ebp
	push	DWORD PTR _g$[esp+24]
	push	edi
	call	_BN_mod_exp
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN6@srp_Verify
	push	1
	push	edi
	call	_BN_add_word
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@srp_Verify
	push	esi
	push	edi
	call	_BN_cmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@srp_Verify
	lea	esi, DWORD PTR [eax+1]
	jmp	SHORT $LN8@srp_Verify
$LN6@srp_Verify:
	xor	esi, esi
$LN8@srp_Verify:
; Line 502
	test	edi, edi
	je	SHORT $LN2@srp_Verify
; Line 503
	push	edi
	call	_BN_free
	add	esp, 4
$LN2@srp_Verify:
; Line 504
	test	ebp, ebp
	je	SHORT $LN3@srp_Verify
; Line 505
	push	ebp
	call	_BN_free
	add	esp, 4
$LN3@srp_Verify:
; Line 506
	test	ebx, ebx
	je	SHORT $LN9@srp_Verify
; Line 507
	push	ebx
	call	_BN_CTX_free
	add	esp, 4
$LN9@srp_Verify:
; Line 508
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 509
	ret	0
_srp_Verify_N_and_g ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_servername_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ad$ = 12						; size = 4
_arg$ = 16						; size = 4
_ssl_servername_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 461
	push	esi
; Line 463
	mov	esi, DWORD PTR _s$[esp]
	push	edi
	push	0
	push	esi
	call	_SSL_get_servername
; Line 464
	push	esi
	mov	edi, eax
	call	_SSL_get_servername_type
	add	esp, 12					; 0000000cH
	cmp	eax, -1
	je	SHORT $LN2@ssl_server
; Line 465
	push	0
	push	0
	push	8
	push	esi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN5@ssl_server
	test	edi, edi
	je	SHORT $LN5@ssl_server
	mov	eax, DWORD PTR _arg$[esp+4]
	mov	ecx, 1
	pop	edi
	pop	esi
	mov	DWORD PTR [eax+4], ecx
; Line 469
	xor	eax, eax
; Line 470
	ret	0
$LN5@ssl_server:
; Line 465
	mov	eax, DWORD PTR _arg$[esp+4]
	xor	ecx, ecx
	pop	edi
	pop	esi
	mov	DWORD PTR [eax+4], ecx
; Line 469
	xor	eax, eax
; Line 470
	ret	0
$LN2@ssl_server:
; Line 467
	push	OFFSET ??_C@_0BO@EJEAHALL@Can?8t?5use?5SSL_get_servername?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 469
	xor	eax, eax
	pop	edi
	pop	esi
; Line 470
	ret	0
_ssl_servername_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _psk_client_cb
_TEXT	SEGMENT
_bn$ = -4						; size = 4
_ssl$ = 8						; size = 4
_hint$ = 12						; size = 4
_identity$ = 16						; size = 4
_max_identity_len$ = 20					; size = 4
_psk$ = 24						; size = 4
_max_psk_len$ = 28					; size = 4
_psk_client_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 244
	mov	eax, 4
	call	__chkstk
; Line 249
	mov	eax, DWORD PTR _c_debug
	mov	DWORD PTR _bn$[esp+4], 0
	test	eax, eax
	je	SHORT $LN2@psk_client
; Line 250
	push	OFFSET ??_C@_0P@BMNLBCBB@psk_client_cb?6?$AA@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	mov	eax, DWORD PTR _c_debug
	add	esp, 8
$LN2@psk_client:
; Line 251
	mov	ecx, DWORD PTR _hint$[esp]
	test	ecx, ecx
	jne	SHORT $LN3@psk_client
; Line 253
	test	eax, eax
	je	SHORT $LN6@psk_client
; Line 254
	push	OFFSET ??_C@_0DE@DGENHHJB@NULL?5received?5PSK?5identity?5hint?0@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 8
; Line 256
	jmp	SHORT $LN6@psk_client
$LN3@psk_client:
	test	eax, eax
	je	SHORT $LN6@psk_client
; Line 257
	push	ecx
	push	OFFSET ??_C@_0CB@IKEGHPFG@Received?5PSK?5identity?5hint?5?8?$CFs?8?6@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN6@psk_client:
; Line 262
	push	esi
	push	DWORD PTR _psk_identity
	mov	esi, DWORD PTR _max_identity_len$[esp+8]
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	push	DWORD PTR _identity$[esp+16]
	call	_BIO_snprintf
	add	esp, 16					; 00000010H
; Line 263
	test	eax, eax
	js	$out_err$18
	cmp	eax, esi
	ja	$out_err$18
; Line 265
	cmp	DWORD PTR _c_debug, 0
	je	SHORT $LN9@psk_client
; Line 266
	push	eax
	push	DWORD PTR _identity$[esp+8]
	push	OFFSET ??_C@_0BO@LCEIEJNP@created?5identity?5?8?$CFs?8?5len?$DN?$CFd?6?$AA@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN9@psk_client:
; Line 268
	push	DWORD PTR _psk_key
	lea	eax, DWORD PTR _bn$[esp+12]
	push	eax
	call	_BN_hex2bn
	add	esp, 8
; Line 269
	test	eax, eax
	jne	SHORT $LN10@psk_client
; Line 270
	push	DWORD PTR _psk_key
	push	OFFSET ??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 272
	mov	eax, DWORD PTR _bn$[esp+20]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN15@psk_client
; Line 273
	push	eax
	call	_BN_free
	add	esp, 4
; Line 297
	xor	eax, eax
	pop	esi
; Line 298
	pop	ecx
	ret	0
$LN10@psk_client:
; Line 277
	push	DWORD PTR _bn$[esp+8]
	call	_BN_num_bits
	mov	esi, DWORD PTR _max_psk_len$[esp+8]
	add	eax, 7
	cdq
	add	esp, 4
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, esi
	jbe	SHORT $LN12@psk_client
; Line 278
	push	DWORD PTR _bn$[esp+8]
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	push	eax
	push	esi
	push	OFFSET ??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 281
	push	DWORD PTR _bn$[esp+28]
	call	_BN_free
	add	esp, 24					; 00000018H
; Line 297
	xor	eax, eax
	pop	esi
; Line 298
	pop	ecx
	ret	0
$LN12@psk_client:
; Line 285
	push	DWORD PTR _psk$[esp+4]
	push	DWORD PTR _bn$[esp+12]
	call	_BN_bn2bin
; Line 286
	push	DWORD PTR _bn$[esp+16]
	mov	esi, eax
	call	_BN_free
	add	esp, 12					; 0000000cH
; Line 287
	test	esi, esi
	je	SHORT $out_err$18
; Line 290
	cmp	DWORD PTR _c_debug, 0
	je	SHORT $LN14@psk_client
; Line 291
	push	esi
	push	OFFSET ??_C@_0BE@PJLKILKF@created?5PSK?5len?$DN?$CFd?6?$AA@
	push	DWORD PTR _bio_c_out
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN14@psk_client:
; Line 293
	mov	eax, esi
	pop	esi
; Line 298
	pop	ecx
	ret	0
$out_err$18:
; Line 295
	cmp	DWORD PTR _c_debug, 0
	je	SHORT $LN15@psk_client
; Line 296
	push	OFFSET ??_C@_0BO@EOLEIMOP@Error?5in?5PSK?5client?5callback?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN15@psk_client:
; Line 297
	xor	eax, eax
	pop	esi
; Line 298
	pop	ecx
	ret	0
_psk_client_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ocsp_resp_cb
_TEXT	SEGMENT
_p$ = -4						; size = 4
_s$ = 8							; size = 4
_arg$ = 12						; size = 4
_ocsp_resp_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 2310
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	esi
; Line 2314
	lea	eax, DWORD PTR _p$[esp+12]
	push	eax
	push	0
	push	70					; 00000046H
	push	DWORD PTR _s$[esp+20]
	call	_SSL_ctrl
; Line 2315
	mov	esi, DWORD PTR _arg$[esp+24]
	mov	ebx, eax
	push	OFFSET ??_C@_0BA@JHILPHML@OCSP?5response?3?5?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 24					; 00000018H
; Line 2316
	cmp	DWORD PTR _p$[esp+12], 0
	jne	SHORT $LN2@ocsp_resp_
; Line 2317
	push	OFFSET ??_C@_0BC@HNJKPPAA@no?5response?5sent?6?$AA@
	push	esi
	call	_BIO_puts
	add	esp, 8
; Line 2318
	mov	eax, 1
	pop	esi
	pop	ebx
; Line 2331
	pop	ecx
	ret	0
$LN2@ocsp_resp_:
	push	edi
; Line 2320
	push	ebx
	lea	eax, DWORD PTR _p$[esp+20]
	push	eax
	push	0
	call	_d2i_OCSP_RESPONSE
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 2321
	test	edi, edi
	jne	SHORT $LN3@ocsp_resp_
; Line 2322
	push	OFFSET ??_C@_0BG@ICBBIDNI@response?5parse?5error?6?$AA@
	push	esi
	call	_BIO_puts
; Line 2323
	push	4
	push	ebx
	push	DWORD PTR _p$[esp+32]
	push	esi
	call	_BIO_dump_indent
	add	esp, 24					; 00000018H
; Line 2324
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 2331
	pop	ecx
	ret	0
$LN3@ocsp_resp_:
; Line 2326
	push	OFFSET ??_C@_0CJ@FLGIDGJF@?6?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	push	esi
	call	_BIO_puts
; Line 2327
	push	0
	push	edi
	push	esi
	call	_OCSP_RESPONSE_print
; Line 2328
	push	OFFSET ??_C@_0CI@PKCPDAIB@?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN?$DN@
	push	esi
	call	_BIO_puts
; Line 2329
	push	edi
	call	_OCSP_RESPONSE_free
	add	esp, 32					; 00000020H
; Line 2330
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebx
; Line 2331
	pop	ecx
	ret	0
_ocsp_resp_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_stuff
_TEXT	SEGMENT
_s$GSCopy$1$ = -528					; size = 4
_comp$1$ = -528						; size = 4
_proto$1 = -528						; size = 4
_proto_len$2 = -528					; size = 4
_got_a_chain$1$ = -524					; size = 4
_proto_len$3 = -524					; size = 4
_proto$4 = -524						; size = 4
_peer$1$ = -520						; size = 4
_buf$ = -516						; size = 512
__$ArrayPad$ = -4					; size = 4
_bio$ = 8						; size = 4
_s$ = 12						; size = 4
_full$ = 16						; size = 4
_print_stuff PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 2113
	mov	eax, 528				; 00000210H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+528], eax
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _s$[esp+532]
; Line 2114
	xor	ebx, ebx
	push	esi
	mov	esi, DWORD PTR _bio$[esp+536]
	push	edi
	mov	DWORD PTR _s$GSCopy$1$[esp+544], ebp
	mov	DWORD PTR _peer$1$[esp+544], ebx
; Line 2128
	cmp	DWORD PTR _full$[esp+540], ebx
	je	$LN13@print_stuf
; Line 2131
	push	ebp
	xor	edi, edi
	call	_SSL_get_peer_cert_chain
	mov	ebx, eax
	add	esp, 4
; Line 2132
	test	ebx, ebx
	je	$LN3@print_stuf
; Line 2135
	push	OFFSET ??_C@_0BH@EDGFPEIJ@?9?9?9?6Certificate?5chain?6?$AA@
	push	esi
	mov	DWORD PTR _got_a_chain$1$[esp+552], 1
	call	_BIO_printf
; Line 2136
	push	ebx
	call	_sk_num
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	$LN59@print_stuf
	npad	6
$LL4@print_stuf:
; Line 2137
	push	512					; 00000200H
	lea	eax, DWORD PTR _buf$[esp+548]
	push	eax
	push	edi
	push	ebx
	call	_sk_value
	push	eax
	call	_X509_get_subject_name
	add	esp, 12					; 0000000cH
	push	eax
	call	_X509_NAME_oneline
; Line 2139
	lea	eax, DWORD PTR _buf$[esp+556]
	push	eax
	push	edi
	push	OFFSET ??_C@_09HDEJJOFD@?$CF2d?5s?3?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 28					; 0000001cH
; Line 2140
	lea	eax, DWORD PTR _buf$[esp+544]
	push	512					; 00000200H
	push	eax
	push	edi
	push	ebx
	call	_sk_value
	push	eax
	call	_X509_get_issuer_name
	add	esp, 12					; 0000000cH
	push	eax
	call	_X509_NAME_oneline
; Line 2142
	lea	eax, DWORD PTR _buf$[esp+556]
	push	eax
	push	OFFSET ??_C@_08FCBCKNAC@?5?5?5i?3?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 2143
	cmp	DWORD PTR _c_showcerts, 0
	je	SHORT $LN2@print_stuf
; Line 2144
	push	edi
	push	ebx
	call	_sk_value
	push	eax
	push	esi
	call	_PEM_write_bio_X509
	add	esp, 16					; 00000010H
$LN2@print_stuf:
; Line 2136
	push	ebx
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	$LL4@print_stuf
	mov	edi, DWORD PTR _got_a_chain$1$[esp+544]
	jmp	SHORT $LN3@print_stuf
$LN59@print_stuf:
	mov	edi, 1
$LN3@print_stuf:
; Line 2148
	push	OFFSET ??_C@_04JIKOKJIN@?9?9?9?6?$AA@
	push	esi
	call	_BIO_printf
; Line 2149
	push	ebp
	call	_SSL_get_peer_certificate
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _peer$1$[esp+544], ebx
; Line 2150
	test	ebx, ebx
	je	SHORT $LN16@print_stuf
; Line 2151
	push	OFFSET ??_C@_0BE@CIPDPBOH@Server?5certificate?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
; Line 2154
	cmp	DWORD PTR _c_showcerts, 0
	je	SHORT $LN19@print_stuf
	test	edi, edi
	jne	SHORT $LN18@print_stuf
$LN19@print_stuf:
; Line 2155
	push	ebx
	push	esi
	call	_PEM_write_bio_X509
	add	esp, 8
$LN18@print_stuf:
; Line 2156
	push	512					; 00000200H
	lea	eax, DWORD PTR _buf$[esp+548]
	push	eax
	push	ebx
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
; Line 2157
	lea	eax, DWORD PTR _buf$[esp+556]
	push	eax
	push	OFFSET ??_C@_0M@JEDHOBJK@subject?$DN?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 2158
	lea	eax, DWORD PTR _buf$[esp+544]
	push	512					; 00000200H
	push	eax
	push	ebx
	call	_X509_get_issuer_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
; Line 2159
	lea	eax, DWORD PTR _buf$[esp+556]
	push	eax
	push	OFFSET ??_C@_0L@HCGAGKOB@issuer?$DN?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 24					; 00000018H
; Line 2160
	jmp	SHORT $LN17@print_stuf
$LN16@print_stuf:
; Line 2161
	push	OFFSET ??_C@_0BP@KIJJNOJC@no?5peer?5certificate?5available?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
$LN17@print_stuf:
; Line 2163
	push	ebp
	call	_SSL_get_client_CA_list
	mov	ebx, eax
	add	esp, 4
; Line 2164
	test	ebx, ebx
	je	SHORT $LN20@print_stuf
	push	ebx
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN20@print_stuf
; Line 2165
	push	OFFSET ??_C@_0CM@KDCDCBFK@?9?9?9?6Acceptable?5client?5certificat@
	push	esi
	call	_BIO_printf
; Line 2166
	push	ebx
	xor	edi, edi
	call	_sk_num
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN21@print_stuf
	npad	1
$LL7@print_stuf:
; Line 2167
	push	edi
	push	ebx
	call	_sk_value
; Line 2168
	push	512					; 00000200H
	lea	ecx, DWORD PTR _buf$[esp+556]
	push	ecx
	push	eax
	call	_X509_NAME_oneline
; Line 2169
	lea	ecx, DWORD PTR _buf$[esp+564]
	add	esp, 20					; 00000014H
	lea	edx, DWORD PTR [ecx+1]
$LL56@print_stuf:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL56@print_stuf
	sub	ecx, edx
	lea	eax, DWORD PTR _buf$[esp+544]
	push	ecx
	push	eax
	push	esi
	call	_BIO_write
; Line 2170
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_write
	push	ebx
	inc	edi
	call	_sk_num
	add	esp, 28					; 0000001cH
	cmp	edi, eax
	jl	SHORT $LL7@print_stuf
; Line 2172
	jmp	SHORT $LN21@print_stuf
$LN20@print_stuf:
; Line 2173
	push	OFFSET ??_C@_0CJ@LNBNMGME@?9?9?9?6No?5client?5certificate?5CA?5nam@
	push	esi
	call	_BIO_printf
	add	esp, 8
$LN21@print_stuf:
; Line 2175
	push	512					; 00000200H
	lea	eax, DWORD PTR _buf$[esp+548]
	push	eax
	push	ebp
	call	_SSL_get_shared_ciphers
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 2176
	test	edi, edi
	je	$LN22@print_stuf
; Line 2183
	push	OFFSET ??_C@_0DA@PBGEFJML@?9?9?9?6Ciphers?5common?5between?5both?5@
	push	esi
	call	_BIO_printf
; Line 2186
	mov	al, BYTE PTR [edi]
	add	esp, 8
	xor	ebx, ebx
	test	al, al
	je	SHORT $LN9@print_stuf
	xor	ebp, ebp
$LL8@print_stuf:
; Line 2187
	cmp	al, 58					; 0000003aH
	jne	SHORT $LN23@print_stuf
; Line 2188
	mov	eax, 1374389535				; 51eb851fH
	imul	ebx
	sar	edx, 3
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	imul	eax, eax, 25
	sub	eax, ebx
	add	eax, 15					; 0000000fH
	push	eax
	push	DWORD PTR ?space@?1??print_stuff@@9@9
	push	esi
	call	_BIO_write
; Line 2189
	inc	ebp
; Line 2191
	mov	eax, 1431655766				; 55555556H
	imul	ebp
	mov	ecx, ebp
	xor	ebx, ebx
	mov	eax, edx
	shr	eax, 31					; 0000001fH
	add	eax, edx
	push	1
	lea	eax, DWORD PTR [eax+eax*2]
	sub	ecx, eax
	mov	eax, OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	ecx, OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	cmove	eax, ecx
	push	eax
	push	esi
	call	_BIO_write
	add	esp, 24					; 00000018H
; Line 2192
	jmp	SHORT $LN24@print_stuf
$LN23@print_stuf:
; Line 2193
	push	1
	push	edi
	push	esi
	call	_BIO_write
	add	esp, 12					; 0000000cH
; Line 2194
	inc	ebx
$LN24@print_stuf:
; Line 2196
	mov	al, BYTE PTR [edi+1]
	inc	edi
	test	al, al
	jne	SHORT $LL8@print_stuf
	mov	ebp, DWORD PTR _s$GSCopy$1$[esp+544]
$LN9@print_stuf:
; Line 2198
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_write
	add	esp, 12					; 0000000cH
$LN22@print_stuf:
; Line 2201
	push	ebp
	push	esi
	call	_ssl_print_sigalgs
; Line 2202
	push	ebp
	push	esi
	call	_ssl_print_tmp_key
; Line 2204
	push	ebp
	call	_SSL_get_wbio
	push	eax
	call	_BIO_number_written
	add	esp, 24					; 00000018H
	push	eax
	push	ebp
	call	_SSL_get_rbio
	push	eax
	call	_BIO_number_read
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0DM@IBEKNAJH@?9?9?9?6SSL?5handshake?5has?5read?5?$CFld?5b@
	push	esi
	call	_BIO_printf
	mov	ebx, DWORD PTR _peer$1$[esp+560]
	add	esp, 16					; 00000010H
$LN13@print_stuf:
; Line 2209
	push	ebp
	call	_SSL_cache_hit
	test	eax, eax
	mov	edx, OFFSET ??_C@_09CFNAMCPG@?9?9?9?6New?0?5?$AA@
	mov	ecx, OFFSET ??_C@_0N@GOGBFOHK@?9?9?9?6Reused?0?5?$AA@
	cmove	ecx, edx
	push	ecx
	push	esi
	call	_BIO_printf
; Line 2210
	push	ebp
	call	_SSL_get_current_cipher
	mov	edi, eax
; Line 2211
	push	edi
	call	_SSL_CIPHER_get_name
	add	esp, 20					; 00000014H
	push	eax
	push	edi
	call	_SSL_CIPHER_get_version
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BC@CNENGAEP@?$CFs?0?5Cipher?5is?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 2213
	test	ebx, ebx
	je	SHORT $LN25@print_stuf
; Line 2215
	push	ebx
	call	_X509_get_pubkey
	mov	edi, eax
; Line 2216
	push	edi
	call	_EVP_PKEY_bits
	push	eax
	push	OFFSET ??_C@_0BN@FPGCCJFF@Server?5public?5key?5is?5?$CFd?5bit?6?$AA@
	push	esi
	call	_BIO_printf
; Line 2218
	push	edi
	call	_EVP_PKEY_free
	add	esp, 24					; 00000018H
$LN25@print_stuf:
; Line 2220
	push	0
	push	0
	push	76					; 0000004cH
	push	ebp
	call	_SSL_ctrl
	test	eax, eax
	mov	edx, OFFSET ??_C@_04CGMGFKEF@?5NOT?$AA@
	mov	ecx, OFFSET ??_C@_00CNPNBAHC@?$AA@
	cmove	ecx, edx
	push	ecx
	push	OFFSET ??_C@_0CF@HNLNDOIK@Secure?5Renegotiation?5IS?$CFs?5suppor@
	push	esi
	call	_BIO_printf
; Line 2223
	push	ebp
	call	_SSL_get_current_compression
; Line 2224
	push	ebp
	mov	DWORD PTR _comp$1$[esp+580], eax
	call	_SSL_get_current_expansion
	mov	edi, eax
	add	esp, 36					; 00000024H
; Line 2225
	mov	eax, DWORD PTR _comp$1$[esp+544]
	test	eax, eax
	je	SHORT $LN36@print_stuf
	push	eax
	call	_SSL_COMP_get_name
	add	esp, 4
	jmp	SHORT $LN37@print_stuf
$LN36@print_stuf:
	mov	eax, OFFSET ??_C@_04OKGDLNCL@NONE?$AA@
$LN37@print_stuf:
	push	eax
	push	OFFSET ??_C@_0BB@LGMJFOIL@Compression?3?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2227
	test	edi, edi
	je	SHORT $LN38@print_stuf
	push	edi
	call	_SSL_COMP_get_name
	add	esp, 4
	jmp	SHORT $LN39@print_stuf
$LN38@print_stuf:
	mov	eax, OFFSET ??_C@_04OKGDLNCL@NONE?$AA@
$LN39@print_stuf:
	push	eax
	push	OFFSET ??_C@_0P@GDKPJDML@Expansion?3?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2245
	cmp	DWORD PTR _next_proto+8, -1
	je	SHORT $LN26@print_stuf
; Line 2248
	lea	eax, DWORD PTR _proto_len$2[esp+544]
	push	eax
	lea	eax, DWORD PTR _proto$4[esp+548]
	push	eax
	push	ebp
	call	_SSL_get0_next_proto_negotiated
; Line 2249
	push	DWORD PTR _next_proto+8
	push	OFFSET ??_C@_0BF@PHJGCFEL@Next?5protocol?3?5?$CI?$CFd?$CJ?5?$AA@
	push	esi
	call	_BIO_printf
; Line 2250
	push	DWORD PTR _proto_len$2[esp+568]
	push	DWORD PTR _proto$4[esp+572]
	push	esi
	call	_BIO_write
; Line 2251
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_write
	add	esp, 48					; 00000030H
$LN26@print_stuf:
; Line 2257
	lea	eax, DWORD PTR _proto_len$3[esp+544]
	push	eax
	lea	eax, DWORD PTR _proto$1[esp+548]
	push	eax
	push	ebp
	call	_SSL_get0_alpn_selected
	add	esp, 12					; 0000000cH
; Line 2258
	cmp	DWORD PTR _proto_len$3[esp+544], 0
	jbe	SHORT $LN27@print_stuf
; Line 2259
	push	OFFSET ??_C@_0BA@OGCHPHFE@ALPN?5protocol?3?5?$AA@
	push	esi
	call	_BIO_printf
; Line 2260
	push	DWORD PTR _proto_len$3[esp+552]
	push	DWORD PTR _proto$1[esp+556]
	push	esi
	call	_BIO_write
; Line 2261
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_write
	add	esp, 32					; 00000020H
; Line 2262
	jmp	SHORT $LN28@print_stuf
$LN27@print_stuf:
; Line 2263
	push	OFFSET ??_C@_0BE@FNAAOJAJ@No?5ALPN?5negotiated?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
$LN28@print_stuf:
; Line 2269
	push	ebp
	call	_SSL_get_selected_srtp_profile
	add	esp, 4
; Line 2272
	test	eax, eax
	je	SHORT $LN29@print_stuf
; Line 2273
	push	DWORD PTR [eax]
	push	OFFSET ??_C@_0CH@FCLNMFKH@SRTP?5Extension?5negotiated?0?5profi@
	push	esi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN29@print_stuf:
; Line 2278
	push	ebp
	call	_SSL_get_session
	push	eax
	push	esi
	call	_SSL_SESSION_print
	add	esp, 12					; 0000000cH
; Line 2279
	cmp	DWORD PTR _keymatexportlabel, 0
	je	$LN31@print_stuf
; Line 2280
	push	OFFSET ??_C@_0BL@LPMKCGAM@Keying?5material?5exporter?3?6?$AA@
	push	esi
	call	_BIO_printf
; Line 2281
	push	DWORD PTR _keymatexportlabel
	push	OFFSET ??_C@_0BB@CNJDMPIH@?5?5?5?5Label?3?5?8?$CFs?8?6?$AA@
	push	esi
	call	_BIO_printf
; Line 2282
	push	DWORD PTR _keymatexportlen
	push	OFFSET ??_C@_0BG@HGLPNLLM@?5?5?5?5Length?3?5?$CFi?5bytes?6?$AA@
	push	esi
	call	_BIO_printf
; Line 2283
	push	2283					; 000008ebH
	push	OFFSET ??_C@_0BC@HDOLKHPP@?4?2apps?2s_client?4c?$AA@
	push	DWORD PTR _keymatexportlen
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 44					; 0000002cH
; Line 2284
	test	ebx, ebx
	je	$LN58@print_stuf
; Line 2285
	mov	edx, DWORD PTR _keymatexportlabel
	mov	ecx, edx
	lea	edi, DWORD PTR [ecx+1]
	npad	2
$LL57@print_stuf:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL57@print_stuf
	push	0
	push	0
	push	0
	sub	ecx, edi
	push	ecx
	push	edx
	push	DWORD PTR _keymatexportlen
	push	ebx
	push	ebp
	call	_SSL_export_keying_material
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN32@print_stuf
; Line 2290
	push	OFFSET ??_C@_0L@DLCKNELL@?5?5?5?5Error?6?$AA@
; Line 2291
	jmp	SHORT $LN60@print_stuf
$LN32@print_stuf:
; Line 2292
	push	OFFSET ??_C@_0BG@DLJBAMO@?5?5?5?5Keying?5material?3?5?$AA@
	push	esi
	call	_BIO_printf
; Line 2293
	xor	edi, edi
	add	esp, 8
	cmp	DWORD PTR _keymatexportlen, edi
	jle	SHORT $LN11@print_stuf
$LL12@print_stuf:
; Line 2294
	movzx	eax, BYTE PTR [ebx+edi]
	push	eax
	push	OFFSET ??_C@_04JFFKLGJF@?$CF02X?$AA@
	push	esi
	call	_BIO_printf
	inc	edi
	add	esp, 12					; 0000000cH
	cmp	edi, DWORD PTR _keymatexportlen
	jl	SHORT $LL12@print_stuf
$LN11@print_stuf:
; Line 2295
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
$LN60@print_stuf:
	push	esi
	call	_BIO_printf
	add	esp, 8
; Line 2297
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
$LN58@print_stuf:
	mov	ebx, DWORD PTR _peer$1$[esp+544]
$LN31@print_stuf:
; Line 2300
	push	OFFSET ??_C@_04JIKOKJIN@?9?9?9?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
; Line 2301
	test	ebx, ebx
	je	SHORT $LN34@print_stuf
; Line 2302
	push	ebx
	call	_X509_free
	add	esp, 4
$LN34@print_stuf:
; Line 2304
	push	0
	push	0
	push	11					; 0000000bH
	push	esi
	call	_BIO_ctrl
; Line 2305
	mov	ecx, DWORD PTR __$ArrayPad$[esp+560]
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 528				; 00000210H
	ret	0
_print_stuff ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sc_usage
_TEXT	SEGMENT
_sc_usage PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\s_client.c
; Line 303
	push	OFFSET ??_C@_0BG@NDGJLAD@usage?3?5s_client?5args?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 304
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 305
	push	OFFSET ??_C@_0CI@NFDFDEBP@?5?9host?5host?5?5?5?5?5?9?5use?5?9connect?5i@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 306
	push	OFFSET ??_C@_0CI@PJFPIDML@?5?9port?5port?5?5?5?5?5?9?5use?5?9connect?5i@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 307
	push	OFFSET ??_C@_04MAHDEHKL@4433?$AA@
	push	OFFSET ??_C@_09IPAEKDAI@localhost?$AA@
	push	OFFSET ??_C@_0DM@DAAPOIGI@?5?9connect?5host?3port?5?9?5who?5to?5con@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 310
	push	OFFSET ??_C@_0EA@PAPKIBFG@?5?9verify_hostname?5host?5?9?5check?5p@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 312
	push	OFFSET ??_C@_0DP@DJCBKCN@?5?9verify_email?5email?5?9?5check?5pee@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 314
	push	OFFSET ??_C@_0DO@GNFHPCIL@?5?9verify_ip?5ipaddr?5?9?5check?5peer?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 317
	push	OFFSET ??_C@_0DI@EHAJMJGI@?5?9verify?5arg?5?5?5?9?5turn?5on?5peer?5ce@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 319
	push	OFFSET ??_C@_0DE@GOBPIMCB@?5?9verify_return_error?5?9?5return?5v@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 321
	push	OFFSET ??_C@_0DO@JADCCCHM@?5?9cert?5arg?5?5?5?5?5?9?5certificate?5fil@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 323
	push	OFFSET ??_C@_0DO@ILODNPNH@?5?9certform?5arg?5?9?5certificate?5for@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 325
	push	OFFSET ??_C@_0DL@PJJGJLED@?5?9key?5arg?5?5?5?5?5?5?9?5Private?5key?5fil@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 327
	push	OFFSET ??_C@_0DC@IGMNKLKE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5not?5specified?5b@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 328
	push	OFFSET ??_C@_0DG@BDHNDFAC@?5?9keyform?5arg?5?5?9?5key?5format?5?$CIPEM@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 330
	push	OFFSET ??_C@_0DG@BFMFFOFA@?5?9pass?5arg?5?5?5?5?5?9?5private?5key?5fil@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 332
	push	OFFSET ??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 333
	push	OFFSET ??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 334
	push	OFFSET ??_C@_0ED@DIMIHAHA@?5?9no_alt_chains?5?9?5only?5ever?5use?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 336
	push	OFFSET ??_C@_0EL@GFHFDCBM@?5?9reconnect?5?5?5?5?9?5Drop?5and?5re?9mak@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 338
	push	OFFSET ??_C@_0EH@LLKOEDPP@?5?9pause?5?5?5?5?5?5?5?5?9?5sleep?$CI1?$CJ?5after?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 340
	push	OFFSET ??_C@_0EH@BDHGGPAE@?5?9prexit?5?5?5?5?5?5?5?9?5print?5session?5i@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 342
	push	OFFSET ??_C@_0DF@GLAOCGMB@?5?9showcerts?5?5?5?5?9?5show?5all?5certif@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 344
	push	OFFSET ??_C@_0BP@MAGFDDJA@?5?9debug?5?5?5?5?5?5?5?5?9?5extra?5output?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 348
	push	OFFSET ??_C@_0CJ@PGHHBNJL@?5?9msg?5?5?5?5?5?5?5?5?5?5?9?5Show?5protocol?5m@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 349
	push	OFFSET ??_C@_0CM@INMICKPN@?5?9nbio_test?5?5?5?5?9?5more?5ssl?5protoc@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 350
	push	OFFSET ??_C@_0CJ@JEECEKMM@?5?9state?5?5?5?5?5?5?5?5?9?5print?5the?5?8ssl?8@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 352
	push	OFFSET ??_C@_0CL@DKKNEEF@?5?9nbio?5?5?5?5?5?5?5?5?5?9?5Run?5with?5non?9bl@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 354
	push	OFFSET ??_C@_0DF@NJANHEED@?5?9crlf?5?5?5?5?5?5?5?5?5?9?5convert?5LF?5from@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 356
	push	OFFSET ??_C@_0CF@KGGGIGOL@?5?9quiet?5?5?5?5?5?5?5?5?9?5no?5s_client?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 357
	push	OFFSET ??_C@_0DJ@ODIMJIII@?5?9ign_eof?5?5?5?5?5?5?9?5ignore?5input?5eo@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 359
	push	OFFSET ??_C@_0CJ@CNCLIHNG@?5?9no_ign_eof?5?5?5?9?5don?8t?5ignore?5in@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 361
	push	OFFSET ??_C@_0CD@GMCGEHFF@?5?9psk_identity?5arg?5?9?5PSK?5identit@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 362
	push	OFFSET ??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 368
	push	OFFSET ??_C@_0DG@OIHFJCKN@?5?9srpuser?5user?5?5?5?5?5?9?5SRP?5authent@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 370
	push	OFFSET ??_C@_0CK@OEIKAKOJ@?5?9srppass?5arg?5?5?5?5?5?5?9?5password?5fo@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 371
	push	OFFSET ??_C@_0ED@FPNBJBED@?5?9srp_lateuser?5?5?5?5?5?9?5SRP?5usernam@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 373
	push	OFFSET ??_C@_0EA@LJHOGEKL@?5?9srp_moregroups?5?5?5?9?5Tolerate?5ot@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 375
	push	1024					; 00000400H
	push	OFFSET ??_C@_0EB@CBLIKAJL@?5?9srp_strength?5int?5?9?5minimal?5len@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 379
	push	OFFSET ??_C@_0CB@MAIOMCAD@?5?9ssl2?5?5?5?5?5?5?5?5?5?9?5just?5use?5SSLv2?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 381
	push	OFFSET ??_C@_0CB@MAPJFFCJ@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5just?5use?5SSLv3?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 383
	push	OFFSET ??_C@_0CD@OKJOIPFP@?5?9tls1_2?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?4@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 384
	push	OFFSET ??_C@_0CD@OKAGDGCB@?5?9tls1_1?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?4@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 385
	push	OFFSET ??_C@_0CB@BKPMKFPI@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5just?5use?5TLSv1?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 386
	push	OFFSET ??_C@_0CC@GHLBHJFE@?5?9dtls1?5?5?5?5?5?5?5?5?9?5just?5use?5DTLSv1@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 387
	push	OFFSET ??_C@_0CK@FDEOHNN@?5?9fallback_scsv?5?9?5send?5TLS_FALLB@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 388
	push	OFFSET ??_C@_0CJ@EJGKILCM@?5?9mtu?5?5?5?5?5?5?5?5?5?5?9?5set?5the?5link?5la@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 389
	push	OFFSET ??_C@_0EM@PCDENACO@?5?9no_tls1_2?1?9no_tls1_1?1?9no_tls1?1@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 391
	push	OFFSET ??_C@_0ED@MFJFCDHF@?5?9bugs?5?5?5?5?5?5?5?5?5?9?5Switch?5on?5all?5S@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 393
	push	OFFSET ??_C@_0EF@CHKHEFMC@?5?9cipher?5?5?5?5?5?5?5?9?5preferred?5ciphe@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 395
	push	OFFSET ??_C@_0DD@BAPEMNH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5command?5to?5see?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 397
	push	OFFSET ??_C@_0EA@DCAOMMPP@?5?9starttls?5prot?5?9?5use?5the?5STARTT@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 399
	push	OFFSET ??_C@_0DN@IJPNAMPE@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5for?5those?5proto@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 401
	push	OFFSET ??_C@_0EC@OLPHKLOO@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?8prot?8?5defines?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 403
	push	OFFSET ??_C@_0EA@DPONNPMK@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5only?5?$CCsmtp?$CC?0?5?$CCp@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 405
	push	OFFSET ??_C@_0CB@GJKLJCEJ@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5are?5supported?4?6@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 407
	push	OFFSET ??_C@_0DK@KOEJDDIL@?5?9engine?5id?5?5?5?5?9?5Initialise?5and?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 410
	push	59					; 0000003bH
	push	59					; 0000003bH
	push	OFFSET ??_C@_0BI@HHIJKENB@?5?9rand?5file?$CFcfile?$CFc?4?4?4?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 412
	push	OFFSET ??_C@_0CP@FINJMHON@?5?9sess_out?5arg?5?9?5file?5to?5write?5S@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 413
	push	OFFSET ??_C@_0DA@KFOBHKFJ@?5?9sess_in?5arg?5?5?9?5file?5to?5read?5SS@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 415
	push	OFFSET ??_C@_0EC@FHACLOOJ@?5?9servername?5host?5?5?9?5Set?5TLS?5ext@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 417
	push	OFFSET ??_C@_0DO@PMCEEEHA@?5?9tlsextdebug?5?5?5?5?5?5?9?5hex?5dump?5of@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 419
	push	OFFSET ??_C@_0DN@LAKBFBKC@?5?9status?5?5?5?5?5?5?5?5?5?5?5?9?5request?5cer@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 421
	push	OFFSET ??_C@_0EA@ENBACIIO@?5?9no_ticket?5?5?5?5?5?5?5?5?9?5disable?5use@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 423
	push	OFFSET ??_C@_0FC@BBKAOJN@?5?9serverinfo?5types?5?9?5send?5empty?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 425
	push	OFFSET ??_C@_0EK@MFOKJOIK@?5?9curves?5arg?5?5?5?5?5?5?5?9?5Elliptic?5cu@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 427
	push	OFFSET ??_C@_0EN@BHNFHAEP@?5?9sigalgs?5arg?5?5?5?5?5?5?9?5Signature?5a@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 429
	push	OFFSET ??_C@_0ED@MMODELKC@?5?9client_sigalgs?5arg?5?9?5Signature@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 431
	push	OFFSET ??_C@_0EK@MJPJCKJC@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5certifica@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 435
	push	OFFSET ??_C@_0GJ@BLOKIDOO@?5?9nextprotoneg?5arg?5?9?5enable?5NPN?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 438
	push	OFFSET ??_C@_0GK@ILJJODGL@?5?9alpn?5arg?5?5?5?5?5?5?5?5?5?9?5enable?5ALPN@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 440
	push	OFFSET ??_C@_0EJ@DKJMGLID@?5?9legacy_renegotiation?5?9?5enable?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 443
	push	OFFSET ??_C@_0FF@IDLIJFPH@?5?9use_srtp?5profiles?5?9?5Offer?5SRTP@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 446
	push	OFFSET ??_C@_0DN@MIJBJIJH@?5?9keymatexport?5label?5?5?5?9?5Export?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 448
	push	OFFSET ??_C@_0EL@MBBJFPLO@?5?9keymatexportlen?5len?5?5?9?5Export?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 40					; 00000028H
; Line 450
	ret	0
_sc_usage ENDP
_TEXT	ENDS
END

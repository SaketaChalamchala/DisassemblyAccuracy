; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\apps.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0L@JNOGJJCA@compatible?$AA@		; `string'
PUBLIC	??_C@_0L@GPCPPOGC@ca_default?$AA@		; `string'
PUBLIC	??_C@_09HPOELMCI@no_header?$AA@			; `string'
PUBLIC	??_C@_0L@KOCPJNEK@no_version?$AA@		; `string'
PUBLIC	??_C@_09BMFPNGJA@no_serial?$AA@			; `string'
PUBLIC	??_C@_0L@MPMABMAL@no_signame?$AA@		; `string'
PUBLIC	??_C@_0M@LFPGDAPD@no_validity?$AA@		; `string'
PUBLIC	??_C@_0L@BMNGEEIP@no_subject?$AA@		; `string'
PUBLIC	??_C@_09POJJKCAC@no_issuer?$AA@			; `string'
PUBLIC	??_C@_09NEDENPFH@no_pubkey?$AA@			; `string'
PUBLIC	??_C@_0O@BIDECDDG@no_extensions?$AA@		; `string'
PUBLIC	??_C@_0L@GNLOCCHG@no_sigdump?$AA@		; `string'
PUBLIC	??_C@_06MMLNDLIP@no_aux?$AA@			; `string'
PUBLIC	??_C@_0O@OHNPCCEE@no_attributes?$AA@		; `string'
PUBLIC	??_C@_0M@IDNMJLNK@ext_default?$AA@		; `string'
PUBLIC	??_C@_09NJNIONHM@ext_error?$AA@			; `string'
PUBLIC	??_C@_09LNDMENIE@ext_parse?$AA@			; `string'
PUBLIC	??_C@_08MKCLELCD@ext_dump?$AA@			; `string'
PUBLIC	??_C@_08DNFDMMBE@esc_2253?$AA@			; `string'
PUBLIC	??_C@_08MOKJPHFA@esc_ctrl?$AA@			; `string'
PUBLIC	??_C@_07CDEFJBOD@esc_msb?$AA@			; `string'
PUBLIC	??_C@_09FBNGBICE@use_quote?$AA@			; `string'
PUBLIC	??_C@_04LHHHFLPP@utf8?$AA@			; `string'
PUBLIC	??_C@_0M@JIPHIHCC@ignore_type?$AA@		; `string'
PUBLIC	??_C@_09GNHCDCJF@show_type?$AA@			; `string'
PUBLIC	??_C@_08KMNGFKHK@dump_all?$AA@			; `string'
PUBLIC	??_C@_0L@KOBDNBHE@dump_nostr?$AA@		; `string'
PUBLIC	??_C@_08EAJIKOBI@dump_der?$AA@			; `string'
PUBLIC	??_C@_06CJLEMFPD@compat?$AA@			; `string'
PUBLIC	??_C@_0P@MCGDLNKE@sep_comma_plus?$AA@		; `string'
PUBLIC	??_C@_0BF@KBBKPJJN@sep_comma_plus_space?$AA@	; `string'
PUBLIC	??_C@_0BE@CGGJPCMP@sep_semi_plus_space?$AA@	; `string'
PUBLIC	??_C@_0O@KAAJMPE@sep_multiline?$AA@		; `string'
PUBLIC	??_C@_06GDJIMBOL@dn_rev?$AA@			; `string'
PUBLIC	??_C@_07BPCNMIP@nofname?$AA@			; `string'
PUBLIC	??_C@_05DOJGLPOI@sname?$AA@			; `string'
PUBLIC	??_C@_05MMBGAPKG@lname?$AA@			; `string'
PUBLIC	??_C@_05CBJPDLOK@align?$AA@			; `string'
PUBLIC	??_C@_03PLGJJJLK@oid?$AA@			; `string'
PUBLIC	??_C@_08GFKNBJMB@space_eq?$AA@			; `string'
PUBLIC	??_C@_0N@PAEHGOAB@dump_unknown?$AA@		; `string'
PUBLIC	??_C@_07HEMBHFCL@RFC2253?$AA@			; `string'
PUBLIC	??_C@_07FAIJGANN@oneline?$AA@			; `string'
PUBLIC	??_C@_09HCOPNKIA@multiline?$AA@			; `string'
_BSS	SEGMENT
_ui_method DD	01H DUP (?)
?proc@?1??app_tminterval@@9@9 DD 01H DUP (?)		; `app_tminterval'::`2'::proc
?load_config_called@?1??load_config@@9@9 DD 01H DUP (?)	; `load_config'::`2'::load_config_called
?pwdbio@?1??app_get_pass@@9@9 DD 01H DUP (?)		; `app_get_pass'::`2'::pwdbio
_BSS	ENDS
;	COMDAT ??_C@_09HCOPNKIA@multiline?$AA@
CONST	SEGMENT
??_C@_09HCOPNKIA@multiline?$AA@ DB 'multiline', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07FAIJGANN@oneline?$AA@
CONST	SEGMENT
??_C@_07FAIJGANN@oneline?$AA@ DB 'oneline', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HEMBHFCL@RFC2253?$AA@
CONST	SEGMENT
??_C@_07HEMBHFCL@RFC2253?$AA@ DB 'RFC2253', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PAEHGOAB@dump_unknown?$AA@
CONST	SEGMENT
??_C@_0N@PAEHGOAB@dump_unknown?$AA@ DB 'dump_unknown', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GFKNBJMB@space_eq?$AA@
CONST	SEGMENT
??_C@_08GFKNBJMB@space_eq?$AA@ DB 'space_eq', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03PLGJJJLK@oid?$AA@
CONST	SEGMENT
??_C@_03PLGJJJLK@oid?$AA@ DB 'oid', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05CBJPDLOK@align?$AA@
CONST	SEGMENT
??_C@_05CBJPDLOK@align?$AA@ DB 'align', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MMBGAPKG@lname?$AA@
CONST	SEGMENT
??_C@_05MMBGAPKG@lname?$AA@ DB 'lname', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DOJGLPOI@sname?$AA@
CONST	SEGMENT
??_C@_05DOJGLPOI@sname?$AA@ DB 'sname', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BPCNMIP@nofname?$AA@
CONST	SEGMENT
??_C@_07BPCNMIP@nofname?$AA@ DB 'nofname', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GDJIMBOL@dn_rev?$AA@
CONST	SEGMENT
??_C@_06GDJIMBOL@dn_rev?$AA@ DB 'dn_rev', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KAAJMPE@sep_multiline?$AA@
CONST	SEGMENT
??_C@_0O@KAAJMPE@sep_multiline?$AA@ DB 'sep_multiline', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CGGJPCMP@sep_semi_plus_space?$AA@
CONST	SEGMENT
??_C@_0BE@CGGJPCMP@sep_semi_plus_space?$AA@ DB 'sep_semi_plus_space', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KBBKPJJN@sep_comma_plus_space?$AA@
CONST	SEGMENT
??_C@_0BF@KBBKPJJN@sep_comma_plus_space?$AA@ DB 'sep_comma_plus_space', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MCGDLNKE@sep_comma_plus?$AA@
CONST	SEGMENT
??_C@_0P@MCGDLNKE@sep_comma_plus?$AA@ DB 'sep_comma_plus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CJLEMFPD@compat?$AA@
CONST	SEGMENT
??_C@_06CJLEMFPD@compat?$AA@ DB 'compat', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EAJIKOBI@dump_der?$AA@
CONST	SEGMENT
??_C@_08EAJIKOBI@dump_der?$AA@ DB 'dump_der', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KOBDNBHE@dump_nostr?$AA@
CONST	SEGMENT
??_C@_0L@KOBDNBHE@dump_nostr?$AA@ DB 'dump_nostr', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KMNGFKHK@dump_all?$AA@
CONST	SEGMENT
??_C@_08KMNGFKHK@dump_all?$AA@ DB 'dump_all', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GNHCDCJF@show_type?$AA@
CONST	SEGMENT
??_C@_09GNHCDCJF@show_type?$AA@ DB 'show_type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JIPHIHCC@ignore_type?$AA@
CONST	SEGMENT
??_C@_0M@JIPHIHCC@ignore_type?$AA@ DB 'ignore_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LHHHFLPP@utf8?$AA@
CONST	SEGMENT
??_C@_04LHHHFLPP@utf8?$AA@ DB 'utf8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBNGBICE@use_quote?$AA@
CONST	SEGMENT
??_C@_09FBNGBICE@use_quote?$AA@ DB 'use_quote', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CDEFJBOD@esc_msb?$AA@
CONST	SEGMENT
??_C@_07CDEFJBOD@esc_msb?$AA@ DB 'esc_msb', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MOKJPHFA@esc_ctrl?$AA@
CONST	SEGMENT
??_C@_08MOKJPHFA@esc_ctrl?$AA@ DB 'esc_ctrl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08DNFDMMBE@esc_2253?$AA@
CONST	SEGMENT
??_C@_08DNFDMMBE@esc_2253?$AA@ DB 'esc_2253', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MKCLELCD@ext_dump?$AA@
CONST	SEGMENT
??_C@_08MKCLELCD@ext_dump?$AA@ DB 'ext_dump', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09LNDMENIE@ext_parse?$AA@
CONST	SEGMENT
??_C@_09LNDMENIE@ext_parse?$AA@ DB 'ext_parse', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NJNIONHM@ext_error?$AA@
CONST	SEGMENT
??_C@_09NJNIONHM@ext_error?$AA@ DB 'ext_error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IDNMJLNK@ext_default?$AA@
CONST	SEGMENT
??_C@_0M@IDNMJLNK@ext_default?$AA@ DB 'ext_default', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OHNPCCEE@no_attributes?$AA@
CONST	SEGMENT
??_C@_0O@OHNPCCEE@no_attributes?$AA@ DB 'no_attributes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06MMLNDLIP@no_aux?$AA@
CONST	SEGMENT
??_C@_06MMLNDLIP@no_aux?$AA@ DB 'no_aux', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GNLOCCHG@no_sigdump?$AA@
CONST	SEGMENT
??_C@_0L@GNLOCCHG@no_sigdump?$AA@ DB 'no_sigdump', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BIDECDDG@no_extensions?$AA@
CONST	SEGMENT
??_C@_0O@BIDECDDG@no_extensions?$AA@ DB 'no_extensions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NEDENPFH@no_pubkey?$AA@
CONST	SEGMENT
??_C@_09NEDENPFH@no_pubkey?$AA@ DB 'no_pubkey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09POJJKCAC@no_issuer?$AA@
CONST	SEGMENT
??_C@_09POJJKCAC@no_issuer?$AA@ DB 'no_issuer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BMNGEEIP@no_subject?$AA@
CONST	SEGMENT
??_C@_0L@BMNGEEIP@no_subject?$AA@ DB 'no_subject', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LFPGDAPD@no_validity?$AA@
CONST	SEGMENT
??_C@_0M@LFPGDAPD@no_validity?$AA@ DB 'no_validity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MPMABMAL@no_signame?$AA@
CONST	SEGMENT
??_C@_0L@MPMABMAL@no_signame?$AA@ DB 'no_signame', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BMFPNGJA@no_serial?$AA@
CONST	SEGMENT
??_C@_09BMFPNGJA@no_serial?$AA@ DB 'no_serial', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KOCPJNEK@no_version?$AA@
CONST	SEGMENT
??_C@_0L@KOCPJNEK@no_version?$AA@ DB 'no_version', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HPOELMCI@no_header?$AA@
CONST	SEGMENT
??_C@_09HPOELMCI@no_header?$AA@ DB 'no_header', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GPCPPOGC@ca_default?$AA@
CONST	SEGMENT
??_C@_0L@GPCPPOGC@ca_default?$AA@ DB 'ca_default', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JNOGJJCA@compatible?$AA@
CONST	SEGMENT
??_C@_0L@JNOGJJCA@compatible?$AA@ DB 'compatible', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
?cert_tbl@?1??set_cert_ex@@9@9 DD FLAT:??_C@_0L@JNOGJJCA@compatible?$AA@ ; `set_cert_ex'::`2'::cert_tbl
	DD	00H
	DD	0ffffffffH
	DD	FLAT:??_C@_0L@GPCPPOGC@ca_default?$AA@
	DD	093H
	DD	0ffffffffH
	DD	FLAT:??_C@_09HPOELMCI@no_header?$AA@
	DD	01H
	DD	00H
	DD	FLAT:??_C@_0L@KOCPJNEK@no_version?$AA@
	DD	02H
	DD	00H
	DD	FLAT:??_C@_09BMFPNGJA@no_serial?$AA@
	DD	04H
	DD	00H
	DD	FLAT:??_C@_0L@MPMABMAL@no_signame?$AA@
	DD	08H
	DD	00H
	DD	FLAT:??_C@_0M@LFPGDAPD@no_validity?$AA@
	DD	020H
	DD	00H
	DD	FLAT:??_C@_0L@BMNGEEIP@no_subject?$AA@
	DD	040H
	DD	00H
	DD	FLAT:??_C@_09POJJKCAC@no_issuer?$AA@
	DD	010H
	DD	00H
	DD	FLAT:??_C@_09NEDENPFH@no_pubkey?$AA@
	DD	080H
	DD	00H
	DD	FLAT:??_C@_0O@BIDECDDG@no_extensions?$AA@
	DD	0100H
	DD	00H
	DD	FLAT:??_C@_0L@GNLOCCHG@no_sigdump?$AA@
	DD	0200H
	DD	00H
	DD	FLAT:??_C@_06MMLNDLIP@no_aux?$AA@
	DD	0400H
	DD	00H
	DD	FLAT:??_C@_0O@OHNPCCEE@no_attributes?$AA@
	DD	0800H
	DD	00H
	DD	FLAT:??_C@_0M@IDNMJLNK@ext_default?$AA@
	DD	00H
	DD	0f0000H
	DD	FLAT:??_C@_09NJNIONHM@ext_error?$AA@
	DD	010000H
	DD	0f0000H
	DD	FLAT:??_C@_09LNDMENIE@ext_parse?$AA@
	DD	020000H
	DD	0f0000H
	DD	FLAT:??_C@_08MKCLELCD@ext_dump?$AA@
	DD	030000H
	DD	0f0000H
	DD	00H
	DD	00H
	DD	00H
	ORG $+4
?ex_tbl@?1??set_name_ex@@9@9 DD FLAT:??_C@_08DNFDMMBE@esc_2253?$AA@ ; `set_name_ex'::`2'::ex_tbl
	DD	01H
	DD	00H
	DD	FLAT:??_C@_08MOKJPHFA@esc_ctrl?$AA@
	DD	02H
	DD	00H
	DD	FLAT:??_C@_07CDEFJBOD@esc_msb?$AA@
	DD	04H
	DD	00H
	DD	FLAT:??_C@_09FBNGBICE@use_quote?$AA@
	DD	08H
	DD	00H
	DD	FLAT:??_C@_04LHHHFLPP@utf8?$AA@
	DD	010H
	DD	00H
	DD	FLAT:??_C@_0M@JIPHIHCC@ignore_type?$AA@
	DD	020H
	DD	00H
	DD	FLAT:??_C@_09GNHCDCJF@show_type?$AA@
	DD	040H
	DD	00H
	DD	FLAT:??_C@_08KMNGFKHK@dump_all?$AA@
	DD	080H
	DD	00H
	DD	FLAT:??_C@_0L@KOBDNBHE@dump_nostr?$AA@
	DD	0100H
	DD	00H
	DD	FLAT:??_C@_08EAJIKOBI@dump_der?$AA@
	DD	0200H
	DD	00H
	DD	FLAT:??_C@_06CJLEMFPD@compat?$AA@
	DD	00H
	DD	0ffffffffH
	DD	FLAT:??_C@_0P@MCGDLNKE@sep_comma_plus?$AA@
	DD	010000H
	DD	0f0000H
	DD	FLAT:??_C@_0BF@KBBKPJJN@sep_comma_plus_space?$AA@
	DD	020000H
	DD	0f0000H
	DD	FLAT:??_C@_0BE@CGGJPCMP@sep_semi_plus_space?$AA@
	DD	030000H
	DD	0f0000H
	DD	FLAT:??_C@_0O@KAAJMPE@sep_multiline?$AA@
	DD	040000H
	DD	0f0000H
	DD	FLAT:??_C@_06GDJIMBOL@dn_rev?$AA@
	DD	0100000H
	DD	00H
	DD	FLAT:??_C@_07BPCNMIP@nofname?$AA@
	DD	0600000H
	DD	0600000H
	DD	FLAT:??_C@_05DOJGLPOI@sname?$AA@
	DD	00H
	DD	0600000H
	DD	FLAT:??_C@_05MMBGAPKG@lname?$AA@
	DD	0200000H
	DD	0600000H
	DD	FLAT:??_C@_05CBJPDLOK@align?$AA@
	DD	02000000H
	DD	00H
	DD	FLAT:??_C@_03PLGJJJLK@oid?$AA@
	DD	0400000H
	DD	0600000H
	DD	FLAT:??_C@_08GFKNBJMB@space_eq?$AA@
	DD	0800000H
	DD	00H
	DD	FLAT:??_C@_0N@PAEHGOAB@dump_unknown?$AA@
	DD	01000000H
	DD	00H
	DD	FLAT:??_C@_07HEMBHFCL@RFC2253?$AA@
	DD	01110317H
	DD	0ffffffffH
	DD	FLAT:??_C@_07FAIJGANN@oneline?$AA@
	DD	082031fH
	DD	0ffffffffH
	DD	FLAT:??_C@_09HCOPNKIA@multiline?$AA@
	DD	02a40006H
	DD	0ffffffffH
	DD	FLAT:??_C@_0L@GPCPPOGC@ca_default?$AA@
	DD	02a40006H
	DD	0ffffffffH
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
_DATA	SEGMENT
?warning@?1??app_tminterval@@9@9 DD 01H			; `app_tminterval'::`2'::warning
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	_password_callback
PUBLIC	_setup_ui_method
PUBLIC	_destroy_ui_method
PUBLIC	_str2fmt
PUBLIC	_program_name
PUBLIC	_chopup_args
PUBLIC	_dump_cert_text
PUBLIC	_print_name
PUBLIC	_set_cert_ex
PUBLIC	_set_name_ex
PUBLIC	_set_ext_copy
PUBLIC	_copy_extensions
PUBLIC	_app_passwd
PUBLIC	_add_oid_section
PUBLIC	_load_cert
PUBLIC	_load_crl
PUBLIC	_load_cert_crl_http
PUBLIC	_load_key
PUBLIC	_load_pubkey
PUBLIC	_load_certs
PUBLIC	_load_crls
PUBLIC	_setup_verify
PUBLIC	_setup_engine
PUBLIC	_load_config
PUBLIC	_make_config_name
PUBLIC	_load_serial
PUBLIC	_save_serial
PUBLIC	_rotate_serial
PUBLIC	_rand_serial
PUBLIC	_load_index
PUBLIC	_index_index
PUBLIC	_save_index
PUBLIC	_rotate_index
PUBLIC	_free_index
PUBLIC	_index_name_cmp
PUBLIC	_parse_yesno
PUBLIC	_parse_name
PUBLIC	_args_verify
PUBLIC	_policies_print
PUBLIC	_bio_to_mem
PUBLIC	_pkey_ctrl_string
PUBLIC	_next_protos_parse
PUBLIC	_print_cert_checks
PUBLIC	_store_setup_crl_download
PUBLIC	_app_isdir
PUBLIC	_raw_read_stdin
PUBLIC	_raw_write_stdout
PUBLIC	_app_tminterval
PUBLIC	_app_init
PUBLIC	??_C@_06CKOLGKJK@PKCS12?$AA@			; `string'
PUBLIC	??_C@_06IDAJNGAK@pkcs12?$AA@			; `string'
PUBLIC	??_C@_03NNGPPEJH@P12?$AA@			; `string'
PUBLIC	??_C@_03HNFNFLKJ@p12?$AA@			; `string'
PUBLIC	??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@	; `string'
PUBLIC	??_C@_08MAHPNCKH@subject?$DN?$AA@		; `string'
PUBLIC	??_C@_08BDBNPDII@?6issuer?$DN?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0CD@HINDFPHK@OpenSSL?5application?5user?5interfa@ ; `string'
PUBLIC	??_C@_0M@FKGGGFHP@pass?5phrase?$AA@		; `string'
PUBLIC	??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@	; `string'
PUBLIC	??_C@_0BG@HNCPHOCJ@User?5interface?5error?6?$AA@ ; `string'
PUBLIC	??_C@_09JELMDBBD@aborted?$CB?6?$AA@		; `string'
PUBLIC	??_C@_05OLNJAKGC@pass?3?$AA@			; `string'
PUBLIC	??_C@_04MGCDLKHE@env?3?$AA@			; `string'
PUBLIC	??_C@_0CE@NKEIKLNB@Can?8t?5read?5environment?5variable?5@ ; `string'
PUBLIC	??_C@_05BOPHDICO@file?3?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0BE@DGGEJBEC@Can?8t?5open?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_05MHOFLBOO@stdin?$AA@			; `string'
PUBLIC	??_C@_0BK@EEFMFEJC@Can?8t?5open?5BIO?5for?5stdin?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@FEIKIBOM@Invalid?5password?5argument?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0CB@KJOAPACB@Error?5reading?5password?5from?5BIO?6@ ; `string'
PUBLIC	??_C@_0M@HCKPEIO@oid_section?$AA@		; `string'
PUBLIC	??_C@_0CA@HDAKCCMK@problem?5loading?5oid?5section?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@DCFHMIBP@problem?5creating?5object?5?$CFs?$DN?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@PEGFFLPF@Error?5loading?5PKCS12?5file?5for?5?$CFs@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0CC@DKCLIBKC@Passpharse?5callback?5error?5for?5?$CFs@ ; `string'
PUBLIC	??_C@_0DK@EMMPDJCK@Mac?5verify?5error?5?$CIwrong?5password@ ; `string'
PUBLIC	??_C@_0BF@LDHEOEBK@https?5not?5supported?6?$AA@	; `string'
PUBLIC	??_C@_03HAPOJHBM@GET?$AA@			; `string'
PUBLIC	??_C@_04CPPPJGME@Host?$AA@			; `string'
PUBLIC	??_C@_0M@LLNFCECG@certificate?$AA@		; `string'
PUBLIC	??_C@_03GEOOCNOH@CRL?$AA@			; `string'
PUBLIC	??_C@_0BK@FAFHEINM@Error?5loading?5?$CFs?5from?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@JJKPOFNI@Error?5opening?5?$CFs?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@BGMEBKBE@Error?5reading?5header?5on?5certific@ ; `string'
PUBLIC	??_C@_0CD@HFNMCDK@bad?5input?5format?5specified?5for?5?$CF@ ; `string'
PUBLIC	??_C@_0BM@FDKJDCHF@unable?5to?5load?5certificate?6?$AA@ ; `string'
PUBLIC	??_C@_0CK@DJFFGPOF@bad?5input?5format?5specified?5for?5i@ ; `string'
PUBLIC	??_C@_0BE@BBFHHDDE@unable?5to?5load?5CRL?6?$AA@	; `string'
PUBLIC	??_C@_0BG@OLBFGCBD@no?5keyfile?5specified?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@MCNMEPFL@no?5engine?5specified?6?$AA@	; `string'
PUBLIC	??_C@_0BM@OODBDEPN@cannot?5load?5?$CFs?5from?5engine?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@DHFLKNAM@bad?5input?5format?5specified?5for?5k@ ; `string'
PUBLIC	??_C@_0BD@DHEMONEO@unable?5to?5load?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BE@NPKILBBI@Error?5reading?5?$CFs?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0N@NGKEHKOM@certificates?$AA@		; `string'
PUBLIC	??_C@_04DKBILDMD@CRLs?$AA@			; `string'
PUBLIC	??_C@_04CGFJFPFD@none?$AA@			; `string'
PUBLIC	??_C@_04COAGEIMF@copy?$AA@			; `string'
PUBLIC	??_C@_07ENLILCDE@copyall?$AA@			; `string'
PUBLIC	??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_07OBLKMMON@dynamic?$AA@			; `string'
PUBLIC	??_C@_07EGEBNIPD@SO_PATH?$AA@			; `string'
PUBLIC	??_C@_04ICOEJIDH@LOAD?$AA@			; `string'
PUBLIC	??_C@_04HAPDLBFF@auto?$AA@			; `string'
PUBLIC	??_C@_0BO@GLIGNJMA@enabling?5auto?5ENGINE?5support?6?$AA@ ; `string'
PUBLIC	??_C@_0BF@FDAJFBF@invalid?5engine?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@HNMPJJDL@SET_USER_INTERFACE?$AA@	; `string'
PUBLIC	??_C@_0BH@OBPKDCDO@can?8t?5use?5that?5engine?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@CPAKBHCD@engine?5?$CC?$CFs?$CC?5set?4?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@IPMGKJPN@Error?5configuring?5OpenSSL?6?$AA@ ; `string'
PUBLIC	??_C@_01KMDKNFGN@?1?$AA@			; `string'
PUBLIC	??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@		; `string'
PUBLIC	??_C@_0BP@IBMKHAAI@unable?5to?5load?5number?5from?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CM@KKKLPGOP@error?5converting?5number?5from?5bin@ ; `string'
PUBLIC	??_C@_0BE@PGHNBIGG@file?5name?5too?5long?6?$AA@	; `string'
PUBLIC	??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@		; `string'
PUBLIC	??_C@_0CJ@OGFINJBE@error?5converting?5serial?5to?5ASN?41@ ; `string'
PUBLIC	??_C@_0BL@PJHGPAJJ@unable?5to?5rename?5?$CFs?5to?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_06CEHAOENB@reason?$AA@			; `string'
PUBLIC	??_C@_0BF@BIGLPGDL@unable?5to?5open?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_07MFJDFAJK@?$CFs?4attr?$AA@		; `string'
PUBLIC	??_C@_0CN@KHNEBDJO@error?5on?5line?5?$CFld?5of?5db?5attribut@ ; `string'
PUBLIC	??_C@_0P@HOGDIGGB@unique_subject?$AA@		; `string'
PUBLIC	??_C@_0DC@FMBAALNJ@error?5creating?5serial?5number?5ind@ ; `string'
PUBLIC	??_C@_0CJ@LAHEODBL@error?5creating?5name?5index?3?$CI?$CFld?0?$CF@ ; `string'
PUBLIC	??_C@_0L@FJEANEHK@?$CFs?4attr?4?$CFs?$AA@	; `string'
PUBLIC	??_C@_03ICICOMAL@yes?$AA@			; `string'
PUBLIC	??_C@_02KAJCLHKP@no?$AA@			; `string'
PUBLIC	??_C@_0BF@HNOOHBO@unique_subject?5?$DN?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0O@NPENBAOL@malloc?5error?6?$AA@		; `string'
PUBLIC	??_C@_0CC@MFKPEIBE@Subject?5does?5not?5start?5with?5?8?1?8?4@ ; `string'
PUBLIC	??_C@_0CD@EOHKOJGN@escape?5character?5at?5end?5of?5strin@ ; `string'
PUBLIC	??_C@_0EN@LIPKONBC@end?5of?5string?5encountered?5while?5@ ; `string'
PUBLIC	??_C@_0DA@DIKEDNCG@Subject?5Attribute?5?$CFs?5has?5no?5know@ ; `string'
PUBLIC	??_C@_0DF@IJPKHMNK@No?5value?5provided?5for?5Subject?5At@ ; `string'
PUBLIC	??_C@_07EDOEKPLG@?9policy?$AA@			; `string'
PUBLIC	??_C@_0BF@OKHBOGOJ@Invalid?5Policy?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_08OKAIACAC@?9purpose?$AA@			; `string'
PUBLIC	??_C@_0BG@MLBGEMEI@unrecognized?5purpose?6?$AA@	; `string'
PUBLIC	??_C@_0O@GLCJCNHH@?9verify_depth?$AA@		; `string'
PUBLIC	??_C@_0P@PLGBDNLB@invalid?5depth?6?$AA@		; `string'
PUBLIC	??_C@_07FHCFGGIA@?9attime?$AA@			; `string'
PUBLIC	??_C@_03LMKFJNEF@?$CFli?$AA@			; `string'
PUBLIC	??_C@_0BM@BLOMJHGB@Error?5parsing?5timestamp?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@CBGFOLCL@?9verify_hostname?$AA@	; `string'
PUBLIC	??_C@_0O@IDCHAMO@?9verify_email?$AA@		; `string'
PUBLIC	??_C@_0L@BFLANKHI@?9verify_ip?$AA@		; `string'
PUBLIC	??_C@_0BB@MAMKNOBM@?9ignore_critical?$AA@	; `string'
PUBLIC	??_C@_0P@KGEGMNHK@?9issuer_checks?$AA@		; `string'
PUBLIC	??_C@_0L@IIGOHFBF@?9crl_check?$AA@		; `string'
PUBLIC	??_C@_0P@JMLMJOLO@?9crl_check_all?$AA@		; `string'
PUBLIC	??_C@_0O@CHPKAFNL@?9policy_check?$AA@		; `string'
PUBLIC	??_C@_0BB@DFNKALPO@?9explicit_policy?$AA@	; `string'
PUBLIC	??_C@_0N@BIEOAHOE@?9inhibit_any?$AA@		; `string'
PUBLIC	??_C@_0N@IIAGEECI@?9inhibit_map?$AA@		; `string'
PUBLIC	??_C@_0N@JAAINALF@?9x509_strict?$AA@		; `string'
PUBLIC	??_C@_0O@JLHDLMKC@?9extended_crl?$AA@		; `string'
PUBLIC	??_C@_0M@NIBFNGJH@?9use_deltas?$AA@		; `string'
PUBLIC	??_C@_0O@HLMNILI@?9policy_print?$AA@		; `string'
PUBLIC	??_C@_0O@HOJLLGLJ@?9check_ss_sig?$AA@		; `string'
PUBLIC	??_C@_0P@FAJCKKIM@?9trusted_first?$AA@		; `string'
PUBLIC	??_C@_0BB@CJLNDP@?9suiteB_128_only?$AA@		; `string'
PUBLIC	??_C@_0M@PEHELDMD@?9suiteB_128?$AA@		; `string'
PUBLIC	??_C@_0M@CMOLEKI@?9suiteB_192?$AA@		; `string'
PUBLIC	??_C@_0P@MPJEMPGB@?9partial_chain?$AA@		; `string'
PUBLIC	??_C@_0P@PNNLIPKE@?9no_alt_chains?$AA@		; `string'
PUBLIC	??_C@_0N@ENJCIODO@?$CFs?5Policies?3?$AA@	; `string'
PUBLIC	??_C@_09CMBKKAKN@?5?$DMempty?$DO?6?$AA@		; `string'
PUBLIC	??_C@_04HPMIDMKH@True?$AA@			; `string'
PUBLIC	??_C@_05MKDOIIA@False?$AA@			; `string'
PUBLIC	??_C@_0BN@IBNHIEPH@Require?5explicit?5Policy?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_09NGOBFEPP@Authority?$AA@			; `string'
PUBLIC	??_C@_04ODLBFFJE@User?$AA@			; `string'
PUBLIC	??_C@_04CGMGFKEF@?5NOT?$AA@			; `string'
PUBLIC	??_C@_0CG@BEAMIHCH@Hostname?5?$CFs?5does?$CFs?5match?5certifi@ ; `string'
PUBLIC	??_C@_0CD@CDKJLNLJ@Email?5?$CFs?5does?$CFs?5match?5certificat@ ; `string'
PUBLIC	??_C@_0CA@BEKABJAC@IP?5?$CFs?5does?$CFs?5match?5certificate?6?$AA@ ; `string'
PUBLIC	??_C@_07FGAOOBMN@http?3?1?1?$AA@		; `string'
PUBLIC	??_C@_0DN@IIJMFLNE@To?5get?5meaningful?5results?0?5run?5t@ ; `string'
PUBLIC	__real@3e7ad7f29abcaf48
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp__setvbuf:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__getenv:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp___stricmp:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_realloc:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_BIO_set_flags:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new_file:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_gets:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_puts:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_s_mem:PROC
EXTRN	_BIO_new_connect:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_lh_strhash:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_BUF_MEM_new:PROC
EXTRN	_BUF_MEM_free:PROC
EXTRN	_BUF_MEM_grow_clean:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_BUF_strlcpy:PROC
EXTRN	_BUF_strlcat:PROC
EXTRN	_BN_pseudo_rand:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_free:PROC
EXTRN	_ASN1_STRING_length:PROC
EXTRN	_ASN1_STRING_data:PROC
EXTRN	_ASN1_INTEGER_new:PROC
EXTRN	_ASN1_INTEGER_free:PROC
EXTRN	_i2a_ASN1_INTEGER:PROC
EXTRN	_a2i_ASN1_INTEGER:PROC
EXTRN	_BN_to_ASN1_INTEGER:PROC
EXTRN	_ASN1_INTEGER_to_BN:PROC
EXTRN	_ASN1_item_d2i_bio:PROC
EXTRN	_NETSCAPE_X509_free:PROC
EXTRN	_NETSCAPE_X509_it:PROC
EXTRN	_OBJ_txt2obj:PROC
EXTRN	_OBJ_txt2nid:PROC
EXTRN	_OBJ_create:PROC
EXTRN	_EVP_PKEY_set1_RSA:PROC
EXTRN	_EVP_PKEY_new:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_PKEY_CTX_ctrl_str:PROC
EXTRN	_RSA_free:PROC
EXTRN	_d2i_RSA_NET:PROC
EXTRN	_X509_STORE_new:PROC
EXTRN	_X509_STORE_free:PROC
EXTRN	_X509_STORE_set_lookup_crls_cb:PROC
EXTRN	_X509_STORE_add_lookup:PROC
EXTRN	_X509_LOOKUP_hash_dir:PROC
EXTRN	_X509_LOOKUP_file:PROC
EXTRN	_X509_LOOKUP_ctrl:PROC
EXTRN	_X509_STORE_CTX_get_current_cert:PROC
EXTRN	_X509_STORE_CTX_get0_policy_tree:PROC
EXTRN	_X509_STORE_CTX_get_explicit_policy:PROC
EXTRN	_X509_VERIFY_PARAM_new:PROC
EXTRN	_X509_VERIFY_PARAM_free:PROC
EXTRN	_X509_VERIFY_PARAM_set_flags:PROC
EXTRN	_X509_VERIFY_PARAM_set_purpose:PROC
EXTRN	_X509_VERIFY_PARAM_set_depth:PROC
EXTRN	_X509_VERIFY_PARAM_set_time:PROC
EXTRN	_X509_VERIFY_PARAM_add0_policy:PROC
EXTRN	_X509_VERIFY_PARAM_set1_host:PROC
EXTRN	_X509_VERIFY_PARAM_set1_email:PROC
EXTRN	_X509_VERIFY_PARAM_set1_ip_asc:PROC
EXTRN	_X509_policy_tree_get0_policies:PROC
EXTRN	_X509_policy_tree_get0_user_policies:PROC
EXTRN	_X509_http_nbio:PROC
EXTRN	_X509_CRL_http_nbio:PROC
EXTRN	_d2i_X509_bio:PROC
EXTRN	_d2i_X509_CRL_bio:PROC
EXTRN	_d2i_RSAPublicKey_bio:PROC
EXTRN	_d2i_PrivateKey_bio:PROC
EXTRN	_d2i_PUBKEY_bio:PROC
EXTRN	_X509_get_default_cert_area:PROC
EXTRN	_X509_EXTENSION_free:PROC
EXTRN	_X509_NAME_new:PROC
EXTRN	_X509_NAME_free:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_CRL_free:PROC
EXTRN	_X509_INFO_free:PROC
EXTRN	_X509_NAME_oneline:PROC
EXTRN	_X509_get_issuer_name:PROC
EXTRN	_X509_get_subject_name:PROC
EXTRN	_X509_REQ_get_extensions:PROC
EXTRN	_X509_NAME_print_ex:PROC
EXTRN	_X509_NAME_add_entry_by_NID:PROC
EXTRN	_X509_get_ext_by_OBJ:PROC
EXTRN	_X509_get_ext:PROC
EXTRN	_X509_delete_ext:PROC
EXTRN	_X509_add_ext:PROC
EXTRN	_X509_get_ext_d2i:PROC
EXTRN	_X509_EXTENSION_get_object:PROC
EXTRN	_NCONF_new:PROC
EXTRN	_NCONF_free:PROC
EXTRN	_NCONF_load:PROC
EXTRN	_NCONF_get_section:PROC
EXTRN	_NCONF_get_string:PROC
EXTRN	_CONF_modules_load:PROC
EXTRN	_OPENSSL_load_builtin_modules:PROC
EXTRN	_GENERAL_NAME_get0_value:PROC
EXTRN	_DIST_POINT_free:PROC
EXTRN	_X509V3_conf_free:PROC
EXTRN	_X509V3_parse_list:PROC
EXTRN	_X509_PURPOSE_get0:PROC
EXTRN	_X509_PURPOSE_get_by_sname:PROC
EXTRN	_X509_PURPOSE_get_id:PROC
EXTRN	_X509_check_host:PROC
EXTRN	_X509_check_email:PROC
EXTRN	_X509_check_ip_asc:PROC
EXTRN	_X509_POLICY_NODE_print:PROC
EXTRN	_PEM_X509_INFO_read_bio:PROC
EXTRN	_PEM_read_bio_X509_AUX:PROC
EXTRN	_PEM_read_bio_X509_CRL:PROC
EXTRN	_PEM_read_bio_RSAPublicKey:PROC
EXTRN	_PEM_read_bio_PrivateKey:PROC
EXTRN	_PEM_read_bio_PUBKEY:PROC
EXTRN	_b2i_PrivateKey_bio:PROC
EXTRN	_b2i_PublicKey_bio:PROC
EXTRN	_b2i_PVK_bio:PROC
EXTRN	_PKCS12_verify_mac:PROC
EXTRN	_PKCS12_free:PROC
EXTRN	_PKCS12_parse:PROC
EXTRN	_d2i_PKCS12_bio:PROC
EXTRN	_UI_new_method:PROC
EXTRN	_UI_free:PROC
EXTRN	_UI_add_input_string:PROC
EXTRN	_UI_add_verify_string:PROC
EXTRN	_UI_construct_prompt:PROC
EXTRN	_UI_get0_user_data:PROC
EXTRN	_UI_process:PROC
EXTRN	_UI_ctrl:PROC
EXTRN	_UI_OpenSSL:PROC
EXTRN	_UI_create_method:PROC
EXTRN	_UI_destroy_method:PROC
EXTRN	_UI_method_set_opener:PROC
EXTRN	_UI_method_set_writer:PROC
EXTRN	_UI_method_set_reader:PROC
EXTRN	_UI_method_set_closer:PROC
EXTRN	_UI_method_get_opener:PROC
EXTRN	_UI_method_get_writer:PROC
EXTRN	_UI_method_get_reader:PROC
EXTRN	_UI_method_get_closer:PROC
EXTRN	_UI_get_string_type:PROC
EXTRN	_UI_get_input_flags:PROC
EXTRN	_UI_set_result:PROC
EXTRN	__imp__GetStdHandle@4:PROC
EXTRN	__imp__DeleteFileA@4:PROC
EXTRN	__imp__FindClose@4:PROC
EXTRN	__imp__FindFirstFileA@8:PROC
EXTRN	__imp__ReadFile@20:PROC
EXTRN	__imp__WriteFile@20:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetProcessTimes@20:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__OpenProcess@12:PROC
EXTRN	__imp__GetSystemTime@4:PROC
EXTRN	__imp__MoveFileA@8:PROC
EXTRN	__imp__SystemTimeToFileTime@8:PROC
EXTRN	_ENGINE_by_id:PROC
EXTRN	_ENGINE_register_all_complete:PROC
EXTRN	_ENGINE_ctrl:PROC
EXTRN	_ENGINE_ctrl_cmd:PROC
EXTRN	_ENGINE_ctrl_cmd_string:PROC
EXTRN	_ENGINE_free:PROC
EXTRN	_ENGINE_get_id:PROC
EXTRN	_ENGINE_load_private_key:PROC
EXTRN	_ENGINE_load_public_key:PROC
EXTRN	_ENGINE_set_default:PROC
EXTRN	_TXT_DB_read:PROC
EXTRN	_TXT_DB_write:PROC
EXTRN	_TXT_DB_create_index:PROC
EXTRN	_TXT_DB_free:PROC
EXTRN	_OCSP_REQ_CTX_new:PROC
EXTRN	_OCSP_REQ_CTX_free:PROC
EXTRN	_OCSP_REQ_CTX_http:PROC
EXTRN	_OCSP_REQ_CTX_add1_header:PROC
EXTRN	_OCSP_parse_url:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	__ltod3:PROC
EXTRN	_memcpy:PROC
EXTRN	_config:DWORD
EXTRN	_bio_err:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
?tmstart@?1??app_tminterval@@9@9 DQ 01H DUP (?)		; `app_tminterval'::`2'::tmstart
_BSS	ENDS
;	COMDAT __real@3e7ad7f29abcaf48
CONST	SEGMENT
__real@3e7ad7f29abcaf48 DQ 03e7ad7f29abcaf48r	; 1e-07
CONST	ENDS
;	COMDAT ??_C@_0DN@IIJMFLNE@To?5get?5meaningful?5results?0?5run?5t@
CONST	SEGMENT
??_C@_0DN@IIJMFLNE@To?5get?5meaningful?5results?0?5run?5t@ DB 'To get mea'
	DB	'ningful results, run this program on idle system.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FGAOOBMN@http?3?1?1?$AA@
CONST	SEGMENT
??_C@_07FGAOOBMN@http?3?1?1?$AA@ DB 'http://', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BEKABJAC@IP?5?$CFs?5does?$CFs?5match?5certificate?6?$AA@
CONST	SEGMENT
??_C@_0CA@BEKABJAC@IP?5?$CFs?5does?$CFs?5match?5certificate?6?$AA@ DB 'IP'
	DB	' %s does%s match certificate', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CDKJLNLJ@Email?5?$CFs?5does?$CFs?5match?5certificat@
CONST	SEGMENT
??_C@_0CD@CDKJLNLJ@Email?5?$CFs?5does?$CFs?5match?5certificat@ DB 'Email '
	DB	'%s does%s match certificate', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BEAMIHCH@Hostname?5?$CFs?5does?$CFs?5match?5certifi@
CONST	SEGMENT
??_C@_0CG@BEAMIHCH@Hostname?5?$CFs?5does?$CFs?5match?5certifi@ DB 'Hostna'
	DB	'me %s does%s match certificate', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGMGFKEF@?5NOT?$AA@
CONST	SEGMENT
??_C@_04CGMGFKEF@?5NOT?$AA@ DB ' NOT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04ODLBFFJE@User?$AA@
CONST	SEGMENT
??_C@_04ODLBFFJE@User?$AA@ DB 'User', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NGOBFEPP@Authority?$AA@
CONST	SEGMENT
??_C@_09NGOBFEPP@Authority?$AA@ DB 'Authority', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IBNHIEPH@Require?5explicit?5Policy?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@IBNHIEPH@Require?5explicit?5Policy?3?5?$CFs?6?$AA@ DB 'Require '
	DB	'explicit Policy: %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MKDOIIA@False?$AA@
CONST	SEGMENT
??_C@_05MKDOIIA@False?$AA@ DB 'False', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HPMIDMKH@True?$AA@
CONST	SEGMENT
??_C@_04HPMIDMKH@True?$AA@ DB 'True', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMBKKAKN@?5?$DMempty?$DO?6?$AA@
CONST	SEGMENT
??_C@_09CMBKKAKN@?5?$DMempty?$DO?6?$AA@ DB ' <empty>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENJCIODO@?$CFs?5Policies?3?$AA@
CONST	SEGMENT
??_C@_0N@ENJCIODO@?$CFs?5Policies?3?$AA@ DB '%s Policies:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PNNLIPKE@?9no_alt_chains?$AA@
CONST	SEGMENT
??_C@_0P@PNNLIPKE@?9no_alt_chains?$AA@ DB '-no_alt_chains', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MPJEMPGB@?9partial_chain?$AA@
CONST	SEGMENT
??_C@_0P@MPJEMPGB@?9partial_chain?$AA@ DB '-partial_chain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CMOLEKI@?9suiteB_192?$AA@
CONST	SEGMENT
??_C@_0M@CMOLEKI@?9suiteB_192?$AA@ DB '-suiteB_192', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PEHELDMD@?9suiteB_128?$AA@
CONST	SEGMENT
??_C@_0M@PEHELDMD@?9suiteB_128?$AA@ DB '-suiteB_128', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CJLNDP@?9suiteB_128_only?$AA@
CONST	SEGMENT
??_C@_0BB@CJLNDP@?9suiteB_128_only?$AA@ DB '-suiteB_128_only', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FAJCKKIM@?9trusted_first?$AA@
CONST	SEGMENT
??_C@_0P@FAJCKKIM@?9trusted_first?$AA@ DB '-trusted_first', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HOJLLGLJ@?9check_ss_sig?$AA@
CONST	SEGMENT
??_C@_0O@HOJLLGLJ@?9check_ss_sig?$AA@ DB '-check_ss_sig', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HLMNILI@?9policy_print?$AA@
CONST	SEGMENT
??_C@_0O@HLMNILI@?9policy_print?$AA@ DB '-policy_print', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NIBFNGJH@?9use_deltas?$AA@
CONST	SEGMENT
??_C@_0M@NIBFNGJH@?9use_deltas?$AA@ DB '-use_deltas', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JLHDLMKC@?9extended_crl?$AA@
CONST	SEGMENT
??_C@_0O@JLHDLMKC@?9extended_crl?$AA@ DB '-extended_crl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JAAINALF@?9x509_strict?$AA@
CONST	SEGMENT
??_C@_0N@JAAINALF@?9x509_strict?$AA@ DB '-x509_strict', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IIAGEECI@?9inhibit_map?$AA@
CONST	SEGMENT
??_C@_0N@IIAGEECI@?9inhibit_map?$AA@ DB '-inhibit_map', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BIEOAHOE@?9inhibit_any?$AA@
CONST	SEGMENT
??_C@_0N@BIEOAHOE@?9inhibit_any?$AA@ DB '-inhibit_any', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DFNKALPO@?9explicit_policy?$AA@
CONST	SEGMENT
??_C@_0BB@DFNKALPO@?9explicit_policy?$AA@ DB '-explicit_policy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CHPKAFNL@?9policy_check?$AA@
CONST	SEGMENT
??_C@_0O@CHPKAFNL@?9policy_check?$AA@ DB '-policy_check', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JMLMJOLO@?9crl_check_all?$AA@
CONST	SEGMENT
??_C@_0P@JMLMJOLO@?9crl_check_all?$AA@ DB '-crl_check_all', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IIGOHFBF@?9crl_check?$AA@
CONST	SEGMENT
??_C@_0L@IIGOHFBF@?9crl_check?$AA@ DB '-crl_check', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KGEGMNHK@?9issuer_checks?$AA@
CONST	SEGMENT
??_C@_0P@KGEGMNHK@?9issuer_checks?$AA@ DB '-issuer_checks', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MAMKNOBM@?9ignore_critical?$AA@
CONST	SEGMENT
??_C@_0BB@MAMKNOBM@?9ignore_critical?$AA@ DB '-ignore_critical', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BFLANKHI@?9verify_ip?$AA@
CONST	SEGMENT
??_C@_0L@BFLANKHI@?9verify_ip?$AA@ DB '-verify_ip', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IDCHAMO@?9verify_email?$AA@
CONST	SEGMENT
??_C@_0O@IDCHAMO@?9verify_email?$AA@ DB '-verify_email', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CBGFOLCL@?9verify_hostname?$AA@
CONST	SEGMENT
??_C@_0BB@CBGFOLCL@?9verify_hostname?$AA@ DB '-verify_hostname', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BLOMJHGB@Error?5parsing?5timestamp?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BM@BLOMJHGB@Error?5parsing?5timestamp?5?$CFs?6?$AA@ DB 'Error pars'
	DB	'ing timestamp %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LMKFJNEF@?$CFli?$AA@
CONST	SEGMENT
??_C@_03LMKFJNEF@?$CFli?$AA@ DB '%li', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FHCFGGIA@?9attime?$AA@
CONST	SEGMENT
??_C@_07FHCFGGIA@?9attime?$AA@ DB '-attime', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PLGBDNLB@invalid?5depth?6?$AA@
CONST	SEGMENT
??_C@_0P@PLGBDNLB@invalid?5depth?6?$AA@ DB 'invalid depth', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GLCJCNHH@?9verify_depth?$AA@
CONST	SEGMENT
??_C@_0O@GLCJCNHH@?9verify_depth?$AA@ DB '-verify_depth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MLBGEMEI@unrecognized?5purpose?6?$AA@
CONST	SEGMENT
??_C@_0BG@MLBGEMEI@unrecognized?5purpose?6?$AA@ DB 'unrecognized purpose', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08OKAIACAC@?9purpose?$AA@
CONST	SEGMENT
??_C@_08OKAIACAC@?9purpose?$AA@ DB '-purpose', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OKHBOGOJ@Invalid?5Policy?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BF@OKHBOGOJ@Invalid?5Policy?5?$CC?$CFs?$CC?6?$AA@ DB 'Invalid Poli'
	DB	'cy "%s"', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07EDOEKPLG@?9policy?$AA@
CONST	SEGMENT
??_C@_07EDOEKPLG@?9policy?$AA@ DB '-policy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@IJPKHMNK@No?5value?5provided?5for?5Subject?5At@
CONST	SEGMENT
??_C@_0DF@IJPKHMNK@No?5value?5provided?5for?5Subject?5At@ DB 'No value pr'
	DB	'ovided for Subject Attribute %s, skipped', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@DIKEDNCG@Subject?5Attribute?5?$CFs?5has?5no?5know@
CONST	SEGMENT
??_C@_0DA@DIKEDNCG@Subject?5Attribute?5?$CFs?5has?5no?5know@ DB 'Subject '
	DB	'Attribute %s has no known NID, skipped', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@LIPKONBC@end?5of?5string?5encountered?5while?5@
CONST	SEGMENT
??_C@_0EN@LIPKONBC@end?5of?5string?5encountered?5while?5@ DB 'end of stri'
	DB	'ng encountered while processing type of subject name element '
	DB	'#%d', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@EOHKOJGN@escape?5character?5at?5end?5of?5strin@
CONST	SEGMENT
??_C@_0CD@EOHKOJGN@escape?5character?5at?5end?5of?5strin@ DB 'escape char'
	DB	'acter at end of string', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@MFKPEIBE@Subject?5does?5not?5start?5with?5?8?1?8?4@
CONST	SEGMENT
??_C@_0CC@MFKPEIBE@Subject?5does?5not?5start?5with?5?8?1?8?4@ DB 'Subject'
	DB	' does not start with ''/''.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NPENBAOL@malloc?5error?6?$AA@
CONST	SEGMENT
??_C@_0O@NPENBAOL@malloc?5error?6?$AA@ DB 'malloc error', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HNOOHBO@unique_subject?5?$DN?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BF@HNOOHBO@unique_subject?5?$DN?5?$CFs?6?$AA@ DB 'unique_subject ='
	DB	' %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02KAJCLHKP@no?$AA@
CONST	SEGMENT
??_C@_02KAJCLHKP@no?$AA@ DB 'no', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ICICOMAL@yes?$AA@
CONST	SEGMENT
??_C@_03ICICOMAL@yes?$AA@ DB 'yes', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FJEANEHK@?$CFs?4attr?4?$CFs?$AA@
CONST	SEGMENT
??_C@_0L@FJEANEHK@?$CFs?4attr?4?$CFs?$AA@ DB '%s.attr.%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@LAHEODBL@error?5creating?5name?5index?3?$CI?$CFld?0?$CF@
CONST	SEGMENT
??_C@_0CJ@LAHEODBL@error?5creating?5name?5index?3?$CI?$CFld?0?$CF@ DB 'er'
	DB	'ror creating name index:(%ld,%ld,%ld)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FMBAALNJ@error?5creating?5serial?5number?5ind@
CONST	SEGMENT
??_C@_0DC@FMBAALNJ@error?5creating?5serial?5number?5ind@ DB 'error creati'
	DB	'ng serial number index:(%ld,%ld,%ld)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HOGDIGGB@unique_subject?$AA@
CONST	SEGMENT
??_C@_0P@HOGDIGGB@unique_subject?$AA@ DB 'unique_subject', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@KHNEBDJO@error?5on?5line?5?$CFld?5of?5db?5attribut@
CONST	SEGMENT
??_C@_0CN@KHNEBDJO@error?5on?5line?5?$CFld?5of?5db?5attribut@ DB 'error o'
	DB	'n line %ld of db attribute file ''%s''', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MFJDFAJK@?$CFs?4attr?$AA@
CONST	SEGMENT
??_C@_07MFJDFAJK@?$CFs?4attr?$AA@ DB '%s.attr', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BIGLPGDL@unable?5to?5open?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BF@BIGLPGDL@unable?5to?5open?5?8?$CFs?8?6?$AA@ DB 'unable to open '
	DB	'''%s''', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06CEHAOENB@reason?$AA@
CONST	SEGMENT
??_C@_06CEHAOENB@reason?$AA@ DB 'reason', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PJHGPAJJ@unable?5to?5rename?5?$CFs?5to?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BL@PJHGPAJJ@unable?5to?5rename?5?$CFs?5to?5?$CFs?6?$AA@ DB 'unable'
	DB	' to rename %s to %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OGFINJBE@error?5converting?5serial?5to?5ASN?41@
CONST	SEGMENT
??_C@_0CJ@OGFINJBE@error?5converting?5serial?5to?5ASN?41@ DB 'error conve'
	DB	'rting serial to ASN.1 format', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
CONST	SEGMENT
??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@ DB '%s.%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PGHNBIGG@file?5name?5too?5long?6?$AA@
CONST	SEGMENT
??_C@_0BE@PGHNBIGG@file?5name?5too?5long?6?$AA@ DB 'file name too long', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KKKLPGOP@error?5converting?5number?5from?5bin@
CONST	SEGMENT
??_C@_0CM@KKKLPGOP@error?5converting?5number?5from?5bin@ DB 'error conver'
	DB	'ting number from bin to BIGNUM', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IBMKHAAI@unable?5to?5load?5number?5from?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BP@IBMKHAAI@unable?5to?5load?5number?5from?5?$CFs?6?$AA@ DB 'unabl'
	DB	'e to load number from %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@
CONST	SEGMENT
??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@ DB 'openssl.cnf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1?$AA@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1?$AA@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IPMGKJPN@Error?5configuring?5OpenSSL?6?$AA@
CONST	SEGMENT
??_C@_0BL@IPMGKJPN@Error?5configuring?5OpenSSL?6?$AA@ DB 'Error configuri'
	DB	'ng OpenSSL', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CPAKBHCD@engine?5?$CC?$CFs?$CC?5set?4?6?$AA@
CONST	SEGMENT
??_C@_0BC@CPAKBHCD@engine?5?$CC?$CFs?$CC?5set?4?6?$AA@ DB 'engine "%s" se'
	DB	't.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OBPKDCDO@can?8t?5use?5that?5engine?6?$AA@
CONST	SEGMENT
??_C@_0BH@OBPKDCDO@can?8t?5use?5that?5engine?6?$AA@ DB 'can''t use that e'
	DB	'ngine', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HNMPJJDL@SET_USER_INTERFACE?$AA@
CONST	SEGMENT
??_C@_0BD@HNMPJJDL@SET_USER_INTERFACE?$AA@ DB 'SET_USER_INTERFACE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FDAJFBF@invalid?5engine?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BF@FDAJFBF@invalid?5engine?5?$CC?$CFs?$CC?6?$AA@ DB 'invalid engin'
	DB	'e "%s"', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GLIGNJMA@enabling?5auto?5ENGINE?5support?6?$AA@
CONST	SEGMENT
??_C@_0BO@GLIGNJMA@enabling?5auto?5ENGINE?5support?6?$AA@ DB 'enabling au'
	DB	'to ENGINE support', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HAPDLBFF@auto?$AA@
CONST	SEGMENT
??_C@_04HAPDLBFF@auto?$AA@ DB 'auto', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04ICOEJIDH@LOAD?$AA@
CONST	SEGMENT
??_C@_04ICOEJIDH@LOAD?$AA@ DB 'LOAD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EGEBNIPD@SO_PATH?$AA@
CONST	SEGMENT
??_C@_07EGEBNIPD@SO_PATH?$AA@ DB 'SO_PATH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OBLKMMON@dynamic?$AA@
CONST	SEGMENT
??_C@_07OBLKMMON@dynamic?$AA@ DB 'dynamic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@ DB 'Error loadi'
	DB	'ng directory %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@ DB 'Error loading f'
	DB	'ile %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07ENLILCDE@copyall?$AA@
CONST	SEGMENT
??_C@_07ENLILCDE@copyall?$AA@ DB 'copyall', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04COAGEIMF@copy?$AA@
CONST	SEGMENT
??_C@_04COAGEIMF@copy?$AA@ DB 'copy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGFJFPFD@none?$AA@
CONST	SEGMENT
??_C@_04CGFJFPFD@none?$AA@ DB 'none', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DKBILDMD@CRLs?$AA@
CONST	SEGMENT
??_C@_04DKBILDMD@CRLs?$AA@ DB 'CRLs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NGKEHKOM@certificates?$AA@
CONST	SEGMENT
??_C@_0N@NGKEHKOM@certificates?$AA@ DB 'certificates', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NPKILBBI@Error?5reading?5?$CFs?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BE@NPKILBBI@Error?5reading?5?$CFs?5?$CFs?$AA@ DB 'Error reading %s'
	DB	' %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DHEMONEO@unable?5to?5load?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@DHEMONEO@unable?5to?5load?5?$CFs?6?$AA@ DB 'unable to load %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DHFLKNAM@bad?5input?5format?5specified?5for?5k@
CONST	SEGMENT
??_C@_0CJ@DHFLKNAM@bad?5input?5format?5specified?5for?5k@ DB 'bad input f'
	DB	'ormat specified for key file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OODBDEPN@cannot?5load?5?$CFs?5from?5engine?6?$AA@
CONST	SEGMENT
??_C@_0BM@OODBDEPN@cannot?5load?5?$CFs?5from?5engine?6?$AA@ DB 'cannot lo'
	DB	'ad %s from engine', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MCNMEPFL@no?5engine?5specified?6?$AA@
CONST	SEGMENT
??_C@_0BF@MCNMEPFL@no?5engine?5specified?6?$AA@ DB 'no engine specified', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OLBFGCBD@no?5keyfile?5specified?6?$AA@
CONST	SEGMENT
??_C@_0BG@OLBFGCBD@no?5keyfile?5specified?6?$AA@ DB 'no keyfile specified'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BBFHHDDE@unable?5to?5load?5CRL?6?$AA@
CONST	SEGMENT
??_C@_0BE@BBFHHDDE@unable?5to?5load?5CRL?6?$AA@ DB 'unable to load CRL', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@DJFFGPOF@bad?5input?5format?5specified?5for?5i@
CONST	SEGMENT
??_C@_0CK@DJFFGPOF@bad?5input?5format?5specified?5for?5i@ DB 'bad input f'
	DB	'ormat specified for input crl', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FDKJDCHF@unable?5to?5load?5certificate?6?$AA@
CONST	SEGMENT
??_C@_0BM@FDKJDCHF@unable?5to?5load?5certificate?6?$AA@ DB 'unable to loa'
	DB	'd certificate', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HFNMCDK@bad?5input?5format?5specified?5for?5?$CF@
CONST	SEGMENT
??_C@_0CD@HFNMCDK@bad?5input?5format?5specified?5for?5?$CF@ DB 'bad input'
	DB	' format specified for %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BGMEBKBE@Error?5reading?5header?5on?5certific@
CONST	SEGMENT
??_C@_0CF@BGMEBKBE@Error?5reading?5header?5on?5certific@ DB 'Error readin'
	DB	'g header on certificate', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JJKPOFNI@Error?5opening?5?$CFs?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BF@JJKPOFNI@Error?5opening?5?$CFs?5?$CFs?6?$AA@ DB 'Error opening '
	DB	'%s %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FAFHEINM@Error?5loading?5?$CFs?5from?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BK@FAFHEINM@Error?5loading?5?$CFs?5from?5?$CFs?6?$AA@ DB 'Error lo'
	DB	'ading %s from %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GEOOCNOH@CRL?$AA@
CONST	SEGMENT
??_C@_03GEOOCNOH@CRL?$AA@ DB 'CRL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LLNFCECG@certificate?$AA@
CONST	SEGMENT
??_C@_0M@LLNFCECG@certificate?$AA@ DB 'certificate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CPPPJGME@Host?$AA@
CONST	SEGMENT
??_C@_04CPPPJGME@Host?$AA@ DB 'Host', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03HAPOJHBM@GET?$AA@
CONST	SEGMENT
??_C@_03HAPOJHBM@GET?$AA@ DB 'GET', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LDHEOEBK@https?5not?5supported?6?$AA@
CONST	SEGMENT
??_C@_0BF@LDHEOEBK@https?5not?5supported?6?$AA@ DB 'https not supported', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@EMMPDJCK@Mac?5verify?5error?5?$CIwrong?5password@
CONST	SEGMENT
??_C@_0DK@EMMPDJCK@Mac?5verify?5error?5?$CIwrong?5password@ DB 'Mac verif'
	DB	'y error (wrong password?) in PKCS12 file for %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DKCLIBKC@Passpharse?5callback?5error?5for?5?$CFs@
CONST	SEGMENT
??_C@_0CC@DKCLIBKC@Passpharse?5callback?5error?5for?5?$CFs@ DB 'Passphars'
	DB	'e callback error for %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PEGFFLPF@Error?5loading?5PKCS12?5file?5for?5?$CFs@
CONST	SEGMENT
??_C@_0CC@PEGFFLPF@Error?5loading?5PKCS12?5file?5for?5?$CFs@ DB 'Error lo'
	DB	'ading PKCS12 file for %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DCFHMIBP@problem?5creating?5object?5?$CFs?$DN?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BP@DCFHMIBP@problem?5creating?5object?5?$CFs?$DN?$CFs?6?$AA@ DB 'p'
	DB	'roblem creating object %s=%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@HDAKCCMK@problem?5loading?5oid?5section?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0CA@HDAKCCMK@problem?5loading?5oid?5section?5?$CFs?6?$AA@ DB 'probl'
	DB	'em loading oid section %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCKPEIO@oid_section?$AA@
CONST	SEGMENT
??_C@_0M@HCKPEIO@oid_section?$AA@ DB 'oid_section', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KJOAPACB@Error?5reading?5password?5from?5BIO?6@
CONST	SEGMENT
??_C@_0CB@KJOAPACB@Error?5reading?5password?5from?5BIO?6@ DB 'Error readi'
	DB	'ng password from BIO', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FEIKIBOM@Invalid?5password?5argument?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0CA@FEIKIBOM@Invalid?5password?5argument?5?$CC?$CFs?$CC?6?$AA@ DB 'I'
	DB	'nvalid password argument "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EEFMFEJC@Can?8t?5open?5BIO?5for?5stdin?6?$AA@
CONST	SEGMENT
??_C@_0BK@EEFMFEJC@Can?8t?5open?5BIO?5for?5stdin?6?$AA@ DB 'Can''t open B'
	DB	'IO for stdin', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MHOFLBOO@stdin?$AA@
CONST	SEGMENT
??_C@_05MHOFLBOO@stdin?$AA@ DB 'stdin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DGGEJBEC@Can?8t?5open?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BE@DGGEJBEC@Can?8t?5open?5file?5?$CFs?6?$AA@ DB 'Can''t open file '
	DB	'%s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BOPHDICO@file?3?$AA@
CONST	SEGMENT
??_C@_05BOPHDICO@file?3?$AA@ DB 'file:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@NKEIKLNB@Can?8t?5read?5environment?5variable?5@
CONST	SEGMENT
??_C@_0CE@NKEIKLNB@Can?8t?5read?5environment?5variable?5@ DB 'Can''t read'
	DB	' environment variable %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MGCDLKHE@env?3?$AA@
CONST	SEGMENT
??_C@_04MGCDLKHE@env?3?$AA@ DB 'env:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OLNJAKGC@pass?3?$AA@
CONST	SEGMENT
??_C@_05OLNJAKGC@pass?3?$AA@ DB 'pass:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JELMDBBD@aborted?$CB?6?$AA@
CONST	SEGMENT
??_C@_09JELMDBBD@aborted?$CB?6?$AA@ DB 'aborted!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HNCPHOCJ@User?5interface?5error?6?$AA@
CONST	SEGMENT
??_C@_0BG@HNCPHOCJ@User?5interface?5error?6?$AA@ DB 'User interface error'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@ DB 'Out of memory', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FKGGGFHP@pass?5phrase?$AA@
CONST	SEGMENT
??_C@_0M@FKGGGFHP@pass?5phrase?$AA@ DB 'pass phrase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HINDFPHK@OpenSSL?5application?5user?5interfa@
CONST	SEGMENT
??_C@_0CD@HINDFPHK@OpenSSL?5application?5user?5interfa@ DB 'OpenSSL appli'
	DB	'cation user interface', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08BDBNPDII@?6issuer?$DN?$AA@
CONST	SEGMENT
??_C@_08BDBNPDII@?6issuer?$DN?$AA@ DB 0aH, 'issuer=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MAHPNCKH@subject?$DN?$AA@
CONST	SEGMENT
??_C@_08MAHPNCKH@subject?$DN?$AA@ DB 'subject=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
CONST	SEGMENT
??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@ DB '.\apps\apps.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03HNFNFLKJ@p12?$AA@
CONST	SEGMENT
??_C@_03HNFNFLKJ@p12?$AA@ DB 'p12', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NNGPPEJH@P12?$AA@
CONST	SEGMENT
??_C@_03NNGPPEJH@P12?$AA@ DB 'P12', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06IDAJNGAK@pkcs12?$AA@
CONST	SEGMENT
??_C@_06IDAJNGAK@pkcs12?$AA@ DB 'pkcs12', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CKOLGKJK@PKCS12?$AA@
CONST	SEGMENT
??_C@_06CKOLGKJK@PKCS12?$AA@ DB 'PKCS12', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _crls_http_cb
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_nm$ = 12						; size = 4
_crls_http_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2860
	push	ebx
	push	ebp
	push	esi
; Line 2865
	push	DWORD PTR _ctx$[esp+8]
	call	_X509_STORE_CTX_get_current_cert
; Line 2866
	push	0
	push	0
	mov	ebx, eax
	push	103					; 00000067H
	push	ebx
	call	_X509_get_ext_d2i
	mov	esi, eax
; Line 2867
	push	esi
	call	_load_crl_crldp
; Line 2868
	push	OFFSET _DIST_POINT_free
	push	esi
	mov	ebp, eax
	call	_sk_pop_free
	add	esp, 32					; 00000020H
; Line 2869
	test	ebp, ebp
	jne	SHORT $LN2@crls_http_
; Line 2870
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 2880
	ret	0
$LN2@crls_http_:
	push	edi
; Line 2871
	call	_sk_new_null
	mov	edi, eax
; Line 2872
	push	ebp
	push	edi
	call	_sk_push
; Line 2874
	push	0
	push	0
	push	857					; 00000359H
	push	ebx
	call	_X509_get_ext_d2i
	mov	esi, eax
; Line 2875
	push	esi
	call	_load_crl_crldp
; Line 2876
	push	OFFSET _DIST_POINT_free
	push	esi
	mov	ebx, eax
	call	_sk_pop_free
	add	esp, 36					; 00000024H
; Line 2877
	test	ebx, ebx
	je	SHORT $LN3@crls_http_
; Line 2878
	push	ebx
	push	edi
	call	_sk_push
	add	esp, 8
$LN3@crls_http_:
; Line 2879
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2880
	ret	0
_crls_http_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_crl_crldp
_TEXT	SEGMENT
_x$1 = -4						; size = 4
_crldp$ = 8						; size = 4
_load_crl_crldp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2841
	mov	eax, 4
	call	__chkstk
	push	esi
	push	edi
; Line 2844
	mov	edi, DWORD PTR _crldp$[esp+8]
	xor	esi, esi
	push	edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@load_crl_c
	npad	1
$LL4@load_crl_c:
; Line 2845
	push	esi
	push	edi
	call	_sk_value
; Line 2846
	push	eax
	call	_get_dp_url
	add	esp, 12					; 0000000cH
; Line 2847
	test	eax, eax
	jne	SHORT $LN20@load_crl_c
; Line 2844
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@load_crl_c
$LN3@load_crl_c:
	pop	edi
; Line 2850
	xor	eax, eax
	pop	esi
; Line 2851
	pop	ecx
	ret	0
$LN20@load_crl_c:
; Line 918
	lea	ecx, DWORD PTR _x$1[esp+12]
	mov	DWORD PTR _x$1[esp+12], 0
	push	ecx
	push	0
	push	DWORD PTR _bio_err
	push	eax
	call	_load_cert_crl_http
	add	esp, 16					; 00000010H
$end$25:
; Line 2848
	mov	eax, DWORD PTR _x$1[esp+12]
	pop	edi
	pop	esi
; Line 2851
	pop	ecx
	ret	0
_load_crl_crldp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_dp_url
_TEXT	SEGMENT
_gtype$ = 8						; size = 4
_dp$ = 8						; size = 4
_get_dp_url PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2820
	mov	eax, DWORD PTR _dp$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR [eax]
	test	ebx, ebx
	je	$LN6@get_dp_url
	cmp	DWORD PTR [ebx], 0
	jne	$LN6@get_dp_url
; Line 2822
	mov	ebx, DWORD PTR [ebx+4]
	push	ebp
	push	esi
	push	edi
; Line 2823
	push	ebx
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN15@get_dp_url
	mov	ebp, DWORD PTR __imp__strncmp
$LL4@get_dp_url:
; Line 2824
	push	esi
	push	ebx
	call	_sk_value
; Line 2825
	lea	ecx, DWORD PTR _gtype$[esp+20]
	push	ecx
	push	eax
	call	_GENERAL_NAME_get0_value
	add	esp, 16					; 00000010H
	mov	edi, eax
; Line 2826
	cmp	DWORD PTR _gtype$[esp+12], 6
	jne	SHORT $LN2@get_dp_url
	push	edi
	call	_ASN1_STRING_length
	add	esp, 4
	cmp	eax, 6
	jle	SHORT $LN2@get_dp_url
; Line 2827
	push	edi
	call	_ASN1_STRING_data
; Line 2828
	push	7
	mov	edi, eax
	push	OFFSET ??_C@_07FGAOOBMN@http?3?1?1?$AA@
	push	edi
	call	ebp
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN11@get_dp_url
$LN2@get_dp_url:
; Line 2823
	push	ebx
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@get_dp_url
$LN15@get_dp_url:
	pop	edi
	pop	esi
	pop	ebp
; Line 2832
	xor	eax, eax
	pop	ebx
; Line 2833
	ret	0
$LN11@get_dp_url:
; Line 2829
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2833
	ret	0
$LN6@get_dp_url:
; Line 2821
	xor	eax, eax
	pop	ebx
; Line 2833
	ret	0
_get_dp_url ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _nodes_print
_TEXT	SEGMENT
_out$ = 8						; size = 4
_name$ = 12						; size = 4
_nodes$ = 16						; size = 4
_nodes_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2485
	push	ebx
; Line 2488
	mov	ebx, DWORD PTR _out$[esp]
	push	edi
	push	DWORD PTR _name$[esp+4]
	push	OFFSET ??_C@_0N@ENJCIODO@?$CFs?5Policies?3?$AA@
	push	ebx
	call	_BIO_printf
; Line 2489
	mov	edi, DWORD PTR _nodes$[esp+16]
	add	esp, 12					; 0000000cH
	test	edi, edi
	je	SHORT $LN5@nodes_prin
; Line 2490
	push	esi
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	ebx
	call	_BIO_puts
; Line 2491
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN12@nodes_prin
	npad	5
$LL4@nodes_prin:
; Line 2492
	push	esi
	push	edi
	call	_sk_value
; Line 2493
	push	2
	push	eax
	push	ebx
	call	_X509_POLICY_NODE_print
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 24					; 00000018H
	cmp	esi, eax
	jl	SHORT $LL4@nodes_prin
$LN12@nodes_prin:
	pop	esi
	pop	edi
	pop	ebx
; Line 2497
	ret	0
$LN5@nodes_prin:
; Line 2496
	push	OFFSET ??_C@_09CMBKKAKN@?5?$DMempty?$DO?6?$AA@
	push	ebx
	call	_BIO_puts
	add	esp, 8
	pop	edi
	pop	ebx
; Line 2497
	ret	0
_nodes_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _index_name_LHASH_COMP
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_index_name_LHASH_COMP PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1643
	mov	eax, DWORD PTR _arg2$[esp-4]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _arg1$[esp-4]
	mov	eax, DWORD PTR [eax+20]
	npad	2
$LL5@index_name:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN6@index_name
	test	dl, dl
	je	SHORT $LN7@index_name
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN6@index_name
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL5@index_name
$LN7@index_name:
; Line 1649
	xor	eax, eax
	ret	0
$LN6@index_name:
; Line 1643
	sbb	eax, eax
	or	eax, 1
; Line 1649
	ret	0
_index_name_LHASH_COMP ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _index_name_LHASH_HASH
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_index_name_LHASH_HASH PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1638
	mov	eax, DWORD PTR _arg$[esp-4]
	push	DWORD PTR [eax+20]
	call	_lh_strhash
	add	esp, 4
; Line 1648
	ret	0
_index_name_LHASH_HASH ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _index_serial_LHASH_COMP
_TEXT	SEGMENT
_arg1$ = 8						; size = 4
_arg2$ = 12						; size = 4
_index_serial_LHASH_COMP PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1647
	jmp	_index_serial_cmp
_index_serial_LHASH_COMP ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _index_serial_LHASH_HASH
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_index_serial_LHASH_HASH PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1615
	mov	eax, DWORD PTR _arg$[esp-4]
	mov	eax, DWORD PTR [eax+12]
; Line 1616
	cmp	BYTE PTR [eax], 48			; 00000030H
	jne	SHORT $LN5@index_seri
	npad	4
$LL4@index_seri:
; Line 1617
	inc	eax
	cmp	BYTE PTR [eax], 48			; 00000030H
	je	SHORT $LL4@index_seri
$LN5@index_seri:
; Line 1618
	mov	DWORD PTR _arg$[esp-4], eax
	jmp	_lh_strhash
_index_serial_LHASH_HASH ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _index_name_hash
_TEXT	SEGMENT
_a$ = 8							; size = 4
_index_name_hash PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1638
	mov	eax, DWORD PTR _a$[esp-4]
	push	DWORD PTR [eax+20]
	call	_lh_strhash
	add	esp, 4
; Line 1639
	ret	0
_index_name_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _index_name_qual
_TEXT	SEGMENT
_a$ = 8							; size = 4
_index_name_qual PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1633
	mov	eax, DWORD PTR _a$[esp-4]
	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	BYTE PTR [ecx], 86			; 00000056H
	sete	al
; Line 1634
	ret	0
_index_name_qual ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _index_serial_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_index_serial_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1626
	mov	eax, DWORD PTR _a$[esp-4]
	mov	eax, DWORD PTR [eax+12]
	cmp	BYTE PTR [eax], 48			; 00000030H
	jne	SHORT $LN3@index_seri
	npad	4
$LL4@index_seri:
	inc	eax
	cmp	BYTE PTR [eax], 48			; 00000030H
	je	SHORT $LL4@index_seri
$LN3@index_seri:
; Line 1627
	mov	ecx, DWORD PTR _b$[esp-4]
	mov	ecx, DWORD PTR [ecx+12]
	cmp	BYTE PTR [ecx], 48			; 00000030H
	jne	SHORT $LL17@index_seri
$LL7@index_seri:
	inc	ecx
	cmp	BYTE PTR [ecx], 48			; 00000030H
	je	SHORT $LL7@index_seri
$LL17@index_seri:
; Line 1628
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN18@index_seri
	test	dl, dl
	je	SHORT $LN19@index_seri
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN18@index_seri
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL17@index_seri
$LN19@index_seri:
	xor	eax, eax
; Line 1629
	ret	0
$LN18@index_seri:
; Line 1628
	sbb	eax, eax
	or	eax, 1
; Line 1629
	ret	0
_index_serial_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _index_serial_hash
_TEXT	SEGMENT
_a$ = 8							; size = 4
_index_serial_hash PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1615
	mov	eax, DWORD PTR _a$[esp-4]
	mov	eax, DWORD PTR [eax+12]
; Line 1616
	cmp	BYTE PTR [eax], 48			; 00000030H
	jne	SHORT $LN3@index_seri
	npad	4
$LL2@index_seri:
; Line 1617
	inc	eax
	cmp	BYTE PTR [eax], 48			; 00000030H
	je	SHORT $LL2@index_seri
$LN3@index_seri:
; Line 1618
	mov	DWORD PTR _a$[esp-4], eax
	jmp	_lh_strhash
_index_serial_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _try_load_engine
_TEXT	SEGMENT
_err$ = 8						; size = 4
_engine$ = 12						; size = 4
_debug$ = 16						; size = 4
_try_load_engine PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1523
	push	esi
; Line 1524
	push	OFFSET ??_C@_07OBLKMMON@dynamic?$AA@
	call	_ENGINE_by_id
	mov	esi, eax
	add	esp, 4
; Line 1525
	test	esi, esi
	je	SHORT $LN3@try_load_e
; Line 1527
	push	0
	push	DWORD PTR _engine$[esp+4]
	push	OFFSET ??_C@_07EGEBNIPD@SO_PATH?$AA@
	push	esi
	call	_ENGINE_ctrl_cmd_string
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN4@try_load_e
	push	0
	push	0
	push	OFFSET ??_C@_04ICOEJIDH@LOAD?$AA@
	push	esi
	call	_ENGINE_ctrl_cmd_string
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN4@try_load_e
; Line 1532
	mov	eax, esi
	pop	esi
; Line 1533
	ret	0
$LN4@try_load_e:
; Line 1528
	push	esi
	call	_ENGINE_free
	add	esp, 4
; Line 1532
	xor	eax, eax
$LN3@try_load_e:
	pop	esi
; Line 1533
	ret	0
_try_load_engine ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_certs_crls
_TEXT	SEGMENT
_rv$1$ = -12						; size = 4
_cb_data$ = -8						; size = 8
_err$ = 8						; size = 4
_file$ = 12						; size = 4
_format$ = 16						; size = 4
_xis$1$ = 20						; size = 4
_pass$ = 20						; size = 4
_e$ = 24						; size = 4
_desc$ = 28						; size = 4
_pcerts$ = 32						; size = 4
_pcrls$ = 36						; size = 4
_load_certs_crls PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1177
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 1188
	cmp	DWORD PTR _format$[esp+8], 3
	mov	eax, DWORD PTR _pass$[esp+8]
	push	esi
	mov	esi, DWORD PTR _file$[esp+12]
	mov	DWORD PTR _rv$1$[esp+16], 0
	mov	DWORD PTR _cb_data$[esp+16], eax
	mov	DWORD PTR _cb_data$[esp+20], esi
	je	SHORT $LN5@load_certs
; Line 1189
	push	DWORD PTR _desc$[esp+12]
	push	OFFSET ??_C@_0CD@HFNMCDK@bad?5input?5format?5specified?5for?5?$CF@
	push	DWORD PTR _err$[esp+20]
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1190
	xor	eax, eax
	pop	esi
; Line 1261
	add	esp, 12					; 0000000cH
	ret	0
$LN5@load_certs:
	push	edi
; Line 1193
	test	esi, esi
	jne	SHORT $LN6@load_certs
; Line 1194
	push	esi
	push	esi
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	jmp	SHORT $LN32@load_certs
$LN6@load_certs:
; Line 1196
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	esi
	call	_BIO_new_file
$LN32@load_certs:
	mov	edi, eax
	add	esp, 8
; Line 1198
	test	edi, edi
	jne	SHORT $LN8@load_certs
; Line 1199
	test	esi, esi
	mov	eax, OFFSET ??_C@_05MHOFLBOO@stdin?$AA@
	cmovne	eax, esi
	mov	esi, DWORD PTR _err$[esp+16]
	push	eax
	push	DWORD PTR _desc$[esp+20]
	push	OFFSET ??_C@_0BF@JJKPOFNI@Error?5opening?5?$CFs?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
; Line 1200
	push	esi
	call	_ERR_print_errors
	add	esp, 20					; 00000014H
; Line 1201
	xor	eax, eax
	pop	edi
	pop	esi
; Line 1261
	add	esp, 12					; 0000000cH
	ret	0
$LN8@load_certs:
	push	ebx
	push	ebp
; Line 1204
	lea	eax, DWORD PTR _cb_data$[esp+28]
	push	eax
	push	OFFSET _password_callback
	push	0
	push	edi
	call	_PEM_X509_INFO_read_bio
	mov	esi, eax
; Line 1208
	push	edi
	mov	DWORD PTR _xis$1$[esp+44], esi
	call	_BIO_free
; Line 1210
	mov	ebx, DWORD PTR _pcerts$[esp+44]
	add	esp, 20					; 00000014H
	mov	ebp, DWORD PTR _pcrls$[esp+24]
	test	ebx, ebx
	je	SHORT $LN10@load_certs
; Line 1211
	call	_sk_new_null
	mov	DWORD PTR [ebx], eax
; Line 1212
	test	eax, eax
	je	$end$34
$LN10@load_certs:
; Line 1216
	test	ebp, ebp
	je	SHORT $LN12@load_certs
; Line 1217
	call	_sk_new_null
	mov	DWORD PTR [ebp], eax
; Line 1218
	test	eax, eax
	je	$end$34
$LN12@load_certs:
; Line 1222
	push	esi
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@load_certs
$LL4@load_certs:
; Line 1223
	push	edi
	push	esi
	call	_sk_value
	mov	esi, eax
	add	esp, 8
; Line 1224
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN13@load_certs
	test	ebx, ebx
	je	SHORT $LN13@load_certs
; Line 1225
	push	eax
	push	DWORD PTR [ebx]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $end$34
; Line 1227
	mov	DWORD PTR [esi], 0
$LN13@load_certs:
; Line 1229
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN2@load_certs
	test	ebp, ebp
	je	SHORT $LN2@load_certs
; Line 1230
	push	eax
	push	DWORD PTR [ebp]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $end$34
; Line 1232
	mov	DWORD PTR [esi+4], 0
$LN2@load_certs:
; Line 1222
	mov	esi, DWORD PTR _xis$1$[esp+24]
	inc	edi
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL4@load_certs
$LN3@load_certs:
; Line 1236
	mov	edi, 1
	test	ebx, ebx
	je	SHORT $LN30@load_certs
	push	DWORD PTR [ebx]
	call	_sk_num
	xor	esi, esi
	add	esp, 4
	test	eax, eax
	cmovg	esi, edi
	mov	DWORD PTR _rv$1$[esp+28], esi
	jmp	SHORT $LN17@load_certs
$LN30@load_certs:
	xor	esi, esi
$LN17@load_certs:
; Line 1239
	test	ebp, ebp
	je	SHORT $end$34
	push	DWORD PTR [ebp]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	cmovg	esi, edi
	mov	DWORD PTR _rv$1$[esp+28], esi
$end$34:
; Line 1244
	mov	eax, DWORD PTR _xis$1$[esp+24]
	test	eax, eax
	je	SHORT $LN19@load_certs
; Line 1245
	push	OFFSET _X509_INFO_free
	push	eax
	call	_sk_pop_free
	add	esp, 8
$LN19@load_certs:
; Line 1247
	mov	edi, DWORD PTR _rv$1$[esp+28]
	test	edi, edi
	jne	SHORT $LN20@load_certs
; Line 1248
	test	ebx, ebx
	je	SHORT $LN21@load_certs
; Line 1249
	push	OFFSET _X509_free
	push	DWORD PTR [ebx]
	call	_sk_pop_free
	add	esp, 8
; Line 1250
	mov	DWORD PTR [ebx], edi
$LN21@load_certs:
; Line 1252
	test	ebp, ebp
	je	SHORT $LN22@load_certs
; Line 1253
	push	OFFSET _X509_CRL_free
	push	DWORD PTR [ebp]
	call	_sk_pop_free
	add	esp, 8
; Line 1254
	mov	DWORD PTR [ebp], 0
$LN22@load_certs:
; Line 1256
	mov	esi, DWORD PTR _err$[esp+24]
	mov	ecx, OFFSET ??_C@_04DKBILDMD@CRLs?$AA@
	test	ebx, ebx
	mov	eax, OFFSET ??_C@_0N@NGKEHKOM@certificates?$AA@
	cmove	eax, ecx
	push	eax
	push	OFFSET ??_C@_0BD@DHEMONEO@unable?5to?5load?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
; Line 1258
	push	esi
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
$LN20@load_certs:
; Line 1260
	pop	ebp
	pop	ebx
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1261
	add	esp, 12					; 0000000cH
	ret	0
_load_certs_crls ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_pkcs12
_TEXT	SEGMENT
_pem_cb$GSCopy$2$ = -1048				; size = 4
_cb_data$GSCopy$1$ = -1044				; size = 4
_ca$GSCopy$1$ = -1040					; size = 4
_cert$GSCopy$1$ = -1036					; size = 4
_pkey$GSCopy$1$ = -1032					; size = 4
_tpass$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_err$ = 8						; size = 4
_in$ = 12						; size = 4
_desc$ = 16						; size = 4
_pem_cb$ = 20						; size = 4
_cb_data$ = 24						; size = 4
_pkey$ = 28						; size = 4
_cert$ = 32						; size = 4
_ca$ = 36						; size = 4
_load_pkcs12 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 751
	mov	eax, 1048				; 00000418H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1048], eax
	mov	ecx, DWORD PTR _pem_cb$[esp+1044]
	mov	eax, DWORD PTR _in$[esp+1044]
	push	ebx
	mov	ebx, DWORD PTR _desc$[esp+1048]
	push	ebp
	mov	DWORD PTR _pem_cb$GSCopy$2$[esp+1056], ecx
; Line 754
	xor	ebp, ebp
	mov	ecx, DWORD PTR _cb_data$[esp+1052]
	push	esi
	mov	DWORD PTR _cb_data$GSCopy$1$[esp+1060], ecx
	mov	ecx, DWORD PTR _pkey$[esp+1056]
	push	edi
	mov	edi, DWORD PTR _err$[esp+1060]
	mov	DWORD PTR _pkey$GSCopy$1$[esp+1064], ecx
	mov	ecx, DWORD PTR _cert$[esp+1060]
	mov	DWORD PTR _cert$GSCopy$1$[esp+1064], ecx
	mov	ecx, DWORD PTR _ca$[esp+1060]
; Line 756
	push	ebp
	push	eax
	mov	DWORD PTR _ca$GSCopy$1$[esp+1072], ecx
	call	_d2i_PKCS12_bio
	mov	esi, eax
	add	esp, 8
; Line 757
	test	esi, esi
	jne	SHORT $LN2@load_pkcs1
; Line 758
	push	ebx
	push	OFFSET ??_C@_0CC@PEGFFLPF@Error?5loading?5PKCS12?5file?5for?5?$CFs@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 759
	jmp	$LN10@load_pkcs1
$LN2@load_pkcs1:
; Line 762
	push	0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	esi
	call	_PKCS12_verify_mac
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@load_pkcs1
	push	eax
	push	eax
	push	esi
	call	_PKCS12_verify_mac
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@load_pkcs1
; Line 767
	push	DWORD PTR _cb_data$GSCopy$1$[esp+1064]
	mov	eax, DWORD PTR _pem_cb$GSCopy$2$[esp+1068]
	mov	ecx, OFFSET _password_callback
	test	eax, eax
	push	0
	cmove	eax, ecx
	lea	ecx, DWORD PTR _tpass$[esp+1072]
	push	1024					; 00000400H
	push	ecx
	call	eax
	add	esp, 16					; 00000010H
; Line 768
	test	eax, eax
	jns	SHORT $LN7@load_pkcs1
; Line 769
	push	ebx
	push	OFFSET ??_C@_0CC@DKCLIBKC@Passpharse?5callback?5error?5for?5?$CFs@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 770
	jmp	SHORT $die$17
$LN7@load_pkcs1:
; Line 772
	cmp	eax, 1024				; 00000400H
	jge	SHORT $LN8@load_pkcs1
; Line 773
	jae	SHORT $LN15@load_pkcs1
	mov	BYTE PTR _tpass$[esp+eax+1064], 0
$LN8@load_pkcs1:
; Line 774
	push	eax
	lea	eax, DWORD PTR _tpass$[esp+1068]
	push	eax
	push	esi
	call	_PKCS12_verify_mac
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN9@load_pkcs1
; Line 775
	push	ebx
	push	OFFSET ??_C@_0DK@EMMPDJCK@Mac?5verify?5error?5?$CIwrong?5password@
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 778
	jmp	SHORT $die$17
$LN9@load_pkcs1:
; Line 780
	lea	eax, DWORD PTR _tpass$[esp+1064]
	jmp	SHORT $LN4@load_pkcs1
$LN5@load_pkcs1:
; Line 763
	mov	eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN4@load_pkcs1:
; Line 782
	push	DWORD PTR _ca$GSCopy$1$[esp+1064]
	push	DWORD PTR _cert$GSCopy$1$[esp+1068]
	push	DWORD PTR _pkey$GSCopy$1$[esp+1072]
	push	eax
	push	esi
	call	_PKCS12_parse
	add	esp, 20					; 00000014H
	mov	ebp, eax
$die$17:
; Line 785
	push	esi
	call	_PKCS12_free
	add	esp, 4
$LN10@load_pkcs1:
; Line 787
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1064]
	mov	eax, ebp
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1048				; 00000418H
	ret	0
$LN15@load_pkcs1:
; Line 773
	call	___report_rangecheckfailure
$LN16@load_pkcs1:
$LN14@load_pkcs1:
	int	3
_load_pkcs12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_get_pass
_TEXT	SEGMENT
_tpass$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_err$ = 8						; size = 4
_arg$ = 12						; size = 4
_keepbio$ = 16						; size = 4
_app_get_pass PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 652
	mov	eax, 1028				; 00000404H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1028], eax
	push	ebx
; Line 656
	mov	ebx, DWORD PTR __imp__strncmp
	push	esi
	mov	esi, DWORD PTR _arg$[esp+1032]
	push	edi
	mov	edi, DWORD PTR _err$[esp+1036]
	push	5
	push	OFFSET ??_C@_05OLNJAKGC@pass?3?$AA@
	push	esi
	call	ebx
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@app_get_pa
; Line 657
	lea	eax, DWORD PTR [esi+5]
$LN4@app_get_pa:
	push	eax
	call	_BUF_strdup
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
; Line 721
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1028]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1028				; 00000404H
	ret	0
$LN2@app_get_pa:
; Line 658
	push	4
	push	OFFSET ??_C@_04MGCDLKHE@env?3?$AA@
	push	esi
	call	ebx
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@app_get_pa
; Line 659
	add	esi, 4
	push	esi
	call	DWORD PTR __imp__getenv
	add	esp, 4
; Line 660
	test	eax, eax
	jne	SHORT $LN4@app_get_pa
; Line 661
	push	esi
	push	OFFSET ??_C@_0CE@NKEIKLNB@Can?8t?5read?5environment?5variable?5@
; Line 662
	jmp	$LN21@app_get_pa
$LN3@app_get_pa:
; Line 666
	cmp	DWORD PTR _keepbio$[esp+1036], 0
	je	SHORT $LN6@app_get_pa
	mov	eax, DWORD PTR ?pwdbio@?1??app_get_pass@@9@9
	test	eax, eax
	jne	$LN12@app_get_pa
$LN6@app_get_pa:
; Line 667
	push	5
	push	OFFSET ??_C@_05BOPHDICO@file?3?$AA@
	push	esi
	call	ebx
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@app_get_pa
; Line 668
	add	esi, 5
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	esi
	call	_BIO_new_file
	add	esp, 8
	mov	DWORD PTR ?pwdbio@?1??app_get_pass@@9@9, eax
; Line 669
	test	eax, eax
	jne	SHORT $LN12@app_get_pa
; Line 670
	push	esi
	push	OFFSET ??_C@_0BE@DGGEJBEC@Can?8t?5open?5file?5?$CFs?6?$AA@
; Line 671
	jmp	$LN21@app_get_pa
$LN7@app_get_pa:
; Line 697
	mov	ecx, OFFSET ??_C@_05MHOFLBOO@stdin?$AA@
	mov	eax, esi
$LL17@app_get_pa:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN18@app_get_pa
	test	dl, dl
	je	SHORT $LN19@app_get_pa
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN18@app_get_pa
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL17@app_get_pa
$LN19@app_get_pa:
	xor	eax, eax
	jmp	SHORT $LN20@app_get_pa
$LN18@app_get_pa:
	sbb	eax, eax
	or	eax, 1
$LN20@app_get_pa:
	test	eax, eax
	jne	$LN10@app_get_pa
; Line 698
	push	eax
	push	eax
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	DWORD PTR ?pwdbio@?1??app_get_pass@@9@9, eax
; Line 699
	test	eax, eax
	jne	SHORT $LN12@app_get_pa
; Line 700
	push	OFFSET ??_C@_0BK@EEFMFEJC@Can?8t?5open?5BIO?5for?5stdin?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
; Line 701
	jmp	$LN22@app_get_pa
$LN12@app_get_pa:
; Line 708
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _tpass$[esp+1044]
	push	ecx
	push	eax
	call	_BIO_gets
	add	esp, 12					; 0000000cH
	mov	esi, eax
; Line 709
	cmp	DWORD PTR _keepbio$[esp+1036], 1
	je	SHORT $LN13@app_get_pa
; Line 710
	push	DWORD PTR ?pwdbio@?1??app_get_pass@@9@9
	call	_BIO_free_all
	add	esp, 4
; Line 711
	mov	DWORD PTR ?pwdbio@?1??app_get_pass@@9@9, 0
$LN13@app_get_pa:
; Line 713
	test	esi, esi
	jg	SHORT $LN14@app_get_pa
; Line 714
	push	OFFSET ??_C@_0CB@KJOAPACB@Error?5reading?5password?5from?5BIO?6@
	push	edi
	call	_BIO_printf
	add	esp, 8
; Line 715
	jmp	SHORT $LN22@app_get_pa
$LN14@app_get_pa:
; Line 717
	lea	eax, DWORD PTR _tpass$[esp+1040]
	push	10					; 0000000aH
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
; Line 718
	test	eax, eax
	je	SHORT $LN15@app_get_pa
; Line 719
	mov	BYTE PTR [eax], 0
$LN15@app_get_pa:
; Line 720
	lea	eax, DWORD PTR _tpass$[esp+1040]
	push	eax
	call	_BUF_strdup
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
; Line 721
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1028]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1028				; 00000404H
	ret	0
$LN10@app_get_pa:
; Line 704
	push	esi
	push	OFFSET ??_C@_0CA@FEIKIBOM@Invalid?5password?5argument?5?$CC?$CFs?$CC?6?$AA@
$LN21@app_get_pa:
	push	edi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN22@app_get_pa:
; Line 721
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1040]
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1028				; 00000404H
	ret	0
_app_get_pass ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ui_close
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_ui_close PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 522
	push	DWORD PTR _ui$[esp-4]
	call	_UI_OpenSSL
	push	eax
	call	_UI_method_get_closer
	add	esp, 4
	call	eax
	add	esp, 4
; Line 523
	ret	0
_ui_close ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ui_write
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_uis$ = 12						; size = 4
_ui_write PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 501
	push	esi
	push	edi
; Line 503
	mov	edi, DWORD PTR _uis$[esp+4]
	push	edi
	call	_UI_get_input_flags
	mov	esi, DWORD PTR _ui$[esp+8]
	add	esp, 4
	test	al, 2
	je	SHORT $LN6@ui_write
	push	esi
	call	_UI_get0_user_data
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@ui_write
; Line 504
	push	edi
	call	_UI_get_string_type
	dec	eax
	add	esp, 4
	cmp	eax, 1
	ja	SHORT $LN6@ui_write
; Line 508
	push	esi
	call	_UI_get0_user_data
	add	esp, 4
	mov	eax, DWORD PTR [eax]
; Line 510
	test	eax, eax
	je	SHORT $LN6@ui_write
	cmp	BYTE PTR [eax], 0
	je	SHORT $LN6@ui_write
; Line 511
	pop	edi
	mov	eax, 1
	pop	esi
; Line 518
	ret	0
$LN6@ui_write:
; Line 517
	push	edi
	push	esi
	call	_UI_OpenSSL
	push	eax
	call	_UI_method_get_writer
	add	esp, 4
	call	eax
	add	esp, 8
	pop	edi
	pop	esi
; Line 518
	ret	0
_ui_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ui_read
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_uis$ = 12						; size = 4
_ui_read PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 479
	push	esi
	push	edi
; Line 481
	mov	edi, DWORD PTR _uis$[esp+4]
	push	edi
	call	_UI_get_input_flags
	mov	esi, DWORD PTR _ui$[esp+8]
	add	esp, 4
	test	al, 2
	je	SHORT $LN6@ui_read
	push	esi
	call	_UI_get0_user_data
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@ui_read
; Line 482
	push	edi
	call	_UI_get_string_type
	dec	eax
	add	esp, 4
	cmp	eax, 1
	ja	SHORT $LN6@ui_read
; Line 486
	push	esi
	call	_UI_get0_user_data
	add	esp, 4
	mov	eax, DWORD PTR [eax]
; Line 488
	test	eax, eax
	je	SHORT $LN6@ui_read
	cmp	BYTE PTR [eax], 0
	je	SHORT $LN6@ui_read
; Line 489
	push	eax
	push	edi
	push	esi
	call	_UI_set_result
	add	esp, 12					; 0000000cH
; Line 490
	mov	eax, 1
	pop	edi
	pop	esi
; Line 498
	ret	0
$LN6@ui_read:
; Line 497
	push	edi
	push	esi
	call	_UI_OpenSSL
	push	eax
	call	_UI_method_get_reader
	add	esp, 4
	call	eax
	add	esp, 8
	pop	edi
	pop	esi
; Line 498
	ret	0
_ui_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ui_open
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_ui_open PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 475
	push	DWORD PTR _ui$[esp-4]
	call	_UI_OpenSSL
	push	eax
	call	_UI_method_get_opener
	add	esp, 4
	call	eax
	add	esp, 4
; Line 476
	ret	0
_ui_open ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_init
_TEXT	SEGMENT
_mesgwin$ = 8						; size = 4
_app_init PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 451
	mov	eax, 1
; Line 452
	ret	0
_app_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_netscape_key
_TEXT	SEGMENT
_p$ = -4						; size = 4
_err$ = 8						; size = 4
_key$ = 12						; size = 4
_file$ = 16						; size = 4
_key_descrip$ = 20					; size = 4
_format$ = 24						; size = 4
_load_netscape_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1134
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 1141
	call	_BUF_MEM_new
	mov	edi, eax
; Line 1142
	call	_EVP_PKEY_new
; Line 1143
	xor	esi, esi
	mov	ebx, eax
; Line 1144
	test	edi, edi
	je	SHORT $error$19
	test	ebx, ebx
	je	SHORT $error$19
; Line 1147
	push	10240					; 00002800H
	push	edi
	call	_BUF_MEM_grow_clean
	add	esp, 8
	test	eax, eax
	je	SHORT $error$19
	mov	ebp, DWORD PTR _key$[esp+16]
	npad	4
$LL2@load_netsc:
; Line 1149
	mov	eax, DWORD PTR [edi+4]
	push	10240					; 00002800H
	add	eax, esi
	push	eax
	push	ebp
	call	_BIO_read
	add	esp, 12					; 0000000cH
; Line 1150
	add	esi, eax
; Line 1151
	test	eax, eax
	je	SHORT $LN14@load_netsc
; Line 1153
	js	SHORT $LN15@load_netsc
; Line 1147
	lea	eax, DWORD PTR [esi+10240]
	push	eax
	push	edi
	call	_BUF_MEM_grow_clean
	add	esp, 8
	test	eax, eax
	jne	SHORT $LL2@load_netsc
$error$19:
; Line 1167
	push	edi
	call	_BUF_MEM_free
; Line 1168
	push	ebx
	call	_EVP_PKEY_free
	add	esp, 8
; Line 1169
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1170
	pop	ecx
	ret	0
$LN15@load_netsc:
; Line 1154
	push	DWORD PTR _file$[esp+16]
	push	DWORD PTR _key_descrip$[esp+20]
	push	OFFSET ??_C@_0BE@NPKILBBI@Error?5reading?5?$CFs?5?$CFs?$AA@
	push	DWORD PTR _err$[esp+28]
	call	_BIO_printf
	add	esp, 16					; 00000010H
	jmp	SHORT $error$19
$LN14@load_netsc:
; Line 1158
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR _p$[esp+20], eax
; Line 1159
	xor	eax, eax
	cmp	DWORD PTR _format$[esp+16], 8
	sete	al
	push	eax
	push	0
	push	esi
	lea	eax, DWORD PTR _p$[esp+32]
	push	eax
	push	0
	call	_d2i_RSA_NET
	mov	esi, eax
	add	esp, 20					; 00000014H
; Line 1161
	test	esi, esi
	je	SHORT $error$19
; Line 1163
	push	edi
	call	_BUF_MEM_free
; Line 1164
	push	esi
	push	ebx
	call	_EVP_PKEY_set1_RSA
	add	esp, 12					; 0000000cH
; Line 1165
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1170
	pop	ecx
	ret	0
_load_netscape_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _set_multi_opts
_TEXT	SEGMENT
_ret$1$ = -4						; size = 4
_flags$ = 8						; size = 4
_vals$1$ = 12						; size = 4
_arg$ = 12						; size = 4
_in_tbl$ = 16						; size = 4
_set_multi_opts PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1414
	mov	eax, 4
	call	__chkstk
; Line 1418
	mov	eax, DWORD PTR _arg$[esp]
	push	esi
	mov	esi, 1
	mov	DWORD PTR _ret$1$[esp+8], esi
	test	eax, eax
	jne	SHORT $LN5@set_multi_
	pop	esi
; Line 1428
	pop	ecx
	ret	0
$LN5@set_multi_:
	push	ebx
	push	ebp
; Line 1420
	push	eax
	call	_X509V3_parse_list
	mov	ebx, eax
; Line 1421
	xor	ebp, ebp
	push	ebx
	mov	DWORD PTR _vals$1$[esp+20], ebx
	call	_sk_num
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN3@set_multi_
	push	edi
	npad	3
$LL4@set_multi_:
; Line 1422
	push	ebp
	push	ebx
	call	_sk_value
	add	esp, 8
; Line 1423
	mov	edi, DWORD PTR [eax+4]
; Line 1435
	mov	al, BYTE PTR [edi]
; Line 1437
	cmp	al, 45					; 0000002dH
	jne	SHORT $LN12@set_multi_
; Line 1438
	xor	bl, bl
; Line 1439
	jmp	SHORT $LN30@set_multi_
$LN12@set_multi_:
; Line 1441
	mov	bl, 1
	cmp	al, 43					; 0000002bH
	jne	SHORT $LN15@set_multi_
$LN30@set_multi_:
; Line 1442
	inc	edi
$LN15@set_multi_:
; Line 1446
	mov	eax, DWORD PTR _in_tbl$[esp+16]
	mov	esi, eax
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN10@set_multi_
	npad	7
$LL11@set_multi_:
; Line 1447
	push	DWORD PTR [esi]
	push	edi
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN22@set_multi_
; Line 1446
	add	esi, 12					; 0000000cH
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LL11@set_multi_
$LN10@set_multi_:
; Line 1424
	xor	esi, esi
	mov	DWORD PTR _ret$1$[esp+20], esi
$LN2@set_multi_:
; Line 1421
	mov	ebx, DWORD PTR _vals$1$[esp+16]
	inc	ebp
	push	ebx
	call	_sk_num
	add	esp, 4
	cmp	ebp, eax
	jl	SHORT $LL4@set_multi_
	pop	edi
$LN3@set_multi_:
; Line 1426
	push	OFFSET _X509V3_conf_free
	push	ebx
	call	_sk_pop_free
	add	esp, 8
; Line 1427
	mov	eax, esi
	pop	ebp
	pop	ebx
	pop	esi
; Line 1428
	pop	ecx
	ret	0
$LN22@set_multi_:
; Line 1448
	mov	eax, DWORD PTR [esi+8]
	mov	edx, DWORD PTR _flags$[esp+16]
	not	eax
	and	DWORD PTR [edx], eax
; Line 1450
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR [edx]
	mov	esi, DWORD PTR _ret$1$[esp+20]
	test	bl, bl
	je	SHORT $LN17@set_multi_
	or	eax, ecx
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN2@set_multi_
$LN17@set_multi_:
; Line 1452
	not	eax
	and	eax, ecx
	mov	DWORD PTR [edx], eax
; Line 1453
	jmp	SHORT $LN2@set_multi_
_set_multi_opts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _set_table_opts
_TEXT	SEGMENT
_flags$ = 8						; size = 4
_arg$ = 12						; size = 4
_in_tbl$ = 16						; size = 4
_set_table_opts PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1432
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 1435
	mov	edi, DWORD PTR _arg$[esp+12]
	mov	al, BYTE PTR [edi]
; Line 1437
	cmp	al, 45					; 0000002dH
	jne	SHORT $LN5@set_table_
; Line 1438
	xor	bl, bl
; Line 1439
	jmp	SHORT $LN19@set_table_
$LN5@set_table_:
; Line 1441
	mov	bl, 1
	cmp	al, 43					; 0000002bH
	jne	SHORT $LN8@set_table_
$LN19@set_table_:
; Line 1442
	inc	edi
$LN8@set_table_:
; Line 1446
	mov	esi, DWORD PTR _in_tbl$[esp+12]
	cmp	DWORD PTR [esi], 0
	je	SHORT $LN3@set_table_
	mov	ebp, DWORD PTR __imp___stricmp
$LL4@set_table_:
; Line 1447
	push	DWORD PTR [esi]
	push	edi
	call	ebp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN14@set_table_
; Line 1446
	add	esi, 12					; 0000000cH
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LL4@set_table_
$LN3@set_table_:
	pop	edi
	pop	esi
	pop	ebp
; Line 1456
	xor	eax, eax
	pop	ebx
; Line 1457
	ret	0
$LN14@set_table_:
; Line 1448
	mov	ecx, DWORD PTR _flags$[esp+12]
	mov	eax, DWORD PTR [esi+8]
	not	eax
	and	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR [ecx]
; Line 1450
	mov	eax, DWORD PTR [esi+4]
	test	bl, bl
	je	SHORT $LN10@set_table_
	pop	edi
	pop	esi
	or	eax, edx
	pop	ebp
; Line 1452
	mov	DWORD PTR [ecx], eax
; Line 1453
	mov	eax, 1
	pop	ebx
; Line 1457
	ret	0
$LN10@set_table_:
	pop	edi
; Line 1452
	not	eax
	pop	esi
	and	eax, edx
	pop	ebp
	mov	DWORD PTR [ecx], eax
; Line 1453
	mov	eax, 1
	pop	ebx
; Line 1457
	ret	0
_set_table_opts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _WIN32_rename
_TEXT	SEGMENT
_from$ = 8						; size = 4
_to$ = 12						; size = 4
_WIN32_rename PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2900
	push	esi
; Line 2927
	mov	esi, DWORD PTR _to$[esp]
	push	esi
	push	DWORD PTR _from$[esp+4]
	call	DWORD PTR __imp__MoveFileA@8
	test	eax, eax
	jne	SHORT $LN24@WIN32_rena
; Line 2929
	call	DWORD PTR __imp__GetLastError@0
; Line 2930
	cmp	eax, 183				; 000000b7H
	je	SHORT $LN15@WIN32_rena
	cmp	eax, 80					; 00000050H
	jne	SHORT $LN14@WIN32_rena
$LN15@WIN32_rena:
; Line 2931
	push	esi
	call	DWORD PTR __imp__DeleteFileA@4
	test	eax, eax
	je	SHORT $LN16@WIN32_rena
	push	esi
	push	DWORD PTR _from$[esp+4]
	call	DWORD PTR __imp__MoveFileA@8
	test	eax, eax
	jne	SHORT $LN24@WIN32_rena
$LN16@WIN32_rena:
; Line 2933
	call	DWORD PTR __imp__GetLastError@0
$LN14@WIN32_rena:
; Line 2935
	cmp	eax, 2
	je	SHORT $LN19@WIN32_rena
	cmp	eax, 3
	je	SHORT $LN19@WIN32_rena
; Line 2937
	cmp	eax, 5
	jne	SHORT $LN20@WIN32_rena
; Line 2938
	call	DWORD PTR __imp___errno
	pop	esi
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 2946
	or	eax, -1
; Line 2947
	ret	0
$LN20@WIN32_rena:
; Line 2940
	call	DWORD PTR __imp___errno
	pop	esi
	mov	DWORD PTR [eax], 22			; 00000016H
; Line 2946
	or	eax, -1
; Line 2947
	ret	0
$LN19@WIN32_rena:
; Line 2936
	call	DWORD PTR __imp___errno
$err$27:
	mov	DWORD PTR [eax], 2
; Line 2946
	or	eax, -1
	pop	esi
; Line 2947
	ret	0
$LN24@WIN32_rena:
; Line 2946
	xor	eax, eax
$ok$28:
	pop	esi
; Line 2947
	ret	0
_WIN32_rename ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_tminterval
_TEXT	SEGMENT
_now$ = -36						; size = 8
_ret$ = -28						; size = 8
_systime$1 = -20					; size = 16
_junk$2 = -20						; size = 8
__$ArrayPad$ = -4					; size = 4
_stop$ = 8						; size = 4
_usertime$ = 12						; size = 4
_app_tminterval PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2953
	mov	eax, 36					; 00000024H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+36], eax
; Line 2961
	mov	eax, DWORD PTR ?proc@?1??app_tminterval@@9@9
	xorps	xmm0, xmm0
	movsd	QWORD PTR _ret$[esp+36], xmm0
	test	eax, eax
	jne	SHORT $LN4@app_tminte
; Line 2963
	call	DWORD PTR __imp__GetCurrentProcessId@0
	push	eax
	push	0
	push	1024					; 00000400H
	call	DWORD PTR __imp__OpenProcess@12
; Line 2965
	or	ecx, -1
	test	eax, eax
	cmove	eax, ecx
	mov	DWORD PTR ?proc@?1??app_tminterval@@9@9, eax
$LN4@app_tminte:
; Line 2969
	cmp	DWORD PTR _usertime$[esp+32], 0
	je	SHORT $LN7@app_tminte
	cmp	eax, -1
	je	SHORT $LN5@app_tminte
; Line 2971
	lea	ecx, DWORD PTR _now$[esp+36]
	push	ecx
	lea	ecx, DWORD PTR _junk$2[esp+40]
	push	ecx
	push	ecx
	push	ecx
	push	eax
	call	DWORD PTR __imp__GetProcessTimes@20
; Line 2972
	jmp	SHORT $LN6@app_tminte
$LN5@app_tminte:
; Line 2977
	cmp	DWORD PTR ?warning@?1??app_tminterval@@9@9, 0
	je	SHORT $LN7@app_tminte
; Line 2978
	push	OFFSET ??_C@_0DN@IIJMFLNE@To?5get?5meaningful?5results?0?5run?5t@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2980
	mov	DWORD PTR ?warning@?1??app_tminterval@@9@9, 0
$LN7@app_tminte:
; Line 2982
	lea	eax, DWORD PTR _systime$1[esp+36]
	push	eax
	call	DWORD PTR __imp__GetSystemTime@4
; Line 2983
	lea	eax, DWORD PTR _now$[esp+36]
	push	eax
	lea	eax, DWORD PTR _systime$1[esp+40]
	push	eax
	call	DWORD PTR __imp__SystemTimeToFileTime@8
$LN6@app_tminte:
; Line 2986
	cmp	DWORD PTR _stop$[esp+32], 0
	jne	SHORT $LN8@app_tminte
; Line 2998
	mov	eax, DWORD PTR _now$[esp+36]
	fld	QWORD PTR _ret$[esp+36]
	mov	DWORD PTR ?tmstart@?1??app_tminterval@@9@9, eax
	mov	eax, DWORD PTR _now$[esp+40]
	mov	DWORD PTR ?tmstart@?1??app_tminterval@@9@9+4, eax
; Line 2999
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
$LN8@app_tminte:
	mov	ecx, DWORD PTR _now$[esp+36]
; Line 2995
	sub	ecx, DWORD PTR ?tmstart@?1??app_tminterval@@9@9
	mov	edx, DWORD PTR _now$[esp+40]
	sbb	edx, DWORD PTR ?tmstart@?1??app_tminterval@@9@9+4
	call	__ltod3
	mulsd	xmm0, QWORD PTR __real@3e7ad7f29abcaf48
; Line 2999
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	xor	ecx, esp
	movsd	QWORD PTR _ret$[esp+36], xmm0
	fld	QWORD PTR _ret$[esp+36]
	call	@__security_check_cookie@4
	add	esp, 36					; 00000024H
	ret	0
_app_tminterval ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _raw_write_stdout
_TEXT	SEGMENT
_n$ = -4						; size = 4
_buf$ = 8						; size = 4
_siz$ = 12						; size = 4
_raw_write_stdout PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 3216
	mov	eax, 4
	call	__chkstk
; Line 3218
	push	0
	lea	eax, DWORD PTR _n$[esp+8]
	push	eax
	push	DWORD PTR _siz$[esp+8]
	push	DWORD PTR _buf$[esp+12]
	push	-11					; fffffff5H
	call	DWORD PTR __imp__GetStdHandle@4
	push	eax
	call	DWORD PTR __imp__WriteFile@20
	or	ecx, -1
	test	eax, eax
	cmovne	ecx, DWORD PTR _n$[esp+4]
	mov	eax, ecx
; Line 3222
	pop	ecx
	ret	0
_raw_write_stdout ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _raw_read_stdin
_TEXT	SEGMENT
_n$ = -4						; size = 4
_buf$ = 8						; size = 4
_siz$ = 12						; size = 4
_raw_read_stdin PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 3200
	mov	eax, 4
	call	__chkstk
; Line 3202
	push	0
	lea	eax, DWORD PTR _n$[esp+8]
	push	eax
	push	DWORD PTR _siz$[esp+8]
	push	DWORD PTR _buf$[esp+12]
	push	-10					; fffffff6H
	call	DWORD PTR __imp__GetStdHandle@4
	push	eax
	call	DWORD PTR __imp__ReadFile@20
	or	ecx, -1
	test	eax, eax
	cmovne	ecx, DWORD PTR _n$[esp+4]
	mov	eax, ecx
; Line 3206
	pop	ecx
	ret	0
_raw_read_stdin ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_isdir
_TEXT	SEGMENT
_FileData$ = -324					; size = 320
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_app_isdir PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 3147
	mov	eax, 324				; 00000144H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+324], eax
	mov	eax, DWORD PTR _name$[esp+320]
; Line 3165
	lea	ecx, DWORD PTR _FileData$[esp+324]
	push	ecx
	push	eax
	call	DWORD PTR __imp__FindFirstFileA@8
; Line 3167
	cmp	eax, -1
	jne	SHORT $LN2@app_isdir
; Line 3168
	or	eax, eax
; Line 3171
	mov	ecx, DWORD PTR __$ArrayPad$[esp+324]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	ret	0
$LN2@app_isdir:
; Line 3169
	push	eax
	call	DWORD PTR __imp__FindClose@4
; Line 3170
	mov	eax, DWORD PTR _FileData$[esp+324]
; Line 3171
	mov	ecx, DWORD PTR __$ArrayPad$[esp+324]
	shr	eax, 4
	xor	ecx, esp
	and	eax, 1
	call	@__security_check_cookie@4
	add	esp, 324				; 00000144H
	ret	0
_app_isdir ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _store_setup_crl_download
_TEXT	SEGMENT
_st$ = 8						; size = 4
_store_setup_crl_download PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2884
	push	OFFSET _crls_http_cb
	push	DWORD PTR _st$[esp]
	call	_X509_STORE_set_lookup_crls_cb
	add	esp, 8
; Line 2885
	ret	0
_store_setup_crl_download ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_cert_checks
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_x$ = 12						; size = 4
_checkhost$ = 16					; size = 4
_checkemail$ = 20					; size = 4
_checkip$ = 24						; size = 4
_print_cert_checks PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2791
	push	esi
; Line 2792
	mov	esi, DWORD PTR _x$[esp]
	test	esi, esi
	je	$LN5@print_cert
; Line 2794
	push	ebx
	mov	ebx, DWORD PTR _checkhost$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR _bio$[esp+8]
	push	edi
	mov	edi, OFFSET ??_C@_00CNPNBAHC@?$AA@
	test	ebx, ebx
	je	SHORT $LN3@print_cert
; Line 2795
	push	0
	push	0
	push	0
	push	ebx
	push	esi
	call	_X509_check_host
	cmp	eax, 1
	mov	ecx, edi
	mov	eax, OFFSET ??_C@_04CGMGFKEF@?5NOT?$AA@
	cmovne	ecx, eax
	push	ecx
	push	ebx
	push	OFFSET ??_C@_0CG@BEAMIHCH@Hostname?5?$CFs?5does?$CFs?5match?5certifi@
	push	ebp
	call	_BIO_printf
	add	esp, 36					; 00000024H
$LN3@print_cert:
; Line 2800
	mov	ebx, DWORD PTR _checkemail$[esp+12]
	test	ebx, ebx
	je	SHORT $LN4@print_cert
; Line 2801
	push	0
	push	0
	push	ebx
	push	esi
	call	_X509_check_email
	test	eax, eax
	mov	ecx, edi
	mov	eax, OFFSET ??_C@_04CGMGFKEF@?5NOT?$AA@
	cmove	ecx, eax
	push	ecx
	push	ebx
	push	OFFSET ??_C@_0CD@CDKJLNLJ@Email?5?$CFs?5does?$CFs?5match?5certificat@
	push	ebp
	call	_BIO_printf
	add	esp, 32					; 00000020H
$LN4@print_cert:
; Line 2806
	mov	ebx, DWORD PTR _checkip$[esp+12]
	test	ebx, ebx
	je	SHORT $LN7@print_cert
; Line 2807
	push	0
	push	ebx
	push	esi
	call	_X509_check_ip_asc
	test	eax, eax
	mov	eax, OFFSET ??_C@_04CGMGFKEF@?5NOT?$AA@
	cmove	edi, eax
	push	edi
	push	ebx
	push	OFFSET ??_C@_0CA@BEKABJAC@IP?5?$CFs?5does?$CFs?5match?5certificate?6?$AA@
	push	ebp
	call	_BIO_printf
	add	esp, 28					; 0000001cH
$LN7@print_cert:
	pop	edi
	pop	ebp
	pop	ebx
$LN5@print_cert:
	pop	esi
; Line 2810
	ret	0
_print_cert_checks ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _next_protos_parse
_TEXT	SEGMENT
_outlen$ = 8						; size = 4
_in$ = 12						; size = 4
_next_protos_parse PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2758
	push	ebx
	push	esi
	push	edi
; Line 2763
	mov	edi, DWORD PTR _in$[esp+8]
	xor	ebx, ebx
	mov	esi, edi
	lea	ecx, DWORD PTR [esi+1]
	npad	2
$LL17@next_proto:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL17@next_proto
	sub	esi, ecx
; Line 2764
	cmp	esi, 65535				; 0000ffffH
	jae	SHORT $LN19@next_proto
; Line 2767
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL18@next_proto:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL18@next_proto
	sub	ecx, edx
	push	2767					; 00000acfH
	push	OFFSET ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
	lea	eax, DWORD PTR [ecx+1]
	push	eax
	call	_CRYPTO_malloc
	mov	edx, eax
	add	esp, 12					; 0000000cH
; Line 2769
	xor	eax, eax
	test	edx, edx
	je	SHORT $LN1@next_proto
; Line 2772
	cmp	eax, esi
$LN20@next_proto:
	je	SHORT $LN9@next_proto
	mov	cl, BYTE PTR [eax+edi]
	cmp	cl, 44					; 0000002cH
	je	SHORT $LN9@next_proto
; Line 2780
	mov	BYTE PTR [eax+edx+1], cl
	jmp	SHORT $LN2@next_proto
$LN9@next_proto:
; Line 2773
	mov	ecx, eax
	sub	ecx, ebx
	cmp	ecx, 255				; 000000ffH
	ja	SHORT $LN13@next_proto
; Line 2777
	mov	cl, al
	sub	cl, bl
	mov	BYTE PTR [edx+ebx], cl
; Line 2778
	lea	ebx, DWORD PTR [eax+1]
$LN2@next_proto:
; Line 2771
	inc	eax
	cmp	eax, esi
	jbe	SHORT $LN20@next_proto
; Line 2783
	mov	eax, DWORD PTR _outlen$[esp+8]
	lea	ecx, DWORD PTR [esi+1]
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax], cx
; Line 2784
	mov	eax, edx
; Line 2785
	ret	0
$LN13@next_proto:
; Line 2774
	push	edx
	call	_CRYPTO_free
	add	esp, 4
$LN19@next_proto:
; Line 2775
	xor	eax, eax
$LN1@next_proto:
	pop	edi
	pop	esi
	pop	ebx
; Line 2785
	ret	0
_next_protos_parse ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_ctrl_string
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_value$ = 12						; size = 4
_pkey_ctrl_string PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2467
	push	edi
; Line 2470
	push	DWORD PTR _value$[esp]
	call	_BUF_strdup
	mov	edi, eax
	add	esp, 4
; Line 2471
	test	edi, edi
	jne	SHORT $LN2@pkey_ctrl_
; Line 2472
	or	eax, -1
	pop	edi
; Line 2481
	ret	0
$LN2@pkey_ctrl_:
; Line 2473
	push	58					; 0000003aH
	push	edi
	call	DWORD PTR __imp__strchr
	add	esp, 8
; Line 2474
	test	eax, eax
	je	SHORT $LN3@pkey_ctrl_
; Line 2475
	mov	BYTE PTR [eax], 0
; Line 2476
	inc	eax
$LN3@pkey_ctrl_:
; Line 2478
	push	esi
	push	eax
	push	edi
	push	DWORD PTR _ctx$[esp+12]
	call	_EVP_PKEY_CTX_ctrl_str
; Line 2479
	push	edi
	mov	esi, eax
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 2480
	mov	eax, esi
	pop	esi
	pop	edi
; Line 2481
	ret	0
_pkey_ctrl_string ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_to_mem
_TEXT	SEGMENT
_out$GSCopy$1$ = -1032					; size = 4
_tbuf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_out$ = 8						; size = 4
_maxlen$ = 12						; size = 4
_in$ = 16						; size = 4
_bio_to_mem PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2432
	mov	eax, 1032				; 00000408H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1032], eax
	mov	eax, DWORD PTR _out$[esp+1028]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _in$[esp+1036]
	mov	DWORD PTR _out$GSCopy$1$[esp+1040], eax
; Line 2436
	call	_BIO_s_mem
	push	eax
	call	_BIO_new
	mov	ebx, eax
	add	esp, 4
; Line 2437
	test	ebx, ebx
	jne	SHORT $LN25@bio_to_mem
; Line 2438
	pop	ebp
	or	eax, -1
	pop	ebx
; Line 2464
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1032]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1032				; 00000408H
	ret	0
$LN25@bio_to_mem:
	push	esi
; Line 2438
	mov	esi, DWORD PTR _maxlen$[esp+1040]
	push	edi
$LL2@bio_to_mem:
; Line 2440
	cmp	esi, -1
	je	SHORT $LN6@bio_to_mem
; Line 2441
	mov	eax, esi
	cmp	esi, 1024				; 00000400H
	jl	SHORT $LN7@bio_to_mem
$LN6@bio_to_mem:
; Line 2443
	mov	eax, 1024				; 00000400H
$LN7@bio_to_mem:
; Line 2444
	push	eax
	lea	eax, DWORD PTR _tbuf$[esp+1052]
	push	eax
	push	ebp
	call	_BIO_read
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 2445
	test	edi, edi
	js	SHORT $LN15@bio_to_mem
; Line 2449
	je	SHORT $LN18@bio_to_mem
; Line 2451
	push	edi
	lea	eax, DWORD PTR _tbuf$[esp+1052]
	push	eax
	push	ebx
	call	_BIO_write
	add	esp, 12					; 0000000cH
	cmp	eax, edi
	jne	SHORT $LN15@bio_to_mem
; Line 2455
	sub	esi, edi
; Line 2457
	jne	SHORT $LL2@bio_to_mem
$LN18@bio_to_mem:
; Line 2460
	push	DWORD PTR _out$GSCopy$1$[esp+1048]
	push	0
	push	3
	push	ebx
	call	_BIO_ctrl
; Line 2461
	push	512					; 00000200H
	push	ebx
	mov	esi, eax
	call	_BIO_set_flags
; Line 2462
	push	ebx
	call	_BIO_free
	add	esp, 28					; 0000001cH
; Line 2463
	mov	eax, esi
	jmp	SHORT $LN27@bio_to_mem
$LN15@bio_to_mem:
; Line 2446
	push	ebx
	call	_BIO_free
	add	esp, 4
; Line 2447
	or	eax, -1
$LN27@bio_to_mem:
; Line 2464
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1048]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1032				; 00000408H
	ret	0
_bio_to_mem ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _policies_print
_TEXT	SEGMENT
_out$ = 8						; size = 4
_ctx$ = 12						; size = 4
_policies_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2500
	push	ebx
; Line 2504
	mov	ebx, DWORD PTR _out$[esp]
	push	ebp
	xor	ebp, ebp
	test	ebx, ebx
	jne	SHORT $LN2@policies_p
; Line 2505
	push	ebx
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
	add	esp, 8
	mov	ebx, eax
; Line 2506
	mov	ebp, 1
$LN2@policies_p:
; Line 2508
	push	edi
	push	DWORD PTR _ctx$[esp+8]
	call	_X509_STORE_CTX_get0_policy_tree
; Line 2509
	push	DWORD PTR _ctx$[esp+12]
	mov	edi, eax
	call	_X509_STORE_CTX_get_explicit_policy
; Line 2511
	test	eax, eax
	mov	edx, OFFSET ??_C@_05MKDOIIA@False?$AA@
	mov	ecx, OFFSET ??_C@_04HPMIDMKH@True?$AA@
	cmove	ecx, edx
	push	ecx
	push	OFFSET ??_C@_0BN@IBNHIEPH@Require?5explicit?5Policy?3?5?$CFs?6?$AA@
	push	ebx
	call	_BIO_printf
; Line 2514
	push	edi
	call	_X509_policy_tree_get0_policies
	push	eax
	push	OFFSET ??_C@_09NGOBFEPP@Authority?$AA@
	push	ebx
	call	_nodes_print
; Line 2515
	push	edi
	call	_X509_policy_tree_get0_user_policies
	push	eax
	push	OFFSET ??_C@_04ODLBFFJE@User?$AA@
	push	ebx
	call	_nodes_print
	add	esp, 52					; 00000034H
	pop	edi
; Line 2516
	test	ebp, ebp
	je	SHORT $LN3@policies_p
; Line 2517
	push	ebx
	call	_BIO_free
	add	esp, 4
$LN3@policies_p:
; Line 2518
	pop	ebp
	pop	ebx
	ret	0
_policies_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _args_verify
_TEXT	SEGMENT
_otmp$1$ = -40						; size = 4
_purpose$1$ = -36					; size = 4
_depth$1$ = -32						; size = 4
_hostname$1$ = -28					; size = 4
_email$1$ = -24						; size = 4
_ipasc$1$ = -20						; size = 4
_timestamp$1 = -16					; size = 4
_oldargs$1$ = -12					; size = 4
_at_time$ = -8						; size = 8
_pargs$ = 8						; size = 4
_pargc$ = 12						; size = 4
_badarg$ = 16						; size = 4
_err$ = 20						; size = 4
_pm$ = 24						; size = 4
_args_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2260
	mov	eax, 40					; 00000028H
	call	__chkstk
; Line 2264
	xor	eax, eax
	mov	DWORD PTR _otmp$1$[esp+40], 0
	mov	DWORD PTR _purpose$1$[esp+40], eax
	xorps	xmm0, xmm0
; Line 2265
	mov	eax, DWORD PTR _pargs$[esp+36]
; Line 2271
	mov	ecx, OFFSET ??_C@_07EDOEKPLG@?9policy?$AA@
	push	ebx
	push	ebp
	push	esi
	mov	eax, DWORD PTR [eax]
	push	edi
	mov	DWORD PTR _oldargs$1$[esp+56], eax
	xor	edi, edi
	mov	DWORD PTR _depth$1$[esp+56], -1
	mov	ebx, DWORD PTR [eax]
	mov	esi, DWORD PTR [eax+4]
	xor	eax, eax
	mov	DWORD PTR _hostname$1$[esp+56], eax
	mov	DWORD PTR _email$1$[esp+56], eax
	mov	DWORD PTR _ipasc$1$[esp+56], eax
	mov	eax, ebx
	movlpd	QWORD PTR _at_time$[esp+56], xmm0
$LL83@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN84@args_verif
	test	dl, dl
	je	SHORT $LN85@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN84@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL83@args_verif
$LN85@args_verif:
	xor	eax, eax
	jmp	SHORT $LN86@args_verif
$LN84@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN86@args_verif:
	mov	ebp, DWORD PTR _badarg$[esp+52]
	test	eax, eax
	jne	SHORT $LN2@args_verif
; Line 2272
	test	esi, esi
	je	SHORT $LN187@args_verif
; Line 2275
	push	0
	push	esi
	call	_OBJ_txt2obj
	add	esp, 8
	mov	DWORD PTR _otmp$1$[esp+56], eax
; Line 2276
	test	eax, eax
	jne	SHORT $LN6@args_verif
; Line 2277
	push	esi
	push	OFFSET ??_C@_0BF@OKHBOGOJ@Invalid?5Policy?5?$CC?$CFs?$CC?6?$AA@
	push	DWORD PTR _err$[esp+60]
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN187@args_verif:
; Line 2278
	mov	DWORD PTR [ebp], 1
$LN6@args_verif:
; Line 2281
	mov	ebx, DWORD PTR _pargs$[esp+52]
	add	DWORD PTR [ebx], 4
	jmp	$LN69@args_verif
$LN2@args_verif:
; Line 2282
	mov	ecx, OFFSET ??_C@_08OKAIACAC@?9purpose?$AA@
	mov	eax, ebx
$LL87@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN88@args_verif
	test	dl, dl
	je	SHORT $LN89@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN88@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL87@args_verif
$LN89@args_verif:
	xor	eax, eax
	jmp	SHORT $LN90@args_verif
$LN88@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN90@args_verif:
	test	eax, eax
	jne	SHORT $LN7@args_verif
; Line 2284
	test	esi, esi
	jne	SHORT $LN9@args_verif
; Line 2296
	mov	ebx, DWORD PTR _pargs$[esp+52]
	mov	DWORD PTR [ebp], 1
	add	DWORD PTR [ebx], 4
	jmp	$LN69@args_verif
$LN9@args_verif:
; Line 2287
	push	esi
	call	_X509_PURPOSE_get_by_sname
	add	esp, 4
; Line 2288
	test	eax, eax
	jns	SHORT $LN11@args_verif
; Line 2289
	push	OFFSET ??_C@_0BG@MLBGEMEI@unrecognized?5purpose?6?$AA@
	push	DWORD PTR _err$[esp+56]
	call	_BIO_printf
; Line 2296
	mov	ebx, DWORD PTR _pargs$[esp+60]
	add	esp, 8
	mov	DWORD PTR [ebp], 1
	add	DWORD PTR [ebx], 4
	jmp	$LN69@args_verif
$LN11@args_verif:
; Line 2292
	push	eax
	call	_X509_PURPOSE_get0
; Line 2293
	push	eax
	call	_X509_PURPOSE_get_id
; Line 2296
	mov	ebx, DWORD PTR _pargs$[esp+60]
	add	esp, 8
	mov	DWORD PTR _purpose$1$[esp+56], eax
	add	DWORD PTR [ebx], 4
	jmp	$LN69@args_verif
$LN7@args_verif:
; Line 2297
	mov	ecx, OFFSET ??_C@_0O@GLCJCNHH@?9verify_depth?$AA@
	mov	eax, ebx
	npad	7
$LL91@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN92@args_verif
	test	dl, dl
	je	SHORT $LN93@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN92@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL91@args_verif
$LN93@args_verif:
	xor	eax, eax
	jmp	SHORT $LN94@args_verif
$LN92@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN94@args_verif:
	test	eax, eax
	jne	SHORT $LN13@args_verif
; Line 2298
	test	esi, esi
	je	SHORT $LN189@args_verif
; Line 2301
	push	esi
	call	DWORD PTR __imp__atoi
	add	esp, 4
	mov	DWORD PTR _depth$1$[esp+56], eax
; Line 2302
	test	eax, eax
	jns	SHORT $LN17@args_verif
; Line 2303
	push	OFFSET ??_C@_0P@PLGBDNLB@invalid?5depth?6?$AA@
	push	DWORD PTR _err$[esp+56]
	call	_BIO_printf
	add	esp, 8
$LN189@args_verif:
; Line 2304
	mov	DWORD PTR [ebp], 1
$LN17@args_verif:
; Line 2307
	mov	ebx, DWORD PTR _pargs$[esp+52]
	add	DWORD PTR [ebx], 4
	jmp	$LN69@args_verif
$LN13@args_verif:
; Line 2308
	mov	ecx, OFFSET ??_C@_07FHCFGGIA@?9attime?$AA@
	mov	eax, ebx
	npad	6
$LL95@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN96@args_verif
	test	dl, dl
	je	SHORT $LN97@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN96@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL95@args_verif
$LN97@args_verif:
	xor	eax, eax
	jmp	SHORT $LN98@args_verif
$LN96@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN98@args_verif:
	test	eax, eax
	jne	SHORT $LN18@args_verif
; Line 2309
	test	esi, esi
	jne	SHORT $LN20@args_verif
; Line 2323
	mov	ebx, DWORD PTR _pargs$[esp+52]
	mov	DWORD PTR [ebp], 1
	add	DWORD PTR [ebx], 4
	jmp	$LN69@args_verif
$LN20@args_verif:
; Line 2316
	lea	eax, DWORD PTR _timestamp$1[esp+56]
	push	eax
	push	OFFSET ??_C@_03LMKFJNEF@?$CFli?$AA@
	push	esi
	call	_sscanf
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	je	SHORT $LN22@args_verif
; Line 2317
	push	esi
	push	OFFSET ??_C@_0BM@BLOMJHGB@Error?5parsing?5timestamp?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2318
	mov	DWORD PTR [ebp], 1
$LN22@args_verif:
; Line 2323
	mov	ebx, DWORD PTR _pargs$[esp+52]
	mov	eax, DWORD PTR _timestamp$1[esp+56]
	cdq
	mov	DWORD PTR _at_time$[esp+56], eax
	add	DWORD PTR [ebx], 4
	mov	DWORD PTR _at_time$[esp+60], edx
	jmp	$LN69@args_verif
$LN18@args_verif:
; Line 2324
	mov	ecx, OFFSET ??_C@_0BB@CBGFOLCL@?9verify_hostname?$AA@
	mov	eax, ebx
$LL99@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN100@args_verif
	test	dl, dl
	je	SHORT $LN101@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN100@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL99@args_verif
$LN101@args_verif:
	xor	eax, eax
	jmp	SHORT $LN102@args_verif
$LN100@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN102@args_verif:
	test	eax, eax
	jne	SHORT $LN23@args_verif
; Line 2325
	test	esi, esi
	jne	SHORT $LN25@args_verif
; Line 2326
	mov	DWORD PTR [ebp], 1
$LN25@args_verif:
; Line 2328
	mov	ebx, DWORD PTR _pargs$[esp+52]
	mov	DWORD PTR _hostname$1$[esp+56], esi
	add	DWORD PTR [ebx], 4
	jmp	$LN69@args_verif
$LN23@args_verif:
; Line 2329
	mov	ecx, OFFSET ??_C@_0O@IDCHAMO@?9verify_email?$AA@
	mov	eax, ebx
	npad	2
$LL103@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN104@args_verif
	test	dl, dl
	je	SHORT $LN105@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN104@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL103@args_verif
$LN105@args_verif:
	xor	eax, eax
	jmp	SHORT $LN106@args_verif
$LN104@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN106@args_verif:
	test	eax, eax
	jne	SHORT $LN26@args_verif
; Line 2330
	test	esi, esi
	jne	SHORT $LN28@args_verif
; Line 2331
	mov	DWORD PTR [ebp], 1
$LN28@args_verif:
; Line 2333
	mov	ebx, DWORD PTR _pargs$[esp+52]
	mov	DWORD PTR _email$1$[esp+56], esi
	add	DWORD PTR [ebx], 4
	jmp	$LN69@args_verif
$LN26@args_verif:
; Line 2334
	mov	ecx, OFFSET ??_C@_0L@BFLANKHI@?9verify_ip?$AA@
	mov	eax, ebx
	npad	5
$LL107@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN108@args_verif
	test	dl, dl
	je	SHORT $LN109@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN108@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL107@args_verif
$LN109@args_verif:
	xor	eax, eax
	jmp	SHORT $LN110@args_verif
$LN108@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN110@args_verif:
	test	eax, eax
	jne	SHORT $LN29@args_verif
; Line 2335
	test	esi, esi
	jne	SHORT $LN31@args_verif
; Line 2336
	mov	DWORD PTR [ebp], 1
$LN31@args_verif:
; Line 2338
	mov	ebx, DWORD PTR _pargs$[esp+52]
	mov	DWORD PTR _ipasc$1$[esp+56], esi
	add	DWORD PTR [ebx], 4
	jmp	$LN69@args_verif
$LN29@args_verif:
; Line 2339
	mov	ecx, OFFSET ??_C@_0BB@MAMKNOBM@?9ignore_critical?$AA@
	mov	eax, ebx
	npad	5
$LL111@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN112@args_verif
	test	dl, dl
	je	SHORT $LN113@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN112@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL111@args_verif
$LN113@args_verif:
	xor	eax, eax
	jmp	SHORT $LN114@args_verif
$LN112@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN114@args_verif:
	test	eax, eax
	jne	SHORT $LN32@args_verif
; Line 2340
	lea	edi, DWORD PTR [eax+16]
	jmp	$LN190@args_verif
$LN32@args_verif:
; Line 2341
	mov	ecx, OFFSET ??_C@_0P@KGEGMNHK@?9issuer_checks?$AA@
	mov	eax, ebx
$LL115@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN116@args_verif
	test	dl, dl
	je	SHORT $LN117@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN116@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL115@args_verif
$LN117@args_verif:
	xor	eax, eax
	jmp	SHORT $LN118@args_verif
$LN116@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN118@args_verif:
	test	eax, eax
	jne	SHORT $LN34@args_verif
; Line 2342
	lea	edi, DWORD PTR [eax+1]
	jmp	$LN190@args_verif
$LN34@args_verif:
; Line 2343
	mov	ecx, OFFSET ??_C@_0L@IIGOHFBF@?9crl_check?$AA@
	mov	eax, ebx
$LL119@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN120@args_verif
	test	dl, dl
	je	SHORT $LN121@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN120@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL119@args_verif
$LN121@args_verif:
	xor	eax, eax
	jmp	SHORT $LN122@args_verif
$LN120@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN122@args_verif:
	test	eax, eax
	jne	SHORT $LN36@args_verif
; Line 2344
	lea	edi, DWORD PTR [eax+4]
	jmp	$LN190@args_verif
$LN36@args_verif:
; Line 2345
	mov	ecx, OFFSET ??_C@_0P@JMLMJOLO@?9crl_check_all?$AA@
	mov	eax, ebx
$LL123@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN124@args_verif
	test	dl, dl
	je	SHORT $LN125@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN124@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL123@args_verif
$LN125@args_verif:
	xor	eax, eax
	jmp	SHORT $LN126@args_verif
$LN124@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN126@args_verif:
	test	eax, eax
	jne	SHORT $LN38@args_verif
; Line 2346
	lea	edi, DWORD PTR [eax+12]
	jmp	$LN190@args_verif
$LN38@args_verif:
; Line 2347
	mov	ecx, OFFSET ??_C@_0O@CHPKAFNL@?9policy_check?$AA@
	mov	eax, ebx
$LL127@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN128@args_verif
	test	dl, dl
	je	SHORT $LN129@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN128@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL127@args_verif
$LN129@args_verif:
	xor	eax, eax
	jmp	SHORT $LN130@args_verif
$LN128@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN130@args_verif:
	test	eax, eax
	jne	SHORT $LN40@args_verif
; Line 2348
	mov	edi, 128				; 00000080H
	jmp	$LN190@args_verif
$LN40@args_verif:
; Line 2349
	mov	ecx, OFFSET ??_C@_0BB@DFNKALPO@?9explicit_policy?$AA@
	mov	eax, ebx
	npad	6
$LL131@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN132@args_verif
	test	dl, dl
	je	SHORT $LN133@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN132@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL131@args_verif
$LN133@args_verif:
	xor	eax, eax
	jmp	SHORT $LN134@args_verif
$LN132@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN134@args_verif:
	test	eax, eax
	jne	SHORT $LN42@args_verif
; Line 2350
	mov	edi, 256				; 00000100H
	jmp	$LN190@args_verif
$LN42@args_verif:
; Line 2351
	mov	ecx, OFFSET ??_C@_0N@BIEOAHOE@?9inhibit_any?$AA@
	mov	eax, ebx
	npad	6
$LL135@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN136@args_verif
	test	dl, dl
	je	SHORT $LN137@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN136@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL135@args_verif
$LN137@args_verif:
	xor	eax, eax
	jmp	SHORT $LN138@args_verif
$LN136@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN138@args_verif:
	test	eax, eax
	jne	SHORT $LN44@args_verif
; Line 2352
	mov	edi, 512				; 00000200H
	jmp	$LN190@args_verif
$LN44@args_verif:
; Line 2353
	mov	ecx, OFFSET ??_C@_0N@IIAGEECI@?9inhibit_map?$AA@
	mov	eax, ebx
	npad	6
$LL139@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN140@args_verif
	test	dl, dl
	je	SHORT $LN141@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN140@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL139@args_verif
$LN141@args_verif:
	xor	eax, eax
	jmp	SHORT $LN142@args_verif
$LN140@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN142@args_verif:
	test	eax, eax
	jne	SHORT $LN46@args_verif
; Line 2354
	mov	edi, 1024				; 00000400H
	jmp	$LN190@args_verif
$LN46@args_verif:
; Line 2355
	mov	ecx, OFFSET ??_C@_0N@JAAINALF@?9x509_strict?$AA@
	mov	eax, ebx
	npad	6
$LL143@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN144@args_verif
	test	dl, dl
	je	SHORT $LN145@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN144@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL143@args_verif
$LN145@args_verif:
	xor	eax, eax
	jmp	SHORT $LN146@args_verif
$LN144@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN146@args_verif:
	test	eax, eax
	jne	SHORT $LN48@args_verif
; Line 2356
	lea	edi, DWORD PTR [eax+32]
	jmp	$LN190@args_verif
$LN48@args_verif:
; Line 2357
	mov	ecx, OFFSET ??_C@_0O@JLHDLMKC@?9extended_crl?$AA@
	mov	eax, ebx
$LL147@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN148@args_verif
	test	dl, dl
	je	SHORT $LN149@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN148@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL147@args_verif
$LN149@args_verif:
	xor	eax, eax
	jmp	SHORT $LN150@args_verif
$LN148@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN150@args_verif:
	test	eax, eax
	jne	SHORT $LN50@args_verif
; Line 2358
	mov	edi, 4096				; 00001000H
	jmp	$LN190@args_verif
$LN50@args_verif:
; Line 2359
	mov	ecx, OFFSET ??_C@_0M@NIBFNGJH@?9use_deltas?$AA@
	mov	eax, ebx
$LL151@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN152@args_verif
	test	dl, dl
	je	SHORT $LN153@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN152@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL151@args_verif
$LN153@args_verif:
	xor	eax, eax
	jmp	SHORT $LN154@args_verif
$LN152@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN154@args_verif:
	test	eax, eax
	jne	SHORT $LN52@args_verif
; Line 2360
	mov	edi, 8192				; 00002000H
	jmp	$LN190@args_verif
$LN52@args_verif:
; Line 2361
	mov	ecx, OFFSET ??_C@_0O@HLMNILI@?9policy_print?$AA@
	mov	eax, ebx
	npad	4
$LL155@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN156@args_verif
	test	dl, dl
	je	SHORT $LN157@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN156@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL155@args_verif
$LN157@args_verif:
	xor	eax, eax
	jmp	SHORT $LN158@args_verif
$LN156@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN158@args_verif:
	test	eax, eax
	jne	SHORT $LN54@args_verif
; Line 2362
	mov	edi, 2048				; 00000800H
	jmp	$LN190@args_verif
$LN54@args_verif:
; Line 2363
	mov	ecx, OFFSET ??_C@_0O@HOJLLGLJ@?9check_ss_sig?$AA@
	mov	eax, ebx
	npad	6
$LL159@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN160@args_verif
	test	dl, dl
	je	SHORT $LN161@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN160@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL159@args_verif
$LN161@args_verif:
	xor	eax, eax
	jmp	SHORT $LN162@args_verif
$LN160@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN162@args_verif:
	test	eax, eax
	jne	SHORT $LN56@args_verif
; Line 2364
	mov	edi, 16384				; 00004000H
	jmp	$LN190@args_verif
$LN56@args_verif:
; Line 2365
	mov	ecx, OFFSET ??_C@_0P@FAJCKKIM@?9trusted_first?$AA@
	mov	eax, ebx
	npad	6
$LL163@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN164@args_verif
	test	dl, dl
	je	SHORT $LN165@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN164@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL163@args_verif
$LN165@args_verif:
	xor	eax, eax
	jmp	SHORT $LN166@args_verif
$LN164@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN166@args_verif:
	test	eax, eax
	jne	SHORT $LN58@args_verif
; Line 2366
	mov	edi, 32768				; 00008000H
	jmp	$LN190@args_verif
$LN58@args_verif:
; Line 2367
	mov	ecx, OFFSET ??_C@_0BB@CJLNDP@?9suiteB_128_only?$AA@
	mov	eax, ebx
	npad	6
$LL167@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN168@args_verif
	test	dl, dl
	je	SHORT $LN169@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN168@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL167@args_verif
$LN169@args_verif:
	xor	eax, eax
	jmp	SHORT $LN170@args_verif
$LN168@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN170@args_verif:
	test	eax, eax
	jne	SHORT $LN60@args_verif
; Line 2368
	mov	edi, 65536				; 00010000H
	jmp	$LN190@args_verif
$LN60@args_verif:
; Line 2369
	mov	ecx, OFFSET ??_C@_0M@PEHELDMD@?9suiteB_128?$AA@
	mov	eax, ebx
	npad	6
$LL171@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN172@args_verif
	test	dl, dl
	je	SHORT $LN173@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN172@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL171@args_verif
$LN173@args_verif:
	xor	eax, eax
	jmp	SHORT $LN174@args_verif
$LN172@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN174@args_verif:
	test	eax, eax
	jne	SHORT $LN62@args_verif
; Line 2370
	mov	edi, 196608				; 00030000H
	jmp	$LN190@args_verif
$LN62@args_verif:
; Line 2371
	mov	ecx, OFFSET ??_C@_0M@CMOLEKI@?9suiteB_192?$AA@
	mov	eax, ebx
	npad	6
$LL175@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN176@args_verif
	test	dl, dl
	je	SHORT $LN177@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN176@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL175@args_verif
$LN177@args_verif:
	xor	eax, eax
	jmp	SHORT $LN178@args_verif
$LN176@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN178@args_verif:
	test	eax, eax
	jne	SHORT $LN64@args_verif
; Line 2372
	mov	edi, 131072				; 00020000H
	jmp	SHORT $LN190@args_verif
$LN64@args_verif:
; Line 2373
	mov	ecx, OFFSET ??_C@_0P@MPJEMPGB@?9partial_chain?$AA@
	mov	eax, ebx
$LL179@args_verif:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN180@args_verif
	test	dl, dl
	je	SHORT $LN181@args_verif
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN180@args_verif
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL179@args_verif
$LN181@args_verif:
	xor	eax, eax
	jmp	SHORT $LN182@args_verif
$LN180@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN182@args_verif:
	test	eax, eax
	jne	SHORT $LN66@args_verif
; Line 2374
	mov	edi, 524288				; 00080000H
	jmp	SHORT $LN190@args_verif
$LN66@args_verif:
; Line 2375
	mov	eax, OFFSET ??_C@_0P@PNNLIPKE@?9no_alt_chains?$AA@
	npad	4
$LL183@args_verif:
	mov	cl, BYTE PTR [ebx]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN184@args_verif
	test	cl, cl
	je	SHORT $LN185@args_verif
	mov	cl, BYTE PTR [ebx+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN184@args_verif
	add	ebx, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL183@args_verif
$LN185@args_verif:
	xor	eax, eax
	jmp	SHORT $LN186@args_verif
$LN184@args_verif:
	sbb	eax, eax
	or	eax, 1
$LN186@args_verif:
	test	eax, eax
	jne	$LN68@args_verif
; Line 2376
	mov	edi, 1048576				; 00100000H
$LN190@args_verif:
	mov	ebx, DWORD PTR _pargs$[esp+52]
$LN69@args_verif:
; Line 2380
	cmp	DWORD PTR [ebp], 0
; Line 2381
	mov	esi, DWORD PTR _pm$[esp+52]
	je	SHORT $LN70@args_verif
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN71@args_verif
; Line 2382
	push	eax
	call	_X509_VERIFY_PARAM_free
	add	esp, 4
$LN71@args_verif:
; Line 2383
	mov	DWORD PTR [esi], 0
; Line 2384
	jmp	$end$193
$LN70@args_verif:
; Line 2387
	cmp	DWORD PTR [esi], 0
	jne	SHORT $LN72@args_verif
	call	_X509_VERIFY_PARAM_new
	mov	DWORD PTR [esi], eax
	test	eax, eax
	je	$LN191@args_verif
$LN72@args_verif:
; Line 2392
	mov	eax, DWORD PTR _otmp$1$[esp+56]
	test	eax, eax
	je	SHORT $LN73@args_verif
; Line 2393
	push	eax
	push	DWORD PTR [esi]
	call	_X509_VERIFY_PARAM_add0_policy
	add	esp, 8
$LN73@args_verif:
; Line 2394
	test	edi, edi
	je	SHORT $LN74@args_verif
; Line 2395
	push	edi
	push	DWORD PTR [esi]
	call	_X509_VERIFY_PARAM_set_flags
	add	esp, 8
$LN74@args_verif:
; Line 2397
	mov	eax, DWORD PTR _purpose$1$[esp+56]
	test	eax, eax
	je	SHORT $LN75@args_verif
; Line 2398
	push	eax
	push	DWORD PTR [esi]
	call	_X509_VERIFY_PARAM_set_purpose
	add	esp, 8
$LN75@args_verif:
; Line 2400
	mov	eax, DWORD PTR _depth$1$[esp+56]
	test	eax, eax
	js	SHORT $LN76@args_verif
; Line 2401
	push	eax
	push	DWORD PTR [esi]
	call	_X509_VERIFY_PARAM_set_depth
	add	esp, 8
$LN76@args_verif:
; Line 2403
	mov	ecx, DWORD PTR _at_time$[esp+56]
	mov	eax, ecx
	mov	edx, DWORD PTR _at_time$[esp+60]
	or	eax, edx
	je	SHORT $LN77@args_verif
; Line 2404
	push	edx
	push	ecx
	push	DWORD PTR [esi]
	call	_X509_VERIFY_PARAM_set_time
	add	esp, 12					; 0000000cH
$LN77@args_verif:
; Line 2406
	mov	eax, DWORD PTR _hostname$1$[esp+56]
	test	eax, eax
	je	SHORT $LN78@args_verif
	push	0
	push	eax
	push	DWORD PTR [esi]
	call	_X509_VERIFY_PARAM_set1_host
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN78@args_verif
; Line 2407
	mov	DWORD PTR [ebp], 1
$LN78@args_verif:
; Line 2409
	mov	eax, DWORD PTR _email$1$[esp+56]
	test	eax, eax
	je	SHORT $LN79@args_verif
	push	0
	push	eax
	push	DWORD PTR [esi]
	call	_X509_VERIFY_PARAM_set1_email
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN79@args_verif
; Line 2410
	mov	DWORD PTR [ebp], 1
$LN79@args_verif:
; Line 2412
	mov	eax, DWORD PTR _ipasc$1$[esp+56]
	test	eax, eax
	je	SHORT $end$193
	push	eax
	push	DWORD PTR [esi]
	call	_X509_VERIFY_PARAM_set1_ip_asc
	add	esp, 8
	test	eax, eax
	jne	SHORT $end$193
$LN191@args_verif:
; Line 2413
	mov	DWORD PTR [ebp], 1
$end$193:
; Line 2417
	add	DWORD PTR [ebx], 4
; Line 2419
	mov	ecx, DWORD PTR _pargc$[esp+52]
	mov	eax, DWORD PTR [ebx]
	test	ecx, ecx
	je	SHORT $LN81@args_verif
; Line 2420
	sub	eax, DWORD PTR _oldargs$1$[esp+56]
	sar	eax, 2
	sub	DWORD PTR [ecx], eax
$LN81@args_verif:
; Line 2422
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 2424
	add	esp, 40					; 00000028H
	ret	0
$LN68@args_verif:
	pop	edi
	pop	esi
	pop	ebp
; Line 2378
	xor	eax, eax
	pop	ebx
; Line 2424
	add	esp, 40					; 00000028H
	ret	0
_args_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _parse_name
_TEXT	SEGMENT
_ne_types$1$ = -20					; size = 4
tv466 = -16						; size = 4
_n$1$ = -16						; size = 4
_mval$1$ = -12						; size = 4
_buf$1$ = -8						; size = 4
_ne_num$1$ = -4						; size = 4
_ne_values$1$ = 8					; size = 4
_subject$ = 8						; size = 4
_chtype$ = 12						; size = 4
_multirdn$ = 16						; size = 4
_parse_name PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2131
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 2132
	mov	edi, DWORD PTR _subject$[esp+32]
	mov	esi, edi
	lea	ecx, DWORD PTR [esi+1]
$LL60@parse_name:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL60@parse_name
	sub	esi, ecx
; Line 2135
	push	2135					; 00000857H
	inc	esi
	push	OFFSET ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
	push	esi
	call	_CRYPTO_malloc
; Line 2136
	shr	esi, 1
	mov	ebp, eax
; Line 2137
	push	2137					; 00000859H
	inc	esi
	mov	DWORD PTR _buf$1$[esp+52], ebp
	shl	esi, 2
	push	OFFSET ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
	push	esi
	call	_CRYPTO_malloc
; Line 2138
	push	2138					; 0000085aH
	mov	ebx, eax
	push	OFFSET ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
	push	esi
	mov	DWORD PTR _ne_types$1$[esp+72], ebx
	call	_CRYPTO_malloc
; Line 2139
	push	2139					; 0000085bH
	push	OFFSET ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
	push	esi
	mov	DWORD PTR _ne_values$1$[esp+80], eax
	call	_CRYPTO_malloc
; Line 2141
	mov	ecx, ebp
	add	esp, 48					; 00000030H
; Line 2142
	xor	ebp, ebp
	mov	edx, eax
	mov	DWORD PTR _mval$1$[esp+36], edx
	mov	DWORD PTR _ne_num$1$[esp+36], ebp
; Line 2147
	cmp	ecx, ebp
	je	$LN12@parse_name
	test	ebx, ebx
	je	$LN12@parse_name
	mov	esi, DWORD PTR _ne_values$1$[esp+32]
	test	esi, esi
	je	$LN12@parse_name
	test	edx, edx
	je	$LN12@parse_name
; Line 2152
	cmp	BYTE PTR [edi], 47			; 0000002fH
	je	SHORT $LN13@parse_name
; Line 2153
	push	OFFSET ??_C@_0CC@MFKPEIBE@Subject?5does?5not?5start?5with?5?8?1?8?4@
$LN64@parse_name:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2154
	xor	eax, eax
	jmp	$error$67
$LN13@parse_name:
; Line 2156
	lea	eax, DWORD PTR [edi+1]
; Line 2159
	mov	DWORD PTR [edx], ebp
; Line 2161
	cmp	BYTE PTR [eax], 0
	je	$LN3@parse_name
; Line 2156
	mov	edi, esi
	lea	esi, DWORD PTR [edx+4]
; Line 2161
	mov	edx, ebx
	mov	ebx, DWORD PTR _multirdn$[esp+32]
	sub	edx, DWORD PTR _ne_values$1$[esp+32]
	mov	DWORD PTR tv466[esp+36], edx
	npad	4
$LL2@parse_name:
; Line 2163
	mov	DWORD PTR [edx+edi], ecx
; Line 2164
	mov	dl, BYTE PTR [eax]
	test	dl, dl
	je	SHORT $LN45@parse_name
	npad	7
$LL4@parse_name:
; Line 2165
	cmp	dl, 92					; 0000005cH
	jne	SHORT $LN14@parse_name
; Line 2167
	mov	dl, BYTE PTR [eax+1]
	test	dl, dl
	je	$LN16@parse_name
; Line 2168
	mov	BYTE PTR [ecx], dl
	inc	ecx
	add	eax, 2
; Line 2173
	jmp	SHORT $LN19@parse_name
$LN14@parse_name:
; Line 2174
	cmp	dl, 61					; 0000003dH
	je	SHORT $LN42@parse_name
; Line 2179
	mov	BYTE PTR [ecx], dl
	inc	ecx
	inc	eax
$LN19@parse_name:
; Line 2164
	mov	dl, BYTE PTR [eax]
	test	dl, dl
	jne	SHORT $LL4@parse_name
$LN45@parse_name:
; Line 2182
	push	ebp
	push	OFFSET ??_C@_0EN@LIPKONBC@end?5of?5string?5encountered?5while?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
	xor	eax, eax
	jmp	$error$67
$LN42@parse_name:
; Line 2175
	inc	eax
; Line 2176
	mov	BYTE PTR [ecx], 0
	inc	ecx
; Line 2181
	cmp	BYTE PTR [eax], 0
	je	SHORT $LN45@parse_name
; Line 2187
	mov	DWORD PTR [edi], ecx
; Line 2188
	mov	dl, BYTE PTR [eax]
	test	dl, dl
	je	SHORT $LN7@parse_name
$LL6@parse_name:
; Line 2189
	cmp	dl, 92					; 0000005cH
	jne	SHORT $LN21@parse_name
; Line 2190
	mov	dl, BYTE PTR [eax+1]
	test	dl, dl
	je	SHORT $LN16@parse_name
; Line 2191
	mov	BYTE PTR [ecx], dl
	inc	ecx
	add	eax, 2
; Line 2196
	jmp	SHORT $LN28@parse_name
$LN21@parse_name:
; Line 2197
	cmp	dl, 47					; 0000002fH
	je	SHORT $LN43@parse_name
; Line 2202
	cmp	dl, 43					; 0000002bH
	jne	SHORT $LN27@parse_name
	test	ebx, ebx
	jne	SHORT $LN44@parse_name
$LN27@parse_name:
; Line 2210
	mov	BYTE PTR [ecx], dl
	inc	ecx
	inc	eax
$LN28@parse_name:
; Line 2188
	mov	dl, BYTE PTR [eax]
	test	dl, dl
	jne	SHORT $LL6@parse_name
	jmp	SHORT $LN7@parse_name
$LN44@parse_name:
; Line 2207
	mov	DWORD PTR [esi], -1
	jmp	SHORT $LN63@parse_name
$LN43@parse_name:
; Line 2200
	mov	DWORD PTR [esi], 0
$LN63@parse_name:
; Line 2198
	inc	eax
$LN7@parse_name:
; Line 2212
	mov	BYTE PTR [ecx], 0
; Line 2213
	inc	ebp
	inc	ecx
	mov	DWORD PTR _ne_num$1$[esp+36], ebp
	add	edi, 4
	add	esi, 4
	cmp	BYTE PTR [eax], 0
	je	SHORT $LN61@parse_name
; Line 2161
	mov	edx, DWORD PTR tv466[esp+36]
	jmp	$LL2@parse_name
$LN16@parse_name:
; Line 2170
	push	OFFSET ??_C@_0CD@EOHKOJGN@escape?5character?5at?5end?5of?5strin@
; Line 2172
	jmp	$LN64@parse_name
$LN61@parse_name:
	mov	ebx, DWORD PTR _ne_types$1$[esp+36]
$LN3@parse_name:
; Line 2216
	call	_X509_NAME_new
	mov	DWORD PTR _n$1$[esp+36], eax
	test	eax, eax
	je	$error$67
; Line 2219
	xor	edi, edi
	test	ebp, ebp
	jle	SHORT $LN9@parse_name
	mov	ebp, DWORD PTR _mval$1$[esp+36]
	mov	esi, ebx
	sub	ebp, ebx
	mov	ebx, DWORD PTR _ne_values$1$[esp+32]
	sub	ebx, DWORD PTR _ne_types$1$[esp+36]
$LL10@parse_name:
; Line 2220
	push	DWORD PTR [esi]
	call	_OBJ_txt2nid
	mov	ecx, eax
	add	esp, 4
	test	ecx, ecx
	jne	SHORT $LN30@parse_name
; Line 2221
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_0DA@DIKEDNCG@Subject?5Attribute?5?$CFs?5has?5no?5know@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2224
	jmp	SHORT $LN8@parse_name
$LN30@parse_name:
; Line 2227
	mov	eax, DWORD PTR [ebx+esi]
	cmp	BYTE PTR [eax], 0
	jne	SHORT $LN31@parse_name
; Line 2228
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_0DF@IJPKHMNK@No?5value?5provided?5for?5Subject?5At@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 2231
	jmp	SHORT $LN8@parse_name
$LN31@parse_name:
; Line 2234
	push	DWORD PTR [esi+ebp]
	push	-1
	push	-1
	push	eax
	push	DWORD PTR _chtype$[esp+48]
	push	ecx
	push	DWORD PTR _n$1$[esp+60]
	call	_X509_NAME_add_entry_by_NID
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	SHORT $LN62@parse_name
$LN8@parse_name:
; Line 2219
	inc	edi
	add	esi, 4
	cmp	edi, DWORD PTR _ne_num$1$[esp+36]
	jl	SHORT $LL10@parse_name
$LN9@parse_name:
; Line 2239
	push	DWORD PTR _ne_values$1$[esp+32]
	call	_CRYPTO_free
; Line 2240
	push	DWORD PTR _ne_types$1$[esp+40]
	call	_CRYPTO_free
; Line 2241
	push	DWORD PTR _buf$1$[esp+44]
	call	_CRYPTO_free
; Line 2242
	push	DWORD PTR _mval$1$[esp+48]
	call	_CRYPTO_free
; Line 2243
	mov	eax, DWORD PTR _n$1$[esp+52]
	add	esp, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 2256
	add	esp, 20					; 00000014H
	ret	0
$LN12@parse_name:
; Line 2148
	push	OFFSET ??_C@_0O@NPENBAOL@malloc?5error?6?$AA@
	jmp	$LN64@parse_name
$LN62@parse_name:
	mov	eax, DWORD PTR _n$1$[esp+36]
$error$67:
; Line 2246
	push	eax
	call	_X509_NAME_free
; Line 2247
	mov	eax, DWORD PTR _ne_values$1$[esp+36]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN33@parse_name
; Line 2248
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN33@parse_name:
; Line 2249
	mov	eax, DWORD PTR _ne_types$1$[esp+36]
	test	eax, eax
	je	SHORT $LN34@parse_name
; Line 2250
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN34@parse_name:
; Line 2251
	mov	eax, DWORD PTR _mval$1$[esp+36]
	test	eax, eax
	je	SHORT $LN35@parse_name
; Line 2252
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN35@parse_name:
; Line 2253
	mov	eax, DWORD PTR _buf$1$[esp+36]
	test	eax, eax
	je	SHORT $LN36@parse_name
; Line 2254
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN36@parse_name:
; Line 2255
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 2256
	add	esp, 20					; 00000014H
	ret	0
_parse_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _parse_yesno
_TEXT	SEGMENT
_str$ = 8						; size = 4
_def$ = 12						; size = 4
_parse_yesno PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2102
	mov	eax, DWORD PTR _str$[esp-4]
	mov	ecx, DWORD PTR _def$[esp-4]
	test	eax, eax
	je	SHORT $LN10@parse_yesn
; Line 2103
	movsx	eax, BYTE PTR [eax]
	add	eax, -48				; ffffffd0H
	cmp	eax, 73					; 00000049H
	ja	SHORT $LN10@parse_yesn
	movzx	eax, BYTE PTR $LN9@parse_yesn[eax]
	jmp	DWORD PTR $LN12@parse_yesn[eax*4]
$LN5@parse_yesn:
; Line 2123
	xor	eax, eax
; Line 2124
	ret	0
$LN6@parse_yesn:
; Line 2123
	mov	eax, 1
; Line 2124
	ret	0
$LN10@parse_yesn:
; Line 2123
	mov	eax, ecx
; Line 2124
	ret	0
	npad	3
$LN12@parse_yesn:
	DD	$LN5@parse_yesn
	DD	$LN6@parse_yesn
	DD	$LN10@parse_yesn
$LN9@parse_yesn:
	DB	0
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
_parse_yesno ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _index_name_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_index_name_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1643
	mov	eax, DWORD PTR _b$[esp-4]
	mov	ecx, DWORD PTR [eax+20]
	mov	eax, DWORD PTR _a$[esp-4]
	mov	eax, DWORD PTR [eax+20]
	npad	2
$LL3@index_name:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN4@index_name
	test	dl, dl
	je	SHORT $LN5@index_name
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN4@index_name
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL3@index_name
$LN5@index_name:
	xor	eax, eax
; Line 1644
	ret	0
$LN4@index_name:
; Line 1643
	sbb	eax, eax
	or	eax, 1
; Line 1644
	ret	0
_index_name_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _free_index
_TEXT	SEGMENT
_db$ = 8						; size = 4
_free_index PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2091
	push	esi
; Line 2092
	mov	esi, DWORD PTR _db$[esp]
	test	esi, esi
	je	SHORT $LN2@free_index
; Line 2093
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN3@free_index
; Line 2094
	push	eax
	call	_TXT_DB_free
	add	esp, 4
$LN3@free_index:
; Line 2095
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN2@free_index:
	pop	esi
; Line 2097
	ret	0
_free_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rotate_index
_TEXT	SEGMENT
_i$1$ = -1288						; size = 4
_buf$ = -1284						; size = 1280
__$ArrayPad$ = -4					; size = 4
_dbfile$ = 8						; size = 4
_new_suffix$ = 12					; size = 4
_old_suffix$ = 16					; size = 4
_rotate_index PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 2002
	mov	eax, 1288				; 00000508H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1288], eax
	push	ebx
	mov	ebx, DWORD PTR _old_suffix$[esp+1288]
	push	ebp
	mov	ebp, DWORD PTR _new_suffix$[esp+1292]
	push	esi
	mov	esi, DWORD PTR _dbfile$[esp+1296]
; Line 2006
	mov	ecx, esi
	push	edi
	lea	edx, DWORD PTR [ecx+1]
$LL9@rotate_ind:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL9@rotate_ind
	sub	ecx, edx
	mov	edx, ebx
	lea	edi, DWORD PTR [edx+1]
$LL10@rotate_ind:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL10@rotate_ind
	sub	edx, edi
	lea	eax, DWORD PTR [edx+ecx]
; Line 2007
	mov	ecx, esi
	mov	DWORD PTR _i$1$[esp+1304], eax
	lea	edx, DWORD PTR [ecx+1]
	npad	7
$LL11@rotate_ind:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL11@rotate_ind
	sub	ecx, edx
	mov	edx, ebp
	lea	edi, DWORD PTR [edx+1]
	npad	2
$LL12@rotate_ind:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL12@rotate_ind
	sub	edx, edi
	lea	eax, DWORD PTR [edx+ecx]
; Line 2008
	cmp	DWORD PTR _i$1$[esp+1304], eax
	cmovg	eax, DWORD PTR _i$1$[esp+1304]
; Line 2010
	add	eax, 6
	cmp	eax, 256				; 00000100H
	jl	SHORT $LN3@rotate_ind
; Line 2011
	push	OFFSET ??_C@_0BE@PGHNBIGG@file?5name?5too?5long?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 2087
	xor	eax, eax
	jmp	$LN1@rotate_ind
$LN3@rotate_ind:
; Line 2015
	push	esi
	push	OFFSET ??_C@_07MFJDFAJK@?$CFs?4attr?$AA@
	lea	eax, DWORD PTR _buf$[esp+2336]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 2020
	push	ebp
	push	esi
	push	OFFSET ??_C@_0L@FJEANEHK@?$CFs?4attr?4?$CFs?$AA@
	lea	eax, DWORD PTR _buf$[esp+1844]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 2025
	push	ebp
	push	esi
	push	OFFSET ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
	lea	eax, DWORD PTR _buf$[esp+1352]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 2030
	push	ebx
	push	esi
	push	OFFSET ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
	lea	eax, DWORD PTR _buf$[esp+1628]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
	add	esp, 76					; 0000004cH
; Line 2035
	lea	eax, DWORD PTR _buf$[esp+2072]
	push	ebx
	push	esi
	push	OFFSET ??_C@_0L@FJEANEHK@?$CFs?4attr?4?$CFs?$AA@
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 2044
	lea	eax, DWORD PTR _buf$[esp+1580]
	push	eax
	push	esi
	call	_WIN32_rename
	mov	edi, DWORD PTR __imp___errno
	add	esp, 28					; 0000001cH
	test	eax, eax
	jns	SHORT $LN4@rotate_ind
	call	edi
	cmp	DWORD PTR [eax], 2
	je	SHORT $LN4@rotate_ind
	call	edi
	cmp	DWORD PTR [eax], 20			; 00000014H
	je	SHORT $LN4@rotate_ind
; Line 2047
	lea	eax, DWORD PTR _buf$[esp+1560]
	push	eax
	push	esi
	push	OFFSET ??_C@_0BL@PJHGPAJJ@unable?5to?5rename?5?$CFs?5to?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2048
	push	OFFSET ??_C@_06CEHAOENB@reason?$AA@
	call	DWORD PTR __imp__perror
	add	esp, 20					; 00000014H
; Line 2087
	xor	eax, eax
	jmp	$LN1@rotate_ind
$LN4@rotate_ind:
; Line 2054
	lea	eax, DWORD PTR _buf$[esp+1304]
	push	esi
	push	eax
	call	_WIN32_rename
	add	esp, 8
	test	eax, eax
	jns	SHORT $LN5@rotate_ind
; Line 2055
	push	esi
	lea	eax, DWORD PTR _buf$[esp+1308]
	push	eax
	push	OFFSET ??_C@_0BL@PJHGPAJJ@unable?5to?5rename?5?$CFs?5to?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2056
	push	OFFSET ??_C@_06CEHAOENB@reason?$AA@
	call	DWORD PTR __imp__perror
; Line 2057
	lea	eax, DWORD PTR _buf$[esp+1580]
	push	esi
	push	eax
	call	_WIN32_rename
	add	esp, 28					; 0000001cH
; Line 2087
	xor	eax, eax
	jmp	$LN1@rotate_ind
$LN5@rotate_ind:
; Line 2065
	lea	eax, DWORD PTR _buf$[esp+2072]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+2332]
	push	eax
	call	_WIN32_rename
	add	esp, 8
	test	eax, eax
	jns	SHORT $LN6@rotate_ind
	call	edi
	cmp	DWORD PTR [eax], 2
	je	SHORT $LN6@rotate_ind
	call	edi
	cmp	DWORD PTR [eax], 20			; 00000014H
	je	SHORT $LN6@rotate_ind
; Line 2068
	lea	eax, DWORD PTR _buf$[esp+2072]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+2332]
	push	eax
	push	OFFSET ??_C@_0BL@PJHGPAJJ@unable?5to?5rename?5?$CFs?5to?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2069
	push	OFFSET ??_C@_06CEHAOENB@reason?$AA@
	call	DWORD PTR __imp__perror
; Line 2070
	lea	eax, DWORD PTR _buf$[esp+1324]
	push	eax
	push	esi
	call	_WIN32_rename
; Line 2071
	lea	eax, DWORD PTR _buf$[esp+1588]
	push	esi
	push	eax
	call	_WIN32_rename
	add	esp, 36					; 00000024H
; Line 2087
	xor	eax, eax
	jmp	$LN1@rotate_ind
$LN6@rotate_ind:
; Line 2077
	lea	eax, DWORD PTR _buf$[esp+2328]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+1820]
	push	eax
	call	_WIN32_rename
	add	esp, 8
	test	eax, eax
	jns	SHORT $LN7@rotate_ind
; Line 2078
	lea	eax, DWORD PTR _buf$[esp+2328]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+1820]
	push	eax
	push	OFFSET ??_C@_0BL@PJHGPAJJ@unable?5to?5rename?5?$CFs?5to?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2079
	push	OFFSET ??_C@_06CEHAOENB@reason?$AA@
	call	DWORD PTR __imp__perror
; Line 2080
	lea	eax, DWORD PTR _buf$[esp+2348]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+2096]
	push	eax
	call	_WIN32_rename
; Line 2081
	lea	eax, DWORD PTR _buf$[esp+1332]
	push	eax
	push	esi
	call	_WIN32_rename
; Line 2082
	lea	eax, DWORD PTR _buf$[esp+1596]
	push	esi
	push	eax
	call	_WIN32_rename
	add	esp, 44					; 0000002cH
$err$14:
; Line 2087
	xor	eax, eax
	jmp	SHORT $LN1@rotate_ind
$LN7@rotate_ind:
; Line 2085
	mov	eax, 1
$LN1@rotate_ind:
; Line 2088
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1304]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1288				; 00000508H
	ret	0
_rotate_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _save_index
_TEXT	SEGMENT
tv186 = -776						; size = 4
_buf$ = -772						; size = 768
__$ArrayPad$ = -4					; size = 4
_dbfile$ = 8						; size = 4
_suffix$ = 12						; size = 4
_db$ = 16						; size = 4
_save_index PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1938
	mov	eax, 776				; 00000308H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+776], eax
	push	ebx
	mov	ebx, DWORD PTR _db$[esp+776]
	push	ebp
	mov	ebp, DWORD PTR _suffix$[esp+780]
	push	esi
	mov	esi, DWORD PTR _dbfile$[esp+784]
	push	edi
; Line 1940
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
; Line 1943
	test	edi, edi
	jne	SHORT $LN2@save_index
; Line 1944
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$err$12:
; Line 1997
	xor	eax, eax
$LN1@save_index:
; Line 1998
	mov	ecx, DWORD PTR __$ArrayPad$[esp+792]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 776				; 00000308H
	ret	0
$LN2@save_index:
; Line 1948
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
$LL8@save_index:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL8@save_index
	sub	ecx, edx
	mov	edx, ebp
	lea	eax, DWORD PTR [edx+1]
	mov	DWORD PTR tv186[esp+792], eax
$LL9@save_index:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL9@save_index
	sub	edx, DWORD PTR tv186[esp+792]
; Line 1949
	lea	eax, DWORD PTR [ecx+6]
	add	eax, edx
	cmp	eax, 256				; 00000100H
	jl	SHORT $LN3@save_index
; Line 1950
	push	OFFSET ??_C@_0BE@PGHNBIGG@file?5name?5too?5long?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1951
	jmp	SHORT $err$12
$LN3@save_index:
; Line 1954
	push	esi
	push	OFFSET ??_C@_07MFJDFAJK@?$CFs?4attr?$AA@
	lea	eax, DWORD PTR _buf$[esp+1312]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 1959
	push	ebp
	push	esi
	push	OFFSET ??_C@_0L@FJEANEHK@?$CFs?4attr?4?$CFs?$AA@
	lea	eax, DWORD PTR _buf$[esp+1076]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 1964
	push	ebp
	push	esi
	push	OFFSET ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
	lea	eax, DWORD PTR _buf$[esp+840]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 1971
	lea	eax, DWORD PTR _buf$[esp+848]
	push	eax
	push	5
	push	108					; 0000006cH
	push	edi
	call	_BIO_ctrl
	add	esp, 72					; 00000048H
	test	eax, eax
	jg	SHORT $LN4@save_index
; Line 1972
	push	esi
	call	DWORD PTR __imp__perror
; Line 1973
	push	esi
$LN10@save_index:
	push	OFFSET ??_C@_0BF@BIGLPGDL@unable?5to?5open?5?8?$CFs?8?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 1974
	jmp	$err$12
$LN4@save_index:
; Line 1976
	push	DWORD PTR [ebx+4]
	push	edi
	call	_TXT_DB_write
	add	esp, 8
; Line 1977
	test	eax, eax
	jle	$err$12
; Line 1980
	push	edi
	call	_BIO_free
; Line 1982
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
; Line 1986
	lea	eax, DWORD PTR _buf$[esp+1056]
	push	eax
	push	5
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jg	SHORT $LN6@save_index
; Line 1987
	lea	eax, DWORD PTR _buf$[esp+1304]
	push	eax
	call	DWORD PTR __imp__perror
; Line 1988
	lea	eax, DWORD PTR _buf$[esp+1308]
	push	eax
	jmp	SHORT $LN10@save_index
$LN6@save_index:
; Line 1991
	cmp	DWORD PTR [ebx], 0
	mov	ecx, OFFSET ??_C@_02KAJCLHKP@no?$AA@
	mov	eax, OFFSET ??_C@_03ICICOMAL@yes?$AA@
	cmove	eax, ecx
	push	eax
	push	OFFSET ??_C@_0BF@HNOOHBO@unique_subject?5?$DN?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
; Line 1993
	push	esi
	call	_BIO_free
	add	esp, 16					; 00000010H
; Line 1995
	mov	eax, 1
	jmp	$LN1@save_index
_save_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _index_index
_TEXT	SEGMENT
_db$ = 8						; size = 4
_index_index PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1916
	push	esi
; Line 1917
	mov	esi, DWORD PTR _db$[esp]
	push	OFFSET _index_serial_LHASH_COMP
	push	OFFSET _index_serial_LHASH_HASH
	push	0
	push	3
	push	DWORD PTR [esi+4]
	call	_TXT_DB_create_index
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN2@index_inde
; Line 1920
	mov	eax, DWORD PTR [esi+4]
	push	DWORD PTR [eax+24]
	push	DWORD PTR [eax+20]
	push	DWORD PTR [eax+16]
	push	OFFSET ??_C@_0DC@FMBAALNJ@error?5creating?5serial?5number?5ind@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 20					; 00000014H
; Line 1923
	xor	eax, eax
	pop	esi
; Line 1935
	ret	0
$LN2@index_inde:
; Line 1927
	cmp	DWORD PTR [esi], 0
	je	SHORT $LN3@index_inde
	push	OFFSET _index_name_LHASH_COMP
	push	OFFSET _index_name_LHASH_HASH
	push	OFFSET _index_name_qual
	push	5
	push	DWORD PTR [esi+4]
	call	_TXT_DB_create_index
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN3@index_inde
; Line 1930
	mov	eax, DWORD PTR [esi+4]
	push	DWORD PTR [eax+24]
	push	DWORD PTR [eax+20]
	push	DWORD PTR [eax+16]
	push	OFFSET ??_C@_0CJ@LAHEODBL@error?5creating?5name?5index?3?$CI?$CFld?0?$CF@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	esi
; Line 1935
	ret	0
$LN3@index_inde:
; Line 1934
	mov	eax, 1
	pop	esi
; Line 1935
	ret	0
_index_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_index
_TEXT	SEGMENT
_errorline$ = -264					; size = 4
_buf$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_dbfile$ = 8						; size = 4
_db_attr$ = 12						; size = 4
_load_index PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1843
	mov	eax, 264				; 00000108H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+264], eax
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR _dbfile$[esp+272]
; Line 1844
	xor	esi, esi
; Line 1846
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	ebp, eax
; Line 1849
	mov	DWORD PTR _errorline$[esp+280], -1
	add	esp, 4
; Line 1851
	test	ebp, ebp
	jne	SHORT $LN2@load_index
; Line 1852
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 1853
	jmp	$LN18@load_index
$LN2@load_index:
; Line 1855
	push	edi
	push	3
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN3@load_index
; Line 1856
	push	edi
	call	DWORD PTR __imp__perror
; Line 1857
	push	edi
	push	OFFSET ??_C@_0BF@BIGLPGDL@unable?5to?5open?5?8?$CFs?8?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 1858
	jmp	$LN14@load_index
$LN3@load_index:
	push	ebx
; Line 1860
	push	6
	push	ebp
	call	_TXT_DB_read
	mov	ebx, eax
	add	esp, 8
	test	ebx, ebx
	je	$LN17@load_index
; Line 1864
	push	edi
	push	OFFSET ??_C@_07MFJDFAJK@?$CFs?4attr?$AA@
	lea	eax, DWORD PTR _buf$[esp+288]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 1868
	push	0
	call	_NCONF_new
	mov	edi, eax
; Line 1869
	lea	eax, DWORD PTR _errorline$[esp+300]
	push	eax
	lea	eax, DWORD PTR _buf$[esp+304]
	push	eax
	push	edi
	call	_NCONF_load
	add	esp, 32					; 00000020H
	test	eax, eax
	jg	SHORT $LN7@load_index
; Line 1870
	mov	eax, DWORD PTR _errorline$[esp+280]
	test	eax, eax
	jle	SHORT $LN6@load_index
; Line 1871
	lea	ecx, DWORD PTR _buf$[esp+280]
	push	ecx
	push	eax
	push	OFFSET ??_C@_0CN@KHNEBDJO@error?5on?5line?5?$CFld?5of?5db?5attribut@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 1874
	jmp	SHORT $err$21
$LN6@load_index:
; Line 1876
	push	edi
	call	_NCONF_free
	add	esp, 4
; Line 1877
	xor	edi, edi
$LN7@load_index:
; Line 1881
	push	1881					; 00000759H
	push	OFFSET ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
	push	8
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN8@load_index
; Line 1882
	push	OFFSET ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 1883
	jmp	SHORT $LN19@load_index
$LN8@load_index:
; Line 1888
	mov	eax, DWORD PTR _db_attr$[esp+276]
	mov	DWORD PTR [esi+4], ebx
	xor	ebx, ebx
	test	eax, eax
	je	SHORT $LN9@load_index
; Line 1889
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [esi], eax
	jmp	SHORT $LN10@load_index
$LN9@load_index:
; Line 1891
	mov	DWORD PTR [esi], 1
$LN10@load_index:
; Line 1894
	test	edi, edi
	je	SHORT $LN17@load_index
; Line 1895
	push	OFFSET ??_C@_0P@HOGDIGGB@unique_subject?$AA@
	push	0
	push	edi
	call	_NCONF_get_string
	add	esp, 12					; 0000000cH
; Line 1896
	test	eax, eax
	je	SHORT $err$21
; Line 1901
	push	1
	push	eax
	call	_parse_yesno
	mov	DWORD PTR [esi], eax
$LN19@load_index:
	add	esp, 8
$err$21:
; Line 1906
	test	edi, edi
	je	SHORT $LN13@load_index
; Line 1907
	push	edi
	call	_NCONF_free
	add	esp, 4
$LN13@load_index:
; Line 1908
	test	ebx, ebx
	je	SHORT $LN17@load_index
; Line 1909
	push	ebx
	call	_TXT_DB_free
	add	esp, 4
$LN17@load_index:
	pop	ebx
$LN14@load_index:
; Line 1911
	push	ebp
	call	_BIO_free_all
$LN18@load_index:
; Line 1913
	mov	ecx, DWORD PTR __$ArrayPad$[esp+280]
	add	esp, 4
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	ret	0
_load_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rand_serial
_TEXT	SEGMENT
_b$ = 8							; size = 4
_ai$ = 12						; size = 4
_rand_serial PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1816
	push	ebx
	push	esi
	push	edi
; Line 1819
	mov	edi, DWORD PTR _b$[esp+8]
	xor	ebx, ebx
	test	edi, edi
	je	SHORT $LN2@rand_seria
; Line 1820
	mov	esi, edi
	jmp	SHORT $LN3@rand_seria
$LN2@rand_seria:
; Line 1822
	call	_BN_new
	mov	esi, eax
$LN3@rand_seria:
; Line 1824
	test	esi, esi
	jne	SHORT $LN4@rand_seria
; Line 1825
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 1840
	ret	0
$LN4@rand_seria:
; Line 1827
	push	0
	push	0
	push	64					; 00000040H
	push	esi
	call	_BN_pseudo_rand
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $error$10
; Line 1829
	mov	eax, DWORD PTR _ai$[esp+8]
	test	eax, eax
	je	SHORT $LN6@rand_seria
	push	eax
	push	esi
	call	_BN_to_ASN1_INTEGER
	add	esp, 8
	test	eax, eax
	je	SHORT $error$10
$LN6@rand_seria:
; Line 1832
	mov	ebx, 1
$error$10:
; Line 1836
	test	edi, edi
	jne	SHORT $LN7@rand_seria
; Line 1837
	push	esi
	call	_BN_free
	add	esp, 4
$LN7@rand_seria:
; Line 1839
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 1840
	ret	0
_rand_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rotate_serial
_TEXT	SEGMENT
_i$1$ = -1288						; size = 4
_buf$ = -1284						; size = 1280
__$ArrayPad$ = -4					; size = 4
_serialfile$ = 8					; size = 4
_new_suffix$ = 12					; size = 4
_old_suffix$ = 16					; size = 4
_rotate_serial PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1763
	mov	eax, 1288				; 00000508H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1288], eax
	push	ebx
	mov	ebx, DWORD PTR _old_suffix$[esp+1288]
	push	ebp
	mov	ebp, DWORD PTR _new_suffix$[esp+1292]
	push	esi
	mov	esi, DWORD PTR _serialfile$[esp+1296]
; Line 1767
	mov	ecx, esi
	push	edi
	lea	edx, DWORD PTR [ecx+1]
$LL7@rotate_ser:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL7@rotate_ser
	sub	ecx, edx
	mov	edx, ebx
	lea	edi, DWORD PTR [edx+1]
$LL8@rotate_ser:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL8@rotate_ser
	sub	edx, edi
	lea	eax, DWORD PTR [edx+ecx]
; Line 1768
	mov	ecx, esi
	mov	DWORD PTR _i$1$[esp+1304], eax
	lea	edx, DWORD PTR [ecx+1]
	npad	7
$LL9@rotate_ser:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL9@rotate_ser
	sub	ecx, edx
	mov	edx, ebp
	lea	edi, DWORD PTR [edx+1]
	npad	2
$LL10@rotate_ser:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL10@rotate_ser
	sub	edx, edi
	lea	eax, DWORD PTR [edx+ecx]
; Line 1769
	cmp	DWORD PTR _i$1$[esp+1304], eax
	cmovg	eax, DWORD PTR _i$1$[esp+1304]
; Line 1771
	inc	eax
	cmp	eax, 256				; 00000100H
	jl	SHORT $LN3@rotate_ser
; Line 1772
	push	OFFSET ??_C@_0BE@PGHNBIGG@file?5name?5too?5long?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1812
	xor	eax, eax
	jmp	$LN1@rotate_ser
$LN3@rotate_ser:
; Line 1776
	push	ebp
	push	esi
	push	OFFSET ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
	lea	eax, DWORD PTR _buf$[esp+1316]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 1781
	push	ebx
	push	esi
	push	OFFSET ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
	lea	eax, DWORD PTR _buf$[esp+1592]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 1791
	lea	eax, DWORD PTR _buf$[esp+1600]
	push	eax
	push	esi
	call	_WIN32_rename
	add	esp, 48					; 00000030H
	test	eax, eax
	jns	SHORT $LN4@rotate_ser
	mov	edi, DWORD PTR __imp___errno
	call	edi
	cmp	DWORD PTR [eax], 2
	je	SHORT $LN4@rotate_ser
	call	edi
	cmp	DWORD PTR [eax], 20			; 00000014H
	je	SHORT $LN4@rotate_ser
; Line 1794
	lea	eax, DWORD PTR _buf$[esp+1560]
	push	eax
	push	esi
	push	OFFSET ??_C@_0BL@PJHGPAJJ@unable?5to?5rename?5?$CFs?5to?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1796
	push	OFFSET ??_C@_06CEHAOENB@reason?$AA@
	call	DWORD PTR __imp__perror
	add	esp, 20					; 00000014H
; Line 1812
	xor	eax, eax
	jmp	SHORT $LN1@rotate_ser
$LN4@rotate_ser:
; Line 1803
	lea	eax, DWORD PTR _buf$[esp+1304]
	push	esi
	push	eax
	call	_WIN32_rename
	add	esp, 8
	test	eax, eax
	jns	SHORT $LN5@rotate_ser
; Line 1804
	push	esi
	lea	eax, DWORD PTR _buf$[esp+1308]
	push	eax
	push	OFFSET ??_C@_0BL@PJHGPAJJ@unable?5to?5rename?5?$CFs?5to?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1806
	push	OFFSET ??_C@_06CEHAOENB@reason?$AA@
	call	DWORD PTR __imp__perror
; Line 1807
	lea	eax, DWORD PTR _buf$[esp+1580]
	push	esi
	push	eax
	call	_WIN32_rename
	add	esp, 28					; 0000001cH
$err$12:
; Line 1812
	xor	eax, eax
	jmp	SHORT $LN1@rotate_ser
$LN5@rotate_ser:
; Line 1810
	mov	eax, 1
$LN1@rotate_ser:
; Line 1813
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1304]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1288				; 00000508H
	ret	0
_rotate_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _save_serial
_TEXT	SEGMENT
tv166 = -272						; size = 4
_serial$GSCopy$1$ = -268				; size = 4
_retai$GSCopy$1$ = -264					; size = 4
_buf$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_serialfile$ = 8					; size = 4
_suffix$ = 12						; size = 4
_serial$ = 16						; size = 4
_retai$ = 20						; size = 4
_save_serial PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1705
	mov	eax, 272				; 00000110H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+272], eax
	mov	eax, DWORD PTR _serial$[esp+268]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _serialfile$[esp+276]
; Line 1708
	xor	ebx, ebx
	push	esi
	mov	esi, DWORD PTR _suffix$[esp+280]
; Line 1713
	mov	ecx, ebp
	push	edi
	mov	DWORD PTR _serial$GSCopy$1$[esp+288], eax
	xor	edi, edi
	mov	eax, DWORD PTR _retai$[esp+284]
	mov	DWORD PTR _retai$GSCopy$1$[esp+288], eax
	lea	edx, DWORD PTR [ecx+1]
	test	esi, esi
	jne	SHORT $LL15@save_seria
	npad	3
$LL14@save_seria:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL14@save_seria
	sub	ecx, edx
	jmp	SHORT $LN3@save_seria
	npad	5
$LL15@save_seria:
; Line 1715
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL15@save_seria
	sub	ecx, edx
	mov	edx, esi
	lea	eax, DWORD PTR [edx+1]
	mov	DWORD PTR tv166[esp+288], eax
$LL16@save_seria:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL16@save_seria
	sub	edx, DWORD PTR tv166[esp+288]
	inc	ecx
	add	ecx, edx
$LN3@save_seria:
; Line 1716
	cmp	ecx, 256				; 00000100H
	jl	SHORT $LN4@save_seria
; Line 1717
	push	OFFSET ??_C@_0BE@PGHNBIGG@file?5name?5too?5long?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1718
	jmp	$LN17@save_seria
$LN4@save_seria:
; Line 1722
	lea	eax, DWORD PTR _buf$[esp+288]
	test	esi, esi
	jne	SHORT $LN5@save_seria
	push	256					; 00000100H
	push	ebp
	push	eax
	call	_BUF_strlcpy
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN6@save_seria
$LN5@save_seria:
; Line 1725
	push	esi
	push	ebp
	push	OFFSET ??_C@_05NNFHCGPF@?$CFs?4?$CFs?$AA@
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
	add	esp, 20					; 00000014H
$LN6@save_seria:
; Line 1733
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
; Line 1734
	test	esi, esi
	jne	SHORT $LN7@save_seria
; Line 1735
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 1736
	jmp	$LN18@save_seria
$LN7@save_seria:
; Line 1738
	lea	eax, DWORD PTR _buf$[esp+288]
	push	eax
	push	5
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN8@save_seria
; Line 1739
	push	ebp
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 1740
	jmp	SHORT $err$20
$LN8@save_seria:
; Line 1743
	push	0
	push	DWORD PTR _serial$GSCopy$1$[esp+292]
	call	_BN_to_ASN1_INTEGER
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	jne	SHORT $LN9@save_seria
; Line 1744
	push	OFFSET ??_C@_0CJ@OGFINJBE@error?5converting?5serial?5to?5ASN?41@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1745
	jmp	SHORT $err$20
$LN9@save_seria:
; Line 1747
	push	edi
	push	esi
	call	_i2a_ASN1_INTEGER
; Line 1748
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_puts
; Line 1750
	mov	eax, DWORD PTR _retai$GSCopy$1$[esp+304]
	add	esp, 16					; 00000010H
	mov	ebx, 1
	test	eax, eax
	je	SHORT $err$20
; Line 1751
	mov	DWORD PTR [eax], edi
; Line 1752
	xor	edi, edi
$err$20:
; Line 1756
	push	esi
	call	_BIO_free_all
	add	esp, 4
; Line 1757
	test	edi, edi
	je	SHORT $LN17@save_seria
; Line 1758
	push	edi
	call	_ASN1_INTEGER_free
$LN18@save_seria:
	add	esp, 4
$LN17@save_seria:
; Line 1760
	mov	ecx, DWORD PTR __$ArrayPad$[esp+288]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	ret	0
_save_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_serial
_TEXT	SEGMENT
_retai$GSCopy$1$ = -1032				; size = 4
_buf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_serialfile$ = 8					; size = 4
_create$ = 12						; size = 4
_retai$ = 16						; size = 4
_load_serial PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1653
	mov	eax, 1032				; 00000408H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1032], eax
	mov	eax, DWORD PTR _retai$[esp+1028]
	push	ebx
	mov	ebx, DWORD PTR _serialfile$[esp+1032]
	push	esi
	push	edi
	mov	DWORD PTR _retai$GSCopy$1$[esp+1044], eax
; Line 1655
	xor	esi, esi
; Line 1659
	call	_ASN1_INTEGER_new
	mov	edi, eax
; Line 1660
	test	edi, edi
	je	$LN18@load_seria
; Line 1663
	push	ebp
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	ebp, eax
	add	esp, 4
	test	ebp, ebp
	jne	SHORT $LN3@load_seria
; Line 1664
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 1665
	jmp	SHORT $LN19@load_seria
$LN3@load_seria:
; Line 1668
	push	ebx
	push	3
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	$LN4@load_seria
; Line 1669
	cmp	DWORD PTR _create$[esp+1044], esi
	jne	SHORT $LN6@load_seria
; Line 1670
	push	ebx
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 1671
	jmp	SHORT $err$21
$LN6@load_seria:
; Line 1673
	call	_BN_new
	mov	esi, eax
; Line 1674
	test	esi, esi
	je	SHORT $LN9@load_seria
	push	edi
	push	esi
	call	_rand_serial
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@load_seria
$LN9@load_seria:
; Line 1675
	push	OFFSET ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN11@load_seria:
; Line 1691
	test	esi, esi
	je	SHORT $err$21
$LN16@load_seria:
	mov	eax, DWORD PTR _retai$GSCopy$1$[esp+1048]
	test	eax, eax
	je	SHORT $err$21
; Line 1692
	mov	DWORD PTR [eax], edi
; Line 1693
	xor	edi, edi
$err$21:
; Line 1697
	push	ebp
	call	_BIO_free
$LN19@load_seria:
	add	esp, 4
	pop	ebp
; Line 1698
	test	edi, edi
	je	SHORT $LN18@load_seria
; Line 1699
	push	edi
	call	_ASN1_INTEGER_free
	add	esp, 4
$LN18@load_seria:
; Line 1701
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1044]
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1032				; 00000408H
	ret	0
$LN4@load_seria:
; Line 1678
	push	1024					; 00000400H
	lea	eax, DWORD PTR _buf$[esp+1052]
	push	eax
	push	edi
	push	ebp
	call	_a2i_ASN1_INTEGER
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN10@load_seria
; Line 1679
	push	ebx
	push	OFFSET ??_C@_0BP@IBMKHAAI@unable?5to?5load?5number?5from?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1681
	jmp	SHORT $err$21
$LN10@load_seria:
; Line 1683
	push	0
	push	edi
	call	_ASN1_INTEGER_to_BN
	mov	esi, eax
	add	esp, 8
; Line 1684
	test	esi, esi
	jne	SHORT $LN16@load_seria
; Line 1685
	push	OFFSET ??_C@_0CM@KKKLPGOP@error?5converting?5number?5from?5bin@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1687
	jmp	$err$21
_load_serial ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _make_config_name
_TEXT	SEGMENT
_make_config_name PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1593
	push	ebx
	push	esi
	push	edi
; Line 1594
	call	_X509_get_default_cert_area
	mov	ebx, eax
; Line 1598
	mov	edx, ebx
	lea	eax, DWORD PTR [edx+1]
	npad	1
$LL4@make_confi:
	mov	cl, BYTE PTR [edx]
	inc	edx
	test	cl, cl
	jne	SHORT $LL4@make_confi
	sub	edx, eax
; Line 1599
	push	1599					; 0000063fH
	push	OFFSET ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
	lea	edi, DWORD PTR [edx+13]
	push	edi
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1600
	test	esi, esi
	jne	SHORT $LN2@make_confi
	pop	edi
	pop	esi
	pop	ebx
; Line 1609
	ret	0
$LN2@make_confi:
; Line 1602
	push	edi
	push	ebx
	push	esi
	call	_BUF_strlcpy
; Line 1604
	push	edi
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	push	esi
	call	_BUF_strlcat
; Line 1606
	push	edi
	push	OFFSET ??_C@_0M@CFEEHNHP@openssl?4cnf?$AA@
	push	esi
	call	_BUF_strlcat
	add	esp, 36					; 00000024H
; Line 1608
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 1609
	ret	0
_make_config_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_config
_TEXT	SEGMENT
_err$ = 8						; size = 4
_cnf$ = 12						; size = 4
_load_config PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1574
	cmp	DWORD PTR ?load_config_called@?1??load_config@@9@9, 0
	je	SHORT $LN2@load_confi
; Line 1575
	mov	eax, 1
; Line 1590
	ret	0
$LN2@load_confi:
	push	esi
; Line 1577
	mov	esi, DWORD PTR _cnf$[esp]
	mov	DWORD PTR ?load_config_called@?1??load_config@@9@9, 1
	test	esi, esi
	jne	SHORT $LN4@load_confi
; Line 1578
	mov	esi, DWORD PTR _config
; Line 1579
	test	esi, esi
	je	SHORT $LN5@load_confi
$LN4@load_confi:
; Line 1582
	call	_OPENSSL_load_builtin_modules
; Line 1584
	push	0
	push	0
	push	esi
	call	_CONF_modules_load
	add	esp, 12					; 0000000cH
	test	eax, eax
	jg	SHORT $LN5@load_confi
; Line 1585
	mov	esi, DWORD PTR _err$[esp]
	push	OFFSET ??_C@_0BL@IPMGKJPN@Error?5configuring?5OpenSSL?6?$AA@
	push	esi
	call	_BIO_printf
; Line 1586
	push	esi
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 1587
	xor	eax, eax
	pop	esi
; Line 1590
	ret	0
$LN5@load_confi:
; Line 1589
	mov	eax, 1
	pop	esi
; Line 1590
	ret	0
_load_config ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _setup_engine
_TEXT	SEGMENT
_err$ = 8						; size = 4
_engine$ = 12						; size = 4
_debug$ = 16						; size = 4
_setup_engine PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1536
	push	ebx
; Line 1539
	mov	ebx, DWORD PTR _engine$[esp]
	push	esi
	xor	esi, esi
	push	edi
	test	ebx, ebx
	je	$LN2@setup_engi
; Line 1540
	mov	ecx, OFFSET ??_C@_04HAPDLBFF@auto?$AA@
	mov	eax, ebx
$LL8@setup_engi:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN9@setup_engi
	test	dl, dl
	je	SHORT $LN10@setup_engi
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN9@setup_engi
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL8@setup_engi
$LN10@setup_engi:
	xor	eax, eax
	jmp	SHORT $LN11@setup_engi
$LN9@setup_engi:
	sbb	eax, eax
	or	eax, 1
$LN11@setup_engi:
	test	eax, eax
	jne	SHORT $LN3@setup_engi
; Line 1541
	push	OFFSET ??_C@_0BO@GLIGNJMA@enabling?5auto?5ENGINE?5support?6?$AA@
	push	DWORD PTR _err$[esp+12]
	call	_BIO_printf
	add	esp, 8
; Line 1542
	call	_ENGINE_register_all_complete
	pop	edi
	pop	esi
; Line 1543
	xor	eax, eax
	pop	ebx
; Line 1568
	ret	0
$LN3@setup_engi:
; Line 1546
	push	ebx
	call	_ENGINE_by_id
	mov	edi, DWORD PTR _err$[esp+12]
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	jne	SHORT $LN4@setup_engi
	push	DWORD PTR _debug$[esp+8]
	push	ebx
	push	edi
	call	_try_load_engine
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN4@setup_engi
; Line 1547
	push	ebx
	push	OFFSET ??_C@_0BF@FDAJFBF@invalid?5engine?5?$CC?$CFs?$CC?6?$AA@
	push	edi
	call	_BIO_printf
; Line 1548
	push	edi
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 1549
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 1568
	ret	0
$LN4@setup_engi:
; Line 1551
	cmp	DWORD PTR _debug$[esp+8], 0
	je	SHORT $LN5@setup_engi
; Line 1552
	push	0
	push	edi
	push	0
	push	1
	push	esi
	call	_ENGINE_ctrl
	add	esp, 20					; 00000014H
$LN5@setup_engi:
; Line 1554
	push	1
	push	0
	push	DWORD PTR _ui_method
	push	0
	push	OFFSET ??_C@_0BD@HNMPJJDL@SET_USER_INTERFACE?$AA@
	push	esi
	call	_ENGINE_ctrl_cmd
; Line 1555
	push	65535					; 0000ffffH
	push	esi
	call	_ENGINE_set_default
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN6@setup_engi
; Line 1556
	push	OFFSET ??_C@_0BH@OBPKDCDO@can?8t?5use?5that?5engine?6?$AA@
	push	edi
	call	_BIO_printf
; Line 1557
	push	edi
	call	_ERR_print_errors
; Line 1558
	push	esi
	call	_ENGINE_free
	add	esp, 16					; 00000010H
; Line 1559
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 1568
	ret	0
$LN6@setup_engi:
; Line 1562
	push	esi
	call	_ENGINE_get_id
	push	eax
	push	OFFSET ??_C@_0BC@CPAKBHCD@engine?5?$CC?$CFs?$CC?5set?4?6?$AA@
	push	edi
	call	_BIO_printf
; Line 1565
	push	esi
	call	_ENGINE_free
	add	esp, 20					; 00000014H
$LN2@setup_engi:
; Line 1567
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 1568
	ret	0
_setup_engine ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _setup_verify
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_CAfile$ = 12						; size = 4
_CApath$ = 16						; size = 4
_setup_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1486
	push	esi
	push	edi
; Line 1489
	call	_X509_STORE_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $end$14
; Line 1491
	call	_X509_LOOKUP_file
	push	eax
	push	esi
	call	_X509_STORE_add_lookup
	add	esp, 8
; Line 1492
	test	eax, eax
	je	SHORT $end$14
; Line 1494
	mov	edi, DWORD PTR _CAfile$[esp+4]
; Line 1495
	push	0
	test	edi, edi
	je	SHORT $LN4@setup_veri
	push	1
	push	edi
	push	1
	push	eax
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN5@setup_veri
; Line 1496
	push	edi
	push	OFFSET ??_C@_0BH@FHLAEOCH@Error?5loading?5file?5?$CFs?6?$AA@
$LN12@setup_veri:
; Line 1507
	push	DWORD PTR _bp$[esp+12]
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$end$14:
; Line 1516
	push	esi
	call	_X509_STORE_free
	add	esp, 4
; Line 1517
	xor	eax, eax
	pop	edi
	pop	esi
; Line 1518
	ret	0
$LN4@setup_veri:
; Line 1500
	push	3
	push	0
	push	1
	push	eax
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
$LN5@setup_veri:
; Line 1502
	call	_X509_LOOKUP_hash_dir
	push	eax
	push	esi
	call	_X509_STORE_add_lookup
	add	esp, 8
; Line 1503
	test	eax, eax
	je	SHORT $end$14
; Line 1505
	mov	edi, DWORD PTR _CApath$[esp+4]
; Line 1506
	push	0
	test	edi, edi
	je	SHORT $LN8@setup_veri
	push	1
	push	edi
	push	2
	push	eax
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN9@setup_veri
; Line 1507
	push	edi
	push	OFFSET ??_C@_0BM@OKGFCOK@Error?5loading?5directory?5?$CFs?6?$AA@
	jmp	SHORT $LN12@setup_veri
$LN8@setup_veri:
; Line 1511
	push	3
	push	0
	push	2
	push	eax
	call	_X509_LOOKUP_ctrl
	add	esp, 20					; 00000014H
$LN9@setup_veri:
; Line 1513
	call	_ERR_clear_error
	pop	edi
; Line 1514
	mov	eax, esi
	pop	esi
; Line 1518
	ret	0
_setup_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_crls
_TEXT	SEGMENT
_crls$ = -4						; size = 4
_err$ = 8						; size = 4
_file$ = 12						; size = 4
_format$ = 16						; size = 4
_pass$ = 20						; size = 4
_e$ = 24						; size = 4
_desc$ = 28						; size = 4
_load_crls PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1274
	mov	eax, 4
	call	__chkstk
; Line 1276
	lea	eax, DWORD PTR _crls$[esp+4]
	push	eax
	push	0
	push	DWORD PTR _desc$[esp+8]
	push	DWORD PTR _e$[esp+12]
	push	DWORD PTR _pass$[esp+16]
	push	DWORD PTR _format$[esp+20]
	push	DWORD PTR _file$[esp+24]
	push	DWORD PTR _err$[esp+28]
	call	_load_certs_crls
	neg	eax
	sbb	eax, eax
	and	eax, DWORD PTR _crls$[esp+36]
; Line 1279
	add	esp, 36					; 00000024H
	ret	0
_load_crls ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_certs
_TEXT	SEGMENT
_certs$ = -4						; size = 4
_err$ = 8						; size = 4
_file$ = 12						; size = 4
_format$ = 16						; size = 4
_pass$ = 20						; size = 4
_e$ = 24						; size = 4
_desc$ = 28						; size = 4
_load_certs PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1265
	mov	eax, 4
	call	__chkstk
; Line 1267
	push	0
	lea	eax, DWORD PTR _certs$[esp+8]
	push	eax
	push	DWORD PTR _desc$[esp+8]
	push	DWORD PTR _e$[esp+12]
	push	DWORD PTR _pass$[esp+16]
	push	DWORD PTR _format$[esp+20]
	push	DWORD PTR _file$[esp+24]
	push	DWORD PTR _err$[esp+28]
	call	_load_certs_crls
	neg	eax
	sbb	eax, eax
	and	eax, DWORD PTR _certs$[esp+36]
; Line 1270
	add	esp, 36					; 00000024H
	ret	0
_load_certs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_pubkey
_TEXT	SEGMENT
_cb_data$ = -8						; size = 8
_err$ = 8						; size = 4
_file$ = 12						; size = 4
_format$ = 16						; size = 4
_maybe_stdin$ = 20					; size = 4
_pass$ = 24						; size = 4
_e$ = 28						; size = 4
_key_descrip$ = 32					; size = 4
_load_pubkey PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1040
	mov	eax, 8
	call	__chkstk
; Line 1045
	mov	eax, DWORD PTR _pass$[esp+4]
	push	ebx
	push	ebp
	push	esi
; Line 1048
	mov	esi, DWORD PTR _err$[esp+16]
	push	edi
	mov	DWORD PTR _cb_data$[esp+24], eax
	xor	edi, edi
	mov	eax, DWORD PTR _file$[esp+20]
	mov	DWORD PTR _cb_data$[esp+28], eax
	test	eax, eax
	jne	SHORT $LN2@load_pubke
	cmp	DWORD PTR _maybe_stdin$[esp+20], edi
	je	SHORT $LN3@load_pubke
	mov	ebx, DWORD PTR _format$[esp+20]
	cmp	ebx, 7
	jne	SHORT $LN4@load_pubke
$LN3@load_pubke:
; Line 1049
	push	OFFSET ??_C@_0BG@OLBFGCBD@no?5keyfile?5specified?6?$AA@
	push	esi
	call	_BIO_printf
; Line 1050
	mov	ebx, DWORD PTR _key_descrip$[esp+28]
	add	esp, 8
	jmp	$LN33@load_pubke
$LN2@load_pubke:
; Line 1053
	mov	ebx, DWORD PTR _format$[esp+20]
	cmp	ebx, 7
	jne	SHORT $LN4@load_pubke
; Line 1054
	mov	ecx, DWORD PTR _e$[esp+20]
	test	ecx, ecx
	jne	SHORT $LN5@load_pubke
; Line 1055
	push	OFFSET ??_C@_0BF@MCNMEPFL@no?5engine?5specified?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	mov	ebx, DWORD PTR _key_descrip$[esp+28]
	add	esp, 8
	jmp	$LN33@load_pubke
$LN5@load_pubke:
; Line 1057
	lea	edx, DWORD PTR _cb_data$[esp+24]
	push	edx
	push	DWORD PTR _ui_method
	push	eax
	push	ecx
	call	_ENGINE_load_public_key
; Line 1058
	mov	ebx, DWORD PTR _key_descrip$[esp+36]
	add	esp, 16					; 00000010H
	mov	edi, eax
	jmp	$LN30@load_pubke
$LN4@load_pubke:
; Line 1061
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	ebp, eax
	add	esp, 4
; Line 1062
	test	ebp, ebp
	jne	SHORT $LN7@load_pubke
; Line 1063
	push	esi
	call	_ERR_print_errors
; Line 1064
	mov	ebx, DWORD PTR _key_descrip$[esp+24]
	add	esp, 4
	jmp	$LN33@load_pubke
$LN7@load_pubke:
; Line 1066
	mov	eax, DWORD PTR _file$[esp+20]
	test	eax, eax
	jne	SHORT $LN8@load_pubke
	cmp	DWORD PTR _maybe_stdin$[esp+20], edi
	je	SHORT $LN8@load_pubke
; Line 1069
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	eax
	push	4
	push	eax
	push	eax
	call	esi
	add	esp, 4
	push	eax
	call	DWORD PTR __imp__setvbuf
; Line 1072
	push	0
	call	esi
	push	eax
	push	0
	push	106					; 0000006aH
	push	ebp
	call	_BIO_ctrl
	mov	esi, DWORD PTR _err$[esp+56]
	add	esp, 36					; 00000024H
$LN10@load_pubke:
; Line 1078
	cmp	ebx, 1
	jne	SHORT $LN11@load_pubke
; Line 1079
	push	0
	push	ebp
	call	_d2i_PUBKEY_bio
; Line 1080
	mov	ebx, DWORD PTR _key_descrip$[esp+28]
	add	esp, 8
	mov	edi, eax
	jmp	$end$41
$LN8@load_pubke:
; Line 1073
	push	eax
	push	3
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN10@load_pubke
; Line 1074
	push	DWORD PTR _file$[esp+20]
	mov	ebx, DWORD PTR _key_descrip$[esp+24]
	push	ebx
	push	OFFSET ??_C@_0BF@JJKPOFNI@Error?5opening?5?$CFs?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
; Line 1075
	push	esi
	call	_ERR_print_errors
; Line 1076
	jmp	$LN35@load_pubke
$LN11@load_pubke:
; Line 1082
	cmp	ebx, 10					; 0000000aH
	jne	SHORT $LN13@load_pubke
; Line 1084
	push	0
	push	ebp
	call	_d2i_RSAPublicKey_bio
	add	esp, 8
$LN39@load_pubke:
	mov	ebx, eax
; Line 1085
	test	ebx, ebx
	je	SHORT $LN20@load_pubke
; Line 1086
	call	_EVP_PKEY_new
	mov	edi, eax
; Line 1087
	test	edi, edi
	je	SHORT $LN17@load_pubke
; Line 1088
	push	ebx
	push	edi
	call	_EVP_PKEY_set1_RSA
	add	esp, 8
$LN17@load_pubke:
; Line 1089
	push	ebx
	call	_RSA_free
; Line 1090
	mov	ebx, DWORD PTR _key_descrip$[esp+24]
	add	esp, 4
	jmp	$end$41
$LN13@load_pubke:
; Line 1092
	cmp	ebx, 9
	jne	SHORT $LN18@load_pubke
; Line 1094
	lea	eax, DWORD PTR _cb_data$[esp+24]
	push	eax
	push	OFFSET _password_callback
	push	0
	push	ebp
	call	_PEM_read_bio_RSAPublicKey
	add	esp, 16					; 00000010H
; Line 1102
	jmp	SHORT $LN39@load_pubke
$LN20@load_pubke:
; Line 1104
	mov	ebx, DWORD PTR _key_descrip$[esp+20]
	xor	edi, edi
	jmp	SHORT $end$41
$LN18@load_pubke:
; Line 1106
	cmp	ebx, 3
	jne	SHORT $LN23@load_pubke
; Line 1107
	lea	eax, DWORD PTR _cb_data$[esp+24]
	push	eax
	push	OFFSET _password_callback
	push	0
	push	ebp
	call	_PEM_read_bio_PUBKEY
; Line 1110
	mov	ebx, DWORD PTR _key_descrip$[esp+36]
	add	esp, 16					; 00000010H
	mov	edi, eax
	jmp	SHORT $end$41
$LN23@load_pubke:
; Line 1112
	cmp	ebx, 4
	je	SHORT $LN27@load_pubke
	cmp	ebx, 8
	je	SHORT $LN27@load_pubke
; Line 1116
	cmp	ebx, 11					; 0000000bH
	jne	SHORT $LN28@load_pubke
; Line 1117
	push	ebp
	call	_b2i_PublicKey_bio
	mov	ebx, DWORD PTR _key_descrip$[esp+24]
	add	esp, 4
	mov	edi, eax
	jmp	SHORT $end$41
$LN28@load_pubke:
; Line 1120
	push	OFFSET ??_C@_0CJ@DHFLKNAM@bad?5input?5format?5specified?5for?5k@
	push	esi
	call	_BIO_printf
; Line 1121
	mov	ebx, DWORD PTR _key_descrip$[esp+28]
	add	esp, 8
	jmp	SHORT $end$41
$LN27@load_pubke:
; Line 1113
	push	ebx
	mov	ebx, DWORD PTR _key_descrip$[esp+24]
	push	ebx
	push	DWORD PTR _file$[esp+28]
	push	ebp
	push	esi
	call	_load_netscape_key
	mov	edi, eax
$LN35@load_pubke:
	add	esp, 20					; 00000014H
$end$41:
; Line 1125
	push	ebp
	call	_BIO_free
	add	esp, 4
$LN30@load_pubke:
; Line 1126
	test	edi, edi
	jne	SHORT $LN34@load_pubke
$LN33@load_pubke:
; Line 1127
	push	ebx
	push	OFFSET ??_C@_0BD@DHEMONEO@unable?5to?5load?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN34@load_pubke:
; Line 1128
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1129
	add	esp, 8
	ret	0
_load_pubkey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_key
_TEXT	SEGMENT
_pkey$ = -12						; size = 4
_cb_data$ = -8						; size = 8
_err$ = 8						; size = 4
_file$ = 12						; size = 4
_format$ = 16						; size = 4
_maybe_stdin$ = 20					; size = 4
_pass$ = 24						; size = 4
_e$ = 28						; size = 4
_key_descrip$ = 32					; size = 4
_load_key PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 957
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 962
	mov	eax, DWORD PTR _pass$[esp+8]
	push	ebx
	push	ebp
; Line 965
	mov	ebp, DWORD PTR _key_descrip$[esp+16]
	push	esi
	mov	esi, DWORD PTR _file$[esp+20]
	mov	DWORD PTR _pkey$[esp+24], 0
	mov	DWORD PTR _cb_data$[esp+24], eax
	mov	DWORD PTR _cb_data$[esp+28], esi
	push	edi
	test	esi, esi
	jne	SHORT $LN2@load_key
	cmp	DWORD PTR _maybe_stdin$[esp+24], 0
	je	SHORT $LN3@load_key
	mov	ebx, DWORD PTR _format$[esp+24]
	cmp	ebx, 7
	jne	SHORT $LN4@load_key
$LN3@load_key:
; Line 966
	mov	edi, DWORD PTR _err$[esp+24]
	push	OFFSET ??_C@_0BG@OLBFGCBD@no?5keyfile?5specified?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
; Line 967
	jmp	$LN26@load_key
$LN2@load_key:
; Line 970
	mov	ebx, DWORD PTR _format$[esp+24]
	cmp	ebx, 7
	jne	SHORT $LN4@load_key
; Line 971
	mov	eax, DWORD PTR _e$[esp+24]
	test	eax, eax
	jne	SHORT $LN5@load_key
; Line 972
	mov	edi, DWORD PTR _err$[esp+24]
	push	OFFSET ??_C@_0BF@MCNMEPFL@no?5engine?5specified?6?$AA@
	push	edi
	call	_BIO_printf
	add	esp, 8
	jmp	$LN26@load_key
$LN5@load_key:
; Line 974
	lea	ecx, DWORD PTR _cb_data$[esp+28]
	push	ecx
	push	DWORD PTR _ui_method
	push	esi
	push	eax
	call	_ENGINE_load_private_key
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pkey$[esp+28], eax
; Line 975
	test	eax, eax
	jne	$LN27@load_key
; Line 976
	mov	edi, DWORD PTR _err$[esp+24]
	push	ebp
	push	OFFSET ??_C@_0BM@OODBDEPN@cannot?5load?5?$CFs?5from?5engine?6?$AA@
	push	edi
	call	_BIO_printf
; Line 977
	push	edi
	call	_ERR_print_errors
	add	esp, 16					; 00000010H
; Line 980
	jmp	$LN26@load_key
$LN4@load_key:
; Line 983
	call	_BIO_s_file
	push	eax
	call	_BIO_new
; Line 985
	mov	edi, DWORD PTR _err$[esp+28]
	mov	ebp, eax
	add	esp, 4
	test	ebp, ebp
	jne	SHORT $LN8@load_key
	push	edi
	call	_ERR_print_errors
; Line 986
	jmp	$LN31@load_key
$LN8@load_key:
; Line 988
	test	esi, esi
	jne	SHORT $LN9@load_key
	cmp	DWORD PTR _maybe_stdin$[esp+24], esi
	je	SHORT $LN9@load_key
; Line 991
	push	esi
	push	4
	push	esi
	push	esi
	mov	esi, DWORD PTR __imp____acrt_iob_func
	call	esi
	add	esp, 4
	push	eax
	call	DWORD PTR __imp__setvbuf
; Line 994
	push	0
	call	esi
	push	eax
	push	0
	push	106					; 0000006aH
	push	ebp
	call	_BIO_ctrl
	mov	esi, DWORD PTR _file$[esp+60]
	add	esp, 36					; 00000024H
$LN11@load_key:
; Line 1000
	cmp	ebx, 1
	jne	SHORT $LN12@load_key
; Line 1001
	push	0
	push	ebp
	call	_d2i_PrivateKey_bio
	add	esp, 8
	mov	DWORD PTR _pkey$[esp+28], eax
	jmp	$end$34
$LN9@load_key:
; Line 995
	push	esi
	push	3
	push	108					; 0000006cH
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN11@load_key
; Line 996
	mov	eax, DWORD PTR _key_descrip$[esp+24]
	push	esi
	push	eax
	push	OFFSET ??_C@_0BF@JJKPOFNI@Error?5opening?5?$CFs?5?$CFs?6?$AA@
	push	edi
	call	_BIO_printf
; Line 997
	push	edi
	call	_ERR_print_errors
; Line 998
	jmp	$LN32@load_key
$LN12@load_key:
; Line 1002
	cmp	ebx, 3
	jne	SHORT $LN14@load_key
; Line 1003
	lea	eax, DWORD PTR _cb_data$[esp+28]
	push	eax
	push	OFFSET _password_callback
	push	0
	push	ebp
	call	_PEM_read_bio_PrivateKey
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pkey$[esp+28], eax
; Line 1006
	jmp	$end$34
$LN14@load_key:
; Line 1008
	cmp	ebx, 4
	je	SHORT $LN18@load_key
	cmp	ebx, 8
	je	SHORT $LN18@load_key
; Line 1011
	cmp	ebx, 5
	jne	SHORT $LN19@load_key
; Line 1012
	push	0
	push	0
	lea	eax, DWORD PTR _pkey$[esp+36]
	push	eax
	lea	eax, DWORD PTR _cb_data$[esp+40]
	push	eax
	mov	eax, DWORD PTR _key_descrip$[esp+40]
	push	OFFSET _password_callback
	push	eax
	push	ebp
	push	edi
	call	_load_pkcs12
	add	esp, 32					; 00000020H
; Line 1016
	jmp	SHORT $end$34
$LN19@load_key:
; Line 1018
	cmp	ebx, 11					; 0000000bH
	jne	SHORT $LN22@load_key
; Line 1019
	push	ebp
	call	_b2i_PrivateKey_bio
	add	esp, 4
	mov	DWORD PTR _pkey$[esp+28], eax
	jmp	SHORT $end$34
$LN22@load_key:
; Line 1020
	cmp	ebx, 12					; 0000000cH
	jne	SHORT $LN24@load_key
; Line 1021
	lea	eax, DWORD PTR _cb_data$[esp+28]
	push	eax
	push	OFFSET _password_callback
	push	ebp
	call	_b2i_PVK_bio
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pkey$[esp+28], eax
	jmp	SHORT $end$34
$LN24@load_key:
; Line 1025
	push	OFFSET ??_C@_0CJ@DHFLKNAM@bad?5input?5format?5specified?5for?5k@
	push	edi
	call	_BIO_printf
	add	esp, 8
; Line 1026
	jmp	SHORT $end$34
$LN18@load_key:
; Line 1009
	mov	eax, DWORD PTR _key_descrip$[esp+24]
	push	ebx
	push	eax
	push	esi
	push	ebp
	push	edi
	call	_load_netscape_key
	mov	DWORD PTR _pkey$[esp+48], eax
$LN32@load_key:
	add	esp, 20					; 00000014H
$end$34:
; Line 1030
	push	ebp
	call	_BIO_free
$LN31@load_key:
	mov	ebp, DWORD PTR _key_descrip$[esp+28]
	add	esp, 4
$LN26@load_key:
; Line 1031
	mov	eax, DWORD PTR _pkey$[esp+28]
	test	eax, eax
	jne	SHORT $LN27@load_key
; Line 1032
	push	ebp
	push	OFFSET ??_C@_0BD@DHEMONEO@unable?5to?5load?5?$CFs?6?$AA@
	push	edi
	call	_BIO_printf
; Line 1033
	push	edi
	call	_ERR_print_errors
; Line 1035
	mov	eax, DWORD PTR _pkey$[esp+44]
	add	esp, 16					; 00000010H
$LN27@load_key:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1036
	add	esp, 12					; 0000000cH
	ret	0
_load_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_cert_crl_http
_TEXT	SEGMENT
_host$ = -16						; size = 4
_path$ = -12						; size = 4
_port$ = -8						; size = 4
_use_ssl$ = -4						; size = 4
_url$ = 8						; size = 4
_err$ = 12						; size = 4
_pcert$ = 16						; size = 4
_pcrl$ = 20						; size = 4
_load_cert_crl_http PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 791
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 796
	lea	eax, DWORD PTR _use_ssl$[esp+32]
	mov	DWORD PTR _host$[esp+32], 0
	push	eax
	lea	eax, DWORD PTR _path$[esp+36]
	mov	DWORD PTR _port$[esp+36], 0
	push	eax
	lea	eax, DWORD PTR _port$[esp+40]
	mov	DWORD PTR _path$[esp+40], 0
	push	eax
	lea	eax, DWORD PTR _host$[esp+44]
	xor	ebp, ebp
	push	eax
	push	DWORD PTR _url$[esp+44]
	xor	edi, edi
	xor	esi, esi
	call	_OCSP_parse_url
	mov	ebx, DWORD PTR _pcert$[esp+48]
	add	esp, 20					; 00000014H
	test	eax, eax
	mov	eax, DWORD PTR _err$[esp+28]
	je	$err$39
; Line 798
	cmp	DWORD PTR _use_ssl$[esp+32], esi
	je	SHORT $LN9@load_cert_
; Line 799
	test	eax, eax
	je	$err$39
; Line 800
	push	OFFSET ??_C@_0BF@LDHEOEBK@https?5not?5supported?6?$AA@
	push	eax
	call	_BIO_puts
	add	esp, 8
; Line 801
	jmp	$err$39
$LN9@load_cert_:
; Line 803
	push	DWORD PTR _host$[esp+32]
	call	_BIO_new_connect
	mov	ebp, eax
	add	esp, 4
; Line 804
	test	ebp, ebp
	je	$err$39
	push	DWORD PTR _port$[esp+32]
	push	1
	push	100					; 00000064H
	push	ebp
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$39
; Line 806
	push	1024					; 00000400H
	push	ebp
	call	_OCSP_REQ_CTX_new
	mov	edi, eax
	add	esp, 8
; Line 807
	test	edi, edi
	je	SHORT $err$39
; Line 809
	push	DWORD PTR _path$[esp+32]
	push	OFFSET ??_C@_03HAPOJHBM@GET?$AA@
	push	edi
	call	_OCSP_REQ_CTX_http
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$39
; Line 811
	push	DWORD PTR _host$[esp+32]
	push	OFFSET ??_C@_04CPPPJGME@Host?$AA@
	push	edi
	call	_OCSP_REQ_CTX_add1_header
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$39
; Line 813
	test	ebx, ebx
	je	SHORT $LN36@load_cert_
	npad	4
$LL4@load_cert_:
; Line 815
	push	ebx
	push	edi
	call	_X509_http_nbio
	mov	esi, eax
	add	esp, 8
; Line 817
	cmp	esi, -1
	je	SHORT $LL4@load_cert_
; Line 818
	jmp	SHORT $err$39
$LN36@load_cert_:
	mov	ebx, DWORD PTR _pcrl$[esp+28]
$LL7@load_cert_:
; Line 820
	push	ebx
	push	edi
	call	_X509_CRL_http_nbio
	mov	esi, eax
	add	esp, 8
; Line 821
	cmp	esi, -1
	je	SHORT $LL7@load_cert_
	mov	ebx, DWORD PTR _pcert$[esp+28]
$err$39:
; Line 825
	mov	eax, DWORD PTR _host$[esp+32]
	test	eax, eax
	je	SHORT $LN18@load_cert_
; Line 826
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN18@load_cert_:
; Line 827
	mov	eax, DWORD PTR _path$[esp+32]
	test	eax, eax
	je	SHORT $LN19@load_cert_
; Line 828
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN19@load_cert_:
; Line 829
	mov	eax, DWORD PTR _port$[esp+32]
	test	eax, eax
	je	SHORT $LN20@load_cert_
; Line 830
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN20@load_cert_:
; Line 831
	test	ebp, ebp
	je	SHORT $LN21@load_cert_
; Line 832
	push	ebp
	call	_BIO_free_all
	add	esp, 4
$LN21@load_cert_:
; Line 833
	test	edi, edi
	je	SHORT $LN22@load_cert_
; Line 834
	push	edi
	call	_OCSP_REQ_CTX_free
	add	esp, 4
$LN22@load_cert_:
; Line 835
	cmp	esi, 1
	je	SHORT $LN37@load_cert_
; Line 836
	test	ebp, ebp
	je	SHORT $LN24@load_cert_
	cmp	DWORD PTR _err$[esp+28], 0
	je	SHORT $LN24@load_cert_
; Line 837
	push	DWORD PTR _url$[esp+28]
	mov	ecx, OFFSET ??_C@_03GEOOCNOH@CRL?$AA@
	test	ebx, ebx
	mov	eax, OFFSET ??_C@_0M@LLNFCECG@certificate?$AA@
	cmove	eax, ecx
	push	eax
	push	OFFSET ??_C@_0BK@FAFHEINM@Error?5loading?5?$CFs?5from?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN24@load_cert_:
; Line 839
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN37@load_cert_:
; Line 841
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 842
	add	esp, 16					; 00000010H
	ret	0
_load_cert_crl_http ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_crl
_TEXT	SEGMENT
_x$ = -4						; size = 4
_infile$ = 8						; size = 4
_format$ = 12						; size = 4
_load_crl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 913
	mov	eax, 4
	call	__chkstk
	push	edi
; Line 917
	mov	edi, DWORD PTR _format$[esp+4]
	mov	DWORD PTR _x$[esp+8], 0
	cmp	edi, 13					; 0000000dH
	jne	SHORT $LN2@load_crl
; Line 918
	lea	eax, DWORD PTR _x$[esp+8]
	push	eax
	push	0
	push	DWORD PTR _bio_err
	push	DWORD PTR _infile$[esp+16]
	call	_load_cert_crl_http
; Line 952
	mov	eax, DWORD PTR _x$[esp+24]
	add	esp, 16					; 00000010H
	pop	edi
; Line 953
	pop	ecx
	ret	0
$LN2@load_crl:
	push	esi
; Line 922
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
; Line 923
	test	esi, esi
	jne	SHORT $LN3@load_crl
; Line 924
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 951
	push	esi
	call	_BIO_free
; Line 952
	mov	eax, DWORD PTR _x$[esp+16]
	add	esp, 4
	pop	esi
	pop	edi
; Line 953
	pop	ecx
	ret	0
$LN3@load_crl:
	push	ebx
; Line 928
	mov	ebx, DWORD PTR _infile$[esp+12]
	test	ebx, ebx
	jne	SHORT $LN4@load_crl
; Line 929
	push	ebx
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	ebx
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN6@load_crl:
; Line 936
	cmp	edi, 1
	jne	SHORT $LN7@load_crl
; Line 937
	push	0
	push	esi
	call	_d2i_X509_CRL_bio
	add	esp, 8
	jmp	SHORT $LN15@load_crl
$LN4@load_crl:
; Line 931
	push	ebx
	push	3
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN6@load_crl
; Line 932
	push	ebx
	call	DWORD PTR __imp__perror
	add	esp, 4
	pop	ebx
; Line 951
	push	esi
	call	_BIO_free
; Line 952
	mov	eax, DWORD PTR _x$[esp+16]
	add	esp, 4
	pop	esi
	pop	edi
; Line 953
	pop	ecx
	ret	0
$LN7@load_crl:
; Line 938
	cmp	edi, 3
	jne	SHORT $LN9@load_crl
; Line 939
	push	0
	push	0
	push	0
	push	esi
	call	_PEM_read_bio_X509_CRL
	add	esp, 16					; 00000010H
$LN15@load_crl:
	mov	DWORD PTR _x$[esp+16], eax
; Line 944
	test	eax, eax
	jne	SHORT $LN13@load_crl
; Line 945
	push	OFFSET ??_C@_0BE@BBFHHDDE@unable?5to?5load?5CRL?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 946
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
	pop	ebx
; Line 951
	push	esi
	call	_BIO_free
; Line 952
	mov	eax, DWORD PTR _x$[esp+16]
	add	esp, 4
	pop	esi
	pop	edi
; Line 953
	pop	ecx
	ret	0
$LN9@load_crl:
; Line 941
	push	OFFSET ??_C@_0CK@DJFFGPOF@bad?5input?5format?5specified?5for?5i@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN13@load_crl:
	pop	ebx
$end$17:
; Line 951
	push	esi
	call	_BIO_free
; Line 952
	mov	eax, DWORD PTR _x$[esp+16]
	add	esp, 4
	pop	esi
	pop	edi
; Line 953
	pop	ecx
	ret	0
_load_crl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _load_cert
_TEXT	SEGMENT
_x$ = -4						; size = 4
_err$ = 8						; size = 4
_file$ = 12						; size = 4
_format$ = 16						; size = 4
_pass$ = 20						; size = 4
_e$ = 24						; size = 4
_cert_descrip$ = 28					; size = 4
_load_cert PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 846
	mov	eax, 4
	call	__chkstk
	push	ebp
; Line 850
	mov	ebp, DWORD PTR _format$[esp+4]
	mov	DWORD PTR _x$[esp+8], 0
	cmp	ebp, 13					; 0000000dH
	jne	SHORT $LN2@load_cert
; Line 851
	push	0
	lea	eax, DWORD PTR _x$[esp+12]
	push	eax
	push	DWORD PTR _err$[esp+12]
	push	DWORD PTR _file$[esp+16]
	call	_load_cert_crl_http
; Line 909
	mov	eax, DWORD PTR _x$[esp+24]
	add	esp, 16					; 00000010H
	pop	ebp
; Line 910
	pop	ecx
	ret	0
$LN2@load_cert:
	push	ebx
	push	edi
; Line 855
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	ebx, DWORD PTR _err$[esp+16]
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN3@load_cert
; Line 856
	push	ebx
	call	_ERR_print_errors
	add	esp, 4
; Line 857
	jmp	$end$26
$LN3@load_cert:
	push	esi
; Line 860
	mov	esi, DWORD PTR _file$[esp+16]
	test	esi, esi
	jne	SHORT $LN4@load_cert
; Line 863
	push	esi
	push	4
	push	esi
	push	esi
	mov	esi, DWORD PTR __imp____acrt_iob_func
	call	esi
	add	esp, 4
	push	eax
	call	DWORD PTR __imp__setvbuf
; Line 866
	push	0
	call	esi
	push	eax
	push	0
	push	106					; 0000006aH
	push	edi
	call	_BIO_ctrl
	add	esp, 36					; 00000024H
$LN6@load_cert:
; Line 875
	cmp	ebp, 1
	jne	SHORT $LN7@load_cert
; Line 876
	push	0
	push	edi
	call	_d2i_X509_bio
	add	esp, 8
	mov	DWORD PTR _x$[esp+20], eax
	jmp	$LN22@load_cert
$LN4@load_cert:
; Line 868
	push	esi
	push	3
	push	108					; 0000006cH
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN6@load_cert
; Line 869
	push	esi
	push	DWORD PTR _cert_descrip$[esp+20]
	push	OFFSET ??_C@_0BF@JJKPOFNI@Error?5opening?5?$CFs?5?$CFs?6?$AA@
	push	ebx
	call	_BIO_printf
; Line 870
	push	ebx
	call	_ERR_print_errors
	add	esp, 20					; 00000014H
; Line 871
	jmp	$LN22@load_cert
$LN7@load_cert:
; Line 877
	cmp	ebp, 4
	jne	SHORT $LN9@load_cert
; Line 879
	push	0
	push	edi
	call	_NETSCAPE_X509_it
	push	eax
	call	_ASN1_item_d2i_bio
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 880
	test	esi, esi
	je	$LN22@load_cert
; Line 884
	mov	ecx, DWORD PTR [esi]
	push	DWORD PTR [ecx]
	push	DWORD PTR [ecx+8]
	push	OFFSET ??_C@_0M@LLNFCECG@certificate?$AA@
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
; Line 885
	push	esi
	test	eax, eax
	je	SHORT $LN12@load_cert
	call	_NETSCAPE_X509_free
; Line 886
	push	OFFSET ??_C@_0CF@BGMEBKBE@Error?5reading?5header?5on?5certific@
; Line 887
	jmp	SHORT $LN24@load_cert
$LN12@load_cert:
; Line 889
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR _x$[esp+24], eax
; Line 890
	mov	DWORD PTR [esi+4], 0
; Line 891
	call	_NETSCAPE_X509_free
	add	esp, 4
	jmp	SHORT $LN22@load_cert
$LN9@load_cert:
; Line 892
	cmp	ebp, 3
	jne	SHORT $LN13@load_cert
; Line 893
	push	0
	push	OFFSET _password_callback
	push	0
	push	edi
	call	_PEM_read_bio_X509_AUX
	add	esp, 16					; 00000010H
	mov	DWORD PTR _x$[esp+20], eax
	jmp	SHORT $LN22@load_cert
$LN13@load_cert:
; Line 895
	cmp	ebp, 5
	jne	SHORT $LN15@load_cert
; Line 896
	push	0
	lea	eax, DWORD PTR _x$[esp+24]
	push	eax
	push	0
	push	0
	push	0
	push	DWORD PTR _cert_descrip$[esp+36]
	push	edi
	push	ebx
	call	_load_pkcs12
	add	esp, 32					; 00000020H
; Line 898
	jmp	SHORT $LN22@load_cert
$LN15@load_cert:
; Line 899
	push	DWORD PTR _cert_descrip$[esp+16]
	push	OFFSET ??_C@_0CD@HFNMCDK@bad?5input?5format?5specified?5for?5?$CF@
$LN24@load_cert:
	push	ebx
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$LN22@load_cert:
	pop	esi
$end$26:
; Line 903
	cmp	DWORD PTR _x$[esp+16], 0
	jne	SHORT $LN18@load_cert
; Line 904
	push	OFFSET ??_C@_0BM@FDKJDCHF@unable?5to?5load?5certificate?6?$AA@
	push	ebx
	call	_BIO_printf
; Line 905
	push	ebx
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
$LN18@load_cert:
; Line 907
	test	edi, edi
	je	SHORT $LN19@load_cert
; Line 908
	push	edi
	call	_BIO_free
	add	esp, 4
$LN19@load_cert:
; Line 909
	mov	eax, DWORD PTR _x$[esp+16]
	pop	edi
	pop	ebx
	pop	ebp
; Line 910
	pop	ecx
	ret	0
_load_cert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _add_oid_section
_TEXT	SEGMENT
_err$ = 8						; size = 4
_conf$ = 12						; size = 4
_add_oid_section PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 724
	push	esi
	push	edi
; Line 729
	mov	edi, DWORD PTR _conf$[esp+4]
	push	OFFSET ??_C@_0M@HCKPEIO@oid_section?$AA@
	push	0
	push	edi
	call	_NCONF_get_string
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN5@add_oid_se
; Line 730
	call	_ERR_clear_error
	pop	edi
; Line 731
	lea	eax, DWORD PTR [esi+1]
	pop	esi
; Line 746
	ret	0
$LN5@add_oid_se:
; Line 733
	push	esi
	push	edi
	call	_NCONF_get_section
	mov	edi, eax
	add	esp, 8
	test	edi, edi
	jne	SHORT $LN6@add_oid_se
; Line 734
	push	esi
	push	OFFSET ??_C@_0CA@HDAKCCMK@problem?5loading?5oid?5section?5?$CFs?6?$AA@
	push	DWORD PTR _err$[esp+12]
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 735
	xor	eax, eax
	pop	edi
	pop	esi
; Line 746
	ret	0
$LN6@add_oid_se:
	push	ebx
; Line 737
	push	edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@add_oid_se
	npad	2
$LL4@add_oid_se:
; Line 738
	push	esi
	push	edi
	call	_sk_value
	mov	ebx, eax
; Line 739
	mov	ecx, DWORD PTR [ebx+4]
	push	ecx
	push	ecx
	push	DWORD PTR [ebx+8]
	call	_OBJ_create
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN10@add_oid_se
; Line 737
	push	edi
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@add_oid_se
$LN3@add_oid_se:
	pop	ebx
	pop	edi
; Line 745
	mov	eax, 1
	pop	esi
; Line 746
	ret	0
$LN10@add_oid_se:
; Line 740
	push	DWORD PTR [ebx+8]
	push	DWORD PTR [ebx+4]
	push	OFFSET ??_C@_0BP@DCFHMIBP@problem?5creating?5object?5?$CFs?$DN?$CFs?6?$AA@
	push	DWORD PTR _err$[esp+20]
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 742
	xor	eax, eax
	pop	ebx
	pop	edi
	pop	esi
; Line 746
	ret	0
_add_oid_section ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_passwd
_TEXT	SEGMENT
_err$ = 8						; size = 4
_arg1$ = 12						; size = 4
_arg2$ = 16						; size = 4
_pass1$ = 20						; size = 4
_pass2$ = 24						; size = 4
_app_passwd PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 630
	push	ebx
; Line 632
	mov	ebx, DWORD PTR _arg2$[esp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _arg1$[esp+8]
	test	ebx, ebx
	je	SHORT $LN4@app_passwd
	test	edi, edi
	je	SHORT $LN4@app_passwd
	mov	ecx, ebx
	mov	eax, edi
$LL14@app_passwd:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN15@app_passwd
	test	dl, dl
	je	SHORT $LN16@app_passwd
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN15@app_passwd
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL14@app_passwd
$LN16@app_passwd:
	xor	eax, eax
	jmp	SHORT $LN17@app_passwd
$LN15@app_passwd:
	sbb	eax, eax
	or	eax, 1
$LN17@app_passwd:
	test	eax, eax
	jne	SHORT $LN4@app_passwd
; Line 635
	lea	esi, DWORD PTR [eax+1]
	jmp	SHORT $LN3@app_passwd
$LN4@app_passwd:
; Line 633
	xor	esi, esi
$LN3@app_passwd:
; Line 636
	test	edi, edi
	je	SHORT $LN5@app_passwd
; Line 637
	push	esi
	push	edi
	push	DWORD PTR _err$[esp+16]
	call	_app_get_pass
	mov	ecx, DWORD PTR _pass1$[esp+20]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ecx], eax
; Line 638
	test	eax, eax
	jne	SHORT $LN8@app_passwd
	pop	edi
	pop	esi
	pop	ebx
; Line 649
	ret	0
$LN5@app_passwd:
; Line 640
	mov	eax, DWORD PTR _pass1$[esp+8]
	test	eax, eax
	je	SHORT $LN8@app_passwd
; Line 641
	mov	DWORD PTR [eax], 0
$LN8@app_passwd:
; Line 642
	test	ebx, ebx
	je	SHORT $LN9@app_passwd
; Line 643
	neg	esi
	sbb	esi, esi
	and	esi, 2
	push	esi
	push	ebx
	push	DWORD PTR _err$[esp+16]
	call	_app_get_pass
	mov	ecx, DWORD PTR _pass2$[esp+20]
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [ecx], eax
; Line 644
	test	eax, eax
	jne	SHORT $LN12@app_passwd
	pop	edi
	pop	esi
	pop	ebx
; Line 649
	ret	0
$LN9@app_passwd:
; Line 646
	mov	eax, DWORD PTR _pass2$[esp+8]
	test	eax, eax
	je	SHORT $LN12@app_passwd
; Line 647
	mov	DWORD PTR [eax], 0
$LN12@app_passwd:
	pop	edi
	pop	esi
; Line 648
	mov	eax, 1
	pop	ebx
; Line 649
	ret	0
_app_passwd ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _copy_extensions
_TEXT	SEGMENT
_ret$1$ = -16						; size = 4
_obj$1$ = -12						; size = 4
_exts$1$ = -8						; size = 4
_ext$1$ = -4						; size = 4
_i$1$ = 8						; size = 4
_x$ = 8							; size = 4
_req$ = 12						; size = 4
_copy_type$ = 16					; size = 4
_copy_extensions PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1373
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
; Line 1378
	mov	ebx, DWORD PTR _x$[esp+16]
	mov	DWORD PTR _ret$1$[esp+20], 0
	test	ebx, ebx
	je	$LN9@copy_exten
	mov	eax, DWORD PTR _req$[esp+16]
	test	eax, eax
	je	$LN9@copy_exten
	cmp	DWORD PTR _copy_type$[esp+16], 0
	je	$LN9@copy_exten
; Line 1380
	push	ebp
	push	esi
	push	edi
	push	eax
	call	_X509_REQ_get_extensions
	mov	edi, eax
; Line 1382
	xor	ebp, ebp
	push	edi
	mov	DWORD PTR _exts$1$[esp+40], edi
	mov	DWORD PTR _i$1$[esp+36], ebp
	call	_sk_num
	add	esp, 8
	test	eax, eax
	jle	$LN3@copy_exten
	npad	4
$LL4@copy_exten:
; Line 1383
	push	ebp
	push	edi
	call	_sk_value
; Line 1384
	push	eax
	mov	DWORD PTR _ext$1$[esp+44], eax
	call	_X509_EXTENSION_get_object
; Line 1385
	push	-1
	push	eax
	push	ebx
	mov	DWORD PTR _obj$1$[esp+56], eax
	call	_X509_get_ext_by_OBJ
	mov	esi, eax
	add	esp, 24					; 00000018H
; Line 1387
	cmp	esi, -1
	je	SHORT $LN6@copy_exten
; Line 1389
	cmp	DWORD PTR _copy_type$[esp+28], 1
	je	SHORT $LN2@copy_exten
	mov	ebp, DWORD PTR _obj$1$[esp+32]
$LL7@copy_exten:
; Line 1393
	push	esi
	push	ebx
	call	_X509_get_ext
; Line 1394
	push	esi
	push	ebx
	mov	edi, eax
	call	_X509_delete_ext
; Line 1395
	push	edi
	call	_X509_EXTENSION_free
; Line 1396
	push	-1
	push	ebp
	push	ebx
	call	_X509_get_ext_by_OBJ
	mov	esi, eax
	add	esp, 32					; 00000020H
; Line 1397
	cmp	esi, -1
	jne	SHORT $LL7@copy_exten
	mov	ebp, DWORD PTR _i$1$[esp+28]
	mov	edi, DWORD PTR _exts$1$[esp+32]
$LN6@copy_exten:
; Line 1399
	push	-1
	push	DWORD PTR _ext$1$[esp+36]
	push	ebx
	call	_X509_add_ext
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $end$23
$LN2@copy_exten:
; Line 1382
	inc	ebp
	push	edi
	mov	DWORD PTR _i$1$[esp+32], ebp
	call	_sk_num
	add	esp, 4
	cmp	ebp, eax
	jl	$LL4@copy_exten
$LN3@copy_exten:
; Line 1403
	mov	DWORD PTR _ret$1$[esp+32], 1
$end$23:
; Line 1407
	push	OFFSET _X509_EXTENSION_free
	push	edi
	call	_sk_pop_free
; Line 1409
	mov	eax, DWORD PTR _ret$1$[esp+40]
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1410
	add	esp, 16					; 00000010H
	ret	0
$LN9@copy_exten:
; Line 1379
	mov	eax, 1
	pop	ebx
; Line 1410
	add	esp, 16					; 00000010H
	ret	0
_copy_extensions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _set_ext_copy
_TEXT	SEGMENT
_copy_type$ = 8						; size = 4
_arg$ = 12						; size = 4
_set_ext_copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1360
	push	esi
; Line 1361
	mov	esi, DWORD PTR _arg$[esp]
	push	edi
	mov	edi, DWORD PTR __imp___stricmp
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@set_ext_co
; Line 1362
	mov	eax, DWORD PTR _copy_type$[esp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], 0
; Line 1369
	mov	eax, 1
; Line 1370
	ret	0
$LN2@set_ext_co:
; Line 1363
	push	OFFSET ??_C@_04COAGEIMF@copy?$AA@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@set_ext_co
; Line 1364
	mov	eax, DWORD PTR _copy_type$[esp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], 1
; Line 1369
	mov	eax, 1
; Line 1370
	ret	0
$LN4@set_ext_co:
; Line 1365
	push	OFFSET ??_C@_07ENLILCDE@copyall?$AA@
	push	esi
	call	edi
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@set_ext_co
; Line 1366
	mov	eax, DWORD PTR _copy_type$[esp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], 2
; Line 1369
	mov	eax, 1
; Line 1370
	ret	0
$LN6@set_ext_co:
	pop	edi
; Line 1368
	xor	eax, eax
	pop	esi
; Line 1370
	ret	0
_set_ext_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _set_name_ex
_TEXT	SEGMENT
_flags$ = 8						; size = 4
_arg$ = 12						; size = 4
_set_name_ex PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1321
	push	esi
; Line 1352
	mov	esi, DWORD PTR _flags$[esp]
	push	OFFSET ?ex_tbl@?1??set_name_ex@@9@9
	push	DWORD PTR _arg$[esp+4]
	push	esi
	call	_set_multi_opts
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@set_name_e
	pop	esi
; Line 1357
	ret	0
$LN2@set_name_e:
; Line 1354
	mov	eax, DWORD PTR [esi]
	test	eax, 983040				; 000f0000H
	jne	SHORT $LN3@set_name_e
; Line 1355
	or	eax, 131072				; 00020000H
	mov	DWORD PTR [esi], eax
$LN3@set_name_e:
; Line 1356
	mov	eax, 1
	pop	esi
; Line 1357
	ret	0
_set_name_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _set_cert_ex
_TEXT	SEGMENT
_flags$ = 8						; size = 4
_arg$ = 12						; size = 4
_set_cert_ex PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1317
	push	OFFSET ?cert_tbl@?1??set_cert_ex@@9@9
	push	DWORD PTR _arg$[esp]
	push	DWORD PTR _flags$[esp+4]
	call	_set_multi_opts
	add	esp, 12					; 0000000cH
; Line 1318
	ret	0
_set_cert_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_name
_TEXT	SEGMENT
_out$ = 8						; size = 4
_title$ = 12						; size = 4
_nm$ = 16						; size = 4
_lflags$ = 20						; size = 4
_print_name PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 1466
	mov	eax, DWORD PTR _title$[esp-4]
	push	ebx
	push	ebp
	push	esi
	xor	bl, bl
	xor	ebp, ebp
	push	edi
	mov	edi, DWORD PTR _out$[esp+12]
	test	eax, eax
	je	SHORT $LN2@print_name
; Line 1467
	push	eax
	push	edi
	call	_BIO_puts
	add	esp, 8
$LN2@print_name:
; Line 1468
	mov	esi, DWORD PTR _lflags$[esp+12]
	mov	eax, esi
	and	eax, 983040				; 000f0000H
	cmp	eax, 262144				; 00040000H
	jne	SHORT $LN3@print_name
; Line 1469
	mov	bl, 1
; Line 1470
	mov	ebp, 4
$LN3@print_name:
; Line 1472
	test	esi, esi
	jne	SHORT $LN4@print_name
; Line 1473
	push	esi
	push	esi
	push	DWORD PTR _nm$[esp+20]
	call	_X509_NAME_oneline
	mov	esi, eax
; Line 1474
	push	esi
	push	edi
	call	_BIO_puts
; Line 1475
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_puts
; Line 1476
	push	esi
	call	_CRYPTO_free
	add	esp, 32					; 00000020H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1483
	ret	0
$LN4@print_name:
; Line 1478
	test	bl, bl
	je	SHORT $LN6@print_name
; Line 1479
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 8
$LN6@print_name:
; Line 1480
	push	esi
	push	ebp
	push	DWORD PTR _nm$[esp+20]
	push	edi
	call	_X509_NAME_print_ex
; Line 1481
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	edi
	call	_BIO_puts
	add	esp, 24					; 00000018H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 1483
	ret	0
_print_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _dump_cert_text
_TEXT	SEGMENT
_out$ = 8						; size = 4
_x$ = 12						; size = 4
_dump_cert_text PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 456
	push	ebx
	push	esi
; Line 459
	push	0
	push	0
	push	DWORD PTR _x$[esp+12]
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
; Line 460
	mov	ebx, DWORD PTR _out$[esp+16]
	mov	esi, eax
	push	OFFSET ??_C@_08MAHPNCKH@subject?$DN?$AA@
	push	ebx
	call	_BIO_puts
; Line 461
	push	esi
	push	ebx
	call	_BIO_puts
; Line 462
	push	esi
	call	_CRYPTO_free
	add	esp, 32					; 00000020H
; Line 464
	push	0
	push	0
	push	DWORD PTR _x$[esp+12]
	call	_X509_get_issuer_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
; Line 465
	push	OFFSET ??_C@_08BDBNPDII@?6issuer?$DN?$AA@
	push	ebx
	mov	esi, eax
	call	_BIO_puts
; Line 466
	push	esi
	push	ebx
	call	_BIO_puts
; Line 467
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	ebx
	call	_BIO_puts
; Line 468
	push	esi
	call	_CRYPTO_free
	add	esp, 40					; 00000028H
; Line 470
	xor	eax, eax
	pop	esi
	pop	ebx
; Line 471
	ret	0
_dump_cert_text ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _chopup_args
_TEXT	SEGMENT
_arg$ = 8						; size = 4
_buf$ = 12						; size = 4
_argc$ = 16						; size = 4
_argv$ = 20						; size = 4
_chopup_args PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 385
	mov	eax, DWORD PTR _argc$[esp-4]
	push	edi
; Line 389
	mov	edi, DWORD PTR _arg$[esp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _argv$[esp]
	mov	DWORD PTR [eax], 0
	cmp	DWORD PTR [edi+4], 0
	jne	SHORT $LN18@chopup_arg
; Line 391
	push	391					; 00000187H
	push	OFFSET ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
	push	80					; 00000050H
	mov	DWORD PTR [edi+4], 20			; 00000014H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi], eax
; Line 392
	test	eax, eax
	jne	SHORT $LN18@chopup_arg
	pop	edi
; Line 446
	ret	0
$LN18@chopup_arg:
; Line 395
	xor	ecx, ecx
	cmp	DWORD PTR [edi+4], ecx
	jle	SHORT $LN3@chopup_arg
	npad	7
$LL4@chopup_arg:
; Line 396
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax+ecx*4], 0
	inc	ecx
	cmp	ecx, DWORD PTR [edi+4]
	jl	SHORT $LL4@chopup_arg
$LN3@chopup_arg:
	push	ebx
	push	ebp
	push	esi
; Line 399
	mov	esi, DWORD PTR _buf$[esp+12]
	xor	ebp, ebp
; Line 402
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN61@chopup_arg
	npad	3
$LL5@chopup_arg:
; Line 404
	mov	al, BYTE PTR [esi]
	test	al, al
	je	SHORT $LN61@chopup_arg
$LL8@chopup_arg:
	cmp	al, 32					; 00000020H
	je	SHORT $LN20@chopup_arg
	cmp	al, 9
	je	SHORT $LN20@chopup_arg
	cmp	al, 10					; 0000000aH
	jne	SHORT $LN9@chopup_arg
$LN20@chopup_arg:
	mov	al, BYTE PTR [esi+1]
; Line 405
	inc	esi
	test	al, al
	jne	SHORT $LL8@chopup_arg
$LN61@chopup_arg:
; Line 443
	mov	eax, DWORD PTR _argc$[esp+12]
; Line 444
	mov	ecx, DWORD PTR _argv$[esp+12]
	pop	esi
	mov	DWORD PTR [eax], ebp
	mov	eax, DWORD PTR [edi]
	pop	ebp
	pop	ebx
	mov	DWORD PTR [ecx], eax
; Line 445
	mov	eax, 1
	pop	edi
; Line 446
	ret	0
$LN9@chopup_arg:
; Line 406
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN61@chopup_arg
; Line 410
	mov	eax, DWORD PTR [edi+4]
	cmp	ebp, eax
	jl	SHORT $LN11@chopup_arg
; Line 413
	push	414					; 0000019eH
	lea	ebx, DWORD PTR [eax+20]
	push	OFFSET ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
	lea	eax, DWORD PTR [ebx*4]
	push	eax
	push	DWORD PTR [edi]
	call	_CRYPTO_realloc
	add	esp, 16					; 00000010H
; Line 415
	test	eax, eax
	je	SHORT $LN39@chopup_arg
; Line 417
	mov	DWORD PTR [edi], eax
; Line 420
	mov	ecx, ebp
	mov	DWORD PTR [edi+4], ebx
	cmp	ebp, ebx
	jge	SHORT $LN11@chopup_arg
	npad	4
$LL12@chopup_arg:
; Line 421
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax+ecx*4], 0
	inc	ecx
	cmp	ecx, DWORD PTR [edi+4]
	jl	SHORT $LL12@chopup_arg
$LN11@chopup_arg:
; Line 423
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax+ebp*4], esi
	inc	ebp
; Line 426
	mov	al, BYTE PTR [esi]
	cmp	al, 39					; 00000027H
	je	SHORT $LN26@chopup_arg
	cmp	al, 34					; 00000022H
	je	SHORT $LN26@chopup_arg
; Line 433
	test	al, al
	je	SHORT $LN59@chopup_arg
$LL15@chopup_arg:
	cmp	al, 32					; 00000020H
	je	SHORT $LN16@chopup_arg
	cmp	al, 9
	je	SHORT $LN16@chopup_arg
	cmp	al, 10					; 0000000aH
	je	SHORT $LN16@chopup_arg
	mov	al, BYTE PTR [esi+1]
; Line 434
	inc	esi
	test	al, al
	jne	SHORT $LL15@chopup_arg
; Line 437
	dec	esi
	jmp	SHORT $LN28@chopup_arg
$LN16@chopup_arg:
; Line 436
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LN64@chopup_arg
$LN59@chopup_arg:
; Line 437
	dec	esi
	jmp	SHORT $LN28@chopup_arg
$LN26@chopup_arg:
; Line 427
	movsx	ecx, al
	inc	esi
; Line 428
	mov	eax, DWORD PTR [edi]
	inc	DWORD PTR [eax+ebp*4-4]
; Line 429
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN64@chopup_arg
$LL13@chopup_arg:
	movsx	eax, BYTE PTR [esi]
	cmp	eax, ecx
	je	SHORT $LN64@chopup_arg
; Line 430
	inc	esi
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LL13@chopup_arg
$LN64@chopup_arg:
; Line 431
	mov	BYTE PTR [esi], 0
$LN28@chopup_arg:
; Line 441
	inc	esi
	cmp	BYTE PTR [esi], 0
	jne	$LL5@chopup_arg
; Line 404
	jmp	$LN61@chopup_arg
$LN39@chopup_arg:
	pop	esi
	pop	ebp
	pop	ebx
; Line 416
	xor	eax, eax
	pop	edi
; Line 446
	ret	0
_chopup_args ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _program_name
_TEXT	SEGMENT
_in$ = 8						; size = 4
_out$ = 12						; size = 4
_size$ = 16						; size = 4
_program_name PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 298
	push	esi
; Line 302
	mov	esi, DWORD PTR _in$[esp]
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
	npad	6
$LL33@program_na:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL33@program_na
	sub	ecx, edx
; Line 304
	lea	eax, DWORD PTR [ecx-1]
	test	eax, eax
	jle	SHORT $LN32@program_na
$LL4@program_na:
; Line 305
	mov	cl, BYTE PTR [eax+esi]
	cmp	cl, 47					; 0000002fH
	je	SHORT $LN21@program_na
	cmp	cl, 92					; 0000005cH
	je	SHORT $LN21@program_na
	cmp	cl, 58					; 0000003aH
	je	SHORT $LN21@program_na
; Line 304
	dec	eax
	test	eax, eax
	jg	SHORT $LL4@program_na
; Line 305
	jmp	SHORT $LN32@program_na
$LN21@program_na:
; Line 306
	lea	edx, DWORD PTR [esi+1]
	add	edx, eax
; Line 310
	jne	SHORT $LN10@program_na
$LN32@program_na:
; Line 311
	mov	edx, esi
$LN10@program_na:
; Line 312
	mov	ecx, edx
	lea	esi, DWORD PTR [ecx+1]
$LL34@program_na:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL34@program_na
	sub	ecx, esi
; Line 325
	cmp	ecx, 4
	jle	SHORT $LN11@program_na
	cmp	BYTE PTR [ecx+edx-4], 46		; 0000002eH
	jne	SHORT $LN11@program_na
	mov	al, BYTE PTR [ecx+edx-3]
	cmp	al, 101					; 00000065H
	je	SHORT $LN12@program_na
	cmp	al, 69					; 00000045H
	jne	SHORT $LN11@program_na
$LN12@program_na:
	mov	al, BYTE PTR [ecx+edx-2]
	cmp	al, 120					; 00000078H
	je	SHORT $LN13@program_na
	cmp	al, 88					; 00000058H
	jne	SHORT $LN11@program_na
$LN13@program_na:
	mov	al, BYTE PTR [ecx+edx-1]
	cmp	al, 101					; 00000065H
	je	SHORT $LN14@program_na
	cmp	al, 69					; 00000045H
	jne	SHORT $LN11@program_na
$LN14@program_na:
; Line 327
	sub	ecx, 4
$LN11@program_na:
; Line 330
	mov	eax, DWORD PTR _size$[esp]
	dec	eax
	cmp	ecx, eax
	cmovg	ecx, eax
; Line 333
	test	ecx, ecx
	jle	SHORT $LN35@program_na
	push	ebx
	mov	ebx, DWORD PTR _out$[esp+4]
	mov	esi, ebx
	push	edi
	sub	esi, edx
	mov	edi, ecx
	npad	3
$LL24@program_na:
; Line 334
	mov	al, BYTE PTR [edx]
	cmp	al, 65					; 00000041H
	jl	SHORT $LN25@program_na
	cmp	al, 90					; 0000005aH
	jg	SHORT $LN25@program_na
; Line 335
	add	al, 32					; 00000020H
$LN25@program_na:
; Line 337
	mov	BYTE PTR [esi+edx], al
	inc	edx
	sub	edi, 1
	jne	SHORT $LL24@program_na
; Line 339
	pop	edi
	mov	BYTE PTR [ecx+ebx], 0
	pop	ebx
	pop	esi
; Line 340
	ret	0
$LN35@program_na:
; Line 339
	mov	eax, DWORD PTR _out$[esp]
	pop	esi
	mov	BYTE PTR [ecx+eax], 0
; Line 340
	ret	0
_program_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _str2fmt
_TEXT	SEGMENT
_s$ = 8							; size = 4
_str2fmt PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 266
	push	esi
; Line 267
	mov	esi, DWORD PTR _s$[esp]
	test	esi, esi
	jne	SHORT $LN2@str2fmt
; Line 268
	xor	eax, eax
	pop	esi
; Line 294
	ret	0
$LN2@str2fmt:
; Line 269
	mov	al, BYTE PTR [esi]
	cmp	al, 68					; 00000044H
	je	$LN5@str2fmt
	cmp	al, 100					; 00000064H
	je	$LN5@str2fmt
; Line 271
	cmp	al, 84					; 00000054H
	je	$LN8@str2fmt
	cmp	al, 116					; 00000074H
	je	$LN8@str2fmt
; Line 273
	cmp	al, 78					; 0000004eH
	je	$LN11@str2fmt
	cmp	al, 110					; 0000006eH
	je	$LN11@str2fmt
; Line 275
	cmp	al, 83					; 00000053H
	je	$LN14@str2fmt
	cmp	al, 115					; 00000073H
	je	$LN14@str2fmt
; Line 277
	cmp	al, 77					; 0000004dH
	je	$LN17@str2fmt
	cmp	al, 109					; 0000006dH
	je	$LN17@str2fmt
; Line 281
	push	ebx
	cmp	al, 49					; 00000031H
	je	$LN20@str2fmt
	mov	edx, OFFSET ??_C@_06CKOLGKJK@PKCS12?$AA@
	mov	ecx, esi
	npad	1
$LL34@str2fmt:
	mov	bl, BYTE PTR [ecx]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN35@str2fmt
	test	bl, bl
	je	SHORT $LN36@str2fmt
	mov	bl, BYTE PTR [ecx+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN35@str2fmt
	add	ecx, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL34@str2fmt
$LN36@str2fmt:
	xor	ecx, ecx
	jmp	SHORT $LN37@str2fmt
$LN35@str2fmt:
	sbb	ecx, ecx
	or	ecx, 1
$LN37@str2fmt:
	test	ecx, ecx
	je	$LN20@str2fmt
	mov	edx, OFFSET ??_C@_06IDAJNGAK@pkcs12?$AA@
	mov	ecx, esi
$LL38@str2fmt:
	mov	bl, BYTE PTR [ecx]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN39@str2fmt
	test	bl, bl
	je	SHORT $LN40@str2fmt
	mov	bl, BYTE PTR [ecx+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN39@str2fmt
	add	ecx, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL38@str2fmt
$LN40@str2fmt:
	xor	ecx, ecx
	jmp	SHORT $LN41@str2fmt
$LN39@str2fmt:
	sbb	ecx, ecx
	or	ecx, 1
$LN41@str2fmt:
	test	ecx, ecx
	je	$LN20@str2fmt
	mov	edx, OFFSET ??_C@_03NNGPPEJH@P12?$AA@
	mov	ecx, esi
$LL42@str2fmt:
	mov	bl, BYTE PTR [ecx]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN43@str2fmt
	test	bl, bl
	je	SHORT $LN44@str2fmt
	mov	bl, BYTE PTR [ecx+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN43@str2fmt
	add	ecx, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL42@str2fmt
$LN44@str2fmt:
	xor	ecx, ecx
	jmp	SHORT $LN45@str2fmt
$LN43@str2fmt:
	sbb	ecx, ecx
	or	ecx, 1
$LN45@str2fmt:
	test	ecx, ecx
	je	SHORT $LN20@str2fmt
	mov	edx, OFFSET ??_C@_03HNFNFLKJ@p12?$AA@
	mov	ecx, esi
$LL46@str2fmt:
	mov	bl, BYTE PTR [ecx]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN47@str2fmt
	test	bl, bl
	je	SHORT $LN48@str2fmt
	mov	bl, BYTE PTR [ecx+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN47@str2fmt
	add	ecx, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL46@str2fmt
$LN48@str2fmt:
	xor	ecx, ecx
	jmp	SHORT $LN49@str2fmt
$LN47@str2fmt:
	sbb	ecx, ecx
	or	ecx, 1
$LN49@str2fmt:
	test	ecx, ecx
	je	SHORT $LN20@str2fmt
; Line 283
	cmp	al, 69					; 00000045H
	je	SHORT $LN23@str2fmt
	cmp	al, 101					; 00000065H
	je	SHORT $LN23@str2fmt
; Line 285
	cmp	al, 72					; 00000048H
	je	SHORT $LN26@str2fmt
	cmp	al, 104					; 00000068H
	je	SHORT $LN26@str2fmt
; Line 287
	cmp	al, 80					; 00000050H
	je	SHORT $LN29@str2fmt
	cmp	al, 112					; 00000070H
	je	SHORT $LN29@str2fmt
; Line 293
	pop	ebx
	xor	eax, eax
	pop	esi
; Line 294
	ret	0
$LN29@str2fmt:
; Line 288
	mov	al, BYTE PTR [esi+1]
	cmp	al, 86					; 00000056H
	je	SHORT $LN32@str2fmt
	cmp	al, 118					; 00000076H
	je	SHORT $LN32@str2fmt
; Line 291
	pop	ebx
	mov	eax, 3
	pop	esi
; Line 294
	ret	0
$LN32@str2fmt:
	pop	ebx
; Line 289
	mov	eax, 12					; 0000000cH
	pop	esi
; Line 294
	ret	0
$LN26@str2fmt:
	pop	ebx
; Line 286
	mov	eax, 13					; 0000000dH
	pop	esi
; Line 294
	ret	0
$LN23@str2fmt:
	pop	ebx
; Line 284
	mov	eax, 7
	pop	esi
; Line 294
	ret	0
$LN20@str2fmt:
	pop	ebx
; Line 282
	mov	eax, 5
	pop	esi
; Line 294
	ret	0
$LN17@str2fmt:
; Line 278
	mov	eax, 11					; 0000000bH
	pop	esi
; Line 294
	ret	0
$LN14@str2fmt:
; Line 276
	mov	eax, 6
	pop	esi
; Line 294
	ret	0
$LN11@str2fmt:
; Line 274
	mov	eax, 4
	pop	esi
; Line 294
	ret	0
$LN8@str2fmt:
; Line 272
	mov	eax, 2
	pop	esi
; Line 294
	ret	0
$LN5@str2fmt:
; Line 270
	mov	eax, 1
	pop	esi
; Line 294
	ret	0
_str2fmt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _destroy_ui_method
_TEXT	SEGMENT
_destroy_ui_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 537
	mov	eax, DWORD PTR _ui_method
	test	eax, eax
	je	SHORT $LN2@destroy_ui
; Line 538
	push	eax
	call	_UI_destroy_method
	add	esp, 4
; Line 539
	mov	DWORD PTR _ui_method, 0
$LN2@destroy_ui:
; Line 541
	ret	0
_destroy_ui_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _setup_ui_method
_TEXT	SEGMENT
_setup_ui_method PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 527
	push	OFFSET ??_C@_0CD@HINDFPHK@OpenSSL?5application?5user?5interfa@
	call	_UI_create_method
; Line 528
	push	OFFSET _ui_open
	push	eax
	mov	DWORD PTR _ui_method, eax
	call	_UI_method_set_opener
; Line 529
	push	OFFSET _ui_read
	push	DWORD PTR _ui_method
	call	_UI_method_set_reader
; Line 530
	push	OFFSET _ui_write
	push	DWORD PTR _ui_method
	call	_UI_method_set_writer
; Line 531
	push	OFFSET _ui_close
	push	DWORD PTR _ui_method
	call	_UI_method_set_closer
	add	esp, 36					; 00000024H
; Line 532
	xor	eax, eax
; Line 533
	ret	0
_setup_ui_method ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _password_callback
_TEXT	SEGMENT
tv253 = -4						; size = 4
_buf$ = 8						; size = 4
_bufsiz$ = 12						; size = 4
_verify$ = 16						; size = 4
_prompt$1$ = 20						; size = 4
_cb_tmp$ = 20						; size = 4
_password_callback PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\apps.c
; Line 544
	mov	eax, 4
	call	__chkstk
; Line 551
	mov	edx, DWORD PTR _cb_tmp$[esp]
	xor	ecx, ecx
	push	ebx
	push	esi
	push	edi
	xor	edi, edi
	xor	ebx, ebx
	test	edx, edx
	je	SHORT $LN8@password_c
; Line 552
	mov	eax, DWORD PTR [edx]
	test	eax, eax
	cmovne	ecx, eax
; Line 554
	mov	eax, DWORD PTR [edx+4]
	test	eax, eax
	cmovne	ebx, eax
; Line 558
	test	ecx, ecx
	je	SHORT $LN8@password_c
; Line 559
	mov	esi, ecx
	lea	edx, DWORD PTR [esi+1]
$LL25@password_c:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL25@password_c
	sub	esi, edx
; Line 560
	cmp	esi, DWORD PTR _bufsiz$[esp+12]
	cmovg	esi, DWORD PTR _bufsiz$[esp+12]
; Line 562
	push	esi
	push	ecx
	push	DWORD PTR _buf$[esp+20]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 563
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 625
	pop	ecx
	ret	0
$LN8@password_c:
	push	ebp
; Line 566
	push	DWORD PTR _ui_method
	call	_UI_new_method
	mov	esi, eax
	add	esp, 4
; Line 567
	test	esi, esi
	je	$LN10@password_c
; Line 573
	push	ebx
	push	OFFSET ??_C@_0M@FKGGGFHP@pass?5phrase?$AA@
	push	esi
	xor	ebp, ebp
	call	_UI_construct_prompt
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _prompt$1$[esp+16], ebx
; Line 574
	test	ebx, ebx
	jne	SHORT $LN11@password_c
; Line 575
	push	OFFSET ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 576
	push	esi
	call	_UI_free
	add	esp, 12					; 0000000cH
; Line 577
	xor	eax, eax
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 625
	pop	ecx
	ret	0
$LN11@password_c:
; Line 581
	push	0
	push	0
	push	1
	push	1
	push	esi
	call	_UI_ctrl
; Line 584
	mov	eax, DWORD PTR _bufsiz$[esp+36]
	dec	eax
	push	eax
	push	4
	push	DWORD PTR _buf$[esp+44]
	mov	DWORD PTR tv253[esp+52], eax
	push	2
	push	ebx
	push	esi
	call	_UI_add_input_string
	mov	ebx, eax
	add	esp, 44					; 0000002cH
; Line 586
	test	ebx, ebx
	js	$LN27@password_c
	cmp	DWORD PTR _verify$[esp+16], edi
	je	SHORT $LN13@password_c
; Line 587
	push	587					; 0000024bH
	push	OFFSET ??_C@_0O@BBAIDNNM@?4?2apps?2apps?4c?$AA@
	push	DWORD PTR _bufsiz$[esp+24]
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 588
	test	ebp, ebp
	jne	SHORT $LN14@password_c
; Line 589
	push	OFFSET ??_C@_0P@HKFKDJCC@Out?5of?5memory?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 590
	push	esi
	call	_UI_free
; Line 591
	push	DWORD PTR _prompt$1$[esp+28]
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 592
	xor	eax, eax
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
; Line 625
	pop	ecx
	ret	0
$LN14@password_c:
; Line 594
	push	DWORD PTR _buf$[esp+16]
	push	DWORD PTR tv253[esp+24]
	push	4
	push	ebp
	push	2
	push	DWORD PTR _prompt$1$[esp+36]
	push	esi
	call	_UI_add_verify_string
	add	esp, 28					; 0000001cH
	mov	ebx, eax
$LN13@password_c:
; Line 597
	test	ebx, ebx
	js	SHORT $LN3@password_c
	npad	1
$LL4@password_c:
; Line 599
	push	esi
	call	_UI_process
	mov	ebx, eax
	add	esp, 4
; Line 601
	test	ebx, ebx
	jns	SHORT $LN3@password_c
	push	0
	push	0
	push	0
	push	2
	push	esi
	call	_UI_ctrl
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LL4@password_c
$LN3@password_c:
; Line 603
	test	ebp, ebp
	je	SHORT $LN17@password_c
; Line 604
	push	DWORD PTR _bufsiz$[esp+16]
	push	ebp
	call	_OPENSSL_cleanse
; Line 605
	push	ebp
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN17@password_c:
; Line 609
	mov	ebp, DWORD PTR _buf$[esp+16]
	test	ebx, ebx
	js	SHORT $LN18@password_c
	mov	edi, ebp
	lea	ecx, DWORD PTR [edi+1]
$LL26@password_c:
	mov	al, BYTE PTR [edi]
	inc	edi
	test	al, al
	jne	SHORT $LL26@password_c
	sub	edi, ecx
	jmp	SHORT $LN18@password_c
$LN27@password_c:
	mov	ebp, DWORD PTR _buf$[esp+16]
$LN18@password_c:
; Line 610
	cmp	ebx, -1
	jne	SHORT $LN19@password_c
; Line 611
	push	OFFSET ??_C@_0BG@HNCPHOCJ@User?5interface?5error?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 612
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 613
	push	DWORD PTR _bufsiz$[esp+28]
	push	ebp
	call	_OPENSSL_cleanse
	add	esp, 20					; 00000014H
; Line 616
	jmp	SHORT $LN30@password_c
$LN19@password_c:
	cmp	ebx, -2					; fffffffeH
	jne	SHORT $LN20@password_c
; Line 617
	push	OFFSET ??_C@_09JELMDBBD@aborted?$CB?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 618
	push	DWORD PTR _bufsiz$[esp+24]
	push	ebp
	call	_OPENSSL_cleanse
	add	esp, 16					; 00000010H
$LN30@password_c:
; Line 619
	xor	edi, edi
$LN20@password_c:
; Line 621
	push	esi
	call	_UI_free
; Line 622
	push	DWORD PTR _prompt$1$[esp+20]
	call	_CRYPTO_free
	add	esp, 8
$LN10@password_c:
; Line 624
	pop	ebp
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 625
	pop	ecx
	ret	0
_password_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sscanf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2268
	ret	0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2170
	ret	0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 91
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
; Line 92
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

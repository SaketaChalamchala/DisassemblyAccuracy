; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\evp_test.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_printf
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	_main
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_05NCCIJLFN@?6?$CF04x?$AA@			; `string'
PUBLIC	??_C@_05HAJCMBLP@?5?$CF02x?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BK@BIFOLIBK@Odd?5number?5of?5hex?5digits?$CB?$AA@ ; `string'
PUBLIC	??_C@_03IJFOLNOP@?$CF2x?$AA@			; `string'
PUBLIC	??_C@_09OHJNCFDI@?$CIencrypt?$CJ?$AA@		; `string'
PUBLIC	??_C@_09KNIMCNCN@?$CIdecrypt?$CJ?$AA@		; `string'
PUBLIC	??_C@_0BC@BAMMMJGG@?$CIencrypt?1decrypt?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BF@MOFBENCO@Testing?5cipher?5?$CFs?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_03CCEPDEKL@Key?$AA@			; `string'
PUBLIC	??_C@_02JDBEGKHA@IV?$AA@			; `string'
PUBLIC	??_C@_09DOLMGAGM@Plaintext?$AA@			; `string'
PUBLIC	??_C@_0L@ILPCGNDA@Ciphertext?$AA@		; `string'
PUBLIC	??_C@_03BIFOHCEN@AAD?$AA@			; `string'
PUBLIC	??_C@_03PJHNOEGB@Tag?$AA@			; `string'
PUBLIC	??_C@_0CP@MEJKOKLG@Key?5length?5doesn?8t?5match?0?5got?5?$CFd@ ; `string'
PUBLIC	??_C@_0BE@HOKAFDP@EncryptInit?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0BG@GAFBNBKA@IV?5length?5set?5failed?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@HDGBHBMN@Key?1IV?5set?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0BA@PFIICIIA@AAD?5set?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0BH@MMBGHKIC@Tag?5length?5set?5failed?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@LBOIFNBO@Plaintext?5length?5set?5failed?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@JBNEJMO@Encrypt?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0BF@HLFMLEEK@EncryptFinal?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0CP@KPKLMHNB@Ciphertext?5length?5mismatch?5got?5?$CF@ ; `string'
PUBLIC	??_C@_0BF@DCDJHFEF@Ciphertext?5mismatch?6?$AA@	; `string'
PUBLIC	??_C@_03NAKAHAII@Got?$AA@			; `string'
PUBLIC	??_C@_08DDFFPEMA@Expected?$AA@			; `string'
PUBLIC	??_C@_0BA@HKOPOML@Get?5tag?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0O@FPPFHIFD@Tag?5mismatch?6?$AA@		; `string'
PUBLIC	??_C@_0BA@DFLIIMNC@Set?5tag?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0BE@MIHKKFFF@DecryptInit?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0BG@LIDKMPHM@Key?1Nonce?5set?5failed?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@HJIBHOKB@Decrypt?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0BF@NGPEKMKM@DecryptFinal?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0CO@COPDPABN@Plaintext?5length?5mismatch?5got?5?$CFd@ ; `string'
PUBLIC	??_C@_0BE@COAEEEAM@Plaintext?5mismatch?6?$AA@	; `string'
PUBLIC	??_C@_0BD@GPJGODAN@Testing?5digest?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_06MHCCOJOO@Digest?$AA@			; `string'
PUBLIC	??_C@_0BD@DGNGHNOF@DigestInit?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0BF@LBBMAPDP@DigestUpdate?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0BE@BNGLLDPI@DigestFinal?5failed?6?$AA@	; `string'
PUBLIC	??_C@_0CM@BOPMGKML@Digest?5length?5mismatch?0?5got?5?$CFd?5e@ ; `string'
PUBLIC	??_C@_0BB@MNOOPCON@Digest?5mismatch?6?$AA@	; `string'
PUBLIC	??_C@_0BA@DFJBFKNN@?$CFs?5?$DMtest?5file?$DO?6?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3?$AA@			; `string'
PUBLIC	??_C@_0P@CJCGDCLK@Can?8t?5find?5?$CFs?6?$AA@	; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fgets:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	__imp__exit:PROC
EXTRN	__imp__atoi:PROC
EXTRN	_CRYPTO_mem_ctrl:PROC
EXTRN	_CRYPTO_cleanup_all_ex_data:PROC
EXTRN	_CRYPTO_set_mem_debug_functions:PROC
EXTRN	_CRYPTO_set_mem_debug_options:PROC
EXTRN	_CRYPTO_dbg_malloc:PROC
EXTRN	_CRYPTO_dbg_realloc:PROC
EXTRN	_CRYPTO_dbg_free:PROC
EXTRN	_CRYPTO_dbg_set_options:PROC
EXTRN	_CRYPTO_dbg_get_options:PROC
EXTRN	_CRYPTO_mem_leaks_fp:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_CIPHER_nid:PROC
EXTRN	_EVP_CIPHER_key_length:PROC
EXTRN	_EVP_CIPHER_flags:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestInit_ex:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestFinal_ex:PROC
EXTRN	_EVP_CIPHER_CTX_set_flags:PROC
EXTRN	_EVP_EncryptInit_ex:PROC
EXTRN	_EVP_EncryptUpdate:PROC
EXTRN	_EVP_EncryptFinal_ex:PROC
EXTRN	_EVP_DecryptInit_ex:PROC
EXTRN	_EVP_DecryptUpdate:PROC
EXTRN	_EVP_DecryptFinal_ex:PROC
EXTRN	_EVP_CIPHER_CTX_init:PROC
EXTRN	_EVP_CIPHER_CTX_cleanup:PROC
EXTRN	_EVP_CIPHER_CTX_set_padding:PROC
EXTRN	_EVP_CIPHER_CTX_ctrl:PROC
EXTRN	_OpenSSL_add_all_ciphers:PROC
EXTRN	_OpenSSL_add_all_digests:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_cleanup:PROC
EXTRN	_ERR_print_errors_fp:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_ERR_free_strings:PROC
EXTRN	_ERR_remove_thread_state:PROC
EXTRN	_ENGINE_load_builtin_engines:PROC
EXTRN	_ENGINE_register_all_ciphers:PROC
EXTRN	_ENGINE_register_all_digests:PROC
EXTRN	_ENGINE_cleanup:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0P@CJCGDCLK@Can?8t?5find?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0P@CJCGDCLK@Can?8t?5find?5?$CFs?6?$AA@ DB 'Can''t find %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3?$AA@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DFJBFKNN@?$CFs?5?$DMtest?5file?$DO?6?$AA@
CONST	SEGMENT
??_C@_0BA@DFJBFKNN@?$CFs?5?$DMtest?5file?$DO?6?$AA@ DB '%s <test file>', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MNOOPCON@Digest?5mismatch?6?$AA@
CONST	SEGMENT
??_C@_0BB@MNOOPCON@Digest?5mismatch?6?$AA@ DB 'Digest mismatch', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BOPMGKML@Digest?5length?5mismatch?0?5got?5?$CFd?5e@
CONST	SEGMENT
??_C@_0CM@BOPMGKML@Digest?5length?5mismatch?0?5got?5?$CFd?5e@ DB 'Digest '
	DB	'length mismatch, got %d expected %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BNGLLDPI@DigestFinal?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BE@BNGLLDPI@DigestFinal?5failed?6?$AA@ DB 'DigestFinal failed', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LBBMAPDP@DigestUpdate?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BF@LBBMAPDP@DigestUpdate?5failed?6?$AA@ DB 'DigestUpdate failed', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DGNGHNOF@DigestInit?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BD@DGNGHNOF@DigestInit?5failed?6?$AA@ DB 'DigestInit failed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06MHCCOJOO@Digest?$AA@
CONST	SEGMENT
??_C@_06MHCCOJOO@Digest?$AA@ DB 'Digest', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GPJGODAN@Testing?5digest?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@GPJGODAN@Testing?5digest?5?$CFs?6?$AA@ DB 'Testing digest %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@COAEEEAM@Plaintext?5mismatch?6?$AA@
CONST	SEGMENT
??_C@_0BE@COAEEEAM@Plaintext?5mismatch?6?$AA@ DB 'Plaintext mismatch', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@COPDPABN@Plaintext?5length?5mismatch?5got?5?$CFd@
CONST	SEGMENT
??_C@_0CO@COPDPABN@Plaintext?5length?5mismatch?5got?5?$CFd@ DB 'Plaintext'
	DB	' length mismatch got %d expected %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NGPEKMKM@DecryptFinal?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BF@NGPEKMKM@DecryptFinal?5failed?6?$AA@ DB 'DecryptFinal failed', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HJIBHOKB@Decrypt?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BA@HJIBHOKB@Decrypt?5failed?6?$AA@ DB 'Decrypt failed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LIDKMPHM@Key?1Nonce?5set?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BG@LIDKMPHM@Key?1Nonce?5set?5failed?6?$AA@ DB 'Key/Nonce set faile'
	DB	'd', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MIHKKFFF@DecryptInit?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BE@MIHKKFFF@DecryptInit?5failed?6?$AA@ DB 'DecryptInit failed', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DFLIIMNC@Set?5tag?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BA@DFLIIMNC@Set?5tag?5failed?6?$AA@ DB 'Set tag failed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FPPFHIFD@Tag?5mismatch?6?$AA@
CONST	SEGMENT
??_C@_0O@FPPFHIFD@Tag?5mismatch?6?$AA@ DB 'Tag mismatch', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HKOPOML@Get?5tag?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BA@HKOPOML@Get?5tag?5failed?6?$AA@ DB 'Get tag failed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DDFFPEMA@Expected?$AA@
CONST	SEGMENT
??_C@_08DDFFPEMA@Expected?$AA@ DB 'Expected', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03NAKAHAII@Got?$AA@
CONST	SEGMENT
??_C@_03NAKAHAII@Got?$AA@ DB 'Got', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DCDJHFEF@Ciphertext?5mismatch?6?$AA@
CONST	SEGMENT
??_C@_0BF@DCDJHFEF@Ciphertext?5mismatch?6?$AA@ DB 'Ciphertext mismatch', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KPKLMHNB@Ciphertext?5length?5mismatch?5got?5?$CF@
CONST	SEGMENT
??_C@_0CP@KPKLMHNB@Ciphertext?5length?5mismatch?5got?5?$CF@ DB 'Ciphertex'
	DB	't length mismatch got %d expected %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HLFMLEEK@EncryptFinal?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BF@HLFMLEEK@EncryptFinal?5failed?6?$AA@ DB 'EncryptFinal failed', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JBNEJMO@Encrypt?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BA@JBNEJMO@Encrypt?5failed?6?$AA@ DB 'Encrypt failed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LBOIFNBO@Plaintext?5length?5set?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BN@LBOIFNBO@Plaintext?5length?5set?5failed?6?$AA@ DB 'Plaintext le'
	DB	'ngth set failed', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MMBGHKIC@Tag?5length?5set?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BH@MMBGHKIC@Tag?5length?5set?5failed?6?$AA@ DB 'Tag length set fai'
	DB	'led', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PFIICIIA@AAD?5set?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BA@PFIICIIA@AAD?5set?5failed?6?$AA@ DB 'AAD set failed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HDGBHBMN@Key?1IV?5set?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BD@HDGBHBMN@Key?1IV?5set?5failed?6?$AA@ DB 'Key/IV set failed', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GAFBNBKA@IV?5length?5set?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BG@GAFBNBKA@IV?5length?5set?5failed?6?$AA@ DB 'IV length set faile'
	DB	'd', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HOKAFDP@EncryptInit?5failed?6?$AA@
CONST	SEGMENT
??_C@_0BE@HOKAFDP@EncryptInit?5failed?6?$AA@ DB 'EncryptInit failed', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MEJKOKLG@Key?5length?5doesn?8t?5match?0?5got?5?$CFd@
CONST	SEGMENT
??_C@_0CP@MEJKOKLG@Key?5length?5doesn?8t?5match?0?5got?5?$CFd@ DB 'Key le'
	DB	'ngth doesn''t match, got %d expected %lu', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03PJHNOEGB@Tag?$AA@
CONST	SEGMENT
??_C@_03PJHNOEGB@Tag?$AA@ DB 'Tag', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BIFOHCEN@AAD?$AA@
CONST	SEGMENT
??_C@_03BIFOHCEN@AAD?$AA@ DB 'AAD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ILPCGNDA@Ciphertext?$AA@
CONST	SEGMENT
??_C@_0L@ILPCGNDA@Ciphertext?$AA@ DB 'Ciphertext', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DOLMGAGM@Plaintext?$AA@
CONST	SEGMENT
??_C@_09DOLMGAGM@Plaintext?$AA@ DB 'Plaintext', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDBEGKHA@IV?$AA@
CONST	SEGMENT
??_C@_02JDBEGKHA@IV?$AA@ DB 'IV', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CCEPDEKL@Key?$AA@
CONST	SEGMENT
??_C@_03CCEPDEKL@Key?$AA@ DB 'Key', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MOFBENCO@Testing?5cipher?5?$CFs?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BF@MOFBENCO@Testing?5cipher?5?$CFs?$CFs?6?$AA@ DB 'Testing cipher '
	DB	'%s%s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BAMMMJGG@?$CIencrypt?1decrypt?$CJ?$AA@
CONST	SEGMENT
??_C@_0BC@BAMMMJGG@?$CIencrypt?1decrypt?$CJ?$AA@ DB '(encrypt/decrypt)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KNIMCNCN@?$CIdecrypt?$CJ?$AA@
CONST	SEGMENT
??_C@_09KNIMCNCN@?$CIdecrypt?$CJ?$AA@ DB '(decrypt)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OHJNCFDI@?$CIencrypt?$CJ?$AA@
CONST	SEGMENT
??_C@_09OHJNCFDI@?$CIencrypt?$CJ?$AA@ DB '(encrypt)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03IJFOLNOP@?$CF2x?$AA@
CONST	SEGMENT
??_C@_03IJFOLNOP@?$CF2x?$AA@ DB '%2x', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BIFOLIBK@Odd?5number?5of?5hex?5digits?$CB?$AA@
CONST	SEGMENT
??_C@_0BK@BIFOLIBK@Odd?5number?5of?5hex?5digits?$CB?$AA@ DB 'Odd number o'
	DB	'f hex digits!', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
CONST	SEGMENT
??_C@_05HAJCMBLP@?5?$CF02x?$AA@ DB ' %02x', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
CONST	SEGMENT
??_C@_05NCCIJLFN@?6?$CF04x?$AA@ DB 0aH, '%04x', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_encdec$1$ = -4144					; size = 4
_p$1 = -4144						; size = 4
_ciphertext$1$ = -4140					; size = 4
_plaintext$1$ = -4136					; size = 4
_f$1$ = -4132						; size = 4
_iv$1$ = -4128						; size = 4
_key$1$ = -4124						; size = 4
_cn$1$ = -4120						; size = 4
_pn$1$ = -4116						; size = 4
_cipher$1$ = -4112					; size = 4
_in$1$ = -4108						; size = 4
_kn$1$ = -4104						; size = 4
_line$2 = -4100						; size = 4096
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\evp_test.c
; Line 452
	mov	eax, 4144				; 00001030H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+4144], eax
; Line 456
	cmp	DWORD PTR _argc$[esp+4140], 2
	push	esi
	mov	esi, DWORD PTR _argv$[esp+4144]
	je	SHORT $LN4@main
; Line 457
	push	DWORD PTR [esi]
	push	OFFSET ??_C@_0BA@DFJBFKNN@?$CFs?5?$DMtest?5file?$DO?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 458
	push	1
	call	DWORD PTR __imp__exit
$LN49@main:
$LN4@main:
; Line 460
	push	OFFSET _CRYPTO_dbg_get_options
	push	OFFSET _CRYPTO_dbg_set_options
	push	OFFSET _CRYPTO_dbg_free
	push	OFFSET _CRYPTO_dbg_realloc
	push	OFFSET _CRYPTO_dbg_malloc
	call	_CRYPTO_set_mem_debug_functions
; Line 461
	push	3
	call	_CRYPTO_set_mem_debug_options
; Line 462
	push	1
	call	_CRYPTO_mem_ctrl
; Line 464
	mov	esi, DWORD PTR [esi+4]
; Line 466
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	push	esi
	call	DWORD PTR __imp__fopen
	add	esp, 36					; 00000024H
	mov	DWORD PTR _f$1$[esp+4148], eax
; Line 467
	test	eax, eax
	jne	SHORT $LN9@main
; Line 468
	push	esi
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 469
	push	2
	call	DWORD PTR __imp__exit
$LN50@main:
$LN9@main:
	push	ebx
	push	ebp
	push	edi
; Line 471
	call	_ERR_load_crypto_strings
; Line 473
	call	_OpenSSL_add_all_ciphers
; Line 474
	call	_OpenSSL_add_all_digests
; Line 477
	call	_ENGINE_load_builtin_engines
; Line 487
	call	_ENGINE_register_all_ciphers
; Line 488
	call	_ENGINE_register_all_digests
; Line 507
	push	DWORD PTR _f$1$[esp+4160]
	lea	eax, DWORD PTR _line$2[esp+4164]
	xor	ebx, ebx
	push	4096					; 00001000H
	push	eax
	xor	ebp, ebp
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN38@main
	npad	7
$LL5@main:
; Line 509
	mov	al, BYTE PTR _line$2[esp+4160]
	cmp	al, 35					; 00000023H
	je	$LN19@main
	cmp	al, 10					; 0000000aH
	je	$LN19@main
; Line 511
	lea	eax, DWORD PTR _line$2[esp+4160]
	mov	DWORD PTR _p$1[esp+4160], eax
; Line 512
	lea	eax, DWORD PTR _p$1[esp+4160]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	eax
	call	_sstrsep
	mov	DWORD PTR _cipher$1$[esp+4168], eax
; Line 123
	lea	eax, DWORD PTR _p$1[esp+4168]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	eax
	call	_sstrsep
; Line 513
	mov	DWORD PTR _key$1$[esp+4176], eax
; Line 123
	lea	eax, DWORD PTR _p$1[esp+4176]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	eax
	call	_sstrsep
; Line 514
	mov	DWORD PTR _iv$1$[esp+4184], eax
; Line 123
	lea	eax, DWORD PTR _p$1[esp+4184]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	eax
	call	_sstrsep
; Line 515
	mov	DWORD PTR _plaintext$1$[esp+4192], eax
; Line 123
	lea	eax, DWORD PTR _p$1[esp+4192]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	eax
	call	_sstrsep
; Line 517
	mov	ecx, DWORD PTR _p$1[esp+4200]
; Line 123
	add	esp, 40					; 00000028H
; Line 516
	mov	DWORD PTR _ciphertext$1$[esp+4160], eax
; Line 517
	cmp	BYTE PTR [ecx-1], 10			; 0000000aH
	jne	SHORT $LN13@main
; Line 520
	xor	esi, esi
	mov	DWORD PTR _encdec$1$[esp+4160], -1
	xor	edi, edi
	mov	BYTE PTR [ecx-1], 0
; Line 521
	xor	ebp, ebp
	xor	ebx, ebx
; Line 522
	jmp	SHORT $LN17@main
$LN13@main:
; Line 123
	lea	eax, DWORD PTR _p$1[esp+4160]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	eax
	call	_sstrsep
; Line 523
	mov	esi, eax
; Line 123
	lea	eax, DWORD PTR _p$1[esp+4168]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	eax
	call	_sstrsep
; Line 524
	mov	edi, eax
; Line 123
	add	esp, 16					; 00000010H
; Line 525
	test	edi, edi
	jne	SHORT $LN43@main
; Line 526
	mov	eax, esi
; Line 528
	xor	ebp, ebp
	xor	esi, esi
	mov	DWORD PTR _p$1[esp+4160], eax
	xor	ebx, ebx
	jmp	SHORT $LN15@main
$LN43@main:
	mov	eax, DWORD PTR _p$1[esp+4160]
$LN15@main:
; Line 530
	cmp	BYTE PTR [eax-1], 10			; 0000000aH
	jne	SHORT $LN16@main
; Line 531
	mov	DWORD PTR _encdec$1$[esp+4160], -1
; Line 532
	mov	BYTE PTR [eax-1], 0
; Line 533
	jmp	SHORT $LN17@main
$LN16@main:
; Line 534
	lea	eax, DWORD PTR _p$1[esp+4160]
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	eax
	call	_sstrsep
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _encdec$1$[esp+4160], eax
$LN17@main:
; Line 537
	push	DWORD PTR _key$1$[esp+4160]
	call	_convert
; Line 538
	push	DWORD PTR _iv$1$[esp+4164]
	mov	DWORD PTR _kn$1$[esp+4168], eax
	call	_convert
; Line 539
	push	DWORD PTR _plaintext$1$[esp+4168]
	mov	DWORD PTR _in$1$[esp+4172], eax
	call	_convert
; Line 540
	push	DWORD PTR _ciphertext$1$[esp+4172]
	mov	DWORD PTR _pn$1$[esp+4176], eax
	call	_convert
	add	esp, 16					; 00000010H
	mov	DWORD PTR _cn$1$[esp+4160], eax
; Line 541
	test	esi, esi
	je	SHORT $LN18@main
; Line 542
	push	esi
	call	_convert
; Line 543
	push	edi
	mov	ebx, eax
	call	_convert
	add	esp, 8
	mov	ebp, eax
$LN18@main:
; Line 386
	push	DWORD PTR _cipher$1$[esp+4160]
	call	_EVP_get_cipherbyname
	add	esp, 4
; Line 387
	test	eax, eax
	je	SHORT $LN42@main
; Line 390
	push	DWORD PTR _encdec$1$[esp+4160]
	push	ebp
	push	edi
	push	ebx
	push	esi
	push	DWORD PTR _cn$1$[esp+4180]
	push	DWORD PTR _ciphertext$1$[esp+4184]
	push	DWORD PTR _pn$1$[esp+4188]
	push	DWORD PTR _plaintext$1$[esp+4192]
	push	DWORD PTR _in$1$[esp+4196]
	push	DWORD PTR _iv$1$[esp+4200]
	push	DWORD PTR _kn$1$[esp+4204]
	push	DWORD PTR _key$1$[esp+4208]
	push	eax
	call	_test1
	add	esp, 56					; 00000038H
; Line 549
	jmp	SHORT $LN19@main
$LN42@main:
	push	DWORD PTR _cn$1$[esp+4160]
	mov	ebx, DWORD PTR _cipher$1$[esp+4164]
	push	DWORD PTR _ciphertext$1$[esp+4164]
	push	DWORD PTR _pn$1$[esp+4168]
	push	DWORD PTR _plaintext$1$[esp+4172]
	push	ebx
	call	_test_digest
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN39@main
$LN19@main:
; Line 507
	push	DWORD PTR _f$1$[esp+4160]
	lea	eax, DWORD PTR _line$2[esp+4164]
	xor	ebx, ebx
	push	4096					; 00001000H
	push	eax
	xor	ebp, ebp
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LL5@main
$LN38@main:
; Line 584
	push	DWORD PTR _f$1$[esp+4160]
	call	DWORD PTR __imp__fclose
; Line 587
	call	_ENGINE_cleanup
; Line 589
	call	_EVP_cleanup
; Line 590
	call	_CRYPTO_cleanup_all_ex_data
; Line 591
	push	0
	call	_ERR_remove_thread_state
; Line 592
	call	_ERR_free_strings
; Line 593
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	call	_CRYPTO_mem_leaks_fp
; Line 596
	mov	ecx, DWORD PTR __$ArrayPad$[esp+4176]
	add	esp, 16					; 00000010H
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 4144				; 00001030H
	ret	0
$LN39@main:
; Line 580
	push	ebx
	push	OFFSET ??_C@_0P@CJCGDCLK@Can?8t?5find?5?$CFs?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 581
	push	3
	call	DWORD PTR __imp__exit
$LN51@main:
$LN48@main:
	int	3
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_digest
_TEXT	SEGMENT
_ciphertext$GSCopy$1$ = -100				; size = 4
_mdn$ = -96						; size = 4
_ctx$ = -92						; size = 24
_md$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_digest$ = 8						; size = 4
_plaintext$ = 12					; size = 4
_pn$ = 16						; size = 4
_ciphertext$ = 20					; size = 4
_cn$ = 24						; size = 4
_test_digest PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\evp_test.c
; Line 399
	mov	eax, 100				; 00000064H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+100], eax
	mov	eax, DWORD PTR _digest$[esp+96]
	mov	ecx, DWORD PTR _ciphertext$[esp+96]
	push	ebp
	mov	ebp, DWORD PTR _plaintext$[esp+100]
	push	esi
; Line 405
	push	eax
	mov	DWORD PTR _ciphertext$GSCopy$1$[esp+112], ecx
	call	_EVP_get_digestbyname
	mov	esi, eax
	add	esp, 4
; Line 406
	test	esi, esi
	jne	SHORT $LN2@test_diges
	pop	esi
	pop	ebp
; Line 449
	mov	ecx, DWORD PTR __$ArrayPad$[esp+100]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
$LN2@test_diges:
	push	ebx
	push	edi
; Line 409
	push	esi
	call	_EVP_MD_type
	push	eax
	call	_OBJ_nid2sn
	push	eax
	push	OFFSET ??_C@_0BD@GPJGODAN@Testing?5digest?5?$CFs?6?$AA@
	call	_printf
; Line 410
	mov	edi, DWORD PTR __imp____acrt_iob_func
	add	esp, 16					; 00000010H
	push	DWORD PTR _pn$[esp+112]
	push	ebp
	push	OFFSET ??_C@_09DOLMGAGM@Plaintext?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_hexdump
; Line 411
	mov	ebx, DWORD PTR _cn$[esp+128]
	add	esp, 16					; 00000010H
	push	ebx
	push	DWORD PTR _ciphertext$GSCopy$1$[esp+120]
	push	OFFSET ??_C@_06MHCCOJOO@Digest?$AA@
	push	1
	call	edi
	add	esp, 4
	push	eax
	call	_hexdump
; Line 413
	lea	eax, DWORD PTR _ctx$[esp+132]
	push	eax
	call	_EVP_MD_CTX_init
; Line 414
	push	0
	lea	eax, DWORD PTR _ctx$[esp+140]
	push	esi
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	SHORT $LN3@test_diges
; Line 415
	push	OFFSET ??_C@_0BD@DGNGHNOF@DigestInit?5failed?6?$AA@
	push	2
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 416
	push	2
	call	edi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 417
	push	100					; 00000064H
	call	DWORD PTR __imp__exit
$LN20@test_diges:
$LN3@test_diges:
; Line 419
	push	DWORD PTR _pn$[esp+112]
	lea	eax, DWORD PTR _ctx$[esp+120]
	push	ebp
	push	eax
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@test_diges
; Line 420
	push	OFFSET ??_C@_0BF@LBBMAPDP@DigestUpdate?5failed?6?$AA@
$LN17@test_diges:
	push	2
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 421
	push	2
	call	edi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 422
	push	101					; 00000065H
$LN18@test_diges:
	call	DWORD PTR __imp__exit
$LN21@test_diges:
$LN4@test_diges:
; Line 424
	lea	eax, DWORD PTR _mdn$[esp+116]
	push	eax
	lea	eax, DWORD PTR _md$[esp+120]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+124]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@test_diges
; Line 425
	push	OFFSET ??_C@_0BE@BNGLLDPI@DigestFinal?5failed?6?$AA@
; Line 427
	jmp	SHORT $LN17@test_diges
$LN5@test_diges:
; Line 429
	lea	eax, DWORD PTR _ctx$[esp+116]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 431
	mov	eax, DWORD PTR _mdn$[esp+120]
	add	esp, 4
	cmp	eax, ebx
	je	SHORT $LN6@test_diges
; Line 432
	push	ebx
	push	eax
	push	OFFSET ??_C@_0CM@BOPMGKML@Digest?5length?5mismatch?0?5got?5?$CFd?5e@
	push	2
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 434
	push	102					; 00000066H
	jmp	SHORT $LN18@test_diges
$LN6@test_diges:
; Line 437
	mov	ebp, DWORD PTR _ciphertext$GSCopy$1$[esp+116]
	lea	ecx, DWORD PTR _md$[esp+116]
	mov	esi, ebx
	mov	edx, ebp
	sub	esi, 4
	jb	SHORT $LN11@test_diges
	npad	4
$LL12@test_diges:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN10@test_diges
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL12@test_diges
$LN11@test_diges:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN9@test_diges
$LN10@test_diges:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN13@test_diges
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN9@test_diges
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN13@test_diges
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN9@test_diges
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN13@test_diges
	cmp	esi, -1
	je	SHORT $LN9@test_diges
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	je	SHORT $LN9@test_diges
$LN13@test_diges:
; Line 438
	push	OFFSET ??_C@_0BB@MNOOPCON@Digest?5mismatch?6?$AA@
	push	2
	call	edi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 439
	lea	eax, DWORD PTR _md$[esp+116]
	push	ebx
	push	eax
	push	OFFSET ??_C@_03NAKAHAII@Got?$AA@
	push	2
	call	edi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 440
	push	ebx
	push	ebp
	push	OFFSET ??_C@_08DDFFPEMA@Expected?$AA@
	push	2
	call	edi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 441
	push	103					; 00000067H
	jmp	$LN18@test_diges
$LN9@test_diges:
; Line 444
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
; Line 446
	lea	eax, DWORD PTR _ctx$[esp+120]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 449
	mov	ecx, DWORD PTR __$ArrayPad$[esp+124]
	add	esp, 8
	mov	eax, 1
	pop	edi
	pop	ebx
	pop	esi
	pop	ebp
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 100				; 00000064H
	ret	0
$LN19@test_diges:
_test_digest ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_cipher
_TEXT	SEGMENT
_cipher$ = 8						; size = 4
_key$ = 12						; size = 4
_kn$ = 16						; size = 4
_iv$ = 20						; size = 4
_in$ = 24						; size = 4
_plaintext$ = 28					; size = 4
_pn$ = 32						; size = 4
_ciphertext$ = 36					; size = 4
_cn$ = 40						; size = 4
_aad$ = 44						; size = 4
_an$ = 48						; size = 4
_tag$ = 52						; size = 4
_tn$ = 56						; size = 4
_encdec$ = 60						; size = 4
_test_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\evp_test.c
; Line 386
	push	DWORD PTR _cipher$[esp-4]
	call	_EVP_get_cipherbyname
	add	esp, 4
; Line 387
	test	eax, eax
	jne	SHORT $LN2@test_ciphe
; Line 394
	ret	0
$LN2@test_ciphe:
; Line 390
	push	DWORD PTR _encdec$[esp-4]
	push	DWORD PTR _tn$[esp]
	push	DWORD PTR _tag$[esp+4]
	push	DWORD PTR _an$[esp+8]
	push	DWORD PTR _aad$[esp+12]
	push	DWORD PTR _cn$[esp+16]
	push	DWORD PTR _ciphertext$[esp+20]
	push	DWORD PTR _pn$[esp+24]
	push	DWORD PTR _plaintext$[esp+28]
	push	DWORD PTR _in$[esp+32]
	push	DWORD PTR _iv$[esp+36]
	push	DWORD PTR _kn$[esp+40]
	push	DWORD PTR _key$[esp+44]
	push	eax
	call	_test1
	add	esp, 56					; 00000038H
; Line 393
	mov	eax, 1
; Line 394
	ret	0
_test_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test1
_TEXT	SEGMENT
_outl$ = -4296						; size = 4
_iv$GSCopy$1$ = -4292					; size = 4
_key$GSCopy$1$ = -4288					; size = 4
_encdec$GSCopy$1$ = -4284				; size = 4
_in$GSCopy$1$ = -4280					; size = 4
_tag$GSCopy$1$ = -4276					; size = 4
_aad$GSCopy$1$ = -4272					; size = 4
_ciphertext$GSCopy$1$ = -4268				; size = 4
_outl2$ = -4264						; size = 4
_plaintext$GSCopy$1$ = -4260				; size = 4
_ctx$ = -4256						; size = 140
_rtag$1 = -4116						; size = 16
_out$ = -4100						; size = 4096
__$ArrayPad$ = -4					; size = 4
_c$ = 8							; size = 4
_key$ = 12						; size = 4
_kn$ = 16						; size = 4
_iv$ = 20						; size = 4
_in$ = 24						; size = 4
_plaintext$ = 28					; size = 4
_pn$ = 32						; size = 4
_ciphertext$ = 36					; size = 4
_cn$ = 40						; size = 4
_aad$ = 44						; size = 4
_an$ = 48						; size = 4
_tag$ = 52						; size = 4
_tn$ = 56						; size = 4
_encdec$ = 60						; size = 4
_test1	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\evp_test.c
; Line 138
	mov	eax, 4296				; 000010c8H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+4296], eax
	mov	eax, DWORD PTR _in$[esp+4292]
	mov	ecx, DWORD PTR _encdec$[esp+4292]
	mov	DWORD PTR _in$GSCopy$1$[esp+4296], eax
	mov	eax, DWORD PTR _plaintext$[esp+4292]
	mov	DWORD PTR _plaintext$GSCopy$1$[esp+4296], eax
	mov	eax, DWORD PTR _ciphertext$[esp+4292]
	mov	DWORD PTR _ciphertext$GSCopy$1$[esp+4296], eax
	mov	eax, DWORD PTR _aad$[esp+4292]
	mov	DWORD PTR _aad$GSCopy$1$[esp+4296], eax
	mov	eax, DWORD PTR _tag$[esp+4292]
	mov	DWORD PTR _tag$GSCopy$1$[esp+4296], eax
	mov	DWORD PTR _encdec$GSCopy$1$[esp+4296], ecx
	push	ebx
	mov	ebx, DWORD PTR _c$[esp+4296]
	push	ebp
	mov	ebp, DWORD PTR _iv$[esp+4300]
	mov	DWORD PTR _iv$GSCopy$1$[esp+4304], ebp
	push	esi
	mov	esi, DWORD PTR _key$[esp+4304]
	mov	DWORD PTR _key$GSCopy$1$[esp+4308], esi
	push	edi
; Line 143
	cmp	ecx, 1
	jne	SHORT $LN58@test1
	mov	eax, OFFSET ??_C@_09OHJNCFDI@?$CIencrypt?$CJ?$AA@
	jmp	SHORT $LN59@test1
$LN58@test1:
	test	ecx, ecx
	mov	eax, OFFSET ??_C@_09KNIMCNCN@?$CIdecrypt?$CJ?$AA@
	mov	edx, OFFSET ??_C@_0BC@BAMMMJGG@?$CIencrypt?1decrypt?$CJ?$AA@
	cmovne	eax, edx
$LN59@test1:
	push	eax
	push	ebx
	call	_EVP_CIPHER_nid
	push	eax
	call	_OBJ_nid2sn
	add	esp, 8
	push	eax
	push	OFFSET ??_C@_0BF@MOFBENCO@Testing?5cipher?5?$CFs?$CFs?6?$AA@
	call	_printf
; Line 147
	mov	edi, DWORD PTR _kn$[esp+4320]
	add	esp, 12					; 0000000cH
	push	edi
	push	esi
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_03CCEPDEKL@Key?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
; Line 148
	mov	eax, DWORD PTR _in$GSCopy$1$[esp+4328]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@test1
; Line 149
	push	eax
	push	ebp
	push	OFFSET ??_C@_02JDBEGKHA@IV?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
$LN2@test1:
; Line 150
	push	DWORD PTR _pn$[esp+4308]
	push	DWORD PTR _plaintext$GSCopy$1$[esp+4316]
	push	OFFSET ??_C@_09DOLMGAGM@Plaintext?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 151
	push	DWORD PTR _cn$[esp+4308]
	push	DWORD PTR _ciphertext$GSCopy$1$[esp+4316]
	push	OFFSET ??_C@_0L@ILPCGNDA@Ciphertext?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
; Line 152
	mov	eax, DWORD PTR _an$[esp+4324]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN3@test1
; Line 153
	push	eax
	push	DWORD PTR _aad$GSCopy$1$[esp+4316]
	push	OFFSET ??_C@_03BIFOHCEN@AAD?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
$LN3@test1:
; Line 154
	mov	eax, DWORD PTR _tn$[esp+4308]
	test	eax, eax
	je	SHORT $LN4@test1
; Line 155
	push	eax
	push	DWORD PTR _tag$GSCopy$1$[esp+4316]
	push	OFFSET ??_C@_03PJHNOEGB@Tag?$AA@
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
$LN4@test1:
; Line 156
	push	ebx
	call	_EVP_CIPHER_flags
	mov	ebp, eax
; Line 157
	push	ebx
	and	ebp, 983047				; 000f0007H
	call	_EVP_CIPHER_key_length
	add	esp, 8
	cmp	edi, eax
	je	SHORT $LN5@test1
; Line 158
	push	ebx
	call	_EVP_CIPHER_key_length
	add	esp, 4
	push	eax
	push	edi
	push	OFFSET ??_C@_0CP@MEJKOKLG@Key?5length?5doesn?8t?5match?0?5got?5?$CFd@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 128
	push	5
	call	DWORD PTR __imp__exit
$LN176@test1:
$LN5@test1:
; Line 162
	lea	eax, DWORD PTR _ctx$[esp+4312]
	push	eax
	call	_EVP_CIPHER_CTX_init
; Line 163
	lea	eax, DWORD PTR _ctx$[esp+4316]
	push	1
	push	eax
	call	_EVP_CIPHER_CTX_set_flags
; Line 164
	mov	eax, DWORD PTR _encdec$GSCopy$1$[esp+4324]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN160@test1
; Line 165
	cmp	ebp, 6
	jne	$LN7@test1
; Line 166
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$[esp+4324]
	push	ebx
	push	eax
	call	_EVP_EncryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN9@test1
$LN163@test1:
; Line 167
	push	OFFSET ??_C@_0BE@HOKAFDP@EncryptInit?5failed?6?$AA@
$LN161@test1:
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 168
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	10					; 0000000aH
$LN162@test1:
	call	DWORD PTR __imp__exit
$LN177@test1:
$LN9@test1:
; Line 171
	push	0
	push	DWORD PTR _in$GSCopy$1$[esp+4316]
	lea	eax, DWORD PTR _ctx$[esp+4320]
	push	9
	push	eax
	call	_EVP_CIPHER_CTX_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN10@test1
$LN166@test1:
; Line 172
	push	OFFSET ??_C@_0BG@GAFBNBKA@IV?5length?5set?5failed?6?$AA@
$LN164@test1:
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 173
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	11					; 0000000bH
$LN165@test1:
	call	DWORD PTR __imp__exit
$LN178@test1:
$LN10@test1:
; Line 176
	push	DWORD PTR _iv$GSCopy$1$[esp+4312]
	lea	eax, DWORD PTR _ctx$[esp+4316]
	push	DWORD PTR _key$GSCopy$1$[esp+4316]
	push	0
	push	0
	push	eax
	call	_EVP_EncryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN11@test1
; Line 177
	push	OFFSET ??_C@_0BD@HDGBHBMN@Key?1IV?5set?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 178
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	12					; 0000000cH
	call	DWORD PTR __imp__exit
$LN179@test1:
$LN11@test1:
; Line 181
	mov	edi, DWORD PTR _an$[esp+4308]
	test	edi, edi
	je	$LN24@test1
	push	edi
	push	DWORD PTR _aad$GSCopy$1$[esp+4316]
	lea	eax, DWORD PTR _outl$[esp+4320]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+4324]
	push	0
	push	eax
	call	_EVP_EncryptUpdate
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN24@test1
; Line 182
	push	OFFSET ??_C@_0BA@PFIICIIA@AAD?5set?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 183
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	13					; 0000000dH
	call	DWORD PTR __imp__exit
$LN180@test1:
$LN7@test1:
; Line 186
	cmp	ebp, 7
	jne	$LN13@test1
; Line 187
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$[esp+4324]
	push	ebx
	push	eax
	call	_EVP_EncryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN15@test1
; Line 188
	push	OFFSET ??_C@_0BE@HOKAFDP@EncryptInit?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 189
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	10					; 0000000aH
	call	DWORD PTR __imp__exit
$LN181@test1:
$LN15@test1:
; Line 192
	push	0
	push	DWORD PTR _in$GSCopy$1$[esp+4316]
	lea	eax, DWORD PTR _ctx$[esp+4320]
	push	9
	push	eax
	call	_EVP_CIPHER_CTX_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN16@test1
; Line 193
	push	OFFSET ??_C@_0BG@GAFBNBKA@IV?5length?5set?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 194
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	11					; 0000000bH
	call	DWORD PTR __imp__exit
$LN182@test1:
$LN16@test1:
; Line 197
	push	0
	push	DWORD PTR _tn$[esp+4312]
	lea	eax, DWORD PTR _ctx$[esp+4320]
	push	17					; 00000011H
	push	eax
	call	_EVP_CIPHER_CTX_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN17@test1
; Line 198
	push	OFFSET ??_C@_0BH@MMBGHKIC@Tag?5length?5set?5failed?6?$AA@
; Line 128
	jmp	$LN164@test1
$LN17@test1:
; Line 202
	push	DWORD PTR _iv$GSCopy$1$[esp+4312]
	lea	eax, DWORD PTR _ctx$[esp+4316]
	push	DWORD PTR _key$GSCopy$1$[esp+4316]
	push	0
	push	0
	push	eax
	call	_EVP_EncryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN18@test1
$LN170@test1:
; Line 203
	push	OFFSET ??_C@_0BD@HDGBHBMN@Key?1IV?5set?5failed?6?$AA@
$LN169@test1:
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 204
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	12					; 0000000cH
	jmp	$LN165@test1
$LN18@test1:
; Line 207
	push	DWORD PTR _pn$[esp+4308]
	lea	eax, DWORD PTR _outl$[esp+4316]
	push	0
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+4324]
	push	0
	push	eax
	call	_EVP_EncryptUpdate
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN19@test1
; Line 208
	push	OFFSET ??_C@_0BN@LBOIFNBO@Plaintext?5length?5set?5failed?6?$AA@
; Line 128
	jmp	SHORT $LN169@test1
$LN19@test1:
; Line 212
	mov	edi, DWORD PTR _an$[esp+4308]
	test	edi, edi
	je	$LN24@test1
	push	edi
	push	DWORD PTR _aad$GSCopy$1$[esp+4316]
	lea	eax, DWORD PTR _outl$[esp+4320]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+4324]
	push	0
	push	eax
	call	_EVP_EncryptUpdate
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN24@test1
; Line 213
	push	OFFSET ??_C@_0BA@PFIICIIA@AAD?5set?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 214
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	13					; 0000000dH
	jmp	$LN165@test1
$LN13@test1:
; Line 217
	cmp	ebp, 65538				; 00010002H
	jne	SHORT $LN21@test1
; Line 218
	xor	eax, eax
	cmp	DWORD PTR _in$GSCopy$1$[esp+4312], eax
	cmovne	eax, DWORD PTR _iv$GSCopy$1$[esp+4312]
	push	eax
	push	DWORD PTR _key$GSCopy$1$[esp+4316]
	lea	eax, DWORD PTR _ctx$[esp+4320]
	push	0
	push	ebx
$LN171@test1:
	push	eax
	call	_EVP_EncryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN24@test1
$LN172@test1:
; Line 219
	push	OFFSET ??_C@_0BE@HOKAFDP@EncryptInit?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 220
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	10					; 0000000aH
	jmp	$LN165@test1
$LN21@test1:
; Line 223
	push	DWORD PTR _iv$GSCopy$1$[esp+4312]
	lea	eax, DWORD PTR _ctx$[esp+4316]
	push	DWORD PTR _key$GSCopy$1$[esp+4316]
	push	0
	push	ebx
; Line 128
	jmp	SHORT $LN171@test1
$LN24@test1:
; Line 228
	lea	eax, DWORD PTR _ctx$[esp+4312]
	push	0
	push	eax
	call	_EVP_CIPHER_CTX_set_padding
; Line 230
	push	DWORD PTR _pn$[esp+4316]
	lea	eax, DWORD PTR _outl$[esp+4324]
	push	DWORD PTR _plaintext$GSCopy$1$[esp+4324]
	push	eax
	lea	eax, DWORD PTR _out$[esp+4332]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+4336]
	push	eax
	call	_EVP_EncryptUpdate
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN25@test1
; Line 231
	push	OFFSET ??_C@_0BA@JBNEJMO@Encrypt?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 232
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	6
	jmp	$LN165@test1
$LN25@test1:
; Line 235
	lea	eax, DWORD PTR _outl2$[esp+4312]
	push	eax
	mov	eax, DWORD PTR _outl$[esp+4316]
	lea	ecx, DWORD PTR _out$[esp+4316]
	add	eax, ecx
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+4320]
	push	eax
	call	_EVP_EncryptFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN26@test1
; Line 236
	push	OFFSET ??_C@_0BF@HLFMLEEK@EncryptFinal?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 237
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	7
	jmp	$LN165@test1
$LN26@test1:
; Line 241
	mov	eax, DWORD PTR _outl2$[esp+4312]
	add	eax, DWORD PTR _outl$[esp+4312]
	mov	edi, DWORD PTR _cn$[esp+4308]
	cmp	eax, edi
	je	SHORT $LN27@test1
; Line 242
	push	edi
	push	eax
	push	OFFSET ??_C@_0CP@KPKLMHNB@Ciphertext?5length?5mismatch?5got?5?$CF@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 128
	push	8
	jmp	$LN165@test1
$LN27@test1:
; Line 247
	mov	edx, DWORD PTR _ciphertext$GSCopy$1$[esp+4312]
	lea	ecx, DWORD PTR _out$[esp+4312]
	sub	edi, 4
	jb	SHORT $LN135@test1
$LL136@test1:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN134@test1
	add	ecx, 4
	add	edx, 4
	sub	edi, 4
	jae	SHORT $LL136@test1
$LN135@test1:
	cmp	edi, -4					; fffffffcH
	je	$LN133@test1
$LN134@test1:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN137@test1
	cmp	edi, -3					; fffffffdH
	je	SHORT $LN133@test1
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN137@test1
	cmp	edi, -2					; fffffffeH
	je	SHORT $LN133@test1
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN137@test1
	cmp	edi, -1
	je	SHORT $LN133@test1
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	je	SHORT $LN133@test1
$LN137@test1:
; Line 248
	push	OFFSET ??_C@_0BF@DCDJHFEF@Ciphertext?5mismatch?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 249
	mov	edi, DWORD PTR _cn$[esp+4316]
	lea	eax, DWORD PTR _out$[esp+4320]
	add	esp, 8
	push	edi
	push	eax
	push	OFFSET ??_C@_03NAKAHAII@Got?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 250
	push	edi
	push	DWORD PTR _ciphertext$GSCopy$1$[esp+4316]
$LN173@test1:
	push	OFFSET ??_C@_08DDFFPEMA@Expected?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 128
	push	9
	jmp	$LN165@test1
$LN133@test1:
; Line 253
	cmp	ebp, 6
	je	SHORT $LN30@test1
	cmp	ebp, 7
	jne	$LN157@test1
$LN30@test1:
; Line 259
	mov	edi, DWORD PTR _tn$[esp+4308]
	lea	eax, DWORD PTR _rtag$1[esp+4312]
	push	eax
	push	edi
	lea	eax, DWORD PTR _ctx$[esp+4320]
	push	16					; 00000010H
	push	eax
	call	_EVP_CIPHER_CTX_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN31@test1
; Line 260
	push	OFFSET ??_C@_0BA@HKOPOML@Get?5tag?5failed?6?$AA@
$LN174@test1:
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 261
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	14					; 0000000eH
	jmp	$LN165@test1
$LN31@test1:
; Line 264
	mov	edx, DWORD PTR _tag$GSCopy$1$[esp+4312]
	lea	ecx, DWORD PTR _rtag$1[esp+4312]
	sub	edi, 4
	jb	SHORT $LN140@test1
	npad	3
$LL141@test1:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN139@test1
	add	ecx, 4
	add	edx, 4
	sub	edi, 4
	jae	SHORT $LL141@test1
$LN140@test1:
	cmp	edi, -4					; fffffffcH
	je	SHORT $LN157@test1
$LN139@test1:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN142@test1
	cmp	edi, -3					; fffffffdH
	je	SHORT $LN157@test1
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN142@test1
	cmp	edi, -2					; fffffffeH
	je	SHORT $LN157@test1
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN142@test1
	cmp	edi, -1
	je	SHORT $LN157@test1
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	je	SHORT $LN157@test1
$LN142@test1:
; Line 265
	push	OFFSET ??_C@_0O@FPPFHIFD@Tag?5mismatch?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 266
	mov	ebx, DWORD PTR _tn$[esp+4316]
	lea	eax, DWORD PTR _rtag$1[esp+4320]
	add	esp, 8
	push	ebx
	push	eax
	push	OFFSET ??_C@_03NAKAHAII@Got?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 267
	push	ebx
	push	DWORD PTR _tag$GSCopy$1$[esp+4316]
; Line 128
	jmp	$LN173@test1
$LN157@test1:
	mov	eax, DWORD PTR _encdec$GSCopy$1$[esp+4312]
; Line 273
	test	eax, eax
	jg	$LN143@test1
$LN160@test1:
; Line 274
	cmp	ebp, 6
	jne	$LN34@test1
; Line 275
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$[esp+4324]
	push	ebx
	push	eax
	call	_EVP_DecryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN172@test1
; Line 280
	push	0
	push	DWORD PTR _in$GSCopy$1$[esp+4316]
	lea	eax, DWORD PTR _ctx$[esp+4320]
	push	9
	push	eax
	call	_EVP_CIPHER_CTX_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN166@test1
; Line 285
	push	DWORD PTR _iv$GSCopy$1$[esp+4312]
	lea	eax, DWORD PTR _ctx$[esp+4316]
	push	DWORD PTR _key$GSCopy$1$[esp+4316]
	push	0
	push	0
	push	eax
	call	_EVP_DecryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN170@test1
; Line 290
	push	DWORD PTR _tag$GSCopy$1$[esp+4312]
	lea	eax, DWORD PTR _ctx$[esp+4316]
	push	DWORD PTR _tn$[esp+4312]
	push	17					; 00000011H
	push	eax
	call	_EVP_CIPHER_CTX_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN39@test1
; Line 292
	push	OFFSET ??_C@_0BA@DFLIIMNC@Set?5tag?5failed?6?$AA@
; Line 128
	jmp	$LN174@test1
$LN39@test1:
; Line 296
	mov	eax, DWORD PTR _an$[esp+4308]
	test	eax, eax
	je	$LN151@test1
	push	eax
	push	DWORD PTR _aad$GSCopy$1$[esp+4316]
	lea	eax, DWORD PTR _outl$[esp+4320]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+4324]
	push	0
	push	eax
	call	_EVP_DecryptUpdate
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN151@test1
; Line 297
	push	OFFSET ??_C@_0BA@PFIICIIA@AAD?5set?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 298
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	13					; 0000000dH
	jmp	$LN165@test1
$LN34@test1:
; Line 301
	cmp	ebp, 7
	jne	$LN41@test1
; Line 302
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _ctx$[esp+4324]
	push	ebx
	push	eax
	call	_EVP_DecryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN43@test1
; Line 303
	push	OFFSET ??_C@_0BE@MIHKKFFF@DecryptInit?5failed?6?$AA@
; Line 128
	jmp	$LN161@test1
$LN43@test1:
; Line 307
	push	0
	push	DWORD PTR _in$GSCopy$1$[esp+4316]
	lea	eax, DWORD PTR _ctx$[esp+4320]
	push	9
	push	eax
	call	_EVP_CIPHER_CTX_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN44@test1
; Line 308
	push	OFFSET ??_C@_0BG@GAFBNBKA@IV?5length?5set?5failed?6?$AA@
$LN167@test1:
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 309
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	11					; 0000000bH
	jmp	$LN162@test1
$LN44@test1:
; Line 312
	push	DWORD PTR _tag$GSCopy$1$[esp+4312]
	lea	eax, DWORD PTR _ctx$[esp+4316]
	push	DWORD PTR _tn$[esp+4312]
	push	17					; 00000011H
	push	eax
	call	_EVP_CIPHER_CTX_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN45@test1
; Line 314
	push	OFFSET ??_C@_0BH@MMBGHKIC@Tag?5length?5set?5failed?6?$AA@
; Line 128
	jmp	SHORT $LN167@test1
$LN45@test1:
; Line 318
	push	DWORD PTR _iv$GSCopy$1$[esp+4312]
	lea	eax, DWORD PTR _ctx$[esp+4316]
	push	DWORD PTR _key$GSCopy$1$[esp+4316]
	push	0
	push	0
	push	eax
	call	_EVP_DecryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN46@test1
; Line 319
	push	OFFSET ??_C@_0BG@LIDKMPHM@Key?1Nonce?5set?5failed?6?$AA@
$LN168@test1:
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 320
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	12					; 0000000cH
	jmp	$LN162@test1
$LN46@test1:
; Line 323
	mov	ebx, DWORD PTR _pn$[esp+4308]
	lea	eax, DWORD PTR _outl$[esp+4312]
	push	ebx
	push	0
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+4324]
	push	0
	push	eax
	call	_EVP_DecryptUpdate
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN47@test1
; Line 324
	push	OFFSET ??_C@_0BN@LBOIFNBO@Plaintext?5length?5set?5failed?6?$AA@
; Line 128
	jmp	SHORT $LN168@test1
$LN47@test1:
; Line 328
	mov	eax, DWORD PTR _an$[esp+4308]
	test	eax, eax
	je	SHORT $LN52@test1
	push	eax
	push	DWORD PTR _aad$GSCopy$1$[esp+4316]
	lea	eax, DWORD PTR _outl$[esp+4320]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+4324]
	push	0
	push	eax
	call	_EVP_EncryptUpdate
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN52@test1
; Line 329
	push	OFFSET ??_C@_0BA@PFIICIIA@AAD?5set?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 330
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	13					; 0000000dH
	jmp	$LN162@test1
$LN41@test1:
; Line 333
	cmp	ebp, 65538				; 00010002H
	jne	$LN49@test1
; Line 334
	xor	eax, eax
	cmp	DWORD PTR _in$GSCopy$1$[esp+4312], eax
	cmovne	eax, DWORD PTR _iv$GSCopy$1$[esp+4312]
	push	eax
	push	DWORD PTR _key$GSCopy$1$[esp+4316]
	lea	eax, DWORD PTR _ctx$[esp+4320]
	push	0
	push	ebx
	push	eax
	call	_EVP_DecryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	$LN163@test1
$LN151@test1:
	mov	ebx, DWORD PTR _pn$[esp+4308]
$LN52@test1:
; Line 344
	lea	eax, DWORD PTR _ctx$[esp+4312]
	push	0
	push	eax
	call	_EVP_CIPHER_CTX_set_padding
; Line 346
	mov	edi, DWORD PTR _cn$[esp+4316]
	lea	eax, DWORD PTR _outl$[esp+4320]
	push	edi
	push	DWORD PTR _ciphertext$GSCopy$1$[esp+4324]
	push	eax
	lea	eax, DWORD PTR _out$[esp+4332]
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+4336]
	push	eax
	call	_EVP_DecryptUpdate
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN53@test1
; Line 347
	push	OFFSET ??_C@_0BA@HJIBHOKB@Decrypt?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 348
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	6
	jmp	$LN162@test1
$LN49@test1:
; Line 339
	push	DWORD PTR _iv$GSCopy$1$[esp+4312]
	lea	eax, DWORD PTR _ctx$[esp+4316]
	push	DWORD PTR _key$GSCopy$1$[esp+4316]
	push	0
	push	ebx
	push	eax
	call	_EVP_DecryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN151@test1
; Line 340
	push	OFFSET ??_C@_0BE@MIHKKFFF@DecryptInit?5failed?6?$AA@
; Line 128
	jmp	$LN167@test1
$LN53@test1:
; Line 352
	cmp	ebp, 7
	je	SHORT $LN54@test1
	lea	eax, DWORD PTR _outl2$[esp+4312]
	push	eax
	mov	eax, DWORD PTR _outl$[esp+4316]
	lea	ecx, DWORD PTR _out$[esp+4316]
	add	eax, ecx
	push	eax
	lea	eax, DWORD PTR _ctx$[esp+4320]
	push	eax
	call	_EVP_DecryptFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN54@test1
; Line 353
	push	OFFSET ??_C@_0BF@NGPEKMKM@DecryptFinal?5failed?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 354
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 128
	push	7
	jmp	$LN162@test1
$LN54@test1:
; Line 358
	mov	eax, DWORD PTR _outl2$[esp+4312]
	add	eax, DWORD PTR _outl$[esp+4312]
	cmp	eax, ebx
	je	SHORT $LN55@test1
; Line 359
	push	ebx
	push	eax
	push	OFFSET ??_C@_0CO@COPDPABN@Plaintext?5length?5mismatch?5got?5?$CFd@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 128
	push	8
	jmp	$LN162@test1
$LN55@test1:
; Line 364
	mov	ebp, DWORD PTR _plaintext$GSCopy$1$[esp+4312]
	lea	ecx, DWORD PTR _out$[esp+4312]
	mov	edi, ebx
	mov	edx, ebp
	sub	edi, 4
	jb	SHORT $LN145@test1
$LL146@test1:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN144@test1
	add	ecx, 4
	add	edx, 4
	sub	edi, 4
	jae	SHORT $LL146@test1
$LN145@test1:
	cmp	edi, -4					; fffffffcH
	je	SHORT $LN143@test1
$LN144@test1:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN147@test1
	cmp	edi, -3					; fffffffdH
	je	SHORT $LN143@test1
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN147@test1
	cmp	edi, -2					; fffffffeH
	je	SHORT $LN143@test1
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN147@test1
	cmp	edi, -1
	je	SHORT $LN143@test1
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	je	SHORT $LN143@test1
$LN147@test1:
; Line 365
	push	OFFSET ??_C@_0BE@COAEEEAM@Plaintext?5mismatch?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 366
	lea	eax, DWORD PTR _out$[esp+4312]
	push	ebx
	push	eax
	push	OFFSET ??_C@_03NAKAHAII@Got?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 367
	push	ebx
	push	ebp
	push	OFFSET ??_C@_08DDFFPEMA@Expected?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_hexdump
	add	esp, 16					; 00000010H
; Line 128
	push	9
	jmp	$LN162@test1
$LN143@test1:
; Line 372
	lea	eax, DWORD PTR _ctx$[esp+4312]
	push	eax
	call	_EVP_CIPHER_CTX_cleanup
; Line 374
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	_printf
; Line 375
	mov	ecx, DWORD PTR __$ArrayPad$[esp+4320]
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 4296				; 000010c8H
	ret	0
$LN175@test1:
_test1	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test1_exit
_TEXT	SEGMENT
_ec$ = 8						; size = 4
_test1_exit PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\evp_test.c
; Line 128
	push	DWORD PTR _ec$[esp-4]
	call	DWORD PTR __imp__exit
$LN4@test1_exit:
$LN3@test1_exit:
	int	3
_test1_exit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ustrsep
_TEXT	SEGMENT
_p$ = 8							; size = 4
_sep$ = 12						; size = 4
_ustrsep PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\evp_test.c
; Line 123
	jmp	_sstrsep
_ustrsep ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sstrsep
_TEXT	SEGMENT
tv215 = -261						; size = 1
_isdelim$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_string$ = 8						; size = 4
_delim$ = 12						; size = 4
_sstrsep PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\evp_test.c
; Line 94
	mov	eax, 264				; 00000108H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+264], eax
	push	ebx
	push	esi
	mov	esi, DWORD PTR _string$[esp+268]
	push	edi
	mov	edi, DWORD PTR _delim$[esp+272]
; Line 96
	mov	ebx, DWORD PTR [esi]
; Line 98
	mov	al, BYTE PTR [ebx]
	mov	BYTE PTR tv215[esp+276], al
	test	al, al
	jne	SHORT $LN6@sstrsep
; Line 99
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 119
	mov	ecx, DWORD PTR __$ArrayPad$[esp+264]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	ret	0
$LN6@sstrsep:
; Line 101
	push	256					; 00000100H
	lea	eax, DWORD PTR _isdelim$[esp+280]
	push	0
	push	eax
	call	_memset
; Line 104
	mov	al, BYTE PTR [edi]
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _isdelim$[esp+276], 1
	test	al, al
	je	SHORT $LN10@sstrsep
	npad	2
$LL2@sstrsep:
; Line 105
	movzx	eax, al
; Line 106
	lea	edi, DWORD PTR [edi+1]
	mov	BYTE PTR _isdelim$[esp+eax+276], 1
	mov	al, BYTE PTR [edi]
	test	al, al
	jne	SHORT $LL2@sstrsep
$LN10@sstrsep:
; Line 109
	movzx	eax, BYTE PTR tv215[esp+276]
	cmp	BYTE PTR _isdelim$[esp+eax+276], 0
	jne	SHORT $LN5@sstrsep
	mov	ecx, ebx
	npad	1
$LL4@sstrsep:
; Line 110
	inc	ecx
	mov	DWORD PTR [esi], ecx
	movzx	eax, BYTE PTR [ecx]
	cmp	BYTE PTR _isdelim$[esp+eax+276], 0
	je	SHORT $LL4@sstrsep
$LN5@sstrsep:
; Line 113
	mov	ecx, DWORD PTR [esi]
	cmp	BYTE PTR [ecx], 0
	je	SHORT $LN7@sstrsep
; Line 114
	mov	BYTE PTR [ecx], 0
; Line 115
	inc	DWORD PTR [esi]
$LN7@sstrsep:
; Line 119
	mov	ecx, DWORD PTR __$ArrayPad$[esp+276]
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	ret	0
_sstrsep ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _convert
_TEXT	SEGMENT
_n$1 = 8						; size = 4
_s$ = 8							; size = 4
_convert PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\evp_test.c
; Line 77
	push	esi
; Line 80
	mov	esi, DWORD PTR _s$[esp]
	push	edi
	mov	edi, esi
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN3@convert
	npad	3
$LL4@convert:
; Line 83
	cmp	BYTE PTR [esi+1], 0
	je	SHORT $LN8@convert
; Line 87
	lea	eax, DWORD PTR _n$1[esp+4]
	push	eax
	push	OFFSET ??_C@_03IJFOLNOP@?$CF2x?$AA@
	push	esi
	call	_sscanf
; Line 88
	mov	al, BYTE PTR _n$1[esp+16]
	add	esi, 2
	mov	BYTE PTR [edi], al
	add	esp, 12					; 0000000cH
	inc	edi
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LL4@convert
$LN3@convert:
; Line 90
	sub	esi, edi
	pop	edi
	mov	eax, esi
	pop	esi
; Line 91
	ret	0
$LN8@convert:
; Line 84
	push	OFFSET ??_C@_0BK@BIFOLIBK@Odd?5number?5of?5hex?5digits?$CB?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 85
	push	4
	call	DWORD PTR __imp__exit
$LN14@convert:
$LN13@convert:
	int	3
_convert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _hexdump
_TEXT	SEGMENT
_f$ = 8							; size = 4
_title$ = 12						; size = 4
_s$ = 16						; size = 4
_l$ = 20						; size = 4
_hexdump PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\evp_test.c
; Line 64
	push	ebx
	push	esi
; Line 67
	mov	esi, DWORD PTR _f$[esp+4]
	push	edi
	push	DWORD PTR _title$[esp+8]
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	push	esi
	call	_fprintf
; Line 68
	mov	edi, DWORD PTR _l$[esp+20]
	add	esp, 12					; 0000000cH
	xor	ebx, ebx
	test	edi, edi
	jle	SHORT $LN3@hexdump
	push	ebp
	mov	ebp, DWORD PTR _s$[esp+12]
$LL4@hexdump:
; Line 69
	test	bl, 15					; 0000000fH
	jne	SHORT $LN5@hexdump
; Line 70
	push	ebx
	push	OFFSET ??_C@_05NCCIJLFN@?6?$CF04x?$AA@
	push	esi
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN5@hexdump:
; Line 71
	movzx	eax, BYTE PTR [ebx+ebp]
	push	eax
	push	OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
	push	esi
	call	_fprintf
	inc	ebx
	add	esp, 12					; 0000000cH
	cmp	ebx, edi
	jl	SHORT $LL4@hexdump
	pop	ebp
$LN3@hexdump:
; Line 73
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_fprintf
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
; Line 74
	ret	0
_hexdump ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sscanf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2268
	ret	0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2170
	ret	0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 91
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
; Line 92
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

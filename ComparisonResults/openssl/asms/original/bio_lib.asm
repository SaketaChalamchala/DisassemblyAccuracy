; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_BIO_set_flags
PUBLIC	_BIO_test_flags
PUBLIC	_BIO_clear_flags
PUBLIC	_BIO_get_callback
PUBLIC	_BIO_set_callback
PUBLIC	_BIO_get_callback_arg
PUBLIC	_BIO_set_callback_arg
PUBLIC	_BIO_method_name
PUBLIC	_BIO_method_type
PUBLIC	_BIO_ctrl_pending
PUBLIC	_BIO_ctrl_wpending
PUBLIC	_BIO_set_ex_data
PUBLIC	_BIO_get_ex_data
PUBLIC	_BIO_get_ex_new_index
PUBLIC	_BIO_number_read
PUBLIC	_BIO_number_written
PUBLIC	_BIO_new
PUBLIC	_BIO_set
PUBLIC	_BIO_free
PUBLIC	_BIO_vfree
PUBLIC	_BIO_read
PUBLIC	_BIO_gets
PUBLIC	_BIO_write
PUBLIC	_BIO_puts
PUBLIC	_BIO_indent
PUBLIC	_BIO_ctrl
PUBLIC	_BIO_callback_ctrl
PUBLIC	_BIO_ptr_ctrl
PUBLIC	_BIO_int_ctrl
PUBLIC	_BIO_push
PUBLIC	_BIO_pop
PUBLIC	_BIO_free_all
PUBLIC	_BIO_find_type
PUBLIC	_BIO_next
PUBLIC	_BIO_get_retry_BIO
PUBLIC	_BIO_get_retry_reason
PUBLIC	_BIO_dup_chain
PUBLIC	_BIO_copy_next_retry
PUBLIC	??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@ ; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
EXTRN	_CRYPTO_get_ex_new_index:PROC
EXTRN	_CRYPTO_new_ex_data:PROC
EXTRN	_CRYPTO_dup_ex_data:PROC
EXTRN	_CRYPTO_free_ex_data:PROC
EXTRN	_CRYPTO_set_ex_data:PROC
EXTRN	_CRYPTO_get_ex_data:PROC
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
CONST	SEGMENT
??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@ DB '.\crypto\bio\bio_'
	DB	'lib.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_copy_next_retry
_TEXT	SEGMENT
_b$ = 8							; size = 4
_BIO_copy_next_retry PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 150
	mov	edx, DWORD PTR _b$[esp-4]
	mov	ecx, DWORD PTR [edx+36]
	mov	eax, DWORD PTR [ecx+20]
	and	eax, 15					; 0000000fH
; Line 155
	or	DWORD PTR [edx+20], eax
; Line 562
	mov	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR [edx+24], eax
; Line 563
	ret	0
_BIO_copy_next_retry ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_dup_chain
_TEXT	SEGMENT
_method$1$ = 8						; size = 4
_in$ = 8						; size = 4
_BIO_dup_chain PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 517
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 520
	mov	edi, DWORD PTR _in$[esp+12]
	xor	ebp, ebp
	xor	ebx, ebx
	test	edi, edi
	je	$LN3@BIO_dup_ch
$LL4@BIO_dup_ch:
; Line 521
	mov	eax, DWORD PTR [edi]
; Line 70
	push	70					; 00000046H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	64					; 00000040H
; Line 521
	mov	DWORD PTR _method$1$[esp+24], eax
; Line 70
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 71
	test	esi, esi
	je	$LN22@BIO_dup_ch
; Line 75
	push	DWORD PTR _method$1$[esp+12]
	push	esi
	call	_BIO_set
	add	esp, 8
; Line 532
	push	esi
; Line 75
	test	eax, eax
	je	$LN24@BIO_dup_ch
; Line 523
	mov	eax, DWORD PTR [edi+4]
	mov	DWORD PTR [esi+4], eax
; Line 524
	mov	eax, DWORD PTR [edi+8]
	mov	DWORD PTR [esi+8], eax
; Line 525
	mov	eax, DWORD PTR [edi+12]
	mov	DWORD PTR [esi+12], eax
; Line 526
	mov	eax, DWORD PTR [edi+16]
	mov	DWORD PTR [esi+16], eax
; Line 527
	mov	eax, DWORD PTR [edi+20]
; Line 532
	push	0
	mov	DWORD PTR [esi+20], eax
	mov	eax, DWORD PTR [edi+28]
	push	12					; 0000000cH
	push	edi
	mov	DWORD PTR [esi+28], eax
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN17@BIO_dup_ch
; Line 538
	lea	eax, DWORD PTR [edi+56]
	push	eax
	lea	eax, DWORD PTR [esi+56]
	push	eax
	push	0
	call	_CRYPTO_dup_ex_data
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN17@BIO_dup_ch
; Line 544
	test	ebp, ebp
	jne	SHORT $LN8@BIO_dup_ch
; Line 546
	mov	ebp, esi
; Line 547
	jmp	SHORT $LN25@BIO_dup_ch
$LN8@BIO_dup_ch:
; Line 548
	push	esi
	push	ebx
	call	_BIO_push
	add	esp, 8
$LN25@BIO_dup_ch:
; Line 549
	mov	edi, DWORD PTR [edi+36]
	mov	ebx, esi
	test	edi, edi
	jne	$LL4@BIO_dup_ch
$LN3@BIO_dup_ch:
	pop	edi
	pop	esi
; Line 552
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 557
	ret	0
$LN17@BIO_dup_ch:
; Line 533
	push	esi
	call	_BIO_free
	add	esp, 4
; Line 554
	push	ebp
	call	_BIO_free_all
	add	esp, 4
; Line 556
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 557
	ret	0
$LN24@BIO_dup_ch:
; Line 76
	call	_CRYPTO_free
	add	esp, 4
; Line 554
	push	ebp
	call	_BIO_free_all
	add	esp, 4
; Line 556
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 557
	ret	0
$LN22@BIO_dup_ch:
; Line 72
	push	72					; 00000048H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	65					; 00000041H
	push	108					; 0000006cH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$27:
; Line 554
	push	ebp
	call	_BIO_free_all
	add	esp, 4
; Line 556
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 557
	ret	0
_BIO_dup_chain ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_get_retry_reason
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_BIO_get_retry_reason PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 468
	mov	eax, DWORD PTR _bio$[esp-4]
	mov	eax, DWORD PTR [eax+24]
; Line 469
	ret	0
_BIO_get_retry_reason ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_get_retry_BIO
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_reason$ = 12						; size = 4
_BIO_get_retry_BIO PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 452
	mov	edx, DWORD PTR _bio$[esp-4]
	mov	eax, edx
; Line 150
	test	BYTE PTR [edx+20], 8
; Line 454
	je	SHORT $LN13@BIO_get_re
	npad	4
$LL2@BIO_get_re:
; Line 456
	mov	edx, eax
; Line 457
	mov	eax, DWORD PTR [eax+36]
; Line 458
	test	eax, eax
	je	SHORT $LN13@BIO_get_re
; Line 150
	test	BYTE PTR [eax+20], 8
; Line 454
	jne	SHORT $LL2@BIO_get_re
$LN13@BIO_get_re:
; Line 461
	mov	eax, DWORD PTR _reason$[esp-4]
	test	eax, eax
	je	SHORT $LN17@BIO_get_re
; Line 462
	mov	ecx, DWORD PTR [edx+24]
	mov	DWORD PTR [eax], ecx
$LN17@BIO_get_re:
; Line 463
	mov	eax, edx
; Line 464
	ret	0
_BIO_get_retry_BIO ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_next
_TEXT	SEGMENT
_b$ = 8							; size = 4
_BIO_next PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 495
	mov	eax, DWORD PTR _b$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@BIO_next
; Line 498
	ret	0
$LN2@BIO_next:
; Line 497
	mov	eax, DWORD PTR [eax+36]
; Line 498
	ret	0
_BIO_next ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_find_type
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_type$ = 12						; size = 4
_BIO_find_type PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 475
	mov	eax, DWORD PTR _bio$[esp-4]
	test	eax, eax
	jne	SHORT $LN5@BIO_find_t
; Line 491
	ret	0
$LN5@BIO_find_t:
; Line 477
	mov	edx, DWORD PTR _type$[esp-4]
	push	esi
	npad	2
$LL4@BIO_find_t:
; Line 479
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN10@BIO_find_t
; Line 480
	mov	ecx, DWORD PTR [ecx]
; Line 482
	test	dl, dl
	jne	SHORT $LN7@BIO_find_t
; Line 483
	test	ecx, edx
	jne	SHORT $LN18@BIO_find_t
; Line 485
	jmp	SHORT $LN10@BIO_find_t
$LN7@BIO_find_t:
	cmp	ecx, edx
	je	SHORT $LN18@BIO_find_t
$LN10@BIO_find_t:
; Line 488
	mov	eax, DWORD PTR [eax+36]
; Line 489
	test	eax, eax
	jne	SHORT $LL4@BIO_find_t
$LN18@BIO_find_t:
	pop	esi
; Line 491
	ret	0
_BIO_find_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_free_all
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_BIO_free_all PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 501
	push	edi
; Line 505
	mov	edi, DWORD PTR _bio$[esp]
	test	edi, edi
	je	SHORT $LN16@BIO_free_a
	push	ebx
	push	esi
	npad	5
$LL2@BIO_free_a:
; Line 507
	mov	ebx, DWORD PTR [edi+44]
	lea	eax, DWORD PTR [edi+44]
; Line 114
	push	114					; 00000072H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	21					; 00000015H
	push	-1
; Line 506
	mov	esi, edi
; Line 508
	mov	edi, DWORD PTR [edi+36]
; Line 114
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 118
	test	eax, eax
	jg	SHORT $LN6@BIO_free_a
; Line 126
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN9@BIO_free_a
	push	1
	push	0
	push	0
	push	0
	push	1
	push	esi
	call	eax
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN6@BIO_free_a
$LN9@BIO_free_a:
; Line 130
	lea	eax, DWORD PTR [esi+56]
	push	eax
	push	esi
	push	0
	call	_CRYPTO_free_ex_data
; Line 132
	mov	eax, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN10@BIO_free_a
	mov	eax, DWORD PTR [eax+32]
	test	eax, eax
	je	SHORT $LN10@BIO_free_a
; Line 133
	push	esi
	call	eax
	add	esp, 4
$LN10@BIO_free_a:
; Line 134
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN6@BIO_free_a:
; Line 511
	cmp	ebx, 1
	jg	SHORT $LN17@BIO_free_a
; Line 505
	test	edi, edi
	jne	SHORT $LL2@BIO_free_a
$LN17@BIO_free_a:
	pop	esi
	pop	ebx
$LN16@BIO_free_a:
	pop	edi
; Line 514
	ret	0
_BIO_free_all ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_pop
_TEXT	SEGMENT
_b$ = 8							; size = 4
_BIO_pop PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 429
	push	esi
; Line 432
	mov	esi, DWORD PTR _b$[esp]
	test	esi, esi
	jne	SHORT $LN2@BIO_pop
; Line 433
	xor	eax, eax
	pop	esi
; Line 446
	ret	0
$LN2@BIO_pop:
	push	edi
; Line 434
	mov	edi, DWORD PTR [esi+36]
; Line 436
	push	esi
	push	0
	push	7
	push	esi
	call	_BIO_ctrl
; Line 438
	mov	ecx, DWORD PTR [esi+40]
	add	esp, 16					; 00000010H
	test	ecx, ecx
	je	SHORT $LN3@BIO_pop
; Line 439
	mov	eax, DWORD PTR [esi+36]
	mov	DWORD PTR [ecx+36], eax
$LN3@BIO_pop:
; Line 440
	mov	edx, DWORD PTR [esi+36]
	test	edx, edx
	je	SHORT $LN4@BIO_pop
; Line 441
	mov	ecx, DWORD PTR [esi+40]
	mov	DWORD PTR [edx+40], ecx
$LN4@BIO_pop:
; Line 445
	mov	eax, edi
	mov	DWORD PTR [esi+36], 0
	pop	edi
	mov	DWORD PTR [esi+40], 0
	pop	esi
; Line 446
	ret	0
_BIO_pop ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_push
_TEXT	SEGMENT
_b$ = 8							; size = 4
_bio$ = 12						; size = 4
_BIO_push PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 411
	push	esi
; Line 414
	mov	esi, DWORD PTR _b$[esp]
	test	esi, esi
	jne	SHORT $LN4@BIO_push
; Line 415
	mov	eax, DWORD PTR _bio$[esp]
	pop	esi
; Line 425
	ret	0
$LN4@BIO_push:
; Line 417
	cmp	DWORD PTR [esi+36], 0
	lea	eax, DWORD PTR [esi+36]
	mov	ecx, esi
	je	SHORT $LN3@BIO_push
	npad	6
$LL2@BIO_push:
; Line 418
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+36], 0
	lea	eax, DWORD PTR [ecx+36]
	jne	SHORT $LL2@BIO_push
$LN3@BIO_push:
; Line 419
	mov	eax, DWORD PTR _bio$[esp]
	mov	DWORD PTR [ecx+36], eax
; Line 420
	test	eax, eax
	je	SHORT $LN5@BIO_push
; Line 421
	mov	DWORD PTR [eax+40], ecx
$LN5@BIO_push:
; Line 423
	push	ecx
	push	0
	push	6
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 424
	mov	eax, esi
	pop	esi
; Line 425
	ret	0
_BIO_push ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_int_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_larg$ = 16						; size = 4
_i$ = 20						; size = 4
_iarg$ = 20						; size = 4
_BIO_int_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 326
	mov	eax, DWORD PTR _iarg$[esp-4]
	mov	DWORD PTR _i$[esp-4], eax
; Line 327
	lea	eax, DWORD PTR _i$[esp-4]
	push	eax
	push	DWORD PTR _larg$[esp]
	push	DWORD PTR _cmd$[esp+4]
	push	DWORD PTR _b$[esp+8]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 328
	ret	0
_BIO_int_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_ptr_ctrl
_TEXT	SEGMENT
_p$ = -4						; size = 4
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_larg$ = 16						; size = 4
_BIO_ptr_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 331
	mov	eax, 4
	call	__chkstk
; Line 334
	lea	eax, DWORD PTR _p$[esp+4]
	mov	DWORD PTR _p$[esp+4], 0
	push	eax
	push	DWORD PTR _larg$[esp+4]
	push	DWORD PTR _cmd$[esp+8]
	push	DWORD PTR _b$[esp+12]
	call	_BIO_ctrl
	mov	ecx, DWORD PTR _p$[esp+20]
	xor	edx, edx
	test	eax, eax
	cmovle	ecx, edx
	mov	eax, ecx
; Line 338
	add	esp, 20					; 00000014H
	ret	0
_BIO_ptr_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_callback_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_fp$ = 16						; size = 4
_BIO_callback_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 369
	push	esi
; Line 373
	mov	esi, DWORD PTR _b$[esp]
	test	esi, esi
	jne	SHORT $LN2@BIO_callba
; Line 374
	xor	eax, eax
	pop	esi
; Line 392
	ret	0
$LN2@BIO_callba:
; Line 376
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@BIO_callba
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN4@BIO_callba
; Line 383
	push	ebx
	mov	ebx, DWORD PTR _cmd$[esp+4]
	push	edi
	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN5@BIO_callba
	push	1
	push	0
	push	ebx
	lea	eax, DWORD PTR _fp$[esp+20]
	push	eax
	push	6
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN8@BIO_callba
$LN5@BIO_callba:
; Line 387
	push	DWORD PTR _fp$[esp+8]
	mov	eax, DWORD PTR [esi]
	push	ebx
	push	esi
	mov	eax, DWORD PTR [eax+36]
	call	eax
	add	esp, 12					; 0000000cH
; Line 389
	test	edi, edi
	je	SHORT $LN8@BIO_callba
; Line 390
	push	eax
	push	0
	push	ebx
	lea	eax, DWORD PTR _fp$[esp+20]
	push	eax
	push	134					; 00000086H
	push	esi
	call	edi
	add	esp, 24					; 00000018H
$LN8@BIO_callba:
	pop	edi
	pop	ebx
	pop	esi
; Line 392
	ret	0
$LN4@BIO_callba:
; Line 377
	push	377					; 00000179H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	121					; 00000079H
	push	131					; 00000083H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 378
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 392
	ret	0
_BIO_callback_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_larg$ = 16						; size = 4
_parg$ = 20						; size = 4
_BIO_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 341
	push	esi
; Line 345
	mov	esi, DWORD PTR _b$[esp]
	test	esi, esi
	jne	SHORT $LN2@BIO_ctrl
; Line 346
	xor	eax, eax
	pop	esi
; Line 364
	ret	0
$LN2@BIO_ctrl:
; Line 348
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN4@BIO_ctrl
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN4@BIO_ctrl
; Line 355
	push	ebx
	mov	ebx, DWORD PTR _parg$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR _larg$[esp+8]
	push	edi
	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN5@BIO_ctrl
	push	1
	push	ebp
	push	DWORD PTR _cmd$[esp+20]
	push	ebx
	push	6
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN8@BIO_ctrl
$LN5@BIO_ctrl:
; Line 359
	mov	eax, DWORD PTR [esi]
	push	ebx
	push	ebp
	push	DWORD PTR _cmd$[esp+20]
	mov	eax, DWORD PTR [eax+24]
	push	esi
	call	eax
	add	esp, 16					; 00000010H
; Line 361
	test	edi, edi
	je	SHORT $LN8@BIO_ctrl
; Line 362
	push	eax
	push	ebp
	push	DWORD PTR _cmd$[esp+20]
	push	ebx
	push	134					; 00000086H
	push	esi
	call	edi
	add	esp, 24					; 00000018H
$LN8@BIO_ctrl:
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 364
	ret	0
$LN4@BIO_ctrl:
; Line 349
	push	349					; 0000015dH
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	121					; 00000079H
	push	103					; 00000067H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 350
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 364
	ret	0
_BIO_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_indent
_TEXT	SEGMENT
_b$ = 8							; size = 4
_indent$ = 12						; size = 4
_max$ = 16						; size = 4
_BIO_indent PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 311
	push	ebx
; Line 312
	mov	ebx, DWORD PTR _indent$[esp]
	xor	eax, eax
	test	ebx, ebx
	push	esi
	cmovs	ebx, eax
; Line 314
	cmp	ebx, DWORD PTR _max$[esp+4]
	push	edi
	cmovg	ebx, DWORD PTR _max$[esp+8]
; Line 316
	test	ebx, ebx
	je	SHORT $LN18@BIO_indent
	mov	esi, DWORD PTR _b$[esp+8]
	npad	1
$LL2@BIO_indent:
	dec	ebx
; Line 258
	test	esi, esi
	je	$LN10@BIO_indent
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	$LN10@BIO_indent
	cmp	DWORD PTR [eax+16], 0
	je	$LN10@BIO_indent
; Line 263
	mov	edi, DWORD PTR [esi+4]
; Line 265
	test	edi, edi
	je	SHORT $LN11@BIO_indent
	push	1
	push	0
	push	0
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	4
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN14@BIO_indent
$LN11@BIO_indent:
; Line 268
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN21@BIO_indent
; Line 273
	mov	eax, DWORD PTR [esi]
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	esi
	mov	eax, DWORD PTR [eax+16]
	call	eax
	add	esp, 8
; Line 275
	test	eax, eax
	jle	SHORT $LN13@BIO_indent
; Line 276
	add	DWORD PTR [esi+52], eax
$LN13@BIO_indent:
; Line 278
	test	edi, edi
	je	SHORT $LN14@BIO_indent
; Line 279
	push	eax
	push	0
	push	0
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	132					; 00000084H
	push	esi
	call	edi
	add	esp, 24					; 00000018H
$LN14@BIO_indent:
; Line 317
	cmp	eax, 1
	jne	SHORT $LN17@BIO_indent
; Line 316
	test	ebx, ebx
	jne	SHORT $LL2@BIO_indent
$LN18@BIO_indent:
	pop	edi
	pop	esi
; Line 319
	mov	eax, 1
	pop	ebx
; Line 320
	ret	0
$LN21@BIO_indent:
; Line 269
	push	269					; 0000010dH
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	120					; 00000078H
	push	110					; 0000006eH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 318
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 320
	ret	0
$LN10@BIO_indent:
; Line 259
	push	259					; 00000103H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	121					; 00000079H
	push	110					; 0000006eH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN17@BIO_indent:
	pop	edi
	pop	esi
; Line 318
	xor	eax, eax
	pop	ebx
; Line 320
	ret	0
_BIO_indent ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_puts
_TEXT	SEGMENT
_b$ = 8							; size = 4
_in$ = 12						; size = 4
_BIO_puts PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 254
	push	esi
; Line 258
	mov	esi, DWORD PTR _b$[esp]
	test	esi, esi
	je	SHORT $LN3@BIO_puts
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@BIO_puts
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@BIO_puts
; Line 265
	push	ebx
	mov	ebx, DWORD PTR _in$[esp+4]
	push	edi
	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN4@BIO_puts
	push	1
	push	0
	push	0
	push	ebx
	push	4
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN9@BIO_puts
$LN4@BIO_puts:
; Line 268
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN5@BIO_puts
; Line 269
	push	269					; 0000010dH
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	120					; 00000078H
	push	110					; 0000006eH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 270
	mov	eax, -2					; fffffffeH
$LN9@BIO_puts:
	pop	edi
	pop	ebx
	pop	esi
; Line 281
	ret	0
$LN5@BIO_puts:
; Line 273
	mov	eax, DWORD PTR [esi]
	push	ebx
	push	esi
	mov	eax, DWORD PTR [eax+16]
	call	eax
	add	esp, 8
; Line 275
	test	eax, eax
	jle	SHORT $LN6@BIO_puts
; Line 276
	add	DWORD PTR [esi+52], eax
$LN6@BIO_puts:
; Line 278
	test	edi, edi
	je	SHORT $LN9@BIO_puts
; Line 279
	push	eax
	push	0
	push	0
	push	ebx
	push	132					; 00000084H
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	pop	edi
	pop	ebx
	pop	esi
; Line 281
	ret	0
$LN3@BIO_puts:
; Line 259
	push	259					; 00000103H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	121					; 00000079H
	push	110					; 0000006eH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 260
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 281
	ret	0
_BIO_puts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_write
_TEXT	SEGMENT
_b$ = 8							; size = 4
_in$ = 12						; size = 4
_inl$ = 16						; size = 4
_BIO_write PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 221
	push	esi
; Line 225
	mov	esi, DWORD PTR _b$[esp]
	test	esi, esi
	jne	SHORT $LN2@BIO_write
; Line 226
	xor	eax, eax
	pop	esi
; Line 251
	ret	0
$LN2@BIO_write:
; Line 229
	mov	eax, DWORD PTR [esi]
	push	edi
	mov	edi, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@BIO_write
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN4@BIO_write
; Line 234
	push	ebx
	mov	ebx, DWORD PTR _inl$[esp+8]
	push	ebp
	mov	ebp, DWORD PTR _in$[esp+12]
	test	edi, edi
	je	SHORT $LN5@BIO_write
	push	1
	push	0
	push	ebx
	push	ebp
	push	3
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN11@BIO_write
$LN5@BIO_write:
; Line 238
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN6@BIO_write
; Line 239
	push	239					; 000000efH
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	120					; 00000078H
	push	113					; 00000071H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 240
	mov	eax, -2					; fffffffeH
$LN11@BIO_write:
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 251
	ret	0
$LN6@BIO_write:
; Line 243
	mov	eax, DWORD PTR [esi]
	push	ebx
	push	ebp
	push	esi
	mov	eax, DWORD PTR [eax+8]
	call	eax
	add	esp, 12					; 0000000cH
; Line 245
	test	eax, eax
	jle	SHORT $LN7@BIO_write
; Line 246
	add	DWORD PTR [esi+52], eax
$LN7@BIO_write:
; Line 248
	test	edi, edi
	je	SHORT $LN11@BIO_write
; Line 249
	push	eax
	push	0
	push	ebx
	push	ebp
	push	131					; 00000083H
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 251
	ret	0
$LN4@BIO_write:
; Line 230
	push	230					; 000000e6H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	121					; 00000079H
	push	113					; 00000071H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 231
	mov	eax, -2					; fffffffeH
	pop	edi
	pop	esi
; Line 251
	ret	0
_BIO_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_gets
_TEXT	SEGMENT
_b$ = 8							; size = 4
_in$ = 12						; size = 4
_inl$ = 16						; size = 4
_BIO_gets PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 284
	push	esi
; Line 288
	mov	esi, DWORD PTR _b$[esp]
	test	esi, esi
	je	SHORT $LN3@BIO_gets
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@BIO_gets
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN3@BIO_gets
; Line 295
	push	ebx
	mov	ebx, DWORD PTR _inl$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR _in$[esp+8]
	push	edi
	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN4@BIO_gets
	push	1
	push	0
	push	ebx
	push	ebp
	push	5
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN8@BIO_gets
$LN4@BIO_gets:
; Line 298
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN5@BIO_gets
; Line 299
	push	299					; 0000012bH
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	120					; 00000078H
	push	104					; 00000068H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 300
	mov	eax, -2					; fffffffeH
$LN8@BIO_gets:
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 308
	ret	0
$LN5@BIO_gets:
; Line 303
	mov	eax, DWORD PTR [esi]
	push	ebx
	push	ebp
	push	esi
	mov	eax, DWORD PTR [eax+20]
	call	eax
	add	esp, 12					; 0000000cH
; Line 305
	test	edi, edi
	je	SHORT $LN8@BIO_gets
; Line 306
	push	eax
	push	0
	push	ebx
	push	ebp
	push	133					; 00000085H
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 308
	ret	0
$LN3@BIO_gets:
; Line 289
	push	289					; 00000121H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	121					; 00000079H
	push	104					; 00000068H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 290
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 308
	ret	0
_BIO_gets ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_read
_TEXT	SEGMENT
_b$ = 8							; size = 4
_out$ = 12						; size = 4
_outl$ = 16						; size = 4
_BIO_read PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 191
	push	esi
; Line 195
	mov	esi, DWORD PTR _b$[esp]
	test	esi, esi
	je	$LN3@BIO_read
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@BIO_read
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN3@BIO_read
; Line 201
	push	ebx
	mov	ebx, DWORD PTR _outl$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR _out$[esp+8]
	push	edi
	mov	edi, DWORD PTR [esi+4]
	test	edi, edi
	je	SHORT $LN4@BIO_read
	push	1
	push	0
	push	ebx
	push	ebp
	push	2
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN9@BIO_read
$LN4@BIO_read:
; Line 205
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN5@BIO_read
; Line 206
	push	206					; 000000ceH
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	120					; 00000078H
	push	111					; 0000006fH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 207
	mov	eax, -2					; fffffffeH
$LN9@BIO_read:
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 218
	ret	0
$LN5@BIO_read:
; Line 210
	mov	eax, DWORD PTR [esi]
	push	ebx
	push	ebp
	push	esi
	mov	eax, DWORD PTR [eax+12]
	call	eax
	add	esp, 12					; 0000000cH
; Line 212
	test	eax, eax
	jle	SHORT $LN6@BIO_read
; Line 213
	add	DWORD PTR [esi+48], eax
$LN6@BIO_read:
; Line 215
	test	edi, edi
	je	SHORT $LN9@BIO_read
; Line 216
	push	eax
	push	0
	push	ebx
	push	ebp
	push	130					; 00000082H
	push	esi
	call	edi
	add	esp, 24					; 00000018H
	pop	edi
	pop	ebp
	pop	ebx
	pop	esi
; Line 218
	ret	0
$LN3@BIO_read:
; Line 196
	push	196					; 000000c4H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	121					; 00000079H
	push	111					; 0000006fH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 197
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 218
	ret	0
_BIO_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_vfree
_TEXT	SEGMENT
_a$ = 8							; size = 4
_BIO_vfree PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 140
	jmp	_BIO_free
_BIO_vfree ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_BIO_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 108
	push	esi
; Line 111
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	jne	SHORT $LN2@BIO_free
; Line 112
	xor	eax, eax
	pop	esi
; Line 136
	ret	0
$LN2@BIO_free:
; Line 114
	push	114					; 00000072H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	21					; 00000015H
	lea	eax, DWORD PTR [esi+44]
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 118
	test	eax, eax
	jg	SHORT $LN7@BIO_free
; Line 126
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@BIO_free
	push	1
	push	0
	push	0
	push	0
	push	1
	push	esi
	call	eax
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN1@BIO_free
$LN4@BIO_free:
; Line 130
	lea	eax, DWORD PTR [esi+56]
	push	eax
	push	esi
	push	0
	call	_CRYPTO_free_ex_data
; Line 132
	mov	eax, DWORD PTR [esi]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@BIO_free
	mov	eax, DWORD PTR [eax+32]
	test	eax, eax
	je	SHORT $LN5@BIO_free
; Line 133
	push	esi
	call	eax
	add	esp, 4
$LN5@BIO_free:
; Line 134
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN7@BIO_free:
; Line 135
	mov	eax, 1
$LN1@BIO_free:
	pop	esi
; Line 136
	ret	0
_BIO_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_set
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_method$ = 12						; size = 4
_BIO_set PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 83
	push	ebx
	push	esi
; Line 84
	mov	esi, DWORD PTR _method$[esp+4]
	push	edi
	mov	edi, DWORD PTR _bio$[esp+8]
; Line 98
	lea	ebx, DWORD PTR [edi+56]
	mov	DWORD PTR [edi], esi
	push	ebx
	push	edi
	push	0
	mov	DWORD PTR [edi+4], 0
	mov	DWORD PTR [edi+8], 0
	mov	DWORD PTR [edi+12], 0
	mov	DWORD PTR [edi+16], 1
	mov	DWORD PTR [edi+20], 0
	mov	DWORD PTR [edi+24], 0
	mov	DWORD PTR [edi+28], 0
	mov	DWORD PTR [edi+32], 0
	mov	DWORD PTR [edi+40], 0
	mov	DWORD PTR [edi+36], 0
	mov	DWORD PTR [edi+44], 1
	mov	DWORD PTR [edi+48], 0
	mov	DWORD PTR [edi+52], 0
	call	_CRYPTO_new_ex_data
; Line 99
	mov	eax, DWORD PTR [esi+28]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@BIO_set
; Line 100
	push	edi
	call	eax
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@BIO_set
; Line 101
	push	ebx
	push	edi
	push	eax
	call	_CRYPTO_free_ex_data
	add	esp, 12					; 0000000cH
; Line 102
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 105
	ret	0
$LN3@BIO_set:
	pop	edi
	pop	esi
; Line 104
	mov	eax, 1
	pop	ebx
; Line 105
	ret	0
_BIO_set ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new
_TEXT	SEGMENT
_method$ = 8						; size = 4
_BIO_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 67
	push	esi
; Line 70
	push	70					; 00000046H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	64					; 00000040H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 71
	test	esi, esi
	jne	SHORT $LN2@BIO_new
; Line 72
	push	72					; 00000048H
	push	OFFSET ??_C@_0BH@MODMECLL@?4?2crypto?2bio?2bio_lib?4c?$AA@
	push	65					; 00000041H
	push	108					; 0000006cH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 73
	xor	eax, eax
	pop	esi
; Line 80
	ret	0
$LN2@BIO_new:
; Line 75
	push	DWORD PTR _method$[esp]
	push	esi
	call	_BIO_set
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@BIO_new
; Line 76
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 77
	xor	esi, esi
$LN3@BIO_new:
; Line 79
	mov	eax, esi
	pop	esi
; Line 80
	ret	0
_BIO_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_number_written
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_BIO_number_written PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 591
	mov	eax, DWORD PTR _bio$[esp-4]
	test	eax, eax
	je	SHORT $LN2@BIO_number
; Line 592
	mov	eax, DWORD PTR [eax+52]
; Line 594
	ret	0
$LN2@BIO_number:
; Line 593
	xor	eax, eax
; Line 594
	ret	0
_BIO_number_written ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_number_read
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_BIO_number_read PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 584
	mov	eax, DWORD PTR _bio$[esp-4]
	test	eax, eax
	je	SHORT $LN2@BIO_number
; Line 585
	mov	eax, DWORD PTR [eax+48]
; Line 587
	ret	0
$LN2@BIO_number:
; Line 586
	xor	eax, eax
; Line 587
	ret	0
_BIO_number_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_get_ex_new_index
_TEXT	SEGMENT
_argl$ = 8						; size = 4
_argp$ = 12						; size = 4
_new_func$ = 16						; size = 4
_dup_func$ = 20						; size = 4
_free_func$ = 24					; size = 4
_BIO_get_ex_new_index PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 568
	push	DWORD PTR _free_func$[esp-4]
	push	DWORD PTR _dup_func$[esp]
	push	DWORD PTR _new_func$[esp+4]
	push	DWORD PTR _argp$[esp+8]
	push	DWORD PTR _argl$[esp+12]
	push	0
	call	_CRYPTO_get_ex_new_index
	add	esp, 24					; 00000018H
; Line 570
	ret	0
_BIO_get_ex_new_index ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_get_ex_data
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_idx$ = 12						; size = 4
_BIO_get_ex_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 579
	add	DWORD PTR _bio$[esp-4], 56		; 00000038H
	jmp	_CRYPTO_get_ex_data
_BIO_get_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_set_ex_data
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_idx$ = 12						; size = 4
_data$ = 16						; size = 4
_BIO_set_ex_data PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 574
	add	DWORD PTR _bio$[esp-4], 56		; 00000038H
	jmp	_CRYPTO_set_ex_data
_BIO_set_ex_data ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_ctrl_wpending
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_BIO_ctrl_wpending PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 406
	push	0
	push	0
	push	13					; 0000000dH
	push	DWORD PTR _bio$[esp+8]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 407
	ret	0
_BIO_ctrl_wpending ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_ctrl_pending
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_BIO_ctrl_pending PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 401
	push	0
	push	0
	push	10					; 0000000aH
	push	DWORD PTR _bio$[esp+8]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 402
	ret	0
_BIO_ctrl_pending ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_method_type
_TEXT	SEGMENT
_b$ = 8							; size = 4
_BIO_method_type PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 187
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax]
; Line 188
	ret	0
_BIO_method_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_method_name
_TEXT	SEGMENT
_b$ = 8							; size = 4
_BIO_method_name PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 182
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
; Line 183
	ret	0
_BIO_method_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_set_callback_arg
_TEXT	SEGMENT
_b$ = 8							; size = 4
_arg$ = 12						; size = 4
_BIO_set_callback_arg PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 172
	mov	eax, DWORD PTR _b$[esp-4]
	mov	ecx, DWORD PTR _arg$[esp-4]
	mov	DWORD PTR [eax+8], ecx
; Line 173
	ret	0
_BIO_set_callback_arg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_get_callback_arg
_TEXT	SEGMENT
_b$ = 8							; size = 4
_BIO_get_callback_arg PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 177
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax+8]
; Line 178
	ret	0
_BIO_get_callback_arg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_set_callback
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cb$ = 12						; size = 4
_BIO_set_callback PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 167
	mov	eax, DWORD PTR _b$[esp-4]
	mov	ecx, DWORD PTR _cb$[esp-4]
	mov	DWORD PTR [eax+4], ecx
; Line 168
	ret	0
_BIO_set_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_get_callback
_TEXT	SEGMENT
_b$ = 8							; size = 4
_BIO_get_callback PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 160
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax+4]
; Line 161
	ret	0
_BIO_get_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_clear_flags
_TEXT	SEGMENT
_b$ = 8							; size = 4
_flags$ = 12						; size = 4
_BIO_clear_flags PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 145
	mov	ecx, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR _flags$[esp-4]
	not	eax
	and	DWORD PTR [ecx+20], eax
; Line 146
	ret	0
_BIO_clear_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_test_flags
_TEXT	SEGMENT
_b$ = 8							; size = 4
_flags$ = 12						; size = 4
_BIO_test_flags PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 150
	mov	eax, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR [eax+20]
	and	eax, DWORD PTR _flags$[esp-4]
; Line 151
	ret	0
_BIO_test_flags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_set_flags
_TEXT	SEGMENT
_b$ = 8							; size = 4
_flags$ = 12						; size = 4
_BIO_set_flags PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bio_lib.c
; Line 155
	mov	ecx, DWORD PTR _b$[esp-4]
	mov	eax, DWORD PTR _flags$[esp-4]
	or	DWORD PTR [ecx+20], eax
; Line 156
	ret	0
_BIO_set_flags ENDP
_TEXT	ENDS
END

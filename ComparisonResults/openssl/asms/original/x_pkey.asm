; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_pkey.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_X509_PKEY_new
PUBLIC	_X509_PKEY_free
PUBLIC	_i2d_X509_PKEY
PUBLIC	_d2i_X509_PKEY
PUBLIC	??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@ ; `string'
EXTRN	_CRYPTO_add_lock:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_d2i_ASN1_OCTET_STRING:PROC
EXTRN	_asn1_const_Finish:PROC
EXTRN	_OBJ_nid2ln:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_asn1_GetSequence:PROC
EXTRN	_asn1_add_error:PROC
EXTRN	_X509_ALGOR_new:PROC
EXTRN	_X509_ALGOR_free:PROC
EXTRN	_d2i_X509_ALGOR:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@
CONST	SEGMENT
??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@ DB '.\crypto\asn1\x_p'
	DB	'key.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_X509_PKEY
_TEXT	SEGMENT
_c$ = -44						; size = 44
_a$ = 8							; size = 4
_pp$ = 12						; size = 4
_length$ = 16						; size = 4
_d2i_X509_PKEY PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_pkey.c
; Line 73
	mov	eax, 44					; 0000002cH
	call	__chkstk
	push	ebx
; Line 75
	mov	ebx, DWORD PTR _pp$[esp+44]
	push	ebp
	push	esi
	push	edi
	mov	edi, DWORD PTR _a$[esp+56]
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _c$[esp+96], ebx
	mov	DWORD PTR _c$[esp+92], eax
	mov	DWORD PTR _c$[esp+68], 58		; 0000003aH
	test	edi, edi
	je	SHORT $LN4@d2i_X509_P
	mov	esi, DWORD PTR [edi]
	test	esi, esi
	jne	SHORT $LN5@d2i_X509_P
$LN4@d2i_X509_P:
	call	_X509_PKEY_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN5@d2i_X509_P
	lea	ecx, DWORD PTR [eax+75]
	jmp	$LN20@d2i_X509_P
$LN5@d2i_X509_P:
; Line 77
	mov	ecx, DWORD PTR _length$[esp+56]
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR _c$[esp+60], eax
	test	ecx, ecx
	jne	SHORT $LN18@d2i_X509_P
	mov	DWORD PTR _c$[esp+88], ecx
	jmp	SHORT $LN19@d2i_X509_P
$LN18@d2i_X509_P:
	add	eax, ecx
	mov	DWORD PTR _c$[esp+88], eax
$LN19@d2i_X509_P:
; Line 78
	lea	eax, DWORD PTR _length$[esp+56]
	push	eax
	lea	eax, DWORD PTR _c$[esp+64]
	push	eax
	call	_asn1_GetSequence
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@d2i_X509_P
	lea	ecx, DWORD PTR [eax+78]
	jmp	$LN20@d2i_X509_P
$LN6@d2i_X509_P:
; Line 79
	mov	eax, DWORD PTR _c$[esp+60]
	lea	ebp, DWORD PTR [esi+4]
	push	DWORD PTR _c$[esp+84]
	mov	DWORD PTR _c$[esp+96], eax
	lea	eax, DWORD PTR _c$[esp+64]
	push	eax
	push	ebp
	call	_d2i_X509_ALGOR
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@d2i_X509_P
	lea	ecx, DWORD PTR [eax+79]
	jmp	$LN20@d2i_X509_P
$LN7@d2i_X509_P:
	mov	eax, DWORD PTR _c$[esp+92]
	mov	edx, DWORD PTR _c$[esp+60]
	sub	eax, edx
	mov	ecx, DWORD PTR _c$[esp+84]
	add	ecx, eax
; Line 80
	mov	DWORD PTR _c$[esp+92], edx
	push	ecx
	lea	eax, DWORD PTR _c$[esp+64]
	mov	DWORD PTR _c$[esp+88], ecx
	push	eax
	lea	eax, DWORD PTR [esi+8]
	push	eax
	call	_d2i_ASN1_OCTET_STRING
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN8@d2i_X509_P
	lea	ecx, DWORD PTR [eax+80]
	jmp	$LN20@d2i_X509_P
$LN8@d2i_X509_P:
	mov	eax, DWORD PTR _c$[esp+92]
	sub	eax, DWORD PTR _c$[esp+60]
	add	DWORD PTR _c$[esp+84], eax
; Line 82
	mov	eax, DWORD PTR [ebp]
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2ln
	push	eax
	call	_EVP_get_cipherbyname
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+28], eax
; Line 85
	test	eax, eax
	jne	SHORT $LN9@d2i_X509_P
; Line 86
	mov	DWORD PTR _c$[esp+68], 165		; 000000a5H
; Line 87
	lea	ecx, DWORD PTR [eax+87]
; Line 88
	jmp	SHORT $LN20@d2i_X509_P
$LN9@d2i_X509_P:
; Line 90
	mov	eax, DWORD PTR [ebp]
	mov	eax, DWORD PTR [eax+4]
	cmp	DWORD PTR [eax], 4
	jne	SHORT $LN10@d2i_X509_P
; Line 91
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
; Line 92
	cmp	ecx, 16					; 00000010H
	jle	SHORT $LN12@d2i_X509_P
; Line 93
	mov	DWORD PTR _c$[esp+68], 135		; 00000087H
; Line 94
	mov	ecx, 94					; 0000005eH
; Line 95
	jmp	SHORT $LN20@d2i_X509_P
$LN12@d2i_X509_P:
; Line 97
	push	ecx
	push	DWORD PTR [eax+8]
	lea	eax, DWORD PTR [esi+32]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 99
	jmp	SHORT $LN11@d2i_X509_P
$LN10@d2i_X509_P:
	xorps	xmm0, xmm0
; Line 100
	movups	XMMWORD PTR [esi+32], xmm0
$LN11@d2i_X509_P:
; Line 101
	lea	eax, DWORD PTR _c$[esp+60]
	push	eax
	call	_asn1_const_Finish
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN13@d2i_X509_P
	mov	ecx, 101				; 00000065H
$LN20@d2i_X509_P:
	mov	DWORD PTR _c$[esp+100], ecx
$err$22:
	push	ecx
	push	OFFSET ??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@
	push	DWORD PTR _c$[esp+76]
	push	159					; 0000009fH
	push	13					; 0000000dH
	call	_ERR_put_error
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR _c$[esp+112]
	sub	eax, ecx
	push	eax
	push	ecx
	call	_asn1_add_error
	add	esp, 28					; 0000001cH
	test	esi, esi
	je	SHORT $LN15@d2i_X509_P
	test	edi, edi
	je	SHORT $LN16@d2i_X509_P
	cmp	DWORD PTR [edi], esi
	je	SHORT $LN15@d2i_X509_P
$LN16@d2i_X509_P:
	push	esi
	call	_X509_PKEY_free
	add	esp, 4
$LN15@d2i_X509_P:
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 102
	add	esp, 44					; 0000002cH
	ret	0
$LN13@d2i_X509_P:
; Line 101
	mov	eax, DWORD PTR _c$[esp+60]
	mov	DWORD PTR [ebx], eax
	test	edi, edi
	je	SHORT $LN14@d2i_X509_P
	mov	DWORD PTR [edi], esi
$LN14@d2i_X509_P:
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 102
	add	esp, 44					; 0000002cH
	ret	0
_d2i_X509_PKEY ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_X509_PKEY
_TEXT	SEGMENT
_a$ = 8							; size = 4
_pp$ = 12						; size = 4
_i2d_X509_PKEY PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_pkey.c
; Line 69
	xor	eax, eax
; Line 70
	ret	0
_i2d_X509_PKEY ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_PKEY_free
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_PKEY_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_pkey.c
; Line 125
	push	esi
; Line 128
	mov	esi, DWORD PTR _x$[esp]
	test	esi, esi
	je	SHORT $LN1@X509_PKEY_
; Line 131
	push	131					; 00000083H
	push	OFFSET ??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@
	push	5
	lea	eax, DWORD PTR [esi+48]
	push	-1
	push	eax
	call	_CRYPTO_add_lock
	add	esp, 20					; 00000014H
; Line 135
	test	eax, eax
	jg	SHORT $LN1@X509_PKEY_
; Line 144
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN4@X509_PKEY_
; Line 145
	push	eax
	call	_X509_ALGOR_free
	add	esp, 4
$LN4@X509_PKEY_:
; Line 146
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN5@X509_PKEY_
; Line 147
	push	eax
	call	_ASN1_STRING_free
	add	esp, 4
$LN5@X509_PKEY_:
; Line 148
	mov	eax, DWORD PTR [esi+12]
	test	eax, eax
	je	SHORT $LN6@X509_PKEY_
; Line 149
	push	eax
	call	_EVP_PKEY_free
	add	esp, 4
$LN6@X509_PKEY_:
; Line 150
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN7@X509_PKEY_
	cmp	DWORD PTR [esi+24], 0
	je	SHORT $LN7@X509_PKEY_
; Line 151
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN7@X509_PKEY_:
; Line 152
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@X509_PKEY_:
	pop	esi
; Line 153
	ret	0
_X509_PKEY_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_PKEY_new
_TEXT	SEGMENT
_X509_PKEY_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_pkey.c
; Line 105
	push	esi
; Line 109
	push	109					; 0000006dH
	push	OFFSET ??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@
	push	52					; 00000034H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN2@X509_PKEY_
$err2$8:
; Line 121
	push	109					; 0000006dH
	push	OFFSET ??_C@_0BH@BCLEMDFK@?4?2crypto?2asn1?2x_pkey?4c?$AA@
	push	65					; 00000041H
	push	173					; 000000adH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN6@X509_PKEY_:
	xor	eax, eax
	pop	esi
; Line 122
	ret	0
$LN2@X509_PKEY_:
; Line 110
	mov	DWORD PTR [esi], 0
; Line 111
	call	_X509_ALGOR_new
	mov	DWORD PTR [esi+4], eax
	test	eax, eax
	je	SHORT $LN6@X509_PKEY_
; Line 112
	push	4
	call	_ASN1_STRING_type_new
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	je	SHORT $LN6@X509_PKEY_
; Line 113
	mov	DWORD PTR [esi+12], 0
	xorps	xmm0, xmm0
; Line 114
	mov	DWORD PTR [esi+16], 0
; Line 120
	mov	eax, esi
	mov	DWORD PTR [esi+20], 0
	mov	DWORD PTR [esi+24], 0
	mov	DWORD PTR [esi+28], 0
	movups	XMMWORD PTR [esi+32], xmm0
	mov	DWORD PTR [esi+48], 1
	pop	esi
; Line 122
	ret	0
_X509_PKEY_new ENDP
_TEXT	ENDS
END

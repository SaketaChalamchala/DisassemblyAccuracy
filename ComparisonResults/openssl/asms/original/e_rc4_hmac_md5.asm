; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc4_hmac_md5.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_r4_hmac_md5_cipher DD 0393H
	DD	01H
	DD	010H
	DD	00H
	DD	0200008H
	DD	FLAT:_rc4_hmac_md5_init_key
	DD	FLAT:_rc4_hmac_md5_cipher
	DD	00H
	DD	0520H
	DD	00H
	DD	00H
	DD	FLAT:_rc4_hmac_md5_ctrl
	DD	00H
_DATA	ENDS
PUBLIC	_EVP_rc4_hmac_md5
PUBLIC	__xmm@36363636363636363636363636363636
PUBLIC	__xmm@6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a
EXTRN	_CRYPTO_memcmp:PROC
EXTRN	_EVP_CIPHER_CTX_key_length:PROC
EXTRN	_RC4_set_key:PROC
EXTRN	_RC4:PROC
EXTRN	_MD5_Init:PROC
EXTRN	_MD5_Update:PROC
EXTRN	_MD5_Final:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT __xmm@6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a
CONST	SEGMENT
__xmm@6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a DB 'jjjjjjjjjjjjjjjj'
CONST	ENDS
;	COMDAT __xmm@36363636363636363636363636363636
CONST	SEGMENT
__xmm@36363636363636363636363636363636 DB '6666666666666666'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc4_hmac_md5_ctrl
_TEXT	SEGMENT
_hmac_key$1 = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_arg$ = 16						; size = 4
_ptr$ = 20						; size = 4
_rc4_hmac_md5_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc4_hmac_md5.c
; Line 228
	mov	eax, 68					; 00000044H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+68], eax
	mov	edx, DWORD PTR _ctx$[esp+64]
; Line 231
	mov	eax, DWORD PTR _type$[esp+64]
	push	ebx
	mov	ebx, DWORD PTR _ptr$[esp+68]
	push	ebp
	mov	ebp, DWORD PTR [edx+96]
	push	esi
	push	edi
	mov	edi, DWORD PTR _arg$[esp+80]
	sub	eax, 22					; 00000016H
	je	$LN13@rc4_hmac_m
	sub	eax, 1
	jne	$LN38@rc4_hmac_m
; Line 237
	push	64					; 00000040H
	push	eax
	lea	eax, DWORD PTR _hmac_key$1[esp+92]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 239
	cmp	edi, 64					; 00000040H
	jle	SHORT $LN11@rc4_hmac_m
; Line 240
	lea	esi, DWORD PTR [ebp+1032]
	push	esi
	call	_MD5_Init
; Line 241
	push	edi
	push	ebx
	push	esi
	call	_MD5_Update
; Line 242
	lea	eax, DWORD PTR _hmac_key$1[esp+100]
	push	esi
	push	eax
	call	_MD5_Final
	add	esp, 24					; 00000018H
; Line 243
	jmp	SHORT $LN12@rc4_hmac_m
$LN11@rc4_hmac_m:
; Line 244
	push	edi
	lea	eax, DWORD PTR _hmac_key$1[esp+88]
	push	ebx
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN12@rc4_hmac_m:
; Line 247
	movaps	xmm1, XMMWORD PTR __xmm@36363636363636363636363636363636
	xor	eax, eax
	npad	1
$LL6@rc4_hmac_m:
; Line 248
	movups	xmm0, XMMWORD PTR _hmac_key$1[esp+eax+84]
	pxor	xmm0, xmm1
	movups	XMMWORD PTR _hmac_key$1[esp+eax+84], xmm0
	movups	xmm0, XMMWORD PTR _hmac_key$1[esp+eax+100]
	pxor	xmm0, xmm1
	movups	XMMWORD PTR _hmac_key$1[esp+eax+100], xmm0
	add	eax, 32					; 00000020H
	cmp	eax, 64					; 00000040H
	jb	SHORT $LL6@rc4_hmac_m
; Line 249
	lea	esi, DWORD PTR [ebp+1032]
	push	esi
	call	_MD5_Init
; Line 250
	push	64					; 00000040H
	lea	eax, DWORD PTR _hmac_key$1[esp+92]
	push	eax
	push	esi
	call	_MD5_Update
	movaps	xmm1, XMMWORD PTR __xmm@6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a
	add	esp, 16					; 00000010H
; Line 252
	xor	eax, eax
	npad	7
$LL9@rc4_hmac_m:
; Line 253
	movups	xmm0, XMMWORD PTR _hmac_key$1[esp+eax+84]
	pxor	xmm0, xmm1
	movups	XMMWORD PTR _hmac_key$1[esp+eax+84], xmm0
	movups	xmm0, XMMWORD PTR _hmac_key$1[esp+eax+100]
	pxor	xmm0, xmm1
	movups	XMMWORD PTR _hmac_key$1[esp+eax+100], xmm0
	add	eax, 32					; 00000020H
	cmp	eax, 64					; 00000040H
	jb	SHORT $LL9@rc4_hmac_m
; Line 254
	lea	esi, DWORD PTR [ebp+1124]
	push	esi
	call	_MD5_Init
; Line 255
	push	64					; 00000040H
	lea	eax, DWORD PTR _hmac_key$1[esp+92]
	push	eax
	push	esi
	call	_MD5_Update
	add	esp, 16					; 00000010H
; Line 257
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 283
	mov	ecx, DWORD PTR __$ArrayPad$[esp+68]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 68					; 00000044H
	ret	0
$LN13@rc4_hmac_m:
; Line 264
	cmp	edi, 13					; 0000000dH
	je	SHORT $LN14@rc4_hmac_m
$LN38@rc4_hmac_m:
	pop	edi
	pop	esi
	pop	ebp
; Line 265
	or	eax, -1
	pop	ebx
; Line 283
	mov	ecx, DWORD PTR __$ArrayPad$[esp+68]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 68					; 00000044H
	ret	0
$LN14@rc4_hmac_m:
; Line 267
	movzx	ecx, BYTE PTR [ebx+11]
	movzx	eax, BYTE PTR [ebx+12]
	shl	ecx, 8
	or	ecx, eax
; Line 269
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN15@rc4_hmac_m
; Line 270
	sub	ecx, 16					; 00000010H
; Line 271
	mov	eax, ecx
; Line 272
	mov	BYTE PTR [ebx+12], cl
	shr	eax, 8
	mov	BYTE PTR [ebx+11], al
$LN15@rc4_hmac_m:
; Line 275
	lea	eax, DWORD PTR [ebp+1216]
	mov	DWORD PTR [ebp+1308], ecx
; Line 276
	push	13					; 0000000dH
	mov	edi, eax
	lea	esi, DWORD PTR [ebp+1032]
	mov	ecx, 23					; 00000017H
	push	ebx
	rep movsd
	push	eax
	call	_MD5_Update
; Line 283
	mov	ecx, DWORD PTR __$ArrayPad$[esp+96]
	add	esp, 12					; 0000000cH
	mov	eax, 16					; 00000010H
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 68					; 00000044H
	ret	0
_rc4_hmac_md5_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc4_hmac_md5_cipher
_TEXT	SEGMENT
_in$GSCopy$1$ = -32					; size = 4
_out$GSCopy$1$ = -28					; size = 4
_key$1$ = -24						; size = 4
_mac$1 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
_len$ = 20						; size = 4
_rc4_hmac_md5_cipher PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc4_hmac_md5.c
; Line 117
	mov	eax, 32					; 00000020H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+32], eax
	mov	ecx, DWORD PTR _ctx$[esp+28]
	mov	eax, DWORD PTR _in$[esp+28]
	push	ebx
; Line 128
	mov	ebx, DWORD PTR _len$[esp+32]
	push	ebp
	push	esi
	mov	esi, DWORD PTR [ecx+96]
	push	edi
	mov	edi, DWORD PTR _out$[esp+44]
	mov	DWORD PTR _out$GSCopy$1$[esp+48], edi
	mov	ebp, DWORD PTR [esi+1308]
	mov	DWORD PTR _in$GSCopy$1$[esp+48], eax
	mov	DWORD PTR _key$1$[esp+48], esi
	cmp	ebp, -1
	je	SHORT $LN2@rc4_hmac_m
	lea	eax, DWORD PTR [ebp+16]
	cmp	ebx, eax
	jne	$LN15@rc4_hmac_m
	mov	eax, DWORD PTR _in$GSCopy$1$[esp+48]
$LN2@rc4_hmac_m:
; Line 131
	cmp	DWORD PTR [ecx+8], 0
	je	$LN3@rc4_hmac_m
; Line 132
	cmp	ebp, -1
; Line 158
	lea	ecx, DWORD PTR [esi+1216]
	cmove	ebp, ebx
	push	ebp
	push	eax
	push	ecx
	call	_MD5_Update
; Line 161
	mov	eax, DWORD PTR _in$GSCopy$1$[esp+60]
	add	esp, 12					; 0000000cH
	cmp	ebp, ebx
	je	SHORT $LN6@rc4_hmac_m
	cmp	eax, edi
	je	SHORT $LN8@rc4_hmac_m
; Line 162
	push	ebp
	push	eax
	push	edi
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN8@rc4_hmac_m:
; Line 165
	lea	ebx, DWORD PTR [edi+ebp]
	lea	ebp, DWORD PTR [esi+1216]
	push	ebp
	push	ebx
	call	_MD5_Final
; Line 167
	push	16					; 00000010H
	add	esi, 1124				; 00000464H
	mov	ecx, 23					; 00000017H
	mov	edi, ebp
	push	ebx
	rep movsd
	push	ebp
	call	_MD5_Update
; Line 168
	push	ebp
	push	ebx
	call	_MD5_Final
; Line 170
	mov	eax, DWORD PTR _out$GSCopy$1$[esp+76]
	mov	esi, DWORD PTR _key$1$[esp+76]
	push	eax
	push	eax
	push	DWORD PTR _len$[esp+80]
	push	esi
	call	_RC4
	add	esp, 44					; 0000002cH
; Line 171
	jmp	$LN10@rc4_hmac_m
$LN6@rc4_hmac_m:
; Line 172
	push	edi
	push	eax
	push	ebx
	push	esi
	call	_RC4
	add	esp, 16					; 00000010H
; Line 174
	jmp	$LN10@rc4_hmac_m
$LN3@rc4_hmac_m:
; Line 204
	push	edi
	push	eax
	push	ebx
	push	esi
	call	_RC4
	add	esp, 16					; 00000010H
; Line 205
	cmp	ebp, -1
	je	SHORT $LN9@rc4_hmac_m
; Line 206
	push	ebp
	lea	ebx, DWORD PTR [esi+1216]
	push	edi
	push	ebx
	call	_MD5_Update
; Line 209
	lea	eax, DWORD PTR _mac$1[esp+60]
	push	ebx
	push	eax
	call	_MD5_Final
; Line 211
	push	16					; 00000010H
	lea	eax, DWORD PTR _mac$1[esp+72]
	add	esi, 1124				; 00000464H
	push	eax
	mov	ecx, 23					; 00000017H
	mov	edi, ebx
	rep movsd
	push	ebx
	call	_MD5_Update
; Line 212
	lea	eax, DWORD PTR _mac$1[esp+80]
	push	ebx
	push	eax
	call	_MD5_Final
; Line 214
	push	16					; 00000010H
	lea	eax, DWORD PTR _mac$1[esp+92]
	push	eax
	mov	eax, DWORD PTR _out$GSCopy$1$[esp+96]
	add	eax, ebp
	push	eax
	call	_CRYPTO_memcmp
	add	esp, 52					; 00000034H
	test	eax, eax
	je	SHORT $LN13@rc4_hmac_m
$LN15@rc4_hmac_m:
	pop	edi
	pop	esi
	pop	ebp
; Line 215
	xor	eax, eax
	pop	ebx
; Line 224
	mov	ecx, DWORD PTR __$ArrayPad$[esp+32]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	ret	0
$LN9@rc4_hmac_m:
; Line 217
	push	ebx
	lea	eax, DWORD PTR [esi+1216]
	push	edi
	push	eax
	call	_MD5_Update
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN10@rc4_hmac_m
$LN13@rc4_hmac_m:
	mov	esi, DWORD PTR _key$1$[esp+48]
$LN10@rc4_hmac_m:
; Line 224
	mov	ecx, DWORD PTR __$ArrayPad$[esp+48]
	mov	eax, 1
	pop	edi
	mov	DWORD PTR [esi+1308], -1
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 32					; 00000020H
	ret	0
_rc4_hmac_md5_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rc4_hmac_md5_init_key
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_inkey$ = 12						; size = 4
_iv$ = 16						; size = 4
_enc$ = 20						; size = 4
_rc4_hmac_md5_init_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc4_hmac_md5.c
; Line 89
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	ebx
	push	ebp
	push	esi
	mov	ebp, DWORD PTR [eax+96]
	push	edi
; Line 91
	push	DWORD PTR _inkey$[esp+12]
	push	eax
	call	_EVP_CIPHER_CTX_key_length
	add	esp, 4
	push	eax
	push	ebp
	call	_RC4_set_key
; Line 93
	lea	ebx, DWORD PTR [ebp+1032]
	push	ebx
	call	_MD5_Init
; Line 94
	lea	edi, DWORD PTR [ebp+1124]
; Line 97
	mov	DWORD PTR [ebp+1308], -1
	mov	esi, ebx
	add	esp, 16					; 00000010H
	mov	ecx, 23					; 00000017H
; Line 99
	mov	eax, 1
	rep movsd
	lea	edi, DWORD PTR [ebp+1216]
	mov	esi, ebx
	mov	ecx, 23					; 00000017H
	rep movsd
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 100
	ret	0
_rc4_hmac_md5_init_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_rc4_hmac_md5
_TEXT	SEGMENT
_EVP_rc4_hmac_md5 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_rc4_hmac_md5.c
; Line 306
	mov	eax, OFFSET _r4_hmac_md5_cipher
; Line 307
	ret	0
_EVP_rc4_hmac_md5 ENDP
_TEXT	ENDS
END

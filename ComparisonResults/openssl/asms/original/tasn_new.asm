; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_new.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ASN1_item_new
PUBLIC	_ASN1_item_ex_new
PUBLIC	_ASN1_template_new
PUBLIC	_ASN1_primitive_new
PUBLIC	??_C@_0BJ@NBOPBEKM@?4?2crypto?2asn1?2tasn_new?4c?$AA@ ; `string'
EXTRN	_sk_new_null:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_ASN1_STRING_type_new:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_item_ex_free:PROC
EXTRN	_asn1_set_choice_selector:PROC
EXTRN	_asn1_get_field_ptr:PROC
EXTRN	_asn1_do_lock:PROC
EXTRN	_asn1_enc_init:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BJ@NBOPBEKM@?4?2crypto?2asn1?2tasn_new?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@NBOPBEKM@?4?2crypto?2asn1?2tasn_new?4c?$AA@ DB '.\crypto\asn1\t'
	DB	'asn_new.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_primitive_clear
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_asn1_primitive_clear PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_new.c
; Line 365
	mov	ecx, DWORD PTR _it$[esp-4]
	test	ecx, ecx
	je	SHORT $LN8@asn1_primi
	mov	eax, DWORD PTR [ecx+16]
	test	eax, eax
	je	SHORT $LN2@asn1_primi
; Line 367
	mov	eax, DWORD PTR [eax+16]
	test	eax, eax
	je	SHORT $LN8@asn1_primi
; Line 368
	mov	DWORD PTR _it$[esp-4], ecx
	jmp	eax
$LN2@asn1_primi:
; Line 373
	cmp	BYTE PTR [ecx], 5
	je	SHORT $LN8@asn1_primi
; Line 377
	cmp	DWORD PTR [ecx+4], 1
	jne	SHORT $LN8@asn1_primi
; Line 378
	mov	eax, DWORD PTR _pval$[esp-4]
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax], ecx
; Line 381
	ret	0
$LN8@asn1_primi:
; Line 380
	mov	eax, DWORD PTR _pval$[esp-4]
	mov	DWORD PTR [eax], 0
; Line 381
	ret	0
_asn1_primitive_clear ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_template_clear
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_tt$ = 12						; size = 4
_asn1_template_clear PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_new.c
; Line 298
	mov	eax, DWORD PTR _tt$[esp-4]
	test	DWORD PTR [eax], 774			; 00000306H
	je	SHORT $LN2@asn1_templ
; Line 299
	mov	eax, DWORD PTR _pval$[esp-4]
	mov	DWORD PTR [eax], 0
; Line 302
	ret	0
$LN2@asn1_templ:
; Line 301
	mov	eax, DWORD PTR [eax+16]
	call	eax
	mov	DWORD PTR _tt$[esp-4], eax
	jmp	_asn1_item_clear
_asn1_template_clear ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_item_clear
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_asn1_item_clear PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_new.c
; Line 224
	mov	eax, DWORD PTR _it$[esp-4]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 6
	ja	SHORT $LN2@asn1_item_
	npad	4
$LL17@asn1_item_:
	jmp	DWORD PTR $LN25@asn1_item_[ecx*4]
$LN7@asn1_item_:
; Line 235
	mov	ecx, DWORD PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN8@asn1_item_
; Line 298
	test	DWORD PTR [ecx], 774			; 00000306H
	jne	SHORT $LN11@asn1_item_
; Line 301
	mov	eax, DWORD PTR [ecx+16]
	call	eax
; Line 224
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 6
	jbe	SHORT $LL17@asn1_item_
; Line 252
	ret	0
$LN8@asn1_item_:
; Line 238
	mov	DWORD PTR _it$[esp-4], eax
	jmp	_asn1_primitive_clear
$LN4@asn1_item_:
; Line 227
	mov	ecx, DWORD PTR [eax+16]
; Line 228
	test	ecx, ecx
	je	SHORT $LN11@asn1_item_
	mov	ecx, DWORD PTR [ecx+12]
	test	ecx, ecx
	je	SHORT $LN11@asn1_item_
; Line 229
	mov	DWORD PTR _it$[esp-4], eax
	jmp	ecx
$LN10@asn1_item_:
; Line 242
	mov	DWORD PTR _it$[esp-4], eax
	jmp	_asn1_primitive_clear
$LN11@asn1_item_:
; Line 249
	mov	eax, DWORD PTR _pval$[esp-4]
	mov	DWORD PTR [eax], 0
$LN2@asn1_item_:
; Line 252
	ret	0
	npad	3
$LN25@asn1_item_:
	DD	$LN7@asn1_item_
	DD	$LN11@asn1_item_
	DD	$LN11@asn1_item_
	DD	$LN11@asn1_item_
	DD	$LN4@asn1_item_
	DD	$LN10@asn1_item_
	DD	$LN11@asn1_item_
_asn1_item_clear ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_item_ex_combine_new
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_i$3$ = 12						; size = 4
_it$ = 12						; size = 4
_combine$ = 16						; size = 4
_asn1_item_ex_combine_new PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_new.c
; Line 90
	push	ebx
	push	ebp
	push	esi
; Line 94
	mov	esi, DWORD PTR _it$[esp+8]
	push	edi
	mov	eax, DWORD PTR [esi+16]
; Line 98
	test	eax, eax
	je	SHORT $LN7@asn1_item_
	mov	ebp, DWORD PTR [eax+16]
	test	ebp, ebp
	jne	SHORT $LN8@asn1_item_
$LN7@asn1_item_:
; Line 101
	xor	ebp, ebp
$LN8@asn1_item_:
; Line 108
	movsx	ecx, BYTE PTR [esi]
	cmp	ecx, 6
	ja	SHORT $LN36@asn1_item_
	jmp	DWORD PTR $LN47@asn1_item_[ecx*4]
$LN9@asn1_item_:
; Line 112
	test	eax, eax
	je	SHORT $LN36@asn1_item_
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN36@asn1_item_
; Line 113
	push	esi
	push	DWORD PTR _pval$[esp+16]
	call	eax
$LN45@asn1_item_:
; Line 129
	add	esp, 8
$LN43@asn1_item_:
; Line 122
	test	eax, eax
	je	$memerr$48
$LN36@asn1_item_:
	pop	edi
	pop	esi
	pop	ebp
; Line 199
	mov	eax, 1
	pop	ebx
; Line 218
	ret	0
$LN12@asn1_item_:
; Line 120
	test	eax, eax
	je	SHORT $LN36@asn1_item_
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN36@asn1_item_
; Line 121
	call	eax
	mov	ecx, DWORD PTR _pval$[esp+12]
	mov	DWORD PTR [ecx], eax
; Line 125
	jmp	SHORT $LN43@asn1_item_
$LN15@asn1_item_:
; Line 128
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN16@asn1_item_
; Line 129
	push	eax
	push	DWORD PTR _pval$[esp+16]
	call	_ASN1_template_new
; Line 131
	jmp	SHORT $LN45@asn1_item_
$LN16@asn1_item_:
	push	esi
	push	DWORD PTR _pval$[esp+16]
	call	_ASN1_primitive_new
; Line 133
	jmp	SHORT $LN45@asn1_item_
$LN22@asn1_item_:
; Line 141
	mov	edi, DWORD PTR _pval$[esp+12]
	test	ebp, ebp
	je	SHORT $LN25@asn1_item_
; Line 142
	push	0
	push	esi
	push	edi
	push	0
	call	ebp
	add	esp, 16					; 00000010H
; Line 143
	test	eax, eax
	je	$auxerr$49
; Line 145
	cmp	eax, 2
	je	SHORT $LN36@asn1_item_
$LN25@asn1_item_:
; Line 153
	cmp	DWORD PTR _combine$[esp+12], 0
	jne	SHORT $LN26@asn1_item_
; Line 154
	push	154					; 0000009aH
	push	OFFSET ??_C@_0BJ@NBOPBEKM@?4?2crypto?2asn1?2tasn_new?4c?$AA@
	push	DWORD PTR [esi+20]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi], eax
; Line 155
	test	eax, eax
	je	$memerr$48
; Line 157
	push	DWORD PTR [esi+20]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN26@asn1_item_:
; Line 159
	push	esi
	push	-1
	push	edi
	call	_asn1_set_choice_selector
	add	esp, 12					; 0000000cH
; Line 160
	test	ebp, ebp
	je	$LN36@asn1_item_
	push	0
	push	esi
	push	edi
	push	1
	call	ebp
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$auxerr$49
; Line 199
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 218
	ret	0
$LN29@asn1_item_:
; Line 166
	mov	edi, DWORD PTR _pval$[esp+12]
	test	ebp, ebp
	je	SHORT $LN32@asn1_item_
; Line 167
	push	0
	push	esi
	push	edi
	push	0
	call	ebp
	add	esp, 16					; 00000010H
; Line 168
	test	eax, eax
	je	$auxerr$49
; Line 170
	cmp	eax, 2
	je	$LN36@asn1_item_
$LN32@asn1_item_:
; Line 178
	cmp	DWORD PTR _combine$[esp+12], 0
	jne	SHORT $LN33@asn1_item_
; Line 179
	push	179					; 000000b3H
	push	OFFSET ??_C@_0BJ@NBOPBEKM@?4?2crypto?2asn1?2tasn_new?4c?$AA@
	push	DWORD PTR [esi+20]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi], eax
; Line 180
	test	eax, eax
	je	$memerr$48
; Line 182
	push	DWORD PTR [esi+20]
	push	0
	push	eax
	call	_memset
; Line 183
	push	esi
	push	0
	push	edi
	call	_asn1_do_lock
; Line 184
	push	esi
	push	edi
	call	_asn1_enc_init
	add	esp, 32					; 00000020H
$LN33@asn1_item_:
; Line 186
	cmp	DWORD PTR [esi+12], 0
	mov	ebx, DWORD PTR [esi+8]
	mov	DWORD PTR _i$3$[esp+12], 0
	jle	SHORT $LN5@asn1_item_
	npad	1
$LL6@asn1_item_:
; Line 187
	push	ebx
	push	edi
	call	_asn1_get_field_ptr
; Line 188
	push	ebx
	push	eax
	call	_ASN1_template_new
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $memerr$48
; Line 186
	mov	eax, DWORD PTR _i$3$[esp+12]
	add	ebx, 20					; 00000014H
	inc	eax
	mov	DWORD PTR _i$3$[esp+12], eax
	cmp	eax, DWORD PTR [esi+12]
	jl	SHORT $LL6@asn1_item_
$LN5@asn1_item_:
; Line 191
	test	ebp, ebp
	je	$LN36@asn1_item_
	push	0
	push	esi
	push	edi
	push	1
	call	ebp
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	$LN36@asn1_item_
$auxerr$49:
; Line 210
	push	210					; 000000d2H
	push	OFFSET ??_C@_0BJ@NBOPBEKM@?4?2crypto?2asn1?2tasn_new?4c?$AA@
	push	100					; 00000064H
	push	121					; 00000079H
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 211
	push	esi
	push	edi
	call	_ASN1_item_ex_free
	add	esp, 28					; 0000001cH
; Line 216
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 218
	ret	0
$memerr$48:
; Line 202
	push	202					; 000000caH
	push	OFFSET ??_C@_0BJ@NBOPBEKM@?4?2crypto?2asn1?2tasn_new?4c?$AA@
	push	65					; 00000041H
	push	121					; 00000079H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 207
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 218
	ret	0
	npad	2
$LN47@asn1_item_:
	DD	$LN15@asn1_item_
	DD	$LN29@asn1_item_
	DD	$LN22@asn1_item_
	DD	$LN12@asn1_item_
	DD	$LN9@asn1_item_
	DD	$LN16@asn1_item_
	DD	$LN29@asn1_item_
_asn1_item_ex_combine_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_primitive_new
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_ASN1_primitive_new PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_new.c
; Line 310
	push	esi
; Line 315
	mov	esi, DWORD PTR _it$[esp]
	test	esi, esi
	jne	SHORT $LN4@ASN1_primi
$LN19@ASN1_primi:
; Line 316
	xor	eax, eax
	pop	esi
; Line 360
	ret	0
$LN4@ASN1_primi:
; Line 318
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN6@ASN1_primi
; Line 320
	mov	eax, DWORD PTR [eax+8]
	test	eax, eax
	je	SHORT $LN6@ASN1_primi
; Line 321
	push	esi
	push	DWORD PTR _pval$[esp+4]
	call	eax
	add	esp, 8
	pop	esi
; Line 360
	ret	0
$LN6@ASN1_primi:
; Line 324
	cmp	BYTE PTR [esi], 5
	jne	SHORT $LN7@ASN1_primi
; Line 325
	or	ecx, -1
	jmp	SHORT $LN8@ASN1_primi
$LN7@ASN1_primi:
; Line 327
	mov	ecx, DWORD PTR [esi+4]
$LN8@ASN1_primi:
; Line 328
	lea	eax, DWORD PTR [ecx+4]
	cmp	eax, 10					; 0000000aH
	ja	SHORT $LN14@ASN1_primi
	movzx	eax, BYTE PTR $LN18@ASN1_primi[eax]
	jmp	DWORD PTR $LN21@ASN1_primi[eax*4]
$LN9@ASN1_primi:
; Line 330
	push	0
	call	_OBJ_nid2obj
	mov	ecx, DWORD PTR _pval$[esp+4]
	add	esp, 4
	mov	DWORD PTR [ecx], eax
; Line 331
	mov	eax, 1
	pop	esi
; Line 360
	ret	0
$LN10@ASN1_primi:
; Line 334
	mov	eax, DWORD PTR _pval$[esp]
	mov	ecx, DWORD PTR [esi+20]
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 335
	mov	eax, 1
; Line 360
	ret	0
$LN11@ASN1_primi:
; Line 338
	mov	eax, DWORD PTR _pval$[esp]
	pop	esi
	mov	DWORD PTR [eax], 1
; Line 339
	mov	eax, 1
; Line 360
	ret	0
$LN12@ASN1_primi:
; Line 342
	push	342					; 00000156H
	push	OFFSET ??_C@_0BJ@NBOPBEKM@?4?2crypto?2asn1?2tasn_new?4c?$AA@
	push	8
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 343
	test	eax, eax
	je	$LN19@ASN1_primi
; Line 354
	mov	ecx, DWORD PTR _pval$[esp]
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax], -1
	pop	esi
	mov	DWORD PTR [ecx], eax
; Line 357
	xor	eax, eax
	cmp	DWORD PTR [ecx], eax
	setne	al
; Line 360
	ret	0
$LN14@ASN1_primi:
; Line 351
	push	ecx
	call	_ASN1_STRING_type_new
	add	esp, 4
; Line 352
	cmp	BYTE PTR [esi], 5
	jne	SHORT $LN15@ASN1_primi
	test	eax, eax
	je	SHORT $LN15@ASN1_primi
; Line 353
	or	DWORD PTR [eax+12], 64			; 00000040H
$LN15@ASN1_primi:
; Line 354
	mov	ecx, DWORD PTR _pval$[esp]
	pop	esi
	mov	DWORD PTR [ecx], eax
; Line 357
	xor	eax, eax
	cmp	DWORD PTR [ecx], eax
	setne	al
; Line 360
	ret	0
	npad	1
$LN21@ASN1_primi:
	DD	$LN12@ASN1_primi
	DD	$LN10@ASN1_primi
	DD	$LN11@ASN1_primi
	DD	$LN9@ASN1_primi
	DD	$LN14@ASN1_primi
$LN18@ASN1_primi:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	2
	DB	3
_ASN1_primitive_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_template_new
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_tt$ = 12						; size = 4
_ASN1_template_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_new.c
; Line 255
	push	esi
; Line 256
	mov	esi, DWORD PTR _tt$[esp]
	mov	eax, DWORD PTR [esi+16]
	call	eax
; Line 258
	mov	ecx, DWORD PTR [esi]
	test	cl, 1
	je	SHORT $LN2@ASN1_templ
; Line 298
	test	ecx, 774				; 00000306H
	je	SHORT $LN8@ASN1_templ
; Line 299
	mov	eax, DWORD PTR _pval$[esp]
	pop	esi
	mov	DWORD PTR [eax], 0
; Line 260
	mov	eax, 1
; Line 293
	ret	0
$LN8@ASN1_templ:
; Line 301
	mov	eax, DWORD PTR [esi+16]
	call	eax
	push	eax
	push	DWORD PTR _pval$[esp+4]
	call	_asn1_item_clear
	add	esp, 8
; Line 260
	mov	eax, 1
	pop	esi
; Line 293
	ret	0
$LN2@ASN1_templ:
; Line 264
	test	ecx, 768				; 00000300H
	je	SHORT $LN3@ASN1_templ
; Line 265
	mov	eax, DWORD PTR _pval$[esp]
	pop	esi
	mov	DWORD PTR [eax], 0
; Line 266
	mov	eax, 1
; Line 293
	ret	0
$LN3@ASN1_templ:
; Line 273
	test	cl, 6
	je	SHORT $LN4@ASN1_templ
; Line 275
	call	_sk_new_null
	mov	ecx, eax
; Line 276
	test	ecx, ecx
	jne	SHORT $LN5@ASN1_templ
; Line 277
	push	277					; 00000115H
	push	OFFSET ??_C@_0BJ@NBOPBEKM@?4?2crypto?2asn1?2tasn_new?4c?$AA@
	push	65					; 00000041H
	push	133					; 00000085H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 278
	xor	eax, eax
	pop	esi
; Line 293
	ret	0
$LN5@ASN1_templ:
; Line 281
	mov	eax, DWORD PTR _pval$[esp]
	pop	esi
	mov	DWORD PTR [eax], ecx
; Line 282
	mov	eax, 1
; Line 293
	ret	0
$LN4@ASN1_templ:
; Line 286
	and	ecx, 1024				; 00000400H
	push	ecx
	push	eax
	push	DWORD PTR _pval$[esp+8]
	call	_asn1_item_ex_combine_new
	add	esp, 12					; 0000000cH
$done$83:
	pop	esi
; Line 293
	ret	0
_ASN1_template_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_ex_new
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_ASN1_item_ex_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_new.c
; Line 85
	push	0
	push	DWORD PTR _it$[esp]
	push	DWORD PTR _pval$[esp+4]
	call	_asn1_item_ex_combine_new
	add	esp, 12					; 0000000cH
; Line 86
	ret	0
_ASN1_item_ex_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ASN1_item_new
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_it$ = 8						; size = 4
_ASN1_item_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\tasn_new.c
; Line 74
	mov	eax, 4
	call	__chkstk
; Line 85
	push	0
	push	DWORD PTR _it$[esp+4]
	lea	eax, DWORD PTR _ret$[esp+12]
; Line 75
	mov	DWORD PTR _ret$[esp+12], 0
; Line 85
	push	eax
	call	_asn1_item_ex_combine_new
; Line 76
	xor	ecx, ecx
	test	eax, eax
	cmovg	ecx, DWORD PTR _ret$[esp+16]
	mov	eax, ecx
; Line 79
	add	esp, 16					; 00000010H
	ret	0
_ASN1_item_new ENDP
_TEXT	ENDS
END

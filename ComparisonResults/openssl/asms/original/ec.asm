; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\ec.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_ec_main
PUBLIC	??_C@_07CGGPPMGB@?9inform?$AA@			; `string'
PUBLIC	??_C@_08LPHBEAIF@?9outform?$AA@			; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_08KCDBEMAI@?9passout?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_06JPEJAHHH@?9noout?$AA@			; `string'
PUBLIC	??_C@_05OEBEIMJA@?9text?$AA@			; `string'
PUBLIC	??_C@_0L@CFGKFMBD@?9conv_form?$AA@		; `string'
PUBLIC	??_C@_0L@NHGFHLFK@compressed?$AA@		; `string'
PUBLIC	??_C@_0N@NFCOPMLF@uncompressed?$AA@		; `string'
PUBLIC	??_C@_06JCLEGMDM@hybrid?$AA@			; `string'
PUBLIC	??_C@_0L@KJNNNAOB@?9param_enc?$AA@		; `string'
PUBLIC	??_C@_0M@FBFAECBG@named_curve?$AA@		; `string'
PUBLIC	??_C@_08FCANLLBJ@explicit?$AA@			; `string'
PUBLIC	??_C@_0L@NDJAPIIC@?9param_out?$AA@		; `string'
PUBLIC	??_C@_06NLLOJDKN@?9pubin?$AA@			; `string'
PUBLIC	??_C@_07NGPHMOHJ@?9pubout?$AA@			; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@	; `string'
PUBLIC	??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@ ; `string'
PUBLIC	??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@ ; `string'
PUBLIC	??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ ; `string'
PUBLIC	??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ ; `string'
PUBLIC	??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ ; `string'
PUBLIC	??_C@_0HN@HKEGHBIH@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0CA@OKPIBIGP@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?6?$AA@ ; `string'
PUBLIC	??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@ ; `string'
PUBLIC	??_C@_0DG@NMDIGDIM@?5?9param_out?5?5?5?5?5?5print?5the?5ellip@ ; `string'
PUBLIC	??_C@_0DH@HJOFOKLP@?5?9conv_form?5arg?5?5specifies?5the?5p@ ; `string'
PUBLIC	??_C@_0CO@OIAMJLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@ ; `string'
PUBLIC	??_C@_0DK@DPFNBDBB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; `string'
PUBLIC	??_C@_0CL@HBPFJOKB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; `string'
PUBLIC	??_C@_0EC@EIIIDNLN@?5?9param_enc?5arg?5?5specifies?5the?5w@ ; `string'
PUBLIC	??_C@_0CL@EAKLEMG@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5in?5the?5asn1?5der@ ; `string'
PUBLIC	??_C@_0DJ@NHMKIAKA@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@ ; `string'
PUBLIC	??_C@_0CM@EPMIBHPH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; `string'
PUBLIC	??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ ; `string'
PUBLIC	??_C@_0N@BJCFIJI@read?5EC?5key?6?$AA@		; `string'
PUBLIC	??_C@_0CE@PIOCFEJI@bad?5input?5format?5specified?5for?5k@ ; `string'
PUBLIC	??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@	; `string'
PUBLIC	??_C@_0BA@JBLDNIOO@writing?5EC?5key?6?$AA@	; `string'
PUBLIC	??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; `string'
PUBLIC	??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__perror:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ASN1_i2d_bio:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_i2d_ECPKParameters:PROC
EXTRN	_EC_KEY_free:PROC
EXTRN	_EC_KEY_get0_group:PROC
EXTRN	_EC_KEY_set_conv_form:PROC
EXTRN	_EC_KEY_set_asn1_flag:PROC
EXTRN	_EC_KEY_print:PROC
EXTRN	_d2i_EC_PUBKEY_bio:PROC
EXTRN	_i2d_EC_PUBKEY_bio:PROC
EXTRN	_d2i_ECPrivateKey_bio:PROC
EXTRN	_i2d_ECPrivateKey_bio:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_str2fmt:PROC
EXTRN	_app_passwd:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_PEM_write_bio_ECPKParameters:PROC
EXTRN	_PEM_read_bio_ECPrivateKey:PROC
EXTRN	_PEM_write_bio_ECPrivateKey:PROC
EXTRN	_PEM_read_bio_EC_PUBKEY:PROC
EXTRN	_PEM_write_bio_EC_PUBKEY:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
;	COMDAT ??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@
CONST	SEGMENT
??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@ DB 'unable to w'
	DB	'rite private key', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
CONST	SEGMENT
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ DB 'bad output '
	DB	'format specified for outfile', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JBLDNIOO@writing?5EC?5key?6?$AA@
CONST	SEGMENT
??_C@_0BA@JBLDNIOO@writing?5EC?5key?6?$AA@ DB 'writing EC key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@
CONST	SEGMENT
??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@ DB 'unable to load Key', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PIOCFEJI@bad?5input?5format?5specified?5for?5k@
CONST	SEGMENT
??_C@_0CE@PIOCFEJI@bad?5input?5format?5specified?5for?5k@ DB 'bad input f'
	DB	'ormat specified for key', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BJCFIJI@read?5EC?5key?6?$AA@
CONST	SEGMENT
??_C@_0N@BJCFIJI@read?5EC?5key?6?$AA@ DB 'read EC key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
CONST	SEGMENT
??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ DB 'Error getting pas'
	DB	'swords', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@EPMIBHPH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_0CM@EPMIBHPH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ DB ' '
	DB	'                                 explicit', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@NHMKIAKA@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@
CONST	SEGMENT
??_C@_0DJ@NHMKIAKA@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@ DB ' '
	DB	'                possible values: named_curve (default)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EAKLEMG@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5in?5the?5asn1?5der@
CONST	SEGMENT
??_C@_0CL@EAKLEMG@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5in?5the?5asn1?5der@ DB ' '
	DB	'                in the asn1 der encoding', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@EIIIDNLN@?5?9param_enc?5arg?5?5specifies?5the?5w@
CONST	SEGMENT
??_C@_0EC@EIIIDNLN@?5?9param_enc?5arg?5?5specifies?5the?5w@ DB ' -param_e'
	DB	'nc arg  specifies the way the ec parameters are encoded', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HBPFJOKB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_0CL@HBPFJOKB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ DB ' '
	DB	'                                  hybrid', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@DPFNBDBB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_0DK@DPFNBDBB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ DB ' '
	DB	'                                 uncompressed (default)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@OIAMJLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@
CONST	SEGMENT
??_C@_0CO@OIAMJLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@ DB ' '
	DB	'                possible values: compressed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@HJOFOKLP@?5?9conv_form?5arg?5?5specifies?5the?5p@
CONST	SEGMENT
??_C@_0DH@HJOFOKLP@?5?9conv_form?5arg?5?5specifies?5the?5p@ DB ' -conv_fo'
	DB	'rm arg  specifies the point conversion form ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@NMDIGDIM@?5?9param_out?5?5?5?5?5?5print?5the?5ellip@
CONST	SEGMENT
??_C@_0DG@NMDIGDIM@?5?9param_out?5?5?5?5?5?5print?5the?5ellip@ DB ' -para'
	DB	'm_out      print the elliptic curve parameters', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@
CONST	SEGMENT
??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@ DB ' '
	DB	'-noout          don''t print key out', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@OKPIBIGP@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?6?$AA@
CONST	SEGMENT
??_C@_0CA@OKPIBIGP@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?6?$AA@ DB ' '
	DB	'-text           print the key', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0HN@HKEGHBIH@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0HN@HKEGHBIH@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'-des            encrypt PEM output, instead of ''des'' every '
	DB	'other ', 0aH, '                 cipher supported by OpenSSL c'
	DB	'an be used', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
CONST	SEGMENT
??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ DB ' -'
	DB	'engine e       use engine e, possibly a hardware device.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
CONST	SEGMENT
??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ DB ' -passo'
	DB	'ut arg    output file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@
CONST	SEGMENT
??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@ DB ' -'
	DB	'out arg        output file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@
CONST	SEGMENT
??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ DB ' -pass'
	DB	'in arg     input file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@
CONST	SEGMENT
??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@ DB ' -i'
	DB	'n arg         input file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@
CONST	SEGMENT
??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@ DB ' -outf'
	DB	'orm arg    output format - DER or PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@
CONST	SEGMENT
??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@ DB ' -in'
	DB	'form arg     input format - DER or PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
CONST	SEGMENT
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ DB 'where options are', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
CONST	SEGMENT
??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ DB '%'
	DB	's [options] <infile >outfile', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGPHMOHJ@?9pubout?$AA@
CONST	SEGMENT
??_C@_07NGPHMOHJ@?9pubout?$AA@ DB '-pubout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NLLOJDKN@?9pubin?$AA@
CONST	SEGMENT
??_C@_06NLLOJDKN@?9pubin?$AA@ DB '-pubin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NDJAPIIC@?9param_out?$AA@
CONST	SEGMENT
??_C@_0L@NDJAPIIC@?9param_out?$AA@ DB '-param_out', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FCANLLBJ@explicit?$AA@
CONST	SEGMENT
??_C@_08FCANLLBJ@explicit?$AA@ DB 'explicit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FBFAECBG@named_curve?$AA@
CONST	SEGMENT
??_C@_0M@FBFAECBG@named_curve?$AA@ DB 'named_curve', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KJNNNAOB@?9param_enc?$AA@
CONST	SEGMENT
??_C@_0L@KJNNNAOB@?9param_enc?$AA@ DB '-param_enc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JCLEGMDM@hybrid?$AA@
CONST	SEGMENT
??_C@_06JCLEGMDM@hybrid?$AA@ DB 'hybrid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NFCOPMLF@uncompressed?$AA@
CONST	SEGMENT
??_C@_0N@NFCOPMLF@uncompressed?$AA@ DB 'uncompressed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NHGFHLFK@compressed?$AA@
CONST	SEGMENT
??_C@_0L@NHGFHLFK@compressed?$AA@ DB 'compressed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CFGKFMBD@?9conv_form?$AA@
CONST	SEGMENT
??_C@_0L@CFGKFMBD@?9conv_form?$AA@ DB '-conv_form', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEBEIMJA@?9text?$AA@
CONST	SEGMENT
??_C@_05OEBEIMJA@?9text?$AA@ DB '-text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JPEJAHHH@?9noout?$AA@
CONST	SEGMENT
??_C@_06JPEJAHHH@?9noout?$AA@ DB '-noout', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KCDBEMAI@?9passout?$AA@
CONST	SEGMENT
??_C@_08KCDBEMAI@?9passout?$AA@ DB '-passout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LPHBEAIF@?9outform?$AA@
CONST	SEGMENT
??_C@_08LPHBEAIF@?9outform?$AA@ DB '-outform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGGPPMGB@?9inform?$AA@
CONST	SEGMENT
??_C@_07CGGPPMGB@?9inform?$AA@ DB '-inform', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_main
_TEXT	SEGMENT
_engine$1$ = -80					; size = 4
_eckey$1$ = -80						; size = 4
_pubin$1$ = -76						; size = 4
_outfile$1$ = -72					; size = 4
_ret$1$ = -68						; size = 4
_asn1_flag$1$ = -64					; size = 4
_param_out$1$ = -60					; size = 4
_pubout$1$ = -56					; size = 4
_passin$ = -52						; size = 4
_passout$ = -48						; size = 4
_passargout$1$ = -44					; size = 4
_passargin$1$ = -40					; size = 4
_infile$1$ = -36					; size = 4
_informat$1$ = -32					; size = 4
_new_form$1$ = -28					; size = 4
_new_asn1_flag$1$ = -24					; size = 4
_text$1$ = -20						; size = 4
_noout$1$ = -16						; size = 4
_outformat$1$ = -12					; size = 4
_enc$1$ = -8						; size = 4
_prog$1$ = -4						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_ec_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\ec.c
; Line 88
	mov	eax, 80					; 00000050H
	call	__chkstk
; Line 107
	mov	eax, DWORD PTR _bio_err
	mov	DWORD PTR _enc$1$[esp+80], 0
	mov	DWORD PTR _text$1$[esp+80], 0
	mov	DWORD PTR _noout$1$[esp+80], 0
	mov	DWORD PTR _pubin$1$[esp+80], 0
	mov	DWORD PTR _pubout$1$[esp+80], 0
	mov	DWORD PTR _param_out$1$[esp+80], 0
	mov	DWORD PTR _passargin$1$[esp+80], 0
	mov	DWORD PTR _passargout$1$[esp+80], 0
	mov	DWORD PTR _passin$[esp+80], 0
	mov	DWORD PTR _passout$[esp+80], 0
	mov	DWORD PTR _new_form$1$[esp+80], 0
	mov	DWORD PTR _new_asn1_flag$1$[esp+80], 0
	push	ebx
	mov	ebx, 1
	mov	DWORD PTR _ret$1$[esp+84], ebx
	mov	DWORD PTR _asn1_flag$1$[esp+84], ebx
	push	ebp
	lea	ebp, DWORD PTR [ebx+3]
	test	eax, eax
	jne	SHORT $LN5@ec_main
; Line 108
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN5@ec_main
; Line 109
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN5@ec_main:
; Line 111
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN97@ec_main
; Line 120
	mov	ebx, DWORD PTR _argv$[esp+84]
	xor	eax, eax
	push	esi
	push	edi
; Line 121
	mov	edi, DWORD PTR _argc$[esp+92]
	xor	esi, esi
	mov	DWORD PTR _outfile$1$[esp+96], eax
	dec	edi
	mov	eax, DWORD PTR [ebx]
; Line 122
	add	ebx, ebp
	mov	DWORD PTR _engine$1$[esp+96], esi
	mov	DWORD PTR _infile$1$[esp+96], esi
	mov	DWORD PTR _informat$1$[esp+96], 3
	mov	DWORD PTR _outformat$1$[esp+96], 3
	mov	DWORD PTR _prog$1$[esp+96], eax
; Line 123
	cmp	edi, 1
	jl	$LN55@ec_main
	npad	5
$LL2@ec_main:
; Line 124
	mov	esi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_07CGGPPMGB@?9inform?$AA@
	mov	eax, esi
	npad	7
$LL115@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN116@ec_main
	test	dl, dl
	je	SHORT $LN117@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN116@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL115@ec_main
$LN117@ec_main:
	xor	eax, eax
	jmp	SHORT $LN118@ec_main
$LN116@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN118@ec_main:
	test	eax, eax
	jne	SHORT $LN7@ec_main
; Line 125
	dec	edi
	cmp	edi, 1
	jl	$bad$201
; Line 127
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _informat$1$[esp+96], eax
	jmp	$LN54@ec_main
$LN7@ec_main:
; Line 128
	mov	ecx, OFFSET ??_C@_08LPHBEAIF@?9outform?$AA@
	mov	eax, esi
$LL119@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN120@ec_main
	test	dl, dl
	je	SHORT $LN121@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN120@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL119@ec_main
$LN121@ec_main:
	xor	eax, eax
	jmp	SHORT $LN122@ec_main
$LN120@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN122@ec_main:
	test	eax, eax
	jne	SHORT $LN10@ec_main
; Line 129
	dec	edi
	cmp	edi, 1
	jl	$bad$201
; Line 131
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _outformat$1$[esp+96], eax
	jmp	$LN54@ec_main
$LN10@ec_main:
; Line 132
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, esi
$LL123@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN124@ec_main
	test	dl, dl
	je	SHORT $LN125@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN124@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL123@ec_main
$LN125@ec_main:
	xor	eax, eax
	jmp	SHORT $LN126@ec_main
$LN124@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN126@ec_main:
	test	eax, eax
	jne	SHORT $LN13@ec_main
; Line 133
	dec	edi
	cmp	edi, 1
	jl	$bad$201
; Line 135
	mov	edx, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _infile$1$[esp+96], edx
	jmp	$LN54@ec_main
$LN13@ec_main:
; Line 136
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, esi
	npad	5
$LL127@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN128@ec_main
	test	dl, dl
	je	SHORT $LN129@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN128@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL127@ec_main
$LN129@ec_main:
	xor	eax, eax
	jmp	SHORT $LN130@ec_main
$LN128@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN130@ec_main:
	test	eax, eax
	jne	SHORT $LN16@ec_main
; Line 137
	dec	edi
	cmp	edi, 1
	jl	$bad$201
; Line 139
	mov	edx, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+96], edx
	jmp	$LN54@ec_main
$LN16@ec_main:
; Line 140
	mov	ecx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	eax, esi
	npad	7
$LL131@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN132@ec_main
	test	dl, dl
	je	SHORT $LN133@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN132@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL131@ec_main
$LN133@ec_main:
	xor	eax, eax
	jmp	SHORT $LN134@ec_main
$LN132@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN134@ec_main:
	test	eax, eax
	jne	SHORT $LN19@ec_main
; Line 141
	dec	edi
	cmp	edi, 1
	jl	$bad$201
; Line 143
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _passargin$1$[esp+96], eax
	jmp	$LN54@ec_main
$LN19@ec_main:
; Line 144
	mov	ecx, OFFSET ??_C@_08KCDBEMAI@?9passout?$AA@
	mov	eax, esi
	npad	7
$LL135@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN136@ec_main
	test	dl, dl
	je	SHORT $LN137@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN136@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL135@ec_main
$LN137@ec_main:
	xor	eax, eax
	jmp	SHORT $LN138@ec_main
$LN136@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN138@ec_main:
	test	eax, eax
	jne	SHORT $LN22@ec_main
; Line 145
	dec	edi
	cmp	edi, 1
	jl	$bad$201
; Line 147
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _passargout$1$[esp+96], eax
	jmp	$LN54@ec_main
$LN22@ec_main:
; Line 148
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, esi
	npad	7
$LL139@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN140@ec_main
	test	dl, dl
	je	SHORT $LN141@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN140@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL139@ec_main
$LN141@ec_main:
	xor	eax, eax
	jmp	SHORT $LN142@ec_main
$LN140@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN142@ec_main:
	test	eax, eax
	jne	SHORT $LN25@ec_main
; Line 149
	dec	edi
	cmp	edi, 1
	jl	$bad$201
; Line 151
	mov	edx, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _engine$1$[esp+96], edx
	jmp	$LN54@ec_main
$LN25@ec_main:
; Line 152
	mov	ecx, OFFSET ??_C@_06JPEJAHHH@?9noout?$AA@
	mov	eax, esi
	npad	7
$LL143@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN144@ec_main
	test	dl, dl
	je	SHORT $LN145@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN144@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL143@ec_main
$LN145@ec_main:
	xor	eax, eax
	jmp	SHORT $LN146@ec_main
$LN144@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN146@ec_main:
	test	eax, eax
	jne	SHORT $LN28@ec_main
; Line 153
	mov	DWORD PTR _noout$1$[esp+96], 1
	jmp	$LN54@ec_main
$LN28@ec_main:
; Line 154
	mov	ecx, OFFSET ??_C@_05OEBEIMJA@?9text?$AA@
	mov	eax, esi
	npad	3
$LL147@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN148@ec_main
	test	dl, dl
	je	SHORT $LN149@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN148@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL147@ec_main
$LN149@ec_main:
	xor	eax, eax
	jmp	SHORT $LN150@ec_main
$LN148@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN150@ec_main:
	test	eax, eax
	jne	SHORT $LN30@ec_main
; Line 155
	mov	DWORD PTR _text$1$[esp+96], 1
	jmp	$LN54@ec_main
$LN30@ec_main:
; Line 156
	mov	ecx, OFFSET ??_C@_0L@CFGKFMBD@?9conv_form?$AA@
	mov	eax, esi
	npad	3
$LL151@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN152@ec_main
	test	dl, dl
	je	SHORT $LN153@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN152@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL151@ec_main
$LN153@ec_main:
	xor	eax, eax
	jmp	SHORT $LN154@ec_main
$LN152@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN154@ec_main:
	test	eax, eax
	jne	$LN32@ec_main
; Line 157
	dec	edi
	cmp	edi, 1
	jl	$bad$201
; Line 161
	mov	esi, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _new_form$1$[esp+96], 1
	mov	ecx, OFFSET ??_C@_0L@NHGFHLFK@compressed?$AA@
	mov	eax, esi
	npad	4
$LL155@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN156@ec_main
	test	dl, dl
	je	SHORT $LN157@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN156@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL155@ec_main
$LN157@ec_main:
	xor	eax, eax
	jmp	SHORT $LN158@ec_main
$LN156@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN158@ec_main:
	test	eax, eax
	jne	SHORT $LN35@ec_main
; Line 162
	lea	ebp, DWORD PTR [eax+2]
	jmp	$LN54@ec_main
$LN35@ec_main:
; Line 163
	mov	ecx, OFFSET ??_C@_0N@NFCOPMLF@uncompressed?$AA@
	mov	eax, esi
$LL159@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN160@ec_main
	test	dl, dl
	je	SHORT $LN161@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN160@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL159@ec_main
$LN161@ec_main:
	xor	eax, eax
	jmp	SHORT $LN162@ec_main
$LN160@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN162@ec_main:
	test	eax, eax
	jne	SHORT $LN37@ec_main
; Line 164
	lea	ebp, DWORD PTR [eax+4]
	jmp	$LN54@ec_main
$LN37@ec_main:
; Line 165
	mov	eax, OFFSET ??_C@_06JCLEGMDM@hybrid?$AA@
	npad	2
$LL163@ec_main:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN164@ec_main
	test	cl, cl
	je	SHORT $LN165@ec_main
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN164@ec_main
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL163@ec_main
$LN165@ec_main:
	xor	eax, eax
	jmp	SHORT $LN166@ec_main
$LN164@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN166@ec_main:
	test	eax, eax
	jne	$bad$201
; Line 166
	lea	ebp, DWORD PTR [eax+6]
; Line 169
	jmp	$LN54@ec_main
$LN32@ec_main:
	mov	ecx, OFFSET ??_C@_0L@KJNNNAOB@?9param_enc?$AA@
	mov	eax, esi
	npad	4
$LL167@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN168@ec_main
	test	dl, dl
	je	SHORT $LN169@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN168@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL167@ec_main
$LN169@ec_main:
	xor	eax, eax
	jmp	SHORT $LN170@ec_main
$LN168@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN170@ec_main:
	test	eax, eax
	jne	$LN41@ec_main
; Line 170
	dec	edi
	cmp	edi, 1
	jl	$bad$201
; Line 174
	mov	esi, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _new_asn1_flag$1$[esp+96], 1
	mov	ecx, OFFSET ??_C@_0M@FBFAECBG@named_curve?$AA@
	mov	eax, esi
	npad	4
$LL171@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN172@ec_main
	test	dl, dl
	je	SHORT $LN173@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN172@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL171@ec_main
$LN173@ec_main:
	xor	eax, eax
	jmp	SHORT $LN174@ec_main
$LN172@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN174@ec_main:
	test	eax, eax
	jne	SHORT $LN44@ec_main
; Line 175
	mov	DWORD PTR _asn1_flag$1$[esp+96], 1
	jmp	$LN54@ec_main
$LN44@ec_main:
; Line 176
	mov	eax, OFFSET ??_C@_08FCANLLBJ@explicit?$AA@
	npad	5
$LL175@ec_main:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN176@ec_main
	test	cl, cl
	je	SHORT $LN177@ec_main
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN176@ec_main
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL175@ec_main
$LN177@ec_main:
	xor	eax, eax
	jmp	SHORT $LN178@ec_main
$LN176@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN178@ec_main:
	test	eax, eax
	jne	$bad$201
; Line 177
	mov	DWORD PTR _asn1_flag$1$[esp+96], eax
; Line 180
	jmp	$LN54@ec_main
$LN41@ec_main:
	mov	ecx, OFFSET ??_C@_0L@NDJAPIIC@?9param_out?$AA@
	mov	eax, esi
	npad	3
$LL179@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN180@ec_main
	test	dl, dl
	je	SHORT $LN181@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN180@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL179@ec_main
$LN181@ec_main:
	xor	eax, eax
	jmp	SHORT $LN182@ec_main
$LN180@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN182@ec_main:
	test	eax, eax
	jne	SHORT $LN48@ec_main
; Line 181
	mov	DWORD PTR _param_out$1$[esp+96], 1
	jmp	$LN54@ec_main
$LN48@ec_main:
; Line 182
	mov	ecx, OFFSET ??_C@_06NLLOJDKN@?9pubin?$AA@
	mov	eax, esi
	npad	3
$LL183@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN184@ec_main
	test	dl, dl
	je	SHORT $LN185@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN184@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL183@ec_main
$LN185@ec_main:
	xor	eax, eax
	jmp	SHORT $LN186@ec_main
$LN184@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN186@ec_main:
	test	eax, eax
	jne	SHORT $LN50@ec_main
; Line 183
	mov	DWORD PTR _pubin$1$[esp+96], 1
	jmp	SHORT $LN54@ec_main
$LN50@ec_main:
; Line 184
	mov	ecx, OFFSET ??_C@_07NGPHMOHJ@?9pubout?$AA@
	mov	eax, esi
	npad	6
$LL187@ec_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN188@ec_main
	test	dl, dl
	je	SHORT $LN189@ec_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN188@ec_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL187@ec_main
$LN189@ec_main:
	xor	eax, eax
	jmp	SHORT $LN190@ec_main
$LN188@ec_main:
	sbb	eax, eax
	or	eax, 1
$LN190@ec_main:
	test	eax, eax
	jne	SHORT $LN52@ec_main
; Line 185
	mov	DWORD PTR _pubout$1$[esp+96], 1
	jmp	SHORT $LN54@ec_main
$LN52@ec_main:
; Line 186
	lea	eax, DWORD PTR [esi+1]
	push	eax
	call	_EVP_get_cipherbyname
	add	esp, 4
	mov	DWORD PTR _enc$1$[esp+96], eax
	test	eax, eax
	je	SHORT $LN111@ec_main
$LN54@ec_main:
; Line 191
	dec	edi
; Line 192
	add	ebx, 4
	cmp	edi, 1
	jge	$LL2@ec_main
; Line 186
	mov	esi, DWORD PTR _engine$1$[esp+96]
$LN55@ec_main:
; Line 236
	call	_ERR_load_crypto_strings
; Line 239
	push	0
	push	esi
	push	DWORD PTR _bio_err
	call	_setup_engine
; Line 242
	lea	eax, DWORD PTR _passout$[esp+108]
	push	eax
	lea	eax, DWORD PTR _passin$[esp+112]
	push	eax
	push	DWORD PTR _passargout$1$[esp+116]
	push	DWORD PTR _passargin$1$[esp+120]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	$LN56@ec_main
; Line 243
	push	OFFSET ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 244
	mov	ebx, 1
	jmp	$LN194@ec_main
$LN111@ec_main:
; Line 187
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$bad$201:
; Line 197
	push	DWORD PTR _prog$1$[esp+96]
	push	OFFSET ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 198
	push	OFFSET ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 199
	push	OFFSET ??_C@_0CM@HPFOGDCH@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 201
	push	OFFSET ??_C@_0CN@PGFKHHCK@?5?9outform?5arg?5?5?5?5output?5format?5?9@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 203
	push	OFFSET ??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 204
	push	OFFSET ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 206
	push	OFFSET ??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 207
	push	OFFSET ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 209
	push	OFFSET ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 211
	push	OFFSET ??_C@_0HN@HKEGHBIH@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 215
	push	OFFSET ??_C@_0CA@OKPIBIGP@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 216
	push	OFFSET ??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 217
	push	OFFSET ??_C@_0DG@NMDIGDIM@?5?9param_out?5?5?5?5?5?5print?5the?5ellip@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 219
	push	OFFSET ??_C@_0DH@HJOFOKLP@?5?9conv_form?5arg?5?5specifies?5the?5p@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 221
	push	OFFSET ??_C@_0CO@OIAMJLB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 223
	push	OFFSET ??_C@_0DK@DPFNBDBB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 225
	push	OFFSET ??_C@_0CL@HBPFJOKB@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 226
	push	OFFSET ??_C@_0EC@EIIIDNLN@?5?9param_enc?5arg?5?5specifies?5the?5w@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 228
	push	OFFSET ??_C@_0CL@EAKLEMG@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5in?5the?5asn1?5der@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 229
	push	OFFSET ??_C@_0DJ@NHMKIAKA@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5possible?5values@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 231
	push	OFFSET ??_C@_0CM@EPMIBHPH@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 40					; 00000028H
; Line 233
	mov	ebx, 1
	jmp	$LN194@ec_main
$LN56@ec_main:
; Line 247
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	mov	edi, eax
; Line 248
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 8
	mov	esi, eax
; Line 249
	test	edi, edi
	je	$LN58@ec_main
	test	esi, esi
	je	$LN58@ec_main
; Line 254
	mov	ebx, DWORD PTR _infile$1$[esp+96]
	test	ebx, ebx
	jne	SHORT $LN59@ec_main
; Line 255
	push	ebx
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	ebx
	push	106					; 0000006aH
	push	edi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN61@ec_main:
; Line 263
	push	OFFSET ??_C@_0N@BJCFIJI@read?5EC?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 264
	mov	eax, DWORD PTR _informat$1$[esp+104]
	add	esp, 8
	cmp	eax, 1
	jne	SHORT $LN62@ec_main
; Line 265
	cmp	DWORD PTR _pubin$1$[esp+96], 0
; Line 266
	push	0
	push	edi
	je	SHORT $LN64@ec_main
	call	_d2i_EC_PUBKEY_bio
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _eckey$1$[esp+96], ebx
	jmp	SHORT $LN69@ec_main
$LN59@ec_main:
; Line 257
	push	ebx
	push	3
	push	108					; 0000006cH
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN61@ec_main
; Line 258
	push	ebx
	call	DWORD PTR __imp__perror
; Line 259
	jmp	$LN196@ec_main
$LN64@ec_main:
; Line 268
	call	_d2i_ECPrivateKey_bio
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR _eckey$1$[esp+96], ebx
; Line 269
	jmp	SHORT $LN69@ec_main
$LN62@ec_main:
	cmp	eax, 3
	jne	$LN66@ec_main
; Line 270
	cmp	DWORD PTR _pubin$1$[esp+96], 0
	je	SHORT $LN68@ec_main
; Line 271
	push	0
	push	0
	push	0
	push	edi
	call	_PEM_read_bio_EC_PUBKEY
	mov	ebx, eax
	mov	DWORD PTR _eckey$1$[esp+112], ebx
	jmp	SHORT $LN197@ec_main
$LN68@ec_main:
; Line 273
	push	DWORD PTR _passin$[esp+96]
	push	0
	push	0
	push	edi
	call	_PEM_read_bio_ECPrivateKey
	mov	ebx, eax
	mov	DWORD PTR _eckey$1$[esp+112], eax
$LN197@ec_main:
	add	esp, 16					; 00000010H
$LN69@ec_main:
; Line 278
	test	ebx, ebx
	jne	SHORT $LN70@ec_main
; Line 279
	push	OFFSET ??_C@_0BE@GOHLNPJG@unable?5to?5load?5Key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 280
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 281
	jmp	$end$202
$LN70@ec_main:
; Line 284
	mov	eax, DWORD PTR _outfile$1$[esp+96]
	test	eax, eax
	jne	SHORT $LN71@ec_main
; Line 285
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	0
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN73@ec_main:
; Line 299
	push	ebx
	call	_EC_KEY_get0_group
	add	esp, 4
	mov	ebx, eax
; Line 301
	cmp	DWORD PTR _new_form$1$[esp+96], 0
	je	SHORT $LN192@ec_main
; Line 302
	push	ebp
	mov	ebp, DWORD PTR _eckey$1$[esp+100]
	push	ebp
	call	_EC_KEY_set_conv_form
	add	esp, 8
	jmp	SHORT $LN74@ec_main
$LN71@ec_main:
; Line 293
	push	eax
	push	5
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN73@ec_main
; Line 294
	mov	eax, DWORD PTR _outfile$1$[esp+96]
	push	eax
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 295
	jmp	$end$202
$LN192@ec_main:
	mov	ebp, DWORD PTR _eckey$1$[esp+96]
$LN74@ec_main:
; Line 304
	cmp	DWORD PTR _new_asn1_flag$1$[esp+96], 0
	je	SHORT $LN75@ec_main
; Line 305
	push	DWORD PTR _asn1_flag$1$[esp+96]
	push	ebp
	call	_EC_KEY_set_asn1_flag
	add	esp, 8
$LN75@ec_main:
; Line 307
	cmp	DWORD PTR _text$1$[esp+96], 0
	je	SHORT $LN77@ec_main
; Line 308
	push	0
	push	ebp
	push	esi
	call	_EC_KEY_print
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN77@ec_main
; Line 309
	mov	eax, DWORD PTR _outfile$1$[esp+96]
	push	eax
	call	DWORD PTR __imp__perror
; Line 310
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 311
	mov	ebx, DWORD PTR _eckey$1$[esp+104]
	add	esp, 8
	jmp	$end$202
$LN77@ec_main:
; Line 314
	cmp	DWORD PTR _noout$1$[esp+96], 0
	je	SHORT $LN78@ec_main
$LN93@ec_main:
; Line 316
	mov	ebx, DWORD PTR _eckey$1$[esp+96]
	xor	eax, eax
	mov	DWORD PTR _ret$1$[esp+96], eax
	jmp	$end$202
$LN78@ec_main:
; Line 319
	push	OFFSET ??_C@_0BA@JBLDNIOO@writing?5EC?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 320
	mov	eax, DWORD PTR _outformat$1$[esp+104]
	add	esp, 8
	cmp	eax, 1
	jne	SHORT $LN79@ec_main
; Line 321
	cmp	DWORD PTR _param_out$1$[esp+96], 0
	je	SHORT $LN81@ec_main
; Line 322
	push	ebx
	push	esi
	push	OFFSET _i2d_ECPKParameters
	call	_ASN1_i2d_bio
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN91@ec_main
$LN81@ec_main:
; Line 323
	cmp	DWORD PTR _pubin$1$[esp+96], 0
	jne	SHORT $LN85@ec_main
	cmp	DWORD PTR _pubout$1$[esp+96], 0
	jne	SHORT $LN85@ec_main
; Line 326
	push	ebp
	push	esi
	call	_i2d_ECPrivateKey_bio
	jmp	SHORT $LN198@ec_main
$LN85@ec_main:
; Line 324
	push	ebp
	push	esi
	call	_i2d_EC_PUBKEY_bio
; Line 327
	jmp	SHORT $LN198@ec_main
$LN79@ec_main:
	cmp	eax, 3
	jne	SHORT $LN86@ec_main
; Line 328
	cmp	DWORD PTR _param_out$1$[esp+96], 0
	je	SHORT $LN88@ec_main
; Line 329
	push	ebx
	push	esi
	call	_PEM_write_bio_ECPKParameters
	jmp	SHORT $LN198@ec_main
$LN88@ec_main:
; Line 330
	cmp	DWORD PTR _pubin$1$[esp+96], 0
	jne	SHORT $LN92@ec_main
	cmp	DWORD PTR _pubout$1$[esp+96], 0
	jne	SHORT $LN92@ec_main
; Line 333
	push	DWORD PTR _passout$[esp+96]
	push	0
	push	0
	push	0
	push	DWORD PTR _enc$1$[esp+112]
	push	ebp
	push	esi
	call	_PEM_write_bio_ECPrivateKey
	add	esp, 28					; 0000001cH
	jmp	SHORT $LN91@ec_main
$LN92@ec_main:
; Line 331
	push	ebp
	push	esi
	call	_PEM_write_bio_EC_PUBKEY
$LN198@ec_main:
	add	esp, 8
$LN91@ec_main:
; Line 340
	test	eax, eax
	jne	$LN93@ec_main
; Line 341
	push	OFFSET ??_C@_0BN@PABOKEPI@unable?5to?5write?5private?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 342
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 343
	mov	ebx, DWORD PTR _eckey$1$[esp+108]
	add	esp, 12					; 0000000cH
	jmp	SHORT $end$202
$LN86@ec_main:
; Line 336
	push	OFFSET ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 337
	mov	ebx, DWORD PTR _eckey$1$[esp+104]
	add	esp, 8
	jmp	SHORT $end$202
$LN66@ec_main:
; Line 275
	push	OFFSET ??_C@_0CE@PIOCFEJI@bad?5input?5format?5specified?5for?5k@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 276
	jmp	SHORT $LN199@ec_main
$LN58@ec_main:
; Line 250
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
$LN196@ec_main:
	add	esp, 4
$LN199@ec_main:
	xor	ebx, ebx
$end$202:
; Line 346
	test	edi, edi
	je	SHORT $LN95@ec_main
; Line 347
	push	edi
	call	_BIO_free
	add	esp, 4
$LN95@ec_main:
; Line 348
	test	esi, esi
	je	SHORT $LN96@ec_main
; Line 349
	push	esi
	call	_BIO_free_all
	add	esp, 4
$LN96@ec_main:
; Line 350
	test	ebx, ebx
	je	SHORT $LN193@ec_main
; Line 351
	push	ebx
	call	_EC_KEY_free
	add	esp, 4
$LN193@ec_main:
	mov	ebx, DWORD PTR _ret$1$[esp+96]
$LN194@ec_main:
	pop	edi
	pop	esi
$LN97@ec_main:
; Line 352
	mov	eax, DWORD PTR _passin$[esp+88]
	test	eax, eax
	je	SHORT $LN98@ec_main
; Line 353
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN98@ec_main:
; Line 354
	mov	ecx, DWORD PTR _passout$[esp+88]
	test	ecx, ecx
	je	SHORT $LN191@ec_main
; Line 355
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN191@ec_main:
; Line 357
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 358
	add	esp, 80					; 00000050H
	ret	0
_ec_main ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mpi.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_BN_mpi2bn
PUBLIC	_BN_bn2mpi
PUBLIC	??_C@_0BF@JHLAIJGB@?4?2crypto?2bn?2bn_mpi?4c?$AA@ ; `string'
EXTRN	_ERR_put_error:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_clear_bit:PROC
;	COMDAT ??_C@_0BF@JHLAIJGB@?4?2crypto?2bn?2bn_mpi?4c?$AA@
CONST	SEGMENT
??_C@_0BF@JHLAIJGB@?4?2crypto?2bn?2bn_mpi?4c?$AA@ DB '.\crypto\bn\bn_mpi.'
	DB	'c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_bn2mpi
_TEXT	SEGMENT
_a$ = 8							; size = 4
_d$ = 12						; size = 4
_BN_bn2mpi PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mpi.c
; Line 64
	push	ebx
	push	esi
	push	edi
; Line 70
	mov	edi, DWORD PTR _a$[esp+8]
	xor	ebx, ebx
	push	edi
	call	_BN_num_bits
	mov	ecx, eax
	add	esp, 4
; Line 71
	lea	eax, DWORD PTR [ecx+7]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
; Line 72
	test	ecx, ecx
	jle	SHORT $LN2@BN_bn2mpi
; Line 73
	test	cl, 7
	sete	bl
$LN2@BN_bn2mpi:
; Line 75
	mov	esi, DWORD PTR _d$[esp+8]
	test	esi, esi
	je	SHORT $LN5@BN_bn2mpi
; Line 78
	lea	ecx, DWORD PTR [ebx+eax]
; Line 79
	mov	eax, ecx
; Line 82
	mov	BYTE PTR [esi+3], cl
	sar	eax, 24					; 00000018H
	mov	BYTE PTR [esi], al
	mov	eax, ecx
	sar	eax, 16					; 00000010H
	mov	BYTE PTR [esi+1], al
	mov	eax, ecx
	sar	eax, 8
	mov	BYTE PTR [esi+2], al
; Line 83
	test	ebx, ebx
	je	SHORT $LN4@BN_bn2mpi
; Line 84
	mov	BYTE PTR [esi+4], 0
$LN4@BN_bn2mpi:
; Line 85
	lea	eax, DWORD PTR [esi+4]
	add	eax, ebx
	push	eax
	push	edi
	call	_BN_bn2bin
	add	esp, 8
; Line 86
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN5@BN_bn2mpi
; Line 87
	or	BYTE PTR [esi+4], 128			; 00000080H
$LN5@BN_bn2mpi:
	pop	edi
; Line 88
	add	eax, 4
	pop	esi
	add	eax, ebx
	pop	ebx
; Line 89
	ret	0
_BN_bn2mpi ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BN_mpi2bn
_TEXT	SEGMENT
_d$ = 8							; size = 4
_n$ = 12						; size = 4
_a$ = 16						; size = 4
_BN_mpi2bn PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bn\bn_mpi.c
; Line 96
	mov	ecx, DWORD PTR _n$[esp-4]
	push	ebx
	xor	ebx, ebx
	cmp	ecx, 4
	jge	SHORT $LN2@BN_mpi2bn
; Line 97
	push	97					; 00000061H
	push	OFFSET ??_C@_0BF@JHLAIJGB@?4?2crypto?2bn?2bn_mpi?4c?$AA@
	push	106					; 0000006aH
	push	112					; 00000070H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 98
	xor	eax, eax
	pop	ebx
; Line 128
	ret	0
$LN2@BN_mpi2bn:
	push	ebp
; Line 100
	mov	ebp, DWORD PTR _d$[esp+4]
	push	edi
	movzx	edi, BYTE PTR [ebp]
	movzx	eax, BYTE PTR [ebp+1]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [ebp+2]
	shl	edi, 8
	or	edi, eax
	movzx	eax, BYTE PTR [ebp+3]
	shl	edi, 8
	or	edi, eax
; Line 102
	lea	eax, DWORD PTR [edi+4]
	cmp	eax, ecx
	je	SHORT $LN3@BN_mpi2bn
; Line 103
	push	103					; 00000067H
	push	OFFSET ??_C@_0BF@JHLAIJGB@?4?2crypto?2bn?2bn_mpi?4c?$AA@
	push	104					; 00000068H
	push	112					; 00000070H
	push	3
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 104
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	ebx
; Line 128
	ret	0
$LN3@BN_mpi2bn:
	push	esi
; Line 107
	mov	esi, DWORD PTR _a$[esp+12]
	test	esi, esi
	jne	SHORT $LN5@BN_mpi2bn
; Line 108
	call	_BN_new
	mov	esi, eax
; Line 109
	test	esi, esi
	je	SHORT $LN14@BN_mpi2bn
$LN5@BN_mpi2bn:
; Line 112
	test	edi, edi
	jne	SHORT $LN6@BN_mpi2bn
; Line 113
	mov	DWORD PTR [esi+12], ebx
; Line 127
	mov	eax, esi
	mov	DWORD PTR [esi+4], ebx
	pop	esi
	pop	edi
	pop	ebp
	pop	ebx
; Line 128
	ret	0
$LN6@BN_mpi2bn:
; Line 117
	add	ebp, 4
; Line 118
	mov	eax, 1
; Line 120
	push	esi
	push	edi
	push	ebp
	test	BYTE PTR [ebp], 128			; 00000080H
	cmovne	ebx, eax
	call	_BN_bin2bn
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN8@BN_mpi2bn
$LN14@BN_mpi2bn:
	pop	esi
	pop	edi
	pop	ebp
; Line 121
	xor	eax, eax
	pop	ebx
; Line 128
	ret	0
$LN8@BN_mpi2bn:
; Line 122
	mov	DWORD PTR [esi+12], ebx
; Line 123
	test	ebx, ebx
	je	SHORT $LN9@BN_mpi2bn
; Line 124
	push	esi
	call	_BN_num_bits
	dec	eax
	push	eax
	push	esi
	call	_BN_clear_bit
	add	esp, 12					; 0000000cH
$LN9@BN_mpi2bn:
; Line 127
	mov	eax, esi
	pop	esi
	pop	edi
	pop	ebp
	pop	ebx
; Line 128
	ret	0
_BN_mpi2bn ENDP
_TEXT	ENDS
END

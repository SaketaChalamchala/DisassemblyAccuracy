; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_set.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_i2d_ASN1_SET
PUBLIC	_d2i_ASN1_SET
PUBLIC	??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@ ; `string'
EXTRN	__imp__qsort:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_get_object:PROC
EXTRN	_ASN1_const_check_infinite_end:PROC
EXTRN	_ASN1_put_object:PROC
EXTRN	_ASN1_object_size:PROC
EXTRN	_asn1_add_error:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@
CONST	SEGMENT
??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@ DB '.\crypto\asn1\a_se'
	DB	't.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _SetBlobCmp
_TEXT	SEGMENT
_elem1$ = 8						; size = 4
_elem2$ = 12						; size = 4
_SetBlobCmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_set.c
; Line 79
	mov	eax, DWORD PTR _elem1$[esp-4]
	mov	ecx, DWORD PTR _elem2$[esp-4]
	push	ebx
	push	esi
	mov	edx, DWORD PTR [eax]
	mov	ebx, DWORD PTR [ecx+4]
	mov	esi, ebx
	mov	ecx, DWORD PTR [ecx]
	push	edi
	mov	edi, DWORD PTR [eax+4]
	cmp	edi, ebx
	cmovl	esi, edi
	sub	esi, 4
	jb	SHORT $LN8@SetBlobCmp
$LL9@SetBlobCmp:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [ecx]
	jne	SHORT $LN7@SetBlobCmp
	add	edx, 4
	add	ecx, 4
	sub	esi, 4
	jae	SHORT $LL9@SetBlobCmp
$LN8@SetBlobCmp:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN6@SetBlobCmp
$LN7@SetBlobCmp:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN10@SetBlobCmp
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN6@SetBlobCmp
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN10@SetBlobCmp
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN6@SetBlobCmp
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [ecx+2]
	jne	SHORT $LN10@SetBlobCmp
	cmp	esi, -1
	je	SHORT $LN6@SetBlobCmp
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [ecx+3]
	je	SHORT $LN6@SetBlobCmp
$LN10@SetBlobCmp:
	sbb	eax, eax
	or	eax, 1
	jmp	SHORT $LN11@SetBlobCmp
$LN6@SetBlobCmp:
	xor	eax, eax
$LN11@SetBlobCmp:
; Line 81
	test	eax, eax
	jne	SHORT $LN1@SetBlobCmp
; Line 83
	sub	edi, ebx
	mov	eax, edi
$LN1@SetBlobCmp:
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	ret	0
_SetBlobCmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_ASN1_SET
_TEXT	SEGMENT
_c$ = -44						; size = 44
_a$ = 8							; size = 4
_pp$ = 12						; size = 4
_length$ = 16						; size = 4
_d2i$ = 20						; size = 4
_free_func$ = 24					; size = 4
_ex_tag$ = 28						; size = 4
_ex_class$ = 32						; size = 4
_d2i_ASN1_SET PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_set.c
; Line 169
	mov	eax, 44					; 0000002cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 173
	mov	edi, DWORD PTR _a$[esp+56]
	test	edi, edi
	je	SHORT $LN6@d2i_ASN1_S
	mov	esi, DWORD PTR [edi]
	test	esi, esi
	jne	SHORT $LN7@d2i_ASN1_S
$LN6@d2i_ASN1_S:
; Line 174
	call	_sk_new_null
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN7@d2i_ASN1_S
; Line 175
	push	175					; 000000afH
	push	OFFSET ??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@
	push	65					; 00000041H
	push	148					; 00000094H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 235
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 236
	add	esp, 44					; 0000002cH
	ret	0
$LN7@d2i_ASN1_S:
; Line 181
	mov	ecx, DWORD PTR _pp$[esp+56]
; Line 182
	mov	ebp, DWORD PTR _length$[esp+56]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR _c$[esp+60], ecx
	test	ebp, ebp
	jne	SHORT $LN22@d2i_ASN1_S
	xor	eax, eax
	jmp	SHORT $LN36@d2i_ASN1_S
$LN22@d2i_ASN1_S:
	lea	eax, DWORD PTR [ecx+ebp]
$LN36@d2i_ASN1_S:
	mov	DWORD PTR _c$[esp+88], eax
; Line 184
	sub	eax, ecx
	push	eax
	lea	eax, DWORD PTR _c$[esp+84]
	push	eax
	lea	eax, DWORD PTR _c$[esp+84]
	push	eax
	lea	eax, DWORD PTR _c$[esp+96]
	push	eax
	lea	eax, DWORD PTR _c$[esp+76]
	push	eax
	call	_ASN1_get_object
	mov	ebx, eax
	add	esp, 20					; 00000014H
	mov	DWORD PTR _c$[esp+72], ebx
; Line 185
	test	bl, bl
	js	SHORT $err$39
; Line 187
	mov	ecx, DWORD PTR _ex_class$[esp+56]
	cmp	ecx, DWORD PTR _c$[esp+80]
	je	SHORT $LN9@d2i_ASN1_S
; Line 188
	push	188					; 000000bcH
	push	OFFSET ??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@
	push	101					; 00000065H
$LN37@d2i_ASN1_S:
; Line 192
	push	148					; 00000094H
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$err$39:
; Line 229
	test	esi, esi
	je	$LN20@d2i_ASN1_S
	test	edi, edi
	je	SHORT $LN18@d2i_ASN1_S
	cmp	DWORD PTR [edi], esi
	je	$LN20@d2i_ASN1_S
$LN18@d2i_ASN1_S:
; Line 230
	mov	eax, DWORD PTR _free_func$[esp+56]
	test	eax, eax
	je	$LN19@d2i_ASN1_S
; Line 231
	push	eax
	push	esi
	call	_sk_pop_free
	add	esp, 8
; Line 235
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 236
	add	esp, 44					; 0000002cH
	ret	0
$LN9@d2i_ASN1_S:
; Line 191
	mov	eax, DWORD PTR _ex_tag$[esp+56]
	cmp	eax, DWORD PTR _c$[esp+76]
	je	SHORT $LN10@d2i_ASN1_S
; Line 192
	push	192					; 000000c0H
	push	OFFSET ??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@
	push	104					; 00000068H
; Line 193
	jmp	SHORT $LN37@d2i_ASN1_S
$LN10@d2i_ASN1_S:
; Line 195
	mov	ecx, DWORD PTR _c$[esp+84]
	mov	edx, DWORD PTR _c$[esp+60]
	lea	eax, DWORD PTR [ecx+edx]
	cmp	eax, DWORD PTR _c$[esp+88]
	jbe	SHORT $LN11@d2i_ASN1_S
; Line 196
	push	196					; 000000c4H
	push	OFFSET ??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@
	push	136					; 00000088H
; Line 197
	jmp	SHORT $LN37@d2i_ASN1_S
$LN11@d2i_ASN1_S:
; Line 203
	cmp	ebx, 33					; 00000021H
	jne	SHORT $LN12@d2i_ASN1_S
; Line 204
	mov	eax, DWORD PTR _pp$[esp+56]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, edx
	add	ecx, ebp
	mov	DWORD PTR _c$[esp+84], ecx
$LN12@d2i_ASN1_S:
; Line 205
	lea	eax, DWORD PTR [ecx+edx]
	mov	DWORD PTR _c$[esp+88], eax
; Line 207
	cmp	edx, eax
	jae	$LN3@d2i_ASN1_S
	mov	ebp, DWORD PTR _d2i$[esp+56]
	npad	5
$LL2@d2i_ASN1_S:
; Line 210
	test	bl, 1
	jne	SHORT $LN24@d2i_ASN1_S
	xor	eax, eax
	test	ecx, ecx
	setle	al
	jmp	SHORT $LN25@d2i_ASN1_S
$LN24@d2i_ASN1_S:
	push	ecx
	lea	eax, DWORD PTR _c$[esp+64]
	push	eax
	call	_ASN1_const_check_infinite_end
	mov	ecx, DWORD PTR _c$[esp+92]
	add	esp, 8
	mov	edx, DWORD PTR _c$[esp+60]
	mov	DWORD PTR _c$[esp+64], eax
$LN25@d2i_ASN1_S:
	test	eax, eax
	jne	SHORT $LN3@d2i_ASN1_S
; Line 216
	push	ecx
	lea	eax, DWORD PTR _c$[esp+64]
	push	eax
	push	0
	call	ebp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN28@d2i_ASN1_S
; Line 221
	push	eax
	push	esi
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$err$39
; Line 207
	mov	edx, DWORD PTR _c$[esp+60]
	cmp	edx, DWORD PTR _c$[esp+88]
	jae	SHORT $LN3@d2i_ASN1_S
	mov	ecx, DWORD PTR _c$[esp+84]
	mov	ebx, DWORD PTR _c$[esp+72]
	jmp	SHORT $LL2@d2i_ASN1_S
$LN28@d2i_ASN1_S:
; Line 217
	push	217					; 000000d9H
	push	OFFSET ??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@
	push	113					; 00000071H
	push	148					; 00000094H
	push	13					; 0000000dH
	call	_ERR_put_error
; Line 218
	mov	eax, DWORD PTR _pp$[esp+76]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR _c$[esp+80]
	sub	eax, ecx
	push	eax
	push	ecx
	call	_asn1_add_error
	add	esp, 28					; 0000001cH
	jmp	$err$39
$LN3@d2i_ASN1_S:
; Line 224
	test	edi, edi
	je	SHORT $LN16@d2i_ASN1_S
; Line 225
	mov	DWORD PTR [edi], esi
$LN16@d2i_ASN1_S:
; Line 226
	mov	eax, DWORD PTR _pp$[esp+56]
	pop	edi
	mov	DWORD PTR [eax], edx
; Line 227
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 236
	add	esp, 44					; 0000002cH
	ret	0
$LN19@d2i_ASN1_S:
; Line 233
	push	esi
	call	_sk_free
	add	esp, 4
$LN20@d2i_ASN1_S:
; Line 235
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 236
	add	esp, 44					; 0000002cH
	ret	0
_d2i_ASN1_SET ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_ASN1_SET
_TEXT	SEGMENT
_rgSetBlob$1$ = -20					; size = 4
_pStart$1$ = -16					; size = 4
_r$1$ = -12						; size = 4
_pTempMem$1$ = -8					; size = 4
_totSize$1$ = -4					; size = 4
_p$ = 8							; size = 4
_a$ = 8							; size = 4
_pp$ = 12						; size = 4
_i2d$ = 16						; size = 4
_ex_tag$ = 20						; size = 4
_ex_class$ = 24						; size = 4
_is_set$ = 28						; size = 4
_i2d_ASN1_SET PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\a_set.c
; Line 91
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
	push	esi
; Line 99
	mov	esi, DWORD PTR _a$[esp+24]
	xor	ebx, ebx
	test	esi, esi
	jne	SHORT $LN14@i2d_ASN1_S
; Line 100
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 162
	add	esp, 20					; 00000014H
	ret	0
$LN14@i2d_ASN1_S:
	push	ebp
	push	edi
; Line 101
	push	esi
	call	_sk_num
	mov	ebp, DWORD PTR _i2d$[esp+36]
	mov	edi, eax
	add	esp, 4
	sub	edi, 1
	js	SHORT $LN3@i2d_ASN1_S
$LL4@i2d_ASN1_S:
; Line 102
	push	0
	push	edi
	push	esi
	call	_sk_value
	add	esp, 8
	push	eax
	call	ebp
	add	esp, 8
	add	ebx, eax
	sub	edi, 1
	jns	SHORT $LL4@i2d_ASN1_S
$LN3@i2d_ASN1_S:
; Line 103
	mov	edi, DWORD PTR _ex_tag$[esp+32]
	push	edi
	push	ebx
	push	1
	call	_ASN1_object_size
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 104
	mov	eax, DWORD PTR _pp$[esp+32]
	mov	DWORD PTR _r$1$[esp+36], ecx
	test	eax, eax
	jne	SHORT $LN15@i2d_ASN1_S
; Line 105
	pop	edi
	pop	ebp
	pop	esi
	mov	eax, ecx
	pop	ebx
; Line 162
	add	esp, 20					; 00000014H
	ret	0
$LN15@i2d_ASN1_S:
; Line 108
	push	DWORD PTR _ex_class$[esp+32]
	mov	eax, DWORD PTR [eax]
	push	edi
	push	ebx
	mov	DWORD PTR _p$[esp+44], eax
	lea	eax, DWORD PTR _p$[esp+44]
	push	1
	push	eax
	call	_ASN1_put_object
	add	esp, 20					; 00000014H
; Line 114
	cmp	DWORD PTR _is_set$[esp+32], 0
	je	$LN17@i2d_ASN1_S
	push	esi
	call	_sk_num
	add	esp, 4
	cmp	eax, 2
	jl	$LN17@i2d_ASN1_S
; Line 122
	mov	eax, DWORD PTR _p$[esp+32]
; Line 124
	push	124					; 0000007cH
	push	OFFSET ??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@
	push	esi
	mov	DWORD PTR _pStart$1$[esp+48], eax
	call	_sk_num
	add	esp, 4
	shl	eax, 3
	push	eax
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rgSetBlob$1$[esp+36], ebx
; Line 125
	test	ebx, ebx
	jne	SHORT $LN18@i2d_ASN1_S
; Line 126
	push	126					; 0000007eH
; Line 127
	jmp	$LN41@i2d_ASN1_S
$LN18@i2d_ASN1_S:
; Line 130
	push	esi
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN9@i2d_ASN1_S
$LL10@i2d_ASN1_S:
; Line 131
	mov	eax, DWORD PTR _p$[esp+32]
	mov	DWORD PTR [ebx+edi*8], eax
; Line 132
	lea	eax, DWORD PTR _p$[esp+32]
	push	eax
	push	edi
	push	esi
	call	_sk_value
	add	esp, 8
	push	eax
	call	ebp
; Line 133
	mov	eax, DWORD PTR _p$[esp+40]
	sub	eax, DWORD PTR [ebx+edi*8]
	mov	DWORD PTR [ebx+edi*8+4], eax
	inc	edi
	push	esi
	call	_sk_num
	add	esp, 12					; 0000000cH
	cmp	edi, eax
	jl	SHORT $LL10@i2d_ASN1_S
$LN9@i2d_ASN1_S:
; Line 136
	mov	ecx, DWORD PTR _pp$[esp+32]
	mov	ebp, DWORD PTR _p$[esp+32]
; Line 143
	push	OFFSET _SetBlobCmp
	push	8
	mov	DWORD PTR [ecx], ebp
	sub	ebp, DWORD PTR _pStart$1$[esp+44]
	push	esi
	mov	DWORD PTR _totSize$1$[esp+48], ebp
	call	_sk_num
	add	esp, 4
	push	eax
	push	ebx
	call	DWORD PTR __imp__qsort
; Line 144
	push	144					; 00000090H
	push	OFFSET ??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@
	push	ebp
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _pTempMem$1$[esp+36], edi
	test	edi, edi
	jne	SHORT $LN19@i2d_ASN1_S
; Line 145
	push	145					; 00000091H
$LN41@i2d_ASN1_S:
	push	OFFSET ??_C@_0BG@EJEAOFPD@?4?2crypto?2asn1?2a_set?4c?$AA@
	push	65					; 00000041H
	push	188					; 000000bcH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 146
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	esi
	pop	ebx
; Line 162
	add	esp, 20					; 00000014H
	ret	0
$LN19@i2d_ASN1_S:
; Line 151
	push	esi
	mov	DWORD PTR _p$[esp+36], edi
	xor	ebx, ebx
	call	_sk_num
	mov	ebp, DWORD PTR _rgSetBlob$1$[esp+40]
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN12@i2d_ASN1_S
; Line 150
	lea	edi, DWORD PTR [ebp+4]
	npad	7
$LL13@i2d_ASN1_S:
; Line 152
	push	DWORD PTR [edi]
	push	DWORD PTR [edi-4]
	push	DWORD PTR _p$[esp+40]
	call	_memcpy
; Line 153
	mov	eax, DWORD PTR [edi]
	lea	edi, DWORD PTR [edi+8]
	add	DWORD PTR _p$[esp+44], eax
	inc	ebx
	push	esi
	call	_sk_num
	add	esp, 16					; 00000010H
	cmp	ebx, eax
	jl	SHORT $LL13@i2d_ASN1_S
	mov	edi, DWORD PTR _pTempMem$1$[esp+36]
$LN12@i2d_ASN1_S:
; Line 157
	push	DWORD PTR _totSize$1$[esp+36]
	push	edi
	push	DWORD PTR _pStart$1$[esp+44]
	call	_memcpy
; Line 158
	push	edi
	call	_CRYPTO_free
; Line 159
	push	ebp
	call	_CRYPTO_free
	mov	eax, DWORD PTR _r$1$[esp+56]
	add	esp, 20					; 00000014H
	pop	edi
	pop	ebp
	pop	esi
	pop	ebx
; Line 162
	add	esp, 20					; 00000014H
	ret	0
$LN17@i2d_ASN1_S:
; Line 115
	push	esi
	xor	edi, edi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN6@i2d_ASN1_S
$LL7@i2d_ASN1_S:
; Line 116
	lea	eax, DWORD PTR _p$[esp+32]
	push	eax
	push	edi
	push	esi
	call	_sk_value
	add	esp, 8
	push	eax
	call	ebp
	push	esi
	inc	edi
	call	_sk_num
	add	esp, 12					; 0000000cH
	cmp	edi, eax
	jl	SHORT $LL7@i2d_ASN1_S
$LN6@i2d_ASN1_S:
; Line 118
	mov	ecx, DWORD PTR _pp$[esp+32]
	mov	eax, DWORD PTR _p$[esp+32]
	pop	edi
	pop	ebp
	pop	esi
	mov	DWORD PTR [ecx], eax
; Line 119
	mov	eax, DWORD PTR _r$1$[esp+24]
	pop	ebx
; Line 162
	add	esp, 20					; 00000014H
	ret	0
_i2d_ASN1_SET ENDP
_TEXT	ENDS
END

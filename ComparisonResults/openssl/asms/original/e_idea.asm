; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_idea.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

EXTRN	_EVP_CIPHER_set_asn1_iv:PROC
EXTRN	_EVP_CIPHER_get_asn1_iv:PROC
CONST	SEGMENT
_idea_cbc DD	022H
	DD	08H
	DD	010H
	DD	08H
	DD	02H
	DD	FLAT:_idea_init_key
	DD	FLAT:_idea_cbc_cipher
	DD	00H
	DD	0d8H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_idea_cfb64 DD	023H
	DD	01H
	DD	010H
	DD	08H
	DD	03H
	DD	FLAT:_idea_init_key
	DD	FLAT:_idea_cfb64_cipher
	DD	00H
	DD	0d8H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_idea_ofb DD	02eH
	DD	01H
	DD	010H
	DD	08H
	DD	04H
	DD	FLAT:_idea_init_key
	DD	FLAT:_idea_ofb_cipher
	DD	00H
	DD	0d8H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_idea_ecb DD	024H
	DD	08H
	DD	010H
	DD	00H
	DD	01H
	DD	FLAT:_idea_init_key
	DD	FLAT:_idea_ecb_cipher
	DD	00H
	DD	0d8H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	_EVP_idea_ecb
PUBLIC	_EVP_idea_cfb64
PUBLIC	_EVP_idea_ofb
PUBLIC	_EVP_idea_cbc
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_EVP_CIPHER_CTX_flags:PROC
EXTRN	_idea_ecb_encrypt:PROC
EXTRN	_idea_set_encrypt_key:PROC
EXTRN	_idea_set_decrypt_key:PROC
EXTRN	_idea_cbc_encrypt:PROC
EXTRN	_idea_cfb64_encrypt:PROC
EXTRN	_idea_ofb64_encrypt:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogtpy
;	COMDAT _idea_cfb64_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
_inl$ = 20						; size = 4
_idea_cfb64_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_idea.c
; Line 92
	push	esi
	mov	esi, 1073741824				; 40000000H
	push	edi
	mov	edi, DWORD PTR _inl$[esp+4]
	cmp	edi, esi
	cmovb	esi, edi
	test	edi, edi
	je	SHORT $LN11@idea_cfb64
	push	ebx
	mov	ebx, DWORD PTR _ctx$[esp+8]
	push	ebp
	mov	ebp, DWORD PTR _in$[esp+12]
	npad	2
$LL2@idea_cfb64:
	cmp	edi, esi
	jb	SHORT $LN12@idea_cfb64
	push	DWORD PTR [ebx+8]
	lea	eax, DWORD PTR [ebx+80]
	push	eax
	lea	eax, DWORD PTR [ebx+32]
	push	eax
	push	DWORD PTR [ebx+96]
	push	edi
	push	DWORD PTR _out$[esp+32]
	push	ebp
	call	_idea_cfb64_encrypt
	add	DWORD PTR _out$[esp+40], esi
	sub	edi, esi
	add	ebp, esi
	add	esp, 28					; 0000001cH
	cmp	edi, esi
	cmovb	esi, edi
	test	edi, edi
	jne	SHORT $LL2@idea_cfb64
$LN12@idea_cfb64:
	pop	ebp
	pop	ebx
	pop	edi
	mov	eax, 1
	pop	esi
	ret	0
$LN11@idea_cfb64:
	pop	edi
	mov	eax, 1
	pop	esi
	ret	0
_idea_cfb64_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _idea_ofb_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
tv144 = 20						; size = 4
_inl$ = 20						; size = 4
_idea_ofb_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_idea.c
; Line 91
	push	ebx
	mov	ebx, DWORD PTR _out$[esp]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+4]
	push	esi
	mov	esi, DWORD PTR _inl$[esp+8]
	push	edi
	mov	edi, DWORD PTR _in$[esp+12]
	cmp	esi, 1073741824				; 40000000H
	jb	SHORT $LN3@idea_ofb_c
	mov	eax, esi
	lea	ecx, DWORD PTR [ebp+80]
	shr	eax, 30					; 0000001eH
	lea	edx, DWORD PTR [ebp+32]
	mov	DWORD PTR tv144[esp+12], eax
	npad	5
$LL2@idea_ofb_c:
	push	ecx
	push	edx
	push	DWORD PTR [ebp+96]
	push	1073741824				; 40000000H
	push	ebx
	push	edi
	call	_idea_ofb64_encrypt
	add	esp, 24					; 00000018H
	lea	ecx, DWORD PTR [ebp+80]
	sub	esi, 1073741824				; 40000000H
	lea	edx, DWORD PTR [ebp+32]
	add	edi, 1073741824				; 40000000H
	add	ebx, 1073741824				; 40000000H
	sub	DWORD PTR tv144[esp+12], 1
	jne	SHORT $LL2@idea_ofb_c
$LN3@idea_ofb_c:
	test	esi, esi
	je	SHORT $LN10@idea_ofb_c
	lea	eax, DWORD PTR [ebp+80]
	push	eax
	lea	eax, DWORD PTR [ebp+32]
	push	eax
	push	DWORD PTR [ebp+96]
	push	esi
	push	ebx
	push	edi
	call	_idea_ofb64_encrypt
	add	esp, 24					; 00000018H
$LN10@idea_ofb_c:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	ret	0
_idea_ofb_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _idea_cbc_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
tv142 = 20						; size = 4
_inl$ = 20						; size = 4
_idea_cbc_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_idea.c
; Line 90
	push	ebx
	mov	ebx, DWORD PTR _out$[esp]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+4]
	push	esi
	mov	esi, DWORD PTR _inl$[esp+8]
	push	edi
	mov	edi, DWORD PTR _in$[esp+12]
	cmp	esi, 1073741824				; 40000000H
	jb	SHORT $LN3@idea_cbc_c
	mov	eax, esi
	lea	ecx, DWORD PTR [ebp+32]
	shr	eax, 30					; 0000001eH
	mov	DWORD PTR tv142[esp+12], eax
$LL2@idea_cbc_c:
	push	DWORD PTR [ebp+8]
	push	ecx
	push	DWORD PTR [ebp+96]
	push	1073741824				; 40000000H
	push	ebx
	push	edi
	call	_idea_cbc_encrypt
	add	esp, 24					; 00000018H
	lea	ecx, DWORD PTR [ebp+32]
	sub	esi, 1073741824				; 40000000H
	add	edi, 1073741824				; 40000000H
	add	ebx, 1073741824				; 40000000H
	sub	DWORD PTR tv142[esp+12], 1
	jne	SHORT $LL2@idea_cbc_c
$LN3@idea_cbc_c:
	test	esi, esi
	je	SHORT $LN10@idea_cbc_c
	push	DWORD PTR [ebp+8]
	lea	eax, DWORD PTR [ebp+32]
	push	eax
	push	DWORD PTR [ebp+96]
	push	esi
	push	ebx
	push	edi
	call	_idea_cbc_encrypt
	add	esp, 24					; 00000018H
$LN10@idea_cbc_c:
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
	ret	0
_idea_cbc_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _idea_ecb_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
_inl$ = 20						; size = 4
_idea_ecb_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_idea.c
; Line 79
	mov	ecx, DWORD PTR _ctx$[esp-4]
	push	ebp
	mov	ebp, DWORD PTR _inl$[esp]
	push	edi
	mov	eax, DWORD PTR [ecx]
	mov	edi, DWORD PTR [eax+4]
	cmp	ebp, edi
	jb	SHORT $LN11@idea_ecb_c
	mov	eax, DWORD PTR _out$[esp+4]
	sub	ebp, edi
	push	ebx
	push	esi
	mov	esi, DWORD PTR _in$[esp+12]
	xor	ebx, ebx
	sub	eax, esi
	mov	DWORD PTR _out$[esp+12], eax
$LL4@idea_ecb_c:
; Line 80
	push	DWORD PTR [ecx+96]
	add	eax, esi
	push	eax
	push	esi
	call	_idea_ecb_encrypt
	mov	ecx, DWORD PTR _ctx$[esp+24]
	add	ebx, edi
	mov	eax, DWORD PTR _out$[esp+24]
	add	esp, 12					; 0000000cH
	add	esi, edi
	cmp	ebx, ebp
	jbe	SHORT $LL4@idea_ecb_c
	pop	esi
	pop	ebx
$LN11@idea_ecb_c:
	pop	edi
; Line 81
	mov	eax, 1
	pop	ebp
; Line 82
	ret	0
_idea_ecb_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _idea_init_key
_TEXT	SEGMENT
_tmp$1 = -220						; size = 216
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_key$ = 12						; size = 4
_iv$ = 16						; size = 4
_enc$ = 20						; size = 4
_idea_init_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_idea.c
; Line 100
	mov	eax, 220				; 000000dcH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+220], eax
; Line 101
	cmp	DWORD PTR _enc$[esp+216], 0
	push	esi
	mov	esi, DWORD PTR _ctx$[esp+220]
	push	edi
	mov	edi, DWORD PTR _key$[esp+224]
	jne	SHORT $LN9@idea_init_
; Line 102
	push	esi
	call	_EVP_CIPHER_CTX_flags
	and	eax, 983047				; 000f0007H
	add	esp, 4
	cmp	eax, 4
	je	SHORT $LN9@idea_init_
; Line 104
	push	esi
	call	_EVP_CIPHER_CTX_flags
	and	eax, 983047				; 000f0007H
	add	esp, 4
	cmp	eax, 3
	je	SHORT $LN9@idea_init_
; Line 112
	lea	eax, DWORD PTR _tmp$1[esp+228]
	push	eax
	push	edi
	call	_idea_set_encrypt_key
; Line 113
	push	DWORD PTR [esi+96]
	lea	eax, DWORD PTR _tmp$1[esp+240]
	push	eax
	call	_idea_set_decrypt_key
; Line 114
	lea	eax, DWORD PTR _tmp$1[esp+244]
	push	216					; 000000d8H
	push	eax
	call	_OPENSSL_cleanse
	add	esp, 24					; 00000018H
	jmp	SHORT $LN10@idea_init_
$LN9@idea_init_:
; Line 108
	push	DWORD PTR [esi+96]
	push	edi
	call	_idea_set_encrypt_key
	add	esp, 8
$LN10@idea_init_:
; Line 117
	mov	ecx, DWORD PTR __$ArrayPad$[esp+228]
	mov	eax, 1
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	ret	0
_idea_init_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_idea_cbc
_TEXT	SEGMENT
_EVP_idea_cbc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_idea.c
; Line 94
	mov	eax, OFFSET _idea_cbc
; Line 96
	ret	0
_EVP_idea_cbc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_idea_ofb
_TEXT	SEGMENT
_EVP_idea_ofb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_idea.c
; Line 94
	mov	eax, OFFSET _idea_ofb
; Line 96
	ret	0
_EVP_idea_ofb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_idea_cfb64
_TEXT	SEGMENT
_EVP_idea_cfb64 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_idea.c
; Line 94
	mov	eax, OFFSET _idea_cfb64
; Line 96
	ret	0
_EVP_idea_cfb64 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_idea_ecb
_TEXT	SEGMENT
_EVP_idea_ecb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_idea.c
; Line 94
	mov	eax, OFFSET _idea_ecb
; Line 96
	ret	0
_EVP_idea_ecb ENDP
_TEXT	ENDS
END

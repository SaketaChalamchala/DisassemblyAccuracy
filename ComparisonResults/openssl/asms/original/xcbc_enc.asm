; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\des\xcbc_enc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_DES_xcbc_encrypt
EXTRN	_DES_encrypt1:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _DES_xcbc_encrypt
_TEXT	SEGMENT
_outW1$1$ = -28						; size = 4
_inW0$1$ = -24						; size = 4
_inW1$1$ = -20						; size = 4
_iv$4$ = -16						; size = 4
_l$2$ = -12						; size = 4
_tin$ = -8						; size = 8
_in$ = 8						; size = 4
_out$ = 12						; size = 4
_tin0$4$ = 16						; size = 4
_l$1$ = 16						; size = 4
_out$2$ = 16						; size = 4
tv954 = 16						; size = 4
_length$ = 16						; size = 4
_schedule$ = 20						; size = 4
_ivec$ = 24						; size = 4
_xor1$1$ = 28						; size = 4
_tout1$1$ = 28						; size = 4
_inw$ = 28						; size = 4
_tin1$4$ = 32						; size = 4
_outW0$1$ = 32						; size = 4
_outw$ = 32						; size = 4
_xor0$1$ = 36						; size = 4
tv955 = 36						; size = 4
_enc$ = 36						; size = 4
_DES_xcbc_encrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\des\xcbc_enc.c
; Line 131
	mov	eax, 28					; 0000001cH
	call	__chkstk
; Line 141
	push	ebx
; Line 144
	push	ebp
	push	esi
; Line 150
	push	edi
; Line 141
	mov	eax, DWORD PTR _inw$[esp+40]
	lea	edx, DWORD PTR [eax+1]
; Line 142
	movzx	ebx, BYTE PTR [edx+3]
	movzx	ecx, BYTE PTR [eax]
	movzx	eax, BYTE PTR [edx]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+4]
	shl	eax, 8
	or	ebx, eax
	mov	DWORD PTR _inW0$1$[esp+44], ecx
	movzx	ecx, BYTE PTR [edx+6]
	movzx	eax, BYTE PTR [edx+5]
	shl	ecx, 8
	or	ecx, eax
; Line 144
	mov	eax, DWORD PTR _outw$[esp+40]
	lea	edx, DWORD PTR [eax+1]
	shl	ecx, 16					; 00000010H
	movzx	esi, BYTE PTR [eax]
	or	ebx, ecx
	movzx	eax, BYTE PTR [edx]
; Line 145
	movzx	ecx, BYTE PTR [edx+6]
	shl	eax, 8
	or	esi, eax
	mov	DWORD PTR _inW1$1$[esp+44], ebx
	movzx	eax, BYTE PTR [edx+1]
	movzx	ebx, BYTE PTR [edx+3]
	shl	eax, 16					; 00000010H
	or	esi, eax
	shl	ecx, 8
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	esi, eax
	movzx	eax, BYTE PTR [edx+4]
	shl	eax, 8
	or	ebx, eax
	mov	DWORD PTR _outW0$1$[esp+40], esi
	movzx	eax, BYTE PTR [edx+5]
	or	ecx, eax
; Line 150
	mov	eax, DWORD PTR _ivec$[esp+40]
	shl	ecx, 16					; 00000010H
	or	ebx, ecx
	cmp	DWORD PTR _enc$[esp+40], 0
	mov	DWORD PTR _outW1$1$[esp+44], ebx
	je	$LN12@DES_xcbc_e
	movzx	ebx, BYTE PTR [eax]
	lea	edx, DWORD PTR [eax+1]
	movzx	eax, BYTE PTR [edx]
; Line 151
	movzx	ebp, BYTE PTR [edx+3]
	movzx	ecx, BYTE PTR [edx+6]
	shl	eax, 8
	or	ebx, eax
; Line 152
	mov	esi, DWORD PTR _out$[esp+40]
	movzx	eax, BYTE PTR [edx+1]
	mov	edi, DWORD PTR _in$[esp+40]
	shl	eax, 16					; 00000010H
	or	ebx, eax
	shl	ecx, 8
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	ebx, eax
	movzx	eax, BYTE PTR [edx+4]
	shl	eax, 8
	or	ebp, eax
	movzx	eax, BYTE PTR [edx+5]
	or	ecx, eax
	mov	DWORD PTR _tout1$1$[esp+40], ebp
	shl	ecx, 16					; 00000010H
	mov	edx, ebp
	or	edx, ecx
	mov	ecx, DWORD PTR _length$[esp+40]
	add	ecx, -8					; fffffff8H
	mov	DWORD PTR _tout1$1$[esp+40], edx
	mov	DWORD PTR _l$1$[esp+40], ecx
	js	$LN3@DES_xcbc_e
; Line 150
	lea	eax, DWORD PTR [ecx+8]
	shr	eax, 3
	mov	DWORD PTR tv955[esp+40], eax
; Line 152
	neg	eax
	lea	ecx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _l$1$[esp+40], ecx
	npad	8
$LL4@DES_xcbc_e:
; Line 153
	movzx	eax, BYTE PTR [edi+1]
	movzx	edx, BYTE PTR [edi]
; Line 154
	movzx	ecx, BYTE PTR [edi+4]
	shl	eax, 8
	or	edx, eax
	movzx	eax, BYTE PTR [edi+2]
	shl	eax, 16					; 00000010H
	or	edx, eax
	movzx	eax, BYTE PTR [edi+3]
	shl	eax, 24					; 00000018H
	or	edx, eax
	movzx	eax, BYTE PTR [edi+5]
	shl	eax, 8
; Line 155
	xor	edx, ebx
	xor	edx, DWORD PTR _inW0$1$[esp+44]
	or	ecx, eax
	movzx	eax, BYTE PTR [edi+6]
	shl	eax, 16					; 00000010H
	or	ecx, eax
; Line 156
	mov	DWORD PTR _tin$[esp+44], edx
	movzx	eax, BYTE PTR [edi+7]
	add	edi, 8
	shl	eax, 24					; 00000018H
	or	ecx, eax
; Line 159
	lea	eax, DWORD PTR _tin$[esp+44]
	xor	ecx, DWORD PTR _tout1$1$[esp+40]
	xor	ecx, DWORD PTR _inW1$1$[esp+44]
	push	1
	push	DWORD PTR _schedule$[esp+44]
	mov	DWORD PTR _tin$[esp+56], ecx
	push	eax
	call	_DES_encrypt1
; Line 160
	mov	ebx, DWORD PTR _tin$[esp+56]
	add	esp, 12					; 0000000cH
	xor	ebx, DWORD PTR _outW0$1$[esp+40]
; Line 162
	mov	edx, DWORD PTR _tin$[esp+48]
	mov	eax, ebx
	xor	edx, DWORD PTR _outW1$1$[esp+44]
	shr	eax, 8
	mov	BYTE PTR [esi], bl
	mov	BYTE PTR [esi+1], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+2], al
	mov	eax, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+3], al
; Line 163
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+4], dl
	mov	BYTE PTR [esi+5], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+6], al
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+7], al
	add	esi, 8
	sub	DWORD PTR tv955[esp+40], 1
	mov	DWORD PTR _tout1$1$[esp+40], edx
	jne	$LL4@DES_xcbc_e
	mov	ecx, DWORD PTR _l$1$[esp+40]
$LN3@DES_xcbc_e:
; Line 165
	cmp	ecx, -8					; fffffff8H
	je	$LN14@DES_xcbc_e
; Line 166
	mov	eax, DWORD PTR _l$1$[esp+40]
	add	edi, 8
	add	ecx, edi
	add	eax, 7
	xor	edi, edi
	xor	ebp, ebp
	cmp	eax, 7
	ja	SHORT $LN5@DES_xcbc_e
	jmp	DWORD PTR $LN44@DES_xcbc_e[eax*4]
$LN15@DES_xcbc_e:
	movzx	edi, BYTE PTR [ecx-1]
	dec	ecx
	shl	edi, 24					; 00000018H
$LN16@DES_xcbc_e:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	shl	eax, 16					; 00000010H
	or	edi, eax
$LN17@DES_xcbc_e:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	shl	eax, 8
	or	edi, eax
$LN18@DES_xcbc_e:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	or	edi, eax
$LN19@DES_xcbc_e:
	movzx	ebp, BYTE PTR [ecx-1]
	dec	ecx
	shl	ebp, 24					; 00000018H
$LN20@DES_xcbc_e:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	shl	eax, 16					; 00000010H
	or	ebp, eax
$LN21@DES_xcbc_e:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	shl	eax, 8
	or	ebp, eax
$LN22@DES_xcbc_e:
	movzx	eax, BYTE PTR [ecx-1]
	or	ebp, eax
$LN5@DES_xcbc_e:
; Line 171
	push	1
	push	DWORD PTR _schedule$[esp+44]
	xor	edi, edx
	lea	eax, DWORD PTR _tin$[esp+52]
	xor	edi, DWORD PTR _inW1$1$[esp+52]
	xor	ebp, ebx
	xor	ebp, DWORD PTR _inW0$1$[esp+52]
	push	eax
	mov	DWORD PTR _tin$[esp+56], ebp
	mov	DWORD PTR _tin$[esp+60], edi
	call	_DES_encrypt1
; Line 172
	mov	ebx, DWORD PTR _tin$[esp+56]
	add	esp, 12					; 0000000cH
	xor	ebx, DWORD PTR _outW0$1$[esp+40]
; Line 174
	mov	edx, DWORD PTR _tin$[esp+48]
	mov	eax, ebx
	xor	edx, DWORD PTR _outW1$1$[esp+44]
	shr	eax, 8
	mov	BYTE PTR [esi], bl
	mov	BYTE PTR [esi+1], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+2], al
	mov	eax, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+3], al
; Line 175
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi+4], dl
	mov	BYTE PTR [esi+5], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+6], al
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi+7], al
$LN14@DES_xcbc_e:
; Line 178
	mov	esi, DWORD PTR _ivec$[esp+40]
	mov	eax, ebx
	shr	eax, 8
	pop	edi
	mov	BYTE PTR [esi], bl
	mov	BYTE PTR [esi+1], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+2], al
; Line 179
	mov	eax, edx
	shr	ebx, 24					; 00000018H
	mov	BYTE PTR [esi+3], bl
	mov	BYTE PTR [esi+4], dl
	shr	eax, 8
	mov	BYTE PTR [esi+5], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+6], al
	shr	edx, 24					; 00000018H
	mov	BYTE PTR [esi+7], dl
	pop	esi
	pop	ebp
	pop	ebx
; Line 216
	add	esp, 28					; 0000001cH
	ret	0
$LN12@DES_xcbc_e:
; Line 181
	movzx	ecx, BYTE PTR [eax]
	lea	ebp, DWORD PTR [eax+1]
	mov	edx, ebp
; Line 183
	mov	edi, DWORD PTR _length$[esp+40]
	mov	ebx, DWORD PTR _in$[esp+40]
	add	edi, -8					; fffffff8H
	mov	DWORD PTR _iv$4$[esp+44], ebp
	movzx	eax, BYTE PTR [edx]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+4]
	mov	DWORD PTR _xor0$1$[esp+40], ecx
	movzx	ecx, BYTE PTR [edx+3]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+5]
	mov	DWORD PTR _xor1$1$[esp+40], ecx
	movzx	ecx, BYTE PTR [edx+6]
	mov	edx, DWORD PTR _xor1$1$[esp+40]
	shl	ecx, 8
	or	ecx, eax
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	DWORD PTR _xor1$1$[esp+40], edx
	test	edi, edi
	jle	$LN42@DES_xcbc_e
	mov	ebp, DWORD PTR _out$[esp+40]
	lea	eax, DWORD PTR [edi-1]
	shr	eax, 3
	inc	eax
	mov	DWORD PTR tv954[esp+40], eax
	neg	eax
	lea	edi, DWORD PTR [edi+eax*8]
	mov	DWORD PTR _l$2$[esp+44], edi
	npad	9
$LL9@DES_xcbc_e:
; Line 184
	movzx	eax, BYTE PTR [ebx+1]
	movzx	edi, BYTE PTR [ebx]
	shl	eax, 8
	or	edi, eax
	movzx	eax, BYTE PTR [ebx+2]
	shl	eax, 16					; 00000010H
	or	edi, eax
	movzx	eax, BYTE PTR [ebx+3]
	shl	eax, 24					; 00000018H
	or	edi, eax
; Line 185
	mov	eax, edi
	xor	eax, esi
; Line 186
	movzx	esi, BYTE PTR [ebx+4]
	mov	DWORD PTR _tin$[esp+44], eax
	movzx	eax, BYTE PTR [ebx+5]
	shl	eax, 8
	or	esi, eax
	movzx	eax, BYTE PTR [ebx+6]
	shl	eax, 16					; 00000010H
	or	esi, eax
	movzx	eax, BYTE PTR [ebx+7]
	shl	eax, 24					; 00000018H
	add	ebx, 8
	or	esi, eax
; Line 187
	mov	eax, esi
	xor	eax, DWORD PTR _outW1$1$[esp+44]
; Line 188
	push	0
	push	DWORD PTR _schedule$[esp+44]
	mov	DWORD PTR _tin$[esp+56], eax
	lea	eax, DWORD PTR _tin$[esp+52]
	push	eax
	call	_DES_encrypt1
; Line 189
	mov	ecx, DWORD PTR _tin$[esp+56]
	add	esp, 12					; 0000000cH
	xor	ecx, DWORD PTR _xor0$1$[esp+40]
	xor	ecx, DWORD PTR _inW0$1$[esp+44]
; Line 190
	mov	edx, DWORD PTR _tin$[esp+48]
; Line 191
	mov	eax, ecx
	xor	edx, DWORD PTR _xor1$1$[esp+40]
	xor	edx, DWORD PTR _inW1$1$[esp+44]
	mov	BYTE PTR [ebp], cl
	shr	eax, 8
	mov	BYTE PTR [ebp+1], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ebp+2], al
; Line 192
	mov	eax, edx
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [ebp+3], cl
; Line 193
	mov	ecx, edi
	mov	BYTE PTR [ebp+4], dl
	shr	eax, 8
	mov	BYTE PTR [ebp+5], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	shr	edx, 24					; 00000018H
	mov	BYTE PTR [ebp+6], al
	mov	BYTE PTR [ebp+7], dl
	add	ebp, 8
	sub	DWORD PTR tv954[esp+40], 1
; Line 194
	mov	edx, esi
	mov	esi, DWORD PTR _outW0$1$[esp+40]
	mov	DWORD PTR _xor0$1$[esp+40], ecx
	mov	DWORD PTR _xor1$1$[esp+40], edx
	jne	$LL9@DES_xcbc_e
	mov	edi, DWORD PTR _l$2$[esp+44]
	mov	DWORD PTR _out$2$[esp+40], ebp
	mov	ebp, DWORD PTR _iv$4$[esp+44]
	mov	esi, DWORD PTR _out$2$[esp+40]
	jmp	SHORT $LN8@DES_xcbc_e
$LN42@DES_xcbc_e:
; Line 183
	mov	esi, DWORD PTR _out$[esp+40]
	mov	ecx, DWORD PTR _xor0$1$[esp+40]
$LN8@DES_xcbc_e:
; Line 196
	cmp	edi, -8					; fffffff8H
	je	$LN23@DES_xcbc_e
; Line 197
	movzx	eax, BYTE PTR [ebx+1]
	movzx	ecx, BYTE PTR [ebx]
; Line 199
	movzx	edx, BYTE PTR [ebx+4]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [ebx+2]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	movzx	eax, BYTE PTR [ebx+3]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	movzx	eax, BYTE PTR [ebx+5]
	mov	DWORD PTR _tin0$4$[esp+40], ecx
	xor	ecx, DWORD PTR _outW0$1$[esp+40]
	mov	DWORD PTR _tin$[esp+44], ecx
	movzx	ecx, BYTE PTR [ebx+7]
	shl	eax, 8
	or	edx, eax
	shl	ecx, 8
	movzx	eax, BYTE PTR [ebx+6]
	or	ecx, eax
; Line 201
	lea	eax, DWORD PTR _tin$[esp+44]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	push	0
	push	DWORD PTR _schedule$[esp+44]
	mov	DWORD PTR _tin1$4$[esp+48], edx
	xor	edx, DWORD PTR _outW1$1$[esp+52]
	push	eax
	mov	DWORD PTR _tin$[esp+60], edx
	call	_DES_encrypt1
; Line 202
	mov	edx, DWORD PTR _tin$[esp+56]
; Line 204
	lea	ecx, DWORD PTR [edi+8]
	mov	ebx, DWORD PTR _tin$[esp+60]
	add	edi, 7
	xor	edx, DWORD PTR _xor0$1$[esp+52]
	add	esp, 12					; 0000000cH
	xor	ebx, DWORD PTR _xor1$1$[esp+40]
	add	ecx, esi
	xor	edx, DWORD PTR _inW0$1$[esp+44]
	xor	ebx, DWORD PTR _inW1$1$[esp+44]
	cmp	edi, 7
	ja	SHORT $LN10@DES_xcbc_e
	jmp	DWORD PTR $LN45@DES_xcbc_e[edi*4]
$LN24@DES_xcbc_e:
	dec	ecx
	mov	eax, ebx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx], al
$LN25@DES_xcbc_e:
	dec	ecx
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx], al
$LN26@DES_xcbc_e:
	dec	ecx
	mov	eax, ebx
	shr	eax, 8
	mov	BYTE PTR [ecx], al
$LN27@DES_xcbc_e:
	dec	ecx
	mov	BYTE PTR [ecx], bl
$LN28@DES_xcbc_e:
	dec	ecx
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [ecx], al
$LN29@DES_xcbc_e:
	dec	ecx
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ecx], al
$LN30@DES_xcbc_e:
	dec	ecx
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [ecx], al
$LN31@DES_xcbc_e:
	mov	BYTE PTR [ecx-1], dl
$LN10@DES_xcbc_e:
; Line 205
	mov	ecx, DWORD PTR _tin0$4$[esp+40]
; Line 206
	mov	edx, DWORD PTR _tin1$4$[esp+40]
$LN23@DES_xcbc_e:
; Line 210
	mov	eax, DWORD PTR _ivec$[esp+40]
	pop	edi
	pop	esi
	mov	BYTE PTR [eax], cl
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [ebp], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ebp+1], al
; Line 211
	mov	eax, edx
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [ebp+2], cl
	mov	BYTE PTR [ebp+3], dl
	shr	eax, 8
	mov	BYTE PTR [ebp+4], al
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [ebp+5], al
	shr	edx, 24					; 00000018H
	mov	BYTE PTR [ebp+6], dl
	pop	ebp
	pop	ebx
; Line 216
	add	esp, 28					; 0000001cH
	ret	0
	npad	1
$LN44@DES_xcbc_e:
	DD	$LN22@DES_xcbc_e
	DD	$LN21@DES_xcbc_e
	DD	$LN20@DES_xcbc_e
	DD	$LN19@DES_xcbc_e
	DD	$LN18@DES_xcbc_e
	DD	$LN17@DES_xcbc_e
	DD	$LN16@DES_xcbc_e
	DD	$LN15@DES_xcbc_e
$LN45@DES_xcbc_e:
	DD	$LN31@DES_xcbc_e
	DD	$LN30@DES_xcbc_e
	DD	$LN29@DES_xcbc_e
	DD	$LN28@DES_xcbc_e
	DD	$LN27@DES_xcbc_e
	DD	$LN26@DES_xcbc_e
	DD	$LN25@DES_xcbc_e
	DD	$LN24@DES_xcbc_e
_DES_xcbc_encrypt ENDP
_TEXT	ENDS
END

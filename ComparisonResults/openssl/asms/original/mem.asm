; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

EXTRN	_malloc:PROC
EXTRN	_free:PROC
EXTRN	_realloc:PROC
_BSS	SEGMENT
_malloc_debug_func DD 01H DUP (?)
_realloc_debug_func DD 01H DUP (?)
_free_debug_func DD 01H DUP (?)
_set_debug_options_func DD 01H DUP (?)
_get_debug_options_func DD 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_allow_customize DD 01H
_allow_customize_debug DD 01H
_malloc_func DD	FLAT:_malloc
_malloc_ex_func DD FLAT:_default_malloc_ex
_realloc_func DD FLAT:_realloc
_realloc_ex_func DD FLAT:_default_realloc_ex
_free_func DD	FLAT:_free
_malloc_locked_func DD FLAT:_malloc
_malloc_locked_ex_func DD FLAT:_default_malloc_locked_ex
_free_locked_func DD FLAT:_free
_DATA	ENDS
PUBLIC	_CRYPTO_set_mem_functions
PUBLIC	_CRYPTO_set_locked_mem_functions
PUBLIC	_CRYPTO_set_mem_ex_functions
PUBLIC	_CRYPTO_set_locked_mem_ex_functions
PUBLIC	_CRYPTO_set_mem_debug_functions
PUBLIC	_CRYPTO_get_mem_functions
PUBLIC	_CRYPTO_get_locked_mem_functions
PUBLIC	_CRYPTO_get_mem_ex_functions
PUBLIC	_CRYPTO_get_locked_mem_ex_functions
PUBLIC	_CRYPTO_get_mem_debug_functions
PUBLIC	_CRYPTO_malloc_locked
PUBLIC	_CRYPTO_free_locked
PUBLIC	_CRYPTO_malloc
PUBLIC	_CRYPTO_strdup
PUBLIC	_CRYPTO_free
PUBLIC	_CRYPTO_realloc
PUBLIC	_CRYPTO_realloc_clean
PUBLIC	_CRYPTO_remalloc
PUBLIC	_CRYPTO_set_mem_debug_options
PUBLIC	_CRYPTO_get_mem_debug_options
PUBLIC	??_C@_0P@FIAMPLLC@?4?2crypto?2mem?4c?$AA@	; `string'
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_OPENSSL_init:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0P@FIAMPLLC@?4?2crypto?2mem?4c?$AA@
CONST	SEGMENT
??_C@_0P@FIAMPLLC@?4?2crypto?2mem?4c?$AA@ DB '.\crypto\mem.c', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _default_malloc_locked_ex
_TEXT	SEGMENT
_num$ = 8						; size = 4
_file$ = 12						; size = 4
_line$ = 16						; size = 4
_default_malloc_locked_ex PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 100
	push	DWORD PTR _num$[esp-4]
	call	DWORD PTR _malloc_locked_func
	add	esp, 4
; Line 101
	ret	0
_default_malloc_locked_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _default_realloc_ex
_TEXT	SEGMENT
_str$ = 8						; size = 4
_num$ = 12						; size = 4
_file$ = 16						; size = 4
_line$ = 20						; size = 4
_default_realloc_ex PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 89
	push	DWORD PTR _num$[esp-4]
	push	DWORD PTR _str$[esp]
	call	DWORD PTR _realloc_func
	add	esp, 8
; Line 90
	ret	0
_default_realloc_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _default_malloc_ex
_TEXT	SEGMENT
_num$ = 8						; size = 4
_file$ = 12						; size = 4
_line$ = 16						; size = 4
_default_malloc_ex PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 79
	push	DWORD PTR _num$[esp-4]
	call	DWORD PTR _malloc_func
	add	esp, 4
; Line 80
	ret	0
_default_malloc_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_mem_debug_options
_TEXT	SEGMENT
_CRYPTO_get_mem_debug_options PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 463
	mov	eax, DWORD PTR _get_debug_options_func
	test	eax, eax
	je	SHORT $LN2@CRYPTO_get
; Line 464
	jmp	eax
$LN2@CRYPTO_get:
; Line 465
	xor	eax, eax
; Line 466
	ret	0
_CRYPTO_get_mem_debug_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_mem_debug_options
_TEXT	SEGMENT
_bits$ = 8						; size = 4
_CRYPTO_set_mem_debug_options PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 457
	mov	eax, DWORD PTR _set_debug_options_func
	test	eax, eax
	je	SHORT $LN2@CRYPTO_set
; Line 458
	jmp	eax
$LN2@CRYPTO_set:
; Line 459
	ret	0
_CRYPTO_set_mem_debug_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_remalloc
_TEXT	SEGMENT
_a$ = 8							; size = 4
_num$ = 12						; size = 4
_file$ = 16						; size = 4
_line$ = 20						; size = 4
_CRYPTO_remalloc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 448
	push	esi
; Line 449
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	je	SHORT $LN6@CRYPTO_rem
; Line 437
	mov	eax, DWORD PTR _free_debug_func
	test	eax, eax
	je	SHORT $LN5@CRYPTO_rem
; Line 438
	push	0
	push	esi
	call	eax
	add	esp, 8
$LN5@CRYPTO_rem:
; Line 442
	push	esi
	call	DWORD PTR _free_func
; Line 443
	mov	eax, DWORD PTR _free_debug_func
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@CRYPTO_rem
; Line 444
	push	1
	push	0
	call	eax
	add	esp, 8
$LN6@CRYPTO_rem:
; Line 451
	push	451					; 000001c3H
	push	OFFSET ??_C@_0P@FIAMPLLC@?4?2crypto?2mem?4c?$AA@
	push	DWORD PTR _num$[esp+8]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	pop	esi
; Line 453
	ret	0
_CRYPTO_remalloc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_realloc_clean
_TEXT	SEGMENT
_str$ = 8						; size = 4
_old_len$ = 12						; size = 4
_num$ = 16						; size = 4
_file$ = 20						; size = 4
_line$ = 24						; size = 4
_CRYPTO_realloc_clean PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 400
	push	esi
; Line 403
	mov	esi, DWORD PTR _str$[esp]
	test	esi, esi
	jne	SHORT $LN2@CRYPTO_rea
; Line 404
	push	DWORD PTR _line$[esp]
	push	DWORD PTR _file$[esp+4]
	push	DWORD PTR _num$[esp+8]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	pop	esi
; Line 433
	ret	0
$LN2@CRYPTO_rea:
	push	edi
; Line 406
	mov	edi, DWORD PTR _num$[esp+4]
	test	edi, edi
	jg	SHORT $LN3@CRYPTO_rea
; Line 407
	pop	edi
	xor	eax, eax
	pop	esi
; Line 433
	ret	0
$LN3@CRYPTO_rea:
	push	ebp
; Line 413
	mov	ebp, DWORD PTR _old_len$[esp+8]
	cmp	edi, ebp
	jge	SHORT $LN4@CRYPTO_rea
; Line 414
	pop	ebp
	pop	edi
	xor	eax, eax
	pop	esi
; Line 433
	ret	0
$LN4@CRYPTO_rea:
; Line 416
	mov	ecx, DWORD PTR _realloc_debug_func
	mov	eax, DWORD PTR _file$[esp+8]
	push	ebx
	mov	ebx, DWORD PTR _line$[esp+12]
	test	ecx, ecx
	je	SHORT $LN5@CRYPTO_rea
; Line 417
	push	0
	push	ebx
	push	eax
	push	edi
	push	0
	push	esi
	call	ecx
	mov	eax, DWORD PTR _file$[esp+36]
	add	esp, 24					; 00000018H
$LN5@CRYPTO_rea:
; Line 418
	push	ebx
	push	eax
	push	edi
	call	DWORD PTR _malloc_ex_func
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 419
	test	ebx, ebx
	je	SHORT $LN6@CRYPTO_rea
; Line 420
	push	ebp
	push	esi
	push	ebx
	call	_memcpy
; Line 421
	push	ebp
	push	esi
	call	_OPENSSL_cleanse
; Line 422
	push	esi
	call	DWORD PTR _free_func
	add	esp, 24					; 00000018H
$LN6@CRYPTO_rea:
; Line 429
	mov	eax, DWORD PTR _realloc_debug_func
	test	eax, eax
	je	SHORT $LN7@CRYPTO_rea
; Line 430
	push	1
	push	DWORD PTR _line$[esp+16]
	push	DWORD PTR _file$[esp+20]
	push	edi
	push	ebx
	push	esi
	call	eax
	add	esp, 24					; 00000018H
$LN7@CRYPTO_rea:
; Line 432
	mov	eax, ebx
	pop	ebx
	pop	ebp
	pop	edi
	pop	esi
; Line 433
	ret	0
_CRYPTO_realloc_clean ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_realloc
_TEXT	SEGMENT
_ret$1$ = 8						; size = 4
_str$ = 8						; size = 4
_num$ = 12						; size = 4
_file$ = 16						; size = 4
_line$ = 20						; size = 4
_CRYPTO_realloc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 376
	push	esi
; Line 379
	mov	esi, DWORD PTR _str$[esp]
	test	esi, esi
	jne	SHORT $LN2@CRYPTO_rea
; Line 380
	push	DWORD PTR _line$[esp]
	push	DWORD PTR _file$[esp+4]
	push	DWORD PTR _num$[esp+8]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	pop	esi
; Line 396
	ret	0
$LN2@CRYPTO_rea:
	push	edi
; Line 382
	mov	edi, DWORD PTR _num$[esp+4]
	test	edi, edi
	jg	SHORT $LN3@CRYPTO_rea
; Line 383
	pop	edi
	xor	eax, eax
	pop	esi
; Line 396
	ret	0
$LN3@CRYPTO_rea:
; Line 385
	mov	eax, DWORD PTR _realloc_debug_func
	push	ebx
	mov	ebx, DWORD PTR _line$[esp+8]
	push	ebp
	mov	ebp, DWORD PTR _file$[esp+12]
	test	eax, eax
	je	SHORT $LN4@CRYPTO_rea
; Line 386
	push	0
	push	ebx
	push	ebp
	push	edi
	push	0
	push	esi
	call	eax
	add	esp, 24					; 00000018H
$LN4@CRYPTO_rea:
; Line 387
	push	ebx
	push	ebp
	push	edi
	push	esi
	call	DWORD PTR _realloc_ex_func
; Line 392
	mov	ecx, DWORD PTR _realloc_debug_func
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ret$1$[esp+12], eax
	test	ecx, ecx
	je	SHORT $LN5@CRYPTO_rea
; Line 393
	push	1
	push	ebx
	push	ebp
	push	edi
	push	eax
	push	esi
	call	ecx
	mov	eax, DWORD PTR _ret$1$[esp+36]
	add	esp, 24					; 00000018H
$LN5@CRYPTO_rea:
; Line 396
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
	ret	0
_CRYPTO_realloc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_free
_TEXT	SEGMENT
_str$ = 8						; size = 4
_CRYPTO_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 437
	mov	eax, DWORD PTR _free_debug_func
	test	eax, eax
	je	SHORT $LN2@CRYPTO_fre
; Line 438
	push	0
	push	DWORD PTR _str$[esp]
	call	eax
	add	esp, 8
$LN2@CRYPTO_fre:
; Line 442
	push	DWORD PTR _str$[esp-4]
	call	DWORD PTR _free_func
; Line 443
	mov	eax, DWORD PTR _free_debug_func
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@CRYPTO_fre
; Line 444
	push	1
	push	0
	call	eax
	add	esp, 8
$LN3@CRYPTO_fre:
; Line 445
	ret	0
_CRYPTO_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_strdup
_TEXT	SEGMENT
_str$ = 8						; size = 4
_file$ = 12						; size = 4
_line$ = 16						; size = 4
_CRYPTO_strdup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 365
	push	esi
; Line 366
	mov	esi, DWORD PTR _str$[esp]
	mov	ecx, esi
	lea	edx, DWORD PTR [ecx+1]
	npad	6
$LL8@CRYPTO_str:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL8@CRYPTO_str
	push	DWORD PTR _line$[esp]
	sub	ecx, edx
	push	DWORD PTR _file$[esp+4]
	lea	eax, DWORD PTR [ecx+1]
	push	eax
	call	_CRYPTO_malloc
	mov	edx, eax
	add	esp, 12					; 0000000cH
; Line 368
	test	edx, edx
	jne	SHORT $LN2@CRYPTO_str
	pop	esi
; Line 373
	ret	0
$LN2@CRYPTO_str:
; Line 371
	mov	ecx, edx
	sub	ecx, esi
	npad	7
$LL4@CRYPTO_str:
	mov	al, BYTE PTR [esi]
	lea	esi, DWORD PTR [esi+1]
	mov	BYTE PTR [ecx+esi-1], al
	test	al, al
	jne	SHORT $LL4@CRYPTO_str
; Line 372
	mov	eax, edx
	pop	esi
; Line 373
	ret	0
_CRYPTO_strdup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_malloc
_TEXT	SEGMENT
_num$ = 8						; size = 4
_file$ = 12						; size = 4
_line$ = 16						; size = 4
_CRYPTO_malloc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 329
	push	esi
; Line 332
	mov	esi, DWORD PTR _num$[esp]
	test	esi, esi
	jg	SHORT $LN2@CRYPTO_mal
; Line 333
	xor	eax, eax
	pop	esi
; Line 362
	ret	0
$LN2@CRYPTO_mal:
; Line 337
	mov	eax, DWORD PTR _malloc_debug_func
	mov	DWORD PTR _allow_customize, 0
	push	ebx
	mov	ebx, DWORD PTR _file$[esp+4]
	push	ebp
	push	edi
	mov	edi, DWORD PTR _line$[esp+12]
	test	eax, eax
	je	SHORT $LN4@CRYPTO_mal
; Line 340
	push	0
	push	edi
	push	ebx
	push	esi
	push	0
	mov	DWORD PTR _allow_customize_debug, 0
	call	eax
	add	esp, 20					; 00000014H
$LN4@CRYPTO_mal:
; Line 342
	push	edi
	push	ebx
	push	esi
	call	DWORD PTR _malloc_ex_func
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 346
	mov	eax, DWORD PTR _malloc_debug_func
	test	eax, eax
	je	SHORT $LN6@CRYPTO_mal
; Line 347
	push	1
	push	edi
	push	ebx
	push	esi
	push	ebp
	call	eax
	add	esp, 20					; 00000014H
$LN6@CRYPTO_mal:
; Line 361
	pop	edi
	mov	eax, ebp
	pop	ebp
	pop	ebx
	pop	esi
; Line 362
	ret	0
_CRYPTO_malloc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_free_locked
_TEXT	SEGMENT
_str$ = 8						; size = 4
_CRYPTO_free_locked PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 318
	mov	eax, DWORD PTR _free_debug_func
	test	eax, eax
	je	SHORT $LN2@CRYPTO_fre
; Line 319
	push	0
	push	DWORD PTR _str$[esp]
	call	eax
	add	esp, 8
$LN2@CRYPTO_fre:
; Line 323
	push	DWORD PTR _str$[esp-4]
	call	DWORD PTR _free_locked_func
; Line 324
	mov	eax, DWORD PTR _free_debug_func
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@CRYPTO_fre
; Line 325
	push	1
	push	0
	call	eax
	add	esp, 8
$LN3@CRYPTO_fre:
; Line 326
	ret	0
_CRYPTO_free_locked ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_malloc_locked
_TEXT	SEGMENT
_num$ = 8						; size = 4
_file$ = 12						; size = 4
_line$ = 16						; size = 4
_CRYPTO_malloc_locked PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 281
	push	esi
; Line 284
	mov	esi, DWORD PTR _num$[esp]
	test	esi, esi
	jg	SHORT $LN2@CRYPTO_mal
; Line 285
	xor	eax, eax
	pop	esi
; Line 314
	ret	0
$LN2@CRYPTO_mal:
; Line 289
	mov	eax, DWORD PTR _malloc_debug_func
	mov	DWORD PTR _allow_customize, 0
	push	ebx
	mov	ebx, DWORD PTR _file$[esp+4]
	push	ebp
	push	edi
	mov	edi, DWORD PTR _line$[esp+12]
	test	eax, eax
	je	SHORT $LN4@CRYPTO_mal
; Line 292
	push	0
	push	edi
	push	ebx
	push	esi
	push	0
	mov	DWORD PTR _allow_customize_debug, 0
	call	eax
	add	esp, 20					; 00000014H
$LN4@CRYPTO_mal:
; Line 294
	push	edi
	push	ebx
	push	esi
	call	DWORD PTR _malloc_locked_ex_func
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 298
	mov	eax, DWORD PTR _malloc_debug_func
	test	eax, eax
	je	SHORT $LN6@CRYPTO_mal
; Line 299
	push	1
	push	edi
	push	ebx
	push	esi
	push	ebp
	call	eax
	add	esp, 20					; 00000014H
$LN6@CRYPTO_mal:
; Line 313
	pop	edi
	mov	eax, ebp
	pop	ebp
	pop	ebx
	pop	esi
; Line 314
	ret	0
_CRYPTO_malloc_locked ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_mem_debug_functions
_TEXT	SEGMENT
_m$ = 8							; size = 4
_r$ = 12						; size = 4
_f$ = 16						; size = 4
_so$ = 20						; size = 4
_go$ = 24						; size = 4
_CRYPTO_get_mem_debug_functions PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 268
	mov	ecx, DWORD PTR _m$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@CRYPTO_get
; Line 269
	mov	eax, DWORD PTR _malloc_debug_func
	mov	DWORD PTR [ecx], eax
$LN2@CRYPTO_get:
; Line 270
	mov	ecx, DWORD PTR _r$[esp-4]
	test	ecx, ecx
	je	SHORT $LN3@CRYPTO_get
; Line 271
	mov	eax, DWORD PTR _realloc_debug_func
	mov	DWORD PTR [ecx], eax
$LN3@CRYPTO_get:
; Line 272
	mov	ecx, DWORD PTR _f$[esp-4]
	test	ecx, ecx
	je	SHORT $LN4@CRYPTO_get
; Line 273
	mov	eax, DWORD PTR _free_debug_func
	mov	DWORD PTR [ecx], eax
$LN4@CRYPTO_get:
; Line 274
	mov	ecx, DWORD PTR _so$[esp-4]
	test	ecx, ecx
	je	SHORT $LN5@CRYPTO_get
; Line 275
	mov	eax, DWORD PTR _set_debug_options_func
	mov	DWORD PTR [ecx], eax
$LN5@CRYPTO_get:
; Line 276
	mov	ecx, DWORD PTR _go$[esp-4]
	test	ecx, ecx
	je	SHORT $LN6@CRYPTO_get
; Line 277
	mov	eax, DWORD PTR _get_debug_options_func
	mov	DWORD PTR [ecx], eax
$LN6@CRYPTO_get:
; Line 278
	ret	0
_CRYPTO_get_mem_debug_functions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_locked_mem_ex_functions
_TEXT	SEGMENT
_m$ = 8							; size = 4
_f$ = 12						; size = 4
_CRYPTO_get_locked_mem_ex_functions PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 254
	mov	edx, DWORD PTR _m$[esp-4]
	test	edx, edx
	je	SHORT $LN2@CRYPTO_get
; Line 255
	mov	eax, DWORD PTR _malloc_locked_ex_func
	xor	ecx, ecx
	cmp	eax, OFFSET _default_malloc_locked_ex
	cmovne	ecx, eax
	mov	DWORD PTR [edx], ecx
$LN2@CRYPTO_get:
; Line 257
	mov	ecx, DWORD PTR _f$[esp-4]
	test	ecx, ecx
	je	SHORT $LN3@CRYPTO_get
; Line 258
	mov	eax, DWORD PTR _free_locked_func
	mov	DWORD PTR [ecx], eax
$LN3@CRYPTO_get:
; Line 259
	ret	0
_CRYPTO_get_locked_mem_ex_functions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_mem_ex_functions
_TEXT	SEGMENT
_m$ = 8							; size = 4
_r$ = 12						; size = 4
_f$ = 16						; size = 4
_CRYPTO_get_mem_ex_functions PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 232
	mov	edx, DWORD PTR _m$[esp-4]
	test	edx, edx
	je	SHORT $LN2@CRYPTO_get
; Line 233
	mov	eax, DWORD PTR _malloc_ex_func
	xor	ecx, ecx
	cmp	eax, OFFSET _default_malloc_ex
	cmovne	ecx, eax
	mov	DWORD PTR [edx], ecx
$LN2@CRYPTO_get:
; Line 234
	mov	edx, DWORD PTR _r$[esp-4]
	test	edx, edx
	je	SHORT $LN3@CRYPTO_get
; Line 235
	mov	eax, DWORD PTR _realloc_ex_func
	xor	ecx, ecx
	cmp	eax, OFFSET _default_realloc_ex
	cmovne	ecx, eax
	mov	DWORD PTR [edx], ecx
$LN3@CRYPTO_get:
; Line 236
	mov	ecx, DWORD PTR _f$[esp-4]
	test	ecx, ecx
	je	SHORT $LN4@CRYPTO_get
; Line 237
	mov	eax, DWORD PTR _free_func
	mov	DWORD PTR [ecx], eax
$LN4@CRYPTO_get:
; Line 238
	ret	0
_CRYPTO_get_mem_ex_functions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_locked_mem_functions
_TEXT	SEGMENT
_m$ = 8							; size = 4
_f$ = 12						; size = 4
_CRYPTO_get_locked_mem_functions PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 243
	mov	ecx, DWORD PTR _m$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@CRYPTO_get
; Line 244
	xor	eax, eax
	cmp	DWORD PTR _malloc_locked_ex_func, OFFSET _default_malloc_locked_ex
	cmove	eax, DWORD PTR _malloc_locked_func
	mov	DWORD PTR [ecx], eax
$LN2@CRYPTO_get:
; Line 246
	mov	ecx, DWORD PTR _f$[esp-4]
	test	ecx, ecx
	je	SHORT $LN3@CRYPTO_get
; Line 247
	mov	eax, DWORD PTR _free_locked_func
	mov	DWORD PTR [ecx], eax
$LN3@CRYPTO_get:
; Line 248
	ret	0
_CRYPTO_get_locked_mem_functions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_mem_functions
_TEXT	SEGMENT
_m$ = 8							; size = 4
_r$ = 12						; size = 4
_f$ = 16						; size = 4
_CRYPTO_get_mem_functions PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 220
	mov	ecx, DWORD PTR _m$[esp-4]
	test	ecx, ecx
	je	SHORT $LN2@CRYPTO_get
; Line 221
	xor	eax, eax
	cmp	DWORD PTR _malloc_ex_func, OFFSET _default_malloc_ex
	cmove	eax, DWORD PTR _malloc_func
	mov	DWORD PTR [ecx], eax
$LN2@CRYPTO_get:
; Line 222
	mov	ecx, DWORD PTR _r$[esp-4]
	test	ecx, ecx
	je	SHORT $LN3@CRYPTO_get
; Line 223
	xor	eax, eax
	cmp	DWORD PTR _realloc_ex_func, OFFSET _default_realloc_ex
	cmove	eax, DWORD PTR _realloc_func
	mov	DWORD PTR [ecx], eax
$LN3@CRYPTO_get:
; Line 224
	mov	ecx, DWORD PTR _f$[esp-4]
	test	ecx, ecx
	je	SHORT $LN4@CRYPTO_get
; Line 225
	mov	eax, DWORD PTR _free_func
	mov	DWORD PTR [ecx], eax
$LN4@CRYPTO_get:
; Line 226
	ret	0
_CRYPTO_get_mem_functions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_mem_debug_functions
_TEXT	SEGMENT
_m$ = 8							; size = 4
_r$ = 12						; size = 4
_f$ = 16						; size = 4
_so$ = 20						; size = 4
_go$ = 24						; size = 4
_CRYPTO_set_mem_debug_functions PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 205
	cmp	DWORD PTR _allow_customize_debug, 0
	jne	SHORT $LN2@CRYPTO_set
; Line 206
	xor	eax, eax
; Line 214
	ret	0
$LN2@CRYPTO_set:
; Line 207
	call	_OPENSSL_init
; Line 208
	mov	eax, DWORD PTR _m$[esp-4]
	mov	DWORD PTR _malloc_debug_func, eax
; Line 209
	mov	eax, DWORD PTR _r$[esp-4]
	mov	DWORD PTR _realloc_debug_func, eax
; Line 210
	mov	eax, DWORD PTR _f$[esp-4]
	mov	DWORD PTR _free_debug_func, eax
; Line 211
	mov	eax, DWORD PTR _so$[esp-4]
	mov	DWORD PTR _set_debug_options_func, eax
; Line 212
	mov	eax, DWORD PTR _go$[esp-4]
	mov	DWORD PTR _get_debug_options_func, eax
; Line 213
	mov	eax, 1
; Line 214
	ret	0
_CRYPTO_set_mem_debug_functions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_locked_mem_ex_functions
_TEXT	SEGMENT
_m$ = 8							; size = 4
_f$ = 12						; size = 4
_CRYPTO_set_locked_mem_ex_functions PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 188
	cmp	DWORD PTR _allow_customize, 0
	je	SHORT $LN4@CRYPTO_set
; Line 190
	mov	eax, DWORD PTR _m$[esp-4]
	test	eax, eax
	je	SHORT $LN4@CRYPTO_set
	mov	ecx, DWORD PTR _f$[esp-4]
	test	ecx, ecx
	je	SHORT $LN4@CRYPTO_set
; Line 193
	mov	DWORD PTR _malloc_locked_ex_func, eax
; Line 195
	mov	eax, 1
	mov	DWORD PTR _malloc_locked_func, 0
	mov	DWORD PTR _free_func, ecx
; Line 196
	ret	0
$LN4@CRYPTO_set:
; Line 191
	xor	eax, eax
; Line 196
	ret	0
_CRYPTO_set_locked_mem_ex_functions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_mem_ex_functions
_TEXT	SEGMENT
_m$ = 8							; size = 4
_r$ = 12						; size = 4
_f$ = 16						; size = 4
_CRYPTO_set_mem_ex_functions PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 158
	cmp	DWORD PTR _allow_customize, 0
	je	SHORT $LN4@CRYPTO_set
; Line 160
	mov	eax, DWORD PTR _m$[esp-4]
	test	eax, eax
	je	SHORT $LN4@CRYPTO_set
	mov	edx, DWORD PTR _r$[esp-4]
	test	edx, edx
	je	SHORT $LN4@CRYPTO_set
	mov	ecx, DWORD PTR _f$[esp-4]
	test	ecx, ecx
	je	SHORT $LN4@CRYPTO_set
; Line 163
	mov	DWORD PTR _malloc_ex_func, eax
; Line 168
	mov	DWORD PTR _malloc_locked_ex_func, eax
; Line 170
	mov	eax, 1
	mov	DWORD PTR _malloc_func, 0
	mov	DWORD PTR _realloc_func, 0
	mov	DWORD PTR _realloc_ex_func, edx
	mov	DWORD PTR _free_func, ecx
	mov	DWORD PTR _malloc_locked_func, 0
	mov	DWORD PTR _free_locked_func, ecx
; Line 171
	ret	0
$LN4@CRYPTO_set:
; Line 161
	xor	eax, eax
; Line 171
	ret	0
_CRYPTO_set_mem_ex_functions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_locked_mem_functions
_TEXT	SEGMENT
_m$ = 8							; size = 4
_f$ = 12						; size = 4
_CRYPTO_set_locked_mem_functions PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 175
	cmp	DWORD PTR _allow_customize, 0
	je	SHORT $LN4@CRYPTO_set
; Line 177
	mov	eax, DWORD PTR _m$[esp-4]
	test	eax, eax
	je	SHORT $LN4@CRYPTO_set
	mov	ecx, DWORD PTR _f$[esp-4]
	test	ecx, ecx
	je	SHORT $LN4@CRYPTO_set
; Line 179
	mov	DWORD PTR _malloc_locked_func, eax
; Line 182
	mov	eax, 1
	mov	DWORD PTR _malloc_locked_ex_func, OFFSET _default_malloc_locked_ex
	mov	DWORD PTR _free_locked_func, ecx
; Line 183
	ret	0
$LN4@CRYPTO_set:
; Line 178
	xor	eax, eax
; Line 183
	ret	0
_CRYPTO_set_locked_mem_functions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_mem_functions
_TEXT	SEGMENT
_m$ = 8							; size = 4
_r$ = 12						; size = 4
_f$ = 16						; size = 4
_CRYPTO_set_mem_functions PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\mem.c
; Line 138
	call	_OPENSSL_init
; Line 139
	cmp	DWORD PTR _allow_customize, 0
	je	SHORT $LN4@CRYPTO_set
; Line 141
	mov	eax, DWORD PTR _m$[esp-4]
	test	eax, eax
	je	SHORT $LN4@CRYPTO_set
	mov	edx, DWORD PTR _r$[esp-4]
	test	edx, edx
	je	SHORT $LN4@CRYPTO_set
	mov	ecx, DWORD PTR _f$[esp-4]
	test	ecx, ecx
	je	SHORT $LN4@CRYPTO_set
; Line 143
	mov	DWORD PTR _malloc_func, eax
; Line 148
	mov	DWORD PTR _malloc_locked_func, eax
; Line 151
	mov	eax, 1
	mov	DWORD PTR _malloc_ex_func, OFFSET _default_malloc_ex
	mov	DWORD PTR _realloc_func, edx
	mov	DWORD PTR _realloc_ex_func, OFFSET _default_realloc_ex
	mov	DWORD PTR _free_func, ecx
	mov	DWORD PTR _malloc_locked_ex_func, OFFSET _default_malloc_locked_ex
	mov	DWORD PTR _free_locked_func, ecx
; Line 152
	ret	0
$LN4@CRYPTO_set:
; Line 142
	xor	eax, eax
; Line 152
	ret	0
_CRYPTO_set_mem_functions ENDP
_TEXT	ENDS
END

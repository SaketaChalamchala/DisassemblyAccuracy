; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_08EKOIICMC@BIO?5pair?$AA@			; `string'
;	COMDAT ??_C@_08EKOIICMC@BIO?5pair?$AA@
CONST	SEGMENT
??_C@_08EKOIICMC@BIO?5pair?$AA@ DB 'BIO pair', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
_methods_biop DD 0413H
	DD	FLAT:??_C@_08EKOIICMC@BIO?5pair?$AA@
	DD	FLAT:_bio_write
	DD	FLAT:_bio_read
	DD	FLAT:_bio_puts
	DD	00H
	DD	FLAT:_bio_ctrl
	DD	FLAT:_bio_new
	DD	FLAT:_bio_free
	DD	00H
_DATA	ENDS
PUBLIC	_BIO_ctrl_get_write_guarantee
PUBLIC	_BIO_ctrl_get_read_request
PUBLIC	_BIO_ctrl_reset_read_request
PUBLIC	_BIO_nread0
PUBLIC	_BIO_nread
PUBLIC	_BIO_nwrite0
PUBLIC	_BIO_nwrite
PUBLIC	_BIO_s_bio
PUBLIC	_BIO_new_bio_pair
PUBLIC	??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_set_flags:PROC
EXTRN	_BIO_clear_flags:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
CONST	SEGMENT
??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@ DB '.\crypto\bio\bss_'
	DB	'bio.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_nwrite
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_buf$ = 12						; size = 4
_num_$ = 16						; size = 4
_bio_nwrite PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 467
	push	esi
; Line 471
	mov	esi, DWORD PTR _num_$[esp]
	mov	eax, 2147483647				; 7fffffffH
	push	edi
; Line 476
	push	DWORD PTR _buf$[esp+4]
	mov	edi, DWORD PTR _bio$[esp+8]
	cmp	esi, eax
	push	edi
	cmova	esi, eax
	call	_bio_nwrite0
	add	esp, 8
; Line 477
	cmp	esi, eax
	cmovg	esi, eax
; Line 479
	test	esi, esi
	jle	SHORT $LN7@bio_nwrite
; Line 481
	mov	eax, DWORD PTR [edi+32]
; Line 483
	add	DWORD PTR [eax+8], esi
$LN7@bio_nwrite:
; Line 486
	pop	edi
	mov	eax, esi
	pop	esi
; Line 487
	ret	0
_bio_nwrite ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_nwrite0
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_buf$ = 12						; size = 4
_bio_nwrite0 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 419
	push	esi
; Line 424
	mov	esi, DWORD PTR _bio$[esp]
	push	15					; 0000000fH
	push	esi
	call	_BIO_clear_flags
	add	esp, 8
; Line 426
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN2@bio_nwrite
; Line 427
	xor	eax, eax
	pop	esi
; Line 464
	ret	0
$LN2@bio_nwrite:
; Line 429
	mov	ecx, DWORD PTR [esi+32]
; Line 435
	cmp	DWORD PTR [ecx+4], 0
	mov	DWORD PTR [ecx+24], 0
	je	SHORT $LN3@bio_nwrite
; Line 436
	push	436					; 000001b4H
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	124					; 0000007cH
	push	122					; 0000007aH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 437
	or	eax, -1
	pop	esi
; Line 464
	ret	0
$LN3@bio_nwrite:
; Line 442
	mov	eax, DWORD PTR [ecx+8]
	push	edi
	mov	edi, DWORD PTR [ecx+16]
	cmp	eax, edi
	jne	SHORT $LN4@bio_nwrite
; Line 443
	push	10					; 0000000aH
	push	esi
	call	_BIO_set_flags
	add	esp, 8
; Line 444
	or	eax, -1
	pop	edi
	pop	esi
; Line 464
	ret	0
$LN4@bio_nwrite:
; Line 448
	mov	edx, DWORD PTR [ecx+12]
	mov	esi, edi
	add	edx, eax
	sub	esi, eax
; Line 449
	cmp	edx, edi
	jb	SHORT $LN5@bio_nwrite
; Line 450
	sub	edx, edi
$LN5@bio_nwrite:
; Line 451
	lea	eax, DWORD PTR [edx+esi]
	cmp	eax, edi
	jbe	SHORT $LN6@bio_nwrite
; Line 457
	mov	esi, edi
	sub	esi, edx
$LN6@bio_nwrite:
; Line 459
	mov	eax, DWORD PTR _buf$[esp+4]
	test	eax, eax
	je	SHORT $LN7@bio_nwrite
; Line 460
	mov	ecx, DWORD PTR [ecx+20]
	add	ecx, edx
	mov	DWORD PTR [eax], ecx
$LN7@bio_nwrite:
; Line 463
	pop	edi
	mov	eax, esi
	pop	esi
; Line 464
	ret	0
_bio_nwrite0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_nread
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_buf$ = 12						; size = 4
_num_$ = 16						; size = 4
_bio_nread PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 311
	push	esi
; Line 315
	mov	esi, DWORD PTR _num_$[esp]
	mov	eax, 2147483647				; 7fffffffH
	push	edi
; Line 320
	push	DWORD PTR _buf$[esp+4]
	mov	edi, DWORD PTR _bio$[esp+8]
	cmp	esi, eax
	push	edi
	cmova	esi, eax
	call	_bio_nread0
	add	esp, 8
; Line 321
	cmp	esi, eax
	cmovg	esi, eax
; Line 323
	test	esi, esi
	jle	SHORT $LN7@bio_nread
; Line 327
	mov	eax, DWORD PTR [edi+32]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+32]
; Line 329
	sub	DWORD PTR [ecx+8], esi
; Line 330
	je	SHORT $LN6@bio_nread
; Line 331
	add	DWORD PTR [ecx+12], esi
	mov	eax, DWORD PTR [ecx+12]
; Line 333
	cmp	eax, DWORD PTR [ecx+16]
	jne	SHORT $LN7@bio_nread
$LN6@bio_nread:
; Line 336
	mov	DWORD PTR [ecx+12], 0
$LN7@bio_nread:
	pop	edi
; Line 338
	mov	eax, esi
	pop	esi
; Line 339
	ret	0
_bio_nread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_nread0
_TEXT	SEGMENT
_dummy$1 = 8						; size = 1
_bio$ = 8						; size = 4
_buf$ = 12						; size = 4
_bio_nread0 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 274
	push	esi
; Line 278
	mov	esi, DWORD PTR _bio$[esp]
	push	15					; 0000000fH
	push	esi
	call	_BIO_clear_flags
	add	esp, 8
; Line 280
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN2@bio_nread0
; Line 281
	xor	eax, eax
	pop	esi
; Line 308
	ret	0
$LN2@bio_nread0:
; Line 286
	mov	eax, DWORD PTR [esi+32]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+32]
; Line 292
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [ecx+24], 0
	test	edx, edx
	jne	SHORT $LN3@bio_nread0
; Line 296
	push	1
	lea	eax, DWORD PTR _dummy$1[esp+4]
	push	eax
	push	esi
	call	_bio_read
	add	esp, 12					; 0000000cH
	pop	esi
; Line 308
	ret	0
$LN3@bio_nread0:
; Line 300
	mov	esi, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR [esi+edx]
	cmp	DWORD PTR [ecx+16], eax
	jae	SHORT $LN4@bio_nread0
; Line 302
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, esi
$LN4@bio_nread0:
; Line 305
	mov	eax, DWORD PTR _buf$[esp]
	test	eax, eax
	je	SHORT $LN5@bio_nread0
; Line 306
	mov	ecx, DWORD PTR [ecx+20]
	add	ecx, esi
	mov	DWORD PTR [eax], ecx
$LN5@bio_nread0:
; Line 307
	mov	eax, edx
	pop	esi
; Line 308
	ret	0
_bio_nread0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_destroy_pair
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_bio_destroy_pair PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 731
	push	esi
; Line 732
	mov	esi, DWORD PTR _bio$[esp]
	mov	ecx, DWORD PTR [esi+32]
; Line 734
	test	ecx, ecx
	je	SHORT $LN3@bio_destro
; Line 735
	mov	edx, DWORD PTR [ecx]
; Line 737
	test	edx, edx
	je	SHORT $LN3@bio_destro
; Line 738
	mov	eax, DWORD PTR [edx+32]
; Line 743
	mov	DWORD PTR [eax], 0
; Line 744
	mov	DWORD PTR [edx+12], 0
; Line 746
	mov	DWORD PTR [eax+8], 0
; Line 747
	mov	DWORD PTR [eax+12], 0
; Line 749
	mov	DWORD PTR [ecx], 0
; Line 750
	mov	DWORD PTR [esi+12], 0
; Line 752
	mov	DWORD PTR [ecx+8], 0
; Line 753
	mov	DWORD PTR [ecx+12], 0
$LN3@bio_destro:
	pop	esi
; Line 756
	ret	0
_bio_destroy_pair ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_make_pair
_TEXT	SEGMENT
_bio1$ = 8						; size = 4
_bio2$ = 12						; size = 4
_bio_make_pair PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 683
	push	ebx
; Line 689
	mov	ebx, DWORD PTR _bio1$[esp]
	push	ebp
; Line 690
	mov	ebp, DWORD PTR _bio2$[esp+4]
	push	esi
	push	edi
	mov	edi, DWORD PTR [ebx+32]
	mov	esi, DWORD PTR [ebp+32]
; Line 692
	cmp	DWORD PTR [edi], 0
	jne	$LN3@bio_make_p
	cmp	DWORD PTR [esi], 0
	jne	$LN3@bio_make_p
; Line 697
	cmp	DWORD PTR [edi+20], 0
	jne	SHORT $LN4@bio_make_p
; Line 698
	push	698					; 000002baH
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	DWORD PTR [edi+16]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [edi+20], eax
; Line 699
	test	eax, eax
	jne	SHORT $LN5@bio_make_p
; Line 700
	push	700					; 000002bcH
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	65					; 00000041H
	push	121					; 00000079H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 728
	ret	0
$LN5@bio_make_p:
; Line 703
	mov	DWORD PTR [edi+8], 0
; Line 704
	mov	DWORD PTR [edi+12], 0
$LN4@bio_make_p:
; Line 707
	cmp	DWORD PTR [esi+20], 0
	jne	SHORT $LN6@bio_make_p
; Line 708
	push	708					; 000002c4H
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	DWORD PTR [esi+16]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+20], eax
; Line 709
	test	eax, eax
	jne	SHORT $LN7@bio_make_p
; Line 710
	push	710					; 000002c6H
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	65					; 00000041H
	push	121					; 00000079H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 728
	ret	0
$LN7@bio_make_p:
; Line 713
	mov	DWORD PTR [esi+8], 0
; Line 714
	mov	DWORD PTR [esi+12], 0
$LN6@bio_make_p:
; Line 717
	mov	DWORD PTR [edi], ebp
; Line 727
	mov	eax, 1
	mov	DWORD PTR [edi+4], 0
	mov	DWORD PTR [edi+24], 0
	mov	DWORD PTR [esi], ebx
	pop	edi
	mov	DWORD PTR [esi+4], 0
	mov	DWORD PTR [esi+24], 0
	mov	DWORD PTR [ebx+12], 1
	pop	esi
	mov	DWORD PTR [ebp+12], 1
	pop	ebp
	pop	ebx
; Line 728
	ret	0
$LN3@bio_make_p:
; Line 693
	push	693					; 000002b5H
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	123					; 0000007bH
	push	121					; 00000079H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 694
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 728
	ret	0
_bio_make_pair ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_puts
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_str$ = 12						; size = 4
_bio_puts PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 679
	mov	edx, DWORD PTR _str$[esp-4]
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
	npad	6
$LL3@bio_puts:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@bio_puts
	sub	eax, esi
	push	eax
	push	edx
	push	DWORD PTR _bio$[esp+8]
	call	_bio_write
	add	esp, 12					; 0000000cH
	pop	esi
; Line 680
	ret	0
_bio_puts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_ctrl
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_cmd$ = 12						; size = 4
_num$ = 16						; size = 4
_ptr$ = 20						; size = 4
_bio_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 496
	mov	eax, DWORD PTR _cmd$[esp-4]
	push	ebx
	mov	ebx, DWORD PTR _bio$[esp]
	dec	eax
	push	esi
	push	edi
	mov	edi, DWORD PTR [ebx+32]
	cmp	eax, 146				; 00000092H
	ja	SHORT $LN42@bio_ctrl
	movzx	eax, BYTE PTR $LN52@bio_ctrl[eax]
	jmp	DWORD PTR $LN56@bio_ctrl[eax*4]
$LN4@bio_ctrl:
; Line 500
	cmp	DWORD PTR [edi], 0
	je	SHORT $LN5@bio_ctrl
; Line 501
	push	501					; 000001f5H
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	123					; 0000007bH
; Line 504
	push	103					; 00000067H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN42@bio_ctrl:
; Line 672
	xor	esi, esi
$LN2@bio_ctrl:
	pop	edi
; Line 674
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN5@bio_ctrl:
; Line 503
	mov	esi, DWORD PTR _num$[esp+8]
	test	esi, esi
	jne	SHORT $LN7@bio_ctrl
; Line 504
	push	504					; 000001f8H
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	125					; 0000007dH
	push	103					; 00000067H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 674
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN7@bio_ctrl:
; Line 509
	cmp	DWORD PTR [edi+16], esi
	je	SHORT $LN9@bio_ctrl
; Line 510
	mov	eax, DWORD PTR [edi+20]
	test	eax, eax
	je	SHORT $LN10@bio_ctrl
; Line 511
	push	eax
	call	_CRYPTO_free
	add	esp, 4
; Line 512
	mov	DWORD PTR [edi+20], 0
$LN10@bio_ctrl:
; Line 514
	mov	DWORD PTR [edi+16], esi
$LN9@bio_ctrl:
; Line 516
	mov	esi, 1
	pop	edi
; Line 674
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN11@bio_ctrl:
; Line 521
	mov	esi, DWORD PTR [edi+16]
; Line 674
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN12@bio_ctrl:
; Line 528
	push	DWORD PTR _ptr$[esp+8]
	push	ebx
	call	_bio_make_pair
	add	esp, 8
	mov	esi, eax
	neg	esi
	sbb	esi, esi
	neg	esi
	pop	edi
; Line 674
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN15@bio_ctrl:
; Line 540
	push	ebx
	call	_bio_destroy_pair
	add	esp, 4
; Line 541
	mov	esi, 1
; Line 674
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN16@bio_ctrl:
; Line 549
	cmp	DWORD PTR [edi], 0
	je	$LN42@bio_ctrl
	cmp	DWORD PTR [edi+4], 0
	jne	$LN42@bio_ctrl
; Line 552
	mov	esi, DWORD PTR [edi+16]
	sub	esi, DWORD PTR [edi+8]
	pop	edi
; Line 674
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN20@bio_ctrl:
; Line 561
	mov	esi, DWORD PTR [edi+24]
; Line 674
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN21@bio_ctrl:
; Line 571
	mov	esi, 1
	mov	DWORD PTR [edi+24], 0
	pop	edi
; Line 674
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN22@bio_ctrl:
; Line 577
	mov	esi, 1
	mov	DWORD PTR [edi+4], 1
	pop	edi
; Line 674
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN23@bio_ctrl:
; Line 582
	push	DWORD PTR _ptr$[esp+8]
	push	ebx
	call	_bio_nread0
	add	esp, 8
	mov	esi, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN24@bio_ctrl:
; Line 587
	push	DWORD PTR _num$[esp+8]
	push	DWORD PTR _ptr$[esp+12]
	push	ebx
	call	_bio_nread
	add	esp, 12					; 0000000cH
	mov	esi, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN25@bio_ctrl:
; Line 592
	push	DWORD PTR _ptr$[esp+8]
	push	ebx
	call	_bio_nwrite0
	add	esp, 8
	mov	esi, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN26@bio_ctrl:
; Line 471
	mov	esi, DWORD PTR _num$[esp+8]
	mov	eax, 2147483647				; 7fffffffH
; Line 476
	push	DWORD PTR _ptr$[esp+8]
	cmp	esi, eax
	push	ebx
	cmova	esi, eax
	call	_bio_nwrite0
	add	esp, 8
; Line 477
	cmp	esi, eax
	cmovg	esi, eax
; Line 479
	test	esi, esi
	jle	$LN2@bio_ctrl
; Line 481
	mov	eax, DWORD PTR [ebx+32]
	pop	edi
; Line 483
	add	DWORD PTR [eax+8], esi
; Line 674
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN27@bio_ctrl:
; Line 603
	cmp	DWORD PTR [edi+20], 0
	je	$LN42@bio_ctrl
; Line 672
	xor	esi, esi
	mov	DWORD PTR [edi+8], 0
	mov	DWORD PTR [edi+12], 0
; Line 674
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN29@bio_ctrl:
; Line 611
	mov	esi, DWORD PTR [ebx+16]
; Line 674
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN30@bio_ctrl:
; Line 615
	mov	eax, DWORD PTR _num$[esp+8]
; Line 616
	mov	esi, 1
	mov	DWORD PTR [ebx+16], eax
; Line 674
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN31@bio_ctrl:
; Line 620
	mov	eax, DWORD PTR [edi]
	test	eax, eax
	je	$LN42@bio_ctrl
; Line 623
	mov	eax, DWORD PTR [eax+32]
	pop	edi
	mov	esi, DWORD PTR [eax+8]
; Line 674
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN34@bio_ctrl:
; Line 629
	cmp	DWORD PTR [edi+20], 0
	je	$LN42@bio_ctrl
; Line 630
	mov	esi, DWORD PTR [edi+8]
; Line 674
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN37@bio_ctrl:
; Line 647
	mov	eax, DWORD PTR _ptr$[esp+8]
; Line 650
	mov	esi, 1
	mov	ecx, DWORD PTR [eax+32]
	mov	eax, DWORD PTR [edi+16]
	pop	edi
	mov	DWORD PTR [ecx+16], eax
; Line 674
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN39@bio_ctrl:
; Line 661
	mov	eax, DWORD PTR _ptr$[esp+8]
	test	eax, eax
	je	$LN9@bio_ctrl
; Line 662
	mov	eax, DWORD PTR [eax+32]
; Line 665
	cmp	DWORD PTR [eax+8], 0
	jne	$LN42@bio_ctrl
	cmp	DWORD PTR [eax+4], 0
	je	$LN42@bio_ctrl
; Line 667
	mov	esi, 1
	pop	edi
; Line 674
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 675
	ret	0
$LN56@bio_ctrl:
	DD	$LN27@bio_ctrl
	DD	$LN39@bio_ctrl
	DD	$LN29@bio_ctrl
	DD	$LN30@bio_ctrl
	DD	$LN31@bio_ctrl
	DD	$LN9@bio_ctrl
	DD	$LN37@bio_ctrl
	DD	$LN34@bio_ctrl
	DD	$LN4@bio_ctrl
	DD	$LN11@bio_ctrl
	DD	$LN12@bio_ctrl
	DD	$LN15@bio_ctrl
	DD	$LN16@bio_ctrl
	DD	$LN20@bio_ctrl
	DD	$LN22@bio_ctrl
	DD	$LN23@bio_ctrl
	DD	$LN24@bio_ctrl
	DD	$LN25@bio_ctrl
	DD	$LN26@bio_ctrl
	DD	$LN21@bio_ctrl
	DD	$LN42@bio_ctrl
$LN52@bio_ctrl:
	DB	0
	DB	1
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	20					; 00000014H
	DB	8
	DB	9
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	19					; 00000013H
_bio_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_write
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_buf$ = 12						; size = 4
_num_$ = 16						; size = 4
_bio_write PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 342
	push	ebp
	push	esi
; Line 347
	mov	esi, DWORD PTR _bio$[esp+4]
	push	15					; 0000000fH
	push	esi
	call	_BIO_clear_flags
	add	esp, 8
; Line 349
	cmp	DWORD PTR [esi+12], 0
	je	$LN6@bio_write
	mov	ebp, DWORD PTR _buf$[esp+4]
	test	ebp, ebp
	je	$LN6@bio_write
	mov	eax, DWORD PTR _num_$[esp+4]
	test	eax, eax
	je	$LN6@bio_write
; Line 352
	push	edi
	mov	edi, DWORD PTR [esi+32]
; Line 358
	cmp	DWORD PTR [edi+4], 0
	mov	DWORD PTR [edi+24], 0
	je	SHORT $LN7@bio_write
; Line 360
	push	360					; 00000168H
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	124					; 0000007cH
	push	113					; 00000071H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 361
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebp
; Line 409
	ret	0
$LN7@bio_write:
; Line 366
	mov	edx, DWORD PTR [edi+8]
	mov	ecx, DWORD PTR [edi+16]
	cmp	edx, ecx
	jne	SHORT $LN8@bio_write
; Line 367
	push	10					; 0000000aH
	push	esi
	call	_BIO_set_flags
	add	esp, 8
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebp
; Line 409
	ret	0
$LN8@bio_write:
; Line 372
	sub	ecx, edx
	cmp	eax, ecx
	push	ebx
	cmova	eax, ecx
	mov	DWORD PTR _num_$[esp+12], eax
; Line 377
	mov	ebx, eax
	npad	3
$LL4@bio_write:
; Line 386
	mov	eax, DWORD PTR [edi+12]
	add	eax, DWORD PTR [edi+8]
; Line 387
	mov	edx, DWORD PTR [edi+16]
	cmp	eax, edx
	jb	SHORT $LN10@bio_write
; Line 388
	sub	eax, edx
$LN10@bio_write:
; Line 391
	lea	ecx, DWORD PTR [eax+ebx]
; Line 395
	mov	esi, edx
	sub	esi, eax
	cmp	ecx, edx
; Line 397
	mov	ecx, DWORD PTR [edi+20]
	cmovbe	esi, ebx
	add	ecx, eax
	push	esi
	push	ebp
	push	ecx
	call	_memcpy
; Line 399
	add	DWORD PTR [edi+8], esi
	add	esp, 12					; 0000000cH
; Line 404
	add	ebp, esi
	sub	ebx, esi
; Line 406
	jne	SHORT $LL4@bio_write
; Line 408
	mov	eax, DWORD PTR _num_$[esp+12]
	pop	ebx
	pop	edi
	pop	esi
	pop	ebp
; Line 409
	ret	0
$LN6@bio_write:
	pop	esi
; Line 350
	xor	eax, eax
	pop	ebp
; Line 409
	ret	0
_bio_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_read
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_buf$ = 12						; size = 4
_size_$ = 16						; size = 4
_bio_read PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 183
	push	edi
; Line 188
	mov	edi, DWORD PTR _bio$[esp]
	push	15					; 0000000fH
	push	edi
	call	_BIO_clear_flags
	add	esp, 8
; Line 190
	cmp	DWORD PTR [edi+12], 0
	jne	SHORT $LN5@bio_read
; Line 191
	xor	eax, eax
	pop	edi
; Line 260
	ret	0
$LN5@bio_read:
; Line 196
	mov	eax, DWORD PTR [edi+32]
	push	ebx
	push	ebp
; Line 202
	mov	ebp, DWORD PTR _buf$[esp+8]
	push	esi
	mov	esi, DWORD PTR [eax]
	mov	esi, DWORD PTR [esi+32]
	mov	DWORD PTR [esi+24], 0
	test	ebp, ebp
	je	$LN7@bio_read
	mov	ebx, DWORD PTR _size_$[esp+12]
	test	ebx, ebx
	je	$LN7@bio_read
; Line 205
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	jne	SHORT $LN10@bio_read
; Line 206
	cmp	DWORD PTR [esi+4], eax
	jne	SHORT $LN7@bio_read
; Line 209
	push	9
	push	edi
	call	_BIO_set_flags
; Line 210
	mov	eax, DWORD PTR [esi+16]
	add	esp, 8
	cmp	ebx, eax
	cmovbe	eax, ebx
	mov	DWORD PTR [esi+24], eax
; Line 217
	or	eax, -1
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi
; Line 260
	ret	0
$LN10@bio_read:
; Line 222
	cmp	eax, ebx
	cmovb	ebx, eax
	mov	DWORD PTR _size_$[esp+12], ebx
$LL4@bio_read:
; Line 234
	mov	eax, DWORD PTR [esi+12]
; Line 238
	mov	edi, DWORD PTR [esi+16]
	sub	edi, eax
	lea	ecx, DWORD PTR [eax+ebx]
; Line 241
	mov	eax, DWORD PTR [esi+20]
	cmp	ecx, DWORD PTR [esi+16]
	cmovbe	edi, ebx
	add	eax, DWORD PTR [esi+12]
	push	edi
	push	eax
	push	ebp
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 243
	sub	DWORD PTR [esi+8], edi
; Line 244
	je	SHORT $LN16@bio_read
; Line 245
	add	DWORD PTR [esi+12], edi
	mov	eax, DWORD PTR [esi+12]
; Line 247
	cmp	eax, DWORD PTR [esi+16]
	jne	SHORT $LN18@bio_read
; Line 248
	mov	DWORD PTR [esi+12], 0
$LN18@bio_read:
; Line 249
	add	ebp, edi
; Line 250
	jmp	SHORT $LN17@bio_read
$LN16@bio_read:
; Line 253
	mov	DWORD PTR [esi+12], 0
$LN17@bio_read:
; Line 255
	sub	ebx, edi
; Line 257
	jne	SHORT $LL4@bio_read
; Line 259
	mov	eax, DWORD PTR _size_$[esp+12]
	pop	esi
	pop	ebp
	pop	ebx
	pop	edi
; Line 260
	ret	0
$LN7@bio_read:
	pop	esi
	pop	ebp
	pop	ebx
; Line 203
	xor	eax, eax
	pop	edi
; Line 260
	ret	0
_bio_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_free
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_bio_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 164
	mov	eax, DWORD PTR _bio$[esp-4]
	test	eax, eax
	jne	SHORT $LN2@bio_free
; Line 180
	ret	0
$LN2@bio_free:
	push	esi
; Line 166
	mov	esi, DWORD PTR [eax+32]
; Line 170
	cmp	DWORD PTR [esi], 0
	je	SHORT $LN3@bio_free
; Line 171
	push	eax
	call	_bio_destroy_pair
	add	esp, 4
$LN3@bio_free:
; Line 173
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN4@bio_free
; Line 174
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN4@bio_free:
; Line 177
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 179
	mov	eax, 1
	pop	esi
; Line 180
	ret	0
_bio_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bio_new
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_bio_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 147
	push	147					; 00000093H
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	28					; 0000001cH
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 12					; 0000000cH
; Line 148
	test	ecx, ecx
	jne	SHORT $LN2@bio_new
; Line 158
	ret	0
$LN2@bio_new:
; Line 156
	mov	eax, DWORD PTR _bio$[esp-4]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR [ecx+16], 17408		; 00004400H
	mov	DWORD PTR [ecx+20], 0
	mov	DWORD PTR [eax+32], ecx
; Line 157
	mov	eax, 1
; Line 158
	ret	0
_bio_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new_bio_pair
_TEXT	SEGMENT
_bio1_p$ = 8						; size = 4
_writebuf1$ = 12					; size = 4
_bio2_p$ = 16						; size = 4
_writebuf2$ = 20					; size = 4
_BIO_new_bio_pair PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 761
	push	ebx
	push	esi
	push	edi
; Line 766
	push	OFFSET _methods_biop
	xor	esi, esi
	xor	ebx, ebx
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
; Line 767
	test	edi, edi
	je	$LN11@BIO_new_bi
; Line 769
	push	OFFSET _methods_biop
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
; Line 770
	test	esi, esi
	je	SHORT $LN17@BIO_new_bi
; Line 773
	mov	eax, DWORD PTR _writebuf1$[esp+8]
	test	eax, eax
	je	SHORT $LN5@BIO_new_bi
; Line 774
	push	ebx
	push	eax
	push	136					; 00000088H
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 775
	test	eax, eax
	je	SHORT $LN17@BIO_new_bi
$LN5@BIO_new_bi:
; Line 778
	mov	eax, DWORD PTR _writebuf2$[esp+8]
	test	eax, eax
	je	SHORT $LN7@BIO_new_bi
; Line 779
	push	0
	push	eax
	push	136					; 00000088H
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 780
	test	eax, eax
	je	SHORT $LN17@BIO_new_bi
$LN7@BIO_new_bi:
; Line 784
	push	esi
	push	0
	push	138					; 0000008aH
	push	edi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 785
	test	eax, eax
	je	SHORT $LN17@BIO_new_bi
; Line 801
	mov	ecx, DWORD PTR _bio1_p$[esp+8]
	mov	ebx, 1
; Line 803
	mov	eax, ebx
	mov	DWORD PTR [ecx], edi
	mov	ecx, DWORD PTR _bio2_p$[esp+8]
	pop	edi
	mov	DWORD PTR [ecx], esi
	pop	esi
	pop	ebx
; Line 804
	ret	0
$LN17@BIO_new_bi:
; Line 792
	push	edi
	call	_BIO_free
	add	esp, 4
; Line 793
	xor	edi, edi
; Line 795
	test	esi, esi
	je	SHORT $LN11@BIO_new_bi
; Line 796
	push	esi
	call	_BIO_free
	add	esp, 4
; Line 797
	xor	esi, esi
$LN11@BIO_new_bi:
; Line 801
	mov	ecx, DWORD PTR _bio1_p$[esp+8]
; Line 803
	mov	eax, ebx
	mov	DWORD PTR [ecx], edi
	mov	ecx, DWORD PTR _bio2_p$[esp+8]
	pop	edi
	mov	DWORD PTR [ecx], esi
	pop	esi
	pop	ebx
; Line 804
	ret	0
_BIO_new_bio_pair ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_s_bio
_TEXT	SEGMENT
_BIO_s_bio PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 122
	mov	eax, OFFSET _methods_biop
; Line 123
	ret	0
_BIO_s_bio ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_nwrite
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_buf$ = 12						; size = 4
_num$ = 16						; size = 4
_BIO_nwrite PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 874
	push	esi
; Line 877
	mov	esi, DWORD PTR _bio$[esp]
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN2@BIO_nwrite
; Line 878
	push	878					; 0000036eH
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	120					; 00000078H
	push	125					; 0000007dH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 879
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 886
	ret	0
$LN2@BIO_nwrite:
; Line 882
	push	DWORD PTR _buf$[esp]
	push	DWORD PTR _num$[esp+4]
	push	146					; 00000092H
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 883
	test	eax, eax
	jle	SHORT $LN1@BIO_nwrite
; Line 884
	add	DWORD PTR [esi+52], eax
$LN1@BIO_nwrite:
	pop	esi
; Line 886
	ret	0
_BIO_nwrite ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_nwrite0
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_buf$ = 12						; size = 4
_BIO_nwrite0 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 861
	mov	eax, DWORD PTR _bio$[esp-4]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@BIO_nwrite
; Line 862
	push	862					; 0000035eH
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	120					; 00000078H
	push	122					; 0000007aH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 863
	mov	eax, -2					; fffffffeH
; Line 871
	ret	0
$LN2@BIO_nwrite:
; Line 866
	push	DWORD PTR _buf$[esp-4]
	push	0
	push	145					; 00000091H
	push	eax
	call	_BIO_ctrl
; Line 867
	mov	ecx, 2147483647				; 7fffffffH
	add	esp, 16					; 00000010H
	cmp	eax, ecx
	cmovg	eax, ecx
; Line 871
	ret	0
_BIO_nwrite0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_nread
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_buf$ = 12						; size = 4
_num$ = 16						; size = 4
_BIO_nread PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 843
	push	esi
; Line 846
	mov	esi, DWORD PTR _bio$[esp]
	cmp	DWORD PTR [esi+12], 0
	jne	SHORT $LN2@BIO_nread
; Line 847
	push	847					; 0000034fH
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	120					; 00000078H
	push	123					; 0000007bH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 848
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 855
	ret	0
$LN2@BIO_nread:
; Line 851
	push	DWORD PTR _buf$[esp]
	push	DWORD PTR _num$[esp+4]
	push	144					; 00000090H
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 852
	test	eax, eax
	jle	SHORT $LN1@BIO_nread
; Line 853
	add	DWORD PTR [esi+48], eax
$LN1@BIO_nread:
	pop	esi
; Line 855
	ret	0
_BIO_nread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_nread0
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_buf$ = 12						; size = 4
_BIO_nread0 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 830
	mov	eax, DWORD PTR _bio$[esp-4]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@BIO_nread0
; Line 831
	push	831					; 0000033fH
	push	OFFSET ??_C@_0BH@BEKGBHJN@?4?2crypto?2bio?2bss_bio?4c?$AA@
	push	120					; 00000078H
	push	124					; 0000007cH
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 832
	mov	eax, -2					; fffffffeH
; Line 840
	ret	0
$LN2@BIO_nread0:
; Line 835
	push	DWORD PTR _buf$[esp-4]
	push	0
	push	143					; 0000008fH
	push	eax
	call	_BIO_ctrl
; Line 836
	mov	ecx, 2147483647				; 7fffffffH
	add	esp, 16					; 00000010H
	cmp	eax, ecx
	cmovg	eax, ecx
; Line 840
	ret	0
_BIO_nread0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_ctrl_reset_read_request
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_BIO_ctrl_reset_read_request PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 818
	push	0
	push	0
	push	147					; 00000093H
	push	DWORD PTR _bio$[esp+8]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 819
	ret	0
_BIO_ctrl_reset_read_request ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_ctrl_get_read_request
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_BIO_ctrl_get_read_request PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 813
	push	0
	push	0
	push	141					; 0000008dH
	push	DWORD PTR _bio$[esp+8]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 814
	ret	0
_BIO_ctrl_get_read_request ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_ctrl_get_write_guarantee
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_BIO_ctrl_get_write_guarantee PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_bio.c
; Line 808
	push	0
	push	0
	push	140					; 0000008cH
	push	DWORD PTR _bio$[esp+8]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 809
	ret	0
_BIO_ctrl_get_write_guarantee ENDP
_TEXT	ENDS
END

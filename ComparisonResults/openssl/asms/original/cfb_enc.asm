; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\des\cfb_enc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_DES_cfb_encrypt
EXTRN	__imp__memmove:PROC
EXTRN	_DES_encrypt1:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogtpy
;	COMDAT _DES_cfb_encrypt
_TEXT	SEGMENT
_v0$1$ = -64						; size = 4
tv1480 = -60						; size = 4
tv1479 = -60						; size = 4
_d1$2$ = -56						; size = 4
_num$1$ = -52						; size = 4
_d0$2$ = -48						; size = 4
_in$1$ = -48						; size = 4
_ti$ = -44						; size = 8
_schedule$GSCopy$1$ = -36				; size = 4
_in$2$ = -32						; size = 4
_rem$1$ = -28						; size = 4
_ivec$GSCopy$1$ = -24					; size = 4
_sh$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_in$ = 8						; size = 4
_out$ = 12						; size = 4
_numbits$ = 16						; size = 4
_length$ = 20						; size = 4
_schedule$ = 24						; size = 4
_ivec$ = 28						; size = 4
_enc$ = 32						; size = 4
_DES_cfb_encrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\des\cfb_enc.c
; Line 76
	mov	eax, 64					; 00000040H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+64], eax
	mov	eax, DWORD PTR _schedule$[esp+60]
; Line 79
	mov	ecx, DWORD PTR _numbits$[esp+60]
	mov	DWORD PTR _schedule$GSCopy$1$[esp+64], eax
	mov	eax, ecx
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _num$1$[esp+64], eax
	lea	eax, DWORD PTR [ecx+7]
	push	ebx
	mov	ebx, DWORD PTR _ivec$[esp+64]
	cdq
	push	ebp
	and	edx, 7
	mov	DWORD PTR _ivec$GSCopy$1$[esp+72], ebx
	push	esi
	mov	esi, DWORD PTR _out$[esp+72]
	push	edi
	lea	ebp, DWORD PTR [edx+eax]
	mov	edi, ecx
	sar	ebp, 3
	and	edi, -2147483641			; 80000007H
	jns	SHORT $LN103@DES_cfb_en
	dec	edi
	or	edi, -8					; fffffff8H
	inc	edi
$LN103@DES_cfb_en:
; Line 95
	dec	ecx
	mov	DWORD PTR _rem$1$[esp+80], edi
	cmp	ecx, 63					; 0000003fH
	ja	$LN21@DES_cfb_en
; Line 98
	movzx	ecx, BYTE PTR [ebx]
	lea	edx, DWORD PTR [ebx+1]
	movzx	eax, BYTE PTR [edx]
; Line 99
	movzx	ebx, BYTE PTR [edx+3]
	shl	eax, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+1]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+2]
	shl	eax, 24					; 00000018H
	or	ecx, eax
	movzx	eax, BYTE PTR [edx+4]
	mov	DWORD PTR _v0$1$[esp+80], ecx
	movzx	ecx, BYTE PTR [edx+6]
	shl	eax, 8
	or	ebx, eax
	shl	ecx, 8
	movzx	eax, BYTE PTR [edx+5]
	or	ecx, eax
	shl	ecx, 16					; 00000010H
	or	ebx, ecx
; Line 100
	cmp	DWORD PTR _enc$[esp+76], 0
; Line 101
	mov	ecx, DWORD PTR _length$[esp+76]
	je	$LN71@DES_cfb_en
	cmp	ecx, ebp
	jb	$LN12@DES_cfb_en
; Line 136
	mov	eax, 8
	sub	eax, edi
	mov	edi, DWORD PTR _in$[esp+76]
	mov	DWORD PTR tv1480[esp+80], eax
	mov	eax, DWORD PTR _v0$1$[esp+80]
	npad	9
$LL2@DES_cfb_en:
; Line 105
	push	1
	push	DWORD PTR _schedule$GSCopy$1$[esp+84]
	mov	DWORD PTR _ti$[esp+88], eax
	sub	ecx, ebp
	lea	eax, DWORD PTR _ti$[esp+88]
	mov	DWORD PTR _length$[esp+84], ecx
	push	eax
	mov	DWORD PTR _ti$[esp+96], ebx
	call	_DES_encrypt1
; Line 106
	lea	eax, DWORD PTR [ebp-1]
	add	esp, 12					; 0000000cH
	add	edi, ebp
	xor	edx, edx
	xor	ecx, ecx
	cmp	eax, 7
	ja	SHORT $LN4@DES_cfb_en
	jmp	DWORD PTR $LN106@DES_cfb_en[eax*4]
$LN24@DES_cfb_en:
	movzx	edx, BYTE PTR [edi-1]
	dec	edi
	shl	edx, 24					; 00000018H
$LN25@DES_cfb_en:
	movzx	eax, BYTE PTR [edi-1]
	dec	edi
	shl	eax, 16					; 00000010H
	or	edx, eax
$LN26@DES_cfb_en:
	movzx	eax, BYTE PTR [edi-1]
	dec	edi
	shl	eax, 8
	or	edx, eax
$LN27@DES_cfb_en:
	movzx	eax, BYTE PTR [edi-1]
	dec	edi
	or	edx, eax
$LN28@DES_cfb_en:
	movzx	ecx, BYTE PTR [edi-1]
	dec	edi
	shl	ecx, 24					; 00000018H
$LN29@DES_cfb_en:
	movzx	eax, BYTE PTR [edi-1]
	dec	edi
	shl	eax, 16					; 00000010H
	or	ecx, eax
$LN30@DES_cfb_en:
	movzx	eax, BYTE PTR [edi-1]
	dec	edi
	shl	eax, 8
	or	ecx, eax
$LN31@DES_cfb_en:
	movzx	eax, BYTE PTR [edi-1]
	dec	edi
	or	ecx, eax
	lea	eax, DWORD PTR [ebp-1]
$LN4@DES_cfb_en:
; Line 108
	xor	ecx, DWORD PTR _ti$[esp+80]
	add	edi, ebp
; Line 109
	xor	edx, DWORD PTR _ti$[esp+84]
; Line 110
	add	esi, ebp
	mov	DWORD PTR _in$1$[esp+80], edi
	cmp	eax, 7
	ja	SHORT $LN6@DES_cfb_en
	jmp	DWORD PTR $LN107@DES_cfb_en[eax*4]
$LN32@DES_cfb_en:
	dec	esi
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi], al
$LN33@DES_cfb_en:
	dec	esi
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi], al
$LN34@DES_cfb_en:
	dec	esi
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi], al
$LN35@DES_cfb_en:
	dec	esi
	mov	BYTE PTR [esi], dl
$LN36@DES_cfb_en:
	dec	esi
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi], al
$LN37@DES_cfb_en:
	dec	esi
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi], al
$LN38@DES_cfb_en:
	dec	esi
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [esi], al
$LN39@DES_cfb_en:
	dec	esi
	mov	BYTE PTR [esi], cl
$LN6@DES_cfb_en:
; Line 116
	mov	eax, DWORD PTR _numbits$[esp+76]
	add	esi, ebp
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN40@DES_cfb_en
; Line 117
	mov	eax, ebx
; Line 118
	mov	ebx, ecx
	jmp	$LN104@DES_cfb_en
$LN40@DES_cfb_en:
; Line 119
	cmp	eax, 64					; 00000040H
	jne	SHORT $LN42@DES_cfb_en
; Line 120
	mov	eax, ecx
; Line 121
	mov	ebx, edx
; Line 122
	jmp	$LN104@DES_cfb_en
$LN42@DES_cfb_en:
; Line 130
	mov	edi, DWORD PTR _v0$1$[esp+80]
	mov	DWORD PTR _sh$[esp+84], ebx
; Line 132
	mov	ebx, DWORD PTR _rem$1$[esp+80]
	mov	DWORD PTR _sh$[esp+80], edi
	mov	DWORD PTR _sh$[esp+88], ecx
	mov	DWORD PTR _sh$[esp+92], edx
	test	ebx, ebx
	jne	SHORT $LN44@DES_cfb_en
; Line 133
	mov	eax, DWORD PTR _num$1$[esp+80]
	lea	ecx, DWORD PTR _sh$[esp+80]
	add	eax, ecx
	push	8
	push	eax
	mov	eax, ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	jmp	$LN80@DES_cfb_en
$LN44@DES_cfb_en:
; Line 136
	mov	edi, DWORD PTR _num$1$[esp+80]
	movzx	ecx, BYTE PTR tv1480[esp+80]
	movzx	edx, BYTE PTR _sh$[esp+edi+81]
	movzx	eax, BYTE PTR _sh$[esp+edi+80]
	shr	dl, cl
	mov	ecx, ebx
	shl	al, cl
	or	dl, al
	mov	BYTE PTR _sh$[esp+80], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+81]
	movzx	eax, BYTE PTR _sh$[esp+edi+82]
	shl	dl, cl
	movzx	ecx, BYTE PTR tv1480[esp+80]
	shr	al, cl
	mov	ecx, ebx
	or	dl, al
	mov	BYTE PTR _sh$[esp+81], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+82]
	movzx	eax, BYTE PTR _sh$[esp+edi+83]
	shl	dl, cl
	movzx	ecx, BYTE PTR tv1480[esp+80]
	shr	al, cl
	mov	ecx, ebx
	or	dl, al
	mov	BYTE PTR _sh$[esp+82], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+83]
	movzx	eax, BYTE PTR _sh$[esp+edi+84]
	shl	dl, cl
	movzx	ecx, BYTE PTR tv1480[esp+80]
	shr	al, cl
	mov	ecx, ebx
	or	dl, al
	mov	BYTE PTR _sh$[esp+83], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+84]
	movzx	eax, BYTE PTR _sh$[esp+edi+85]
	shl	dl, cl
	movzx	ecx, BYTE PTR tv1480[esp+80]
	shr	al, cl
	mov	ecx, ebx
	or	dl, al
	mov	BYTE PTR _sh$[esp+84], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+85]
	movzx	eax, BYTE PTR _sh$[esp+edi+86]
	shl	dl, cl
	movzx	ecx, BYTE PTR tv1480[esp+80]
	shr	al, cl
	mov	ecx, ebx
	or	dl, al
	mov	BYTE PTR _sh$[esp+85], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+86]
	movzx	eax, BYTE PTR _sh$[esp+edi+87]
	shl	dl, cl
	movzx	ecx, BYTE PTR tv1480[esp+80]
	shr	al, cl
	mov	ecx, ebx
	or	dl, al
	mov	BYTE PTR _sh$[esp+86], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+87]
	movzx	eax, BYTE PTR _sh$[esp+edi+88]
	shl	dl, cl
	movzx	ecx, BYTE PTR tv1480[esp+80]
	shr	al, cl
	or	dl, al
	mov	BYTE PTR _sh$[esp+87], dl
$LN80@DES_cfb_en:
; Line 139
	mov	eax, DWORD PTR _sh$[esp+80]
	mov	ebx, DWORD PTR _sh$[esp+84]
	mov	edi, DWORD PTR _in$1$[esp+80]
$LN104@DES_cfb_en:
	mov	ecx, DWORD PTR _length$[esp+76]
	mov	DWORD PTR _v0$1$[esp+80], eax
	cmp	ecx, ebp
	jae	$LL2@DES_cfb_en
; Line 147
	jmp	$LN12@DES_cfb_en
$LN71@DES_cfb_en:
; Line 148
	cmp	ecx, ebp
	jb	$LN12@DES_cfb_en
; Line 179
	mov	eax, 8
	sub	eax, edi
	mov	edi, DWORD PTR _v0$1$[esp+80]
	mov	DWORD PTR tv1479[esp+80], eax
	mov	eax, DWORD PTR _in$[esp+76]
	mov	DWORD PTR _in$2$[esp+80], eax
	npad	9
$LL11@DES_cfb_en:
; Line 152
	push	1
	push	DWORD PTR _schedule$GSCopy$1$[esp+84]
	lea	eax, DWORD PTR _ti$[esp+88]
	mov	DWORD PTR _ti$[esp+88], edi
	sub	ecx, ebp
	mov	DWORD PTR _ti$[esp+92], ebx
	push	eax
	mov	DWORD PTR _length$[esp+88], ecx
	call	_DES_encrypt1
; Line 153
	mov	ecx, DWORD PTR _in$2$[esp+92]
	lea	edi, DWORD PTR [ebp-1]
	xor	eax, eax
	xor	edx, edx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _d1$2$[esp+80], eax
	add	ecx, ebp
	mov	DWORD PTR _d0$2$[esp+80], edx
	cmp	edi, 7
	ja	$LN13@DES_cfb_en
	lea	edi, DWORD PTR [ebp-1]
	jmp	DWORD PTR $LN108@DES_cfb_en[edi*4]
$LN46@DES_cfb_en:
	movzx	edx, BYTE PTR [ecx-1]
	dec	ecx
	dec	ecx
	shl	edx, 24					; 00000018H
	movzx	eax, BYTE PTR [ecx]
	dec	ecx
	shl	eax, 16					; 00000010H
	or	edx, eax
	movzx	eax, BYTE PTR [ecx]
	shl	eax, 8
	or	edx, eax
	jmp	SHORT $LN49@DES_cfb_en
$LN102@DES_cfb_en:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	mov	edx, DWORD PTR _d1$2$[esp+80]
	dec	ecx
	shl	eax, 16					; 00000010H
	or	edx, eax
	movzx	eax, BYTE PTR [ecx]
	shl	eax, 8
	or	edx, eax
	jmp	SHORT $LN49@DES_cfb_en
$LN101@DES_cfb_en:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	mov	edx, DWORD PTR _d1$2$[esp+80]
	shl	eax, 8
	or	edx, eax
	jmp	SHORT $LN49@DES_cfb_en
$LN100@DES_cfb_en:
	mov	edx, DWORD PTR _d1$2$[esp+80]
$LN49@DES_cfb_en:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	or	edx, eax
	mov	DWORD PTR _d1$2$[esp+80], edx
$LN50@DES_cfb_en:
	movzx	edx, BYTE PTR [ecx-1]
	dec	ecx
	shl	edx, 24					; 00000018H
$LN51@DES_cfb_en:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	shl	eax, 16					; 00000010H
	or	edx, eax
$LN52@DES_cfb_en:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	shl	eax, 8
	or	edx, eax
$LN53@DES_cfb_en:
	movzx	eax, BYTE PTR [ecx-1]
	dec	ecx
	or	edx, eax
	mov	eax, DWORD PTR _d1$2$[esp+80]
	mov	DWORD PTR _d0$2$[esp+80], edx
$LN13@DES_cfb_en:
; Line 159
	mov	edi, DWORD PTR _v0$1$[esp+80]
	add	ecx, ebp
	mov	DWORD PTR _in$2$[esp+80], ecx
	mov	ecx, DWORD PTR _numbits$[esp+76]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN54@DES_cfb_en
; Line 160
	mov	DWORD PTR _v0$1$[esp+80], ebx
; Line 161
	mov	ebx, edx
	mov	edi, DWORD PTR _v0$1$[esp+80]
	jmp	$LN57@DES_cfb_en
$LN54@DES_cfb_en:
; Line 162
	cmp	ecx, 64					; 00000040H
	jne	SHORT $LN56@DES_cfb_en
; Line 163
	mov	DWORD PTR _v0$1$[esp+80], edx
; Line 164
	mov	ebx, eax
; Line 165
	mov	edi, edx
	jmp	$LN57@DES_cfb_en
$LN56@DES_cfb_en:
; Line 173
	mov	DWORD PTR _sh$[esp+84], ebx
; Line 175
	mov	ebx, DWORD PTR _rem$1$[esp+80]
	mov	DWORD PTR _sh$[esp+80], edi
	mov	DWORD PTR _sh$[esp+88], edx
	mov	DWORD PTR _sh$[esp+92], eax
	test	ebx, ebx
	jne	SHORT $LN58@DES_cfb_en
; Line 176
	mov	eax, DWORD PTR _num$1$[esp+80]
	lea	ecx, DWORD PTR _sh$[esp+80]
	add	eax, ecx
	push	8
	push	eax
	mov	eax, ecx
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	jmp	$LN89@DES_cfb_en
$LN58@DES_cfb_en:
; Line 179
	mov	edi, DWORD PTR _num$1$[esp+80]
	movzx	ecx, BYTE PTR tv1479[esp+80]
	movzx	edx, BYTE PTR _sh$[esp+edi+81]
	movzx	eax, BYTE PTR _sh$[esp+edi+80]
	shr	dl, cl
	mov	ecx, ebx
	shl	al, cl
	or	dl, al
	movzx	ecx, BYTE PTR tv1479[esp+80]
	mov	BYTE PTR _sh$[esp+80], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+82]
	movzx	eax, BYTE PTR _sh$[esp+edi+81]
	shr	dl, cl
	mov	ecx, ebx
	shl	al, cl
	or	dl, al
	movzx	ecx, BYTE PTR tv1479[esp+80]
	mov	BYTE PTR _sh$[esp+81], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+83]
	movzx	eax, BYTE PTR _sh$[esp+edi+82]
	shr	dl, cl
	mov	ecx, ebx
	shl	al, cl
	movzx	ecx, BYTE PTR tv1479[esp+80]
	or	dl, al
	mov	BYTE PTR _sh$[esp+82], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+84]
	movzx	eax, BYTE PTR _sh$[esp+edi+83]
	shr	dl, cl
	mov	ecx, ebx
	shl	al, cl
	movzx	ecx, BYTE PTR tv1479[esp+80]
	or	dl, al
	mov	BYTE PTR _sh$[esp+83], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+85]
	movzx	eax, BYTE PTR _sh$[esp+edi+84]
	shr	dl, cl
	mov	ecx, ebx
	shl	al, cl
	movzx	ecx, BYTE PTR tv1479[esp+80]
	or	dl, al
	mov	BYTE PTR _sh$[esp+84], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+86]
	movzx	eax, BYTE PTR _sh$[esp+edi+85]
	shr	dl, cl
	mov	ecx, ebx
	shl	al, cl
	movzx	ecx, BYTE PTR tv1479[esp+80]
	or	dl, al
	mov	BYTE PTR _sh$[esp+85], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+87]
	movzx	eax, BYTE PTR _sh$[esp+edi+86]
	shr	dl, cl
	mov	ecx, ebx
	shl	al, cl
	movzx	ecx, BYTE PTR tv1479[esp+80]
	or	dl, al
	mov	BYTE PTR _sh$[esp+86], dl
	movzx	edx, BYTE PTR _sh$[esp+edi+88]
	movzx	eax, BYTE PTR _sh$[esp+edi+87]
	shr	dl, cl
	mov	ecx, ebx
	shl	al, cl
	or	dl, al
	mov	BYTE PTR _sh$[esp+87], dl
$LN89@DES_cfb_en:
; Line 182
	mov	edi, DWORD PTR _sh$[esp+80]
	mov	ebx, DWORD PTR _sh$[esp+84]
	mov	edx, DWORD PTR _d0$2$[esp+80]
	mov	DWORD PTR _v0$1$[esp+80], edi
$LN57@DES_cfb_en:
; Line 190
	mov	ecx, DWORD PTR _d1$2$[esp+80]
; Line 191
	lea	eax, DWORD PTR [ebp-1]
	xor	edx, DWORD PTR _ti$[esp+80]
	add	esi, ebp
	xor	ecx, DWORD PTR _ti$[esp+84]
	cmp	eax, 7
	ja	SHORT $LN18@DES_cfb_en
	jmp	DWORD PTR $LN109@DES_cfb_en[eax*4]
$LN60@DES_cfb_en:
	dec	esi
	mov	eax, ecx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi], al
$LN61@DES_cfb_en:
	dec	esi
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi], al
$LN62@DES_cfb_en:
	dec	esi
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [esi], al
$LN63@DES_cfb_en:
	dec	esi
	mov	BYTE PTR [esi], cl
$LN64@DES_cfb_en:
	dec	esi
	mov	eax, edx
	shr	eax, 24					; 00000018H
	mov	BYTE PTR [esi], al
$LN65@DES_cfb_en:
	dec	esi
	mov	eax, edx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi], al
$LN66@DES_cfb_en:
	dec	esi
	mov	eax, edx
	shr	eax, 8
	mov	BYTE PTR [esi], al
$LN67@DES_cfb_en:
	dec	esi
	mov	BYTE PTR [esi], dl
$LN18@DES_cfb_en:
; Line 192
	mov	ecx, DWORD PTR _length$[esp+76]
	add	esi, ebp
	cmp	ecx, ebp
	jae	$LL11@DES_cfb_en
$LN12@DES_cfb_en:
; Line 196
	mov	esi, DWORD PTR _ivec$GSCopy$1$[esp+80]
	mov	ecx, DWORD PTR _v0$1$[esp+80]
	mov	eax, ecx
	shr	eax, 8
	mov	BYTE PTR [esi], cl
	mov	BYTE PTR [esi+1], al
	mov	eax, ecx
	shr	eax, 16					; 00000010H
	mov	BYTE PTR [esi+2], al
; Line 197
	mov	eax, ebx
	shr	ecx, 24					; 00000018H
	mov	BYTE PTR [esi+3], cl
	shr	eax, 8
	mov	BYTE PTR [esi+4], bl
	mov	BYTE PTR [esi+5], al
	mov	eax, ebx
	shr	eax, 16					; 00000010H
	shr	ebx, 24					; 00000018H
	mov	BYTE PTR [esi+6], al
	mov	BYTE PTR [esi+7], bl
$LN21@DES_cfb_en:
; Line 199
	mov	ecx, DWORD PTR __$ArrayPad$[esp+80]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	ret	0
	npad	1
$LN106@DES_cfb_en:
	DD	$LN31@DES_cfb_en
	DD	$LN30@DES_cfb_en
	DD	$LN29@DES_cfb_en
	DD	$LN28@DES_cfb_en
	DD	$LN27@DES_cfb_en
	DD	$LN26@DES_cfb_en
	DD	$LN25@DES_cfb_en
	DD	$LN24@DES_cfb_en
$LN107@DES_cfb_en:
	DD	$LN39@DES_cfb_en
	DD	$LN38@DES_cfb_en
	DD	$LN37@DES_cfb_en
	DD	$LN36@DES_cfb_en
	DD	$LN35@DES_cfb_en
	DD	$LN34@DES_cfb_en
	DD	$LN33@DES_cfb_en
	DD	$LN32@DES_cfb_en
$LN108@DES_cfb_en:
	DD	$LN53@DES_cfb_en
	DD	$LN52@DES_cfb_en
	DD	$LN51@DES_cfb_en
	DD	$LN50@DES_cfb_en
	DD	$LN100@DES_cfb_en
	DD	$LN101@DES_cfb_en
	DD	$LN102@DES_cfb_en
	DD	$LN46@DES_cfb_en
$LN109@DES_cfb_en:
	DD	$LN67@DES_cfb_en
	DD	$LN66@DES_cfb_en
	DD	$LN65@DES_cfb_en
	DD	$LN64@DES_cfb_en
	DD	$LN63@DES_cfb_en
	DD	$LN62@DES_cfb_en
	DD	$LN61@DES_cfb_en
	DD	$LN60@DES_cfb_en
_DES_cfb_encrypt ENDP
_TEXT	ENDS
END

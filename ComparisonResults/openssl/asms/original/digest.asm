; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_EVP_MD_CTX_init
PUBLIC	_EVP_MD_CTX_cleanup
PUBLIC	_EVP_MD_CTX_create
PUBLIC	_EVP_MD_CTX_destroy
PUBLIC	_EVP_MD_CTX_copy_ex
PUBLIC	_EVP_DigestInit_ex
PUBLIC	_EVP_DigestUpdate
PUBLIC	_EVP_DigestFinal_ex
PUBLIC	_EVP_Digest
PUBLIC	_EVP_MD_CTX_copy
PUBLIC	_EVP_DigestInit
PUBLIC	_EVP_DigestFinal
PUBLIC	??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@ ; `string'
PUBLIC	??_C@_0CI@KPJFNDOF@ctx?9?$DOdigest?9?$DOmd_size?5?$DM?$DN?5EVP_MAX_@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_OpenSSLDie:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_EVP_MD_CTX_set_flags:PROC
EXTRN	_EVP_MD_CTX_clear_flags:PROC
EXTRN	_EVP_MD_CTX_test_flags:PROC
EXTRN	_EVP_PKEY_CTX_dup:PROC
EXTRN	_EVP_PKEY_CTX_free:PROC
EXTRN	_EVP_PKEY_CTX_ctrl:PROC
EXTRN	_ENGINE_get_digest:PROC
EXTRN	_ENGINE_init:PROC
EXTRN	_ENGINE_finish:PROC
EXTRN	_ENGINE_get_digest_engine:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0CI@KPJFNDOF@ctx?9?$DOdigest?9?$DOmd_size?5?$DM?$DN?5EVP_MAX_@
CONST	SEGMENT
??_C@_0CI@KPJFNDOF@ctx?9?$DOdigest?9?$DOmd_size?5?$DM?$DN?5EVP_MAX_@ DB 'c'
	DB	'tx->digest->md_size <= EVP_MAX_MD_SIZE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
CONST	SEGMENT
??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@ DB '.\crypto\evp\diges'
	DB	't.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_DigestFinal
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_md$ = 12						; size = 4
_size$ = 16						; size = 4
_EVP_DigestFinal PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 264
	push	esi
; Line 266
	push	DWORD PTR _size$[esp]
	push	DWORD PTR _md$[esp+4]
	push	DWORD PTR _ctx$[esp+8]
	call	_EVP_DigestFinal_ex
; Line 267
	push	DWORD PTR _ctx$[esp+12]
	mov	esi, eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 16					; 00000010H
; Line 268
	mov	eax, esi
	pop	esi
; Line 269
	ret	0
_EVP_DigestFinal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_DigestInit
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_EVP_DigestInit PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 127
	mov	eax, DWORD PTR _ctx$[esp-4]
	xorps	xmm0, xmm0
; Line 143
	push	0
	push	DWORD PTR _type$[esp]
; Line 127
	movups	XMMWORD PTR [eax], xmm0
; Line 143
	push	eax
; Line 127
	movq	QWORD PTR [eax+16], xmm0
; Line 143
	call	_EVP_DigestInit_ex
	add	esp, 12					; 0000000cH
; Line 144
	ret	0
_EVP_DigestInit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_MD_CTX_copy
_TEXT	SEGMENT
_out$ = 8						; size = 4
_in$ = 12						; size = 4
_EVP_MD_CTX_copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 127
	mov	eax, DWORD PTR _out$[esp-4]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [eax], xmm0
	movq	QWORD PTR [eax+16], xmm0
; Line 295
	mov	DWORD PTR _out$[esp-4], eax
	jmp	_EVP_MD_CTX_copy_ex
_EVP_MD_CTX_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_Digest
_TEXT	SEGMENT
_ctx$ = -24						; size = 24
_data$ = 8						; size = 4
_count$ = 12						; size = 4
_md$ = 16						; size = 4
_size$ = 20						; size = 4
_type$ = 24						; size = 4
_impl$ = 28						; size = 4
_EVP_Digest PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 353
	mov	eax, 24					; 00000018H
	call	__chkstk
	push	esi
	xorps	xmm0, xmm0
; Line 358
	lea	eax, DWORD PTR _ctx$[esp+28]
	push	1
	push	eax
; Line 127
	movups	XMMWORD PTR _ctx$[esp+36], xmm0
	movq	QWORD PTR _ctx$[esp+52], xmm0
; Line 358
	call	_EVP_MD_CTX_set_flags
; Line 359
	push	DWORD PTR _impl$[esp+32]
	lea	eax, DWORD PTR _ctx$[esp+40]
	push	DWORD PTR _type$[esp+36]
	push	eax
	call	_EVP_DigestInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN3@EVP_Digest
; Line 258
	push	DWORD PTR _count$[esp+24]
	lea	eax, DWORD PTR _ctx$[esp+32]
	push	DWORD PTR _data$[esp+28]
	push	eax
	call	DWORD PTR _ctx$[esp+60]
	add	esp, 12					; 0000000cH
; Line 359
	test	eax, eax
	je	SHORT $LN3@EVP_Digest
	push	DWORD PTR _size$[esp+24]
	lea	eax, DWORD PTR _ctx$[esp+32]
	push	DWORD PTR _md$[esp+28]
	push	eax
	call	_EVP_DigestFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@EVP_Digest
; Line 362
	lea	eax, DWORD PTR _ctx$[esp+28]
	mov	esi, 1
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 364
	mov	eax, esi
	pop	esi
; Line 365
	add	esp, 24					; 00000018H
	ret	0
$LN3@EVP_Digest:
; Line 362
	lea	eax, DWORD PTR _ctx$[esp+28]
	xor	esi, esi
	push	eax
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
; Line 364
	mov	eax, esi
	pop	esi
; Line 365
	add	esp, 24					; 00000018H
	ret	0
_EVP_Digest ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_DigestFinal_ex
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_md$ = 12						; size = 4
_size$ = 16						; size = 4
_EVP_DigestFinal_ex PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 273
	push	esi
; Line 279
	mov	esi, DWORD PTR _ctx$[esp]
	push	edi
	mov	eax, DWORD PTR [esi]
	cmp	DWORD PTR [eax+8], 64			; 00000040H
	jle	SHORT $LN6@EVP_Digest
	push	OFFSET ??_C@_0CI@KPJFNDOF@ctx?9?$DOdigest?9?$DOmd_size?5?$DM?$DN?5EVP_MAX_@
	push	279					; 00000117H
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	call	_OpenSSLDie
	add	esp, 12					; 0000000cH
$LN6@EVP_Digest:
; Line 280
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR _md$[esp+4]
	push	esi
	mov	eax, DWORD PTR [eax+24]
	call	eax
; Line 281
	mov	edx, DWORD PTR _size$[esp+12]
	add	esp, 8
	mov	edi, eax
	test	edx, edx
	je	SHORT $LN2@EVP_Digest
; Line 282
	mov	ecx, DWORD PTR [esi]
	mov	ecx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx], ecx
$LN2@EVP_Digest:
; Line 283
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+32]
	test	eax, eax
	je	SHORT $LN3@EVP_Digest
; Line 284
	push	esi
	call	eax
; Line 285
	push	2
	push	esi
	call	_EVP_MD_CTX_set_flags
	add	esp, 12					; 0000000cH
$LN3@EVP_Digest:
; Line 287
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR [eax+68]
	push	0
	push	DWORD PTR [esi+12]
	call	_memset
	add	esp, 12					; 0000000cH
; Line 288
	mov	eax, edi
	pop	edi
	pop	esi
; Line 290
	ret	0
_EVP_DigestFinal_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_DigestUpdate
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_data$ = 12						; size = 4
_count$ = 16						; size = 4
_EVP_DigestUpdate PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 258
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	DWORD PTR _ctx$[esp-4], eax
	mov	eax, DWORD PTR [eax+20]
	jmp	eax
_EVP_DigestUpdate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_DigestInit_ex
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_impl$ = 16						; size = 4
_EVP_DigestInit_ex PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 147
	push	ebx
	push	esi
; Line 148
	mov	esi, DWORD PTR _ctx$[esp+4]
	push	edi
	push	2
	push	esi
	call	_EVP_MD_CTX_clear_flags
; Line 167
	mov	ecx, DWORD PTR [esi+4]
	add	esp, 8
	mov	edi, DWORD PTR _type$[esp+8]
	test	ecx, ecx
	je	SHORT $LN2@EVP_Digest
	mov	edx, DWORD PTR [esi]
	test	edx, edx
	je	SHORT $LN2@EVP_Digest
	test	edi, edi
	je	$skip_to_init$25
	mov	eax, DWORD PTR [edi]
	cmp	eax, DWORD PTR [edx]
	je	$skip_to_init$25
$LN2@EVP_Digest:
; Line 172
	test	edi, edi
	je	$LN4@EVP_Digest
; Line 178
	test	ecx, ecx
	je	SHORT $LN6@EVP_Digest
; Line 179
	push	ecx
	call	_ENGINE_finish
	add	esp, 4
$LN6@EVP_Digest:
; Line 180
	mov	ebx, DWORD PTR _impl$[esp+8]
	test	ebx, ebx
	je	SHORT $LN7@EVP_Digest
; Line 181
	push	ebx
	call	_ENGINE_init
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN8@EVP_Digest
; Line 182
	push	182					; 000000b6H
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	push	134					; 00000086H
$LN22@EVP_Digest:
	push	128					; 00000080H
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN23@EVP_Digest:
; Line 183
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 251
	ret	0
$LN7@EVP_Digest:
; Line 187
	push	DWORD PTR [edi]
	call	_ENGINE_get_digest_engine
	add	esp, 4
	mov	ebx, eax
$LN8@EVP_Digest:
; Line 188
	test	ebx, ebx
	je	$LN10@EVP_Digest
; Line 190
	push	DWORD PTR [edi]
	push	ebx
	call	_ENGINE_get_digest
	mov	edi, eax
	add	esp, 8
; Line 191
	test	edi, edi
	jne	SHORT $LN12@EVP_Digest
; Line 193
	push	193					; 000000c1H
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	push	134					; 00000086H
	push	128					; 00000080H
	push	6
	call	_ERR_put_error
; Line 194
	push	ebx
	call	_ENGINE_finish
	add	esp, 24					; 00000018H
; Line 195
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
; Line 251
	ret	0
$LN12@EVP_Digest:
; Line 203
	mov	DWORD PTR [esi+4], ebx
$LN13@EVP_Digest:
; Line 214
	mov	eax, DWORD PTR [esi]
	cmp	eax, edi
	je	$skip_to_init$25
; Line 215
	test	eax, eax
	je	SHORT $LN15@EVP_Digest
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN15@EVP_Digest
; Line 216
	push	DWORD PTR [esi+12]
	call	_CRYPTO_free
	add	esp, 4
; Line 217
	mov	DWORD PTR [esi+12], 0
$LN15@EVP_Digest:
; Line 220
	test	DWORD PTR [esi+8], 256			; 00000100H
	mov	DWORD PTR [esi], edi
	jne	SHORT $skip_to_init$25
	cmp	DWORD PTR [edi+68], 0
	je	SHORT $skip_to_init$25
; Line 221
	mov	eax, DWORD PTR [edi+20]
; Line 222
	push	222					; 000000deH
	mov	DWORD PTR [esi+20], eax
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	push	DWORD PTR [edi+68]
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+12], eax
; Line 223
	test	eax, eax
	jne	SHORT $skip_to_init$25
; Line 224
	push	224					; 000000e0H
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	push	65					; 00000041H
; Line 225
	jmp	$LN22@EVP_Digest
$LN10@EVP_Digest:
; Line 205
	mov	DWORD PTR [esi+4], 0
; Line 206
	jmp	SHORT $LN13@EVP_Digest
$LN4@EVP_Digest:
; Line 207
	mov	edi, DWORD PTR [esi]
	test	edi, edi
	jne	SHORT $LN13@EVP_Digest
; Line 208
	push	208					; 000000d0H
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	push	139					; 0000008bH
; Line 209
	jmp	$LN22@EVP_Digest
$skip_to_init$25:
; Line 232
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN19@EVP_Digest
; Line 234
	push	esi
	push	0
	push	7
	push	248					; 000000f8H
	push	-1
	push	eax
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
; Line 236
	test	eax, eax
	jg	SHORT $LN19@EVP_Digest
	cmp	eax, -2					; fffffffeH
	jne	$LN23@EVP_Digest
$LN19@EVP_Digest:
; Line 239
	test	DWORD PTR [esi+8], 256			; 00000100H
	je	SHORT $LN20@EVP_Digest
; Line 240
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 251
	ret	0
$LN20@EVP_Digest:
; Line 250
	mov	eax, DWORD PTR [esi]
	push	esi
	mov	eax, DWORD PTR [eax+16]
	call	eax
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
; Line 251
	ret	0
_EVP_DigestInit_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_MD_CTX_copy_ex
_TEXT	SEGMENT
_out$ = 8						; size = 4
_in$ = 12						; size = 4
_EVP_MD_CTX_copy_ex PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 299
	push	edi
; Line 301
	mov	edi, DWORD PTR _in$[esp]
	test	edi, edi
	je	$LN3@EVP_MD_CTX
	cmp	DWORD PTR [edi], 0
	je	$LN3@EVP_MD_CTX
; Line 307
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN4@EVP_MD_CTX
	push	eax
	call	_ENGINE_init
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN4@EVP_MD_CTX
; Line 308
	push	308					; 00000134H
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	push	38					; 00000026H
	push	110					; 0000006eH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 309
	xor	eax, eax
	pop	edi
; Line 348
	ret	0
$LN4@EVP_MD_CTX:
	push	ebx
	push	esi
; Line 313
	mov	esi, DWORD PTR _out$[esp+8]
	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR [edi]
	jne	SHORT $LN5@EVP_MD_CTX
; Line 314
	mov	ebx, DWORD PTR [esi+12]
; Line 315
	push	4
	push	esi
	call	_EVP_MD_CTX_set_flags
	add	esp, 8
; Line 316
	jmp	SHORT $LN6@EVP_MD_CTX
$LN5@EVP_MD_CTX:
; Line 317
	xor	ebx, ebx
$LN6@EVP_MD_CTX:
; Line 318
	push	esi
	call	_EVP_MD_CTX_cleanup
; Line 319
	movups	xmm0, XMMWORD PTR [edi]
	add	esp, 4
	movups	XMMWORD PTR [esi], xmm0
	movq	xmm0, QWORD PTR [edi+16]
	movq	QWORD PTR [esi+16], xmm0
; Line 321
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN7@EVP_MD_CTX
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+68]
	test	eax, eax
	je	SHORT $LN7@EVP_MD_CTX
; Line 322
	test	ebx, ebx
	je	SHORT $LN8@EVP_MD_CTX
; Line 323
	mov	DWORD PTR [esi+12], ebx
$LN10@EVP_MD_CTX:
; Line 331
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR [eax+68]
	push	DWORD PTR [edi+12]
	push	DWORD PTR [esi+12]
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN7@EVP_MD_CTX:
; Line 334
	mov	eax, DWORD PTR [edi+20]
	mov	DWORD PTR [esi+20], eax
; Line 336
	mov	eax, DWORD PTR [edi+16]
	test	eax, eax
	je	SHORT $LN12@EVP_MD_CTX
; Line 337
	push	eax
	call	_EVP_PKEY_CTX_dup
	add	esp, 4
	mov	DWORD PTR [esi+16], eax
; Line 338
	test	eax, eax
	jne	SHORT $LN12@EVP_MD_CTX
; Line 339
	push	esi
	call	_EVP_MD_CTX_cleanup
	add	esp, 4
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 348
	ret	0
$LN8@EVP_MD_CTX:
; Line 325
	push	325					; 00000145H
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR [esi+12], eax
; Line 326
	test	eax, eax
	jne	SHORT $LN10@EVP_MD_CTX
; Line 327
	push	327					; 00000147H
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	push	65					; 00000041H
	push	110					; 0000006eH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 328
	xor	eax, eax
	pop	esi
	pop	ebx
	pop	edi
; Line 348
	ret	0
$LN12@EVP_MD_CTX:
; Line 344
	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+28]
	test	eax, eax
	je	SHORT $LN13@EVP_MD_CTX
; Line 345
	push	edi
	push	esi
	call	eax
	add	esp, 8
	pop	esi
	pop	ebx
	pop	edi
; Line 348
	ret	0
$LN13@EVP_MD_CTX:
	pop	esi
	pop	ebx
; Line 347
	mov	eax, 1
	pop	edi
; Line 348
	ret	0
$LN3@EVP_MD_CTX:
; Line 302
	push	302					; 0000012eH
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	push	111					; 0000006fH
	push	110					; 0000006eH
	push	6
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 303
	xor	eax, eax
	pop	edi
; Line 348
	ret	0
_EVP_MD_CTX_copy_ex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_MD_CTX_destroy
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_EVP_MD_CTX_destroy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 368
	push	esi
; Line 369
	mov	esi, DWORD PTR _ctx$[esp]
	test	esi, esi
	je	SHORT $LN2@EVP_MD_CTX
; Line 370
	push	esi
	call	_EVP_MD_CTX_cleanup
; Line 371
	push	esi
	call	_CRYPTO_free
	add	esp, 8
$LN2@EVP_MD_CTX:
	pop	esi
; Line 373
	ret	0
_EVP_MD_CTX_destroy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_MD_CTX_create
_TEXT	SEGMENT
_EVP_MD_CTX_create PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 132
	push	132					; 00000084H
	push	OFFSET ??_C@_0BG@COGMIJJG@?4?2crypto?2evp?2digest?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 134
	test	eax, eax
	je	SHORT $LN4@EVP_MD_CTX
	xorps	xmm0, xmm0
; Line 127
	movups	XMMWORD PTR [eax], xmm0
	movq	QWORD PTR [eax+16], xmm0
$LN4@EVP_MD_CTX:
; Line 138
	ret	0
_EVP_MD_CTX_create ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_MD_CTX_cleanup
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_EVP_MD_CTX_cleanup PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 377
	push	esi
; Line 384
	mov	esi, DWORD PTR _ctx$[esp]
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@EVP_MD_CTX
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN2@EVP_MD_CTX
	push	2
	push	esi
	call	_EVP_MD_CTX_test_flags
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@EVP_MD_CTX
; Line 385
	mov	eax, DWORD PTR [esi]
	push	esi
	mov	eax, DWORD PTR [eax+32]
	call	eax
	add	esp, 4
$LN2@EVP_MD_CTX:
; Line 387
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN3@EVP_MD_CTX
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN3@EVP_MD_CTX
	cmp	DWORD PTR [esi+12], 0
	je	SHORT $LN3@EVP_MD_CTX
	push	4
	push	esi
	call	_EVP_MD_CTX_test_flags
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@EVP_MD_CTX
; Line 388
	mov	eax, DWORD PTR [esi]
	push	DWORD PTR [eax+68]
	push	DWORD PTR [esi+12]
	call	_OPENSSL_cleanse
; Line 389
	push	DWORD PTR [esi+12]
	call	_CRYPTO_free
	add	esp, 12					; 0000000cH
$LN3@EVP_MD_CTX:
; Line 392
	mov	eax, DWORD PTR [esi+16]
	test	eax, eax
	je	SHORT $LN4@EVP_MD_CTX
; Line 393
	push	eax
	call	_EVP_PKEY_CTX_free
	add	esp, 4
$LN4@EVP_MD_CTX:
; Line 395
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN5@EVP_MD_CTX
; Line 400
	push	eax
	call	_ENGINE_finish
	add	esp, 4
$LN5@EVP_MD_CTX:
; Line 407
	xorps	xmm0, xmm0
	mov	eax, 1
	movups	XMMWORD PTR [esi], xmm0
	movq	QWORD PTR [esi+16], xmm0
	pop	esi
; Line 408
	ret	0
_EVP_MD_CTX_cleanup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_MD_CTX_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_EVP_MD_CTX_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\digest.c
; Line 127
	mov	eax, DWORD PTR _ctx$[esp-4]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [eax], xmm0
	movq	QWORD PTR [eax+16], xmm0
; Line 128
	ret	0
_EVP_MD_CTX_init ENDP
_TEXT	ENDS
END

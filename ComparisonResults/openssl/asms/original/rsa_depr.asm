; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_depr.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_RSA_generate_key
EXTRN	_BN_new:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_set_bit:PROC
EXTRN	_RSA_new:PROC
EXTRN	_RSA_generate_key_ex:PROC
EXTRN	_RSA_free:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _RSA_generate_key
_TEXT	SEGMENT
_cb$ = -12						; size = 12
_bits$ = 8						; size = 4
_e_value$ = 12						; size = 4
_callback$ = 16						; size = 4
_cb_arg$ = 20						; size = 4
_RSA_generate_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\rsa\rsa_depr.c
; Line 75
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 78
	call	_RSA_new
	mov	ebx, eax
; Line 79
	call	_BN_new
	mov	edi, eax
; Line 81
	test	ebx, ebx
	je	SHORT $err$19
	test	edi, edi
	je	SHORT $LN10@RSA_genera
; Line 88
	mov	ebp, DWORD PTR _e_value$[esp+24]
	xor	esi, esi
	npad	6
$LL4@RSA_genera:
; Line 89
	mov	eax, 1
	mov	ecx, esi
	shl	eax, cl
	test	eax, ebp
	je	SHORT $LN2@RSA_genera
; Line 90
	push	esi
	push	edi
	call	_BN_set_bit
	add	esp, 8
	test	eax, eax
	je	SHORT $err$19
$LN2@RSA_genera:
; Line 88
	inc	esi
	cmp	esi, 32					; 00000020H
	jl	SHORT $LL4@RSA_genera
; Line 94
	mov	eax, DWORD PTR _cb_arg$[esp+24]
	mov	DWORD PTR _cb$[esp+32], eax
	mov	eax, DWORD PTR _callback$[esp+24]
	mov	DWORD PTR _cb$[esp+36], eax
; Line 96
	lea	eax, DWORD PTR _cb$[esp+28]
	push	eax
	push	edi
	push	DWORD PTR _bits$[esp+32]
	mov	DWORD PTR _cb$[esp+40], 1
	push	ebx
	call	_RSA_generate_key_ex
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$19
; Line 97
	push	edi
	call	_BN_free
	add	esp, 4
; Line 98
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 106
	add	esp, 12					; 0000000cH
	ret	0
$err$19:
; Line 101
	test	edi, edi
	je	SHORT $LN10@RSA_genera
; Line 102
	push	edi
	call	_BN_free
	add	esp, 4
$LN10@RSA_genera:
; Line 103
	test	ebx, ebx
	je	SHORT $LN11@RSA_genera
; Line 104
	push	ebx
	call	_RSA_free
	add	esp, 4
$LN11@RSA_genera:
; Line 105
	pop	edi
	pop	esi
	pop	ebp
	xor	eax, eax
	pop	ebx
; Line 106
	add	esp, 12					; 0000000cH
	ret	0
_RSA_generate_key ENDP
_TEXT	ENDS
END

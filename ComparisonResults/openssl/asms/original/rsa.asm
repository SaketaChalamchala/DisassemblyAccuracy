; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\apps\rsa.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_rsa_main
PUBLIC	??_C@_07CGGPPMGB@?9inform?$AA@			; `string'
PUBLIC	??_C@_08LPHBEAIF@?9outform?$AA@			; `string'
PUBLIC	??_C@_03DAJLOBIG@?9in?$AA@			; `string'
PUBLIC	??_C@_04HKKABCEL@?9out?$AA@			; `string'
PUBLIC	??_C@_07KMOOHICO@?9passin?$AA@			; `string'
PUBLIC	??_C@_08KCDBEMAI@?9passout?$AA@			; `string'
PUBLIC	??_C@_07CECBDAGF@?9engine?$AA@			; `string'
PUBLIC	??_C@_07LCILBEKO@?9sgckey?$AA@			; `string'
PUBLIC	??_C@_06NLLOJDKN@?9pubin?$AA@			; `string'
PUBLIC	??_C@_07NGPHMOHJ@?9pubout?$AA@			; `string'
PUBLIC	??_C@_0BB@BLODOEPC@?9RSAPublicKey_in?$AA@	; `string'
PUBLIC	??_C@_0BC@CNODNPGL@?9RSAPublicKey_out?$AA@	; `string'
PUBLIC	??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@		; `string'
PUBLIC	??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@		; `string'
PUBLIC	??_C@_09BBENBNGN@?9pvk?9none?$AA@		; `string'
PUBLIC	??_C@_06JPEJAHHH@?9noout?$AA@			; `string'
PUBLIC	??_C@_05OEBEIMJA@?9text?$AA@			; `string'
PUBLIC	??_C@_08NJNHONAF@?9modulus?$AA@			; `string'
PUBLIC	??_C@_06CLLLPJIB@?9check?$AA@			; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@	; `string'
PUBLIC	??_C@_0DE@FMGDDDIO@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@ ; `string'
PUBLIC	??_C@_0DF@HDJAAOHH@?5?9outform?5arg?5?5?5?5output?5format?5?9@ ; `string'
PUBLIC	??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@IFDJHJBE@?5?9sgckey?5?5?5?5?5?5?5?5?5Use?5IIS?5SGC?5key@ ; `string'
PUBLIC	??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ ; `string'
PUBLIC	??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ ; `string'
PUBLIC	??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ ; `string'
PUBLIC	??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ ; `string'
PUBLIC	??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ ; `string'
PUBLIC	??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@ ; `string'
PUBLIC	??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@ ; `string'
PUBLIC	??_C@_0CM@IENIFPI@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5RSA?5k@ ; `string'
PUBLIC	??_C@_0CJ@HBGLJOIO@?5?9check?5?5?5?5?5?5?5?5?5?5verify?5key?5cons@ ; `string'
PUBLIC	??_C@_0DE@BJKEJKAK@?5?9pubin?5?5?5?5?5?5?5?5?5?5expect?5a?5public@ ; `string'
PUBLIC	??_C@_0CG@HGPMKHGB@?5?9pubout?5?5?5?5?5?5?5?5?5output?5a?5public@ ; `string'
PUBLIC	??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ ; `string'
PUBLIC	??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ ; `string'
PUBLIC	??_C@_0CC@NEENNMBO@Only?5private?5keys?5can?5be?5checked@ ; `string'
PUBLIC	??_C@_0L@KEAMIOLD@Public?5Key?$AA@		; `string'
PUBLIC	??_C@_0M@NBDOOMPD@Private?5Key?$AA@		; `string'
PUBLIC	??_C@_08CHIKBNMH@Modulus?$DN?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0M@CCHECPKH@RSA?5key?5ok?6?$AA@		; `string'
PUBLIC	??_C@_0BD@CNFIPBIH@RSA?5key?5error?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@LCMALHAP@writing?5RSA?5key?6?$AA@	; `string'
PUBLIC	??_C@_0N@NGHJAGIN@?4?2apps?2rsa?4c?$AA@		; `string'
PUBLIC	??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@ ; `string'
PUBLIC	??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ ; `string'
PUBLIC	??_C@_0BF@PMEBFKMI@unable?5to?5write?5key?6?$AA@ ; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__perror:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_s_file:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BN_print:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_PKEY_set1_RSA:PROC
EXTRN	_EVP_PKEY_get1_RSA:PROC
EXTRN	_EVP_PKEY_new:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_RSA_check_key:PROC
EXTRN	_RSA_free:PROC
EXTRN	_RSA_print:PROC
EXTRN	_i2d_RSA_NET:PROC
EXTRN	_i2d_RSAPrivateKey_bio:PROC
EXTRN	_i2d_RSAPublicKey_bio:PROC
EXTRN	_i2d_RSA_PUBKEY_bio:PROC
EXTRN	_ERR_get_error:PROC
EXTRN	_ERR_peek_error:PROC
EXTRN	_ERR_reason_error_string:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_load_crypto_strings:PROC
EXTRN	_str2fmt:PROC
EXTRN	_app_passwd:PROC
EXTRN	_load_key:PROC
EXTRN	_load_pubkey:PROC
EXTRN	_setup_engine:PROC
EXTRN	_load_config:PROC
EXTRN	_PEM_write_bio_RSAPrivateKey:PROC
EXTRN	_PEM_write_bio_RSAPublicKey:PROC
EXTRN	_PEM_write_bio_RSA_PUBKEY:PROC
EXTRN	_i2b_PrivateKey_bio:PROC
EXTRN	_i2b_PublicKey_bio:PROC
EXTRN	_i2b_PVK_bio:PROC
EXTRN	__chkstk:PROC
EXTRN	_bio_err:DWORD
;	COMDAT ??_C@_0BF@PMEBFKMI@unable?5to?5write?5key?6?$AA@
CONST	SEGMENT
??_C@_0BF@PMEBFKMI@unable?5to?5write?5key?6?$AA@ DB 'unable to write key', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
CONST	SEGMENT
??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@ DB 'bad output '
	DB	'format specified for outfile', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
CONST	SEGMENT
??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@ DB 'Memory allocati'
	DB	'on failure', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NGHJAGIN@?4?2apps?2rsa?4c?$AA@
CONST	SEGMENT
??_C@_0N@NGHJAGIN@?4?2apps?2rsa?4c?$AA@ DB '.\apps\rsa.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LCMALHAP@writing?5RSA?5key?6?$AA@
CONST	SEGMENT
??_C@_0BB@LCMALHAP@writing?5RSA?5key?6?$AA@ DB 'writing RSA key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CNFIPBIH@RSA?5key?5error?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@CNFIPBIH@RSA?5key?5error?3?5?$CFs?6?$AA@ DB 'RSA key error: %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CCHECPKH@RSA?5key?5ok?6?$AA@
CONST	SEGMENT
??_C@_0M@CCHECPKH@RSA?5key?5ok?6?$AA@ DB 'RSA key ok', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08CHIKBNMH@Modulus?$DN?$AA@
CONST	SEGMENT
??_C@_08CHIKBNMH@Modulus?$DN?$AA@ DB 'Modulus=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
CONST	SEGMENT
??_C@_0M@NBDOOMPD@Private?5Key?$AA@ DB 'Private Key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
CONST	SEGMENT
??_C@_0L@KEAMIOLD@Public?5Key?$AA@ DB 'Public Key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NEENNMBO@Only?5private?5keys?5can?5be?5checked@
CONST	SEGMENT
??_C@_0CC@NEENNMBO@Only?5private?5keys?5can?5be?5checked@ DB 'Only privat'
	DB	'e keys can be checked', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
CONST	SEGMENT
??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@ DB 'Error getting pas'
	DB	'swords', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
CONST	SEGMENT
??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@ DB ' -'
	DB	'engine e       use engine e, possibly a hardware device.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HGPMKHGB@?5?9pubout?5?5?5?5?5?5?5?5?5output?5a?5public@
CONST	SEGMENT
??_C@_0CG@HGPMKHGB@?5?9pubout?5?5?5?5?5?5?5?5?5output?5a?5public@ DB ' -p'
	DB	'ubout         output a public key', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BJKEJKAK@?5?9pubin?5?5?5?5?5?5?5?5?5?5expect?5a?5public@
CONST	SEGMENT
??_C@_0DE@BJKEJKAK@?5?9pubin?5?5?5?5?5?5?5?5?5?5expect?5a?5public@ DB ' -'
	DB	'pubin          expect a public key in input file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HBGLJOIO@?5?9check?5?5?5?5?5?5?5?5?5?5verify?5key?5cons@
CONST	SEGMENT
??_C@_0CJ@HBGLJOIO@?5?9check?5?5?5?5?5?5?5?5?5?5verify?5key?5cons@ DB ' -'
	DB	'check          verify key consistency', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@IENIFPI@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5RSA?5k@
CONST	SEGMENT
??_C@_0CM@IENIFPI@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5RSA?5k@ DB ' -mo'
	DB	'dulus        print the RSA key modulus', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@
CONST	SEGMENT
??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@ DB ' '
	DB	'-noout          don''t print key out', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@
CONST	SEGMENT
??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@ DB ' '
	DB	'-text           print the key in text', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'                encrypt PEM output with cbc camellia', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@
CONST	SEGMENT
??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@ DB ' -camellia'
	DB	'128, -camellia192, -camellia256', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'                encrypt PEM output with cbc aes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
CONST	SEGMENT
??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@ DB ' -aes128'
	DB	', -aes192, -aes256', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'-seed           encrypt PEM output with cbc seed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'-idea           encrypt PEM output with cbc idea', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'-des3           encrypt PEM output with ede cbc des using 168'
	DB	' bit key', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
CONST	SEGMENT
??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@ DB ' '
	DB	'-des            encrypt PEM output with cbc des', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
CONST	SEGMENT
??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@ DB ' -passo'
	DB	'ut arg    output file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@
CONST	SEGMENT
??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@ DB ' -'
	DB	'out arg        output file', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@
CONST	SEGMENT
??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@ DB ' -pass'
	DB	'in arg     input file pass phrase source', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IFDJHJBE@?5?9sgckey?5?5?5?5?5?5?5?5?5Use?5IIS?5SGC?5key@
CONST	SEGMENT
??_C@_0CJ@IFDJHJBE@?5?9sgckey?5?5?5?5?5?5?5?5?5Use?5IIS?5SGC?5key@ DB ' -'
	DB	'sgckey         Use IIS SGC key format', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@
CONST	SEGMENT
??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@ DB ' -i'
	DB	'n arg         input file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HDJAAOHH@?5?9outform?5arg?5?5?5?5output?5format?5?9@
CONST	SEGMENT
??_C@_0DF@HDJAAOHH@?5?9outform?5arg?5?5?5?5output?5format?5?9@ DB ' -outf'
	DB	'orm arg    output format - one of DER NET PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@FMGDDDIO@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@
CONST	SEGMENT
??_C@_0DE@FMGDDDIO@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@ DB ' -in'
	DB	'form arg     input format - one of DER NET PEM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
CONST	SEGMENT
??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@ DB 'where options are', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
CONST	SEGMENT
??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@ DB '%'
	DB	's [options] <infile >outfile', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06CLLLPJIB@?9check?$AA@
CONST	SEGMENT
??_C@_06CLLLPJIB@?9check?$AA@ DB '-check', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJNHONAF@?9modulus?$AA@
CONST	SEGMENT
??_C@_08NJNHONAF@?9modulus?$AA@ DB '-modulus', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OEBEIMJA@?9text?$AA@
CONST	SEGMENT
??_C@_05OEBEIMJA@?9text?$AA@ DB '-text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JPEJAHHH@?9noout?$AA@
CONST	SEGMENT
??_C@_06JPEJAHHH@?9noout?$AA@ DB '-noout', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BBENBNGN@?9pvk?9none?$AA@
CONST	SEGMENT
??_C@_09BBENBNGN@?9pvk?9none?$AA@ DB '-pvk-none', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@
CONST	SEGMENT
??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@ DB '-pvk-weak', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@
CONST	SEGMENT
??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@ DB '-pvk-strong', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CNODNPGL@?9RSAPublicKey_out?$AA@
CONST	SEGMENT
??_C@_0BC@CNODNPGL@?9RSAPublicKey_out?$AA@ DB '-RSAPublicKey_out', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BLODOEPC@?9RSAPublicKey_in?$AA@
CONST	SEGMENT
??_C@_0BB@BLODOEPC@?9RSAPublicKey_in?$AA@ DB '-RSAPublicKey_in', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGPHMOHJ@?9pubout?$AA@
CONST	SEGMENT
??_C@_07NGPHMOHJ@?9pubout?$AA@ DB '-pubout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NLLOJDKN@?9pubin?$AA@
CONST	SEGMENT
??_C@_06NLLOJDKN@?9pubin?$AA@ DB '-pubin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LCILBEKO@?9sgckey?$AA@
CONST	SEGMENT
??_C@_07LCILBEKO@?9sgckey?$AA@ DB '-sgckey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CECBDAGF@?9engine?$AA@
CONST	SEGMENT
??_C@_07CECBDAGF@?9engine?$AA@ DB '-engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KCDBEMAI@?9passout?$AA@
CONST	SEGMENT
??_C@_08KCDBEMAI@?9passout?$AA@ DB '-passout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMOOHICO@?9passin?$AA@
CONST	SEGMENT
??_C@_07KMOOHICO@?9passin?$AA@ DB '-passin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKKABCEL@?9out?$AA@
CONST	SEGMENT
??_C@_04HKKABCEL@?9out?$AA@ DB '-out', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DAJLOBIG@?9in?$AA@
CONST	SEGMENT
??_C@_03DAJLOBIG@?9in?$AA@ DB '-in', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LPHBEAIF@?9outform?$AA@
CONST	SEGMENT
??_C@_08LPHBEAIF@?9outform?$AA@ DB '-outform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGGPPMGB@?9inform?$AA@
CONST	SEGMENT
??_C@_07CGGPPMGB@?9inform?$AA@ DB '-inform', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _rsa_main
_TEXT	SEGMENT
_engine$1$ = -76					; size = 4
_sgckey$1$ = -72					; size = 4
_pubin$1$ = -68						; size = 4
_pubout$1$ = -64					; size = 4
_informat$1$ = -60					; size = 4
_pvk_encr$1$ = -56					; size = 4
_passin$ = -52						; size = 4
_passout$ = -48						; size = 4
_infile$1$ = -44					; size = 4
_check$1$ = -40						; size = 4
_passargout$1$ = -36					; size = 4
_passargin$1$ = -32					; size = 4
_outfile$1$ = -28					; size = 4
_text$1$ = -24						; size = 4
_modulus$1$ = -20					; size = 4
_noout$1$ = -16						; size = 4
_outformat$1$ = -12					; size = 4
_enc$1$ = -8						; size = 4
_prog$1$ = -4						; size = 4
_p$1 = -4						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_rsa_main PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\apps\rsa.c
; Line 102
	mov	eax, 76					; 0000004cH
	call	__chkstk
; Line 110
	xor	eax, eax
; Line 119
	mov	DWORD PTR _pvk_encr$1$[esp+76], 2
	push	ebx
	push	ebp
	xor	ebp, ebp
	mov	DWORD PTR _pubin$1$[esp+84], eax
	push	edi
	mov	DWORD PTR _pubout$1$[esp+88], eax
	xor	edi, edi
	mov	DWORD PTR _passargin$1$[esp+88], eax
	mov	ebx, 1
	mov	DWORD PTR _passargout$1$[esp+88], eax
	mov	DWORD PTR _passin$[esp+88], eax
	mov	DWORD PTR _passout$[esp+88], eax
	mov	DWORD PTR _modulus$1$[esp+88], eax
; Line 123
	mov	eax, DWORD PTR _bio_err
	mov	DWORD PTR _sgckey$1$[esp+88], ebp
	mov	DWORD PTR _enc$1$[esp+88], ebp
	mov	DWORD PTR _text$1$[esp+88], ebp
	mov	DWORD PTR _check$1$[esp+88], ebp
	mov	DWORD PTR _noout$1$[esp+88], ebp
	mov	DWORD PTR _engine$1$[esp+88], edi
	test	eax, eax
	jne	SHORT $LN7@rsa_main
; Line 124
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	DWORD PTR _bio_err, eax
	test	eax, eax
	je	SHORT $LN7@rsa_main
; Line 125
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	16					; 00000010H
	push	106					; 0000006aH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	mov	eax, DWORD PTR _bio_err
	add	esp, 20					; 00000014H
$LN7@rsa_main:
; Line 127
	push	0
	push	eax
	call	_load_config
	add	esp, 8
	test	eax, eax
	je	$LN110@rsa_main
; Line 135
	mov	ebx, DWORD PTR _argv$[esp+84]
	push	esi
; Line 136
	mov	esi, DWORD PTR _argc$[esp+88]
	dec	esi
	mov	DWORD PTR _infile$1$[esp+92], edi
	mov	eax, DWORD PTR [ebx]
; Line 137
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+92], edi
	mov	DWORD PTR _informat$1$[esp+92], 3
	mov	DWORD PTR _outformat$1$[esp+92], 3
	mov	DWORD PTR _prog$1$[esp+92], eax
; Line 138
	cmp	esi, 1
	jl	$LN55@rsa_main
	npad	5
$LL2@rsa_main:
; Line 139
	mov	edi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_07CGGPPMGB@?9inform?$AA@
	mov	eax, edi
	npad	7
$LL133@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN134@rsa_main
	test	dl, dl
	je	SHORT $LN135@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN134@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL133@rsa_main
$LN135@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN136@rsa_main
$LN134@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN136@rsa_main:
	test	eax, eax
	jne	SHORT $LN9@rsa_main
; Line 140
	dec	esi
	cmp	esi, 1
	jl	$bad$220
; Line 142
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _informat$1$[esp+92], eax
	jmp	$LN212@rsa_main
$LN9@rsa_main:
; Line 143
	mov	ecx, OFFSET ??_C@_08LPHBEAIF@?9outform?$AA@
	mov	eax, edi
$LL137@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN138@rsa_main
	test	dl, dl
	je	SHORT $LN139@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN138@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL137@rsa_main
$LN139@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN140@rsa_main
$LN138@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN140@rsa_main:
	test	eax, eax
	jne	SHORT $LN12@rsa_main
; Line 144
	dec	esi
	cmp	esi, 1
	jl	$bad$220
; Line 146
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	_str2fmt
	add	esp, 4
	mov	DWORD PTR _outformat$1$[esp+92], eax
	jmp	$LN212@rsa_main
$LN12@rsa_main:
; Line 147
	mov	ecx, OFFSET ??_C@_03DAJLOBIG@?9in?$AA@
	mov	eax, edi
$LL141@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN142@rsa_main
	test	dl, dl
	je	SHORT $LN143@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN142@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL141@rsa_main
$LN143@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN144@rsa_main
$LN142@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN144@rsa_main:
	test	eax, eax
	jne	SHORT $LN15@rsa_main
; Line 148
	dec	esi
	cmp	esi, 1
	jl	$bad$220
; Line 150
	mov	edx, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _infile$1$[esp+92], edx
	jmp	$LN212@rsa_main
$LN15@rsa_main:
; Line 151
	mov	ecx, OFFSET ??_C@_04HKKABCEL@?9out?$AA@
	mov	eax, edi
	npad	5
$LL145@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN146@rsa_main
	test	dl, dl
	je	SHORT $LN147@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN146@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL145@rsa_main
$LN147@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN148@rsa_main
$LN146@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN148@rsa_main:
	test	eax, eax
	jne	SHORT $LN18@rsa_main
; Line 152
	dec	esi
	cmp	esi, 1
	jl	$bad$220
; Line 154
	mov	edx, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _outfile$1$[esp+92], edx
	jmp	$LN212@rsa_main
$LN18@rsa_main:
; Line 155
	mov	ecx, OFFSET ??_C@_07KMOOHICO@?9passin?$AA@
	mov	eax, edi
	npad	7
$LL149@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN150@rsa_main
	test	dl, dl
	je	SHORT $LN151@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN150@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL149@rsa_main
$LN151@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN152@rsa_main
$LN150@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN152@rsa_main:
	test	eax, eax
	jne	SHORT $LN21@rsa_main
; Line 156
	dec	esi
	cmp	esi, 1
	jl	$bad$220
; Line 158
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _passargin$1$[esp+92], eax
	jmp	$LN212@rsa_main
$LN21@rsa_main:
; Line 159
	mov	ecx, OFFSET ??_C@_08KCDBEMAI@?9passout?$AA@
	mov	eax, edi
	npad	7
$LL153@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN154@rsa_main
	test	dl, dl
	je	SHORT $LN155@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN154@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL153@rsa_main
$LN155@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN156@rsa_main
$LN154@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN156@rsa_main:
	test	eax, eax
	jne	SHORT $LN24@rsa_main
; Line 160
	dec	esi
	cmp	esi, 1
	jl	$bad$220
; Line 162
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _passargout$1$[esp+92], eax
; Line 163
	jmp	$LN212@rsa_main
$LN24@rsa_main:
; Line 165
	mov	ecx, OFFSET ??_C@_07CECBDAGF@?9engine?$AA@
	mov	eax, edi
	npad	7
$LL157@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN158@rsa_main
	test	dl, dl
	je	SHORT $LN159@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN158@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL157@rsa_main
$LN159@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN160@rsa_main
$LN158@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN160@rsa_main:
	test	eax, eax
	jne	SHORT $LN27@rsa_main
; Line 166
	dec	esi
	cmp	esi, 1
	jl	$bad$220
; Line 168
	mov	edi, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _engine$1$[esp+92], edi
; Line 169
	jmp	$LN54@rsa_main
$LN27@rsa_main:
; Line 171
	mov	ecx, OFFSET ??_C@_07LCILBEKO@?9sgckey?$AA@
	mov	eax, edi
	npad	7
$LL161@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN162@rsa_main
	test	dl, dl
	je	SHORT $LN163@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN162@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL161@rsa_main
$LN163@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN164@rsa_main
$LN162@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN164@rsa_main:
	test	eax, eax
	jne	SHORT $LN30@rsa_main
; Line 172
	mov	DWORD PTR _sgckey$1$[esp+92], 1
	jmp	$LN212@rsa_main
$LN30@rsa_main:
; Line 173
	mov	ecx, OFFSET ??_C@_06NLLOJDKN@?9pubin?$AA@
	mov	eax, edi
	npad	3
$LL165@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN166@rsa_main
	test	dl, dl
	je	SHORT $LN167@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN166@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL165@rsa_main
$LN167@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN168@rsa_main
$LN166@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN168@rsa_main:
	test	eax, eax
	jne	SHORT $LN32@rsa_main
; Line 174
	mov	DWORD PTR _pubin$1$[esp+92], 1
	jmp	$LN212@rsa_main
$LN32@rsa_main:
; Line 175
	mov	ecx, OFFSET ??_C@_07NGPHMOHJ@?9pubout?$AA@
	mov	eax, edi
	npad	3
$LL169@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN170@rsa_main
	test	dl, dl
	je	SHORT $LN171@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN170@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL169@rsa_main
$LN171@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN172@rsa_main
$LN170@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN172@rsa_main:
	test	eax, eax
	jne	SHORT $LN34@rsa_main
; Line 176
	mov	DWORD PTR _pubout$1$[esp+92], 1
	jmp	$LN212@rsa_main
$LN34@rsa_main:
; Line 177
	mov	ecx, OFFSET ??_C@_0BB@BLODOEPC@?9RSAPublicKey_in?$AA@
	mov	eax, edi
	npad	3
$LL173@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN174@rsa_main
	test	dl, dl
	je	SHORT $LN175@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN174@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL173@rsa_main
$LN175@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN176@rsa_main
$LN174@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN176@rsa_main:
	test	eax, eax
	jne	SHORT $LN36@rsa_main
; Line 178
	mov	DWORD PTR _pubin$1$[esp+92], 2
	jmp	$LN212@rsa_main
$LN36@rsa_main:
; Line 179
	mov	ecx, OFFSET ??_C@_0BC@CNODNPGL@?9RSAPublicKey_out?$AA@
	mov	eax, edi
	npad	3
$LL177@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN178@rsa_main
	test	dl, dl
	je	SHORT $LN179@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN178@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL177@rsa_main
$LN179@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN180@rsa_main
$LN178@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN180@rsa_main:
	test	eax, eax
	jne	SHORT $LN38@rsa_main
; Line 180
	mov	DWORD PTR _pubout$1$[esp+92], 2
	jmp	$LN212@rsa_main
$LN38@rsa_main:
; Line 181
	mov	ecx, OFFSET ??_C@_0M@HOBFOGIF@?9pvk?9strong?$AA@
	mov	eax, edi
	npad	3
$LL181@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN182@rsa_main
	test	dl, dl
	je	SHORT $LN183@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN182@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL181@rsa_main
$LN183@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN184@rsa_main
$LN182@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN184@rsa_main:
	test	eax, eax
	jne	SHORT $LN40@rsa_main
; Line 182
	mov	DWORD PTR _pvk_encr$1$[esp+92], 2
	jmp	$LN212@rsa_main
$LN40@rsa_main:
; Line 183
	mov	ecx, OFFSET ??_C@_09IGNPGCEJ@?9pvk?9weak?$AA@
	mov	eax, edi
	npad	3
$LL185@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN186@rsa_main
	test	dl, dl
	je	SHORT $LN187@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN186@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL185@rsa_main
$LN187@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN188@rsa_main
$LN186@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN188@rsa_main:
	test	eax, eax
	jne	SHORT $LN42@rsa_main
; Line 184
	mov	DWORD PTR _pvk_encr$1$[esp+92], 1
	jmp	$LN212@rsa_main
$LN42@rsa_main:
; Line 185
	mov	ecx, OFFSET ??_C@_09BBENBNGN@?9pvk?9none?$AA@
	mov	eax, edi
	npad	3
$LL189@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN190@rsa_main
	test	dl, dl
	je	SHORT $LN191@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN190@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL189@rsa_main
$LN191@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN192@rsa_main
$LN190@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN192@rsa_main:
	test	eax, eax
	jne	SHORT $LN44@rsa_main
; Line 186
	mov	DWORD PTR _pvk_encr$1$[esp+92], ebp
	jmp	$LN212@rsa_main
$LN44@rsa_main:
; Line 187
	mov	ecx, OFFSET ??_C@_06JPEJAHHH@?9noout?$AA@
	mov	eax, edi
	npad	7
$LL193@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN194@rsa_main
	test	dl, dl
	je	SHORT $LN195@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN194@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL193@rsa_main
$LN195@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN196@rsa_main
$LN194@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN196@rsa_main:
	test	eax, eax
	jne	SHORT $LN46@rsa_main
; Line 188
	mov	DWORD PTR _noout$1$[esp+92], 1
	jmp	$LN212@rsa_main
$LN46@rsa_main:
; Line 189
	mov	ecx, OFFSET ??_C@_05OEBEIMJA@?9text?$AA@
	mov	eax, edi
	npad	3
$LL197@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN198@rsa_main
	test	dl, dl
	je	SHORT $LN199@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN198@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL197@rsa_main
$LN199@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN200@rsa_main
$LN198@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN200@rsa_main:
	test	eax, eax
	jne	SHORT $LN48@rsa_main
; Line 190
	mov	DWORD PTR _text$1$[esp+92], 1
	jmp	$LN212@rsa_main
$LN48@rsa_main:
; Line 191
	mov	ecx, OFFSET ??_C@_08NJNHONAF@?9modulus?$AA@
	mov	eax, edi
	npad	3
$LL201@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN202@rsa_main
	test	dl, dl
	je	SHORT $LN203@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN202@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL201@rsa_main
$LN203@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN204@rsa_main
$LN202@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN204@rsa_main:
	test	eax, eax
	jne	SHORT $LN50@rsa_main
; Line 192
	mov	DWORD PTR _modulus$1$[esp+92], 1
	jmp	SHORT $LN212@rsa_main
$LN50@rsa_main:
; Line 193
	mov	ecx, OFFSET ??_C@_06CLLLPJIB@?9check?$AA@
	mov	eax, edi
	npad	6
$LL205@rsa_main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN206@rsa_main
	test	dl, dl
	je	SHORT $LN207@rsa_main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN206@rsa_main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL205@rsa_main
$LN207@rsa_main:
	xor	eax, eax
	jmp	SHORT $LN208@rsa_main
$LN206@rsa_main:
	sbb	eax, eax
	or	eax, 1
$LN208@rsa_main:
	test	eax, eax
	jne	SHORT $LN52@rsa_main
; Line 194
	mov	DWORD PTR _check$1$[esp+92], 1
	jmp	SHORT $LN212@rsa_main
$LN52@rsa_main:
; Line 195
	lea	eax, DWORD PTR [edi+1]
	push	eax
	call	_EVP_get_cipherbyname
	add	esp, 4
	mov	DWORD PTR _enc$1$[esp+92], eax
	test	eax, eax
	je	SHORT $LN125@rsa_main
$LN212@rsa_main:
	mov	edi, DWORD PTR _engine$1$[esp+92]
$LN54@rsa_main:
; Line 200
	dec	esi
; Line 201
	add	ebx, 4
	cmp	esi, 1
	jge	$LL2@rsa_main
$LN55@rsa_main:
; Line 255
	call	_ERR_load_crypto_strings
; Line 258
	push	0
	push	edi
	push	DWORD PTR _bio_err
	call	_setup_engine
	mov	edi, eax
; Line 261
	lea	eax, DWORD PTR _passout$[esp+104]
	push	eax
	lea	eax, DWORD PTR _passin$[esp+108]
	push	eax
	push	DWORD PTR _passargout$1$[esp+112]
	push	DWORD PTR _passargin$1$[esp+116]
	push	DWORD PTR _bio_err
	call	_app_passwd
	add	esp, 32					; 00000020H
	test	eax, eax
	jne	$LN56@rsa_main
; Line 262
	push	OFFSET ??_C@_0BJ@GIECAOMO@Error?5getting?5passwords?6?$AA@
; Line 263
	jmp	$LN217@rsa_main
$LN125@rsa_main:
; Line 196
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
$bad$220:
; Line 206
	push	DWORD PTR _prog$1$[esp+92]
	push	OFFSET ??_C@_0BP@OGEEJGDD@?$CFs?5?$FLoptions?$FN?5?$DMinfile?5?$DOoutfile?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 207
	push	OFFSET ??_C@_0BD@KHANLAHK@where?5options?5are?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 208
	push	OFFSET ??_C@_0DE@FMGDDDIO@?5?9inform?5arg?5?5?5?5?5input?5format?5?9?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 210
	push	OFFSET ??_C@_0DF@HDJAAOHH@?5?9outform?5arg?5?5?5?5output?5format?5?9@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 212
	push	OFFSET ??_C@_0BN@CPNHCDE@?5?9in?5arg?5?5?5?5?5?5?5?5?5input?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 213
	push	OFFSET ??_C@_0CJ@IFDJHJBE@?5?9sgckey?5?5?5?5?5?5?5?5?5Use?5IIS?5SGC?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 214
	push	OFFSET ??_C@_0DA@NCOFKKHG@?5?9passin?5arg?5?5?5?5?5input?5file?5pass@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 216
	push	OFFSET ??_C@_0BO@NEOEGBBD@?5?9out?5arg?5?5?5?5?5?5?5?5output?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 68					; 00000044H
; Line 217
	push	OFFSET ??_C@_0DB@GKELOAFE@?5?9passout?5arg?5?5?5?5output?5file?5pas@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 219
	push	OFFSET ??_C@_0DC@FJEDCHJC@?5?9des?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 221
	push	OFFSET ??_C@_0EI@GADKMKGK@?5?9des3?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 224
	push	OFFSET ??_C@_0DD@MNCKNCPN@?5?9idea?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 228
	push	OFFSET ??_C@_0DD@MOHKOOBN@?5?9seed?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 232
	push	OFFSET ??_C@_0BM@MBDDJHIE@?5?9aes128?0?5?9aes192?0?5?9aes256?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 233
	push	OFFSET ??_C@_0DC@NPDCOOCP@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 237
	push	OFFSET ??_C@_0CL@PJKJLP@?5?9camellia128?0?5?9camellia192?0?5?9ca@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 238
	push	OFFSET ??_C@_0DH@MPIIFMKN@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5encrypt?5PEM?5out@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 241
	push	OFFSET ??_C@_0CI@KCMBBMNI@?5?9text?5?5?5?5?5?5?5?5?5?5?5print?5the?5key?5i@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 242
	push	OFFSET ??_C@_0CG@HBBCCFOB@?5?9noout?5?5?5?5?5?5?5?5?5?5don?8t?5print?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 243
	push	OFFSET ??_C@_0CM@IENIFPI@?5?9modulus?5?5?5?5?5?5?5?5print?5the?5RSA?5k@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 244
	push	OFFSET ??_C@_0CJ@HBGLJOIO@?5?9check?5?5?5?5?5?5?5?5?5?5verify?5key?5cons@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 245
	push	OFFSET ??_C@_0DE@BJKEJKAK@?5?9pubin?5?5?5?5?5?5?5?5?5?5expect?5a?5public@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 247
	push	OFFSET ??_C@_0CG@HGPMKHGB@?5?9pubout?5?5?5?5?5?5?5?5?5output?5a?5public@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 249
	push	OFFSET ??_C@_0DM@CHMINMOP@?5?9engine?5e?5?5?5?5?5?5?5use?5engine?5e?0?5p@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 64					; 00000040H
; Line 268
	mov	ebx, 1
	jmp	$LN211@rsa_main
$LN56@rsa_main:
; Line 266
	mov	ebx, DWORD PTR _pubin$1$[esp+92]
	cmp	DWORD PTR _check$1$[esp+92], ebp
	je	SHORT $LN57@rsa_main
	test	ebx, ebx
	je	SHORT $LN57@rsa_main
; Line 267
	push	OFFSET ??_C@_0CC@NEENNMBO@Only?5private?5keys?5can?5be?5checked@
$LN217@rsa_main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 268
	mov	ebx, 1
	jmp	$LN211@rsa_main
$LN57@rsa_main:
; Line 271
	call	_BIO_s_file
	push	eax
	call	_BIO_new
	add	esp, 4
	mov	esi, eax
; Line 276
	test	ebx, ebx
	je	SHORT $LN58@rsa_main
; Line 277
	or	eax, -1
; Line 278
	cmp	ebx, 2
	jne	SHORT $LN60@rsa_main
; Line 279
	mov	ecx, DWORD PTR _informat$1$[esp+92]
	cmp	ecx, 3
	jne	SHORT $LN62@rsa_main
; Line 280
	lea	eax, DWORD PTR [ebx+7]
	jmp	SHORT $LN65@rsa_main
$LN62@rsa_main:
; Line 281
	cmp	ecx, 1
	jne	SHORT $LN65@rsa_main
; Line 282
	lea	eax, DWORD PTR [ecx+9]
; Line 283
	jmp	SHORT $LN65@rsa_main
$LN60@rsa_main:
	mov	eax, DWORD PTR _informat$1$[esp+92]
	cmp	eax, 4
	jne	SHORT $LN65@rsa_main
	cmp	DWORD PTR _sgckey$1$[esp+92], ebp
	je	SHORT $LN65@rsa_main
; Line 284
	mov	eax, 8
$LN65@rsa_main:
; Line 288
	push	OFFSET ??_C@_0L@KEAMIOLD@Public?5Key?$AA@
	push	edi
	push	DWORD PTR _passin$[esp+100]
	push	1
	push	eax
	push	DWORD PTR _infile$1$[esp+112]
	push	DWORD PTR _bio_err
	call	_load_pubkey
; Line 290
	jmp	SHORT $LN213@rsa_main
$LN58@rsa_main:
; Line 291
	mov	eax, DWORD PTR _informat$1$[esp+92]
	cmp	eax, 4
	jne	SHORT $LN114@rsa_main
	cmp	DWORD PTR _sgckey$1$[esp+92], ebp
	je	SHORT $LN114@rsa_main
	mov	eax, 8
$LN114@rsa_main:
	push	OFFSET ??_C@_0M@NBDOOMPD@Private?5Key?$AA@
	push	edi
	push	DWORD PTR _passin$[esp+100]
	push	1
	push	eax
	push	DWORD PTR _infile$1$[esp+112]
	push	DWORD PTR _bio_err
	call	_load_key
$LN213@rsa_main:
	mov	edi, eax
	add	esp, 28					; 0000001cH
; Line 296
	test	edi, edi
	je	SHORT $LN67@rsa_main
; Line 297
	push	edi
	call	_EVP_PKEY_get1_RSA
	add	esp, 4
	mov	ebp, eax
$LN67@rsa_main:
; Line 298
	push	edi
	call	_EVP_PKEY_free
	add	esp, 4
; Line 301
	test	ebp, ebp
	jne	SHORT $LN68@rsa_main
$LN80@rsa_main:
; Line 302
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 303
	mov	ebx, 1
	jmp	$end$221
$LN68@rsa_main:
; Line 306
	mov	edi, DWORD PTR _outfile$1$[esp+92]
	test	edi, edi
	jne	SHORT $LN69@rsa_main
; Line 307
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	push	eax
	push	edi
	push	106					; 0000006aH
	push	esi
	call	_BIO_ctrl
	add	esp, 20					; 00000014H
$LN71@rsa_main:
; Line 321
	cmp	DWORD PTR _text$1$[esp+92], 0
	je	SHORT $LN73@rsa_main
; Line 322
	push	0
	push	ebp
	push	esi
	call	_RSA_print
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN73@rsa_main
; Line 323
	push	edi
	call	DWORD PTR __imp__perror
; Line 324
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 8
; Line 325
	mov	ebx, 1
	jmp	$end$221
$LN69@rsa_main:
; Line 315
	push	edi
	push	5
	push	108					; 0000006cH
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	jg	SHORT $LN71@rsa_main
; Line 316
	push	edi
	call	DWORD PTR __imp__perror
	add	esp, 4
; Line 317
	mov	ebx, 1
	jmp	$end$221
$LN73@rsa_main:
; Line 328
	cmp	DWORD PTR _modulus$1$[esp+92], 0
	je	SHORT $LN74@rsa_main
; Line 329
	push	OFFSET ??_C@_08CHIKBNMH@Modulus?$DN?$AA@
	push	esi
	call	_BIO_printf
; Line 330
	push	DWORD PTR [ebp+16]
	push	esi
	call	_BN_print
; Line 331
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 24					; 00000018H
$LN74@rsa_main:
; Line 334
	cmp	DWORD PTR _check$1$[esp+92], 0
	je	$LN79@rsa_main
; Line 335
	push	ebp
	call	_RSA_check_key
	add	esp, 4
; Line 337
	cmp	eax, 1
	jne	SHORT $LN76@rsa_main
; Line 338
	push	OFFSET ??_C@_0M@CCHECPKH@RSA?5key?5ok?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 8
	jmp	SHORT $LN132@rsa_main
$LN76@rsa_main:
; Line 339
	test	eax, eax
	jne	SHORT $LN5@rsa_main
; Line 344
	call	_ERR_peek_error
	mov	ecx, eax
	test	ecx, ecx
	je	SHORT $LN132@rsa_main
	npad	1
$LL4@rsa_main:
	mov	eax, ecx
	and	eax, -16777216				; ff000000H
	cmp	eax, 67108864				; 04000000H
	jne	SHORT $LN132@rsa_main
	mov	eax, ecx
	and	eax, 16773120				; 00fff000H
	cmp	eax, 503808				; 0007b000H
	jne	SHORT $LN132@rsa_main
	mov	eax, ecx
	and	eax, 4095				; 00000fffH
	cmp	eax, 65					; 00000041H
	je	SHORT $LN132@rsa_main
; Line 346
	push	ecx
	call	_ERR_reason_error_string
	push	eax
	push	OFFSET ??_C@_0BD@CNFIPBIH@RSA?5key?5error?3?5?$CFs?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 16					; 00000010H
; Line 348
	call	_ERR_get_error
	call	_ERR_peek_error
	mov	ecx, eax
	test	ecx, ecx
	jne	SHORT $LL4@rsa_main
; Line 352
	jmp	SHORT $LN132@rsa_main
$LN5@rsa_main:
	cmp	eax, -1
	je	$LN80@rsa_main
$LN132@rsa_main:
	call	_ERR_peek_error
	test	eax, eax
	jne	$LN80@rsa_main
$LN79@rsa_main:
; Line 359
	cmp	DWORD PTR _noout$1$[esp+92], 0
	jne	$LN107@rsa_main
; Line 363
	push	OFFSET ??_C@_0BB@LCMALHAP@writing?5RSA?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 364
	mov	edi, DWORD PTR _outformat$1$[esp+100]
	add	esp, 8
	cmp	edi, 1
	jne	SHORT $LN82@rsa_main
; Line 365
	mov	eax, DWORD PTR _pubout$1$[esp+92]
	test	eax, eax
	jne	SHORT $LN86@rsa_main
	test	ebx, ebx
	jne	SHORT $LN87@rsa_main
; Line 371
	push	ebp
	push	esi
	call	_i2d_RSAPrivateKey_bio
	add	esp, 8
	mov	edi, eax
	jmp	$LN100@rsa_main
$LN86@rsa_main:
; Line 366
	cmp	eax, 2
	jne	SHORT $LN87@rsa_main
; Line 367
	push	ebp
	push	esi
	call	_i2d_RSAPublicKey_bio
	add	esp, 8
	mov	edi, eax
	jmp	$LN100@rsa_main
$LN87@rsa_main:
; Line 369
	push	ebp
	push	esi
	call	_i2d_RSA_PUBKEY_bio
	add	esp, 8
	mov	edi, eax
; Line 372
	jmp	$LN100@rsa_main
$LN82@rsa_main:
; Line 374
	cmp	edi, 4
	jne	$LN89@rsa_main
; Line 379
	push	DWORD PTR _sgckey$1$[esp+92]
	push	0
	push	0
	push	ebp
	call	_i2d_RSA_NET
; Line 380
	push	380					; 0000017cH
	mov	ebx, eax
	push	OFFSET ??_C@_0N@NGHJAGIN@?4?2apps?2rsa?4c?$AA@
	push	ebx
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _p$1[esp+92], edi
	test	edi, edi
	jne	SHORT $LN91@rsa_main
; Line 381
	push	OFFSET ??_C@_0BL@GIPEOCEI@Memory?5allocation?5failure?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	lea	ebx, DWORD PTR [edi+1]
	jmp	SHORT $end$221
$LN91@rsa_main:
; Line 385
	push	DWORD PTR _sgckey$1$[esp+92]
	lea	eax, DWORD PTR _p$1[esp+96]
	push	0
	push	eax
	push	ebp
	call	_i2d_RSA_NET
; Line 386
	push	ebx
	push	edi
	push	esi
	call	_BIO_write
; Line 387
	push	edi
	call	_CRYPTO_free
	add	esp, 32					; 00000020H
$LN107@rsa_main:
; Line 420
	xor	ebx, ebx
$end$221:
; Line 422
	test	esi, esi
	je	SHORT $LN109@rsa_main
; Line 423
	push	esi
	call	_BIO_free_all
	add	esp, 4
$LN109@rsa_main:
; Line 424
	test	ebp, ebp
	je	SHORT $LN211@rsa_main
; Line 425
	push	ebp
	call	_RSA_free
	add	esp, 4
$LN211@rsa_main:
	pop	esi
$LN110@rsa_main:
; Line 426
	mov	eax, DWORD PTR _passin$[esp+88]
	test	eax, eax
	je	SHORT $LN111@rsa_main
; Line 427
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN111@rsa_main:
; Line 428
	mov	ecx, DWORD PTR _passout$[esp+88]
	test	ecx, ecx
	je	SHORT $LN209@rsa_main
; Line 429
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN209@rsa_main:
; Line 431
	pop	edi
	pop	ebp
	mov	eax, ebx
	pop	ebx
; Line 432
	add	esp, 76					; 0000004cH
	ret	0
$LN89@rsa_main:
; Line 390
	cmp	edi, 3
	jne	SHORT $LN92@rsa_main
; Line 391
	mov	eax, DWORD PTR _pubout$1$[esp+92]
	test	eax, eax
	jne	SHORT $LN96@rsa_main
	test	ebx, ebx
	jne	SHORT $LN97@rsa_main
; Line 397
	push	DWORD PTR _passout$[esp+92]
	push	ebx
	push	ebx
	push	ebx
	push	DWORD PTR _enc$1$[esp+108]
	push	ebp
	push	esi
	call	_PEM_write_bio_RSAPrivateKey
	add	esp, 28					; 0000001cH
	mov	edi, eax
	jmp	$LN100@rsa_main
$LN96@rsa_main:
; Line 392
	cmp	eax, 2
	jne	SHORT $LN97@rsa_main
; Line 393
	push	ebp
	push	esi
	call	_PEM_write_bio_RSAPublicKey
	add	esp, 8
	mov	edi, eax
	jmp	$LN100@rsa_main
$LN97@rsa_main:
; Line 395
	push	ebp
	push	esi
	call	_PEM_write_bio_RSA_PUBKEY
	add	esp, 8
	mov	edi, eax
; Line 400
	jmp	SHORT $LN100@rsa_main
$LN92@rsa_main:
	cmp	edi, 11					; 0000000bH
	je	SHORT $LN101@rsa_main
	cmp	edi, 12					; 0000000cH
	je	SHORT $LN101@rsa_main
; Line 413
	push	OFFSET ??_C@_0CJ@JNEPIEPI@bad?5output?5format?5specified?5for?5@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	mov	ebx, 1
	jmp	$end$221
$LN101@rsa_main:
; Line 402
	call	_EVP_PKEY_new
	mov	ebx, eax
; Line 403
	push	ebp
	push	ebx
	call	_EVP_PKEY_set1_RSA
	add	esp, 8
; Line 404
	cmp	edi, 12					; 0000000cH
	jne	SHORT $LN102@rsa_main
; Line 405
	push	DWORD PTR _passout$[esp+92]
	push	0
	push	DWORD PTR _pvk_encr$1$[esp+100]
	push	ebx
	push	esi
	call	_i2b_PVK_bio
	add	esp, 20					; 00000014H
	jmp	SHORT $LN214@rsa_main
$LN102@rsa_main:
; Line 406
	mov	eax, DWORD PTR _pubin$1$[esp+92]
	test	eax, eax
	jne	SHORT $LN106@rsa_main
	cmp	DWORD PTR _pubout$1$[esp+92], eax
	jne	SHORT $LN106@rsa_main
; Line 409
	push	ebx
	push	esi
	call	_i2b_PrivateKey_bio
	jmp	SHORT $LN215@rsa_main
$LN106@rsa_main:
; Line 407
	push	ebx
	push	esi
	call	_i2b_PublicKey_bio
$LN215@rsa_main:
	add	esp, 8
$LN214@rsa_main:
; Line 410
	push	ebx
	mov	edi, eax
	call	_EVP_PKEY_free
	add	esp, 4
$LN100@rsa_main:
; Line 416
	test	edi, edi
	jg	$LN107@rsa_main
; Line 417
	push	OFFSET ??_C@_0BF@PMEBFKMI@unable?5to?5write?5key?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 418
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
	mov	ebx, 1
	jmp	$end$221
_rsa_main ENDP
_TEXT	ENDS
END

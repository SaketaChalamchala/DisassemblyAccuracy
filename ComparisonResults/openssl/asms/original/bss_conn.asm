; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@GJDBGGFH@socket?5connect?$AA@		; `string'
;	COMDAT ??_C@_0P@GJDBGGFH@socket?5connect?$AA@
CONST	SEGMENT
??_C@_0P@GJDBGGFH@socket?5connect?$AA@ DB 'socket connect', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_methods_connectp DD 050cH
	DD	FLAT:??_C@_0P@GJDBGGFH@socket?5connect?$AA@
	DD	FLAT:_conn_write
	DD	FLAT:_conn_read
	DD	FLAT:_conn_puts
	DD	00H
	DD	FLAT:_conn_ctrl
	DD	FLAT:_conn_new
	DD	FLAT:_conn_free
	DD	FLAT:_conn_callback_ctrl
_DATA	ENDS
PUBLIC	_BIO_s_connect
PUBLIC	_BIO_new_connect
PUBLIC	_BIO_CONNECT_new
PUBLIC	_BIO_CONNECT_free
PUBLIC	??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@ ; `string'
PUBLIC	??_C@_05PBGCLELH@host?$DN?$AA@			; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3?$AA@			; `string'
PUBLIC	??_C@_0BA@CJBGKJNL@not?5initialized?$AA@	; `string'
PUBLIC	??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd?$AA@ ; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
EXTRN	__imp__closesocket@4:PROC
EXTRN	__imp__connect@12:PROC
EXTRN	__imp__htonl@4:PROC
EXTRN	__imp__htons@4:PROC
EXTRN	__imp__recv@16:PROC
EXTRN	__imp__send@16:PROC
EXTRN	__imp__setsockopt@20:PROC
EXTRN	__imp__shutdown@8:PROC
EXTRN	__imp__socket@12:PROC
EXTRN	__imp__WSASetLastError@4:PROC
EXTRN	__imp__WSAGetLastError@0:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_BIO_set_flags:PROC
EXTRN	_BIO_clear_flags:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_callback_ctrl:PROC
EXTRN	_BIO_sock_should_retry:PROC
EXTRN	_BIO_sock_error:PROC
EXTRN	_BIO_socket_nbio:PROC
EXTRN	_BIO_get_port:PROC
EXTRN	_BIO_get_host_ip:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_add_error_data:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd?$AA@
CONST	SEGMENT
??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd?$AA@ DB '%d.%d.%d.%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CJBGKJNL@not?5initialized?$AA@
CONST	SEGMENT
??_C@_0BA@CJBGKJNL@not?5initialized?$AA@ DB 'not initialized', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3?$AA@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PBGCLELH@host?$DN?$AA@
CONST	SEGMENT
??_C@_05PBGCLELH@host?$DN?$AA@ DB 'host=', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
CONST	SEGMENT
??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@ DB '.\crypto\bio\bss'
	DB	'_conn.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_CONNECT_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_BIO_CONNECT_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 313
	push	esi
; Line 314
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	je	SHORT $LN1@BIO_CONNEC
; Line 317
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN3@BIO_CONNEC
; Line 318
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN3@BIO_CONNEC:
; Line 319
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN4@BIO_CONNEC
; Line 320
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN4@BIO_CONNEC:
; Line 321
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN1@BIO_CONNEC:
	pop	esi
; Line 322
	ret	0
_BIO_CONNECT_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_CONNECT_new
_TEXT	SEGMENT
_BIO_CONNECT_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 296
	push	296					; 00000128H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	push	44					; 0000002cH
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@BIO_CONNEC
; Line 310
	ret	0
$LN2@BIO_CONNEC:
; Line 298
	mov	DWORD PTR [eax], 1
	xorps	xmm0, xmm0
; Line 299
	mov	DWORD PTR [eax+4], 0
; Line 300
	mov	DWORD PTR [eax+8], 0
; Line 301
	mov	DWORD PTR [eax+40], 0
; Line 302
	mov	DWORD PTR [eax+12], 0
; Line 303
	mov	WORD PTR [eax+16], 0
; Line 305
	mov	DWORD PTR [eax+18], 0
; Line 308
	movups	XMMWORD PTR [eax+24], xmm0
; Line 310
	ret	0
_BIO_CONNECT_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conn_close_socket
_TEXT	SEGMENT
_bio$ = 8						; size = 4
_conn_close_socket PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 341
	push	esi
; Line 345
	mov	esi, DWORD PTR _bio$[esp]
	mov	ecx, DWORD PTR [esi+28]
	cmp	ecx, -1
	je	SHORT $LN2@conn_close
; Line 347
	mov	eax, DWORD PTR [esi+32]
	cmp	DWORD PTR [eax], 6
	jne	SHORT $LN3@conn_close
; Line 348
	push	2
	push	ecx
	call	DWORD PTR __imp__shutdown@8
$LN3@conn_close:
; Line 349
	push	DWORD PTR [esi+28]
	call	DWORD PTR __imp__closesocket@4
; Line 350
	mov	DWORD PTR [esi+28], -1
$LN2@conn_close:
	pop	esi
; Line 352
	ret	0
_conn_close_socket ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conn_state
_TEXT	SEGMENT
_cb$2$ = -4						; size = 4
_b$ = 8							; size = 4
_i$ = 12						; size = 4
_c$ = 12						; size = 4
_conn_state PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 125
	mov	eax, 4
	call	__chkstk
	push	ebx
	push	ebp
; Line 135
	mov	ebp, DWORD PTR _b$[esp+8]
	or	ebx, -1
	push	esi
	push	edi
	mov	edi, DWORD PTR _c$[esp+16]
	xor	esi, esi
	mov	eax, DWORD PTR [edi+40]
	test	eax, eax
	cmovne	esi, eax
	mov	DWORD PTR _cb$2$[esp+20], esi
$LN47@conn_state:
	mov	eax, DWORD PTR [edi]
	dec	eax
	cmp	eax, 7
	ja	$exit_loop$82
	mov	ecx, 2
	jmp	DWORD PTR $LN81@conn_state[eax*4]
$LN14@conn_state:
; Line 137
	mov	esi, DWORD PTR [edi+4]
; Line 138
	test	esi, esi
	je	$LN55@conn_state
; Line 142
	cmp	BYTE PTR [esi], 0
	je	SHORT $LN77@conn_state
	npad	1
$LL9@conn_state:
; Line 143
	mov	al, BYTE PTR [esi]
	cmp	al, 58					; 0000003aH
	je	SHORT $LN77@conn_state
	cmp	al, 47					; 0000002fH
	je	SHORT $LN77@conn_state
; Line 142
	inc	esi
	cmp	BYTE PTR [esi], 0
	jne	SHORT $LL9@conn_state
$LN77@conn_state:
; Line 147
	movsx	eax, BYTE PTR [esi]
	mov	DWORD PTR _i$[esp+16], eax
; Line 148
	cmp	eax, 58					; 0000003aH
	je	SHORT $LN19@conn_state
	cmp	eax, 47					; 0000002fH
	jne	SHORT $LN20@conn_state
$LN19@conn_state:
; Line 150
	mov	BYTE PTR [esi], 0
	inc	esi
; Line 151
	cmp	DWORD PTR _i$[esp+16], 58		; 0000003aH
	jne	SHORT $LN20@conn_state
; Line 152
	cmp	BYTE PTR [esi], 0
	mov	eax, esi
	je	SHORT $LN11@conn_state
$LL12@conn_state:
; Line 153
	cmp	BYTE PTR [eax], 47			; 0000002fH
	je	SHORT $LN54@conn_state
; Line 152
	inc	eax
	cmp	BYTE PTR [eax], 0
	jne	SHORT $LL12@conn_state
; Line 279
	jmp	SHORT $LN11@conn_state
$LN54@conn_state:
; Line 154
	mov	BYTE PTR [eax], 0
$LN11@conn_state:
; Line 157
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN22@conn_state
; Line 158
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN22@conn_state:
; Line 159
	push	esi
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR [edi+8], eax
$LN20@conn_state:
; Line 163
	cmp	DWORD PTR [edi+8], 0
	je	$LN56@conn_state
; Line 169
	mov	esi, DWORD PTR _cb$2$[esp+20]
	mov	DWORD PTR [edi], 2
	jmp	$LN43@conn_state
$LN24@conn_state:
; Line 172
	lea	eax, DWORD PTR [edi+16]
	push	eax
	push	DWORD PTR [edi+4]
	call	_BIO_get_host_ip
	add	esp, 8
	test	eax, eax
	jle	$exit_loop$82
; Line 174
	mov	DWORD PTR [edi], 3
; Line 175
	jmp	$LN43@conn_state
$LN26@conn_state:
; Line 178
	mov	ecx, DWORD PTR [edi+8]
	test	ecx, ecx
	je	$exit_loop$82
; Line 181
	lea	eax, DWORD PTR [edi+20]
	push	eax
	push	ecx
	call	_BIO_get_port
	add	esp, 8
	test	eax, eax
	jle	$exit_loop$82
; Line 183
	mov	DWORD PTR [edi], 4
; Line 184
	jmp	$LN43@conn_state
$LN30@conn_state:
	xorps	xmm0, xmm0
; Line 188
	movups	XMMWORD PTR [edi+24], xmm0
; Line 190
	movzx	eax, WORD PTR [edi+20]
	push	eax
	mov	WORD PTR [edi+24], cx
	call	DWORD PTR __imp__htons@4
	mov	WORD PTR [edi+26], ax
; Line 191
	movzx	ecx, BYTE PTR [edi+16]
	movzx	eax, BYTE PTR [edi+17]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edi+18]
	shl	ecx, 8
	or	ecx, eax
	movzx	eax, BYTE PTR [edi+19]
	shl	ecx, 8
	or	ecx, eax
; Line 195
	push	ecx
	call	DWORD PTR __imp__htonl@4
; Line 198
	push	6
	push	1
	push	2
	mov	DWORD PTR [edi+28], eax
	mov	DWORD PTR [edi], 4
	call	DWORD PTR __imp__socket@12
	mov	ebx, eax
; Line 199
	cmp	ebx, -1
	je	$LN60@conn_state
; Line 206
	mov	DWORD PTR [ebp+28], ebx
; Line 207
	mov	DWORD PTR [edi], 8
; Line 208
	jmp	$LN43@conn_state
$LN32@conn_state:
; Line 211
	cmp	DWORD PTR [edi+12], 0
	je	SHORT $LN34@conn_state
; Line 212
	push	1
	push	DWORD PTR [ebp+28]
	call	_BIO_socket_nbio
	add	esp, 8
	test	eax, eax
	je	$LN61@conn_state
$LN34@conn_state:
; Line 223
	push	4
	lea	eax, DWORD PTR _i$[esp+20]
	mov	DWORD PTR [edi], 5
	push	eax
	push	8
	push	65535					; 0000ffffH
	push	DWORD PTR [ebp+28]
	mov	DWORD PTR _i$[esp+36], 1
	call	DWORD PTR __imp__setsockopt@20
	mov	DWORD PTR _i$[esp+16], eax
; Line 225
	test	eax, eax
	jns	$LN43@conn_state
; Line 226
	push	226					; 000000e2H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	4
	push	2
	call	_ERR_put_error
; Line 227
	push	DWORD PTR [edi+8]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	DWORD PTR [edi+4]
	push	OFFSET ??_C@_05PBGCLELH@host?$DN?$AA@
	push	4
	call	_ERR_add_error_data
; Line 229
	push	229					; 000000e5H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	push	109					; 0000006dH
	push	115					; 00000073H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 60					; 0000003cH
; Line 230
	jmp	$exit_loop$82
$LN36@conn_state:
; Line 236
	push	15					; 0000000fH
	push	ebp
	call	_BIO_clear_flags
	add	esp, 8
; Line 237
	lea	eax, DWORD PTR [edi+24]
	push	16					; 00000010H
	push	eax
	push	DWORD PTR [ebp+28]
	call	DWORD PTR __imp__connect@12
	mov	ebx, eax
; Line 239
	mov	DWORD PTR [ebp+24], 0
; Line 240
	test	ebx, ebx
	jns	SHORT $LN78@conn_state
; Line 241
	push	ebx
	call	_BIO_sock_should_retry
	add	esp, 4
	test	eax, eax
	je	$LN39@conn_state
; Line 242
	push	12					; 0000000cH
	push	ebp
	call	_BIO_set_flags
; Line 243
	mov	DWORD PTR [edi], 7
	add	esp, 8
; Line 244
	mov	DWORD PTR [ebp+24], 2
; Line 245
	jmp	$exit_loop$82
$LN41@conn_state:
; Line 257
	push	DWORD PTR [ebp+28]
	call	_BIO_sock_error
	add	esp, 4
	mov	DWORD PTR _i$[esp+16], eax
; Line 258
	test	eax, eax
	jne	$LN64@conn_state
$LN78@conn_state:
; Line 267
	mov	DWORD PTR [edi], 6
$LN43@conn_state:
; Line 278
	test	esi, esi
	je	$LN47@conn_state
; Line 279
	push	ebx
	push	DWORD PTR [edi]
	push	ebp
	call	esi
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jne	$LN47@conn_state
$LN75@conn_state:
; Line 289
	mov	eax, ebx
$end$83:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 290
	pop	ecx
	ret	0
$LN56@conn_state:
; Line 164
	push	164					; 000000a4H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	push	114					; 00000072H
	push	115					; 00000073H
	push	32					; 00000020H
	call	_ERR_put_error
; Line 165
	push	DWORD PTR [edi+4]
	push	OFFSET ??_C@_05PBGCLELH@host?$DN?$AA@
	push	2
	call	_ERR_add_error_data
; Line 166
	mov	esi, DWORD PTR _cb$2$[esp+52]
	add	esp, 32					; 00000020H
	jmp	$exit_loop$82
$LN55@conn_state:
; Line 139
	push	139					; 0000008bH
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	push	112					; 00000070H
	push	115					; 00000073H
	push	32					; 00000020H
	call	_ERR_put_error
; Line 140
	mov	esi, DWORD PTR _cb$2$[esp+40]
	add	esp, 20					; 00000014H
	jmp	$exit_loop$82
$LN60@conn_state:
; Line 200
	push	200					; 000000c8H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	4
	push	2
	call	_ERR_put_error
; Line 201
	push	DWORD PTR [edi+8]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	DWORD PTR [edi+4]
	push	OFFSET ??_C@_05PBGCLELH@host?$DN?$AA@
	push	4
	call	_ERR_add_error_data
; Line 203
	push	203					; 000000cbH
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	push	118					; 00000076H
	push	115					; 00000073H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 60					; 0000003cH
; Line 204
	jmp	$exit_loop$82
$LN61@conn_state:
; Line 213
	push	213					; 000000d5H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	push	104					; 00000068H
	push	115					; 00000073H
	push	32					; 00000020H
	call	_ERR_put_error
; Line 214
	push	DWORD PTR [edi+8]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	DWORD PTR [edi+4]
	push	OFFSET ??_C@_05PBGCLELH@host?$DN?$AA@
	push	4
	call	_ERR_add_error_data
	add	esp, 40					; 00000028H
; Line 216
	jmp	$exit_loop$82
$LN39@conn_state:
; Line 246
	push	246					; 000000f6H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	call	DWORD PTR __imp__WSAGetLastError@0
	push	eax
	push	2
	push	2
	call	_ERR_put_error
; Line 247
	push	DWORD PTR [edi+8]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	DWORD PTR [edi+4]
	push	OFFSET ??_C@_05PBGCLELH@host?$DN?$AA@
	push	4
	call	_ERR_add_error_data
; Line 249
	push	249					; 000000f9H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	push	103					; 00000067H
	push	115					; 00000073H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 60					; 0000003cH
; Line 251
	jmp	SHORT $exit_loop$82
$LN64@conn_state:
; Line 259
	push	15					; 0000000fH
	push	ebp
	call	_BIO_clear_flags
; Line 260
	push	260					; 00000104H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	push	DWORD PTR _i$[esp+32]
	push	2
	push	2
	call	_ERR_put_error
; Line 261
	push	DWORD PTR [edi+8]
	push	OFFSET ??_C@_01JLIPDDHJ@?3?$AA@
	push	DWORD PTR [edi+4]
	push	OFFSET ??_C@_05PBGCLELH@host?$DN?$AA@
	push	4
	call	_ERR_add_error_data
; Line 263
	push	263					; 00000107H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	push	110					; 0000006eH
	push	115					; 00000073H
	push	32					; 00000020H
	call	_ERR_put_error
	add	esp, 68					; 00000044H
; Line 264
	xor	ebx, ebx
; Line 265
	jmp	SHORT $exit_loop$82
$LN44@conn_state:
; Line 271
	mov	ebx, 1
$exit_loop$82:
; Line 286
	test	esi, esi
	je	$LN75@conn_state
; Line 287
	push	ebx
	push	DWORD PTR [edi]
	push	ebp
	call	esi
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 290
	pop	ecx
	ret	0
	npad	2
$LN81@conn_state:
	DD	$LN14@conn_state
	DD	$LN24@conn_state
	DD	$LN26@conn_state
	DD	$LN30@conn_state
	DD	$LN36@conn_state
	DD	$LN44@conn_state
	DD	$LN41@conn_state
	DD	$LN32@conn_state
_conn_state ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conn_callback_ctrl
_TEXT	SEGMENT
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_fp$ = 16						; size = 4
_conn_callback_ctrl PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 574
	cmp	DWORD PTR _cmd$[esp-4], 14		; 0000000eH
	je	SHORT $LN4@conn_callb
; Line 585
	xor	eax, eax
; Line 586
	ret	0
$LN4@conn_callb:
; Line 577
	mov	ecx, DWORD PTR _b$[esp-4]
; Line 585
	mov	eax, 1
	mov	edx, DWORD PTR [ecx+32]
	mov	ecx, DWORD PTR _fp$[esp-4]
	mov	DWORD PTR [edx+40], ecx
; Line 586
	ret	0
_conn_callback_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conn_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_conn_free PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 355
	push	esi
; Line 358
	mov	esi, DWORD PTR _a$[esp]
	test	esi, esi
	jne	SHORT $LN2@conn_free
; Line 359
	xor	eax, eax
	pop	esi
; Line 370
	ret	0
$LN2@conn_free:
; Line 362
	cmp	DWORD PTR [esi+16], 0
	push	edi
	mov	edi, DWORD PTR [esi+32]
	je	SHORT $LN3@conn_free
; Line 345
	mov	eax, DWORD PTR [esi+28]
	cmp	eax, -1
	je	SHORT $LN6@conn_free
; Line 347
	cmp	DWORD PTR [edi], 6
	jne	SHORT $LN7@conn_free
; Line 348
	push	2
	push	eax
	call	DWORD PTR __imp__shutdown@8
$LN7@conn_free:
; Line 349
	push	DWORD PTR [esi+28]
	call	DWORD PTR __imp__closesocket@4
; Line 350
	mov	DWORD PTR [esi+28], -1
$LN6@conn_free:
; Line 314
	test	edi, edi
	je	SHORT $LN9@conn_free
; Line 317
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN11@conn_free
; Line 318
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN11@conn_free:
; Line 319
	mov	eax, DWORD PTR [edi+8]
	test	eax, eax
	je	SHORT $LN12@conn_free
; Line 320
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN12@conn_free:
; Line 321
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN9@conn_free:
; Line 365
	mov	DWORD PTR [esi+32], 0
; Line 366
	mov	DWORD PTR [esi+20], 0
; Line 367
	mov	DWORD PTR [esi+12], 0
$LN3@conn_free:
; Line 369
	pop	edi
	mov	eax, 1
	pop	esi
; Line 370
	ret	0
_conn_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conn_new
_TEXT	SEGMENT
_bi$ = 8						; size = 4
_conn_new PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 330
	push	esi
; Line 331
	mov	esi, DWORD PTR _bi$[esp]
; Line 296
	push	296					; 00000128H
	push	OFFSET ??_C@_0BI@GOGCPGDN@?4?2crypto?2bio?2bss_conn?4c?$AA@
	push	44					; 0000002cH
; Line 331
	mov	DWORD PTR [esi+12], 0
; Line 332
	mov	DWORD PTR [esi+28], -1
; Line 333
	mov	DWORD PTR [esi+20], 0
; Line 296
	call	_CRYPTO_malloc
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	test	ecx, ecx
	jne	SHORT $LN6@conn_new
; Line 334
	test	ecx, ecx
	mov	DWORD PTR [esi+32], ecx
	pop	esi
	setne	al
; Line 338
	ret	0
$LN6@conn_new:
; Line 298
	mov	DWORD PTR [ecx], 1
; Line 334
	xor	eax, eax
; Line 299
	mov	DWORD PTR [ecx+4], 0
	xorps	xmm0, xmm0
; Line 300
	mov	DWORD PTR [ecx+8], 0
; Line 334
	test	ecx, ecx
; Line 301
	mov	DWORD PTR [ecx+40], 0
; Line 302
	mov	DWORD PTR [ecx+12], 0
; Line 334
	setne	al
; Line 303
	mov	WORD PTR [ecx+16], 0
; Line 305
	mov	DWORD PTR [ecx+18], 0
; Line 308
	movups	XMMWORD PTR [ecx+24], xmm0
; Line 334
	mov	DWORD PTR [esi+32], ecx
	pop	esi
; Line 338
	ret	0
_conn_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conn_ctrl
_TEXT	SEGMENT
_buf$1 = -20						; size = 13
_buf$2 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_b$ = 8							; size = 4
_cmd$ = 12						; size = 4
_num$ = 16						; size = 4
_ptr$ = 20						; size = 4
_conn_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 419
	mov	eax, 20					; 00000014H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+20], eax
; Line 428
	mov	eax, DWORD PTR _cmd$[esp+16]
	xor	ecx, ecx
	push	ebx
	mov	ebx, DWORD PTR _ptr$[esp+20]
	dec	eax
	push	ebp
	mov	ebp, DWORD PTR _b$[esp+24]
	push	esi
	push	edi
	lea	edi, DWORD PTR [ecx+1]
	mov	esi, DWORD PTR [ebp+32]
	cmp	eax, 122				; 0000007aH
	ja	$LN48@conn_ctrl
	movzx	eax, BYTE PTR $LN50@conn_ctrl[eax]
	jmp	DWORD PTR $LN53@conn_ctrl[eax*4]
$LN4@conn_ctrl:
; Line 432
	push	ebp
	xor	edi, edi
	mov	DWORD PTR [esi], 1
	call	_conn_close_socket
	add	esp, 4
; Line 433
	mov	DWORD PTR [ebp+20], edi
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN5@conn_ctrl:
; Line 437
	cmp	DWORD PTR [esi], 6
	je	$LN2@conn_ctrl
; Line 438
	push	esi
	push	ebp
	call	_conn_state
	add	esp, 8
	mov	edi, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN8@conn_ctrl:
; Line 443
	test	ebx, ebx
	cmovne	ecx, ebx
; Line 447
	cmp	DWORD PTR [ebp+12], 0
	je	$LN10@conn_ctrl
; Line 448
	mov	eax, DWORD PTR _num$[esp+32]
	test	ecx, ecx
	je	SHORT $LN18@conn_ctrl
; Line 450
	test	eax, eax
	jne	SHORT $LN13@conn_ctrl
; Line 451
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [ecx], eax
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN13@conn_ctrl:
; Line 452
	cmp	eax, 1
	jne	SHORT $LN15@conn_ctrl
; Line 453
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR [ecx], eax
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN15@conn_ctrl:
; Line 454
	cmp	eax, 2
	jne	SHORT $LN17@conn_ctrl
; Line 455
	lea	eax, DWORD PTR [esi+16]
	mov	DWORD PTR [ecx], eax
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN17@conn_ctrl:
; Line 457
	xor	edi, edi
$LN18@conn_ctrl:
; Line 460
	cmp	eax, 3
	jne	SHORT $LN2@conn_ctrl
; Line 461
	movzx	edi, WORD PTR [esi+20]
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN10@conn_ctrl:
; Line 464
	test	ecx, ecx
	je	SHORT $LN48@conn_ctrl
; Line 465
	mov	DWORD PTR [ecx], OFFSET ??_C@_0BA@CJBGKJNL@not?5initialized?$AA@
$LN48@conn_ctrl:
; Line 561
	xor	edi, edi
$LN2@conn_ctrl:
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN21@conn_ctrl:
; Line 470
	test	ebx, ebx
	je	SHORT $LN2@conn_ctrl
; Line 472
	mov	eax, DWORD PTR _num$[esp+32]
	mov	DWORD PTR [ebp+12], edi
	test	eax, eax
	jne	SHORT $LN23@conn_ctrl
; Line 473
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN25@conn_ctrl
; Line 474
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN25@conn_ctrl:
; Line 475
	push	ebx
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR [esi+4], eax
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN23@conn_ctrl:
; Line 476
	cmp	eax, 1
	jne	SHORT $LN26@conn_ctrl
; Line 477
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN28@conn_ctrl
; Line 478
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN28@conn_ctrl:
; Line 479
	push	ebx
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN26@conn_ctrl:
; Line 480
	cmp	eax, 2
	jne	SHORT $LN29@conn_ctrl
; Line 484
	movzx	eax, BYTE PTR [ebx+3]
	push	eax
	movzx	eax, BYTE PTR [ebx+2]
	push	eax
	movzx	eax, BYTE PTR [ebx+1]
	push	eax
	movzx	eax, BYTE PTR [ebx]
	push	eax
	push	OFFSET ??_C@_0M@PCENNPGA@?$CFd?4?$CFd?4?$CFd?4?$CFd?$AA@
	lea	eax, DWORD PTR _buf$2[esp+56]
	push	16					; 00000010H
	push	eax
	call	_BIO_snprintf
; Line 486
	mov	eax, DWORD PTR [esi+4]
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	SHORT $LN31@conn_ctrl
; Line 487
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN31@conn_ctrl:
; Line 488
	lea	eax, DWORD PTR _buf$2[esp+36]
	push	eax
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR [esi+4], eax
; Line 489
	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [esi+16], eax
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN29@conn_ctrl:
; Line 490
	cmp	eax, 3
	jne	$LN2@conn_ctrl
; Line 493
	push	DWORD PTR [ebx]
	lea	eax, DWORD PTR _buf$1[esp+40]
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	push	13					; 0000000dH
	push	eax
	call	_BIO_snprintf
; Line 494
	mov	eax, DWORD PTR [esi+8]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN33@conn_ctrl
; Line 495
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN33@conn_ctrl:
; Line 496
	lea	eax, DWORD PTR _buf$1[esp+36]
	push	eax
	call	_BUF_strdup
	add	esp, 4
	mov	DWORD PTR [esi+8], eax
; Line 497
	mov	ax, WORD PTR [ebx]
	mov	WORD PTR [esi+20], ax
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN34@conn_ctrl:
; Line 502
	mov	eax, DWORD PTR _num$[esp+32]
	mov	DWORD PTR [esi+12], eax
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN35@conn_ctrl:
; Line 505
	cmp	DWORD PTR [ebp+12], ecx
	je	SHORT $LN36@conn_ctrl
; Line 507
	test	ebx, ebx
	je	SHORT $LN38@conn_ctrl
; Line 508
	mov	eax, DWORD PTR [ebp+28]
	mov	DWORD PTR [ebx], eax
$LN38@conn_ctrl:
; Line 509
	mov	edi, DWORD PTR [ebp+28]
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN36@conn_ctrl:
; Line 511
	or	edi, -1
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN39@conn_ctrl:
; Line 514
	mov	edi, DWORD PTR [ebp+16]
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN40@conn_ctrl:
; Line 517
	mov	eax, DWORD PTR _num$[esp+32]
	mov	DWORD PTR [ebp+16], eax
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN43@conn_ctrl:
; Line 528
	mov	eax, DWORD PTR [esi+8]
	test	eax, eax
	je	SHORT $LN44@conn_ctrl
; Line 529
	push	eax
	push	1
	push	100					; 00000064H
	push	ebx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
$LN44@conn_ctrl:
; Line 530
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN45@conn_ctrl
; Line 531
	push	eax
	push	0
	push	100					; 00000064H
	push	ebx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
$LN45@conn_ctrl:
; Line 532
	push	0
	push	DWORD PTR [esi+12]
	push	102					; 00000066H
	push	ebx
	call	_BIO_ctrl
; Line 537
	push	DWORD PTR [esi+40]
	push	14					; 0000000eH
	push	ebx
	call	_BIO_callback_ctrl
	add	esp, 28					; 0000001cH
; Line 564
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+20]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
$LN47@conn_ctrl:
; Line 557
	mov	eax, DWORD PTR [esi+40]
; Line 565
	mov	ecx, DWORD PTR __$ArrayPad$[esp+36]
	mov	DWORD PTR [ebx], eax
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 20					; 00000014H
	ret	0
	npad	1
$LN53@conn_ctrl:
	DD	$LN4@conn_ctrl
	DD	$LN39@conn_ctrl
	DD	$LN40@conn_ctrl
	DD	$LN48@conn_ctrl
	DD	$LN2@conn_ctrl
	DD	$LN43@conn_ctrl
	DD	$LN47@conn_ctrl
	DD	$LN21@conn_ctrl
	DD	$LN5@conn_ctrl
	DD	$LN34@conn_ctrl
	DD	$LN35@conn_ctrl
	DD	$LN8@conn_ctrl
	DD	$LN48@conn_ctrl
$LN50@conn_ctrl:
	DB	0
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	3
	DB	3
	DB	6
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	7
	DB	8
	DB	9
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	10					; 0000000aH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	11					; 0000000bH
_conn_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conn_puts
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_str$ = 12						; size = 4
_conn_puts PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 592
	mov	edx, DWORD PTR _str$[esp-4]
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
	npad	6
$LL3@conn_puts:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL3@conn_puts
	sub	eax, esi
; Line 593
	push	eax
	push	edx
	push	DWORD PTR _bp$[esp+8]
	call	_conn_write
	add	esp, 12					; 0000000cH
	pop	esi
; Line 595
	ret	0
_conn_puts ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conn_read
_TEXT	SEGMENT
_b$ = 8							; size = 4
_out$ = 12						; size = 4
_outl$ = 16						; size = 4
_conn_read PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 373
	push	esi
	push	edi
; Line 377
	mov	edi, DWORD PTR _b$[esp+4]
	xor	esi, esi
	mov	eax, DWORD PTR [edi+32]
; Line 378
	cmp	DWORD PTR [eax], 6
	je	SHORT $LN3@conn_read
; Line 379
	push	eax
	push	edi
	call	_conn_state
	mov	esi, eax
	add	esp, 8
; Line 380
	test	esi, esi
	jle	SHORT $LN1@conn_read
$LN3@conn_read:
; Line 384
	cmp	DWORD PTR _out$[esp+4], 0
	je	SHORT $LN6@conn_read
; Line 385
	push	0
	call	DWORD PTR __imp__WSASetLastError@4
; Line 386
	push	0
	push	DWORD PTR _outl$[esp+8]
	push	DWORD PTR _out$[esp+12]
	push	DWORD PTR [edi+28]
	call	DWORD PTR __imp__recv@16
; Line 387
	push	15					; 0000000fH
	push	edi
	mov	esi, eax
	call	_BIO_clear_flags
	add	esp, 8
; Line 388
	test	esi, esi
	jg	SHORT $LN6@conn_read
; Line 389
	push	esi
	call	_BIO_sock_should_retry
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@conn_read
; Line 390
	push	9
	push	edi
	call	_BIO_set_flags
	add	esp, 8
$LN6@conn_read:
; Line 393
	mov	eax, esi
$LN1@conn_read:
	pop	edi
	pop	esi
; Line 394
	ret	0
_conn_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _conn_write
_TEXT	SEGMENT
_b$ = 8							; size = 4
_in$ = 12						; size = 4
_inl$ = 16						; size = 4
_conn_write PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 397
	push	esi
; Line 401
	mov	esi, DWORD PTR _b$[esp]
	mov	eax, DWORD PTR [esi+32]
; Line 402
	cmp	DWORD PTR [eax], 6
	je	SHORT $LN3@conn_write
; Line 403
	push	eax
	push	esi
	call	_conn_state
	add	esp, 8
; Line 404
	test	eax, eax
	jle	SHORT $LN1@conn_write
$LN3@conn_write:
	push	edi
; Line 408
	push	0
	call	DWORD PTR __imp__WSASetLastError@4
; Line 409
	push	0
	push	DWORD PTR _inl$[esp+8]
	push	DWORD PTR _in$[esp+12]
	push	DWORD PTR [esi+28]
	call	DWORD PTR __imp__send@16
; Line 410
	push	15					; 0000000fH
	push	esi
	mov	edi, eax
	call	_BIO_clear_flags
	add	esp, 8
; Line 411
	test	edi, edi
	jg	SHORT $LN5@conn_write
; Line 412
	push	edi
	call	_BIO_sock_should_retry
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@conn_write
; Line 413
	push	10					; 0000000aH
	push	esi
	call	_BIO_set_flags
	add	esp, 8
$LN5@conn_write:
; Line 415
	mov	eax, edi
	pop	edi
$LN1@conn_write:
	pop	esi
; Line 416
	ret	0
_conn_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_new_connect
_TEXT	SEGMENT
_str$ = 8						; size = 4
_BIO_new_connect PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 598
	push	esi
; Line 601
	push	OFFSET _methods_connectp
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
; Line 602
	test	esi, esi
	je	SHORT $LN8@BIO_new_co
; Line 604
	push	DWORD PTR _str$[esp]
	push	0
	push	100					; 00000064H
	push	esi
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN3@BIO_new_co
; Line 605
	mov	eax, esi
	pop	esi
; Line 610
	ret	0
$LN3@BIO_new_co:
; Line 607
	push	esi
	call	_BIO_free
	add	esp, 4
$LN8@BIO_new_co:
; Line 608
	xor	eax, eax
	pop	esi
; Line 610
	ret	0
_BIO_new_connect ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _BIO_s_connect
_TEXT	SEGMENT
_BIO_s_connect PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\bio\bss_conn.c
; Line 326
	mov	eax, OFFSET _methods_connectp
; Line 327
	ret	0
_BIO_s_connect ENDP
_TEXT	ENDS
END

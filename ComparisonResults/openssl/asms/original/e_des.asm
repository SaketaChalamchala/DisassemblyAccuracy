; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

EXTRN	_EVP_CIPHER_set_asn1_iv:PROC
EXTRN	_EVP_CIPHER_get_asn1_iv:PROC
CONST	SEGMENT
_des_cfb1 DD	0290H
	DD	01H
	DD	08H
	DD	08H
	DD	0203H
	DD	FLAT:_des_init_key
	DD	FLAT:_des_cfb1_cipher
	DD	00H
	DD	088H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	FLAT:_des_ctrl
	DD	00H
_des_cfb8 DD	0291H
	DD	01H
	DD	08H
	DD	08H
	DD	0203H
	DD	FLAT:_des_init_key
	DD	FLAT:_des_cfb8_cipher
	DD	00H
	DD	088H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	FLAT:_des_ctrl
	DD	00H
_des_cbc DD	01fH
	DD	08H
	DD	08H
	DD	08H
	DD	0202H
	DD	FLAT:_des_init_key
	DD	FLAT:_des_cbc_cipher
	DD	00H
	DD	088H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	FLAT:_des_ctrl
	DD	00H
_des_cfb64 DD	01eH
	DD	01H
	DD	08H
	DD	08H
	DD	0203H
	DD	FLAT:_des_init_key
	DD	FLAT:_des_cfb64_cipher
	DD	00H
	DD	088H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	FLAT:_des_ctrl
	DD	00H
_des_ofb DD	02dH
	DD	01H
	DD	08H
	DD	08H
	DD	0204H
	DD	FLAT:_des_init_key
	DD	FLAT:_des_ofb_cipher
	DD	00H
	DD	088H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	FLAT:_des_ctrl
	DD	00H
_des_ecb DD	01dH
	DD	08H
	DD	08H
	DD	00H
	DD	0201H
	DD	FLAT:_des_init_key
	DD	FLAT:_des_ecb_cipher
	DD	00H
	DD	088H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	FLAT:_des_ctrl
	DD	00H
CONST	ENDS
PUBLIC	_EVP_des_ecb
PUBLIC	_EVP_des_cfb64
PUBLIC	_EVP_des_cfb1
PUBLIC	_EVP_des_cfb8
PUBLIC	_EVP_des_ofb
PUBLIC	_EVP_des_cbc
EXTRN	_DES_ncbc_encrypt:PROC
EXTRN	_DES_cfb_encrypt:PROC
EXTRN	_DES_ecb_encrypt:PROC
EXTRN	_DES_set_odd_parity:PROC
EXTRN	_DES_set_key_unchecked:PROC
EXTRN	_DES_cfb64_encrypt:PROC
EXTRN	_DES_ofb64_encrypt:PROC
EXTRN	_RAND_bytes:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Ogtpy
;	COMDAT _des_cfb8_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
tv173 = 20						; size = 4
_inl$ = 20						; size = 4
_des_cfb8_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 201
	push	ebx
; Line 202
	mov	ebx, DWORD PTR _out$[esp]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+4]
	push	esi
	mov	esi, DWORD PTR _inl$[esp+8]
	push	edi
	mov	edi, DWORD PTR _in$[esp+12]
	cmp	esi, 1073741824				; 40000000H
	jb	SHORT $LN3@des_cfb8_c
	mov	eax, esi
	lea	ecx, DWORD PTR [ebp+32]
	shr	eax, 30					; 0000001eH
	mov	DWORD PTR tv173[esp+12], eax
$LL2@des_cfb8_c:
; Line 203
	push	DWORD PTR [ebp+8]
	push	ecx
	push	DWORD PTR [ebp+96]
	push	1073741824				; 40000000H
	push	8
	push	ebx
	push	edi
	call	_DES_cfb_encrypt
	add	esp, 28					; 0000001cH
	lea	ecx, DWORD PTR [ebp+32]
; Line 205
	sub	esi, 1073741824				; 40000000H
; Line 206
	add	edi, 1073741824				; 40000000H
; Line 207
	add	ebx, 1073741824				; 40000000H
	sub	DWORD PTR tv173[esp+12], 1
	jne	SHORT $LL2@des_cfb8_c
$LN3@des_cfb8_c:
; Line 209
	test	esi, esi
	je	SHORT $LN10@des_cfb8_c
; Line 210
	push	DWORD PTR [ebp+8]
	lea	eax, DWORD PTR [ebp+32]
	push	eax
	push	DWORD PTR [ebp+96]
	push	esi
	push	8
	push	ebx
	push	edi
	call	_DES_cfb_encrypt
	add	esp, 28					; 0000001cH
$LN10@des_cfb8_c:
; Line 212
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 213
	ret	0
_des_cfb8_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _des_cfb1_cipher
_TEXT	SEGMENT
_c$ = -14						; size = 1
_d$ = -13						; size = 1
_n$1$ = -12						; size = 4
_chunk$2$ = -8						; size = 4
tv230 = -4						; size = 4
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
_inl$ = 20						; size = 4
_des_cfb1_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 173
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebp
; Line 177
	mov	ebp, DWORD PTR _inl$[esp+16]
	push	esi
	mov	esi, 134217728				; 08000000H
	cmp	ebp, esi
	cmovb	esi, ebp
	mov	DWORD PTR _chunk$2$[esp+24], esi
; Line 180
	test	ebp, ebp
	je	$LN17@des_cfb1_c
	mov	ecx, DWORD PTR _out$[esp+20]
	push	ebx
	push	edi
	npad	4
$LL2@des_cfb1_c:
	cmp	ebp, esi
	jb	$LN18@des_cfb1_c
; Line 181
	lea	edx, DWORD PTR [esi*8]
	xor	eax, eax
	mov	DWORD PTR tv230[esp+32], edx
	mov	DWORD PTR _n$1$[esp+32], eax
	test	edx, edx
	je	$LN5@des_cfb1_c
	mov	edx, DWORD PTR _ctx$[esp+28]
	mov	ebp, DWORD PTR _in$[esp+28]
	mov	esi, DWORD PTR _out$[esp+28]
	npad	3
$LL6@des_cfb1_c:
; Line 183
	push	DWORD PTR [edx+8]
	mov	ebx, eax
	mov	edi, eax
	and	ebx, 7
	shr	edi, 3
	mov	ecx, 7
	mov	eax, 1
	sub	ecx, ebx
	shl	eax, cl
	and	al, BYTE PTR [edi+ebp]
	neg	al
	sbb	al, al
	and	al, 128					; 00000080H
	mov	BYTE PTR _c$[esp+36], al
	lea	eax, DWORD PTR [edx+32]
	push	eax
	push	DWORD PTR [edx+96]
	lea	eax, DWORD PTR _d$[esp+44]
	push	1
	push	1
	push	eax
	lea	eax, DWORD PTR _c$[esp+56]
	push	eax
	call	_DES_cfb_encrypt
; Line 185
	mov	dl, BYTE PTR _d$[esp+60]
	mov	eax, 128				; 00000080H
	mov	cl, BYTE PTR _n$1$[esp+60]
	and	dl, 128					; 00000080H
	and	cl, 7
	add	esp, 28					; 0000001cH
	shr	dl, cl
	mov	ecx, ebx
	sar	eax, cl
	not	al
	and	al, BYTE PTR [edi+esi]
	or	dl, al
	mov	eax, DWORD PTR _n$1$[esp+32]
	inc	eax
	mov	BYTE PTR [edi+esi], dl
	mov	edx, DWORD PTR _ctx$[esp+28]
	mov	DWORD PTR _n$1$[esp+32], eax
	cmp	eax, DWORD PTR tv230[esp+32]
	jb	SHORT $LL6@des_cfb1_c
	mov	esi, DWORD PTR _chunk$2$[esp+32]
	mov	ebp, DWORD PTR _inl$[esp+28]
	mov	ecx, DWORD PTR _out$[esp+28]
$LN5@des_cfb1_c:
; Line 190
	add	DWORD PTR _in$[esp+28], esi
	sub	ebp, esi
; Line 191
	add	ecx, esi
	mov	DWORD PTR _inl$[esp+28], ebp
; Line 192
	cmp	ebp, esi
	mov	DWORD PTR _out$[esp+28], ecx
	cmovb	esi, ebp
	mov	DWORD PTR _chunk$2$[esp+32], esi
	test	ebp, ebp
	jne	$LL2@des_cfb1_c
$LN18@des_cfb1_c:
	pop	edi
	pop	ebx
	pop	esi
; Line 196
	mov	eax, 1
	pop	ebp
; Line 197
	add	esp, 16					; 00000010H
	ret	0
$LN17@des_cfb1_c:
	pop	esi
; Line 196
	mov	eax, 1
	pop	ebp
; Line 197
	add	esp, 16					; 00000010H
	ret	0
_des_cfb1_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _des_cfb64_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
tv174 = 20						; size = 4
_inl$ = 20						; size = 4
_des_cfb64_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 153
	push	ebx
; Line 154
	mov	ebx, DWORD PTR _in$[esp]
	push	ebp
	mov	ebp, DWORD PTR _out$[esp+4]
	push	esi
	mov	esi, DWORD PTR _inl$[esp+8]
	push	edi
	mov	edi, DWORD PTR _ctx$[esp+12]
	cmp	esi, 1073741824				; 40000000H
	jb	SHORT $LN3@des_cfb64_
	mov	eax, esi
	lea	ecx, DWORD PTR [edi+80]
	shr	eax, 30					; 0000001eH
	lea	edx, DWORD PTR [edi+32]
	mov	DWORD PTR tv174[esp+12], eax
	npad	5
$LL2@des_cfb64_:
; Line 155
	push	DWORD PTR [edi+8]
	push	ecx
	push	edx
	push	DWORD PTR [edi+96]
	push	1073741824				; 40000000H
	push	ebp
	push	ebx
	call	_DES_cfb64_encrypt
	add	esp, 28					; 0000001cH
	lea	ecx, DWORD PTR [edi+80]
; Line 157
	sub	esi, 1073741824				; 40000000H
	lea	edx, DWORD PTR [edi+32]
; Line 158
	add	ebx, 1073741824				; 40000000H
; Line 159
	add	ebp, 1073741824				; 40000000H
	sub	DWORD PTR tv174[esp+12], 1
	jne	SHORT $LL2@des_cfb64_
$LN3@des_cfb64_:
; Line 161
	test	esi, esi
	je	SHORT $LN10@des_cfb64_
; Line 162
	push	DWORD PTR [edi+8]
	lea	eax, DWORD PTR [edi+80]
	push	eax
	lea	eax, DWORD PTR [edi+32]
	push	eax
	push	DWORD PTR [edi+96]
	push	esi
	push	ebp
	push	ebx
	call	_DES_cfb64_encrypt
	add	esp, 28					; 0000001cH
$LN10@des_cfb64_:
; Line 164
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 165
	ret	0
_des_cfb64_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _des_cbc_cipher
_TEXT	SEGMENT
tv180 = 8						; size = 4
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
_inl$ = 20						; size = 4
_des_cbc_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 131
	push	esi
; Line 132
	mov	esi, DWORD PTR _ctx$[esp]
	mov	ecx, DWORD PTR [esi+96]
; Line 134
	mov	edx, DWORD PTR [ecx+128]
	test	edx, edx
	je	SHORT $LN7@des_cbc_ci
; Line 135
	lea	eax, DWORD PTR [esi+32]
	push	eax
	push	ecx
	push	DWORD PTR _inl$[esp+8]
	push	DWORD PTR _out$[esp+12]
	push	DWORD PTR _in$[esp+16]
	call	edx
	add	esp, 20					; 00000014H
; Line 148
	mov	eax, 1
	pop	esi
; Line 149
	ret	0
$LN7@des_cbc_ci:
	push	ebx
; Line 138
	mov	ebx, DWORD PTR _in$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR _out$[esp+8]
	push	edi
	mov	edi, DWORD PTR _inl$[esp+12]
	cmp	edi, 1073741824				; 40000000H
	jb	SHORT $LN3@des_cbc_ci
	mov	eax, edi
	lea	ecx, DWORD PTR [esi+32]
	shr	eax, 30					; 0000001eH
	mov	DWORD PTR tv180[esp+12], eax
$LL2@des_cbc_ci:
; Line 139
	push	DWORD PTR [esi+8]
	push	ecx
	push	DWORD PTR [esi+96]
	push	1073741824				; 40000000H
	push	ebp
	push	ebx
	call	_DES_ncbc_encrypt
	add	esp, 24					; 00000018H
	lea	ecx, DWORD PTR [esi+32]
; Line 141
	sub	edi, 1073741824				; 40000000H
; Line 142
	add	ebx, 1073741824				; 40000000H
; Line 143
	add	ebp, 1073741824				; 40000000H
	sub	DWORD PTR tv180[esp+12], 1
	jne	SHORT $LL2@des_cbc_ci
$LN3@des_cbc_ci:
; Line 145
	test	edi, edi
	je	SHORT $LN5@des_cbc_ci
; Line 146
	push	DWORD PTR [esi+8]
	lea	eax, DWORD PTR [esi+32]
	push	eax
	push	DWORD PTR [esi+96]
	push	edi
	push	ebp
	push	ebx
	call	_DES_ncbc_encrypt
	add	esp, 24					; 00000018H
$LN5@des_cbc_ci:
; Line 148
	pop	edi
	pop	ebp
	pop	ebx
	mov	eax, 1
	pop	esi
; Line 149
	ret	0
_des_cbc_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _des_ofb_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
tv144 = 20						; size = 4
_inl$ = 20						; size = 4
_des_ofb_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 115
	push	ebx
; Line 116
	mov	ebx, DWORD PTR _out$[esp]
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+4]
	push	esi
	mov	esi, DWORD PTR _inl$[esp+8]
	push	edi
	mov	edi, DWORD PTR _in$[esp+12]
	cmp	esi, 1073741824				; 40000000H
	jb	SHORT $LN3@des_ofb_ci
	mov	eax, esi
	lea	ecx, DWORD PTR [ebp+80]
	shr	eax, 30					; 0000001eH
	lea	edx, DWORD PTR [ebp+32]
	mov	DWORD PTR tv144[esp+12], eax
	npad	5
$LL2@des_ofb_ci:
; Line 117
	push	ecx
	push	edx
	push	DWORD PTR [ebp+96]
	push	1073741824				; 40000000H
	push	ebx
	push	edi
	call	_DES_ofb64_encrypt
	add	esp, 24					; 00000018H
	lea	ecx, DWORD PTR [ebp+80]
; Line 119
	sub	esi, 1073741824				; 40000000H
	lea	edx, DWORD PTR [ebp+32]
; Line 120
	add	edi, 1073741824				; 40000000H
; Line 121
	add	ebx, 1073741824				; 40000000H
	sub	DWORD PTR tv144[esp+12], 1
	jne	SHORT $LL2@des_ofb_ci
$LN3@des_ofb_ci:
; Line 123
	test	esi, esi
	je	SHORT $LN10@des_ofb_ci
; Line 124
	lea	eax, DWORD PTR [ebp+80]
	push	eax
	lea	eax, DWORD PTR [ebp+32]
	push	eax
	push	DWORD PTR [ebp+96]
	push	esi
	push	ebx
	push	edi
	call	_DES_ofb64_encrypt
	add	esp, 24					; 00000018H
$LN10@des_ofb_ci:
; Line 126
	pop	edi
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 127
	ret	0
_des_ofb_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _des_ecb_cipher
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_in$ = 16						; size = 4
_inl$ = 20						; size = 4
_des_ecb_cipher PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 106
	push	ebp
; Line 107
	mov	ebp, DWORD PTR _ctx$[esp]
	push	edi
	mov	eax, DWORD PTR [ebp]
	mov	edi, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _inl$[esp+4]
	cmp	eax, edi
	jb	SHORT $LN11@des_ecb_ci
	sub	eax, edi
	push	ebx
	mov	DWORD PTR _inl$[esp+8], eax
	xor	ebx, ebx
	mov	eax, DWORD PTR _out$[esp+8]
	push	esi
	mov	esi, DWORD PTR _in$[esp+12]
	sub	eax, esi
	mov	DWORD PTR _out$[esp+12], eax
	npad	4
$LL4@des_ecb_ci:
; Line 108
	push	DWORD PTR [ebp+8]
	add	eax, esi
	push	DWORD PTR [ebp+96]
	push	eax
	push	esi
	call	_DES_ecb_encrypt
	mov	eax, DWORD PTR _out$[esp+28]
	add	ebx, edi
	add	esp, 16					; 00000010H
	add	esi, edi
	cmp	ebx, DWORD PTR _inl$[esp+12]
	jbe	SHORT $LL4@des_ecb_ci
	pop	esi
	pop	ebx
$LN11@des_ecb_ci:
	pop	edi
; Line 110
	mov	eax, 1
	pop	ebp
; Line 111
	ret	0
_des_ecb_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _des_ctrl
_TEXT	SEGMENT
_c$ = 8							; size = 4
_type$ = 12						; size = 4
_arg$ = 16						; size = 4
_ptr$ = 20						; size = 4
_des_ctrl PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 257
	cmp	DWORD PTR _type$[esp-4], 6
	je	SHORT $LN4@des_ctrl
; Line 265
	or	eax, -1
; Line 267
	ret	0
$LN4@des_ctrl:
; Line 259
	push	8
	push	DWORD PTR _ptr$[esp]
	call	_RAND_bytes
	add	esp, 8
	test	eax, eax
	jg	SHORT $LN5@des_ctrl
; Line 260
	xor	eax, eax
; Line 267
	ret	0
$LN5@des_ctrl:
; Line 261
	push	DWORD PTR _ptr$[esp-4]
	call	_DES_set_odd_parity
	add	esp, 4
; Line 262
	mov	eax, 1
; Line 267
	ret	0
_des_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _des_init_key
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_key$ = 12						; size = 4
_iv$ = 16						; size = 4
_enc$ = 20						; size = 4
_des_init_key PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 231
	mov	ecx, DWORD PTR _ctx$[esp-4]
; Line 233
	mov	eax, DWORD PTR [ecx+96]
	mov	DWORD PTR [eax+128], 0
; Line 249
	push	DWORD PTR [ecx+96]
	push	DWORD PTR _key$[esp]
	call	_DES_set_key_unchecked
	add	esp, 8
; Line 251
	mov	eax, 1
; Line 252
	ret	0
_des_init_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_des_cbc
_TEXT	SEGMENT
_EVP_des_cbc PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 215
	mov	eax, OFFSET _des_cbc
; Line 217
	ret	0
_EVP_des_cbc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_des_ofb
_TEXT	SEGMENT
_EVP_des_ofb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 215
	mov	eax, OFFSET _des_ofb
; Line 217
	ret	0
_EVP_des_ofb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_des_cfb8
_TEXT	SEGMENT
_EVP_des_cfb8 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 223
	mov	eax, OFFSET _des_cfb8
; Line 225
	ret	0
_EVP_des_cfb8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_des_cfb1
_TEXT	SEGMENT
_EVP_des_cfb1 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 219
	mov	eax, OFFSET _des_cfb1
; Line 221
	ret	0
_EVP_des_cfb1 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_des_cfb64
_TEXT	SEGMENT
_EVP_des_cfb64 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 215
	mov	eax, OFFSET _des_cfb64
; Line 217
	ret	0
_EVP_des_cfb64 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _EVP_des_ecb
_TEXT	SEGMENT
_EVP_des_ecb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\evp\e_des.c
; Line 215
	mov	eax, OFFSET _des_ecb
; Line 217
	ret	0
_EVP_des_ecb ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\pem\pem_seal.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_PEM_SealInit
PUBLIC	_PEM_SealUpdate
PUBLIC	_PEM_SealFinal
PUBLIC	??_C@_0BI@JOBLAJDB@?4?2crypto?2pem?2pem_seal?4c?$AA@ ; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_cleanse:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_EVP_MD_CTX_init:PROC
EXTRN	_EVP_MD_CTX_cleanup:PROC
EXTRN	_EVP_DigestUpdate:PROC
EXTRN	_EVP_DigestInit:PROC
EXTRN	_EVP_EncryptUpdate:PROC
EXTRN	_EVP_EncryptFinal_ex:PROC
EXTRN	_EVP_SignFinal:PROC
EXTRN	_EVP_SealInit:PROC
EXTRN	_EVP_EncodeInit:PROC
EXTRN	_EVP_EncodeUpdate:PROC
EXTRN	_EVP_EncodeFinal:PROC
EXTRN	_EVP_EncodeBlock:PROC
EXTRN	_EVP_CIPHER_CTX_init:PROC
EXTRN	_EVP_CIPHER_CTX_cleanup:PROC
EXTRN	_RSA_size:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0BI@JOBLAJDB@?4?2crypto?2pem?2pem_seal?4c?$AA@
CONST	SEGMENT
??_C@_0BI@JOBLAJDB@?4?2crypto?2pem?2pem_seal?4c?$AA@ DB '.\crypto\pem\pem'
	DB	'_seal.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PEM_SealFinal
_TEXT	SEGMENT
_j$ = -4						; size = 4
_i$ = 8							; size = 4
_ctx$ = 8						; size = 4
_sig$ = 12						; size = 4
_sigl$ = 16						; size = 4
_out$ = 20						; size = 4
_outl$ = 24						; size = 4
_priv$ = 28						; size = 4
_PEM_SealFinal PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pem_seal.c
; Line 147
	mov	eax, 4
	call	__chkstk
; Line 152
	mov	eax, DWORD PTR _priv$[esp]
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR _ctx$[esp+8]
	xor	ebx, ebx
	push	esi
	xor	esi, esi
	cmp	DWORD PTR [eax], 6
	je	SHORT $LN2@PEM_SealFi
; Line 153
	push	153					; 00000099H
	push	OFFSET ??_C@_0BI@JOBLAJDB@?4?2crypto?2pem?2pem_seal?4c?$AA@
	push	110					; 0000006eH
	push	110					; 0000006eH
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 154
	jmp	$err$12
$LN2@PEM_SealFi:
; Line 156
	push	DWORD PTR [eax+20]
	call	_RSA_size
; Line 157
	mov	ecx, 100				; 00000064H
	cmp	eax, ecx
; Line 159
	push	159					; 0000009fH
	cmovb	eax, ecx
	mov	DWORD PTR _i$[esp+20], eax
	add	eax, eax
	push	OFFSET ??_C@_0BI@JOBLAJDB@?4?2crypto?2pem?2pem_seal?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 16					; 00000010H
; Line 160
	test	ebx, ebx
	jne	SHORT $LN4@PEM_SealFi
; Line 161
	push	161					; 000000a1H
	push	OFFSET ??_C@_0BI@JOBLAJDB@?4?2crypto?2pem?2pem_seal?4c?$AA@
	push	65					; 00000041H
	push	110					; 0000006eH
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 162
	jmp	$err$12
$LN4@PEM_SealFi:
; Line 165
	lea	eax, DWORD PTR _i$[esp+12]
	push	eax
	lea	eax, DWORD PTR [ebp+120]
	push	ebx
	push	eax
	call	_EVP_EncryptFinal_ex
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$12
; Line 167
	mov	esi, DWORD PTR _out$[esp+12]
	lea	eax, DWORD PTR _j$[esp+16]
	push	edi
	push	DWORD PTR _i$[esp+16]
	push	ebx
	push	eax
	push	esi
	push	ebp
	call	_EVP_EncodeUpdate
; Line 168
	mov	edi, DWORD PTR _outl$[esp+36]
; Line 170
	lea	ecx, DWORD PTR _j$[esp+40]
	mov	eax, DWORD PTR _j$[esp+40]
	push	ecx
	mov	DWORD PTR [edi], eax
	add	eax, esi
	push	eax
	push	ebp
	call	_EVP_EncodeFinal
; Line 171
	mov	eax, DWORD PTR _j$[esp+52]
	add	DWORD PTR [edi], eax
; Line 173
	lea	eax, DWORD PTR _i$[esp+48]
	push	DWORD PTR _priv$[esp+48]
	push	eax
	lea	eax, DWORD PTR [ebp+96]
	push	ebx
	push	eax
	call	_EVP_SignFinal
	add	esp, 48					; 00000030H
	pop	edi
	test	eax, eax
	je	SHORT $LN10@PEM_SealFi
; Line 175
	push	DWORD PTR _i$[esp+12]
	push	ebx
	push	DWORD PTR _sig$[esp+20]
	call	_EVP_EncodeBlock
	mov	ecx, DWORD PTR _sigl$[esp+24]
	add	esp, 12					; 0000000cH
; Line 177
	mov	esi, 1
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $err$12
$LN10@PEM_SealFi:
	xor	esi, esi
$err$12:
; Line 179
	lea	eax, DWORD PTR [ebp+96]
	push	eax
	call	_EVP_MD_CTX_cleanup
; Line 180
	lea	ecx, DWORD PTR [ebp+120]
	push	ecx
	call	_EVP_CIPHER_CTX_cleanup
	add	esp, 8
; Line 181
	test	ebx, ebx
	je	SHORT $LN9@PEM_SealFi
; Line 182
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
$LN9@PEM_SealFi:
; Line 183
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
; Line 184
	pop	ecx
	ret	0
_PEM_SealFinal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PEM_SealUpdate
_TEXT	SEGMENT
_j$ = -1620						; size = 4
_ctx$GSCopy$1$ = -1616					; size = 4
_outl$GSCopy$1$ = -1612					; size = 4
tv141 = -1608						; size = 4
_buffer$ = -1604					; size = 1600
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_out$ = 12						; size = 4
_outl$ = 16						; size = 4
_in$ = 20						; size = 4
_inl$ = 24						; size = 4
_PEM_SealUpdate PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pem_seal.c
; Line 123
	mov	eax, 1620				; 00000654H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+1620], eax
	mov	eax, DWORD PTR _outl$[esp+1616]
	push	ebx
	mov	ebx, DWORD PTR _in$[esp+1620]
	push	ebp
	mov	ebp, DWORD PTR _out$[esp+1624]
	push	esi
	mov	esi, DWORD PTR _ctx$[esp+1628]
	push	edi
; Line 128
	mov	edi, DWORD PTR _inl$[esp+1632]
	push	edi
	mov	DWORD PTR _outl$GSCopy$1$[esp+1640], eax
	mov	DWORD PTR [eax], 0
	lea	eax, DWORD PTR [esi+96]
	push	ebx
	push	eax
	mov	DWORD PTR _ctx$GSCopy$1$[esp+1648], esi
	call	_EVP_DigestUpdate
	add	esp, 12					; 0000000cH
; Line 130
	test	edi, edi
	jle	SHORT $LN11@PEM_SealUp
	lea	eax, DWORD PTR [esi+120]
	mov	ecx, 1200				; 000004b0H
	mov	DWORD PTR tv141[esp+1636], eax
	npad	5
$LL2@PEM_SealUp:
; Line 132
	cmp	edi, 1200				; 000004b0H
	mov	esi, edi
	cmovg	esi, ecx
; Line 136
	lea	ecx, DWORD PTR _j$[esp+1636]
	push	esi
	push	ebx
	push	ecx
	lea	ecx, DWORD PTR _buffer$[esp+1648]
	push	ecx
	push	eax
	call	_EVP_EncryptUpdate
; Line 137
	push	DWORD PTR _j$[esp+1656]
	lea	eax, DWORD PTR _buffer$[esp+1660]
	push	eax
	lea	eax, DWORD PTR _j$[esp+1664]
	push	eax
	push	ebp
	push	DWORD PTR _ctx$GSCopy$1$[esp+1672]
	call	_EVP_EncodeUpdate
; Line 138
	mov	ecx, DWORD PTR _outl$GSCopy$1$[esp+1676]
; Line 141
	sub	edi, esi
	mov	eax, DWORD PTR _j$[esp+1676]
	add	esp, 40					; 00000028H
	add	ebp, eax
	add	ebx, esi
	add	DWORD PTR [ecx], eax
	mov	ecx, 1200				; 000004b0H
	mov	eax, DWORD PTR tv141[esp+1636]
	test	edi, edi
	jg	SHORT $LL2@PEM_SealUp
$LN11@PEM_SealUp:
; Line 143
	mov	ecx, DWORD PTR __$ArrayPad$[esp+1636]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 1620				; 00000654H
	ret	0
_PEM_SealUpdate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _PEM_SealInit
_TEXT	SEGMENT
tv334 = -92						; size = 4
_ctx$GSCopy$1$ = -92					; size = 4
_ekl$GSCopy$1$ = -88					; size = 4
_ret$1$ = -84						; size = 4
_md_type$GSCopy$1$ = -80				; size = 4
_iv$GSCopy$1$ = -76					; size = 4
_type$GSCopy$1$ = -72					; size = 4
_key$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_md_type$ = 16						; size = 4
_ek$ = 20						; size = 4
_ekl$ = 24						; size = 4
_iv$ = 28						; size = 4
_pubk$ = 32						; size = 4
_npubk$ = 36						; size = 4
_PEM_SealInit PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\pem\pem_seal.c
; Line 73
	mov	eax, 92					; 0000005cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+92], eax
	mov	eax, DWORD PTR _ctx$[esp+88]
	push	ebx
	mov	ebx, DWORD PTR _pubk$[esp+92]
	mov	DWORD PTR _ctx$GSCopy$1$[esp+96], eax
	mov	eax, DWORD PTR _type$[esp+92]
	push	ebp
	mov	DWORD PTR _type$GSCopy$1$[esp+100], eax
; Line 76
	xor	ebp, ebp
	mov	eax, DWORD PTR _md_type$[esp+96]
	push	esi
	mov	DWORD PTR _md_type$GSCopy$1$[esp+104], eax
; Line 79
	xor	esi, esi
	mov	eax, DWORD PTR _ekl$[esp+100]
	mov	DWORD PTR _ekl$GSCopy$1$[esp+104], eax
	mov	eax, DWORD PTR _iv$[esp+100]
	push	edi
	mov	edi, DWORD PTR _ek$[esp+104]
	mov	DWORD PTR _iv$GSCopy$1$[esp+108], eax
	mov	DWORD PTR _ret$1$[esp+108], -1
	cmp	DWORD PTR _npubk$[esp+104], esi
	jle	SHORT $LN3@PEM_SealIn
$LL4@PEM_SealIn:
; Line 80
	mov	eax, DWORD PTR [ebx+esi*4]
	cmp	DWORD PTR [eax], 6
	jne	SHORT $LN17@PEM_SealIn
; Line 84
	push	DWORD PTR [eax+20]
	call	_RSA_size
	add	esp, 4
; Line 85
	cmp	eax, ebp
	cmovg	ebp, eax
	inc	esi
	cmp	esi, DWORD PTR _npubk$[esp+104]
	jl	SHORT $LL4@PEM_SealIn
$LN3@PEM_SealIn:
; Line 88
	push	88					; 00000058H
	lea	eax, DWORD PTR [ebp*2]
	push	OFFSET ??_C@_0BI@JOBLAJDB@?4?2crypto?2pem?2pem_seal?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	ebp, eax
	add	esp, 12					; 0000000cH
; Line 89
	test	ebp, ebp
	jne	SHORT $LN10@PEM_SealIn
; Line 90
	push	90					; 0000005aH
	push	OFFSET ??_C@_0BI@JOBLAJDB@?4?2crypto?2pem?2pem_seal?4c?$AA@
	push	65					; 00000041H
	push	111					; 0000006fH
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 91
	jmp	$LN13@PEM_SealIn
$LN17@PEM_SealIn:
; Line 81
	push	81					; 00000051H
	push	OFFSET ??_C@_0BI@JOBLAJDB@?4?2crypto?2pem?2pem_seal?4c?$AA@
	push	110					; 0000006eH
	push	111					; 0000006fH
	push	9
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 82
	jmp	$LN13@PEM_SealIn
$LN10@PEM_SealIn:
; Line 94
	mov	esi, DWORD PTR _ctx$GSCopy$1$[esp+108]
	push	esi
	call	_EVP_EncodeInit
; Line 96
	add	esi, 96					; 00000060H
	push	esi
	call	_EVP_MD_CTX_init
; Line 97
	push	DWORD PTR _md_type$GSCopy$1$[esp+116]
	push	esi
	call	_EVP_DigestInit
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$err$25
; Line 100
	mov	esi, DWORD PTR _ctx$GSCopy$1$[esp+108]
	add	esi, 120				; 00000078H
	push	esi
	call	_EVP_CIPHER_CTX_init
; Line 101
	push	DWORD PTR _npubk$[esp+108]
	push	ebx
	push	DWORD PTR _iv$GSCopy$1$[esp+120]
	push	DWORD PTR _ekl$GSCopy$1$[esp+124]
	push	edi
	push	DWORD PTR _type$GSCopy$1$[esp+132]
	push	esi
	call	_EVP_SealInit
	mov	esi, eax
	add	esp, 32					; 00000020H
	mov	DWORD PTR _ret$1$[esp+108], esi
; Line 102
	test	esi, esi
	jle	SHORT $err$25
; Line 106
	mov	eax, DWORD PTR _npubk$[esp+104]
	test	eax, eax
	jle	SHORT $LN6@PEM_SealIn
	mov	ecx, DWORD PTR _ekl$GSCopy$1$[esp+108]
	sub	ebx, ecx
	sub	ecx, edi
	mov	DWORD PTR tv334[esp+108], eax
	mov	DWORD PTR _ekl$GSCopy$1$[esp+108], ecx
	npad	4
$LL7@PEM_SealIn:
; Line 107
	lea	esi, DWORD PTR [ecx+edi]
	mov	eax, DWORD PTR [esi+ebx]
	push	DWORD PTR [eax+20]
	call	_RSA_size
	push	eax
	push	DWORD PTR [edi]
	push	ebp
	call	_EVP_EncodeBlock
; Line 109
	mov	DWORD PTR [esi], eax
; Line 110
	inc	eax
	push	eax
	push	ebp
	push	DWORD PTR [edi]
	call	_memcpy
	mov	ecx, DWORD PTR _ekl$GSCopy$1$[esp+136]
	lea	edi, DWORD PTR [edi+4]
	add	esp, 28					; 0000001cH
	sub	DWORD PTR tv334[esp+108], 1
	jne	SHORT $LL7@PEM_SealIn
	mov	eax, DWORD PTR _npubk$[esp+104]
$LN6@PEM_SealIn:
; Line 113
	mov	DWORD PTR _ret$1$[esp+108], eax
$err$25:
; Line 116
	push	ebp
	call	_CRYPTO_free
	add	esp, 4
$LN13@PEM_SealIn:
; Line 117
	lea	eax, DWORD PTR _key$[esp+108]
	push	64					; 00000040H
	push	eax
	call	_OPENSSL_cleanse
; Line 119
	mov	ecx, DWORD PTR __$ArrayPad$[esp+116]
	add	esp, 8
	mov	eax, DWORD PTR _ret$1$[esp+108]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 92					; 0000005cH
	ret	0
_PEM_SealInit ENDP
_TEXT	ENDS
END

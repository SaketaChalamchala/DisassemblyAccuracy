; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_OPENSSL_NONPIC_relocated
PUBLIC	??_C@_09OGFJIAEE@?$DM?$DMERROR?$DO?$DO?$AA@	; `string'
PUBLIC	??_C@_03JIDPIAJI@err?$AA@			; `string'
PUBLIC	??_C@_07OALPHBKG@ex_data?$AA@			; `string'
PUBLIC	??_C@_04BNGFMDFF@x509?$AA@			; `string'
PUBLIC	??_C@_09DJEHILFA@x509_info?$AA@			; `string'
PUBLIC	??_C@_09HNLHIFBP@x509_pkey?$AA@			; `string'
PUBLIC	??_C@_08BJFLLMNA@x509_crl?$AA@			; `string'
PUBLIC	??_C@_08BHPLFFMD@x509_req?$AA@			; `string'
PUBLIC	??_C@_03EAKOMMFI@dsa?$AA@			; `string'
PUBLIC	??_C@_03DFNMMEBL@rsa?$AA@			; `string'
PUBLIC	??_C@_08NBJJIGBN@evp_pkey?$AA@			; `string'
PUBLIC	??_C@_0L@JCDDFIOK@x509_store?$AA@		; `string'
PUBLIC	??_C@_07DNHKIAPH@ssl_ctx?$AA@			; `string'
PUBLIC	??_C@_08INIFBEOB@ssl_cert?$AA@			; `string'
PUBLIC	??_C@_0M@OAEAFGMD@ssl_session?$AA@		; `string'
PUBLIC	??_C@_0O@LOCLBOHA@ssl_sess_cert?$AA@		; `string'
PUBLIC	??_C@_03DIMONNDD@ssl?$AA@			; `string'
PUBLIC	??_C@_0L@NKBFNPDB@ssl_method?$AA@		; `string'
PUBLIC	??_C@_04HKINGDKC@rand?$AA@			; `string'
PUBLIC	??_C@_05NFNCBLNG@rand2?$AA@			; `string'
PUBLIC	??_C@_0N@CLEMOJNL@debug_malloc?$AA@		; `string'
PUBLIC	??_C@_03OHAMFFNA@BIO?$AA@			; `string'
PUBLIC	??_C@_0O@BFBCKHPD@gethostbyname?$AA@		; `string'
PUBLIC	??_C@_0O@NKLJGHIL@getservbyname?$AA@		; `string'
PUBLIC	??_C@_07OMHHFDME@readdir?$AA@			; `string'
PUBLIC	??_C@_0N@BGAJKBNF@RSA_blinding?$AA@		; `string'
PUBLIC	??_C@_02OCEEKELO@dh?$AA@			; `string'
PUBLIC	??_C@_0O@PMFKBDME@debug_malloc2?$AA@		; `string'
PUBLIC	??_C@_03NOCNOBNG@dso?$AA@			; `string'
PUBLIC	??_C@_07HGGNMPAJ@dynlock?$AA@			; `string'
PUBLIC	??_C@_06LOBMEHPF@engine?$AA@			; `string'
PUBLIC	??_C@_02OGLLFMLI@ui?$AA@			; `string'
PUBLIC	??_C@_05FGIDCBJD@ecdsa?$AA@			; `string'
PUBLIC	??_C@_02HCBHEC@ec?$AA@				; `string'
PUBLIC	??_C@_04KDGGCKGB@ecdh?$AA@			; `string'
PUBLIC	??_C@_02LAJDHPIK@bn?$AA@			; `string'
PUBLIC	??_C@_0M@FNJFEIGB@ec_pre_comp?$AA@		; `string'
PUBLIC	??_C@_05ODGDKDLF@store?$AA@			; `string'
PUBLIC	??_C@_04OLDKMDKP@comp?$AA@			; `string'
PUBLIC	??_C@_04DJGCHAOD@fips?$AA@			; `string'
PUBLIC	??_C@_05NEEKIFMD@fips2?$AA@			; `string'
_BSS	SEGMENT
_OPENSSL_NONPIC_relocated DD 01H DUP (?)
	ALIGN	8

_SSLeay_MSVC5_hack DQ 01H DUP (?)
_app_locks DD	01H DUP (?)
_dyn_locks DD	01H DUP (?)
_locking_callback DD 01H DUP (?)
_add_lock_callback DD 01H DUP (?)
_id_callback DD	01H DUP (?)
_threadid_callback DD 01H DUP (?)
_dynlock_create_callback DD 01H DUP (?)
_dynlock_lock_callback DD 01H DUP (?)
_dynlock_destroy_callback DD 01H DUP (?)
?trigger@?1??OPENSSL_cpuid_setup@@9@9 DD 01H DUP (?)	; `OPENSSL_cpuid_setup'::`2'::trigger
?_OPENSSL_isservice@?1??OPENSSL_isservice@@9@9 DD 01H DUP (?) ; `OPENSSL_isservice'::`2'::_OPENSSL_isservice
_BSS	ENDS
;	COMDAT ??_C@_05NEEKIFMD@fips2?$AA@
CONST	SEGMENT
??_C@_05NEEKIFMD@fips2?$AA@ DB 'fips2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DJGCHAOD@fips?$AA@
CONST	SEGMENT
??_C@_04DJGCHAOD@fips?$AA@ DB 'fips', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OLDKMDKP@comp?$AA@
CONST	SEGMENT
??_C@_04OLDKMDKP@comp?$AA@ DB 'comp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05ODGDKDLF@store?$AA@
CONST	SEGMENT
??_C@_05ODGDKDLF@store?$AA@ DB 'store', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FNJFEIGB@ec_pre_comp?$AA@
CONST	SEGMENT
??_C@_0M@FNJFEIGB@ec_pre_comp?$AA@ DB 'ec_pre_comp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02LAJDHPIK@bn?$AA@
CONST	SEGMENT
??_C@_02LAJDHPIK@bn?$AA@ DB 'bn', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KDGGCKGB@ecdh?$AA@
CONST	SEGMENT
??_C@_04KDGGCKGB@ecdh?$AA@ DB 'ecdh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02HCBHEC@ec?$AA@
CONST	SEGMENT
??_C@_02HCBHEC@ec?$AA@ DB 'ec', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05FGIDCBJD@ecdsa?$AA@
CONST	SEGMENT
??_C@_05FGIDCBJD@ecdsa?$AA@ DB 'ecdsa', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02OGLLFMLI@ui?$AA@
CONST	SEGMENT
??_C@_02OGLLFMLI@ui?$AA@ DB 'ui', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06LOBMEHPF@engine?$AA@
CONST	SEGMENT
??_C@_06LOBMEHPF@engine?$AA@ DB 'engine', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HGGNMPAJ@dynlock?$AA@
CONST	SEGMENT
??_C@_07HGGNMPAJ@dynlock?$AA@ DB 'dynlock', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NOCNOBNG@dso?$AA@
CONST	SEGMENT
??_C@_03NOCNOBNG@dso?$AA@ DB 'dso', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PMFKBDME@debug_malloc2?$AA@
CONST	SEGMENT
??_C@_0O@PMFKBDME@debug_malloc2?$AA@ DB 'debug_malloc2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02OCEEKELO@dh?$AA@
CONST	SEGMENT
??_C@_02OCEEKELO@dh?$AA@ DB 'dh', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BGAJKBNF@RSA_blinding?$AA@
CONST	SEGMENT
??_C@_0N@BGAJKBNF@RSA_blinding?$AA@ DB 'RSA_blinding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OMHHFDME@readdir?$AA@
CONST	SEGMENT
??_C@_07OMHHFDME@readdir?$AA@ DB 'readdir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKLJGHIL@getservbyname?$AA@
CONST	SEGMENT
??_C@_0O@NKLJGHIL@getservbyname?$AA@ DB 'getservbyname', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BFBCKHPD@gethostbyname?$AA@
CONST	SEGMENT
??_C@_0O@BFBCKHPD@gethostbyname?$AA@ DB 'gethostbyname', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03OHAMFFNA@BIO?$AA@
CONST	SEGMENT
??_C@_03OHAMFFNA@BIO?$AA@ DB 'BIO', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CLEMOJNL@debug_malloc?$AA@
CONST	SEGMENT
??_C@_0N@CLEMOJNL@debug_malloc?$AA@ DB 'debug_malloc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NFNCBLNG@rand2?$AA@
CONST	SEGMENT
??_C@_05NFNCBLNG@rand2?$AA@ DB 'rand2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKINGDKC@rand?$AA@
CONST	SEGMENT
??_C@_04HKINGDKC@rand?$AA@ DB 'rand', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NKBFNPDB@ssl_method?$AA@
CONST	SEGMENT
??_C@_0L@NKBFNPDB@ssl_method?$AA@ DB 'ssl_method', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03DIMONNDD@ssl?$AA@
CONST	SEGMENT
??_C@_03DIMONNDD@ssl?$AA@ DB 'ssl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LOCLBOHA@ssl_sess_cert?$AA@
CONST	SEGMENT
??_C@_0O@LOCLBOHA@ssl_sess_cert?$AA@ DB 'ssl_sess_cert', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OAEAFGMD@ssl_session?$AA@
CONST	SEGMENT
??_C@_0M@OAEAFGMD@ssl_session?$AA@ DB 'ssl_session', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08INIFBEOB@ssl_cert?$AA@
CONST	SEGMENT
??_C@_08INIFBEOB@ssl_cert?$AA@ DB 'ssl_cert', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DNHKIAPH@ssl_ctx?$AA@
CONST	SEGMENT
??_C@_07DNHKIAPH@ssl_ctx?$AA@ DB 'ssl_ctx', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JCDDFIOK@x509_store?$AA@
CONST	SEGMENT
??_C@_0L@JCDDFIOK@x509_store?$AA@ DB 'x509_store', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NBJJIGBN@evp_pkey?$AA@
CONST	SEGMENT
??_C@_08NBJJIGBN@evp_pkey?$AA@ DB 'evp_pkey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03DFNMMEBL@rsa?$AA@
CONST	SEGMENT
??_C@_03DFNMMEBL@rsa?$AA@ DB 'rsa', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EAKOMMFI@dsa?$AA@
CONST	SEGMENT
??_C@_03EAKOMMFI@dsa?$AA@ DB 'dsa', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08BHPLFFMD@x509_req?$AA@
CONST	SEGMENT
??_C@_08BHPLFFMD@x509_req?$AA@ DB 'x509_req', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BJFLLMNA@x509_crl?$AA@
CONST	SEGMENT
??_C@_08BJFLLMNA@x509_crl?$AA@ DB 'x509_crl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HNLHIFBP@x509_pkey?$AA@
CONST	SEGMENT
??_C@_09HNLHIFBP@x509_pkey?$AA@ DB 'x509_pkey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DJEHILFA@x509_info?$AA@
CONST	SEGMENT
??_C@_09DJEHILFA@x509_info?$AA@ DB 'x509_info', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04BNGFMDFF@x509?$AA@
CONST	SEGMENT
??_C@_04BNGFMDFF@x509?$AA@ DB 'x509', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OALPHBKG@ex_data?$AA@
CONST	SEGMENT
??_C@_07OALPHBKG@ex_data?$AA@ DB 'ex_data', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JIDPIAJI@err?$AA@
CONST	SEGMENT
??_C@_03JIDPIAJI@err?$AA@ DB 'err', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09OGFJIAEE@?$DM?$DMERROR?$DO?$DO?$AA@
CONST	SEGMENT
??_C@_09OGFJIAEE@?$DM?$DMERROR?$DO?$DO?$AA@ DB '<<ERROR>>', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
_lock_names DD	FLAT:??_C@_09OGFJIAEE@?$DM?$DMERROR?$DO?$DO?$AA@
	DD	FLAT:??_C@_03JIDPIAJI@err?$AA@
	DD	FLAT:??_C@_07OALPHBKG@ex_data?$AA@
	DD	FLAT:??_C@_04BNGFMDFF@x509?$AA@
	DD	FLAT:??_C@_09DJEHILFA@x509_info?$AA@
	DD	FLAT:??_C@_09HNLHIFBP@x509_pkey?$AA@
	DD	FLAT:??_C@_08BJFLLMNA@x509_crl?$AA@
	DD	FLAT:??_C@_08BHPLFFMD@x509_req?$AA@
	DD	FLAT:??_C@_03EAKOMMFI@dsa?$AA@
	DD	FLAT:??_C@_03DFNMMEBL@rsa?$AA@
	DD	FLAT:??_C@_08NBJJIGBN@evp_pkey?$AA@
	DD	FLAT:??_C@_0L@JCDDFIOK@x509_store?$AA@
	DD	FLAT:??_C@_07DNHKIAPH@ssl_ctx?$AA@
	DD	FLAT:??_C@_08INIFBEOB@ssl_cert?$AA@
	DD	FLAT:??_C@_0M@OAEAFGMD@ssl_session?$AA@
	DD	FLAT:??_C@_0O@LOCLBOHA@ssl_sess_cert?$AA@
	DD	FLAT:??_C@_03DIMONNDD@ssl?$AA@
	DD	FLAT:??_C@_0L@NKBFNPDB@ssl_method?$AA@
	DD	FLAT:??_C@_04HKINGDKC@rand?$AA@
	DD	FLAT:??_C@_05NFNCBLNG@rand2?$AA@
	DD	FLAT:??_C@_0N@CLEMOJNL@debug_malloc?$AA@
	DD	FLAT:??_C@_03OHAMFFNA@BIO?$AA@
	DD	FLAT:??_C@_0O@BFBCKHPD@gethostbyname?$AA@
	DD	FLAT:??_C@_0O@NKLJGHIL@getservbyname?$AA@
	DD	FLAT:??_C@_07OMHHFDME@readdir?$AA@
	DD	FLAT:??_C@_0N@BGAJKBNF@RSA_blinding?$AA@
	DD	FLAT:??_C@_02OCEEKELO@dh?$AA@
	DD	FLAT:??_C@_0O@PMFKBDME@debug_malloc2?$AA@
	DD	FLAT:??_C@_03NOCNOBNG@dso?$AA@
	DD	FLAT:??_C@_07HGGNMPAJ@dynlock?$AA@
	DD	FLAT:??_C@_06LOBMEHPF@engine?$AA@
	DD	FLAT:??_C@_02OGLLFMLI@ui?$AA@
	DD	FLAT:??_C@_05FGIDCBJD@ecdsa?$AA@
	DD	FLAT:??_C@_02HCBHEC@ec?$AA@
	DD	FLAT:??_C@_04KDGGCKGB@ecdh?$AA@
	DD	FLAT:??_C@_02LAJDHPIK@bn?$AA@
	DD	FLAT:??_C@_0M@FNJFEIGB@ec_pre_comp?$AA@
	DD	FLAT:??_C@_05ODGDKDLF@store?$AA@
	DD	FLAT:??_C@_04OLDKMDKP@comp?$AA@
	DD	FLAT:??_C@_04DJGCHAOD@fips?$AA@
	DD	FLAT:??_C@_05NEEKIFMD@fips2?$AA@
_hash_coeffs DB	03H
	DB	05H
	DB	07H
	DB	0bH
	DB	0dH
	DB	011H
	DB	013H
	DB	017H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsnprintf
PUBLIC	__vsscanf_l
PUBLIC	_sscanf
PUBLIC	_CRYPTO_get_new_lockid
PUBLIC	_CRYPTO_num_locks
PUBLIC	_CRYPTO_lock
PUBLIC	_CRYPTO_set_locking_callback
PUBLIC	_CRYPTO_get_locking_callback
PUBLIC	_CRYPTO_set_add_lock_callback
PUBLIC	_CRYPTO_get_add_lock_callback
PUBLIC	_CRYPTO_THREADID_set_numeric
PUBLIC	_CRYPTO_THREADID_set_pointer
PUBLIC	_CRYPTO_THREADID_set_callback
PUBLIC	_CRYPTO_THREADID_get_callback
PUBLIC	_CRYPTO_THREADID_current
PUBLIC	_CRYPTO_THREADID_cmp
PUBLIC	_CRYPTO_THREADID_cpy
PUBLIC	_CRYPTO_THREADID_hash
PUBLIC	_CRYPTO_set_id_callback
PUBLIC	_CRYPTO_get_id_callback
PUBLIC	_CRYPTO_thread_id
PUBLIC	_CRYPTO_get_lock_name
PUBLIC	_CRYPTO_add_lock
PUBLIC	_CRYPTO_get_new_dynlockid
PUBLIC	_CRYPTO_destroy_dynlockid
PUBLIC	_CRYPTO_get_dynlock_value
PUBLIC	_CRYPTO_set_dynlock_create_callback
PUBLIC	_CRYPTO_set_dynlock_lock_callback
PUBLIC	_CRYPTO_set_dynlock_destroy_callback
PUBLIC	_CRYPTO_get_dynlock_create_callback
PUBLIC	_CRYPTO_get_dynlock_lock_callback
PUBLIC	_CRYPTO_get_dynlock_destroy_callback
PUBLIC	_OpenSSLDie
PUBLIC	_OPENSSL_ia32cap_loc
PUBLIC	_OPENSSL_isservice
PUBLIC	_CRYPTO_memcmp
PUBLIC	_OPENSSL_cpuid_setup
PUBLIC	_OPENSSL_showfatal
PUBLIC	_OPENSSL_stderr
PUBLIC	_DllMain@12
PUBLIC	??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@	; `string'
PUBLIC	??_C@_0BA@LPBALOME@pointer?5?$CB?$DN?5NULL?$AA@	; `string'
PUBLIC	??_C@_07OBLKMMON@dynamic?$AA@			; `string'
PUBLIC	??_C@_05MBDEGLCK@ERROR?$AA@			; `string'
PUBLIC	??_C@_0BA@MIDPHNKH@OPENSSL_ia32cap?$AA@		; `string'
PUBLIC	??_C@_05OKCMKDO@?$CFI64i?$AA@			; `string'
PUBLIC	??_C@_0BD@EHKNLPFP@_OPENSSL_isservice?$AA@	; `string'
PUBLIC	??_C@_1BG@MLNJHGBB@?$AAS?$AAe?$AAr?$AAv?$AAi?$AAc?$AAe?$AA?9?$AA0?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_07BDLNEHJF@OpenSSL?$AA@			; `string'
PUBLIC	??_C@_0P@LIPMGDB@OpenSSL?3?5FATAL?$AA@		; `string'
PUBLIC	??_C@_0DG@JJAMFCAP@?$CFs?$CI?$CFd?$CJ?3?5OpenSSL?5internal?5error?0?5@ ; `string'
EXTRN	__imp___exit:PROC
EXTRN	__imp__strtoul:PROC
EXTRN	__imp__getenv:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp__wcsstr:PROC
EXTRN	__imp__GetStdHandle@4:PROC
EXTRN	__imp__GetFileType@4:PROC
EXTRN	__imp__WriteFile@20:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__DeregisterEventSource@4:PROC
EXTRN	__imp__RegisterEventSourceA@8:PROC
EXTRN	__imp__ReportEventA@36:PROC
EXTRN	__imp__GetProcessWindowStation@0:PROC
EXTRN	__imp__GetUserObjectInformationW@20:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_set:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_find:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_OPENSSL_init:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_OPENSSL_ia32_cpuid:PROC
EXTRN	__imp__raise:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__alloca_probe_16:PROC
EXTRN	__chkstk:PROC
EXTRN	_OPENSSL_ia32cap_P:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT ??_C@_0DG@JJAMFCAP@?$CFs?$CI?$CFd?$CJ?3?5OpenSSL?5internal?5error?0?5@
CONST	SEGMENT
??_C@_0DG@JJAMFCAP@?$CFs?$CI?$CFd?$CJ?3?5OpenSSL?5internal?5error?0?5@ DB '%'
	DB	's(%d): OpenSSL internal error, assertion failed: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LIPMGDB@OpenSSL?3?5FATAL?$AA@
CONST	SEGMENT
??_C@_0P@LIPMGDB@OpenSSL?3?5FATAL?$AA@ DB 'OpenSSL: FATAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BDLNEHJF@OpenSSL?$AA@
CONST	SEGMENT
??_C@_07BDLNEHJF@OpenSSL?$AA@ DB 'OpenSSL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@MLNJHGBB@?$AAS?$AAe?$AAr?$AAv?$AAi?$AAc?$AAe?$AA?9?$AA0?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@MLNJHGBB@?$AAS?$AAe?$AAr?$AAv?$AAi?$AAc?$AAe?$AA?9?$AA0?$AAx?$AA?$AA@ DB 'S'
	DB	00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'-', 00H, '0', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EHKNLPFP@_OPENSSL_isservice?$AA@
CONST	SEGMENT
??_C@_0BD@EHKNLPFP@_OPENSSL_isservice?$AA@ DB '_OPENSSL_isservice', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05OKCMKDO@?$CFI64i?$AA@
CONST	SEGMENT
??_C@_05OKCMKDO@?$CFI64i?$AA@ DB '%I64i', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MIDPHNKH@OPENSSL_ia32cap?$AA@
CONST	SEGMENT
??_C@_0BA@MIDPHNKH@OPENSSL_ia32cap?$AA@ DB 'OPENSSL_ia32cap', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MBDEGLCK@ERROR?$AA@
CONST	SEGMENT
??_C@_05MBDEGLCK@ERROR?$AA@ DB 'ERROR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OBLKMMON@dynamic?$AA@
CONST	SEGMENT
??_C@_07OBLKMMON@dynamic?$AA@ DB 'dynamic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LPBALOME@pointer?5?$CB?$DN?5NULL?$AA@
CONST	SEGMENT
??_C@_0BA@LPBALOME@pointer?5?$CB?$DN?5NULL?$AA@ DB 'pointer != NULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
CONST	SEGMENT
??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@ DB '.\crypto\cryptlib.c', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _DllMain@12
_TEXT	SEGMENT
_hinstDLL$ = 8						; size = 4
_fdwReason$ = 12					; size = 4
_lpvReserved$ = 16					; size = 4
_DllMain@12 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 760
	sub	DWORD PTR _fdwReason$[esp-4], 1
	jne	SHORT $LN12@DllMain
; Line 762
	call	_OPENSSL_cpuid_setup
; Line 768
	mov	edx, DWORD PTR _hinstDLL$[esp-4]
	mov	eax, 23117				; 00005a4dH
	cmp	WORD PTR [edx], ax
	jne	SHORT $LN12@DllMain
; Line 769
	push	esi
	mov	esi, DWORD PTR [edx+60]
; Line 771
	mov	eax, 1
	cmp	DWORD PTR [esi+edx], 17744		; 00004550H
	jne	SHORT $LN14@DllMain
	cmp	edx, DWORD PTR [esi+edx+52]
	mov	ecx, DWORD PTR _OPENSSL_NONPIC_relocated
	cmovne	ecx, eax
	mov	DWORD PTR _OPENSSL_NONPIC_relocated, ecx
$LN14@DllMain:
	pop	esi
; Line 787
	ret	12					; 0000000cH
$LN12@DllMain:
; Line 786
	mov	eax, 1
; Line 787
	ret	12					; 0000000cH
_DllMain@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OPENSSL_stderr
_TEXT	SEGMENT
_OPENSSL_stderr PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 1016
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 1017
	ret	0
_OPENSSL_stderr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OPENSSL_showfatal
_TEXT	SEGMENT
_pmsg$1 = -264						; size = 4
_out$2 = -264						; size = 4
_buf$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_fmta$ = 8						; size = 4
_OPENSSL_showfatal PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 869
	mov	eax, 264				; 00000108H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+264], eax
	push	esi
; Line 876
	push	-12					; fffffff4H
	call	DWORD PTR __imp__GetStdHandle@4
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN16@OPENSSL_sh
	push	esi
	call	DWORD PTR __imp__GetFileType@4
	test	eax, eax
	je	SHORT $LN16@OPENSSL_sh
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	lea	eax, DWORD PTR _fmta$[esp+268]
	push	eax
	push	0
	push	DWORD PTR _fmta$[esp+272]
	lea	eax, DWORD PTR _buf$[esp+280]
	push	256					; 00000100H
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
	add	esp, 28					; 0000001cH
; Line 1390
	or	ecx, -1
	test	eax, eax
	cmovs	eax, ecx
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 884
	lea	ecx, DWORD PTR _out$2[esp+268]
	push	0
	push	ecx
	test	eax, eax
	mov	ecx, 256				; 00000100H
	cmovs	eax, ecx
	push	eax
	lea	eax, DWORD PTR _buf$[esp+280]
	push	eax
	push	esi
	call	DWORD PTR __imp__WriteFile@20
	pop	esi
; Line 979
	mov	ecx, DWORD PTR __$ArrayPad$[esp+264]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	ret	0
$LN16@OPENSSL_sh:
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	lea	eax, DWORD PTR _fmta$[esp+268]
	push	eax
	push	0
	push	DWORD PTR _fmta$[esp+272]
	lea	eax, DWORD PTR _buf$[esp+280]
	push	255					; 000000ffH
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
	add	esp, 28					; 0000001cH
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 950
	mov	BYTE PTR _buf$[esp+523], 0
; Line 955
	call	_OPENSSL_isservice
	test	eax, eax
	jle	SHORT $LN27@OPENSSL_sh
; Line 956
	push	OFFSET ??_C@_07BDLNEHJF@OpenSSL?$AA@
	push	0
	call	DWORD PTR __imp__RegisterEventSourceA@8
	mov	esi, eax
; Line 958
	test	esi, esi
	je	SHORT $LN28@OPENSSL_sh
; Line 961
	push	0
	lea	eax, DWORD PTR _buf$[esp+272]
	mov	DWORD PTR _pmsg$1[esp+272], eax
	lea	eax, DWORD PTR _pmsg$1[esp+272]
	push	eax
	push	0
	push	1
	push	0
	push	0
	push	0
	push	1
	push	esi
	call	DWORD PTR __imp__ReportEventA@36
; Line 974
	push	esi
	call	DWORD PTR __imp__DeregisterEventSource@4
	pop	esi
; Line 979
	mov	ecx, DWORD PTR __$ArrayPad$[esp+264]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	ret	0
$LN27@OPENSSL_sh:
; Line 978
	push	16					; 00000010H
	push	OFFSET ??_C@_0P@LIPMGDB@OpenSSL?3?5FATAL?$AA@
	lea	eax, DWORD PTR _buf$[esp+276]
	push	eax
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
$LN28@OPENSSL_sh:
; Line 979
	mov	ecx, DWORD PTR __$ArrayPad$[esp+268]
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	ret	0
_OPENSSL_showfatal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OPENSSL_cpuid_setup
_TEXT	SEGMENT
_vec$ = -8						; size = 8
_OPENSSL_cpuid_setup PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 680
	mov	eax, 8
	call	__chkstk
; Line 686
	cmp	DWORD PTR ?trigger@?1??OPENSSL_cpuid_setup@@9@9, 0
	jne	$LN1@OPENSSL_cp
; Line 690
	push	ebx
	push	edi
	push	OFFSET ??_C@_0BA@MIDPHNKH@OPENSSL_ia32cap?$AA@
	mov	DWORD PTR ?trigger@?1??OPENSSL_cpuid_setup@@9@9, 1
	call	DWORD PTR __imp__getenv
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	je	$LN3@OPENSSL_cp
; Line 691
	xor	ebx, ebx
; Line 693
	lea	eax, DWORD PTR _vec$[esp+16]
	cmp	BYTE PTR [edi], 126			; 0000007eH
	push	esi
	sete	bl
	push	eax
	push	OFFSET ??_C@_05OKCMKDO@?$CFI64i?$AA@
	lea	esi, DWORD PTR [ebx+edi]
	push	esi
	call	_sscanf
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@OPENSSL_cp
; Line 694
	push	eax
	push	eax
	push	esi
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _vec$[esp+20], eax
	mov	DWORD PTR _vec$[esp+24], 0
$LN5@OPENSSL_cp:
; Line 699
	test	ebx, ebx
	je	SHORT $LN6@OPENSSL_cp
; Line 700
	push	OFFSET _OPENSSL_ia32cap_P
	call	_OPENSSL_ia32_cpuid
	mov	esi, DWORD PTR _vec$[esp+24]
	add	esp, 4
	mov	ecx, DWORD PTR _vec$[esp+24]
	not	esi
	not	ecx
	and	eax, esi
	and	edx, ecx
	jmp	SHORT $LN14@OPENSSL_cp
$LN6@OPENSSL_cp:
; Line 701
	cmp	BYTE PTR [edi], 58			; 0000003aH
	jne	SHORT $LN8@OPENSSL_cp
; Line 702
	push	OFFSET _OPENSSL_ia32cap_P
	call	_OPENSSL_ia32_cpuid
	add	esp, 4
$LN14@OPENSSL_cp:
	mov	DWORD PTR _vec$[esp+24], edx
	mov	DWORD PTR _vec$[esp+20], eax
$LN8@OPENSSL_cp:
; Line 705
	push	58					; 0000003aH
	push	edi
	mov	DWORD PTR _OPENSSL_ia32cap_P+8, 0
	call	DWORD PTR __imp__strchr
	add	esp, 8
	pop	esi
	test	eax, eax
	je	SHORT $LN4@OPENSSL_cp
; Line 707
	inc	eax
; Line 708
	xor	ebx, ebx
; Line 709
	push	0
	push	0
	cmp	BYTE PTR [eax], 126			; 0000007eH
	sete	bl
	add	eax, ebx
	push	eax
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
; Line 710
	test	ebx, ebx
	je	SHORT $LN10@OPENSSL_cp
; Line 711
	not	eax
	and	DWORD PTR _OPENSSL_ia32cap_P+8, eax
	jmp	SHORT $LN4@OPENSSL_cp
$LN10@OPENSSL_cp:
; Line 713
	mov	DWORD PTR _OPENSSL_ia32cap_P+8, eax
; Line 715
	jmp	SHORT $LN4@OPENSSL_cp
$LN3@OPENSSL_cp:
; Line 716
	push	OFFSET _OPENSSL_ia32cap_P
	call	_OPENSSL_ia32_cpuid
	add	esp, 4
	mov	DWORD PTR _vec$[esp+16], eax
	mov	DWORD PTR _vec$[esp+20], edx
$LN4@OPENSSL_cp:
; Line 723
	mov	eax, DWORD PTR _vec$[esp+16]
	or	eax, 1024				; 00000400H
	mov	DWORD PTR _OPENSSL_ia32cap_P, eax
; Line 724
	mov	eax, DWORD PTR _vec$[esp+20]
	pop	edi
	mov	DWORD PTR _OPENSSL_ia32cap_P+4, eax
	pop	ebx
$LN1@OPENSSL_cp:
; Line 725
	add	esp, 8
	ret	0
_OPENSSL_cpuid_setup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_memcmp
_TEXT	SEGMENT
_in_a$ = 8						; size = 4
_in_b$ = 12						; size = 4
_len$ = 16						; size = 4
_CRYPTO_memcmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 1020
	push	esi
; Line 1026
	mov	esi, DWORD PTR _len$[esp]
	xor	dl, dl
	test	esi, esi
	je	SHORT $LN10@CRYPTO_mem
	mov	eax, DWORD PTR _in_a$[esp]
	push	edi
	mov	edi, DWORD PTR _in_b$[esp+4]
	sub	edi, eax
$LL4@CRYPTO_mem:
; Line 1027
	mov	cl, BYTE PTR [edi+eax]
	lea	eax, DWORD PTR [eax+1]
	xor	cl, BYTE PTR [eax-1]
	or	dl, cl
	sub	esi, 1
	jne	SHORT $LL4@CRYPTO_mem
	pop	edi
$LN10@CRYPTO_mem:
; Line 1029
	movzx	eax, dl
	pop	esi
; Line 1030
	ret	0
_CRYPTO_memcmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OPENSSL_isservice
_TEXT	SEGMENT
_name$1$ = -12						; size = 4
_len$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_OPENSSL_isservice PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 806
	push	ebp
	mov	ebp, esp
	mov	eax, 12					; 0000000cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 817
	mov	eax, DWORD PTR ?_OPENSSL_isservice@?1??OPENSSL_isservice@@9@9
	push	esi
	push	edi
	test	eax, eax
	jne	$LN4@OPENSSL_is
; Line 818
	push	eax
	call	DWORD PTR __imp__GetModuleHandleA@4
; Line 819
	test	eax, eax
	je	SHORT $LN14@OPENSSL_is
; Line 820
	push	OFFSET ??_C@_0BD@EHKNLPFP@_OPENSSL_isservice?$AA@
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR ?_OPENSSL_isservice@?1??OPENSSL_isservice@@9@9, eax
	jmp	SHORT $LN3@OPENSSL_is
$LN14@OPENSSL_is:
	mov	eax, DWORD PTR ?_OPENSSL_isservice@?1??OPENSSL_isservice@@9@9
$LN3@OPENSSL_is:
; Line 821
	test	eax, eax
	jne	$LN4@OPENSSL_is
; Line 822
	mov	DWORD PTR ?_OPENSSL_isservice@?1??OPENSSL_isservice@@9@9, -1
$LN5@OPENSSL_is:
; Line 828
	call	DWORD PTR __imp__GetProcessWindowStation@0
	mov	edi, eax
; Line 829
	test	edi, edi
	je	$LN8@OPENSSL_is
; Line 832
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	push	0
	push	0
	push	2
	push	edi
	call	DWORD PTR __imp__GetUserObjectInformationW@20
	test	eax, eax
	jne	$LN8@OPENSSL_is
	call	DWORD PTR __imp__GetLastError@0
	cmp	eax, 122				; 0000007aH
	jne	$LN8@OPENSSL_is
; Line 836
	mov	esi, DWORD PTR _len$[ebp]
	cmp	esi, 512				; 00000200H
	ja	$LN8@OPENSSL_is
; Line 838
	inc	esi
	and	esi, -2					; fffffffeH
	mov	DWORD PTR _len$[ebp], esi
; Line 839
	lea	eax, DWORD PTR [esi+2]
	call	__alloca_probe_16
	mov	eax, esp
; Line 840
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	esi
	push	eax
	push	2
	push	edi
	mov	DWORD PTR _name$1$[ebp], eax
	call	DWORD PTR __imp__GetUserObjectInformationW@20
	test	eax, eax
	je	SHORT $LN8@OPENSSL_is
; Line 843
	mov	eax, DWORD PTR _len$[ebp]
; Line 844
	xor	edx, edx
	mov	ecx, DWORD PTR _name$1$[ebp]
	inc	eax
	and	eax, -2					; fffffffeH
	mov	DWORD PTR _len$[ebp], eax
	shr	eax, 1
; Line 851
	push	OFFSET ??_C@_1BG@MLNJHGBB@?$AAS?$AAe?$AAr?$AAv?$AAi?$AAc?$AAe?$AA?9?$AA0?$AAx?$AA?$AA@
	push	ecx
	mov	WORD PTR [ecx+eax*2], dx
	call	DWORD PTR __imp__wcsstr
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 860
	lea	esp, DWORD PTR [ebp-20]
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN4@OPENSSL_is:
; Line 825
	cmp	eax, -1
	je	$LN5@OPENSSL_is
; Line 826
	call	eax
; Line 860
	lea	esp, DWORD PTR [ebp-20]
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@OPENSSL_is:
; Line 834
	or	eax, -1
; Line 860
	lea	esp, DWORD PTR [ebp-20]
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_OPENSSL_isservice ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OPENSSL_ia32cap_loc
_TEXT	SEGMENT
_OPENSSL_ia32cap_loc PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 665
	mov	DWORD PTR _OPENSSL_ia32cap_P+4, 0
; Line 669
	mov	eax, OFFSET _OPENSSL_ia32cap_P
	mov	DWORD PTR _OPENSSL_ia32cap_P+8, 0
; Line 670
	ret	0
_OPENSSL_ia32cap_loc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _OpenSSLDie
_TEXT	SEGMENT
_file$ = 8						; size = 4
_line$ = 12						; size = 4
_assertion$ = 16					; size = 4
_OpenSSLDie PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 999
	push	DWORD PTR _assertion$[esp-4]
	push	DWORD PTR _line$[esp]
	push	DWORD PTR _file$[esp+4]
	push	OFFSET ??_C@_0DG@JJAMFCAP@?$CFs?$CI?$CFd?$CJ?3?5OpenSSL?5internal?5error?0?5@
	call	_OPENSSL_showfatal
; Line 1008
	push	22					; 00000016H
	call	DWORD PTR __imp__raise
	add	esp, 20					; 00000014H
; Line 1010
	push	3
	call	DWORD PTR __imp___exit
$LN4@OpenSSLDie:
$LN3@OpenSSLDie:
	int	3
_OpenSSLDie ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_dynlock_destroy_callback
_TEXT	SEGMENT
_CRYPTO_get_dynlock_destroy_callback PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 370
	mov	eax, DWORD PTR _dynlock_destroy_callback
; Line 371
	ret	0
_CRYPTO_get_dynlock_destroy_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_dynlock_lock_callback
_TEXT	SEGMENT
_CRYPTO_get_dynlock_lock_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 365
	mov	eax, DWORD PTR _dynlock_lock_callback
; Line 366
	ret	0
_CRYPTO_get_dynlock_lock_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_dynlock_create_callback
_TEXT	SEGMENT
_CRYPTO_get_dynlock_create_callback PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 358
	mov	eax, DWORD PTR _dynlock_create_callback
; Line 359
	ret	0
_CRYPTO_get_dynlock_create_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_dynlock_destroy_callback
_TEXT	SEGMENT
_func$ = 8						; size = 4
_CRYPTO_set_dynlock_destroy_callback PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 392
	mov	eax, DWORD PTR _func$[esp-4]
	mov	DWORD PTR _dynlock_destroy_callback, eax
; Line 393
	ret	0
_CRYPTO_set_dynlock_destroy_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_dynlock_lock_callback
_TEXT	SEGMENT
_func$ = 8						; size = 4
_CRYPTO_set_dynlock_lock_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 385
	mov	eax, DWORD PTR _func$[esp-4]
	mov	DWORD PTR _dynlock_lock_callback, eax
; Line 386
	ret	0
_CRYPTO_set_dynlock_lock_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_dynlock_create_callback
_TEXT	SEGMENT
_func$ = 8						; size = 4
_CRYPTO_set_dynlock_create_callback PROC		; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 376
	mov	eax, DWORD PTR _func$[esp-4]
	mov	DWORD PTR _dynlock_create_callback, eax
; Line 377
	ret	0
_CRYPTO_set_dynlock_create_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_dynlock_value
_TEXT	SEGMENT
_i$ = 8							; size = 4
_CRYPTO_get_dynlock_value PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 337
	push	esi
	push	edi
; Line 339
	mov	edi, DWORD PTR _i$[esp+4]
	xor	esi, esi
	test	edi, edi
	je	SHORT $LN2@CRYPTO_get
; Line 340
	or	eax, -1
	sub	eax, edi
	mov	edi, eax
$LN2@CRYPTO_get:
; Line 342
	push	342					; 00000156H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	29					; 0000001dH
	push	9
	call	_CRYPTO_lock
; Line 344
	mov	eax, DWORD PTR _dyn_locks
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN4@CRYPTO_get
	push	eax
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jge	SHORT $LN4@CRYPTO_get
; Line 345
	push	edi
	push	DWORD PTR _dyn_locks
	call	_sk_value
	mov	esi, eax
	add	esp, 8
; Line 346
	test	esi, esi
	je	SHORT $LN4@CRYPTO_get
; Line 347
	inc	DWORD PTR [esi]
$LN4@CRYPTO_get:
; Line 349
	push	349					; 0000015dH
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	29					; 0000001dH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 351
	test	esi, esi
	je	SHORT $LN5@CRYPTO_get
; Line 352
	mov	eax, DWORD PTR [esi+4]
	pop	edi
	pop	esi
; Line 354
	ret	0
$LN5@CRYPTO_get:
	pop	edi
; Line 353
	xor	eax, eax
	pop	esi
; Line 354
	ret	0
_CRYPTO_get_dynlock_value ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_destroy_dynlockid
_TEXT	SEGMENT
_i$ = 8							; size = 4
_CRYPTO_destroy_dynlockid PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 300
	push	edi
; Line 302
	mov	edi, DWORD PTR _i$[esp]
	test	edi, edi
	je	SHORT $LN2@CRYPTO_des
; Line 303
	or	eax, -1
	sub	eax, edi
	mov	edi, eax
$LN2@CRYPTO_des:
; Line 304
	cmp	DWORD PTR _dynlock_destroy_callback, 0
	je	$LN9@CRYPTO_des
; Line 307
	push	307					; 00000133H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	29					; 0000001dH
	push	9
	call	_CRYPTO_lock
; Line 309
	mov	eax, DWORD PTR _dyn_locks
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN5@CRYPTO_des
	push	eax
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jge	SHORT $LN5@CRYPTO_des
; Line 313
	push	esi
	push	edi
	push	DWORD PTR _dyn_locks
	call	_sk_value
	mov	esi, eax
	add	esp, 8
; Line 314
	test	esi, esi
	je	SHORT $LN8@CRYPTO_des
; Line 315
	dec	DWORD PTR [esi]
; Line 323
	cmp	DWORD PTR [esi], 0
	jg	SHORT $LN7@CRYPTO_des
; Line 324
	push	0
	push	edi
	push	DWORD PTR _dyn_locks
	call	_sk_set
	add	esp, 12					; 0000000cH
; Line 325
	jmp	SHORT $LN8@CRYPTO_des
$LN7@CRYPTO_des:
; Line 326
	xor	esi, esi
$LN8@CRYPTO_des:
; Line 328
	push	328					; 00000148H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	29					; 0000001dH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 330
	test	esi, esi
	je	SHORT $LN62@CRYPTO_des
; Line 331
	push	331					; 0000014bH
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	DWORD PTR [esi+4]
	call	DWORD PTR _dynlock_destroy_callback
; Line 332
	push	esi
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
$LN62@CRYPTO_des:
	pop	esi
$LN9@CRYPTO_des:
	pop	edi
; Line 334
	ret	0
$LN5@CRYPTO_des:
; Line 310
	push	310					; 00000136H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	29					; 0000001dH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
	pop	edi
; Line 334
	ret	0
_CRYPTO_destroy_dynlockid ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_new_dynlockid
_TEXT	SEGMENT
_CRYPTO_get_new_dynlockid PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 246
	cmp	DWORD PTR _dynlock_create_callback, 0
	jne	SHORT $LN2@CRYPTO_get
; Line 247
	push	248					; 000000f8H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	100					; 00000064H
	push	103					; 00000067H
	push	15					; 0000000fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 249
	xor	eax, eax
; Line 297
	ret	0
$LN2@CRYPTO_get:
; Line 595
	mov	eax, DWORD PTR _locking_callback
	test	eax, eax
	je	SHORT $LN15@CRYPTO_get
; Line 596
	push	251					; 000000fbH
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	29					; 0000001dH
	push	9
	call	eax
	mov	eax, DWORD PTR _locking_callback
	add	esp, 16					; 00000010H
$LN15@CRYPTO_get:
; Line 253
	cmp	DWORD PTR _dyn_locks, 0
	jne	SHORT $LN3@CRYPTO_get
	call	_sk_new_null
	mov	DWORD PTR _dyn_locks, eax
	test	eax, eax
; Line 595
	mov	eax, DWORD PTR _locking_callback
; Line 253
	jne	SHORT $LN3@CRYPTO_get
; Line 595
	test	eax, eax
	je	SHORT $LN24@CRYPTO_get
; Line 596
	push	254					; 000000feH
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	29					; 0000001dH
	push	10					; 0000000aH
	call	eax
	add	esp, 16					; 00000010H
$LN24@CRYPTO_get:
; Line 255
	push	255					; 000000ffH
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	65					; 00000041H
	push	103					; 00000067H
	push	15					; 0000000fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 256
	xor	eax, eax
; Line 297
	ret	0
$LN3@CRYPTO_get:
; Line 595
	test	eax, eax
	je	SHORT $LN32@CRYPTO_get
; Line 596
	push	258					; 00000102H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	29					; 0000001dH
	push	10					; 0000000aH
	call	eax
	add	esp, 16					; 00000010H
$LN32@CRYPTO_get:
	push	edi
; Line 260
	push	260					; 00000104H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	8
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 261
	test	edi, edi
	jne	SHORT $LN4@CRYPTO_get
; Line 262
	push	262					; 00000106H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	65					; 00000041H
	push	103					; 00000067H
	push	15					; 0000000fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 263
	xor	eax, eax
	pop	edi
; Line 297
	ret	0
$LN4@CRYPTO_get:
; Line 266
	push	266					; 0000010aH
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	mov	DWORD PTR [edi], 1
	call	DWORD PTR _dynlock_create_callback
	add	esp, 8
	mov	DWORD PTR [edi+4], eax
; Line 267
	test	eax, eax
	jne	SHORT $LN5@CRYPTO_get
; Line 268
	push	edi
	call	_CRYPTO_free
; Line 269
	push	269					; 0000010dH
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	65					; 00000041H
	push	103					; 00000067H
	push	15					; 0000000fH
	call	_ERR_put_error
	add	esp, 24					; 00000018H
; Line 270
	xor	eax, eax
	pop	edi
; Line 297
	ret	0
$LN5@CRYPTO_get:
; Line 595
	mov	eax, DWORD PTR _locking_callback
	test	eax, eax
	je	SHORT $LN40@CRYPTO_get
; Line 596
	push	273					; 00000111H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	29					; 0000001dH
	push	9
	call	eax
	add	esp, 16					; 00000010H
$LN40@CRYPTO_get:
	push	esi
; Line 275
	push	0
	push	DWORD PTR _dyn_locks
	call	_sk_find
	add	esp, 8
	mov	esi, eax
; Line 283
	push	edi
	cmp	esi, -1
	jne	SHORT $LN6@CRYPTO_get
	push	DWORD PTR _dyn_locks
	call	_sk_push
	add	esp, 8
	lea	esi, DWORD PTR [eax-1]
	jmp	SHORT $LN7@CRYPTO_get
$LN6@CRYPTO_get:
; Line 288
	push	esi
	push	DWORD PTR _dyn_locks
	call	_sk_set
	add	esp, 12					; 0000000cH
$LN7@CRYPTO_get:
; Line 595
	mov	eax, DWORD PTR _locking_callback
	test	eax, eax
	je	SHORT $LN48@CRYPTO_get
; Line 596
	push	289					; 00000121H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	29					; 0000001dH
	push	10					; 0000000aH
	call	eax
	add	esp, 16					; 00000010H
$LN48@CRYPTO_get:
; Line 291
	cmp	esi, -1
	jne	SHORT $LN8@CRYPTO_get
; Line 292
	push	292					; 00000124H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	DWORD PTR [edi+4]
	call	DWORD PTR _dynlock_destroy_callback
; Line 293
	push	edi
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
; Line 296
	neg	esi
	mov	eax, esi
	pop	esi
	pop	edi
; Line 297
	ret	0
$LN8@CRYPTO_get:
; Line 295
	inc	esi
; Line 296
	neg	esi
	mov	eax, esi
	pop	esi
	pop	edi
; Line 297
	ret	0
_CRYPTO_get_new_dynlockid ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_add_lock
_TEXT	SEGMENT
_pointer$ = 8						; size = 4
_amount$ = 12						; size = 4
_type$ = 16						; size = 4
_file$ = 20						; size = 4
_line$ = 24						; size = 4
_CRYPTO_add_lock PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 604
	mov	eax, DWORD PTR _add_lock_callback
	test	eax, eax
	je	SHORT $LN2@CRYPTO_add
; Line 609
	jmp	eax
$LN2@CRYPTO_add:
	push	esi
; Line 620
	push	DWORD PTR _line$[esp]
	push	DWORD PTR _file$[esp+4]
	push	DWORD PTR _type$[esp+8]
	push	9
	call	_CRYPTO_lock
; Line 634
	push	DWORD PTR _line$[esp+16]
	mov	ecx, DWORD PTR _pointer$[esp+20]
	push	DWORD PTR _file$[esp+20]
	push	DWORD PTR _type$[esp+24]
	mov	esi, DWORD PTR [ecx]
	add	esi, DWORD PTR _amount$[esp+28]
	push	10					; 0000000aH
	mov	DWORD PTR [ecx], esi
	call	_CRYPTO_lock
	add	esp, 32					; 00000020H
; Line 636
	mov	eax, esi
	pop	esi
; Line 637
	ret	0
_CRYPTO_add_lock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_lock_name
_TEXT	SEGMENT
_type$ = 8						; size = 4
_CRYPTO_get_lock_name PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 641
	mov	eax, DWORD PTR _type$[esp-4]
	test	eax, eax
	jns	SHORT $LN2@CRYPTO_get
; Line 642
	mov	eax, OFFSET ??_C@_07OBLKMMON@dynamic?$AA@
; Line 649
	ret	0
$LN2@CRYPTO_get:
; Line 643
	cmp	eax, 41					; 00000029H
	jge	SHORT $LN4@CRYPTO_get
; Line 644
	mov	eax, DWORD PTR _lock_names[eax*4]
; Line 649
	ret	0
$LN4@CRYPTO_get:
	push	esi
; Line 645
	push	DWORD PTR _app_locks
	lea	esi, DWORD PTR [eax-41]
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jle	SHORT $LN6@CRYPTO_get
; Line 646
	mov	eax, OFFSET ??_C@_05MBDEGLCK@ERROR?$AA@
	pop	esi
; Line 649
	ret	0
$LN6@CRYPTO_get:
; Line 648
	push	esi
	push	DWORD PTR _app_locks
	call	_sk_value
	add	esp, 8
	pop	esi
; Line 649
	ret	0
_CRYPTO_get_lock_name ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_thread_id
_TEXT	SEGMENT
_CRYPTO_thread_id PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 539
	mov	eax, DWORD PTR _id_callback
	test	eax, eax
	jne	SHORT $LN2@CRYPTO_thr
; Line 543
	jmp	DWORD PTR __imp__GetCurrentThreadId@0
$LN2@CRYPTO_thr:
; Line 552
	jmp	eax
_CRYPTO_thread_id ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_id_callback
_TEXT	SEGMENT
_CRYPTO_get_id_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 527
	mov	eax, DWORD PTR _id_callback
; Line 528
	ret	0
_CRYPTO_get_id_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_id_callback
_TEXT	SEGMENT
_func$ = 8						; size = 4
_CRYPTO_set_id_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 532
	mov	eax, DWORD PTR _func$[esp-4]
	mov	DWORD PTR _id_callback, eax
; Line 533
	ret	0
_CRYPTO_set_id_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_THREADID_hash
_TEXT	SEGMENT
_id$ = 8						; size = 4
_CRYPTO_THREADID_hash PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 522
	mov	eax, DWORD PTR _id$[esp-4]
	mov	eax, DWORD PTR [eax+4]
; Line 523
	ret	0
_CRYPTO_THREADID_hash ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_THREADID_cpy
_TEXT	SEGMENT
_dest$ = 8						; size = 4
_src$ = 12						; size = 4
_CRYPTO_THREADID_cpy PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 517
	mov	edx, DWORD PTR _src$[esp-4]
	mov	ecx, DWORD PTR _dest$[esp-4]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 518
	ret	0
_CRYPTO_THREADID_cpy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_THREADID_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_CRYPTO_THREADID_cmp PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 512
	mov	ecx, DWORD PTR _a$[esp-4]
	mov	edx, DWORD PTR _b$[esp-4]
	push	esi
	mov	esi, 4
	npad	2
$LL5@CRYPTO_THR:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN4@CRYPTO_THR
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL5@CRYPTO_THR
	xor	eax, eax
	pop	esi
; Line 513
	ret	0
$LN4@CRYPTO_THR:
; Line 512
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN6@CRYPTO_THR
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN6@CRYPTO_THR
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN6@CRYPTO_THR
	mov	al, BYTE PTR [ecx+3]
	cmp	al, BYTE PTR [edx+3]
	jne	SHORT $LN6@CRYPTO_THR
	xor	eax, eax
	pop	esi
; Line 513
	ret	0
$LN6@CRYPTO_THR:
; Line 512
	sbb	eax, eax
	or	eax, 1
	pop	esi
; Line 513
	ret	0
_CRYPTO_THREADID_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_THREADID_current
_TEXT	SEGMENT
_id$ = 8						; size = 4
_CRYPTO_THREADID_current PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 486
	mov	eax, DWORD PTR _threadid_callback
	test	eax, eax
	je	SHORT $LN2@CRYPTO_THR
; Line 487
	jmp	eax
$LN2@CRYPTO_THR:
; Line 492
	mov	eax, DWORD PTR _id_callback
	test	eax, eax
	je	SHORT $LN3@CRYPTO_THR
; Line 493
	call	eax
; Line 429
	mov	ecx, DWORD PTR _id$[esp-4]
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx], xmm0
; Line 430
	mov	DWORD PTR [ecx+4], eax
; Line 508
	ret	0
$LN3@CRYPTO_THR:
; Line 501
	call	DWORD PTR __imp__GetCurrentThreadId@0
; Line 429
	mov	ecx, DWORD PTR _id$[esp-4]
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx], xmm0
; Line 430
	mov	DWORD PTR [ecx+4], eax
; Line 508
	ret	0
_CRYPTO_THREADID_current ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_THREADID_get_callback
_TEXT	SEGMENT
_CRYPTO_THREADID_get_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 481
	mov	eax, DWORD PTR _threadid_callback
; Line 482
	ret	0
_CRYPTO_THREADID_get_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_THREADID_set_callback
_TEXT	SEGMENT
_func$ = 8						; size = 4
_CRYPTO_THREADID_set_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 474
	cmp	DWORD PTR _threadid_callback, 0
	je	SHORT $LN2@CRYPTO_THR
; Line 475
	xor	eax, eax
; Line 478
	ret	0
$LN2@CRYPTO_THR:
; Line 476
	mov	eax, DWORD PTR _func$[esp-4]
	mov	DWORD PTR _threadid_callback, eax
; Line 477
	mov	eax, 1
; Line 478
	ret	0
_CRYPTO_THREADID_set_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_THREADID_set_pointer
_TEXT	SEGMENT
_id$ = 8						; size = 4
_ptr$ = 12						; size = 4
_CRYPTO_THREADID_set_pointer PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 441
	mov	ecx, DWORD PTR _id$[esp-4]
	xorps	xmm0, xmm0
; Line 442
	mov	eax, DWORD PTR _ptr$[esp-4]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx], eax
; Line 447
	mov	DWORD PTR [ecx+4], eax
; Line 470
	ret	0
_CRYPTO_THREADID_set_pointer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_THREADID_set_numeric
_TEXT	SEGMENT
_id$ = 8						; size = 4
_val$ = 12						; size = 4
_CRYPTO_THREADID_set_numeric PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 429
	mov	ecx, DWORD PTR _id$[esp-4]
	xorps	xmm0, xmm0
; Line 430
	mov	eax, DWORD PTR _val$[esp-4]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+4], eax
; Line 431
	ret	0
_CRYPTO_THREADID_set_numeric ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_add_lock_callback
_TEXT	SEGMENT
_CRYPTO_get_add_lock_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 402
	mov	eax, DWORD PTR _add_lock_callback
; Line 403
	ret	0
_CRYPTO_get_add_lock_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_add_lock_callback
_TEXT	SEGMENT
_func$ = 8						; size = 4
_CRYPTO_set_add_lock_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 419
	mov	eax, DWORD PTR _func$[esp-4]
	mov	DWORD PTR _add_lock_callback, eax
; Line 420
	ret	0
_CRYPTO_set_add_lock_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_locking_callback
_TEXT	SEGMENT
_CRYPTO_get_locking_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 397
	mov	eax, DWORD PTR _locking_callback
; Line 398
	ret	0
_CRYPTO_get_locking_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_set_locking_callback
_TEXT	SEGMENT
_func$ = 8						; size = 4
_CRYPTO_set_locking_callback PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 412
	call	_OPENSSL_init
; Line 413
	mov	eax, DWORD PTR _func$[esp-4]
	mov	DWORD PTR _locking_callback, eax
; Line 414
	ret	0
_CRYPTO_set_locking_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_lock
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_type$ = 12						; size = 4
_file$ = 16						; size = 4
_line$ = 20						; size = 4
_CRYPTO_lock PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 558
	push	esi
; Line 584
	mov	esi, DWORD PTR _type$[esp]
	test	esi, esi
	jns	SHORT $LN2@CRYPTO_loc
; Line 585
	cmp	DWORD PTR _dynlock_lock_callback, 0
	je	SHORT $LN5@CRYPTO_loc
; Line 586
	push	esi
	call	_CRYPTO_get_dynlock_value
	add	esp, 4
; Line 589
	test	eax, eax
	je	SHORT $LN10@CRYPTO_loc
; Line 591
	push	DWORD PTR _line$[esp]
	push	DWORD PTR _file$[esp+4]
	push	eax
	push	DWORD PTR _mode$[esp+12]
	call	DWORD PTR _dynlock_lock_callback
; Line 593
	push	esi
	call	_CRYPTO_destroy_dynlockid
	add	esp, 20					; 00000014H
	pop	esi
; Line 597
	ret	0
$LN2@CRYPTO_loc:
; Line 595
	mov	eax, DWORD PTR _locking_callback
	test	eax, eax
	je	SHORT $LN5@CRYPTO_loc
; Line 596
	push	DWORD PTR _line$[esp]
	push	DWORD PTR _file$[esp+4]
	push	esi
	push	DWORD PTR _mode$[esp+12]
	call	eax
	add	esp, 16					; 00000010H
$LN5@CRYPTO_loc:
; Line 597
	pop	esi
	ret	0
$LN10@CRYPTO_loc:
; Line 589
	push	OFFSET ??_C@_0BA@LPBALOME@pointer?5?$CB?$DN?5NULL?$AA@
	push	589					; 0000024dH
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	call	_OpenSSLDie
$LN11@CRYPTO_loc:
$LN9@CRYPTO_loc:
	int	3
_CRYPTO_lock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_num_locks
_TEXT	SEGMENT
_CRYPTO_num_locks PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 238
	mov	eax, 41					; 00000029H
; Line 239
	ret	0
_CRYPTO_num_locks ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _CRYPTO_get_new_lockid
_TEXT	SEGMENT
_name$ = 8						; size = 4
_CRYPTO_get_new_lockid PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\cryptlib.c
; Line 220
	cmp	DWORD PTR _app_locks, 0
	push	esi
	mov	esi, DWORD PTR _name$[esp]
	movsx	eax, BYTE PTR [esi+1]
	movd	xmm1, eax
	movsx	eax, BYTE PTR [esi]
	cvtdq2pd xmm1, xmm1
	movd	xmm0, eax
	cvtdq2pd xmm0, xmm0
	mulsd	xmm1, xmm0
	movsd	QWORD PTR _SSLeay_MSVC5_hack, xmm1
	jne	SHORT $LN2@CRYPTO_get
	call	_sk_new_null
	mov	DWORD PTR _app_locks, eax
	test	eax, eax
	jne	SHORT $LN2@CRYPTO_get
; Line 221
	push	221					; 000000ddH
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	65					; 00000041H
	push	101					; 00000065H
	push	15					; 0000000fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 222
	xor	eax, eax
	pop	esi
; Line 234
	ret	0
$LN2@CRYPTO_get:
	push	edi
; Line 224
	push	esi
	call	_BUF_strdup
	mov	edi, eax
	add	esp, 4
	test	edi, edi
	jne	SHORT $LN3@CRYPTO_get
; Line 225
	push	225					; 000000e1H
	push	OFFSET ??_C@_0BE@MCNNLDKP@?4?2crypto?2cryptlib?4c?$AA@
	push	65					; 00000041H
	push	101					; 00000065H
	push	15					; 0000000fH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 226
	xor	eax, eax
	pop	edi
	pop	esi
; Line 234
	ret	0
$LN3@CRYPTO_get:
; Line 228
	push	edi
	push	DWORD PTR _app_locks
	call	_sk_push
	mov	esi, eax
	add	esp, 8
; Line 229
	test	esi, esi
	jne	SHORT $LN4@CRYPTO_get
; Line 230
	push	edi
	call	_CRYPTO_free
	add	esp, 4
; Line 233
	mov	eax, esi
	pop	edi
	pop	esi
; Line 234
	ret	0
$LN4@CRYPTO_get:
; Line 232
	add	esi, 41					; 00000029H
	pop	edi
; Line 233
	mov	eax, esi
	pop	esi
; Line 234
	ret	0
_CRYPTO_get_new_lockid ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sscanf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2268
	ret	0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsscanf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 2167
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_scanf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
; Line 2170
	ret	0
__vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsnprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsnprintf PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	push	DWORD PTR __ArgList$[esp-4]
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __BufferCount$[esp+8]
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1410
	ret	0
__vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 1386
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __BufferCount$[esp+8]
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
; Line 1390
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1391
	ret	0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 91
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
; Line 92
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

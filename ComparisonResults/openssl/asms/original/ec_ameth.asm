; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_eckey_asn1_meth
PUBLIC	??_C@_02KNLLHFAA@EC?$AA@			; `string'
PUBLIC	??_C@_0BF@DKDIFOGG@OpenSSL?5EC?5algorithm?$AA@	; `string'
;	COMDAT ??_C@_0BF@DKDIFOGG@OpenSSL?5EC?5algorithm?$AA@
CONST	SEGMENT
??_C@_0BF@DKDIFOGG@OpenSSL?5EC?5algorithm?$AA@ DB 'OpenSSL EC algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02KNLLHFAA@EC?$AA@
CONST	SEGMENT
??_C@_02KNLLHFAA@EC?$AA@ DB 'EC', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_eckey_asn1_meth DD 0198H
	DD	0198H
	DD	00H
	DD	FLAT:??_C@_02KNLLHFAA@EC?$AA@
	DD	FLAT:??_C@_0BF@DKDIFOGG@OpenSSL?5EC?5algorithm?$AA@
	DD	FLAT:_eckey_pub_decode
	DD	FLAT:_eckey_pub_encode
	DD	FLAT:_eckey_pub_cmp
	DD	FLAT:_eckey_pub_print
	DD	FLAT:_eckey_priv_decode
	DD	FLAT:_eckey_priv_encode
	DD	FLAT:_eckey_priv_print
	DD	FLAT:_int_ec_size
	DD	FLAT:_ec_bits
	DD	FLAT:_eckey_param_decode
	DD	FLAT:_eckey_param_encode
	DD	FLAT:_ec_missing_parameters
	DD	FLAT:_ec_copy_parameters
	DD	FLAT:_ec_cmp_parameters
	DD	FLAT:_eckey_param_print
	DD	00H
	DD	FLAT:_int_ec_free
	DD	FLAT:_ec_pkey_ctrl
	DD	FLAT:_old_ec_priv_decode
	DD	FLAT:_old_ec_priv_encode
	ORG $+8
CONST	ENDS
PUBLIC	??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@ ; `string'
PUBLIC	??_C@_0M@CJKOCIEC@Private?9Key?$AA@		; `string'
PUBLIC	??_C@_0L@FMJMEKAC@Public?9Key?$AA@		; `string'
PUBLIC	??_C@_0BB@DMDKLH@ECDSA?9Parameters?$AA@		; `string'
PUBLIC	??_C@_0O@OPPPNLCD@?$CFs?3?5?$CI?$CFd?5bit?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_05PFPGJCCA@priv?3?$AA@			; `string'
PUBLIC	??_C@_05FJHKEHEO@pub?3?5?$AA@			; `string'
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BIO_indent:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ERR_clear_error:PROC
EXTRN	_BN_CTX_new:PROC
EXTRN	_BN_CTX_free:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_free:PROC
EXTRN	_ASN1_TYPE_new:PROC
EXTRN	_ASN1_TYPE_free:PROC
EXTRN	_ASN1_TYPE_get:PROC
EXTRN	_ASN1_OBJECT_free:PROC
EXTRN	_ASN1_STRING_new:PROC
EXTRN	_ASN1_STRING_free:PROC
EXTRN	_ASN1_STRING_set0:PROC
EXTRN	_ASN1_STRING_length:PROC
EXTRN	_ASN1_STRING_data:PROC
EXTRN	_ASN1_bn_print:PROC
EXTRN	_OBJ_nid2obj:PROC
EXTRN	_OBJ_nid2sn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_find_sigid_algs:PROC
EXTRN	_OBJ_find_sigid_by_algs:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_CIPHER_flags:PROC
EXTRN	_EVP_CIPHER_CTX_cipher:PROC
EXTRN	_EVP_CIPHER_CTX_key_length:PROC
EXTRN	_EVP_EncryptInit_ex:PROC
EXTRN	_EVP_sha1:PROC
EXTRN	_EVP_get_cipherbyname:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_id:PROC
EXTRN	_EVP_PKEY_assign:PROC
EXTRN	_EVP_PKEY_set1_EC_KEY:PROC
EXTRN	_EVP_PKEY_new:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_EVP_CIPHER_type:PROC
EXTRN	_EVP_CIPHER_param_to_asn1:PROC
EXTRN	_EVP_CIPHER_asn1_to_param:PROC
EXTRN	_EVP_PKEY_CTX_ctrl:PROC
EXTRN	_EVP_PKEY_CTX_get0_pkey:PROC
EXTRN	_EVP_PKEY_CTX_get0_peerkey:PROC
EXTRN	_EVP_PKEY_derive_set_peer:PROC
EXTRN	_EC_GROUP_free:PROC
EXTRN	_EC_GROUP_dup:PROC
EXTRN	_EC_GROUP_get0_generator:PROC
EXTRN	_EC_GROUP_get_order:PROC
EXTRN	_EC_GROUP_get_curve_name:PROC
EXTRN	_EC_GROUP_set_asn1_flag:PROC
EXTRN	_EC_GROUP_get_asn1_flag:PROC
EXTRN	_EC_GROUP_cmp:PROC
EXTRN	_EC_GROUP_new_by_curve_name:PROC
EXTRN	_EC_POINT_new:PROC
EXTRN	_EC_POINT_free:PROC
EXTRN	_EC_POINT_copy:PROC
EXTRN	_EC_POINT_point2bn:PROC
EXTRN	_EC_POINT_cmp:PROC
EXTRN	_EC_POINT_mul:PROC
EXTRN	_ECPKParameters_print:PROC
EXTRN	_EC_KEY_new:PROC
EXTRN	_EC_KEY_free:PROC
EXTRN	_EC_KEY_get0_group:PROC
EXTRN	_EC_KEY_set_group:PROC
EXTRN	_EC_KEY_get0_private_key:PROC
EXTRN	_EC_KEY_get0_public_key:PROC
EXTRN	_EC_KEY_set_public_key:PROC
EXTRN	_EC_KEY_get_enc_flags:PROC
EXTRN	_EC_KEY_set_enc_flags:PROC
EXTRN	_EC_KEY_get_conv_form:PROC
EXTRN	_d2i_ECPrivateKey:PROC
EXTRN	_i2d_ECPrivateKey:PROC
EXTRN	_d2i_ECParameters:PROC
EXTRN	_i2d_ECParameters:PROC
EXTRN	_o2i_ECPublicKey:PROC
EXTRN	_i2o_ECPublicKey:PROC
EXTRN	_ECDSA_size:PROC
EXTRN	_PKCS7_SIGNER_INFO_get0_algs:PROC
EXTRN	_X509_ALGOR_set0:PROC
EXTRN	_X509_ALGOR_get0:PROC
EXTRN	_X509_ALGOR_new:PROC
EXTRN	_X509_ALGOR_free:PROC
EXTRN	_d2i_X509_ALGOR:PROC
EXTRN	_i2d_X509_ALGOR:PROC
EXTRN	_PKCS8_pkey_set0:PROC
EXTRN	_PKCS8_pkey_get0:PROC
EXTRN	_X509_PUBKEY_set0_param:PROC
EXTRN	_X509_PUBKEY_get0_param:PROC
EXTRN	_CMS_RecipientInfo_get0_pkey_ctx:PROC
EXTRN	_CMS_SignerInfo_get0_algs:PROC
EXTRN	_CMS_RecipientInfo_kari_get0_alg:PROC
EXTRN	_CMS_RecipientInfo_kari_get0_orig_id:PROC
EXTRN	_CMS_RecipientInfo_kari_get0_ctx:PROC
EXTRN	_CMS_SharedInfo_encode:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_05FJHKEHEO@pub?3?5?$AA@
CONST	SEGMENT
??_C@_05FJHKEHEO@pub?3?5?$AA@ DB 'pub: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PFPGJCCA@priv?3?$AA@
CONST	SEGMENT
??_C@_05PFPGJCCA@priv?3?$AA@ DB 'priv:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPPPNLCD@?$CFs?3?5?$CI?$CFd?5bit?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0O@OPPPNLCD@?$CFs?3?5?$CI?$CFd?5bit?$CJ?6?$AA@ DB '%s: (%d bit)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DMDKLH@ECDSA?9Parameters?$AA@
CONST	SEGMENT
??_C@_0BB@DMDKLH@ECDSA?9Parameters?$AA@ DB 'ECDSA-Parameters', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FMJMEKAC@Public?9Key?$AA@
CONST	SEGMENT
??_C@_0L@FMJMEKAC@Public?9Key?$AA@ DB 'Public-Key', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CJKOCIEC@Private?9Key?$AA@
CONST	SEGMENT
??_C@_0M@CJKOCIEC@Private?9Key?$AA@ DB 'Private-Key', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
CONST	SEGMENT
??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@ DB '.\crypto\ec\ec_am'
	DB	'eth.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ecdh_cms_set_shared_info
_TEXT	SEGMENT
_der$ = -16						; size = 4
_alg$ = -12						; size = 4
_p$ = -8						; size = 4
_ukm$ = -4						; size = 4
_pctx$ = 8						; size = 4
_ri$ = 12						; size = 4
_ecdh_cms_set_shared_info PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 734
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	esi
; Line 745
	mov	esi, DWORD PTR _ri$[esp+20]
	lea	eax, DWORD PTR _ukm$[esp+24]
	push	eax
	lea	eax, DWORD PTR _alg$[esp+28]
	xor	ebx, ebx
	push	eax
	push	esi
	mov	DWORD PTR _der$[esp+36], ebx
	call	_CMS_RecipientInfo_kari_get0_alg
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@ecdh_cms_s
	pop	esi
	pop	ebx
; Line 792
	add	esp, 16					; 00000010H
	ret	0
$LN2@ecdh_cms_s:
; Line 748
	mov	eax, DWORD PTR _alg$[esp+24]
	push	ebp
	push	DWORD PTR [eax]
	call	_OBJ_obj2nid
	mov	ebp, DWORD PTR _pctx$[esp+28]
	push	eax
	push	ebp
	call	_ecdh_cms_set_kdf_param
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@ecdh_cms_s
; Line 749
	push	749					; 000002edH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	148					; 00000094H
	push	239					; 000000efH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN26@ecdh_cms_s:
; Line 750
	pop	ebp
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 792
	add	esp, 16					; 00000010H
	ret	0
$LN3@ecdh_cms_s:
; Line 753
	mov	ecx, DWORD PTR _alg$[esp+28]
	mov	eax, DWORD PTR [ecx+4]
	cmp	DWORD PTR [eax], 16			; 00000010H
	jne	SHORT $LN26@ecdh_cms_s
; Line 756
	mov	eax, DWORD PTR [eax+4]
	push	edi
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _p$[esp+32], eax
; Line 757
	mov	eax, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax+4]
; Line 758
	push	DWORD PTR [eax]
	lea	eax, DWORD PTR _p$[esp+36]
	push	eax
	push	0
	call	_d2i_X509_ALGOR
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 759
	test	edi, edi
	je	$LN14@ecdh_cms_s
; Line 761
	push	esi
	call	_CMS_RecipientInfo_kari_get0_ctx
	mov	esi, eax
	add	esp, 4
; Line 762
	test	esi, esi
	je	$err$28
; Line 764
	push	DWORD PTR [edi]
	call	_OBJ_obj2nid
	push	eax
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_cipherbyname
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 765
	test	ebx, ebx
	je	$LN23@ecdh_cms_s
	push	ebx
	call	_EVP_CIPHER_flags
	and	eax, 983047				; 000f0007H
	add	esp, 4
	cmp	eax, 65538				; 00010002H
	jne	$LN23@ecdh_cms_s
; Line 767
	push	0
	push	0
	push	0
	push	ebx
	push	esi
	call	_EVP_EncryptInit_ex
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN23@ecdh_cms_s
; Line 769
	push	DWORD PTR [edi+4]
	push	esi
	call	_EVP_CIPHER_asn1_to_param
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN23@ecdh_cms_s
; Line 772
	push	esi
	call	_EVP_CIPHER_CTX_key_length
; Line 773
	push	0
	mov	esi, eax
	push	esi
	push	4103					; 00001007H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	ebp
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 28					; 0000001cH
	test	eax, eax
	jle	SHORT $LN23@ecdh_cms_s
; Line 776
	push	esi
	push	DWORD PTR _ukm$[esp+36]
	lea	eax, DWORD PTR _der$[esp+40]
	push	edi
	push	eax
	call	_CMS_SharedInfo_encode
	add	esp, 16					; 00000010H
; Line 778
	test	eax, eax
	je	SHORT $LN23@ecdh_cms_s
; Line 781
	push	DWORD PTR _der$[esp+32]
	push	eax
	push	4105					; 00001009H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	ebp
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN23@ecdh_cms_s
; Line 783
	mov	DWORD PTR _der$[esp+32], 0
; Line 785
	mov	ebx, 1
	jmp	SHORT $err$28
$LN23@ecdh_cms_s:
	xor	ebx, ebx
$err$28:
; Line 788
	push	edi
	call	_X509_ALGOR_free
	add	esp, 4
$LN14@ecdh_cms_s:
; Line 789
	mov	ecx, DWORD PTR _der$[esp+32]
	pop	edi
	test	ecx, ecx
	je	SHORT $LN15@ecdh_cms_s
; Line 790
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN15@ecdh_cms_s:
; Line 791
	pop	ebp
	pop	esi
	mov	eax, ebx
	pop	ebx
; Line 792
	add	esp, 16					; 00000010H
	ret	0
_ecdh_cms_set_shared_info ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ecdh_cms_set_kdf_param
_TEXT	SEGMENT
_kdfmd_nid$ = -4					; size = 4
_pctx$ = 8						; size = 4
_kdf_nid$ = 12						; size = 4
_eckdf_nid$ = 12					; size = 4
_ecdh_cms_set_kdf_param PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 701
	mov	eax, 4
	call	__chkstk
; Line 704
	mov	eax, DWORD PTR _eckdf_nid$[esp]
	test	eax, eax
	jne	SHORT $LN2@ecdh_cms_s
$LN15@ecdh_cms_s:
; Line 705
	xor	eax, eax
; Line 731
	pop	ecx
	ret	0
$LN2@ecdh_cms_s:
; Line 708
	lea	ecx, DWORD PTR _kdf_nid$[esp]
	push	ecx
	lea	ecx, DWORD PTR _kdfmd_nid$[esp+8]
	push	ecx
	push	eax
	call	_OBJ_find_sigid_algs
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN15@ecdh_cms_s
; Line 711
	mov	eax, DWORD PTR _kdf_nid$[esp]
	cmp	eax, 946				; 000003b2H
	jne	SHORT $LN4@ecdh_cms_s
; Line 712
	xor	eax, eax
	jmp	SHORT $LN7@ecdh_cms_s
$LN4@ecdh_cms_s:
; Line 713
	cmp	eax, 947				; 000003b3H
	jne	SHORT $LN15@ecdh_cms_s
; Line 714
	mov	eax, 1
$LN7@ecdh_cms_s:
	push	esi
; Line 718
	mov	esi, DWORD PTR _pctx$[esp+4]
	push	0
	push	eax
	push	4099					; 00001003H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	esi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN14@ecdh_cms_s
; Line 721
	push	0
	push	2
	push	4100					; 00001004H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	esi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN14@ecdh_cms_s
; Line 724
	push	DWORD PTR _kdfmd_nid$[esp+8]
	call	_OBJ_nid2sn
	push	eax
	call	_EVP_get_digestbyname
	add	esp, 8
; Line 725
	test	eax, eax
	jne	SHORT $LN10@ecdh_cms_s
$LN14@ecdh_cms_s:
; Line 726
	xor	eax, eax
	pop	esi
; Line 731
	pop	ecx
	ret	0
$LN10@ecdh_cms_s:
; Line 728
	push	eax
	push	0
	push	4101					; 00001005H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	esi
	call	_EVP_PKEY_CTX_ctrl
	xor	ecx, ecx
	add	esp, 24					; 00000018H
	test	eax, eax
	setg	cl
	mov	eax, ecx
	pop	esi
; Line 731
	pop	ecx
	ret	0
_ecdh_cms_set_kdf_param ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ecdh_cms_set_peerkey
_TEXT	SEGMENT
_ecpeer$ = -20						; size = 4
_aoid$ = -16						; size = 4
_atype$ = -12						; size = 4
_aval$ = -8						; size = 4
_p$ = -4						; size = 4
_pctx$ = 8						; size = 4
_alg$ = 12						; size = 4
_pubkey$ = 16						; size = 4
_ecdh_cms_set_peerkey PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 648
	mov	eax, 20					; 00000014H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
; Line 657
	push	DWORD PTR _alg$[esp+28]
	lea	eax, DWORD PTR _aval$[esp+36]
	xor	ebx, ebx
	push	eax
	lea	eax, DWORD PTR _atype$[esp+40]
	mov	DWORD PTR _ecpeer$[esp+40], ebx
	push	eax
	lea	eax, DWORD PTR _aoid$[esp+44]
	xor	edi, edi
	push	eax
	call	_X509_ALGOR_get0
; Line 658
	push	DWORD PTR _aoid$[esp+48]
	call	_OBJ_obj2nid
	add	esp, 20					; 00000014H
	cmp	eax, 408				; 00000198H
	jne	$err$22
; Line 661
	mov	eax, DWORD PTR _atype$[esp+32]
	cmp	eax, -1
	je	SHORT $LN5@ecdh_cms_s
	cmp	eax, 5
	je	SHORT $LN5@ecdh_cms_s
; Line 674
	push	DWORD PTR _aval$[esp+32]
	push	eax
	call	_eckey_type2param
	add	esp, 8
	mov	DWORD PTR _ecpeer$[esp+32], eax
; Line 675
	test	eax, eax
	jne	SHORT $LN8@ecdh_cms_s
; Line 696
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 697
	add	esp, 20					; 00000014H
	ret	0
$LN5@ecdh_cms_s:
; Line 664
	push	DWORD PTR _pctx$[esp+28]
	call	_EVP_PKEY_CTX_get0_pkey
	add	esp, 4
; Line 665
	test	eax, eax
	je	$err$22
; Line 667
	push	DWORD PTR [eax+20]
	call	_EC_KEY_get0_group
	add	esp, 4
	mov	esi, eax
; Line 668
	call	_EC_KEY_new
	mov	DWORD PTR _ecpeer$[esp+32], eax
; Line 669
	test	eax, eax
	je	$LN18@ecdh_cms_s
; Line 671
	push	esi
	push	eax
	call	_EC_KEY_set_group
	add	esp, 8
	test	eax, eax
	je	SHORT $err$22
$LN8@ecdh_cms_s:
; Line 679
	mov	esi, DWORD PTR _pubkey$[esp+28]
	push	ebp
	push	esi
	call	_ASN1_STRING_length
; Line 680
	push	esi
	mov	ebp, eax
	call	_ASN1_STRING_data
	add	esp, 8
	mov	DWORD PTR _p$[esp+36], eax
; Line 681
	test	eax, eax
	je	SHORT $LN20@ecdh_cms_s
	test	ebp, ebp
	je	SHORT $LN20@ecdh_cms_s
; Line 683
	push	ebp
	lea	eax, DWORD PTR _p$[esp+40]
	push	eax
	lea	eax, DWORD PTR _ecpeer$[esp+44]
	push	eax
	call	_o2i_ECPublicKey
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN20@ecdh_cms_s
; Line 685
	call	_EVP_PKEY_new
	mov	ebx, eax
; Line 686
	test	ebx, ebx
	je	SHORT $LN20@ecdh_cms_s
; Line 688
	push	DWORD PTR _ecpeer$[esp+36]
	push	ebx
	call	_EVP_PKEY_set1_EC_KEY
; Line 689
	push	ebx
	push	DWORD PTR _pctx$[esp+44]
	call	_EVP_PKEY_derive_set_peer
	add	esp, 16					; 00000010H
	mov	ecx, 1
	test	eax, eax
	cmovg	edi, ecx
$LN20@ecdh_cms_s:
	pop	ebp
$err$22:
; Line 692
	mov	eax, DWORD PTR _ecpeer$[esp+32]
	test	eax, eax
	je	SHORT $LN15@ecdh_cms_s
; Line 693
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN15@ecdh_cms_s:
; Line 694
	test	ebx, ebx
	je	SHORT $LN18@ecdh_cms_s
; Line 695
	push	ebx
	call	_EVP_PKEY_free
	add	esp, 4
$LN18@ecdh_cms_s:
; Line 696
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 697
	add	esp, 20					; 00000014H
	ret	0
_ecdh_cms_set_peerkey ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_pkey_ctrl
_TEXT	SEGMENT
_alg2$1 = -8						; size = 4
_snid$2 = -8						; size = 4
_snid$3 = -4						; size = 4
_alg2$4 = -4						; size = 4
_pkey$ = 8						; size = 4
_alg1$5 = 12						; size = 4
_alg1$6 = 12						; size = 4
_op$ = 12						; size = 4
_arg1$ = 16						; size = 4
_arg2$ = 20						; size = 4
_ec_pkey_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 554
	mov	eax, 8
	call	__chkstk
; Line 555
	mov	eax, DWORD PTR _op$[esp+4]
	dec	eax
	push	esi
	cmp	eax, 7
	ja	$LN22@ec_pkey_ct
	jmp	DWORD PTR $LN26@ec_pkey_ct[eax*4]
$LN4@ec_pkey_ct:
; Line 557
	cmp	DWORD PTR _arg1$[esp+8], 0
	jne	$LN5@ec_pkey_ct
; Line 560
	lea	eax, DWORD PTR _alg2$4[esp+12]
	push	eax
	lea	eax, DWORD PTR _alg1$6[esp+12]
	push	eax
	push	0
	push	DWORD PTR _arg2$[esp+20]
	call	_PKCS7_SIGNER_INFO_get0_algs
; Line 561
	mov	eax, DWORD PTR _alg1$6[esp+24]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN7@ec_pkey_ct
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN7@ec_pkey_ct
; Line 563
	push	eax
	call	_OBJ_obj2nid
	mov	esi, eax
	add	esp, 4
; Line 564
	test	esi, esi
	je	SHORT $LN7@ec_pkey_ct
; Line 566
	push	DWORD PTR _pkey$[esp+8]
	call	_EVP_PKEY_id
	push	eax
	lea	eax, DWORD PTR _snid$2[esp+20]
	push	esi
	push	eax
	call	_OBJ_find_sigid_by_algs
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN7@ec_pkey_ct
; Line 568
	push	0
	push	-1
	push	DWORD PTR _snid$2[esp+20]
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _alg2$4[esp+24]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
; Line 597
	mov	eax, 1
	pop	esi
; Line 609
	add	esp, 8
	ret	0
$LN7@ec_pkey_ct:
; Line 562
	or	eax, -1
	pop	esi
; Line 609
	add	esp, 8
	ret	0
$LN10@ec_pkey_ct:
; Line 573
	cmp	DWORD PTR _arg1$[esp+8], 0
	jne	$LN5@ec_pkey_ct
; Line 576
	lea	eax, DWORD PTR _alg2$1[esp+12]
	push	eax
	lea	eax, DWORD PTR _alg1$5[esp+12]
	push	eax
	push	0
	push	0
	push	DWORD PTR _arg2$[esp+24]
	call	_CMS_SignerInfo_get0_algs
; Line 577
	mov	eax, DWORD PTR _alg1$5[esp+28]
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN7@ec_pkey_ct
	mov	eax, DWORD PTR [eax]
	test	eax, eax
	je	SHORT $LN7@ec_pkey_ct
; Line 579
	push	eax
	call	_OBJ_obj2nid
	mov	esi, eax
	add	esp, 4
; Line 580
	test	esi, esi
	je	SHORT $LN7@ec_pkey_ct
; Line 582
	push	DWORD PTR _pkey$[esp+8]
	call	_EVP_PKEY_id
	push	eax
	lea	eax, DWORD PTR _snid$3[esp+20]
	push	esi
	push	eax
	call	_OBJ_find_sigid_by_algs
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN7@ec_pkey_ct
; Line 584
	push	0
	push	-1
	push	DWORD PTR _snid$3[esp+20]
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _alg2$1[esp+24]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
; Line 597
	mov	eax, 1
	pop	esi
; Line 609
	add	esp, 8
	ret	0
$LN16@ec_pkey_ct:
; Line 589
	mov	eax, DWORD PTR _arg1$[esp+8]
	cmp	eax, 1
	jne	SHORT $LN17@ec_pkey_ct
; Line 590
	push	DWORD PTR _arg2$[esp+8]
	call	_ecdh_cms_decrypt
	add	esp, 4
	pop	esi
; Line 609
	add	esp, 8
	ret	0
$LN17@ec_pkey_ct:
; Line 591
	test	eax, eax
	jne	SHORT $LN22@ec_pkey_ct
; Line 592
	push	DWORD PTR _arg2$[esp+8]
	call	_ecdh_cms_encrypt
	add	esp, 4
	pop	esi
; Line 609
	add	esp, 8
	ret	0
$LN20@ec_pkey_ct:
; Line 596
	mov	eax, DWORD PTR _arg2$[esp+8]
	mov	DWORD PTR [eax], 1
$LN5@ec_pkey_ct:
; Line 597
	mov	eax, 1
	pop	esi
; Line 609
	add	esp, 8
	ret	0
$LN21@ec_pkey_ct:
; Line 601
	mov	eax, DWORD PTR _arg2$[esp+8]
	pop	esi
	mov	DWORD PTR [eax], 672			; 000002a0H
; Line 602
	mov	eax, 2
; Line 609
	add	esp, 8
	ret	0
$LN22@ec_pkey_ct:
; Line 605
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 609
	add	esp, 8
	ret	0
	npad	3
$LN26@ec_pkey_ct:
	DD	$LN4@ec_pkey_ct
	DD	$LN22@ec_pkey_ct
	DD	$LN21@ec_pkey_ct
	DD	$LN22@ec_pkey_ct
	DD	$LN10@ec_pkey_ct
	DD	$LN22@ec_pkey_ct
	DD	$LN16@ec_pkey_ct
	DD	$LN20@ec_pkey_ct
_ec_pkey_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _old_ec_priv_encode
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pder$ = 12						; size = 4
_old_ec_priv_encode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 550
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR _pder$[esp-4]
	push	DWORD PTR [eax+20]
	call	_i2d_ECPrivateKey
	add	esp, 8
; Line 551
	ret	0
_old_ec_priv_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _old_ec_priv_decode
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pder$ = 12						; size = 4
_derlen$ = 16						; size = 4
_old_ec_priv_decode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 540
	push	DWORD PTR _derlen$[esp-4]
	push	DWORD PTR _pder$[esp]
	push	0
	call	_d2i_ECPrivateKey
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@old_ec_pri
; Line 541
	push	541					; 0000021dH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	142					; 0000008eH
	push	222					; 000000deH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 542
	xor	eax, eax
; Line 546
	ret	0
$LN2@old_ec_pri:
; Line 544
	push	eax
	push	408					; 00000198H
	push	DWORD PTR _pkey$[esp+4]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 545
	mov	eax, 1
; Line 546
	ret	0
_old_ec_priv_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_priv_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_ctx$ = 20						; size = 4
_eckey_priv_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 533
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	2
	push	DWORD PTR _indent$[esp]
	push	DWORD PTR [eax+20]
	push	DWORD PTR _bp$[esp+8]
	call	_do_EC_KEY_print
	add	esp, 16					; 00000010H
; Line 534
	ret	0
_eckey_priv_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_pub_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_ctx$ = 20						; size = 4
_eckey_pub_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 527
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	1
	push	DWORD PTR _indent$[esp]
	push	DWORD PTR [eax+20]
	push	DWORD PTR _bp$[esp+8]
	call	_do_EC_KEY_print
	add	esp, 16					; 00000010H
; Line 528
	ret	0
_eckey_pub_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_param_print
_TEXT	SEGMENT
_bp$ = 8						; size = 4
_pkey$ = 12						; size = 4
_indent$ = 16						; size = 4
_ctx$ = 20						; size = 4
_eckey_param_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 521
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	0
	push	DWORD PTR _indent$[esp]
	push	DWORD PTR [eax+20]
	push	DWORD PTR _bp$[esp+8]
	call	_do_EC_KEY_print
	add	esp, 16					; 00000010H
; Line 522
	ret	0
_eckey_param_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_param_encode
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pder$ = 12						; size = 4
_eckey_param_encode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 515
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR _pder$[esp-4]
	push	DWORD PTR [eax+20]
	call	_i2d_ECParameters
	add	esp, 8
; Line 516
	ret	0
_eckey_param_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_param_decode
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_pder$ = 12						; size = 4
_derlen$ = 16						; size = 4
_eckey_param_decode PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 505
	push	DWORD PTR _derlen$[esp-4]
	push	DWORD PTR _pder$[esp]
	push	0
	call	_d2i_ECParameters
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@eckey_para
; Line 506
	push	506					; 000001faH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	16					; 00000010H
	push	212					; 000000d4H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 507
	xor	eax, eax
; Line 511
	ret	0
$LN2@eckey_para:
; Line 509
	push	eax
	push	408					; 00000198H
	push	DWORD PTR _pkey$[esp+4]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 510
	mov	eax, 1
; Line 511
	ret	0
_eckey_param_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_EC_KEY_print
_TEXT	SEGMENT
_ecstr$1$ = -16						; size = 4
_buf_len$1$ = -16					; size = 4
_order$1$ = -12						; size = 4
_ctx$1$ = -8						; size = 4
_priv_key$1$ = -4					; size = 4
_public_key$1$ = -4					; size = 4
_bp$ = 8						; size = 4
_group$1$ = 12						; size = 4
_x$ = 12						; size = 4
_off$ = 16						; size = 4
_ktype$ = 20						; size = 4
_do_EC_KEY_print PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 413
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	ebp
; Line 414
	xor	ebx, ebx
; Line 418
	xor	eax, eax
	push	esi
; Line 424
	mov	esi, DWORD PTR _x$[esp+24]
	push	edi
	xor	edi, edi
	mov	DWORD PTR _buf_len$1$[esp+32], ebx
	mov	DWORD PTR _order$1$[esp+32], eax
	lea	ebp, DWORD PTR [ebx+32]
	mov	DWORD PTR _ctx$1$[esp+32], eax
	test	esi, esi
	je	$LN3@do_EC_KEY_
	push	esi
	call	_EC_KEY_get0_group
	add	esp, 4
	mov	DWORD PTR _group$1$[esp+28], eax
	test	eax, eax
	je	$LN3@do_EC_KEY_
; Line 429
	call	_BN_CTX_new
	mov	DWORD PTR _ctx$1$[esp+32], eax
; Line 430
	test	eax, eax
	jne	SHORT $LN4@do_EC_KEY_
; Line 431
	lea	ebp, DWORD PTR [ebx+65]
; Line 432
	jmp	$LN30@do_EC_KEY_
$LN4@do_EC_KEY_:
; Line 435
	mov	eax, DWORD PTR _ktype$[esp+28]
	test	eax, eax
	jle	SHORT $LN6@do_EC_KEY_
; Line 436
	push	esi
	call	_EC_KEY_get0_public_key
	add	esp, 4
	mov	DWORD PTR _public_key$1$[esp+32], eax
; Line 437
	test	eax, eax
	je	SHORT $LN34@do_EC_KEY_
; Line 440
	mov	eax, DWORD PTR _ctx$1$[esp+32]
	push	eax
	push	0
	push	esi
	call	_EC_KEY_get_conv_form
	add	esp, 4
	push	eax
	push	DWORD PTR _public_key$1$[esp+44]
	push	DWORD PTR _group$1$[esp+44]
	call	_EC_POINT_point2bn
	mov	edi, eax
	add	esp, 20					; 00000014H
	test	edi, edi
	jne	SHORT $LN7@do_EC_KEY_
; Line 441
	lea	ebp, DWORD PTR [eax+16]
; Line 442
	jmp	$LN30@do_EC_KEY_
$LN7@do_EC_KEY_:
; Line 444
	push	edi
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _buf_len$1$[esp+32], eax
$LN34@do_EC_KEY_:
	mov	eax, DWORD PTR _ktype$[esp+28]
$LN6@do_EC_KEY_:
; Line 448
	cmp	eax, 2
	jne	SHORT $LN8@do_EC_KEY_
; Line 449
	push	esi
	call	_EC_KEY_get0_private_key
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR _priv_key$1$[esp+32], esi
; Line 450
	test	esi, esi
	je	SHORT $LN35@do_EC_KEY_
	push	esi
	call	_BN_num_bits
	add	eax, 7
	add	esp, 4
	cdq
	and	edx, 7
	lea	ecx, DWORD PTR [edx+eax]
	mov	eax, DWORD PTR _buf_len$1$[esp+32]
	sar	ecx, 3
	cmp	ecx, eax
	jbe	SHORT $LN31@do_EC_KEY_
; Line 451
	mov	eax, ecx
; Line 452
	jmp	SHORT $LN31@do_EC_KEY_
$LN8@do_EC_KEY_:
; Line 453
	mov	DWORD PTR _priv_key$1$[esp+32], ebx
; Line 455
	test	eax, eax
	jle	SHORT $LN12@do_EC_KEY_
$LN35@do_EC_KEY_:
	mov	eax, DWORD PTR _buf_len$1$[esp+32]
$LN31@do_EC_KEY_:
; Line 457
	push	457					; 000001c9H
	add	eax, 10					; 0000000aH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
	test	ebx, ebx
	jne	SHORT $LN33@do_EC_KEY_
; Line 458
	lea	ebp, DWORD PTR [eax+65]
; Line 459
	jmp	$LN30@do_EC_KEY_
$LN33@do_EC_KEY_:
	mov	eax, DWORD PTR _ktype$[esp+28]
$LN12@do_EC_KEY_:
; Line 462
	cmp	eax, 2
	jne	SHORT $LN13@do_EC_KEY_
; Line 463
	mov	DWORD PTR _ecstr$1$[esp+32], OFFSET ??_C@_0M@CJKOCIEC@Private?9Key?$AA@
	jmp	SHORT $LN15@do_EC_KEY_
$LN13@do_EC_KEY_:
; Line 464
	cmp	eax, 1
	mov	ecx, OFFSET ??_C@_0L@FMJMEKAC@Public?9Key?$AA@
	mov	edx, OFFSET ??_C@_0BB@DMDKLH@ECDSA?9Parameters?$AA@
	cmovne	ecx, edx
	mov	DWORD PTR _ecstr$1$[esp+32], ecx
$LN15@do_EC_KEY_:
; Line 469
	mov	esi, DWORD PTR _bp$[esp+28]
	push	128					; 00000080H
	push	DWORD PTR _off$[esp+32]
	push	esi
	call	_BIO_indent
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN30@do_EC_KEY_
; Line 471
	call	_BN_new
	mov	DWORD PTR _order$1$[esp+32], eax
	test	eax, eax
	je	$LN30@do_EC_KEY_
; Line 473
	push	0
	push	eax
	push	DWORD PTR _group$1$[esp+36]
	call	_EC_GROUP_get_order
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN30@do_EC_KEY_
; Line 475
	mov	eax, DWORD PTR _order$1$[esp+32]
	push	eax
	call	_BN_num_bits
	push	eax
	push	DWORD PTR _ecstr$1$[esp+40]
	push	OFFSET ??_C@_0O@OPPPNLCD@?$CFs?3?5?$CI?$CFd?5bit?$CJ?6?$AA@
	push	esi
	call	_BIO_printf
	add	esp, 20					; 00000014H
	test	eax, eax
	jle	SHORT $LN30@do_EC_KEY_
; Line 478
	mov	eax, DWORD PTR _priv_key$1$[esp+32]
	test	eax, eax
	je	SHORT $LN21@do_EC_KEY_
	push	DWORD PTR _off$[esp+28]
	push	ebx
	push	eax
	push	OFFSET ??_C@_05PFPGJCCA@priv?3?$AA@
	push	esi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN30@do_EC_KEY_
$LN21@do_EC_KEY_:
; Line 481
	test	edi, edi
	je	SHORT $LN22@do_EC_KEY_
	push	DWORD PTR _off$[esp+28]
	push	ebx
	push	edi
	push	OFFSET ??_C@_05FJHKEHEO@pub?3?5?$AA@
	push	esi
	call	_ASN1_bn_print
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN30@do_EC_KEY_
$LN22@do_EC_KEY_:
; Line 484
	push	DWORD PTR _off$[esp+28]
	push	DWORD PTR _group$1$[esp+32]
	push	esi
	call	_ECPKParameters_print
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN30@do_EC_KEY_
; Line 486
	mov	ebp, 1
	jmp	SHORT $LN24@do_EC_KEY_
$LN3@do_EC_KEY_:
; Line 425
	mov	ebp, 67					; 00000043H
$LN30@do_EC_KEY_:
; Line 489
	push	489					; 000001e9H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	ebp
	push	221					; 000000ddH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
	xor	ebp, ebp
$LN24@do_EC_KEY_:
; Line 490
	test	edi, edi
	je	SHORT $LN25@do_EC_KEY_
; Line 491
	push	edi
	call	_BN_free
	add	esp, 4
$LN25@do_EC_KEY_:
; Line 492
	mov	eax, DWORD PTR _order$1$[esp+32]
	test	eax, eax
	je	SHORT $LN26@do_EC_KEY_
; Line 493
	push	eax
	call	_BN_free
	add	esp, 4
$LN26@do_EC_KEY_:
; Line 494
	mov	eax, DWORD PTR _ctx$1$[esp+32]
	test	eax, eax
	je	SHORT $LN27@do_EC_KEY_
; Line 495
	push	eax
	call	_BN_CTX_free
	add	esp, 4
$LN27@do_EC_KEY_:
; Line 496
	test	ebx, ebx
	je	SHORT $LN32@do_EC_KEY_
; Line 497
	push	ebx
	call	_CRYPTO_free
	add	esp, 4
$LN32@do_EC_KEY_:
; Line 498
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 499
	add	esp, 16					; 00000010H
	ret	0
_do_EC_KEY_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_ec_free
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_int_ec_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 409
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR [eax+20]
	call	_EC_KEY_free
	pop	ecx
; Line 410
	ret	0
_int_ec_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_cmp_parameters
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_ec_cmp_parameters PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 399
	mov	eax, DWORD PTR _a$[esp-4]
	push	esi
	push	DWORD PTR [eax+20]
	call	_EC_KEY_get0_group
; Line 400
	mov	ecx, DWORD PTR _b$[esp+4]
	mov	esi, eax
	push	DWORD PTR [ecx+20]
	call	_EC_KEY_get0_group
; Line 401
	push	0
	push	eax
	push	esi
	call	_EC_GROUP_cmp
	add	esp, 20					; 00000014H
	neg	eax
	sbb	eax, eax
	inc	eax
	pop	esi
; Line 405
	ret	0
_ec_cmp_parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_copy_parameters
_TEXT	SEGMENT
_to$ = 8						; size = 4
_from$ = 12						; size = 4
_ec_copy_parameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 388
	mov	eax, DWORD PTR _from$[esp-4]
	push	esi
	push	DWORD PTR [eax+20]
	call	_EC_KEY_get0_group
	push	eax
	call	_EC_GROUP_dup
	mov	esi, eax
	add	esp, 8
; Line 389
	test	esi, esi
	jne	SHORT $LN2@ec_copy_pa
$LN5@ec_copy_pa:
; Line 390
	xor	eax, eax
	pop	esi
; Line 395
	ret	0
$LN2@ec_copy_pa:
; Line 391
	mov	eax, DWORD PTR _to$[esp]
	push	esi
	push	DWORD PTR [eax+20]
	call	_EC_KEY_set_group
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@ec_copy_pa
; Line 393
	push	esi
	call	_EC_GROUP_free
	add	esp, 4
; Line 394
	mov	eax, 1
	pop	esi
; Line 395
	ret	0
_ec_copy_parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_missing_parameters
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_ec_missing_parameters PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 381
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR [eax+20]
	call	_EC_KEY_get0_group
	add	esp, 4
	neg	eax
	sbb	eax, eax
	inc	eax
; Line 384
	ret	0
_ec_missing_parameters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ec_bits
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_ec_bits PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 359
	push	edi
; Line 360
	call	_BN_new
	mov	edi, eax
; Line 364
	test	edi, edi
	jne	SHORT $LN2@ec_bits
$LN5@ec_bits:
; Line 365
	call	_ERR_clear_error
; Line 366
	xor	eax, eax
	pop	edi
; Line 377
	ret	0
$LN2@ec_bits:
; Line 368
	mov	eax, DWORD PTR _pkey$[esp]
	push	DWORD PTR [eax+20]
	call	_EC_KEY_get0_group
; Line 369
	push	0
	push	edi
	push	eax
	call	_EC_GROUP_get_order
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN5@ec_bits
; Line 374
	push	esi
	push	edi
	call	_BN_num_bits
; Line 375
	push	edi
	mov	esi, eax
	call	_BN_free
	add	esp, 8
; Line 376
	mov	eax, esi
	pop	esi
	pop	edi
; Line 377
	ret	0
_ec_bits ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _int_ec_size
_TEXT	SEGMENT
_pkey$ = 8						; size = 4
_int_ec_size PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 355
	mov	eax, DWORD PTR _pkey$[esp-4]
	push	DWORD PTR [eax+20]
	call	_ECDSA_size
	add	esp, 4
; Line 356
	ret	0
_int_ec_size ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_priv_encode
_TEXT	SEGMENT
_pval$ = -8						; size = 4
_ptype$ = -4						; size = 4
_p8$ = 8						; size = 4
_p$ = 12						; size = 4
_pkey$ = 12						; size = 4
_eckey_priv_encode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 301
	mov	eax, 8
	call	__chkstk
; Line 308
	mov	eax, DWORD PTR _pkey$[esp+4]
	push	esi
	mov	esi, DWORD PTR [eax+20]
; Line 310
	lea	eax, DWORD PTR _pval$[esp+12]
	push	esi
	push	eax
	lea	eax, DWORD PTR _ptype$[esp+20]
	push	eax
	call	_eckey_param2type
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@eckey_priv
; Line 311
	push	311					; 00000137H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	142					; 0000008eH
	push	214					; 000000d6H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 312
	xor	eax, eax
	pop	esi
; Line 351
	add	esp, 8
	ret	0
$LN2@eckey_priv:
	push	ebp
	push	edi
; Line 321
	push	esi
	call	_EC_KEY_get_enc_flags
	mov	edi, eax
; Line 322
	mov	ecx, edi
	or	ecx, 1
; Line 323
	push	ecx
	push	esi
	call	_EC_KEY_set_enc_flags
; Line 324
	push	0
	push	esi
	call	_i2d_ECPrivateKey
	mov	ebp, eax
	add	esp, 20					; 00000014H
; Line 325
	test	ebp, ebp
	jne	SHORT $LN3@eckey_priv
; Line 326
	push	edi
	push	esi
	call	_EC_KEY_set_enc_flags
; Line 327
	push	327					; 00000147H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	16					; 00000010H
	push	214					; 000000d6H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 28					; 0000001cH
; Line 328
	xor	eax, eax
	pop	edi
	pop	ebp
	pop	esi
; Line 351
	add	esp, 8
	ret	0
$LN3@eckey_priv:
	push	ebx
; Line 330
	push	330					; 0000014aH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	ebp
	call	_CRYPTO_malloc
	mov	ebx, eax
	add	esp, 12					; 0000000cH
; Line 331
	test	ebx, ebx
	jne	SHORT $LN4@eckey_priv
; Line 332
	push	edi
	push	esi
	call	_EC_KEY_set_enc_flags
; Line 333
	push	333					; 0000014dH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	65					; 00000041H
	push	214					; 000000d6H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 28					; 0000001cH
; Line 334
	xor	eax, eax
	pop	ebx
	pop	edi
	pop	ebp
	pop	esi
; Line 351
	add	esp, 8
	ret	0
$LN4@eckey_priv:
; Line 337
	lea	eax, DWORD PTR _p$[esp+20]
	mov	DWORD PTR _p$[esp+20], ebx
	push	eax
	push	esi
	call	_i2d_ECPrivateKey
	add	esp, 8
; Line 338
	push	edi
	push	esi
	test	eax, eax
	jne	SHORT $LN5@eckey_priv
	call	_EC_KEY_set_enc_flags
; Line 339
	push	ebx
	call	_CRYPTO_free
; Line 340
	push	340					; 00000154H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	16					; 00000010H
	push	214					; 000000d6H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 32					; 00000020H
; Line 341
	xor	eax, eax
	pop	ebx
	pop	edi
	pop	ebp
	pop	esi
; Line 351
	add	esp, 8
	ret	0
$LN5@eckey_priv:
; Line 344
	call	_EC_KEY_set_enc_flags
	add	esp, 8
; Line 346
	push	ebp
	push	ebx
	push	DWORD PTR _pval$[esp+32]
	push	DWORD PTR _ptype$[esp+36]
	push	0
	push	408					; 00000198H
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _p8$[esp+44]
	call	_PKCS8_pkey_set0
	add	esp, 28					; 0000001cH
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	ebx
	pop	edi
	pop	ebp
	pop	esi
; Line 351
	add	esp, 8
	ret	0
_eckey_priv_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_priv_decode
_TEXT	SEGMENT
_eckey$ = -24						; size = 4
_p$ = -20						; size = 4
_palg$ = -16						; size = 4
_pval$ = -12						; size = 4
_ptype$ = -8						; size = 4
_pklen$ = -4						; size = 4
_pkey$ = 8						; size = 4
_p8$ = 12						; size = 4
_eckey_priv_decode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 233
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 240
	push	DWORD PTR _p8$[esp+20]
	lea	eax, DWORD PTR _palg$[esp+28]
	mov	DWORD PTR _p$[esp+28], 0
	push	eax
	lea	eax, DWORD PTR _pklen$[esp+32]
	mov	DWORD PTR _eckey$[esp+32], 0
	push	eax
	lea	eax, DWORD PTR _p$[esp+36]
	push	eax
	push	0
	call	_PKCS8_pkey_get0
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN2@eckey_priv
; Line 298
	add	esp, 24					; 00000018H
	ret	0
$LN2@eckey_priv:
	push	esi
	push	edi
; Line 242
	push	DWORD PTR _palg$[esp+32]
	lea	eax, DWORD PTR _pval$[esp+36]
	push	eax
	lea	eax, DWORD PTR _ptype$[esp+40]
	push	eax
	push	0
	call	_X509_ALGOR_get0
; Line 244
	push	DWORD PTR _pval$[esp+48]
	push	DWORD PTR _ptype$[esp+52]
	call	_eckey_type2param
	add	esp, 24					; 00000018H
	mov	DWORD PTR _eckey$[esp+32], eax
; Line 246
	test	eax, eax
	je	SHORT $ecliberr$17
; Line 250
	push	DWORD PTR _pklen$[esp+32]
	lea	eax, DWORD PTR _p$[esp+36]
	push	eax
	lea	eax, DWORD PTR _eckey$[esp+40]
	push	eax
	call	_d2i_ECPrivateKey
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@eckey_priv
; Line 251
	push	251					; 000000fbH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	142					; 0000008eH
; Line 252
	jmp	SHORT $LN14@eckey_priv
$LN4@eckey_priv:
; Line 256
	push	DWORD PTR _eckey$[esp+32]
	call	_EC_KEY_get0_public_key
	add	esp, 4
	test	eax, eax
	jne	$LN5@eckey_priv
; Line 264
	push	DWORD PTR _eckey$[esp+32]
	call	_EC_KEY_get0_group
	mov	edi, eax
; Line 265
	push	edi
	call	_EC_POINT_new
	mov	esi, eax
	add	esp, 8
; Line 266
	test	esi, esi
	jne	SHORT $LN6@eckey_priv
; Line 267
	push	267					; 0000010bH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	16					; 00000010H
	push	213					; 000000d5H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$ecliberr$17:
; Line 293
	push	293					; 00000125H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	16					; 00000010H
$LN14@eckey_priv:
	push	213					; 000000d5H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$ecerr$18:
; Line 295
	mov	eax, DWORD PTR _eckey$[esp+32]
	test	eax, eax
	je	SHORT $LN10@eckey_priv
; Line 296
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN10@eckey_priv:
; Line 297
	pop	edi
	xor	eax, eax
	pop	esi
; Line 298
	add	esp, 24					; 00000018H
	ret	0
$LN6@eckey_priv:
; Line 270
	push	edi
	call	_EC_GROUP_get0_generator
	push	eax
	push	esi
	call	_EC_POINT_copy
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@eckey_priv
; Line 271
	push	esi
	call	_EC_POINT_free
; Line 272
	push	272					; 00000110H
$LN15@eckey_priv:
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	16					; 00000010H
	push	213					; 000000d5H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 24					; 00000018H
; Line 273
	jmp	SHORT $ecliberr$17
$LN7@eckey_priv:
; Line 275
	push	DWORD PTR _eckey$[esp+32]
	call	_EC_KEY_get0_private_key
; Line 276
	push	0
	push	0
	push	0
	push	eax
	push	esi
	push	edi
	call	_EC_POINT_mul
	add	esp, 28					; 0000001cH
; Line 277
	push	esi
	test	eax, eax
	jne	SHORT $LN8@eckey_priv
	call	_EC_POINT_free
; Line 278
	push	278					; 00000116H
; Line 279
	jmp	SHORT $LN15@eckey_priv
$LN8@eckey_priv:
; Line 281
	push	DWORD PTR _eckey$[esp+36]
	call	_EC_KEY_set_public_key
	add	esp, 8
; Line 282
	push	esi
	test	eax, eax
	jne	SHORT $LN9@eckey_priv
	call	_EC_POINT_free
; Line 283
	push	283					; 0000011bH
	jmp	SHORT $LN15@eckey_priv
$LN9@eckey_priv:
; Line 286
	call	_EC_POINT_free
	add	esp, 4
$LN5@eckey_priv:
; Line 289
	push	DWORD PTR _eckey$[esp+32]
	push	408					; 00000198H
	push	DWORD PTR _pkey$[esp+36]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 290
	mov	eax, 1
	pop	edi
	pop	esi
; Line 298
	add	esp, 24					; 00000018H
	ret	0
_eckey_priv_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_pub_cmp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_eckey_pub_cmp PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 219
	push	ebx
	push	esi
	push	edi
; Line 221
	mov	edi, DWORD PTR _b$[esp+8]
	push	DWORD PTR [edi+20]
	call	_EC_KEY_get0_group
; Line 222
	mov	ecx, DWORD PTR _a$[esp+12]
	mov	ebx, eax
	push	DWORD PTR [ecx+20]
	call	_EC_KEY_get0_public_key
; Line 223
	push	DWORD PTR [edi+20]
	mov	esi, eax
	call	_EC_KEY_get0_public_key
; Line 224
	push	0
	push	eax
	push	esi
	push	ebx
	call	_EC_POINT_cmp
	add	esp, 28					; 0000001cH
	pop	edi
	pop	esi
	pop	ebx
; Line 225
	test	eax, eax
	jne	SHORT $LN2@eckey_pub_
; Line 226
	mov	eax, 1
; Line 230
	ret	0
$LN2@eckey_pub_:
; Line 227
	dec	eax
	neg	eax
	sbb	eax, eax
	and	eax, -2					; fffffffeH
; Line 230
	ret	0
_eckey_pub_cmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_pub_decode
_TEXT	SEGMENT
_eckey$ = -24						; size = 4
_p$ = -20						; size = 4
_palg$ = -16						; size = 4
_pval$ = -12						; size = 4
_ptype$ = -8						; size = 4
_pklen$ = -4						; size = 4
_pkey$ = 8						; size = 4
_pubkey$ = 12						; size = 4
_eckey_pub_decode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 185
	mov	eax, 24					; 00000018H
	call	__chkstk
; Line 192
	push	DWORD PTR _pubkey$[esp+20]
	lea	eax, DWORD PTR _palg$[esp+28]
	mov	DWORD PTR _p$[esp+28], 0
	push	eax
	lea	eax, DWORD PTR _pklen$[esp+32]
	mov	DWORD PTR _eckey$[esp+32], 0
	push	eax
	lea	eax, DWORD PTR _p$[esp+36]
	push	eax
	push	0
	call	_X509_PUBKEY_get0_param
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN7@eckey_pub_
; Line 194
	push	DWORD PTR _palg$[esp+24]
	lea	eax, DWORD PTR _pval$[esp+28]
	push	eax
	lea	eax, DWORD PTR _ptype$[esp+32]
	push	eax
	push	0
	call	_X509_ALGOR_get0
; Line 196
	push	DWORD PTR _pval$[esp+40]
	push	DWORD PTR _ptype$[esp+44]
	call	_eckey_type2param
	add	esp, 24					; 00000018H
	mov	DWORD PTR _eckey$[esp+24], eax
; Line 198
	test	eax, eax
	jne	SHORT $LN3@eckey_pub_
; Line 199
	push	199					; 000000c7H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	16					; 00000010H
	push	215					; 000000d7H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN7@eckey_pub_:
; Line 200
	xor	eax, eax
; Line 216
	add	esp, 24					; 00000018H
	ret	0
$LN3@eckey_pub_:
; Line 204
	push	DWORD PTR _pklen$[esp+24]
	lea	eax, DWORD PTR _p$[esp+28]
	push	eax
	lea	eax, DWORD PTR _eckey$[esp+32]
	push	eax
	call	_o2i_ECPublicKey
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@eckey_pub_
; Line 205
	push	205					; 000000cdH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	142					; 0000008eH
	push	215					; 000000d7H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$ecerr$9:
; Line 213
	mov	eax, DWORD PTR _eckey$[esp+24]
	test	eax, eax
	je	SHORT $LN5@eckey_pub_
; Line 214
	push	eax
	call	_EC_KEY_free
	add	esp, 4
$LN5@eckey_pub_:
; Line 215
	xor	eax, eax
; Line 216
	add	esp, 24					; 00000018H
	ret	0
$LN4@eckey_pub_:
; Line 209
	push	DWORD PTR _eckey$[esp+24]
	push	408					; 00000198H
	push	DWORD PTR _pkey$[esp+28]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 210
	mov	eax, 1
; Line 216
	add	esp, 24					; 00000018H
	ret	0
_eckey_pub_decode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_type2param
_TEXT	SEGMENT
_pm$1 = 8						; size = 4
_ptype$ = 8						; size = 4
_pval$ = 12						; size = 4
_eckey_type2param PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 143
	mov	eax, DWORD PTR _ptype$[esp-4]
	push	esi
	push	edi
	cmp	eax, 16					; 00000010H
	jne	SHORT $LN2@eckey_type
; Line 147
	mov	ecx, DWORD PTR _pval$[esp+4]
	mov	eax, DWORD PTR [ecx+8]
; Line 149
	push	DWORD PTR [ecx]
	mov	DWORD PTR _pm$1[esp+8], eax
	lea	eax, DWORD PTR _pm$1[esp+8]
	push	eax
	push	0
	call	_d2i_ECParameters
	mov	esi, eax
	add	esp, 12					; 0000000cH
	test	esi, esi
	jne	SHORT $LN6@eckey_type
; Line 150
	push	150					; 00000096H
; Line 151
	jmp	SHORT $LN12@eckey_type
$LN2@eckey_type:
; Line 153
	cmp	eax, 6
	jne	SHORT $LN5@eckey_type
; Line 160
	call	_EC_KEY_new
	mov	esi, eax
	test	esi, esi
	jne	SHORT $LN7@eckey_type
; Line 161
	push	161					; 000000a1H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	65					; 00000041H
; Line 172
	push	220					; 000000dcH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 181
	xor	eax, eax
	pop	edi
	pop	esi
; Line 182
	ret	0
$LN7@eckey_type:
; Line 164
	push	DWORD PTR _pval$[esp+4]
	call	_OBJ_obj2nid
	push	eax
	call	_EC_GROUP_new_by_curve_name
	mov	edi, eax
	add	esp, 8
; Line 165
	test	edi, edi
	je	SHORT $ecerr$15
; Line 167
	push	1
	push	edi
	call	_EC_GROUP_set_asn1_flag
; Line 168
	push	edi
	push	esi
	call	_EC_KEY_set_group
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $ecerr$15
; Line 170
	push	edi
	call	_EC_GROUP_free
	add	esp, 4
$LN6@eckey_type:
; Line 176
	pop	edi
	mov	eax, esi
	pop	esi
; Line 182
	ret	0
$ecerr$15:
; Line 180
	push	esi
	call	_EC_KEY_free
	add	esp, 4
; Line 181
	xor	eax, eax
	pop	edi
	pop	esi
; Line 182
	ret	0
$LN5@eckey_type:
; Line 172
	push	172					; 000000acH
$LN12@eckey_type:
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	142					; 0000008eH
	push	220					; 000000dcH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 181
	xor	eax, eax
	pop	edi
	pop	esi
; Line 182
	ret	0
_eckey_type2param ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_pub_encode
_TEXT	SEGMENT
_ptype$ = -8						; size = 4
_p$ = -4						; size = 4
_pk$ = 8						; size = 4
_pval$ = 12						; size = 4
_pkey$ = 12						; size = 4
_eckey_pub_encode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 106
	mov	eax, 8
	call	__chkstk
; Line 107
	mov	eax, DWORD PTR _pkey$[esp+4]
	push	ebx
	push	esi
; Line 108
	mov	DWORD PTR _pval$[esp+12], 0
; Line 110
	xor	esi, esi
	mov	ebx, DWORD PTR [eax+20]
; Line 113
	lea	eax, DWORD PTR _pval$[esp+12]
	push	ebx
	push	eax
	lea	eax, DWORD PTR _ptype$[esp+24]
	push	eax
	call	_eckey_param2type
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@eckey_pub_
; Line 114
	push	114					; 00000072H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	16					; 00000010H
	push	216					; 000000d8H
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 115
	xor	eax, eax
	pop	esi
	pop	ebx
; Line 138
	add	esp, 8
	ret	0
$LN2@eckey_pub_:
	push	edi
; Line 117
	push	0
	push	ebx
	call	_i2o_ECPublicKey
; Line 118
	mov	edi, DWORD PTR _pval$[esp+24]
	add	esp, 8
	test	eax, eax
	jle	SHORT $err$14
; Line 120
	push	120					; 00000078H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 121
	test	esi, esi
	je	SHORT $err$14
; Line 124
	lea	eax, DWORD PTR _p$[esp+20]
	mov	DWORD PTR _p$[esp+20], esi
	push	eax
	push	ebx
	call	_i2o_ECPublicKey
	add	esp, 8
; Line 125
	test	eax, eax
	jle	SHORT $err$14
; Line 127
	push	eax
	push	esi
	push	edi
	push	DWORD PTR _ptype$[esp+32]
	push	408					; 00000198H
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _pk$[esp+36]
	call	_X509_PUBKEY_set0_param
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $err$14
; Line 129
	pop	edi
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 138
	add	esp, 8
	ret	0
$err$14:
; Line 131
	cmp	DWORD PTR _ptype$[esp+20], 6
; Line 132
	push	edi
	jne	SHORT $LN7@eckey_pub_
	call	_ASN1_OBJECT_free
	jmp	SHORT $LN12@eckey_pub_
$LN7@eckey_pub_:
; Line 134
	call	_ASN1_STRING_free
$LN12@eckey_pub_:
	add	esp, 4
; Line 135
	test	esi, esi
	je	SHORT $LN9@eckey_pub_
; Line 136
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN9@eckey_pub_:
; Line 137
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 138
	add	esp, 8
	ret	0
_eckey_pub_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _eckey_param2type
_TEXT	SEGMENT
_pptype$ = 8						; size = 4
_ppval$ = 12						; size = 4
_ec_key$ = 16						; size = 4
_eckey_param2type PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 74
	push	esi
	push	edi
; Line 77
	mov	edi, DWORD PTR _ec_key$[esp+4]
	test	edi, edi
	je	$LN3@eckey_para
	push	edi
	call	_EC_KEY_get0_group
	mov	esi, eax
	add	esp, 4
	test	esi, esi
	je	$LN3@eckey_para
; Line 82
	push	esi
	call	_EC_GROUP_get_asn1_flag
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@eckey_para
	push	esi
	call	_EC_GROUP_get_curve_name
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@eckey_para
; Line 85
	push	eax
	call	_OBJ_nid2obj
	mov	ecx, DWORD PTR _ppval$[esp+8]
	add	esp, 4
	mov	DWORD PTR [ecx], eax
; Line 86
	mov	eax, DWORD PTR _pptype$[esp+4]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], 6
; Line 102
	mov	eax, 1
; Line 103
	ret	0
$LN4@eckey_para:
; Line 90
	call	_ASN1_STRING_new
	mov	esi, eax
; Line 91
	test	esi, esi
	je	SHORT $LN9@eckey_para
; Line 93
	lea	eax, DWORD PTR [esi+8]
	push	eax
	push	edi
	call	_i2d_ECParameters
	add	esp, 8
	mov	DWORD PTR [esi], eax
; Line 94
	test	eax, eax
	jg	SHORT $LN7@eckey_para
; Line 95
	push	esi
	call	_ASN1_STRING_free
; Line 96
	push	96					; 00000060H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	16					; 00000010H
	push	223					; 000000dfH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 24					; 00000018H
	xor	eax, eax
	pop	edi
	pop	esi
; Line 103
	ret	0
$LN7@eckey_para:
; Line 99
	mov	eax, DWORD PTR _ppval$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], esi
; Line 100
	mov	eax, DWORD PTR _pptype$[esp]
	pop	esi
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 102
	mov	eax, 1
; Line 103
	ret	0
$LN3@eckey_para:
; Line 78
	push	78					; 0000004eH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	124					; 0000007cH
	push	223					; 000000dfH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN9@eckey_para:
; Line 79
	pop	edi
	xor	eax, eax
	pop	esi
; Line 103
	ret	0
_eckey_param2type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ecdh_cms_encrypt
_TEXT	SEGMENT
_penc$ = -36						; size = 4
_talg$ = -32						; size = 4
_pubkey$ = -28						; size = 4
_kdf_md$ = -24						; size = 4
_rv$1$ = -20						; size = 4
_aoid$ = -16						; size = 4
_wrap_nid$1$ = -12					; size = 4
_kdf_type$1$ = -12					; size = 4
_p$1 = -12						; size = 4
_ukm$ = -8						; size = 4
_kdf_nid$ = -4						; size = 4
_ri$ = 8						; size = 4
_ecdh_cms_encrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 823
	mov	eax, 36					; 00000024H
	call	__chkstk
	push	ebp
; Line 838
	mov	ebp, DWORD PTR _ri$[esp+36]
	push	esi
	push	edi
	xor	esi, esi
	push	ebp
	mov	DWORD PTR _penc$[esp+52], esi
	mov	DWORD PTR _rv$1$[esp+52], esi
	call	_CMS_RecipientInfo_get0_pkey_ctx
	mov	edi, eax
	add	esp, 4
; Line 839
	test	edi, edi
	jne	SHORT $LN2@ecdh_cms_e
	pop	edi
	pop	esi
	pop	ebp
; Line 963
	add	esp, 36					; 00000024H
	ret	0
$LN2@ecdh_cms_e:
	push	ebx
; Line 842
	push	edi
	call	_EVP_PKEY_CTX_get0_pkey
; Line 843
	push	0
	push	0
	mov	ebx, eax
	lea	eax, DWORD PTR _pubkey$[esp+64]
	push	0
	push	eax
	lea	eax, DWORD PTR _talg$[esp+72]
	push	eax
	push	ebp
	call	_CMS_RecipientInfo_kari_get0_orig_id
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	$LN35@ecdh_cms_e
; Line 846
	push	DWORD PTR _talg$[esp+52]
	lea	eax, DWORD PTR _aoid$[esp+56]
	push	0
	push	0
	push	eax
	call	_X509_ALGOR_get0
; Line 848
	push	0
	call	_OBJ_nid2obj
	add	esp, 20					; 00000014H
	cmp	DWORD PTR _aoid$[esp+52], eax
	jne	$LN4@ecdh_cms_e
; Line 850
	mov	ebx, DWORD PTR [ebx+20]
; Line 854
	push	0
	push	ebx
	call	_i2o_ECPublicKey
	add	esp, 8
; Line 855
	test	eax, eax
	jle	$LN35@ecdh_cms_e
; Line 857
	push	857					; 00000359H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _penc$[esp+52], eax
; Line 858
	test	eax, eax
	je	$LN33@ecdh_cms_e
; Line 860
	mov	DWORD PTR _p$1[esp+52], eax
; Line 861
	lea	eax, DWORD PTR _p$1[esp+52]
	push	eax
	push	ebx
	call	_i2o_ECPublicKey
	add	esp, 8
; Line 862
	test	eax, eax
	jle	$LN35@ecdh_cms_e
; Line 864
	push	eax
	push	DWORD PTR _penc$[esp+56]
	push	DWORD PTR _pubkey$[esp+60]
	call	_ASN1_STRING_set0
; Line 865
	mov	eax, DWORD PTR _pubkey$[esp+64]
	add	esp, 12					; 0000000cH
	and	DWORD PTR [eax+12], -16			; fffffff0H
; Line 866
	mov	eax, DWORD PTR _pubkey$[esp+52]
; Line 869
	push	0
	push	-1
	push	408					; 00000198H
	or	DWORD PTR [eax+12], 8
	mov	DWORD PTR _penc$[esp+64], esi
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _talg$[esp+64]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
$LN4@ecdh_cms_e:
; Line 874
	push	0
	push	-2					; fffffffeH
	push	4100					; 00001004H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	mov	DWORD PTR _kdf_type$1$[esp+52], eax
; Line 875
	test	eax, eax
	jle	$LN35@ecdh_cms_e
; Line 877
	lea	eax, DWORD PTR _kdf_md$[esp+52]
	push	eax
	push	0
	push	4102					; 00001006H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	je	$LN35@ecdh_cms_e
; Line 879
	push	0
	push	-2					; fffffffeH
	push	4099					; 00001003H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	mov	ebx, eax
	add	esp, 24					; 00000018H
; Line 880
	test	ebx, ebx
	js	$LN35@ecdh_cms_e
; Line 882
	jne	SHORT $LN12@ecdh_cms_e
; Line 883
	mov	ebx, 946				; 000003b2H
	jmp	SHORT $LN14@ecdh_cms_e
$LN12@ecdh_cms_e:
; Line 884
	cmp	ebx, 1
	mov	eax, 947				; 000003b3H
	cmove	ebx, eax
$LN14@ecdh_cms_e:
; Line 887
	cmp	DWORD PTR _kdf_type$1$[esp+52], 1
	jne	$LN35@ecdh_cms_e
; Line 889
	push	0
	push	2
	push	4100					; 00001004H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	$LN35@ecdh_cms_e
; Line 894
	cmp	DWORD PTR _kdf_md$[esp+52], esi
	jne	SHORT $LN19@ecdh_cms_e
; Line 896
	call	_EVP_sha1
; Line 897
	push	eax
	push	0
	push	4101					; 00001005H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	edi
	mov	DWORD PTR _kdf_md$[esp+76], eax
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	$LN35@ecdh_cms_e
$LN19@ecdh_cms_e:
; Line 901
	lea	eax, DWORD PTR _ukm$[esp+52]
	push	eax
	lea	eax, DWORD PTR _talg$[esp+56]
	push	eax
	push	ebp
	call	_CMS_RecipientInfo_kari_get0_alg
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN35@ecdh_cms_e
; Line 906
	push	ebx
	push	DWORD PTR _kdf_md$[esp+56]
	call	_EVP_MD_type
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _kdf_nid$[esp+60]
	push	eax
	call	_OBJ_find_sigid_by_algs
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN35@ecdh_cms_e
; Line 909
	push	ebp
	call	_CMS_RecipientInfo_kari_get0_ctx
	mov	ebx, eax
; Line 910
	push	ebx
	call	_EVP_CIPHER_CTX_cipher
	push	eax
	call	_EVP_CIPHER_type
; Line 911
	push	ebx
	mov	DWORD PTR _wrap_nid$1$[esp+68], eax
	call	_EVP_CIPHER_CTX_key_length
	add	esp, 16					; 00000010H
	mov	ebp, eax
; Line 915
	call	_X509_ALGOR_new
	mov	esi, eax
; Line 916
	test	esi, esi
	je	$LN35@ecdh_cms_e
; Line 918
	push	DWORD PTR _wrap_nid$1$[esp+52]
	call	_OBJ_nid2obj
	add	esp, 4
	mov	DWORD PTR [esi], eax
; Line 919
	call	_ASN1_TYPE_new
	mov	DWORD PTR [esi+4], eax
; Line 920
	test	eax, eax
	je	$LN35@ecdh_cms_e
; Line 922
	push	eax
	push	ebx
	call	_EVP_CIPHER_param_to_asn1
	add	esp, 8
	test	eax, eax
	jle	$LN35@ecdh_cms_e
; Line 924
	push	DWORD PTR [esi+4]
	call	_ASN1_TYPE_get
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN25@ecdh_cms_e
; Line 925
	push	DWORD PTR [esi+4]
	call	_ASN1_TYPE_free
	add	esp, 4
; Line 926
	mov	DWORD PTR [esi+4], 0
$LN25@ecdh_cms_e:
; Line 929
	push	0
	push	ebp
	push	4103					; 00001007H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	$LN35@ecdh_cms_e
; Line 932
	push	ebp
	push	DWORD PTR _ukm$[esp+56]
	lea	eax, DWORD PTR _penc$[esp+60]
	push	esi
	push	eax
	call	_CMS_SharedInfo_encode
	add	esp, 16					; 00000010H
; Line 934
	test	eax, eax
	je	$LN35@ecdh_cms_e
; Line 937
	push	DWORD PTR _penc$[esp+52]
	push	eax
	push	4105					; 00001009H
	push	1024					; 00000400H
	push	408					; 00000198H
	push	edi
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 24					; 00000018H
	test	eax, eax
	jle	SHORT $LN35@ecdh_cms_e
; Line 945
	lea	eax, DWORD PTR _penc$[esp+52]
	mov	DWORD PTR _penc$[esp+52], 0
	push	eax
	push	esi
	call	_i2d_X509_ALGOR
; Line 946
	mov	ecx, DWORD PTR _penc$[esp+60]
	add	esp, 8
	mov	ebx, eax
	test	ecx, ecx
	je	SHORT $LN32@ecdh_cms_e
	test	ebx, ebx
	je	SHORT $err$37
; Line 948
	call	_ASN1_STRING_new
	mov	edi, eax
; Line 949
	test	edi, edi
	je	SHORT $LN35@ecdh_cms_e
; Line 951
	push	ebx
	push	DWORD PTR _penc$[esp+56]
	push	edi
	call	_ASN1_STRING_set0
	add	esp, 12					; 0000000cH
; Line 952
	mov	DWORD PTR _penc$[esp+52], 0
; Line 953
	push	edi
	push	16					; 00000010H
	push	DWORD PTR _kdf_nid$[esp+60]
	call	_OBJ_nid2obj
	add	esp, 4
	push	eax
	push	DWORD PTR _talg$[esp+64]
	call	_X509_ALGOR_set0
	add	esp, 16					; 00000010H
; Line 955
	mov	DWORD PTR _rv$1$[esp+52], 1
$LN35@ecdh_cms_e:
	mov	ecx, DWORD PTR _penc$[esp+52]
$err$37:
; Line 958
	test	ecx, ecx
	je	SHORT $LN32@ecdh_cms_e
; Line 959
	push	ecx
	call	_CRYPTO_free
	add	esp, 4
$LN32@ecdh_cms_e:
; Line 960
	test	esi, esi
	je	SHORT $LN33@ecdh_cms_e
; Line 961
	push	esi
	call	_X509_ALGOR_free
	add	esp, 4
$LN33@ecdh_cms_e:
; Line 962
	mov	eax, DWORD PTR _rv$1$[esp+52]
	pop	ebx
	pop	edi
	pop	esi
	pop	ebp
; Line 963
	add	esp, 36					; 00000024H
	ret	0
_ecdh_cms_encrypt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ecdh_cms_decrypt
_TEXT	SEGMENT
_alg$1 = -8						; size = 4
_pubkey$2 = -4						; size = 4
_ri$ = 8						; size = 4
_ecdh_cms_decrypt PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\ec\ec_ameth.c
; Line 795
	mov	eax, 8
	call	__chkstk
	push	esi
	push	edi
; Line 797
	mov	edi, DWORD PTR _ri$[esp+12]
	push	edi
	call	_CMS_RecipientInfo_get0_pkey_ctx
	mov	esi, eax
	add	esp, 4
; Line 798
	test	esi, esi
	je	SHORT $LN10@ecdh_cms_d
; Line 801
	push	esi
	call	_EVP_PKEY_CTX_get0_peerkey
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN7@ecdh_cms_d
; Line 804
	push	eax
	push	eax
	push	eax
	lea	eax, DWORD PTR _pubkey$2[esp+28]
	push	eax
	lea	eax, DWORD PTR _alg$1[esp+32]
	push	eax
	push	edi
	call	_CMS_RecipientInfo_kari_get0_orig_id
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN10@ecdh_cms_d
; Line 807
	mov	eax, DWORD PTR _alg$1[esp+16]
	test	eax, eax
	je	SHORT $LN10@ecdh_cms_d
	mov	ecx, DWORD PTR _pubkey$2[esp+16]
	test	ecx, ecx
	je	SHORT $LN10@ecdh_cms_d
; Line 809
	push	ecx
	push	eax
	push	esi
	call	_ecdh_cms_set_peerkey
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN7@ecdh_cms_d
; Line 810
	push	810					; 0000032aH
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	149					; 00000095H
$LN11@ecdh_cms_d:
	push	238					; 000000eeH
	push	16					; 00000010H
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN10@ecdh_cms_d:
; Line 811
	pop	edi
	xor	eax, eax
	pop	esi
; Line 820
	add	esp, 8
	ret	0
$LN7@ecdh_cms_d:
; Line 815
	push	edi
	push	esi
	call	_ecdh_cms_set_shared_info
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@ecdh_cms_d
; Line 816
	push	816					; 00000330H
	push	OFFSET ??_C@_0BH@OJGDIJIA@?4?2crypto?2ec?2ec_ameth?4c?$AA@
	push	150					; 00000096H
; Line 817
	jmp	SHORT $LN11@ecdh_cms_d
$LN8@ecdh_cms_d:
	pop	edi
; Line 819
	mov	eax, 1
	pop	esi
; Line 820
	add	esp, 8
	ret	0
_ecdh_cms_decrypt ENDP
_TEXT	ENDS
END

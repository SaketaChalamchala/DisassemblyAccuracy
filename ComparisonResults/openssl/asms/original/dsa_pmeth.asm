; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_pmeth.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_dsa_pkey_meth
CONST	SEGMENT
_dsa_pkey_meth DD 074H
	DD	02H
	DD	FLAT:_pkey_dsa_init
	DD	FLAT:_pkey_dsa_copy
	DD	FLAT:_pkey_dsa_cleanup
	DD	00H
	DD	FLAT:_pkey_dsa_paramgen
	DD	00H
	DD	FLAT:_pkey_dsa_keygen
	DD	00H
	DD	FLAT:_pkey_dsa_sign
	DD	00H
	DD	FLAT:_pkey_dsa_verify
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_pkey_dsa_ctrl
	DD	FLAT:_pkey_dsa_ctrl_str
CONST	ENDS
PUBLIC	??_C@_0BJ@ICNGHNPI@?4?2crypto?2dsa?2dsa_pmeth?4c?$AA@ ; `string'
PUBLIC	??_C@_0BC@DOMHFBFC@dsa_paramgen_bits?$AA@	; `string'
PUBLIC	??_C@_0BE@JHBKDNPA@dsa_paramgen_q_bits?$AA@	; `string'
PUBLIC	??_C@_0BA@HDLNDIMK@dsa_paramgen_md?$AA@		; `string'
EXTRN	__imp__atoi:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_EVP_MD_type:PROC
EXTRN	_EVP_get_digestbyname:PROC
EXTRN	_EVP_PKEY_assign:PROC
EXTRN	_EVP_PKEY_copy_parameters:PROC
EXTRN	_EVP_PKEY_CTX_ctrl:PROC
EXTRN	_DSA_new:PROC
EXTRN	_DSA_free:PROC
EXTRN	_DSA_sign:PROC
EXTRN	_DSA_verify:PROC
EXTRN	_DSA_generate_key:PROC
EXTRN	_evp_pkey_set_cb_translate:PROC
EXTRN	_dsa_builtin_paramgen:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0BA@HDLNDIMK@dsa_paramgen_md?$AA@
CONST	SEGMENT
??_C@_0BA@HDLNDIMK@dsa_paramgen_md?$AA@ DB 'dsa_paramgen_md', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JHBKDNPA@dsa_paramgen_q_bits?$AA@
CONST	SEGMENT
??_C@_0BE@JHBKDNPA@dsa_paramgen_q_bits?$AA@ DB 'dsa_paramgen_q_bits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DOMHFBFC@dsa_paramgen_bits?$AA@
CONST	SEGMENT
??_C@_0BC@DOMHFBFC@dsa_paramgen_bits?$AA@ DB 'dsa_paramgen_bits', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ICNGHNPI@?4?2crypto?2dsa?2dsa_pmeth?4c?$AA@
CONST	SEGMENT
??_C@_0BJ@ICNGHNPI@?4?2crypto?2dsa?2dsa_pmeth?4c?$AA@ DB '.\crypto\dsa\ds'
	DB	'a_pmeth.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dsa_keygen
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey$ = 12						; size = 4
_pkey_dsa_keygen PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_pmeth.c
; Line 265
	push	esi
; Line 267
	mov	esi, DWORD PTR _ctx$[esp]
	cmp	DWORD PTR [esi+8], 0
	jne	SHORT $LN2@pkey_dsa_k
; Line 268
	push	268					; 0000010cH
	push	OFFSET ??_C@_0BJ@ICNGHNPI@?4?2crypto?2dsa?2dsa_pmeth?4c?$AA@
	push	107					; 0000006bH
	push	121					; 00000079H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN7@pkey_dsa_k:
; Line 269
	xor	eax, eax
	pop	esi
; Line 279
	ret	0
$LN2@pkey_dsa_k:
; Line 271
	call	_DSA_new
; Line 272
	test	eax, eax
	je	SHORT $LN7@pkey_dsa_k
; Line 274
	push	edi
	mov	edi, DWORD PTR _pkey$[esp+4]
	push	eax
	push	116					; 00000074H
	push	edi
	call	_EVP_PKEY_assign
; Line 276
	push	DWORD PTR [esi+8]
	push	edi
	call	_EVP_PKEY_copy_parameters
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	SHORT $LN4@pkey_dsa_k
	pop	edi
	pop	esi
; Line 279
	ret	0
$LN4@pkey_dsa_k:
; Line 278
	push	DWORD PTR [edi+20]
	call	_DSA_generate_key
	add	esp, 4
	pop	edi
	pop	esi
; Line 279
	ret	0
_pkey_dsa_keygen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dsa_paramgen
_TEXT	SEGMENT
_cb$ = -12						; size = 12
_ctx$ = 8						; size = 4
_pkey$ = 12						; size = 4
_pkey_dsa_paramgen PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_pmeth.c
; Line 242
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 244
	mov	eax, DWORD PTR _ctx$[esp+8]
	push	ebx
	push	esi
	push	edi
; Line 247
	cmp	DWORD PTR [eax+28], 0
	mov	ebx, DWORD PTR [eax+20]
	je	SHORT $LN2@pkey_dsa_p
; Line 249
	push	eax
	lea	edi, DWORD PTR _cb$[esp+28]
	mov	eax, edi
	push	eax
	call	_evp_pkey_set_cb_translate
	add	esp, 8
; Line 250
	jmp	SHORT $LN3@pkey_dsa_p
$LN2@pkey_dsa_p:
; Line 251
	xor	edi, edi
$LN3@pkey_dsa_p:
; Line 252
	call	_DSA_new
	mov	esi, eax
; Line 253
	test	esi, esi
	jne	SHORT $LN4@pkey_dsa_p
	pop	edi
	pop	esi
	pop	ebx
; Line 262
	add	esp, 12					; 0000000cH
	ret	0
$LN4@pkey_dsa_p:
; Line 255
	push	edi
	push	0
	push	0
	push	0
	push	0
	push	0
	push	DWORD PTR [ebx+8]
	push	DWORD PTR [ebx+4]
	push	DWORD PTR [ebx]
	push	esi
	call	_dsa_builtin_paramgen
	add	esp, 40					; 00000028H
	mov	edi, eax
; Line 258
	push	esi
	test	edi, edi
	je	SHORT $LN5@pkey_dsa_p
	push	116					; 00000074H
	push	DWORD PTR _pkey$[esp+28]
	call	_EVP_PKEY_assign
	add	esp, 12					; 0000000cH
; Line 261
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 262
	add	esp, 12					; 0000000cH
	ret	0
$LN5@pkey_dsa_p:
; Line 260
	call	_DSA_free
	add	esp, 4
; Line 261
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
; Line 262
	add	esp, 12					; 0000000cH
	ret	0
_pkey_dsa_paramgen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dsa_ctrl_str
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_value$ = 16						; size = 4
_pkey_dsa_ctrl_str PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_pmeth.c
; Line 222
	mov	ecx, DWORD PTR _type$[esp-4]
	mov	edx, OFFSET ??_C@_0BC@DOMHFBFC@dsa_paramgen_bits?$AA@
	mov	eax, ecx
	push	ebx
	npad	4
$LL6@pkey_dsa_c:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN7@pkey_dsa_c
	test	bl, bl
	je	SHORT $LN8@pkey_dsa_c
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN7@pkey_dsa_c
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL6@pkey_dsa_c
$LN8@pkey_dsa_c:
	xor	eax, eax
	jmp	SHORT $LN9@pkey_dsa_c
$LN7@pkey_dsa_c:
	sbb	eax, eax
	or	eax, 1
$LN9@pkey_dsa_c:
	test	eax, eax
	jne	SHORT $LN2@pkey_dsa_c
; Line 224
	push	DWORD PTR _value$[esp]
	call	DWORD PTR __imp__atoi
; Line 225
	push	0
	push	eax
	push	4097					; 00001001H
	push	2
	push	116					; 00000074H
	push	DWORD PTR _ctx$[esp+24]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 28					; 0000001cH
	pop	ebx
; Line 239
	ret	0
$LN2@pkey_dsa_c:
; Line 227
	mov	edx, OFFSET ??_C@_0BE@JHBKDNPA@dsa_paramgen_q_bits?$AA@
	mov	eax, ecx
$LL10@pkey_dsa_c:
	mov	bl, BYTE PTR [eax]
	cmp	bl, BYTE PTR [edx]
	jne	SHORT $LN11@pkey_dsa_c
	test	bl, bl
	je	SHORT $LN12@pkey_dsa_c
	mov	bl, BYTE PTR [eax+1]
	cmp	bl, BYTE PTR [edx+1]
	jne	SHORT $LN11@pkey_dsa_c
	add	eax, 2
	add	edx, 2
	test	bl, bl
	jne	SHORT $LL10@pkey_dsa_c
$LN12@pkey_dsa_c:
	xor	eax, eax
	jmp	SHORT $LN13@pkey_dsa_c
$LN11@pkey_dsa_c:
	sbb	eax, eax
	or	eax, 1
$LN13@pkey_dsa_c:
	test	eax, eax
	jne	SHORT $LN3@pkey_dsa_c
; Line 228
	push	DWORD PTR _value$[esp]
	call	DWORD PTR __imp__atoi
; Line 229
	push	0
	push	eax
	push	4098					; 00001002H
	push	2
	push	116					; 00000074H
	push	DWORD PTR _ctx$[esp+24]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 28					; 0000001cH
	pop	ebx
; Line 239
	ret	0
$LN3@pkey_dsa_c:
; Line 233
	mov	eax, OFFSET ??_C@_0BA@HDLNDIMK@dsa_paramgen_md?$AA@
$LL14@pkey_dsa_c:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN15@pkey_dsa_c
	test	dl, dl
	je	SHORT $LN16@pkey_dsa_c
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN15@pkey_dsa_c
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL14@pkey_dsa_c
$LN16@pkey_dsa_c:
	xor	eax, eax
	jmp	SHORT $LN17@pkey_dsa_c
$LN15@pkey_dsa_c:
	sbb	eax, eax
	or	eax, 1
$LN17@pkey_dsa_c:
	test	eax, eax
	jne	SHORT $LN4@pkey_dsa_c
; Line 234
	push	DWORD PTR _value$[esp]
	call	_EVP_get_digestbyname
	push	eax
	push	0
	push	4099					; 00001003H
	push	2
	push	116					; 00000074H
	push	DWORD PTR _ctx$[esp+24]
	call	_EVP_PKEY_CTX_ctrl
	add	esp, 28					; 0000001cH
	pop	ebx
; Line 239
	ret	0
$LN4@pkey_dsa_c:
; Line 238
	mov	eax, -2					; fffffffeH
	pop	ebx
; Line 239
	ret	0
_pkey_dsa_ctrl_str ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dsa_ctrl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_type$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
_pkey_dsa_ctrl PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_pmeth.c
; Line 162
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
	push	edi
	mov	edi, DWORD PTR [eax+20]
; Line 163
	mov	eax, DWORD PTR _type$[esp+4]
	cmp	eax, 4097				; 00001001H
	jg	$LN17@pkey_dsa_c
	je	$LN4@pkey_dsa_c
	dec	eax
	cmp	eax, 12					; 0000000cH
	ja	$LN20@pkey_dsa_c
	movzx	eax, BYTE PTR $LN18@pkey_dsa_c[eax]
	jmp	DWORD PTR $LN23@pkey_dsa_c[eax*4]
$LN10@pkey_dsa_c:
; Line 192
	mov	esi, DWORD PTR _p2$[esp+4]
	push	esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 64					; 00000040H
	je	SHORT $LN11@pkey_dsa_c
	push	esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 116				; 00000074H
	je	SHORT $LN11@pkey_dsa_c
	push	esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 66					; 00000042H
	je	SHORT $LN11@pkey_dsa_c
	push	esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 675				; 000002a3H
	je	SHORT $LN11@pkey_dsa_c
	push	esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 672				; 000002a0H
	je	SHORT $LN11@pkey_dsa_c
	push	esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 673				; 000002a1H
	je	SHORT $LN11@pkey_dsa_c
	push	esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 674				; 000002a2H
	je	SHORT $LN11@pkey_dsa_c
; Line 194
	push	194					; 000000c2H
; Line 195
	jmp	$LN21@pkey_dsa_c
$LN11@pkey_dsa_c:
; Line 197
	mov	DWORD PTR [edi+20], esi
	mov	eax, 1
	pop	edi
	pop	esi
; Line 217
	ret	0
$LN12@pkey_dsa_c:
; Line 201
	mov	eax, DWORD PTR _p2$[esp+4]
	mov	ecx, DWORD PTR [edi+20]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], ecx
	mov	eax, 1
; Line 217
	ret	0
$LN14@pkey_dsa_c:
; Line 210
	push	211					; 000000d3H
	push	OFFSET ??_C@_0BJ@ICNGHNPI@?4?2crypto?2dsa?2dsa_pmeth?4c?$AA@
	push	150					; 00000096H
	push	120					; 00000078H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
$LN20@pkey_dsa_c:
; Line 212
	pop	edi
	mov	eax, -2					; fffffffeH
	pop	esi
; Line 217
	ret	0
$LN4@pkey_dsa_c:
; Line 165
	mov	eax, DWORD PTR _p1$[esp+4]
	cmp	eax, 256				; 00000100H
	jl	SHORT $LN20@pkey_dsa_c
; Line 167
	mov	DWORD PTR [edi], eax
; Line 174
	mov	eax, 1
	pop	edi
	pop	esi
; Line 217
	ret	0
$LN17@pkey_dsa_c:
; Line 163
	sub	eax, 4098				; 00001002H
	je	SHORT $LN6@pkey_dsa_c
	sub	eax, 1
	jne	SHORT $LN20@pkey_dsa_c
; Line 178
	mov	esi, DWORD PTR _p2$[esp+4]
	push	esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 64					; 00000040H
	je	SHORT $LN11@pkey_dsa_c
	push	esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 675				; 000002a3H
	je	$LN11@pkey_dsa_c
	push	esi
	call	_EVP_MD_type
	add	esp, 4
	cmp	eax, 672				; 000002a0H
	je	$LN11@pkey_dsa_c
; Line 180
	push	180					; 000000b4H
$LN21@pkey_dsa_c:
	push	OFFSET ??_C@_0BJ@ICNGHNPI@?4?2crypto?2dsa?2dsa_pmeth?4c?$AA@
	push	106					; 0000006aH
	push	120					; 00000078H
	push	10					; 0000000aH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 181
	xor	eax, eax
	pop	edi
	pop	esi
; Line 217
	ret	0
$LN6@pkey_dsa_c:
; Line 171
	mov	eax, DWORD PTR _p1$[esp+4]
	cmp	eax, 160				; 000000a0H
	je	SHORT $LN7@pkey_dsa_c
	cmp	eax, 224				; 000000e0H
	je	SHORT $LN7@pkey_dsa_c
	test	eax, eax
	je	SHORT $LN7@pkey_dsa_c
	cmp	eax, 256				; 00000100H
	jne	$LN20@pkey_dsa_c
$LN7@pkey_dsa_c:
; Line 173
	mov	DWORD PTR [edi+4], eax
$LN19@pkey_dsa_c:
	pop	edi
; Line 174
	mov	eax, 1
	pop	esi
; Line 217
	ret	0
	npad	3
$LN23@pkey_dsa_c:
	DD	$LN10@pkey_dsa_c
	DD	$LN14@pkey_dsa_c
	DD	$LN19@pkey_dsa_c
	DD	$LN12@pkey_dsa_c
	DD	$LN20@pkey_dsa_c
$LN18@pkey_dsa_c:
	DB	0
	DB	1
	DB	4
	DB	4
	DB	2
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	3
_pkey_dsa_ctrl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dsa_verify
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sig$ = 12						; size = 4
_siglen$ = 16						; size = 4
_tbs$ = 20						; size = 4
_tbslen$ = 24						; size = 4
_pkey_dsa_verify PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_pmeth.c
; Line 147
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
	mov	ecx, DWORD PTR [eax+20]
; Line 148
	mov	eax, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [eax+20]
; Line 150
	mov	eax, DWORD PTR [ecx+20]
	test	eax, eax
	je	SHORT $LN2@pkey_dsa_v
; Line 151
	push	eax
	call	_EVP_MD_type
	add	esp, 4
	jmp	SHORT $LN3@pkey_dsa_v
$LN2@pkey_dsa_v:
; Line 153
	mov	eax, 64					; 00000040H
$LN3@pkey_dsa_v:
; Line 155
	push	esi
	push	DWORD PTR _siglen$[esp+4]
	push	DWORD PTR _sig$[esp+8]
	push	DWORD PTR _tbslen$[esp+12]
	push	DWORD PTR _tbs$[esp+16]
	push	eax
	call	_DSA_verify
	add	esp, 24					; 00000018H
	pop	esi
; Line 158
	ret	0
_pkey_dsa_verify ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dsa_sign
_TEXT	SEGMENT
_sltmp$ = 8						; size = 4
_ctx$ = 8						; size = 4
_sig$ = 12						; size = 4
_siglen$ = 16						; size = 4
_tbs$ = 20						; size = 4
_tbslen$ = 24						; size = 4
_pkey_dsa_sign PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_pmeth.c
; Line 126
	mov	eax, DWORD PTR _ctx$[esp-4]
	push	esi
	mov	ecx, DWORD PTR [eax+20]
; Line 127
	mov	eax, DWORD PTR [eax+8]
	mov	esi, DWORD PTR [eax+20]
; Line 129
	mov	eax, DWORD PTR [ecx+20]
	test	eax, eax
	je	SHORT $LN2@pkey_dsa_s
; Line 130
	push	eax
	call	_EVP_MD_type
	add	esp, 4
	jmp	SHORT $LN3@pkey_dsa_s
$LN2@pkey_dsa_s:
; Line 132
	mov	eax, 64					; 00000040H
$LN3@pkey_dsa_s:
; Line 134
	push	esi
	lea	ecx, DWORD PTR _sltmp$[esp+4]
	push	ecx
	push	DWORD PTR _sig$[esp+8]
	push	DWORD PTR _tbslen$[esp+12]
	push	DWORD PTR _tbs$[esp+16]
	push	eax
	call	_DSA_sign
	add	esp, 24					; 00000018H
	pop	esi
; Line 136
	test	eax, eax
	jle	SHORT $LN1@pkey_dsa_s
; Line 138
	mov	ecx, DWORD PTR _siglen$[esp-4]
	mov	eax, DWORD PTR _sltmp$[esp-4]
	mov	DWORD PTR [ecx], eax
; Line 139
	mov	eax, 1
$LN1@pkey_dsa_s:
; Line 140
	ret	0
_pkey_dsa_sign ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dsa_cleanup
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey_dsa_cleanup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_pmeth.c
; Line 115
	mov	eax, DWORD PTR _ctx$[esp-4]
	mov	eax, DWORD PTR [eax+20]
; Line 116
	test	eax, eax
	je	SHORT $LN2@pkey_dsa_c
; Line 117
	mov	DWORD PTR _ctx$[esp-4], eax
	jmp	_CRYPTO_free
$LN2@pkey_dsa_c:
; Line 118
	ret	0
_pkey_dsa_cleanup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dsa_copy
_TEXT	SEGMENT
_dst$ = 8						; size = 4
_src$ = 12						; size = 4
_pkey_dsa_copy PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_pmeth.c
; Line 84
	push	84					; 00000054H
	push	OFFSET ??_C@_0BJ@ICNGHNPI@?4?2crypto?2dsa?2dsa_pmeth?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	mov	edx, eax
	add	esp, 12					; 0000000cH
; Line 85
	test	edx, edx
	je	SHORT $LN7@pkey_dsa_c
; Line 92
	mov	ecx, DWORD PTR _dst$[esp-4]
; Line 93
	lea	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [edx], 1024			; 00000400H
	mov	DWORD PTR [edx+4], 160			; 000000a0H
	mov	DWORD PTR [edx+8], 0
	mov	DWORD PTR [edx+20], 0
	mov	DWORD PTR [ecx+32], eax
; Line 104
	mov	eax, DWORD PTR _src$[esp-4]
; Line 92
	mov	DWORD PTR [ecx+20], edx
; Line 94
	mov	DWORD PTR [ecx+36], 2
; Line 104
	mov	ecx, DWORD PTR [eax+20]
; Line 106
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
; Line 107
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
; Line 108
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax
; Line 109
	mov	eax, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx+20], eax
; Line 110
	mov	eax, 1
; Line 111
	ret	0
$LN7@pkey_dsa_c:
; Line 103
	xor	eax, eax
; Line 111
	ret	0
_pkey_dsa_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _pkey_dsa_init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_pkey_dsa_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\dsa\dsa_pmeth.c
; Line 84
	push	84					; 00000054H
	push	OFFSET ??_C@_0BJ@ICNGHNPI@?4?2crypto?2dsa?2dsa_pmeth?4c?$AA@
	push	24					; 00000018H
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
; Line 85
	test	eax, eax
	jne	SHORT $LN2@pkey_dsa_i
; Line 97
	ret	0
$LN2@pkey_dsa_i:
; Line 92
	mov	ecx, DWORD PTR _ctx$[esp-4]
	mov	DWORD PTR [eax], 1024			; 00000400H
	mov	DWORD PTR [eax+4], 160			; 000000a0H
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+20], 0
	mov	DWORD PTR [ecx+20], eax
; Line 93
	add	eax, 12					; 0000000cH
	mov	DWORD PTR [ecx+32], eax
; Line 96
	mov	eax, 1
	mov	DWORD PTR [ecx+36], 2
; Line 97
	ret	0
_pkey_dsa_init ENDP
_TEXT	ENDS
END

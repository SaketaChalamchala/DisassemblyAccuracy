; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_07HLDGABBH@padlock?$AA@			; `string'
EXTRN	_EVP_CIPHER_set_asn1_iv:PROC
EXTRN	_EVP_CIPHER_get_asn1_iv:PROC
_BSS	SEGMENT
_padlock_use_ace DD 01H DUP (?)
_padlock_use_rng DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_07HLDGABBH@padlock?$AA@
CONST	SEGMENT
??_C@_07HLDGABBH@padlock?$AA@ DB 'padlock', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_padlock_aes_128_ecb DD 01a2H
	DD	010H
	DD	010H
	DD	010H
	DD	01H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_128_cbc DD 01a3H
	DD	010H
	DD	010H
	DD	010H
	DD	02H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_128_cfb DD 01a5H
	DD	01H
	DD	010H
	DD	010H
	DD	03H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_128_ofb DD 01a4H
	DD	01H
	DD	010H
	DD	010H
	DD	04H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_192_ecb DD 01a6H
	DD	010H
	DD	018H
	DD	010H
	DD	01H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_192_cbc DD 01a7H
	DD	010H
	DD	018H
	DD	010H
	DD	02H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_192_cfb DD 01a9H
	DD	01H
	DD	018H
	DD	010H
	DD	03H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_192_ofb DD 01a8H
	DD	01H
	DD	018H
	DD	010H
	DD	04H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_256_ecb DD 01aaH
	DD	010H
	DD	020H
	DD	010H
	DD	01H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_256_cbc DD 01abH
	DD	010H
	DD	020H
	DD	010H
	DD	02H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_256_cfb DD 01adH
	DD	01H
	DD	020H
	DD	010H
	DD	03H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
_padlock_aes_256_ofb DD 01acH
	DD	01H
	DD	020H
	DD	010H
	DD	04H
	DD	FLAT:_padlock_aes_init_key
	DD	FLAT:_padlock_aes_cipher
	DD	00H
	DD	0124H
	DD	FLAT:_EVP_CIPHER_set_asn1_iv
	DD	FLAT:_EVP_CIPHER_get_asn1_iv
	DD	00H
	DD	00H
CONST	ENDS
_DATA	SEGMENT
_padlock_cipher_nids DD 01a2H
	DD	01a3H
	DD	01a5H
	DD	01a4H
	DD	01a6H
	DD	01a7H
	DD	01a9H
	DD	01a8H
	DD	01aaH
	DD	01abH
	DD	01adH
	DD	01acH
_padlock_cipher_nids_num DD 0cH
_padlock_rand DD 00H
	DD	FLAT:_padlock_rand_bytes
	DD	00H
	DD	00H
	DD	FLAT:_padlock_rand_bytes
	DD	FLAT:_padlock_rand_status
_padlock_id DD	FLAT:??_C@_07HLDGABBH@padlock?$AA@
_padlock_aes_align_required DD 01H
_DATA	ENDS
PUBLIC	_v_check
PUBLIC	_bind_engine
PUBLIC	??_C@_03CMBJHGC@ACE?$AA@			; `string'
PUBLIC	??_C@_06KFJDPGIC@no?9ACE?$AA@			; `string'
PUBLIC	??_C@_06NNNBPPCC@no?9RNG?$AA@			; `string'
PUBLIC	??_C@_0BF@KIHBIGGJ@VIA?5PadLock?5?$CI?$CFs?0?5?$CFs?$CJ?$AA@ ; `string'
EXTRN	_CRYPTO_set_ex_data_implementation:PROC
EXTRN	_CRYPTO_set_locking_callback:PROC
EXTRN	_CRYPTO_set_add_lock_callback:PROC
EXTRN	_CRYPTO_set_dynlock_create_callback:PROC
EXTRN	_CRYPTO_set_dynlock_lock_callback:PROC
EXTRN	_CRYPTO_set_dynlock_destroy_callback:PROC
EXTRN	_CRYPTO_set_mem_functions:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_ERR_set_implementation:PROC
EXTRN	_EVP_CIPHER_CTX_key_length:PROC
EXTRN	_EVP_CIPHER_CTX_flags:PROC
EXTRN	_ENGINE_set_id:PROC
EXTRN	_ENGINE_set_name:PROC
EXTRN	_ENGINE_set_RAND:PROC
EXTRN	_ENGINE_set_init_function:PROC
EXTRN	_ENGINE_set_ciphers:PROC
EXTRN	_ENGINE_get_static_state:PROC
EXTRN	_AES_set_encrypt_key:PROC
EXTRN	_AES_set_decrypt_key:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__alloca_probe_16:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
_padlock_name DB 064H DUP (?)
_padlock_saved_context DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0BF@KIHBIGGJ@VIA?5PadLock?5?$CI?$CFs?0?5?$CFs?$CJ?$AA@
CONST	SEGMENT
??_C@_0BF@KIHBIGGJ@VIA?5PadLock?5?$CI?$CFs?0?5?$CFs?$CJ?$AA@ DB 'VIA PadL'
	DB	'ock (%s, %s)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06NNNBPPCC@no?9RNG?$AA@
CONST	SEGMENT
??_C@_06NNNBPPCC@no?9RNG?$AA@ DB 'no-RNG', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KFJDPGIC@no?9ACE?$AA@
CONST	SEGMENT
??_C@_06KFJDPGIC@no?9ACE?$AA@ DB 'no-ACE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03CMBJHGC@ACE?$AA@
CONST	SEGMENT
??_C@_03CMBJHGC@ACE?$AA@ DB 'ACE', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _padlock_rand_status
_TEXT	SEGMENT
_padlock_rand_status PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 1239
	mov	eax, 1
; Line 1240
	ret	0
_padlock_rand_status ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _padlock_rand_bytes
_TEXT	SEGMENT
_output$ = 8						; size = 4
_buf$ = 12						; size = 4
_count$ = 12						; size = 4
_padlock_rand_bytes PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 1200
	push	esi
; Line 1203
	mov	esi, DWORD PTR _count$[esp]
	push	edi
	mov	edi, DWORD PTR _output$[esp+4]
	cmp	esi, 8
	jl	SHORT $LN22@padlock_ra
	npad	1
$LL2@padlock_ra:
; Line 1204
	xor	edx, edx
	mov	ecx, edi
	call	@padlock_xstore@8
; Line 1205
	test	al, 64					; 00000040H
	je	SHORT $LN23@padlock_ra
; Line 1208
	test	eax, 31744				; 00007c00H
	jne	SHORT $LN23@padlock_ra
; Line 1210
	and	eax, 31					; 0000001fH
	je	SHORT $LN29@padlock_ra
; Line 1212
	cmp	eax, 8
	jne	SHORT $LN23@padlock_ra
; Line 1214
	add	edi, eax
; Line 1215
	sub	esi, eax
$LN29@padlock_ra:
; Line 1203
	cmp	esi, 8
	jge	SHORT $LL2@padlock_ra
$LN22@padlock_ra:
; Line 1217
	test	esi, esi
	jle	SHORT $LN5@padlock_ra
	npad	5
$LL4@padlock_ra:
; Line 1218
	mov	edx, 3
	lea	ecx, DWORD PTR _buf$[esp+4]
	call	@padlock_xstore@8
; Line 1219
	test	al, 64					; 00000040H
	je	SHORT $LN23@padlock_ra
; Line 1222
	test	eax, 31744				; 00007c00H
	jne	SHORT $LN23@padlock_ra
; Line 1224
	and	eax, 31					; 0000001fH
	je	SHORT $LN30@padlock_ra
; Line 1226
	cmp	eax, 1
	jne	SHORT $LN23@padlock_ra
; Line 1228
	mov	al, BYTE PTR _buf$[esp+4]
	mov	BYTE PTR [edi], al
	inc	edi
; Line 1229
	dec	esi
$LN30@padlock_ra:
; Line 1217
	test	esi, esi
	jg	SHORT $LL4@padlock_ra
$LN5@padlock_ra:
	pop	edi
; Line 1231
	mov	DWORD PTR _buf$[esp], 0
; Line 1233
	mov	eax, 1
	pop	esi
; Line 1234
	ret	0
$LN23@padlock_ra:
	pop	edi
; Line 1206
	xor	eax, eax
	pop	esi
; Line 1234
	ret	0
_padlock_rand_bytes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _padlock_aes_cipher_omnivorous
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_out_arg$ = 12						; size = 4
_in_arg$ = 16						; size = 4
_nbytes$ = 20						; size = 4
_padlock_aes_cipher_omnivorous PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 865
	push	esi
	push	edi
; Line 869
	mov	edi, DWORD PTR _ctx$[esp+4]
	mov	esi, DWORD PTR [edi+96]
	neg	esi
	and	esi, 15					; 0000000fH
	add	esi, DWORD PTR [edi+96]
; Line 870
	mov	ecx, esi
	call	@padlock_verify_context@4
; Line 872
	push	edi
	call	_EVP_CIPHER_CTX_flags
	and	eax, 983047				; 000f0007H
	add	esp, 4
	dec	eax
	cmp	eax, 3
	ja	$LN8@padlock_ae
	jmp	DWORD PTR $LN22@padlock_ae[eax*4]
$LN4@padlock_ae:
; Line 874
	push	DWORD PTR _in_arg$[esp+4]
	mov	ecx, DWORD PTR _nbytes$[esp+8]
	mov	edx, esi
	push	DWORD PTR _out_arg$[esp+8]
	shr	ecx, 4
	call	@padlock_xcrypt_ecb@16
	xorps	xmm0, xmm0
; Line 903
	mov	eax, 1
	pop	edi
	movups	XMMWORD PTR [esi], xmm0
	pop	esi
; Line 904
	ret	0
$LN5@padlock_ae:
; Line 879
	push	DWORD PTR _in_arg$[esp+4]
	movups	xmm0, XMMWORD PTR [edi+32]
	mov	ecx, DWORD PTR _nbytes$[esp+8]
	mov	edx, esi
	push	DWORD PTR _out_arg$[esp+8]
	shr	ecx, 4
	movups	XMMWORD PTR [esi], xmm0
	call	@padlock_xcrypt_cbc@16
; Line 881
	movups	xmm0, XMMWORD PTR [eax]
; Line 903
	mov	eax, 1
	movups	XMMWORD PTR [edi+32], xmm0
	pop	edi
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [esi], xmm0
	pop	esi
; Line 904
	ret	0
$LN6@padlock_ae:
; Line 886
	push	DWORD PTR _in_arg$[esp+4]
	movups	xmm0, XMMWORD PTR [edi+32]
	mov	ecx, DWORD PTR _nbytes$[esp+8]
	mov	edx, esi
	push	DWORD PTR _out_arg$[esp+8]
	shr	ecx, 4
	movups	XMMWORD PTR [esi], xmm0
	call	@padlock_xcrypt_cfb@16
; Line 888
	movups	xmm0, XMMWORD PTR [eax]
; Line 903
	mov	eax, 1
	movups	XMMWORD PTR [edi+32], xmm0
	pop	edi
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [esi], xmm0
	pop	esi
; Line 904
	ret	0
$LN7@padlock_ae:
; Line 893
	push	DWORD PTR _in_arg$[esp+4]
	movups	xmm0, XMMWORD PTR [edi+32]
	mov	ecx, DWORD PTR _nbytes$[esp+8]
	mov	edx, esi
	push	DWORD PTR _out_arg$[esp+8]
	shr	ecx, 4
	movups	XMMWORD PTR [esi], xmm0
	call	@padlock_xcrypt_ofb@16
; Line 894
	movups	xmm0, XMMWORD PTR [esi]
; Line 903
	mov	eax, 1
	movups	XMMWORD PTR [edi+32], xmm0
	pop	edi
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [esi], xmm0
	pop	esi
; Line 904
	ret	0
$LN8@padlock_ae:
	pop	edi
; Line 898
	xor	eax, eax
	pop	esi
; Line 904
	ret	0
	npad	2
$LN22@padlock_ae:
	DD	$LN4@padlock_ae
	DD	$LN5@padlock_ae
	DD	$LN6@padlock_ae
	DD	$LN7@padlock_ae
_padlock_aes_cipher_omnivorous ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _padlock_aes_cipher
_TEXT	SEGMENT
_n$1$ = -32						; size = 4
_out_misaligned$1$ = -28				; size = 4
_iv$2$ = -24						; size = 4
_iv$1$ = -24						; size = 4
_ivp$1$ = -20						; size = 4
_inp_misaligned$1$ = -20				; size = 4
_chunk$1$ = -20						; size = 4
_cdata$1$ = -16						; size = 4
_p$1$ = -12						; size = 4
_chunk$3$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_out_arg$ = 12						; size = 4
_in_arg$ = 16						; size = 4
_nbytes$ = 20						; size = 4
_padlock_aes_cipher PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 920
	push	ebp
	mov	ebp, esp
	mov	eax, 32					; 00000020H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 926
	xor	ecx, ecx
	mov	DWORD PTR _n$1$[ebp], ecx
; Line 931
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR [ecx+80]
	mov	DWORD PTR _chunk$1$[ebp], eax
	test	eax, eax
	je	$LN238@padlock_ae
; Line 934
	push	ecx
	call	_EVP_CIPHER_CTX_flags
	and	eax, 983047				; 000f0007H
	add	esp, 4
	sub	eax, 3
	je	SHORT $LN33@padlock_ae
	sub	eax, 1
	jne	$LN238@padlock_ae
; Line 953
	mov	ecx, DWORD PTR _chunk$1$[ebp]
	cmp	ecx, 16					; 00000010H
	jae	$LN75@padlock_ae
; Line 954
	mov	ebx, DWORD PTR _nbytes$[ebp]
	mov	edi, DWORD PTR _in_arg$[ebp]
	mov	esi, DWORD PTR _out_arg$[ebp]
	mov	edx, DWORD PTR _ctx$[ebp]
$LL8@padlock_ae:
; Line 956
	test	ebx, ebx
	je	SHORT $LN9@padlock_ae
; Line 957
	mov	al, BYTE PTR [edx+ecx+32]
; Line 958
	dec	ebx
	xor	al, BYTE PTR [edi]
	inc	ecx
	mov	BYTE PTR [esi], al
	inc	edi
	inc	esi
	cmp	ecx, 16					; 00000010H
	jb	SHORT $LL8@padlock_ae
$LN9@padlock_ae:
; Line 961
	and	ecx, 15					; 0000000fH
	mov	DWORD PTR [edx+80], ecx
	mov	ecx, edx
	jmp	SHORT $LN2@padlock_ae
$LN33@padlock_ae:
; Line 936
	mov	edx, DWORD PTR _chunk$1$[ebp]
	cmp	edx, 16					; 00000010H
	jae	$LN75@padlock_ae
; Line 939
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	ebx, DWORD PTR _nbytes$[ebp]
	mov	edi, DWORD PTR _in_arg$[ebp]
	mov	esi, DWORD PTR _out_arg$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN229@padlock_ae
$LL4@padlock_ae:
; Line 940
	test	ebx, ebx
	je	SHORT $LN7@padlock_ae
; Line 941
	mov	al, BYTE PTR [edi]
; Line 942
	dec	ebx
	xor	al, BYTE PTR [ecx+edx+32]
	inc	edi
	mov	BYTE PTR [esi], al
	inc	esi
	mov	BYTE PTR [ecx+edx+32], al
	inc	edx
	cmp	edx, 16					; 00000010H
	jb	SHORT $LL4@padlock_ae
; Line 950
	and	edx, 15					; 0000000fH
	mov	DWORD PTR [ecx+80], edx
	jmp	SHORT $LN2@padlock_ae
$LN229@padlock_ae:
	mov	eax, ecx
$LL6@padlock_ae:
; Line 944
	test	ebx, ebx
	je	SHORT $LN247@padlock_ae
; Line 946
	mov	al, BYTE PTR [eax+edx+32]
; Line 947
	dec	ebx
	mov	cl, BYTE PTR [edi]
	inc	edi
	xor	al, cl
	mov	BYTE PTR [esi], al
	inc	esi
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	BYTE PTR [eax+edx+32], cl
	inc	edx
	cmp	edx, 16					; 00000010H
	jb	SHORT $LL6@padlock_ae
$LN247@padlock_ae:
	mov	ecx, DWORD PTR _ctx$[ebp]
$LN7@padlock_ae:
; Line 950
	and	edx, 15					; 0000000fH
	mov	DWORD PTR [ecx+80], edx
	jmp	SHORT $LN2@padlock_ae
$LN238@padlock_ae:
	mov	ebx, DWORD PTR _nbytes$[ebp]
	mov	edi, DWORD PTR _in_arg$[ebp]
	mov	esi, DWORD PTR _out_arg$[ebp]
	mov	ecx, DWORD PTR _ctx$[ebp]
$LN2@padlock_ae:
; Line 966
	test	ebx, ebx
	je	$LN250@padlock_ae
; Line 990
	cmp	DWORD PTR _padlock_aes_align_required, 0
	jne	SHORT $LN40@padlock_ae
	test	bl, 15					; 0000000fH
	jne	SHORT $LN40@padlock_ae
; Line 991
	push	ebx
	push	edi
	push	esi
	push	ecx
	call	_padlock_aes_cipher_omnivorous
	add	esp, 16					; 00000010H
; Line 1184
	lea	esp, DWORD PTR [ebp-44]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN40@padlock_ae:
; Line 994
	mov	edx, esi
	mov	ecx, edi
	and	edx, 15					; 0000000fH
	and	ecx, 15					; 0000000fH
; Line 1001
	mov	eax, edx
	mov	DWORD PTR _inp_misaligned$1$[ebp], ecx
	or	eax, ecx
	mov	DWORD PTR _out_misaligned$1$[ebp], edx
; Line 1003
	jne	SHORT $LN41@padlock_ae
	test	bl, 15					; 0000000fH
	jne	SHORT $LN41@padlock_ae
; Line 1004
	push	ebx
	push	edi
	push	esi
	push	DWORD PTR _ctx$[ebp]
	call	_padlock_aes_cipher_omnivorous
	add	esp, 16					; 00000010H
; Line 1184
	lea	esp, DWORD PTR [ebp-44]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN41@padlock_ae:
; Line 1008
	mov	eax, ebx
; Line 1009
	mov	ecx, 512				; 00000200H
	and	eax, 511				; 000001ffH
	cmove	eax, ecx
	mov	DWORD PTR _chunk$3$[ebp], eax
; Line 1012
	test	edx, edx
	je	SHORT $LN43@padlock_ae
; Line 1014
	cmp	eax, ebx
	mov	ecx, ebx
	mov	eax, 512				; 00000200H
	cmovb	ecx, eax
	mov	DWORD PTR _n$1$[ebp], ecx
; Line 1015
	lea	eax, DWORD PTR [ecx+16]
	call	__alloca_probe_16
	mov	ecx, esp
; Line 1016
	mov	eax, ecx
	neg	eax
	and	eax, 15					; 0000000fH
	add	ecx, eax
	mov	DWORD PTR _p$1$[ebp], ecx
; Line 1017
	jmp	SHORT $LN44@padlock_ae
$LN43@padlock_ae:
; Line 1018
	mov	DWORD PTR _p$1$[ebp], esi
$LN44@padlock_ae:
; Line 1020
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [edx+96]
	neg	ecx
	and	ecx, 15					; 0000000fH
	add	ecx, DWORD PTR [edx+96]
	mov	DWORD PTR _cdata$1$[ebp], ecx
; Line 1021
	call	@padlock_verify_context@4
; Line 1023
	push	edx
	call	_EVP_CIPHER_CTX_flags
	and	eax, 983047				; 000f0007H
	add	esp, 4
	dec	eax
	cmp	eax, 3
	ja	$LN75@padlock_ae
	jmp	DWORD PTR $LN252@padlock_ae[eax*4]
$LN239@padlock_ae:
	mov	eax, DWORD PTR _chunk$3$[ebp]
$LL14@padlock_ae:
; Line 1026
	cmp	DWORD PTR _inp_misaligned$1$[ebp], 0
	je	SHORT $LN46@padlock_ae
; Line 1027
	and	eax, -4					; fffffffcH
	push	eax
	push	edi
	push	DWORD PTR _p$1$[ebp]
	call	_memcpy
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _chunk$3$[ebp]
	jmp	SHORT $LN47@padlock_ae
$LN46@padlock_ae:
; Line 1029
	mov	ecx, edi
$LN47@padlock_ae:
; Line 1032
	mov	edx, DWORD PTR _cdata$1$[ebp]
	add	edi, eax
	push	ecx
	push	DWORD PTR _p$1$[ebp]
	mov	ecx, eax
	shr	ecx, 4
	call	@padlock_xcrypt_ecb@16
; Line 1034
	cmp	DWORD PTR _out_misaligned$1$[ebp], 0
; Line 1035
	mov	eax, DWORD PTR _chunk$3$[ebp]
	je	SHORT $LN48@padlock_ae
	and	eax, -4					; fffffffcH
	push	eax
	push	DWORD PTR _p$1$[ebp]
	push	esi
	call	_memcpy
	mov	esi, eax
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _chunk$3$[ebp]
	add	esi, eax
	jmp	SHORT $LN49@padlock_ae
$LN48@padlock_ae:
; Line 1037
	add	esi, eax
	mov	DWORD PTR _p$1$[ebp], esi
$LN49@padlock_ae:
; Line 1039
	sub	ebx, eax
; Line 1040
	mov	eax, 512				; 00000200H
	mov	DWORD PTR _chunk$3$[ebp], eax
; Line 1041
	jne	SHORT $LL14@padlock_ae
; Line 1042
	mov	ecx, DWORD PTR _cdata$1$[ebp]
	jmp	$LN10@padlock_ae
$LN50@padlock_ae:
; Line 1045
	mov	eax, DWORD PTR _ctx$[ebp]
	movups	xmm0, XMMWORD PTR [eax+32]
	mov	eax, DWORD PTR _cdata$1$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	mov	eax, DWORD PTR _chunk$3$[ebp]
$cbc_shortcut$253:
; Line 1052
	cmp	DWORD PTR _inp_misaligned$1$[ebp], 0
	je	SHORT $LN52@padlock_ae
; Line 1053
	and	eax, -4					; fffffffcH
	push	eax
	push	edi
	push	DWORD PTR _p$1$[ebp]
	call	_memcpy
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _chunk$3$[ebp]
	jmp	SHORT $LN53@padlock_ae
$LN52@padlock_ae:
; Line 1055
	mov	ecx, edi
$LN53@padlock_ae:
; Line 1058
	mov	edx, DWORD PTR _cdata$1$[ebp]
	add	edi, eax
	push	ecx
	push	DWORD PTR _p$1$[ebp]
	mov	ecx, eax
	shr	ecx, 4
	call	@padlock_xcrypt_cbc@16
; Line 1060
	cmp	DWORD PTR _out_misaligned$1$[ebp], 0
	mov	ecx, eax
	mov	DWORD PTR _iv$1$[ebp], ecx
	je	SHORT $LN54@padlock_ae
; Line 1061
	mov	ecx, DWORD PTR _chunk$3$[ebp]
	and	ecx, -4					; fffffffcH
	push	ecx
	push	DWORD PTR _p$1$[ebp]
	push	esi
	call	_memcpy
	mov	ecx, DWORD PTR _iv$1$[ebp]
	mov	esi, eax
	mov	eax, DWORD PTR _chunk$3$[ebp]
	add	esp, 12					; 0000000cH
	add	esi, eax
	jmp	SHORT $LN15@padlock_ae
$LN54@padlock_ae:
; Line 1063
	mov	eax, DWORD PTR _chunk$3$[ebp]
	add	esi, eax
	mov	DWORD PTR _p$1$[ebp], esi
$LN15@padlock_ae:
; Line 1065
	sub	ebx, eax
	je	SHORT $LN118@padlock_ae
; Line 1048
	mov	eax, DWORD PTR _cdata$1$[ebp]
	cmp	ecx, eax
	je	SHORT $LN51@padlock_ae
; Line 1049
	movups	xmm0, XMMWORD PTR [ecx]
	movups	XMMWORD PTR [eax], xmm0
$LN51@padlock_ae:
; Line 1050
	mov	eax, 512				; 00000200H
	mov	DWORD PTR _chunk$3$[ebp], eax
	jmp	SHORT $cbc_shortcut$253
$LN118@padlock_ae:
; Line 1066
	movups	xmm0, XMMWORD PTR [ecx]
; Line 1067
	mov	ecx, DWORD PTR _cdata$1$[ebp]
	jmp	$LN249@padlock_ae
$LN56@padlock_ae:
; Line 1070
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR _cdata$1$[ebp]
	mov	edx, ecx
	mov	DWORD PTR _iv$2$[ebp], edx
	movups	xmm0, XMMWORD PTR [eax+32]
; Line 1071
	mov	eax, DWORD PTR _chunk$3$[ebp]
	and	eax, -16				; fffffff0H
	movups	XMMWORD PTR [ecx], xmm0
	mov	DWORD PTR _chunk$3$[ebp], eax
; Line 1072
	je	$cfb_skiploop$254
	npad	4
$cfb_shortcut$255:
; Line 1081
	cmp	DWORD PTR _inp_misaligned$1$[ebp], 0
	je	SHORT $LN60@padlock_ae
; Line 1082
	and	eax, -4					; fffffffcH
	push	eax
	push	edi
	push	DWORD PTR _p$1$[ebp]
	call	_memcpy
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _chunk$3$[ebp]
	jmp	SHORT $LN61@padlock_ae
$LN60@padlock_ae:
; Line 1084
	mov	ecx, edi
$LN61@padlock_ae:
; Line 1087
	mov	edx, DWORD PTR _cdata$1$[ebp]
	add	edi, eax
	push	ecx
	push	DWORD PTR _p$1$[ebp]
	mov	ecx, eax
	shr	ecx, 4
	call	@padlock_xcrypt_cfb@16
; Line 1089
	cmp	DWORD PTR _out_misaligned$1$[ebp], 0
	mov	edx, eax
	mov	DWORD PTR _iv$2$[ebp], edx
	je	SHORT $LN62@padlock_ae
; Line 1090
	mov	ecx, DWORD PTR _chunk$3$[ebp]
	and	ecx, -4					; fffffffcH
	push	ecx
	push	DWORD PTR _p$1$[ebp]
	push	esi
	call	_memcpy
	mov	edx, DWORD PTR _iv$2$[ebp]
	mov	esi, eax
	mov	eax, DWORD PTR _chunk$3$[ebp]
	add	esp, 12					; 0000000cH
	add	esi, eax
	jmp	SHORT $LN63@padlock_ae
$LN62@padlock_ae:
; Line 1092
	mov	eax, DWORD PTR _chunk$3$[ebp]
	add	esi, eax
	mov	DWORD PTR _p$1$[ebp], esi
$LN63@padlock_ae:
; Line 1094
	mov	ecx, DWORD PTR _cdata$1$[ebp]
	sub	ebx, eax
; Line 1095
	cmp	ebx, 16					; 00000010H
	jb	SHORT $cfb_skiploop$254
; Line 1077
	cmp	edx, ecx
	je	SHORT $LN59@padlock_ae
; Line 1078
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [ecx], xmm0
$LN59@padlock_ae:
; Line 1079
	mov	eax, 512				; 00000200H
	mov	DWORD PTR _chunk$3$[ebp], eax
	jmp	$cfb_shortcut$255
$cfb_skiploop$254:
; Line 1098
	test	ebx, ebx
	je	$LN24@padlock_ae
; Line 1099
	mov	DWORD PTR _ivp$1$[ebp], ecx
; Line 1101
	cmp	edx, ecx
	je	SHORT $LN65@padlock_ae
; Line 1102
	movups	xmm0, XMMWORD PTR [edx]
; Line 1103
	mov	DWORD PTR _iv$2$[ebp], ecx
	movups	XMMWORD PTR [ecx], xmm0
$LN65@padlock_ae:
; Line 1105
	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [eax+80], ebx
; Line 1106
	mov	eax, DWORD PTR [ecx+16]
	test	eax, 512				; 00000200H
	je	SHORT $LN66@padlock_ae
; Line 1107
	and	eax, -513				; fffffdffH
	mov	DWORD PTR [ecx+16], eax
; Line 1108
	call	@padlock_reload_key@0
; Line 1109
	push	ecx
	push	ecx
	mov	edx, ecx
	mov	ecx, 1
	call	@padlock_xcrypt_ecb@16
; Line 1110
	mov	eax, DWORD PTR _cdata$1$[ebp]
	or	DWORD PTR [eax+16], 512			; 00000200H
; Line 1111
	call	@padlock_reload_key@0
	mov	edx, DWORD PTR _ivp$1$[ebp]
; Line 1112
	sub	edi, eax
	sub	esi, eax
	npad	2
$LL21@padlock_ae:
; Line 1113
	mov	cl, BYTE PTR [edi+edx]
; Line 1115
	lea	edx, DWORD PTR [edx+1]
	mov	al, BYTE PTR [edx-1]
	xor	al, cl
	mov	BYTE PTR [esi+edx-1], al
	mov	BYTE PTR [edx-1], cl
	sub	ebx, 1
	jne	SHORT $LL21@padlock_ae
; Line 1128
	mov	eax, DWORD PTR _iv$2$[ebp]
; Line 1129
	mov	ecx, DWORD PTR _cdata$1$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	jmp	$LN249@padlock_ae
$LN66@padlock_ae:
; Line 1118
	call	@padlock_reload_key@0
; Line 1119
	push	ecx
	push	ecx
	mov	edx, ecx
	mov	ecx, 1
	call	@padlock_xcrypt_ecb@16
; Line 1120
	call	@padlock_reload_key@0
	mov	ecx, DWORD PTR _ivp$1$[ebp]
; Line 1121
	sub	esi, edi
$LL23@padlock_ae:
; Line 1122
	mov	al, BYTE PTR [edi]
	lea	edi, DWORD PTR [edi+1]
	xor	al, BYTE PTR [ecx]
; Line 1123
	lea	ecx, DWORD PTR [ecx+1]
	mov	BYTE PTR [esi+edi-1], al
	mov	BYTE PTR [ecx-1], al
	sub	ebx, 1
	jne	SHORT $LL23@padlock_ae
$LN24@padlock_ae:
; Line 1128
	mov	eax, DWORD PTR _iv$2$[ebp]
; Line 1129
	mov	ecx, DWORD PTR _cdata$1$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	jmp	$LN249@padlock_ae
$LN68@padlock_ae:
; Line 1132
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR _cdata$1$[ebp]
; Line 1133
	mov	eax, DWORD PTR _chunk$3$[ebp]
	and	eax, -16				; fffffff0H
	movups	xmm0, XMMWORD PTR [edx+32]
	mov	DWORD PTR _chunk$3$[ebp], eax
	movups	XMMWORD PTR [ecx], xmm0
; Line 1134
	je	SHORT $LN26@padlock_ae
	npad	2
$LL27@padlock_ae:
; Line 1136
	cmp	DWORD PTR _inp_misaligned$1$[ebp], 0
	je	SHORT $LN70@padlock_ae
; Line 1137
	and	eax, -4					; fffffffcH
	push	eax
	push	edi
	push	DWORD PTR _p$1$[ebp]
	call	_memcpy
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _chunk$3$[ebp]
	jmp	SHORT $LN71@padlock_ae
$LN70@padlock_ae:
; Line 1139
	mov	ecx, edi
$LN71@padlock_ae:
; Line 1142
	mov	edx, DWORD PTR _cdata$1$[ebp]
	add	edi, eax
	push	ecx
	push	DWORD PTR _p$1$[ebp]
	mov	ecx, eax
	shr	ecx, 4
	call	@padlock_xcrypt_ofb@16
; Line 1144
	cmp	DWORD PTR _out_misaligned$1$[ebp], 0
; Line 1145
	mov	eax, DWORD PTR _chunk$3$[ebp]
	je	SHORT $LN72@padlock_ae
	and	eax, -4					; fffffffcH
	push	eax
	push	DWORD PTR _p$1$[ebp]
	push	esi
	call	_memcpy
	mov	esi, eax
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _chunk$3$[ebp]
	add	esi, eax
	jmp	SHORT $LN73@padlock_ae
$LN72@padlock_ae:
; Line 1147
	add	esi, eax
	mov	DWORD PTR _p$1$[ebp], esi
$LN73@padlock_ae:
; Line 1149
	sub	ebx, eax
; Line 1150
	mov	eax, 512				; 00000200H
	mov	DWORD PTR _chunk$3$[ebp], eax
; Line 1151
	cmp	ebx, 16					; 00000010H
	jae	SHORT $LL27@padlock_ae
	mov	ecx, DWORD PTR _cdata$1$[ebp]
	mov	edx, DWORD PTR _ctx$[ebp]
$LN26@padlock_ae:
; Line 1153
	test	ebx, ebx
	je	SHORT $LN29@padlock_ae
; Line 1156
	mov	DWORD PTR [edx+80], ebx
; Line 1157
	call	@padlock_reload_key@0
; Line 1158
	push	ecx
	push	ecx
	mov	edx, ecx
	mov	ecx, 1
	call	@padlock_xcrypt_ecb@16
; Line 1159
	call	@padlock_reload_key@0
; Line 1160
	mov	ecx, DWORD PTR _cdata$1$[ebp]
	mov	edx, ecx
	sub	edx, esi
	sub	edi, esi
$LL28@padlock_ae:
; Line 1161
	mov	al, BYTE PTR [edi+esi]
	lea	esi, DWORD PTR [esi+1]
	xor	al, BYTE PTR [edx+esi-1]
	mov	BYTE PTR [esi-1], al
; Line 1162
	sub	ebx, 1
	jne	SHORT $LL28@padlock_ae
$LN29@padlock_ae:
; Line 1166
	movups	xmm0, XMMWORD PTR [ecx]
$LN249@padlock_ae:
	mov	eax, DWORD PTR _ctx$[ebp]
	movups	XMMWORD PTR [eax+32], xmm0
$LN10@padlock_ae:
; Line 1174
	cmp	DWORD PTR _out_misaligned$1$[ebp], 0
	je	SHORT $LN126@padlock_ae
; Line 1176
	mov	edx, DWORD PTR _n$1$[ebp]
	shr	edx, 2
; Line 1177
	test	edx, edx
	je	SHORT $LN126@padlock_ae
	mov	eax, DWORD PTR _p$1$[ebp]
	npad	11
$LL30@padlock_ae:
; Line 1178
	mov	DWORD PTR [eax], 0
	lea	eax, DWORD PTR [eax+4]
	sub	edx, 1
	jne	SHORT $LL30@padlock_ae
$LN126@padlock_ae:
	xorps	xmm0, xmm0
; Line 1181
	movups	XMMWORD PTR [ecx], xmm0
$LN250@padlock_ae:
; Line 1183
	mov	eax, 1
; Line 1184
	lea	esp, DWORD PTR [ebp-44]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN75@padlock_ae:
; Line 1170
	xor	eax, eax
; Line 1184
	lea	esp, DWORD PTR [ebp-44]
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN252@padlock_ae:
	DD	$LN239@padlock_ae
	DD	$LN50@padlock_ae
	DD	$LN56@padlock_ae
	DD	$LN68@padlock_ae
_padlock_aes_cipher ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _padlock_aes_init_key
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_key$ = 12						; size = 4
_iv$ = 16						; size = 4
_enc$ = 20						; size = 4
_padlock_aes_init_key PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 790
	push	ebp
	push	edi
; Line 792
	mov	edi, DWORD PTR _ctx$[esp+4]
	push	edi
	call	_EVP_CIPHER_CTX_key_length
	mov	ebp, eax
	add	esp, 4
	shl	ebp, 3
; Line 794
	cmp	DWORD PTR _key$[esp+4], 0
	jne	SHORT $LN4@padlock_ae
; Line 795
	pop	edi
	xor	eax, eax
	pop	ebp
; Line 854
	ret	0
$LN4@padlock_ae:
	push	esi
; Line 797
	mov	esi, DWORD PTR [edi+96]
	neg	esi
; Line 798
	push	276					; 00000114H
	and	esi, 15					; 0000000fH
	add	esi, DWORD PTR [edi+96]
	push	0
	push	esi
	call	_memset
; Line 801
	push	edi
	call	_EVP_CIPHER_CTX_flags
	and	eax, 983047				; 000f0007H
	add	esp, 16					; 00000010H
	cmp	eax, 4
	jne	SHORT $LN5@padlock_ae
; Line 802
	and	DWORD PTR [esi+16], -513		; fffffdffH
	jmp	SHORT $LN6@padlock_ae
$LN5@padlock_ae:
; Line 804
	xor	eax, eax
	cmp	DWORD PTR [edi+8], eax
	sete	al
	shl	eax, 9
	xor	eax, DWORD PTR [esi+16]
	and	eax, 512				; 00000200H
	xor	DWORD PTR [esi+16], eax
$LN6@padlock_ae:
; Line 805
	lea	eax, DWORD PTR [ebp-128]
	cdq
	and	edx, 31					; 0000001fH
	push	ebx
	lea	ebx, DWORD PTR [edx+eax]
	sar	ebx, 5
; Line 806
	lea	eax, DWORD PTR [ebp-128]
	cdq
	sub	ebx, 6
	xor	ebx, DWORD PTR [esi+16]
	and	edx, 63					; 0000003fH
	add	eax, edx
	and	ebx, 15					; 0000000fH
	xor	ebx, DWORD PTR [esi+16]
	sar	eax, 6
	shl	eax, 10					; 0000000aH
	xor	eax, ebx
	and	eax, 3072				; 00000c00H
	xor	ebx, eax
; Line 808
	mov	eax, ebp
	mov	DWORD PTR [esi+16], ebx
	sub	eax, 128				; 00000080H
	je	$LN7@padlock_ae
	sub	eax, 64					; 00000040H
	je	SHORT $LN8@padlock_ae
	sub	eax, 64					; 00000040H
	je	SHORT $LN8@padlock_ae
; Line 843
	pop	ebx
	pop	esi
	pop	edi
	xor	eax, eax
	pop	ebp
; Line 854
	ret	0
$LN8@padlock_ae:
; Line 828
	push	edi
	call	_EVP_CIPHER_CTX_flags
	and	eax, 983047				; 000f0007H
	add	esp, 4
	cmp	eax, 3
	je	SHORT $LN11@padlock_ae
	push	edi
	call	_EVP_CIPHER_CTX_flags
	and	eax, 983047				; 000f0007H
	add	esp, 4
	cmp	eax, 4
	je	SHORT $LN11@padlock_ae
	cmp	DWORD PTR _enc$[esp+12], 0
	jne	SHORT $LN11@padlock_ae
; Line 831
	lea	eax, DWORD PTR [esi+32]
	push	eax
	push	ebp
	push	DWORD PTR _key$[esp+20]
	call	_AES_set_decrypt_key
; Line 838
	or	DWORD PTR [esi+16], 128			; 00000080H
	add	esp, 12					; 0000000cH
; Line 851
	call	@padlock_reload_key@0
	pop	ebx
	pop	esi
	pop	edi
; Line 853
	mov	eax, 1
	pop	ebp
; Line 854
	ret	0
$LN11@padlock_ae:
; Line 829
	lea	eax, DWORD PTR [esi+32]
	push	eax
	push	ebp
	push	DWORD PTR _key$[esp+20]
	call	_AES_set_encrypt_key
; Line 838
	or	DWORD PTR [esi+16], 128			; 00000080H
	add	esp, 12					; 0000000cH
; Line 851
	call	@padlock_reload_key@0
	pop	ebx
	pop	esi
	pop	edi
; Line 853
	mov	eax, 1
	pop	ebp
; Line 854
	ret	0
$LN7@padlock_ae:
; Line 813
	mov	eax, DWORD PTR _key$[esp+12]
; Line 814
	and	ebx, -129				; ffffff7fH
	movups	xmm0, XMMWORD PTR [eax]
	mov	DWORD PTR [esi+16], ebx
	movups	XMMWORD PTR [esi+32], xmm0
; Line 851
	call	@padlock_reload_key@0
	pop	ebx
	pop	esi
	pop	edi
; Line 853
	mov	eax, 1
	pop	ebp
; Line 854
	ret	0
_padlock_aes_init_key ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @padlock_verify_context@4
_TEXT	SEGMENT
@padlock_verify_context@4 PROC				; COMDAT
; _cdata$ = ecx
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 548
	pushfd
; Line 549
	bt	DWORD PTR [esp], 30			; 0000001eH
; Line 550
	jae	SHORT $skip$4
; Line 551
	cmp	ecx, DWORD PTR _padlock_saved_context
; Line 552
	je	SHORT $skip$4
; Line 553
	popfd
; Line 554
	sub	esp, 4
$skip$4:
; Line 555
	add	esp, 4
; Line 556
	mov	DWORD PTR _padlock_saved_context, ecx
; Line 558
	ret	0
@padlock_verify_context@4 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @padlock_reload_key@0
_TEXT	SEGMENT
@padlock_reload_key@0 PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 541
	pushfd
; Line 542
	popfd
; Line 543
	ret	0
@padlock_reload_key@0 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @padlock_xstore@8
_TEXT	SEGMENT
@padlock_xstore@8 PROC					; COMDAT
; _outp$ = ecx
; _code$ = edx
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 534
	push	ebx
	push	esi
	push	edi
; Line 535
	mov	edi, ecx
; Line 536
	DB	15					; 0000000fH
	DB	-89					; ffffffa7H
	DB	-64					; ffffffc0H
; Line 537
	pop	edi
	pop	esi
	pop	ebx
	ret	0
@padlock_xstore@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @padlock_xcrypt_ofb@16
_TEXT	SEGMENT
_outp$ = 8						; size = 4
_inp$ = 12						; size = 4
@padlock_xcrypt_ofb@16 PROC				; COMDAT
; _cnt$ = ecx
; _cdata$ = edx
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 531
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	eax, edx
	lea	edx, DWORD PTR [eax+16]
	lea	ebx, DWORD PTR [eax+32]
	mov	edi, DWORD PTR _outp$[ebp]
	mov	esi, DWORD PTR _inp$[ebp]
	DB	-13					; fffffff3H
	DB	15					; 0000000fH
	DB	-89					; ffffffa7H
	DB	-24					; ffffffe8H
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret	8
@padlock_xcrypt_ofb@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @padlock_xcrypt_cfb@16
_TEXT	SEGMENT
_outp$ = 8						; size = 4
_inp$ = 12						; size = 4
@padlock_xcrypt_cfb@16 PROC				; COMDAT
; _cnt$ = ecx
; _cdata$ = edx
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 530
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	eax, edx
	lea	edx, DWORD PTR [eax+16]
	lea	ebx, DWORD PTR [eax+32]
	mov	edi, DWORD PTR _outp$[ebp]
	mov	esi, DWORD PTR _inp$[ebp]
	DB	-13					; fffffff3H
	DB	15					; 0000000fH
	DB	-89					; ffffffa7H
	DB	-32					; ffffffe0H
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret	8
@padlock_xcrypt_cfb@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @padlock_xcrypt_cbc@16
_TEXT	SEGMENT
_outp$ = 8						; size = 4
_inp$ = 12						; size = 4
@padlock_xcrypt_cbc@16 PROC				; COMDAT
; _cnt$ = ecx
; _cdata$ = edx
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 529
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	eax, edx
	lea	edx, DWORD PTR [eax+16]
	lea	ebx, DWORD PTR [eax+32]
	mov	edi, DWORD PTR _outp$[ebp]
	mov	esi, DWORD PTR _inp$[ebp]
	DB	-13					; fffffff3H
	DB	15					; 0000000fH
	DB	-89					; ffffffa7H
	DB	-48					; ffffffd0H
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret	8
@padlock_xcrypt_cbc@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @padlock_xcrypt_ecb@16
_TEXT	SEGMENT
_outp$ = 8						; size = 4
_inp$ = 12						; size = 4
@padlock_xcrypt_ecb@16 PROC				; COMDAT
; _cnt$ = ecx
; _cdata$ = edx
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 528
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	eax, edx
	lea	edx, DWORD PTR [eax+16]
	lea	ebx, DWORD PTR [eax+32]
	mov	edi, DWORD PTR _outp$[ebp]
	mov	esi, DWORD PTR _inp$[ebp]
	DB	-13					; fffffff3H
	DB	15					; 0000000fH
	DB	-89					; ffffffa7H
	DB	-56					; ffffffc8H
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret	8
@padlock_xcrypt_ecb@16 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bind_engine
_TEXT	SEGMENT
_e$ = 8							; size = 4
_id$ = 12						; size = 4
_fns$ = 16						; size = 4
_bind_engine PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 251
	push	esi
	call	_ENGINE_get_static_state
	mov	esi, DWORD PTR _fns$[esp]
	cmp	eax, DWORD PTR [esi]
	je	SHORT $skip_cbs$19
	push	DWORD PTR [esi+20]
	push	DWORD PTR [esi+16]
	push	DWORD PTR [esi+12]
	call	_CRYPTO_set_mem_functions
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@bind_engin
$LN17@bind_engin:
	xor	eax, eax
	pop	esi
	ret	0
$LN3@bind_engin:
	push	DWORD PTR [esi+24]
	call	_CRYPTO_set_locking_callback
	push	DWORD PTR [esi+28]
	call	_CRYPTO_set_add_lock_callback
	push	DWORD PTR [esi+32]
	call	_CRYPTO_set_dynlock_create_callback
	push	DWORD PTR [esi+36]
	call	_CRYPTO_set_dynlock_lock_callback
	push	DWORD PTR [esi+40]
	call	_CRYPTO_set_dynlock_destroy_callback
	push	DWORD PTR [esi+8]
	call	_CRYPTO_set_ex_data_implementation
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN17@bind_engin
	push	DWORD PTR [esi+4]
	call	_ERR_set_implementation
	add	esp, 4
	test	eax, eax
	je	SHORT $LN17@bind_engin
$skip_cbs$19:
; Line 239
	mov	eax, DWORD PTR _id$[esp]
	test	eax, eax
	je	SHORT $LN9@bind_engin
	mov	ecx, DWORD PTR _padlock_id
	npad	5
$LL13@bind_engin:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN14@bind_engin
	test	dl, dl
	je	SHORT $LN15@bind_engin
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN14@bind_engin
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL13@bind_engin
$LN15@bind_engin:
	xor	eax, eax
	jmp	SHORT $LN16@bind_engin
$LN14@bind_engin:
	sbb	eax, eax
	or	eax, 1
$LN16@bind_engin:
	test	eax, eax
	jne	$LN17@bind_engin
$LN9@bind_engin:
; Line 243
	push	DWORD PTR _e$[esp]
	call	_padlock_bind_helper
	add	esp, 4
	test	eax, eax
	je	$LN17@bind_engin
; Line 251
	mov	eax, 1
	pop	esi
	ret	0
_bind_engine ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _v_check
_TEXT	SEGMENT
_v$ = 8							; size = 4
_v_check PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 250
	cmp	DWORD PTR _v$[esp-4], 131072		; 00020000H
	sbb	eax, eax
	and	eax, -131072				; fffe0000H
	add	eax, 131072				; 00020000H
	ret	0
_v_check ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _padlock_bind_fn
_TEXT	SEGMENT
_e$ = 8							; size = 4
_id$ = 12						; size = 4
_padlock_bind_fn PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 239
	mov	eax, DWORD PTR _id$[esp-4]
	test	eax, eax
	je	SHORT $LN2@padlock_bi
	mov	ecx, DWORD PTR _padlock_id
	npad	2
$LL5@padlock_bi:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN6@padlock_bi
	test	dl, dl
	je	SHORT $LN7@padlock_bi
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN6@padlock_bi
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL5@padlock_bi
$LN7@padlock_bi:
	xor	eax, eax
	jmp	SHORT $LN8@padlock_bi
$LN6@padlock_bi:
	sbb	eax, eax
	or	eax, 1
$LN8@padlock_bi:
	test	eax, eax
	je	SHORT $LN2@padlock_bi
; Line 240
	xor	eax, eax
; Line 248
	ret	0
$LN2@padlock_bi:
; Line 243
	push	DWORD PTR _e$[esp-4]
	call	_padlock_bind_helper
	add	esp, 4
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 248
	ret	0
_padlock_bind_fn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _padlock_bind_helper
_TEXT	SEGMENT
_e$ = 8							; size = 4
_padlock_bind_helper PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 175
	push	esi
; Line 177
	call	_padlock_available
; Line 185
	cmp	DWORD PTR _padlock_use_ace, 0
	mov	ecx, OFFSET ??_C@_06KFJDPGIC@no?9ACE?$AA@
	mov	eax, OFFSET ??_C@_03CMBJHGC@ACE?$AA@
	mov	DWORD PTR _padlock_use_rng, 0
	cmove	eax, ecx
	push	eax
	push	OFFSET ??_C@_06NNNBPPCC@no?9RNG?$AA@
	push	OFFSET ??_C@_0BF@KIHBIGGJ@VIA?5PadLock?5?$CI?$CFs?0?5?$CFs?$CJ?$AA@
	push	100					; 00000064H
	push	OFFSET _padlock_name
	call	_BIO_snprintf
; Line 195
	push	DWORD PTR _padlock_id
	mov	esi, DWORD PTR _e$[esp+24]
	push	esi
	call	_ENGINE_set_id
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	SHORT $LN3@padlock_bi
	push	OFFSET _padlock_name
	push	esi
	call	_ENGINE_set_name
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@padlock_bi
	push	OFFSET _padlock_init
	push	esi
	call	_ENGINE_set_init_function
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@padlock_bi
	cmp	DWORD PTR _padlock_use_ace, 0
	je	SHORT $LN4@padlock_bi
	push	OFFSET _padlock_ciphers
	push	esi
	call	_ENGINE_set_ciphers
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@padlock_bi
$LN4@padlock_bi:
	cmp	DWORD PTR _padlock_use_rng, 0
	je	SHORT $LN2@padlock_bi
	push	OFFSET _padlock_rand
	push	esi
	call	_ENGINE_set_RAND
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@padlock_bi
$LN2@padlock_bi:
; Line 202
	mov	eax, 1
	pop	esi
; Line 203
	ret	0
$LN3@padlock_bi:
; Line 198
	xor	eax, eax
	pop	esi
; Line 203
	ret	0
_padlock_bind_helper ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _padlock_ciphers
_TEXT	SEGMENT
_e$ = 8							; size = 4
_cipher$ = 12						; size = 4
_nids$ = 16						; size = 4
_nid$ = 20						; size = 4
_padlock_ciphers PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 731
	mov	ecx, DWORD PTR _cipher$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN4@padlock_ci
; Line 732
	mov	eax, DWORD PTR _nids$[esp-4]
	mov	DWORD PTR [eax], OFFSET _padlock_cipher_nids
; Line 733
	mov	eax, DWORD PTR _padlock_cipher_nids_num
; Line 784
	ret	0
$LN4@padlock_ci:
; Line 737
	mov	eax, DWORD PTR _nid$[esp-4]
	add	eax, -418				; fffffe5eH
	cmp	eax, 11					; 0000000bH
	ja	$LN17@padlock_ci
	jmp	DWORD PTR $LN20@padlock_ci[eax*4]
$LN5@padlock_ci:
; Line 739
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_128_ecb
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN6@padlock_ci:
; Line 742
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_128_cbc
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN7@padlock_ci:
; Line 745
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_128_cfb
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN8@padlock_ci:
; Line 748
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_128_ofb
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN9@padlock_ci:
; Line 752
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_192_ecb
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN10@padlock_ci:
; Line 755
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_192_cbc
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN11@padlock_ci:
; Line 758
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_192_cfb
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN12@padlock_ci:
; Line 761
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_192_ofb
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN13@padlock_ci:
; Line 765
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_256_ecb
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN14@padlock_ci:
; Line 768
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_256_cbc
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN15@padlock_ci:
; Line 771
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_256_cfb
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN16@padlock_ci:
; Line 774
	mov	DWORD PTR [ecx], OFFSET _padlock_aes_256_ofb
; Line 783
	mov	eax, 1
; Line 784
	ret	0
$LN17@padlock_ci:
; Line 779
	mov	DWORD PTR [ecx], 0
; Line 780
	xor	eax, eax
; Line 784
	ret	0
	npad	2
$LN20@padlock_ci:
	DD	$LN5@padlock_ci
	DD	$LN6@padlock_ci
	DD	$LN8@padlock_ci
	DD	$LN7@padlock_ci
	DD	$LN9@padlock_ci
	DD	$LN10@padlock_ci
	DD	$LN12@padlock_ci
	DD	$LN11@padlock_ci
	DD	$LN13@padlock_ci
	DD	$LN14@padlock_ci
	DD	$LN16@padlock_ci
	DD	$LN15@padlock_ci
_padlock_ciphers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _padlock_init
_TEXT	SEGMENT
_e$ = 8							; size = 4
_padlock_init PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 229
	cmp	DWORD PTR _padlock_use_rng, 0
	jne	SHORT $LN3@padlock_in
	cmp	DWORD PTR _padlock_use_ace, 0
	jne	SHORT $LN3@padlock_in
	xor	eax, eax
; Line 230
	ret	0
$LN3@padlock_in:
; Line 229
	mov	eax, 1
; Line 230
	ret	0
_padlock_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _padlock_available
_TEXT	SEGMENT
_padlock_available PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\engines\e_padlock.c
; Line 562
	push	ebx
; Line 564
	pushfd
; Line 565
	pop	eax
; Line 566
	mov	ecx, eax
; Line 567
	xor	eax, 2097152				; 00200000H
; Line 568
	push	eax
; Line 569
	popfd
; Line 570
	pushfd
; Line 571
	pop	eax
; Line 572
	xor	eax, ecx
; Line 573
	bt	eax, 21					; 00000015H
; Line 574
	jae	SHORT $noluck$4
; Line 575
	mov	eax, 0
; Line 576
	cpuid
; Line 577
	xor	eax, eax
; Line 578
	cmp	ebx, 1953391939				; 746e6543H
; Line 579
	jne	SHORT $noluck$4
; Line 580
	cmp	edx, 1215460705				; 48727561H
; Line 581
	jne	SHORT $noluck$4
; Line 582
	cmp	ecx, 1936487777				; 736c7561H
; Line 583
	jne	SHORT $noluck$4
; Line 584
	mov	eax, -1073741824			; c0000000H
; Line 585
	cpuid
; Line 586
	mov	edx, eax
; Line 587
	xor	eax, eax
; Line 588
	cmp	edx, -1073741823			; c0000001H
; Line 589
	jb	SHORT $noluck$4
; Line 590
	mov	eax, -1073741823			; c0000001H
; Line 591
	cpuid
; Line 592
	xor	eax, eax
; Line 593
	bt	edx, 6
; Line 594
	jae	SHORT $skip_a$5
; Line 595
	bt	edx, 7
; Line 596
	jae	SHORT $skip_a$5
; Line 597
	mov	DWORD PTR _padlock_use_ace, 1
; Line 598
	inc	eax
$skip_a$5:
; Line 599
	bt	edx, 2
; Line 600
	jae	SHORT $skip_r$6
; Line 601
	bt	edx, 3
; Line 602
	jae	SHORT $skip_r$6
; Line 603
	mov	DWORD PTR _padlock_use_rng, 1
; Line 604
	inc	eax
$skip_r$6:
$noluck$4:
; Line 608
	pop	ebx
	ret	0
_padlock_available ENDP
_TEXT	ENDS
END

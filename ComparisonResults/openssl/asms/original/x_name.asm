; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_06IEOJBDIK@object?$AA@			; `string'
PUBLIC	??_C@_05MFEJDJP@value?$AA@			; `string'
PUBLIC	??_C@_0BA@KEPIIMOE@X509_NAME_ENTRY?$AA@		; `string'
PUBLIC	??_C@_04IEOKPFHO@RDNS?$AA@			; `string'
PUBLIC	_X509_NAME_ENTRIES_it
PUBLIC	??_C@_0BC@GJMCELDI@X509_NAME_ENTRIES?$AA@	; `string'
PUBLIC	??_C@_04FABLJDN@Name?$AA@			; `string'
PUBLIC	??_C@_0BD@FDNDONGH@X509_NAME_INTERNAL?$AA@	; `string'
PUBLIC	_x509_name_ff
PUBLIC	??_C@_09KGNJKBNF@X509_NAME?$AA@			; `string'
PUBLIC	_X509_NAME_ENTRY_it
EXTRN	_ASN1_PRINTABLE_it:PROC
EXTRN	_ASN1_OBJECT_it:PROC
;	COMDAT ??_C@_09KGNJKBNF@X509_NAME?$AA@
CONST	SEGMENT
??_C@_09KGNJKBNF@X509_NAME?$AA@ DB 'X509_NAME', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FDNDONGH@X509_NAME_INTERNAL?$AA@
CONST	SEGMENT
??_C@_0BD@FDNDONGH@X509_NAME_INTERNAL?$AA@ DB 'X509_NAME_INTERNAL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FABLJDN@Name?$AA@
CONST	SEGMENT
??_C@_04FABLJDN@Name?$AA@ DB 'Name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GJMCELDI@X509_NAME_ENTRIES?$AA@
CONST	SEGMENT
??_C@_0BC@GJMCELDI@X509_NAME_ENTRIES?$AA@ DB 'X509_NAME_ENTRIES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04IEOKPFHO@RDNS?$AA@
CONST	SEGMENT
??_C@_04IEOKPFHO@RDNS?$AA@ DB 'RDNS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KEPIIMOE@X509_NAME_ENTRY?$AA@
CONST	SEGMENT
??_C@_0BA@KEPIIMOE@X509_NAME_ENTRY?$AA@ DB 'X509_NAME_ENTRY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MFEJDJP@value?$AA@
CONST	SEGMENT
??_C@_05MFEJDJP@value?$AA@ DB 'value', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IEOJBDIK@object?$AA@
CONST	SEGMENT
??_C@_06IEOJBDIK@object?$AA@ DB 'object', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_X509_NAME_ENTRY_seq_tt DD 00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06IEOJBDIK@object?$AA@
	DD	FLAT:_ASN1_OBJECT_it
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:??_C@_05MFEJDJP@value?$AA@
	DD	FLAT:_ASN1_PRINTABLE_it
?local_it@?1??X509_NAME_ENTRY_it@@9@9 DB 01H		; `X509_NAME_ENTRY_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	FLAT:_X509_NAME_ENTRY_seq_tt
	DD	02H
	DD	00H
	DD	010H
	DD	FLAT:??_C@_0BA@KEPIIMOE@X509_NAME_ENTRY?$AA@
_X509_NAME_ENTRIES_item_tt DD 02H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04IEOKPFHO@RDNS?$AA@
	DD	FLAT:_X509_NAME_ENTRY_it
?local_it@?1??X509_NAME_ENTRIES_it@@9@9 DB 00H		; `X509_NAME_ENTRIES_it'::`2'::local_it
	ORG $+3
	DD	0ffffffffH
	DD	FLAT:_X509_NAME_ENTRIES_item_tt
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BC@GJMCELDI@X509_NAME_ENTRIES?$AA@
_X509_NAME_INTERNAL_item_tt DD 04H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_04FABLJDN@Name?$AA@
	DD	FLAT:_X509_NAME_ENTRIES_it
?local_it@?1??X509_NAME_INTERNAL_it@@9@9 DB 00H		; `X509_NAME_INTERNAL_it'::`2'::local_it
	ORG $+3
	DD	0ffffffffH
	DD	FLAT:_X509_NAME_INTERNAL_item_tt
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BD@FDNDONGH@X509_NAME_INTERNAL?$AA@
_x509_name_ff DD 00H
	DD	FLAT:_x509_name_ex_new
	DD	FLAT:_x509_name_ex_free
	DD	00H
	DD	FLAT:_x509_name_ex_d2i
	DD	FLAT:_x509_name_ex_i2d
	DD	FLAT:_x509_name_ex_print
?local_it@?1??X509_NAME_it@@9@9 DB 04H			; `X509_NAME_it'::`2'::local_it
	ORG $+3
	DD	010H
	DD	00H
	DD	00H
	DD	FLAT:_x509_name_ff
	DD	00H
	DD	FLAT:??_C@_09KGNJKBNF@X509_NAME?$AA@
CONST	ENDS
PUBLIC	_X509_NAME_dup
PUBLIC	_X509_NAME_ENTRY_dup
PUBLIC	_X509_NAME_ENTRY_new
PUBLIC	_X509_NAME_ENTRY_free
PUBLIC	_d2i_X509_NAME_ENTRY
PUBLIC	_i2d_X509_NAME_ENTRY
PUBLIC	_X509_NAME_new
PUBLIC	_X509_NAME_free
PUBLIC	_d2i_X509_NAME
PUBLIC	_i2d_X509_NAME
PUBLIC	_X509_NAME_it
PUBLIC	_X509_NAME_set
PUBLIC	_X509_NAME_INTERNAL_it
PUBLIC	??_C@_0BH@KOHBKEEJ@?4?2crypto?2asn1?2x_name?4c?$AA@ ; `string'
EXTRN	__imp__isspace:PROC
EXTRN	__imp__tolower:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_sk_new_null:PROC
EXTRN	_sk_free:PROC
EXTRN	_sk_pop_free:PROC
EXTRN	_sk_push:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_BUF_MEM_new:PROC
EXTRN	_BUF_MEM_free:PROC
EXTRN	_BUF_MEM_grow:PROC
EXTRN	_ERR_put_error:PROC
EXTRN	_ASN1_STRING_copy:PROC
EXTRN	_ASN1_tag2bit:PROC
EXTRN	_ASN1_item_dup:PROC
EXTRN	_ASN1_STRING_to_UTF8:PROC
EXTRN	_ASN1_item_new:PROC
EXTRN	_ASN1_item_free:PROC
EXTRN	_ASN1_item_d2i:PROC
EXTRN	_ASN1_item_i2d:PROC
EXTRN	_ASN1_item_ex_d2i:PROC
EXTRN	_ASN1_item_ex_i2d:PROC
EXTRN	_OBJ_dup:PROC
EXTRN	_X509_NAME_print_ex:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
;	COMDAT ??_C@_0BH@KOHBKEEJ@?4?2crypto?2asn1?2x_name?4c?$AA@
CONST	SEGMENT
??_C@_0BH@KOHBKEEJ@?4?2crypto?2asn1?2x_name?4c?$AA@ DB '.\crypto\asn1\x_n'
	DB	'ame.c', 00H					; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _local_sk_X509_NAME_ENTRY_pop_free
_TEXT	SEGMENT
_ne$ = 8						; size = 4
_local_sk_X509_NAME_ENTRY_pop_free PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 279
	push	OFFSET _X509_NAME_ENTRY_free
	push	DWORD PTR _ne$[esp]
	call	_sk_pop_free
	add	esp, 8
; Line 280
	ret	0
_local_sk_X509_NAME_ENTRY_pop_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _local_sk_X509_NAME_ENTRY_free
_TEXT	SEGMENT
_ne$ = 8						; size = 4
_local_sk_X509_NAME_ENTRY_free PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 274
	jmp	_sk_free
_local_sk_X509_NAME_ENTRY_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_INTERNAL_it
_TEXT	SEGMENT
_X509_NAME_INTERNAL_it PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 115
	mov	eax, OFFSET ?local_it@?1??X509_NAME_INTERNAL_it@@9@9
	ret	0
_X509_NAME_INTERNAL_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_ENTRIES_it
_TEXT	SEGMENT
_X509_NAME_ENTRIES_it PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 111
	mov	eax, OFFSET ?local_it@?1??X509_NAME_ENTRIES_it@@9@9
	ret	0
_X509_NAME_ENTRIES_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x509_name_ex_print
_TEXT	SEGMENT
_out$ = 8						; size = 4
_pval$ = 12						; size = 4
_indent$ = 16						; size = 4
_fname$ = 20						; size = 4
_pctx$ = 24						; size = 4
_x509_name_ex_print PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 334
	mov	eax, DWORD PTR _pctx$[esp-4]
	push	DWORD PTR [eax+4]
	mov	eax, DWORD PTR _pval$[esp]
	push	DWORD PTR _indent$[esp]
	push	DWORD PTR [eax]
	push	DWORD PTR _out$[esp+8]
	call	_X509_NAME_print_ex
	xor	edx, edx
	add	esp, 16					; 00000010H
	test	eax, eax
	mov	ecx, 2
	cmovle	ecx, edx
	mov	eax, ecx
; Line 337
	ret	0
_x509_name_ex_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_name_canon
_TEXT	SEGMENT
_v$ = 8							; size = 4
__intname$ = 8						; size = 4
_in$ = 12						; size = 4
_i2d_name_canon PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 502
	push	ebx
; Line 508
	mov	ebx, DWORD PTR __intname$[esp]
	push	ebp
	push	esi
	push	edi
	push	ebx
	xor	edi, edi
	xor	esi, esi
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@i2d_name_c
	mov	ebp, DWORD PTR _in$[esp+12]
	npad	3
$LL4@i2d_name_c:
; Line 509
	push	esi
	push	ebx
	call	_sk_value
; Line 510
	push	-1
	push	-1
	push	OFFSET ?local_it@?1??X509_NAME_ENTRIES_it@@9@9
	mov	DWORD PTR _v$[esp+32], eax
	lea	eax, DWORD PTR _v$[esp+32]
	push	ebp
	push	eax
	call	_ASN1_item_ex_i2d
	add	esp, 28					; 0000001cH
; Line 512
	test	eax, eax
	js	SHORT $LN1@i2d_name_c
; Line 514
	push	ebx
	add	edi, eax
	inc	esi
	call	_sk_num
	add	esp, 4
	cmp	esi, eax
	jl	SHORT $LL4@i2d_name_c
$LN3@i2d_name_c:
; Line 516
	mov	eax, edi
$LN1@i2d_name_c:
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 517
	ret	0
_i2d_name_canon ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _asn1_string_canon
_TEXT	SEGMENT
_out$ = 8						; size = 4
tv270 = 12						; size = 4
_in$ = 12						; size = 4
_asn1_string_canon PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 423
	push	esi
; Line 428
	mov	esi, DWORD PTR _in$[esp]
	push	DWORD PTR [esi+4]
	call	_ASN1_tag2bit
	add	esp, 4
	test	eax, 10582				; 00002956H
	jne	SHORT $LN11@asn1_strin
; Line 429
	push	esi
	push	DWORD PTR _out$[esp+4]
	call	_ASN1_STRING_copy
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax
	pop	esi
; Line 498
	ret	0
$LN11@asn1_strin:
	push	ebx
	push	ebp
	push	edi
; Line 434
	mov	edi, DWORD PTR _out$[esp+12]
; Line 435
	push	esi
	lea	ebp, DWORD PTR [edi+8]
	mov	DWORD PTR [edi+4], 12			; 0000000cH
	push	ebp
	mov	DWORD PTR tv270[esp+20], ebp
	call	_ASN1_STRING_to_UTF8
	mov	ebx, eax
	add	esp, 8
	mov	DWORD PTR [edi], ebx
; Line 436
	cmp	ebx, -1
	jne	SHORT $LN13@asn1_strin
; Line 437
	pop	edi
	pop	ebp
	pop	ebx
	xor	eax, eax
	pop	esi
; Line 498
	ret	0
$LN13@asn1_strin:
; Line 440
	mov	esi, DWORD PTR [ebp]
; Line 451
	mov	ecx, DWORD PTR __imp__isspace
	test	ebx, ebx
	jle	SHORT $LN34@asn1_strin
$LL2@asn1_strin:
	mov	al, BYTE PTR [esi]
	test	al, al
	js	SHORT $LN34@asn1_strin
	movzx	eax, al
	push	eax
	call	ecx
	mov	ecx, DWORD PTR __imp__isspace
	add	esp, 4
	test	eax, eax
	je	SHORT $LN34@asn1_strin
; Line 453
	dec	ebx
	inc	esi
	test	ebx, ebx
	jg	SHORT $LL2@asn1_strin
$LN34@asn1_strin:
; Line 456
	lea	edi, DWORD PTR [esi-1]
	add	edi, ebx
; Line 459
	test	ebx, ebx
	jle	SHORT $LN35@asn1_strin
$LL4@asn1_strin:
	mov	al, BYTE PTR [edi]
	test	al, al
	js	SHORT $LN35@asn1_strin
	movzx	eax, al
	push	eax
	call	ecx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN35@asn1_strin
	mov	ecx, DWORD PTR __imp__isspace
; Line 461
	dec	ebx
	dec	edi
	test	ebx, ebx
	jg	SHORT $LL4@asn1_strin
$LN35@asn1_strin:
; Line 464
	mov	ebp, DWORD PTR [ebp]
; Line 466
	xor	edi, edi
; Line 467
	test	ebx, ebx
	jle	SHORT $LN7@asn1_strin
$LL6@asn1_strin:
; Line 469
	mov	al, BYTE PTR [esi]
	test	al, al
	js	SHORT $LN40@asn1_strin
; Line 474
	movzx	eax, al
	push	eax
	call	DWORD PTR __imp__isspace
	add	esp, 4
	test	eax, eax
	je	SHORT $LN16@asn1_strin
; Line 476
	mov	BYTE PTR [ebp], 32			; 00000020H
	inc	ebp
$LL10@asn1_strin:
; Line 486
	mov	al, BYTE PTR [esi+1]
	inc	esi
	inc	edi
	test	al, al
	js	SHORT $LN17@asn1_strin
	movzx	eax, al
	push	eax
	call	DWORD PTR __imp__isspace
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL10@asn1_strin
; Line 487
	jmp	SHORT $LN17@asn1_strin
$LN16@asn1_strin:
; Line 488
	movzx	eax, BYTE PTR [esi]
	push	eax
	call	DWORD PTR __imp__tolower
	add	esp, 4
$LN40@asn1_strin:
	mov	BYTE PTR [ebp], al
; Line 489
	inc	esi
	inc	ebp
; Line 490
	inc	edi
$LN17@asn1_strin:
; Line 467
	cmp	edi, ebx
	jl	SHORT $LL6@asn1_strin
$LN7@asn1_strin:
; Line 494
	mov	eax, DWORD PTR tv270[esp+12]
	pop	edi
	sub	ebp, DWORD PTR [eax]
	mov	eax, DWORD PTR _out$[esp+8]
	mov	DWORD PTR [eax], ebp
; Line 496
	mov	eax, 1
	pop	ebp
	pop	ebx
	pop	esi
; Line 498
	ret	0
_asn1_string_canon ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x509_name_canon
_TEXT	SEGMENT
_set$1$ = -12						; size = 4
_entry$1$ = -8						; size = 4
_p$ = -4						; size = 4
_intname$1$ = 8						; size = 4
_a$ = 8							; size = 4
_x509_name_canon PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 350
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	edi
; Line 357
	mov	edi, DWORD PTR _a$[esp+20]
	xor	ebx, ebx
	xor	ebp, ebp
	mov	DWORD PTR _set$1$[esp+24], -1
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN5@x509_name_
; Line 358
	push	eax
	call	_CRYPTO_free
	add	esp, 4
; Line 359
	mov	DWORD PTR [edi+12], ebx
$LN5@x509_name_:
; Line 362
	push	DWORD PTR [edi]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN6@x509_name_
; Line 363
	mov	DWORD PTR [edi+16], ebx
; Line 364
	mov	eax, 1
	pop	edi
	pop	ebp
	pop	ebx
; Line 413
	add	esp, 12					; 0000000cH
	ret	0
$LN6@x509_name_:
; Line 366
	call	_sk_new_null
	mov	DWORD PTR _intname$1$[esp+20], eax
; Line 367
	test	eax, eax
	je	$LN16@x509_name_
; Line 369
	push	esi
	push	DWORD PTR [edi]
	xor	ebp, ebp
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	$LN3@x509_name_
$LL4@x509_name_:
; Line 370
	push	ebp
	push	DWORD PTR [edi]
	call	_sk_value
	mov	esi, eax
	add	esp, 8
; Line 371
	mov	eax, DWORD PTR _set$1$[esp+28]
	mov	DWORD PTR _entry$1$[esp+28], esi
	cmp	DWORD PTR [esi+8], eax
	je	SHORT $LN8@x509_name_
; Line 372
	call	_sk_new_null
	mov	ebx, eax
; Line 373
	test	ebx, ebx
	je	$LN38@x509_name_
; Line 375
	push	ebx
	push	DWORD PTR _intname$1$[esp+28]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN38@x509_name_
; Line 377
	mov	eax, DWORD PTR [esi+8]
	mov	DWORD PTR _set$1$[esp+28], eax
$LN8@x509_name_:
; Line 101
	push	OFFSET ?local_it@?1??X509_NAME_ENTRY_it@@9@9
	call	_ASN1_item_new
; Line 379
	mov	esi, eax
; Line 101
	add	esp, 4
; Line 380
	test	esi, esi
	je	$LN38@x509_name_
; Line 382
	mov	eax, DWORD PTR _entry$1$[esp+28]
	push	DWORD PTR [eax]
	call	_OBJ_dup
	mov	DWORD PTR [esi], eax
; Line 383
	mov	eax, DWORD PTR _entry$1$[esp+32]
	push	DWORD PTR [eax+4]
	push	DWORD PTR [esi+4]
	call	_asn1_string_canon
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $err$41
; Line 385
	push	esi
	push	ebx
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $err$41
; Line 369
	push	DWORD PTR [edi]
	inc	ebp
	call	_sk_num
	add	esp, 4
	cmp	ebp, eax
	jl	$LL4@x509_name_
$LN3@x509_name_:
; Line 392
	mov	ebx, DWORD PTR _intname$1$[esp+24]
	push	0
	push	ebx
	call	_i2d_name_canon
; Line 394
	push	394					; 0000018aH
	push	OFFSET ??_C@_0BH@KOHBKEEJ@?4?2crypto?2asn1?2x_name?4c?$AA@
	push	eax
	mov	DWORD PTR [edi+16], eax
	call	_CRYPTO_malloc
	add	esp, 20					; 00000014H
	mov	DWORD PTR _p$[esp+28], eax
; Line 396
	test	eax, eax
	je	SHORT $LN38@x509_name_
; Line 399
	mov	DWORD PTR [edi+12], eax
; Line 401
	lea	eax, DWORD PTR _p$[esp+28]
	push	eax
	push	ebx
	call	_i2d_name_canon
	add	esp, 8
; Line 403
	mov	ebp, 1
	jmp	SHORT $LN22@x509_name_
$err$41:
; Line 101
	push	OFFSET ?local_it@?1??X509_NAME_ENTRY_it@@9@9
	push	esi
	call	_ASN1_item_free
	add	esp, 8
$LN38@x509_name_:
	xor	ebp, ebp
$LN22@x509_name_:
; Line 410
	push	OFFSET _local_sk_X509_NAME_ENTRY_pop_free
	push	DWORD PTR _intname$1$[esp+28]
	call	_sk_pop_free
	add	esp, 8
	pop	esi
$LN16@x509_name_:
; Line 412
	pop	edi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 413
	add	esp, 12					; 0000000cH
	ret	0
_x509_name_canon ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x509_name_encode
_TEXT	SEGMENT
_intname$ = -12						; size = 4
_set$1$ = -8						; size = 4
_p$ = -4						; size = 4
_a$ = 8							; size = 4
_x509_name_encode PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 283
	mov	eax, 12					; 0000000cH
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 287
	mov	DWORD PTR _intname$[esp+28], 0
; Line 292
	xor	esi, esi
; Line 294
	mov	DWORD PTR _set$1$[esp+28], -1
; Line 295
	call	_sk_new_null
	mov	DWORD PTR _intname$[esp+28], eax
; Line 296
	test	eax, eax
	je	$memerr$25
; Line 298
	mov	ebp, DWORD PTR _a$[esp+24]
	xor	edi, edi
	push	DWORD PTR [ebp]
	call	_sk_num
	add	esp, 4
	test	eax, eax
	jle	SHORT $LN3@x509_name_
$LL4@x509_name_:
; Line 299
	push	edi
	push	DWORD PTR [ebp]
	call	_sk_value
	mov	ebx, eax
	add	esp, 8
; Line 300
	mov	eax, DWORD PTR _set$1$[esp+28]
	cmp	DWORD PTR [ebx+8], eax
	je	SHORT $LN6@x509_name_
; Line 301
	call	_sk_new_null
	mov	esi, eax
; Line 302
	test	esi, esi
	je	$LN23@x509_name_
; Line 304
	push	esi
	push	DWORD PTR _intname$[esp+32]
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	$LN23@x509_name_
; Line 306
	mov	eax, DWORD PTR [ebx+8]
	mov	DWORD PTR _set$1$[esp+28], eax
$LN6@x509_name_:
; Line 308
	push	ebx
	push	esi
	call	_sk_push
	add	esp, 8
	test	eax, eax
	je	SHORT $LN23@x509_name_
; Line 298
	push	DWORD PTR [ebp]
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL4@x509_name_
$LN3@x509_name_:
; Line 311
	push	-1
	push	-1
	push	OFFSET ?local_it@?1??X509_NAME_INTERNAL_it@@9@9
	lea	eax, DWORD PTR _intname$[esp+40]
	push	0
	push	eax
	call	_ASN1_item_ex_i2d
	mov	esi, eax
; Line 313
	push	esi
	push	DWORD PTR [ebp+8]
	call	_BUF_MEM_grow
	add	esp, 28					; 0000001cH
	test	eax, eax
	je	SHORT $LN23@x509_name_
; Line 315
	mov	eax, DWORD PTR [ebp+8]
; Line 316
	push	-1
	push	-1
	push	OFFSET ?local_it@?1??X509_NAME_INTERNAL_it@@9@9
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _p$[esp+40], eax
	lea	eax, DWORD PTR _p$[esp+40]
	push	eax
	lea	eax, DWORD PTR _intname$[esp+44]
	push	eax
	call	_ASN1_item_ex_i2d
; Line 318
	push	OFFSET _local_sk_X509_NAME_ENTRY_free
	push	DWORD PTR _intname$[esp+52]
	call	_sk_pop_free
	add	esp, 28					; 0000001cH
; Line 320
	mov	DWORD PTR [ebp+4], 0
; Line 321
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 327
	add	esp, 12					; 0000000cH
	ret	0
$LN23@x509_name_:
; Line 321
	mov	eax, DWORD PTR _intname$[esp+28]
$memerr$25:
; Line 323
	push	OFFSET _local_sk_X509_NAME_ENTRY_free
	push	eax
	call	_sk_pop_free
; Line 325
	push	325					; 00000145H
	push	OFFSET ??_C@_0BH@KOHBKEEJ@?4?2crypto?2asn1?2x_name?4c?$AA@
	push	65					; 00000041H
	push	203					; 000000cbH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 28					; 0000001cH
; Line 326
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 327
	add	esp, 12					; 0000000cH
	ret	0
_x509_name_encode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x509_name_ex_free
_TEXT	SEGMENT
_pval$ = 8						; size = 4
_it$ = 12						; size = 4
_x509_name_ex_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 167
	push	edi
; Line 169
	mov	edi, DWORD PTR _pval$[esp]
	test	edi, edi
	je	SHORT $LN3@x509_name_
	push	esi
	mov	esi, DWORD PTR [edi]
	test	esi, esi
	je	SHORT $LN6@x509_name_
; Line 173
	push	DWORD PTR [esi+8]
	call	_BUF_MEM_free
; Line 174
	push	OFFSET _X509_NAME_ENTRY_free
	push	DWORD PTR [esi]
	call	_sk_pop_free
; Line 175
	mov	eax, DWORD PTR [esi+12]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@x509_name_
; Line 176
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN4@x509_name_:
; Line 177
	push	esi
	call	_CRYPTO_free
	add	esp, 4
; Line 178
	mov	DWORD PTR [edi], 0
$LN6@x509_name_:
	pop	esi
$LN3@x509_name_:
	pop	edi
; Line 179
	ret	0
_x509_name_ex_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x509_name_ex_new
_TEXT	SEGMENT
_val$ = 8						; size = 4
_it$ = 12						; size = 4
_x509_name_ex_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 141
	push	esi
; Line 143
	push	143					; 0000008fH
	push	OFFSET ??_C@_0BH@KOHBKEEJ@?4?2crypto?2asn1?2x_name?4c?$AA@
	push	20					; 00000014H
	call	_CRYPTO_malloc
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 144
	test	esi, esi
	je	SHORT $memerr$9
; Line 146
	call	_sk_new_null
	mov	DWORD PTR [esi], eax
	test	eax, eax
	je	SHORT $memerr$9
; Line 148
	call	_BUF_MEM_new
	mov	DWORD PTR [esi+8], eax
	test	eax, eax
	je	SHORT $memerr$9
; Line 153
	mov	eax, DWORD PTR _val$[esp]
	mov	DWORD PTR [esi+12], 0
	mov	DWORD PTR [esi+16], 0
	mov	DWORD PTR [esi+4], 1
	mov	DWORD PTR [eax], esi
; Line 154
	mov	eax, 1
	pop	esi
; Line 164
	ret	0
$memerr$9:
; Line 157
	push	157					; 0000009dH
	push	OFFSET ??_C@_0BH@KOHBKEEJ@?4?2crypto?2asn1?2x_name?4c?$AA@
	push	65					; 00000041H
	push	171					; 000000abH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 158
	test	esi, esi
	je	SHORT $LN5@x509_name_
; Line 159
	mov	eax, DWORD PTR [esi]
	test	eax, eax
	je	SHORT $LN6@x509_name_
; Line 160
	push	eax
	call	_sk_free
	add	esp, 4
$LN6@x509_name_:
; Line 161
	push	esi
	call	_CRYPTO_free
	add	esp, 4
$LN5@x509_name_:
; Line 163
	xor	eax, eax
	pop	esi
; Line 164
	ret	0
_x509_name_ex_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x509_name_ex_i2d
_TEXT	SEGMENT
_val$ = 8						; size = 4
_out$ = 12						; size = 4
_it$ = 16						; size = 4
_tag$ = 20						; size = 4
_aclass$ = 24						; size = 4
_x509_name_ex_i2d PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 255
	mov	eax, DWORD PTR _val$[esp-4]
	push	esi
	mov	esi, DWORD PTR [eax]
; Line 256
	cmp	DWORD PTR [esi+4], 0
	je	SHORT $LN4@x509_name_
; Line 257
	push	esi
	call	_x509_name_encode
	add	esp, 4
; Line 258
	test	eax, eax
	js	SHORT $LN1@x509_name_
; Line 260
	push	esi
	call	_x509_name_canon
	add	esp, 4
; Line 261
	test	eax, eax
	js	SHORT $LN1@x509_name_
$LN4@x509_name_:
; Line 264
	mov	eax, DWORD PTR [esi+8]
; Line 265
	mov	esi, DWORD PTR _out$[esp]
	push	edi
	mov	edi, DWORD PTR [eax]
	test	esi, esi
	je	SHORT $LN5@x509_name_
; Line 266
	push	edi
	push	DWORD PTR [eax+4]
	push	DWORD PTR [esi]
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 267
	add	DWORD PTR [esi], edi
$LN5@x509_name_:
; Line 269
	mov	eax, edi
	pop	edi
$LN1@x509_name_:
	pop	esi
; Line 270
	ret	0
_x509_name_ex_i2d ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _x509_name_ex_d2i
_TEXT	SEGMENT
_intname$ = -12						; size = 4
_p$ = -8						; size = 4
_nm$ = -4						; size = 4
_val$ = 8						; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_it$ = 20						; size = 4
_tag$ = 24						; size = 4
_aclass$ = 28						; size = 4
_opt$ = 32						; size = 1
_ctx$ = 36						; size = 4
_x509_name_ex_d2i PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 185
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 186
	mov	eax, DWORD PTR _in$[esp+8]
	push	edi
; Line 190
	mov	DWORD PTR _intname$[esp+16], 0
; Line 196
	mov	DWORD PTR _nm$[esp+16], 0
	mov	edi, DWORD PTR [eax]
; Line 202
	mov	eax, DWORD PTR _len$[esp+12]
	mov	DWORD PTR _p$[esp+16], edi
	cmp	eax, 1048576				; 00100000H
	jle	SHORT $LN8@x509_name_
; Line 203
	push	203					; 000000cbH
	push	OFFSET ??_C@_0BH@KOHBKEEJ@?4?2crypto?2asn1?2x_name?4c?$AA@
	push	155					; 0000009bH
	push	158					; 0000009eH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 204
	xor	eax, eax
	pop	edi
; Line 249
	add	esp, 12					; 0000000cH
	ret	0
$LN8@x509_name_:
; Line 209
	push	DWORD PTR _ctx$[esp+12]
	push	DWORD PTR _opt$[esp+16]
	push	DWORD PTR _aclass$[esp+20]
	push	DWORD PTR _tag$[esp+24]
	push	OFFSET ?local_it@?1??X509_NAME_INTERNAL_it@@9@9
	push	eax
	lea	eax, DWORD PTR _p$[esp+40]
	push	eax
	lea	eax, DWORD PTR _intname$[esp+44]
	push	eax
	call	_ASN1_item_ex_d2i
	add	esp, 32					; 00000020H
; Line 213
	test	eax, eax
	jle	$LN1@x509_name_
; Line 216
	push	ebx
	mov	ebx, DWORD PTR _val$[esp+16]
	cmp	DWORD PTR [ebx], 0
	je	SHORT $LN10@x509_name_
; Line 217
	push	0
	push	ebx
	call	_x509_name_ex_free
	add	esp, 8
$LN10@x509_name_:
; Line 218
	push	ebp
	push	esi
	lea	eax, DWORD PTR _nm$[esp+28]
	push	0
	push	eax
	call	_x509_name_ex_new
	mov	esi, DWORD PTR _nm$[esp+36]
	add	esp, 8
	test	eax, eax
	je	$err$36
; Line 221
	mov	eax, DWORD PTR _p$[esp+28]
	sub	eax, edi
	push	eax
	push	DWORD PTR [esi+8]
	call	_BUF_MEM_grow
	add	esp, 8
	test	eax, eax
	je	$err$36
; Line 223
	mov	eax, DWORD PTR _p$[esp+28]
	sub	eax, edi
	push	eax
	mov	eax, DWORD PTR [esi+8]
	push	edi
	push	DWORD PTR [eax+4]
	call	_memcpy
; Line 226
	push	DWORD PTR _intname$[esp+40]
	xor	ebp, ebp
	call	_sk_num
	add	esp, 16					; 00000010H
	test	eax, eax
	jle	SHORT $LN3@x509_name_
$LL4@x509_name_:
; Line 227
	push	ebp
	push	DWORD PTR _intname$[esp+32]
	call	_sk_value
	mov	ebx, eax
; Line 228
	xor	edi, edi
	push	ebx
	call	_sk_num
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN6@x509_name_
$LL7@x509_name_:
; Line 229
	push	edi
	push	ebx
	call	_sk_value
; Line 231
	push	eax
	mov	DWORD PTR [eax+8], ebp
	push	DWORD PTR [esi]
	call	_sk_push
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $err$36
; Line 228
	push	ebx
	inc	edi
	call	_sk_num
	add	esp, 4
	cmp	edi, eax
	jl	SHORT $LL7@x509_name_
$LN6@x509_name_:
; Line 234
	push	ebx
	call	_sk_free
	push	DWORD PTR _intname$[esp+32]
	inc	ebp
	call	_sk_num
	add	esp, 8
	cmp	ebp, eax
	jl	SHORT $LL4@x509_name_
	mov	ebx, DWORD PTR _val$[esp+24]
$LN3@x509_name_:
; Line 236
	push	DWORD PTR _intname$[esp+28]
	call	_sk_free
; Line 237
	push	esi
	call	_x509_name_canon
	add	esp, 8
; Line 238
	test	eax, eax
	je	SHORT $err$36
; Line 242
	mov	edx, DWORD PTR _in$[esp+24]
	mov	DWORD PTR [esi+4], 0
	mov	ecx, DWORD PTR _p$[esp+28]
	mov	DWORD PTR [ebx], esi
	pop	esi
	pop	ebp
	pop	ebx
	mov	DWORD PTR [edx], ecx
	pop	edi
; Line 249
	add	esp, 12					; 0000000cH
	ret	0
$err$36:
; Line 245
	test	esi, esi
	je	SHORT $LN19@x509_name_
; Line 136
	push	OFFSET ?local_it@?1??X509_NAME_it@@9@9
	push	esi
	call	_ASN1_item_free
	add	esp, 8
$LN19@x509_name_:
; Line 247
	push	247					; 000000f7H
	push	OFFSET ??_C@_0BH@KOHBKEEJ@?4?2crypto?2asn1?2x_name?4c?$AA@
	push	58					; 0000003aH
	push	158					; 0000009eH
	push	13					; 0000000dH
	call	_ERR_put_error
	add	esp, 20					; 00000014H
; Line 248
	xor	eax, eax
	pop	esi
	pop	ebp
	pop	ebx
$LN1@x509_name_:
	pop	edi
; Line 249
	add	esp, 12					; 0000000cH
	ret	0
_x509_name_ex_d2i ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_set
_TEXT	SEGMENT
_xn$ = 8						; size = 4
_name$ = 12						; size = 4
_X509_NAME_set PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 520
	push	esi
; Line 523
	mov	esi, DWORD PTR _xn$[esp]
	test	esi, esi
	je	SHORT $LN3@X509_NAME_
	mov	eax, DWORD PTR _name$[esp]
	test	eax, eax
	je	SHORT $LN3@X509_NAME_
; Line 526
	cmp	DWORD PTR [esi], eax
	je	SHORT $LN5@X509_NAME_
	push	edi
; Line 138
	push	eax
	push	OFFSET ?local_it@?1??X509_NAME_it@@9@9
	call	_ASN1_item_dup
; Line 527
	mov	edi, eax
; Line 138
	add	esp, 8
; Line 528
	test	edi, edi
	je	SHORT $LN15@X509_NAME_
; Line 136
	push	OFFSET ?local_it@?1??X509_NAME_it@@9@9
	push	DWORD PTR [esi]
	call	_ASN1_item_free
	add	esp, 8
; Line 530
	mov	DWORD PTR [esi], edi
$LN15@X509_NAME_:
	pop	edi
$LN5@X509_NAME_:
; Line 533
	xor	eax, eax
	cmp	DWORD PTR [esi], eax
	pop	esi
	setne	al
; Line 534
	ret	0
$LN3@X509_NAME_:
; Line 524
	xor	eax, eax
	pop	esi
; Line 534
	ret	0
_X509_NAME_set ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_it
_TEXT	SEGMENT
_X509_NAME_it PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 134
	mov	eax, OFFSET ?local_it@?1??X509_NAME_it@@9@9
	ret	0
_X509_NAME_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_X509_NAME
_TEXT	SEGMENT
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2d_X509_NAME PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 136
	push	OFFSET ?local_it@?1??X509_NAME_it@@9@9
	push	DWORD PTR _out$[esp]
	push	DWORD PTR _a$[esp+4]
	call	_ASN1_item_i2d
	add	esp, 12					; 0000000cH
	ret	0
_i2d_X509_NAME ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_X509_NAME
_TEXT	SEGMENT
_a$ = 8							; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_d2i_X509_NAME PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 136
	push	OFFSET ?local_it@?1??X509_NAME_it@@9@9
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _in$[esp+4]
	push	DWORD PTR _a$[esp+8]
	call	_ASN1_item_d2i
	add	esp, 16					; 00000010H
	ret	0
_d2i_X509_NAME ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_X509_NAME_free PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 136
	push	OFFSET ?local_it@?1??X509_NAME_it@@9@9
	push	DWORD PTR _a$[esp]
	call	_ASN1_item_free
	add	esp, 8
	ret	0
_X509_NAME_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_new
_TEXT	SEGMENT
_X509_NAME_new PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 136
	push	OFFSET ?local_it@?1??X509_NAME_it@@9@9
	call	_ASN1_item_new
	add	esp, 4
	ret	0
_X509_NAME_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_ENTRY_it
_TEXT	SEGMENT
_X509_NAME_ENTRY_it PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 99
	mov	eax, OFFSET ?local_it@?1??X509_NAME_ENTRY_it@@9@9
	ret	0
_X509_NAME_ENTRY_it ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _i2d_X509_NAME_ENTRY
_TEXT	SEGMENT
_a$ = 8							; size = 4
_out$ = 12						; size = 4
_i2d_X509_NAME_ENTRY PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 101
	push	OFFSET ?local_it@?1??X509_NAME_ENTRY_it@@9@9
	push	DWORD PTR _out$[esp]
	push	DWORD PTR _a$[esp+4]
	call	_ASN1_item_i2d
	add	esp, 12					; 0000000cH
	ret	0
_i2d_X509_NAME_ENTRY ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _d2i_X509_NAME_ENTRY
_TEXT	SEGMENT
_a$ = 8							; size = 4
_in$ = 12						; size = 4
_len$ = 16						; size = 4
_d2i_X509_NAME_ENTRY PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 101
	push	OFFSET ?local_it@?1??X509_NAME_ENTRY_it@@9@9
	push	DWORD PTR _len$[esp]
	push	DWORD PTR _in$[esp+4]
	push	DWORD PTR _a$[esp+8]
	call	_ASN1_item_d2i
	add	esp, 16					; 00000010H
	ret	0
_d2i_X509_NAME_ENTRY ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_ENTRY_free
_TEXT	SEGMENT
_a$ = 8							; size = 4
_X509_NAME_ENTRY_free PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 101
	push	OFFSET ?local_it@?1??X509_NAME_ENTRY_it@@9@9
	push	DWORD PTR _a$[esp]
	call	_ASN1_item_free
	add	esp, 8
	ret	0
_X509_NAME_ENTRY_free ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_ENTRY_new
_TEXT	SEGMENT
_X509_NAME_ENTRY_new PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 101
	push	OFFSET ?local_it@?1??X509_NAME_ENTRY_it@@9@9
	call	_ASN1_item_new
	add	esp, 4
	ret	0
_X509_NAME_ENTRY_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_ENTRY_dup
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_NAME_ENTRY_dup PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 102
	push	DWORD PTR _x$[esp-4]
	push	OFFSET ?local_it@?1??X509_NAME_ENTRY_it@@9@9
	call	_ASN1_item_dup
	add	esp, 8
	ret	0
_X509_NAME_ENTRY_dup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _X509_NAME_dup
_TEXT	SEGMENT
_x$ = 8							; size = 4
_X509_NAME_dup PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\crypto\asn1\x_name.c
; Line 138
	push	DWORD PTR _x$[esp-4]
	push	OFFSET ?local_it@?1??X509_NAME_it@@9@9
	call	_ASN1_item_dup
	add	esp, 8
	ret	0
_X509_NAME_dup ENDP
_TEXT	ENDS
END

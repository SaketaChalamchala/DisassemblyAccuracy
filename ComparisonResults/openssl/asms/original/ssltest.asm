; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	C:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_custom_ext_cli_string
PUBLIC	_custom_ext_srv_string
PUBLIC	_serverinfo_file
PUBLIC	_serverinfo_sct
PUBLIC	_serverinfo_tack
PUBLIC	_serverinfo_sct_seen
PUBLIC	_serverinfo_tack_seen
PUBLIC	_serverinfo_other_seen
PUBLIC	_custom_ext
PUBLIC	_custom_ext_error
_BSS	SEGMENT
_cipher	DD	01H DUP (?)
_verbose DD	01H DUP (?)
_debug	DD	01H DUP (?)
_rsa_tmp DD	01H DUP (?)
_s_ctx	DD	01H DUP (?)
_s_ctx2	DD	01H DUP (?)
_psk_key DD	01H DUP (?)
_bio_err DD	01H DUP (?)
_bio_stdout DD	01H DUP (?)
_sn_expect DD	01H DUP (?)
_serverinfo_file DD 01H DUP (?)
_serverinfo_sct DD 01H DUP (?)
_serverinfo_tack DD 01H DUP (?)
_serverinfo_sct_seen DD 01H DUP (?)
_serverinfo_tack_seen DD 01H DUP (?)
_serverinfo_other_seen DD 01H DUP (?)
_custom_ext DD	01H DUP (?)
_custom_ext_error DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_rnd_seed DB	'string to make the random number generator think it has '
	DB	'entropy', 00H
?indentation@?1??process_proxy_debug@@9@9 DB '>>>>>>>>>>>>>>>>>>>>>>>>>>>'
	DB	'>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>', 00H ; `process_proxy_debug'::`2'::indentation
	ORG $+3
_custom_ext_cli_string DB 'abc', 00H
_custom_ext_srv_string DB 'defg', 00H
CONST	ENDS
_DATA	SEGMENT
?idx@?1??get_proxy_auth_ex_data_idx@@9@9 DD 0ffffffffH	; `get_proxy_auth_ex_data_idx'::`2'::idx
?dh512_g@?1??get_dh512@@9@9 DB 02H			; `get_dh512'::`2'::dh512_g
?dh1024_g@?1??get_dh1024@@9@9 DB 02H			; `get_dh1024'::`2'::dh1024_g
	ORG $+2
?dh512_p@?1??get_dh512@@9@9 DB 0cbH			; `get_dh512'::`2'::dh512_p
	DB	0c8H
	DB	0e1H
	DB	086H
	DB	0d0H
	DB	01fH
	DB	094H
	DB	017H
	DB	0a6H
	DB	099H
	DB	0f0H
	DB	0c6H
	DB	01fH
	DB	0dH
	DB	0acH
	DB	0b6H
	DB	025H
	DB	03eH
	DB	06H
	DB	039H
	DB	0caH
	DB	072H
	DB	04H
	DB	0b0H
	DB	06eH
	DB	0daH
	DB	0c0H
	DB	061H
	DB	0e6H
	DB	07aH
	DB	077H
	DB	025H
	DB	0e8H
	DB	03bH
	DB	0b9H
	DB	05fH
	DB	09aH
	DB	0b6H
	DB	0b5H
	DB	0feH
	DB	099H
	DB	0bH
	DB	0a1H
	DB	093H
	DB	04eH
	DB	035H
	DB	033H
	DB	0b8H
	DB	0e1H
	DB	0f1H
	DB	013H
	DB	04fH
	DB	059H
	DB	01aH
	DB	0d2H
	DB	057H
	DB	0c0H
	DB	026H
	DB	021H
	DB	033H
	DB	02H
	DB	0c5H
	DB	0aeH
	DB	023H
?dh1024_p@?1??get_dh1024@@9@9 DB 0f8H			; `get_dh1024'::`2'::dh1024_p
	DB	081H
	DB	089H
	DB	07dH
	DB	014H
	DB	024H
	DB	0c5H
	DB	0d1H
	DB	0e6H
	DB	0f7H
	DB	0bfH
	DB	03aH
	DB	0e4H
	DB	090H
	DB	0f4H
	DB	0fcH
	DB	073H
	DB	0fbH
	DB	034H
	DB	0b5H
	DB	0faH
	DB	04cH
	DB	056H
	DB	0a2H
	DB	0eaH
	DB	0a7H
	DB	0e9H
	DB	0c0H
	DB	0c0H
	DB	0ceH
	DB	089H
	DB	0e1H
	DB	0faH
	DB	063H
	DB	03fH
	DB	0b0H
	DB	06bH
	DB	032H
	DB	066H
	DB	0f1H
	DB	0d1H
	DB	07bH
	DB	0b0H
	DB	00H
	DB	08fH
	DB	0caH
	DB	087H
	DB	0c2H
	DB	0aeH
	DB	098H
	DB	089H
	DB	026H
	DB	017H
	DB	0c2H
	DB	05H
	DB	0d2H
	DB	0ecH
	DB	08H
	DB	0d0H
	DB	08cH
	DB	0ffH
	DB	017H
	DB	052H
	DB	08cH
	DB	0c5H
	DB	07H
	DB	093H
	DB	03H
	DB	0b1H
	DB	0f6H
	DB	02fH
	DB	0b8H
	DB	01cH
	DB	052H
	DB	047H
	DB	027H
	DB	01bH
	DB	0dbH
	DB	0d1H
	DB	08dH
	DB	09dH
	DB	069H
	DB	01dH
	DB	052H
	DB	04bH
	DB	032H
	DB	081H
	DB	0aaH
	DB	07fH
	DB	00H
	DB	0c8H
	DB	0dcH
	DB	0e6H
	DB	0d9H
	DB	0ccH
	DB	0c1H
	DB	011H
	DB	02dH
	DB	037H
	DB	034H
	DB	06cH
	DB	0eaH
	DB	02H
	DB	097H
	DB	04bH
	DB	0eH
	DB	0bbH
	DB	0b1H
	DB	071H
	DB	033H
	DB	09H
	DB	015H
	DB	0fdH
	DB	0ddH
	DB	023H
	DB	087H
	DB	07H
	DB	05eH
	DB	089H
	DB	0abH
	DB	06bH
	DB	07cH
	DB	05fH
	DB	0ecH
	DB	0a6H
	DB	024H
	DB	0dcH
	DB	053H
?dh1024_p@?1??get_dh1024dsa@@9@9 DB 0c8H		; `get_dh1024dsa'::`2'::dh1024_p
	DB	00H
	DB	0f7H
	DB	08H
	DB	07H
	DB	089H
	DB	04dH
	DB	090H
	DB	053H
	DB	0f3H
	DB	0d5H
	DB	00H
	DB	021H
	DB	01bH
	DB	0f7H
	DB	031H
	DB	0a6H
	DB	0a2H
	DB	0daH
	DB	023H
	DB	09aH
	DB	0c7H
	DB	087H
	DB	019H
	DB	03bH
	DB	047H
	DB	0b6H
	DB	08cH
	DB	04H
	DB	06fH
	DB	0ffH
	DB	0c6H
	DB	09bH
	DB	0b8H
	DB	065H
	DB	0d2H
	DB	0c2H
	DB	05fH
	DB	031H
	DB	083H
	DB	04aH
	DB	0a7H
	DB	05fH
	DB	02fH
	DB	088H
	DB	038H
	DB	0b6H
	DB	055H
	DB	0cfH
	DB	0d9H
	DB	087H
	DB	06dH
	DB	06fH
	DB	09fH
	DB	0daH
	DB	0acH
	DB	0a6H
	DB	048H
	DB	0afH
	DB	0fcH
	DB	033H
	DB	084H
	DB	037H
	DB	05bH
	DB	082H
	DB	04aH
	DB	031H
	DB	05dH
	DB	0e7H
	DB	0bdH
	DB	052H
	DB	097H
	DB	0a1H
	DB	077H
	DB	0bfH
	DB	010H
	DB	09eH
	DB	037H
	DB	0eaH
	DB	064H
	DB	0faH
	DB	0caH
	DB	028H
	DB	08dH
	DB	09dH
	DB	03bH
	DB	0d2H
	DB	06eH
	DB	09H
	DB	05cH
	DB	068H
	DB	0c7H
	DB	045H
	DB	090H
	DB	0fdH
	DB	0bbH
	DB	070H
	DB	0c9H
	DB	03aH
	DB	0bbH
	DB	0dfH
	DB	0d4H
	DB	021H
	DB	0fH
	DB	0c4H
	DB	06aH
	DB	03cH
	DB	0f6H
	DB	061H
	DB	0cfH
	DB	03fH
	DB	0d6H
	DB	013H
	DB	0f1H
	DB	05fH
	DB	0bcH
	DB	0cfH
	DB	0bcH
	DB	026H
	DB	09eH
	DB	0bcH
	DB	0bH
	DB	0bdH
	DB	0abH
	DB	05dH
	DB	0c9H
	DB	054H
	DB	039H
?dh1024_g@?1??get_dh1024dsa@@9@9 DB 03bH		; `get_dh1024dsa'::`2'::dh1024_g
	DB	040H
	DB	086H
	DB	0e7H
	DB	0f3H
	DB	06cH
	DB	0deH
	DB	067H
	DB	01cH
	DB	0ccH
	DB	080H
	DB	05H
	DB	05aH
	DB	0dfH
	DB	0feH
	DB	0bdH
	DB	020H
	DB	027H
	DB	074H
	DB	06cH
	DB	024H
	DB	0c9H
	DB	03H
	DB	0f3H
	DB	0e1H
	DB	08dH
	DB	0c3H
	DB	07dH
	DB	098H
	DB	027H
	DB	040H
	DB	08H
	DB	0b8H
	DB	08cH
	DB	06aH
	DB	0e9H
	DB	0bbH
	DB	01aH
	DB	03aH
	DB	0d6H
	DB	086H
	DB	083H
	DB	05eH
	DB	072H
	DB	041H
	DB	0ceH
	DB	085H
	DB	03cH
	DB	0d2H
	DB	0b3H
	DB	0fcH
	DB	013H
	DB	0ceH
	DB	037H
	DB	081H
	DB	09eH
	DB	04cH
	DB	01cH
	DB	07bH
	DB	065H
	DB	0d3H
	DB	0e6H
	DB	0a6H
	DB	00H
	DB	0f5H
	DB	05aH
	DB	095H
	DB	043H
	DB	05eH
	DB	081H
	DB	0cfH
	DB	060H
	DB	0a2H
	DB	023H
	DB	0fcH
	DB	036H
	DB	0a7H
	DB	05dH
	DB	07aH
	DB	04cH
	DB	06H
	DB	091H
	DB	06eH
	DB	0f6H
	DB	057H
	DB	0eeH
	DB	036H
	DB	0cbH
	DB	06H
	DB	0eaH
	DB	0f5H
	DB	03dH
	DB	095H
	DB	049H
	DB	0cbH
	DB	0a7H
	DB	0ddH
	DB	081H
	DB	0dfH
	DB	080H
	DB	09H
	DB	04aH
	DB	097H
	DB	04dH
	DB	0a8H
	DB	022H
	DB	072H
	DB	0a1H
	DB	07fH
	DB	0c4H
	DB	070H
	DB	056H
	DB	070H
	DB	0e8H
	DB	020H
	DB	010H
	DB	018H
	DB	08fH
	DB	02eH
	DB	060H
	DB	07H
	DB	0e7H
	DB	068H
	DB	01aH
	DB	082H
	DB	05dH
	DB	032H
	DB	0a2H
?prev_progress@?BK@??doit_biopair@@9@9 DD 01H		; `doit_biopair'::`26'::prev_progress
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_vfprintf
PUBLIC	_fprintf
PUBLIC	_printf
PUBLIC	_doit_biopair
PUBLIC	_doit
PUBLIC	_main
PUBLIC	??_C@_0BH@EHOAHANM@User?5?$CFs?5doesn?8t?5exist?6?$AA@ ; `string'
PUBLIC	??_C@_04MJHCKDHM@1024?$AA@			; `string'
PUBLIC	??_C@_0BG@NHIDIELG@Servername?52?5is?5NULL?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@IKCLJGPN@Switching?5server?5context?4?6?$AA@ ; `string'
PUBLIC	??_C@_0CB@KHCLOBAB@Servername?3?5expected?5context?5?$CFd?6@ ; `string'
PUBLIC	??_C@_0BK@HMLMKJOB@Servername?3?5context?5is?52?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@HOPKBHLI@Servername?3?5context?5is?51?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@KKFBJFHF@Servername?3?5context?5is?5unknown?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@	; `string'
PUBLIC	??_C@_0DC@HAPGMDBF@failed?5to?5parser?5ALPN?5server?5pro@ ; `string'
PUBLIC	??_C@_0CB@KGHNKKJC@ALPN?5selected?5protocols?5differ?$CB?6@ ; `string'
PUBLIC	??_C@_0BO@KEEBEKHB@ALPN?5unexpectedly?5negotiated?6?$AA@ ; `string'
PUBLIC	??_C@_0DM@IEIAPLJD@ALPN?5selected?5protocols?5not?5equa@ ; `string'
PUBLIC	??_C@_0BI@GDHCJMFJ@ALPN?5results?3?5client?3?5?8?$AA@ ; `string'
PUBLIC	??_C@_0N@GJFDKFPE@?8?0?5server?3?5?8?$AA@	; `string'
PUBLIC	??_C@_02MHFDJOAC@?8?6?$AA@			; `string'
PUBLIC	??_C@_0CI@DLCNJPBJ@ALPN?5configured?3?5client?3?5?8?$CFs?8?0?5s@ ; `string'
PUBLIC	??_C@_05ODNCHMDL@?8?$CFs?8?6?$AA@		; `string'
PUBLIC	??_C@_08IIMANPGO@unknown?6?$AA@			; `string'
PUBLIC	??_C@_0BL@GGPCPHOI@usage?3?5ssltest?5?$FLargs?5?4?4?4?$FN?6?$AA@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0CL@KPPMKCMB@?5?9server_auth?5?5?9?5check?5server?5ce@ ; `string'
PUBLIC	??_C@_0CL@FMPDDGAH@?5?9client_auth?5?5?9?5do?5client?5authe@ ; `string'
PUBLIC	??_C@_0CL@EHEHBOCL@?5?9proxy?5?5?5?5?5?5?5?5?9?5allow?5proxy?5cer@ ; `string'
PUBLIC	??_C@_0CO@JFHLELAM@?5?9proxy_auth?5?$DMval?$DO?5?9?5set?5proxy?5p@ ; `string'
PUBLIC	??_C@_0DN@ELCOPDJH@?5?9proxy_cond?5?$DMval?$DO?5?9?5expression?5@ ; `string'
PUBLIC	??_C@_0BO@LNEKJLCH@?5?9v?5?5?5?5?5?5?5?5?5?5?5?5?9?5more?5output?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@KKJLIBGH@?5?9d?5?5?5?5?5?5?5?5?5?5?5?5?9?5debug?5output?6?$AA@ ; `string'
PUBLIC	??_C@_0CH@LDEMPAJB@?5?9reuse?5?5?5?5?5?5?5?5?9?5use?5session?9id?5@ ; `string'
PUBLIC	??_C@_0DD@FHELCBIE@?5?9num?5?$DMval?$DO?5?5?5?5?9?5number?5of?5conne@ ; `string'
PUBLIC	??_C@_0EA@DNBAKJOI@?5?9bytes?5?$DMval?$DO?5?5?9?5number?5of?5bytes@ ; `string'
PUBLIC	??_C@_0DM@DOOFKMLI@?5?9dhe512?5?5?5?5?5?5?5?9?5use?5512?5bit?5key@ ; `string'
PUBLIC	??_C@_0EJ@IKLOHAGP@?5?9dhe1024?5?5?5?5?5?5?9?5use?51024?5bit?5ke@ ; `string'
PUBLIC	??_C@_0ED@JGBLHOEA@?5?9dhe1024dsa?5?5?5?9?5use?51024?5bit?5ke@ ; `string'
PUBLIC	??_C@_0BO@CPDJNGK@?5?9no_dhe?5?5?5?5?5?5?5?9?5disable?5DHE?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@FLJCFEIA@?5?9no_ecdhe?5?5?5?5?5?9?5disable?5ECDHE?6?$AA@ ; `string'
PUBLIC	??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@ ; `string'
PUBLIC	??_C@_0CH@CBJNEKIG@?5?9srpuser?5user?5?5?9?5SRP?5username?5t@ ; `string'
PUBLIC	??_C@_0CH@OKHIGFD@?5?9srppass?5arg?5?5?5?9?5password?5for?5?8@ ; `string'
PUBLIC	??_C@_0BM@FPBKCLHG@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5use?5SSLv3?6?$AA@ ; `string'
PUBLIC	??_C@_0BM@JKGOOFMB@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5use?5TLSv1?6?$AA@ ; `string'
PUBLIC	??_C@_0BN@JFGFCCMG@?5?9dtls1?5?5?5?5?5?5?5?5?9?5use?5DTLSv1?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@BMMAPGGG@?5?9dtls12?5?5?5?5?5?5?5?9?5use?5DTLSv1?42?6?$AA@ ; `string'
PUBLIC	??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@ ; `string'
PUBLIC	??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@ ; `string'
PUBLIC	??_C@_0CK@JOGLHHEA@?5?9cert?5arg?5?5?5?5?5?9?5Server?5certific@ ; `string'
PUBLIC	??_C@_0DL@DKOEDAPF@?5?9key?5arg?5?5?5?5?5?5?9?5Server?5key?5file@ ; `string'
PUBLIC	??_C@_0CK@LCAFHNEP@?5?9c_cert?5arg?5?5?5?9?5Client?5certific@ ; `string'
PUBLIC	??_C@_0DN@MOLPFIGN@?5?9c_key?5arg?5?5?5?5?9?5Client?5key?5file@ ; `string'
PUBLIC	??_C@_0CC@DDIGJDCK@?5?9cipher?5arg?5?5?5?9?5The?5cipher?5list@ ; `string'
PUBLIC	??_C@_0CA@FDOIHLLN@?5?9bio_pair?5?5?5?5?5?9?5Use?5BIO?5pairs?6?$AA@ ; `string'
PUBLIC	??_C@_0DC@FAEAMCHH@?5?9f?5?5?5?5?5?5?5?5?5?5?5?5?9?5Test?5even?5cases@ ; `string'
PUBLIC	??_C@_0ED@CEOMPCAE@?5?9time?5?5?5?5?5?5?5?5?5?9?5measure?5process@ ; `string'
PUBLIC	??_C@_0CH@FBLDGFJA@?5?9zlib?5?5?5?5?5?5?5?5?5?9?5use?5zlib?5compre@ ; `string'
PUBLIC	??_C@_0CG@PDPMGBPE@?5?9rle?5?5?5?5?5?5?5?5?5?5?9?5use?5rle?5compres@ ; `string'
PUBLIC	??_C@_0LF@BAOACMLD@?5?9named_curve?5arg?5?5?9?5Elliptic?5cu@ ; `string'
PUBLIC	??_C@_0MB@JEFMBCOB@?5?9test_cipherlist?5?9?5Verifies?5the@ ; `string'
PUBLIC	??_C@_0DE@BFLHBEMG@?5?9serverinfo_file?5file?5?9?5have?5se@ ; `string'
PUBLIC	??_C@_0DG@FHEELKCM@?5?9serverinfo_sct?5?5?9?5have?5client?5@ ; `string'
PUBLIC	??_C@_0DH@MDGDJJFA@?5?9serverinfo_tack?5?9?5have?5client?5@ ; `string'
PUBLIC	??_C@_0DH@EMEGIEJJ@?5?9custom_ext?5?9?5try?5various?5custo@ ; `string'
PUBLIC	??_C@_0DG@DDNEDIHP@?5?9alpn_client?5?$DMstring?$DO?5?9?5have?5cl@ ; `string'
PUBLIC	??_C@_0DG@DAGJDFIA@?5?9alpn_server?5?$DMstring?$DO?5?9?5have?5se@ ; `string'
PUBLIC	??_C@_0DC@NCPACCEJ@?5?9alpn_server1?5?$DMstring?$DO?5?9?5alias?5@ ; `string'
PUBLIC	??_C@_0EB@NFIOLKJE@?5?9alpn_server2?5?$DMstring?$DO?5?9?5have?5s@ ; `string'
PUBLIC	??_C@_0EI@PMPLADGC@?5?9alpn_expected?5?$DMstring?$DO?5?9?5the?5A@ ; `string'
PUBLIC	??_C@_0DN@MLPJCDPH@?5?9sn_client?5?$DMstring?$DO?5?5?9?5have?5cli@ ; `string'
PUBLIC	??_C@_0EK@LKFPBAGA@?5?9sn_server1?5?$DMstring?$DO?5?9?5have?5ser@ ; `string'
PUBLIC	??_C@_0EK@PCLIKBM@?5?9sn_server2?5?$DMstring?$DO?5?9?5have?5ser@ ; `string'
PUBLIC	??_C@_0CL@ILJMHFOC@?5?9sn_expect1?5?5?5?5?5?5?5?5?5?5?9?5expected@ ; `string'
PUBLIC	??_C@_0CL@EAMFMDAE@?5?9sn_expect2?5?5?5?5?5?5?5?5?5?5?9?5expected@ ; `string'
PUBLIC	??_C@_0BD@EMLJCAFF@?$CFs?$CFs?0?5cipher?5?$CFs?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0N@FHEGHCBA@?0?5?$CFd?5bit?5RSA?$AA@	; `string'
PUBLIC	??_C@_0N@CCDEHKFD@?0?5?$CFd?5bit?5DSA?$AA@	; `string'
PUBLIC	??_C@_0N@MICJCNHE@invalid?5mode?$AA@		; `string'
PUBLIC	??_C@_0BD@EEHOPEAJ@type?5out?5of?5bounds?$AA@	; `string'
PUBLIC	??_C@_0P@DLDEBFAD@already?5locked?$AA@		; `string'
PUBLIC	??_C@_0L@CKIDBNLG@not?5locked?$AA@		; `string'
PUBLIC	??_C@_0BO@MEMMBFGL@CRYPTO_r_unlock?5on?5write?5lock?$AA@ ; `string'
PUBLIC	??_C@_0BN@LHOFANHL@CRYPTO_w_unlock?5on?5read?5lock?$AA@ ; `string'
PUBLIC	??_C@_0DH@MDGCFGCO@openssl?5?$CIlock_dbg_cb?$CJ?3?5?$CFs?5?$CImode?$DN@ ; `string'
PUBLIC	??_C@_0BH@MCOLHLGK@Test?5Callback?5Argument?$AA@ ; `string'
PUBLIC	??_C@_0BD@NNEELGGK@?4?4?1apps?1server?4pem?$AA@	; `string'
PUBLIC	??_C@_0BD@IHFIAEOI@?4?4?1apps?1client?4pem?$AA@	; `string'
PUBLIC	??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@	; `string'
PUBLIC	??_C@_03MCADLMAF@off?$AA@			; `string'
PUBLIC	??_C@_02JGAIBLNN@?9F?$AA@			; `string'
PUBLIC	??_C@_0DN@EAAPDDOI@not?5compiled?5with?5FIPS?5support?0?5@ ; `string'
PUBLIC	??_C@_0N@BPMAOOPN@?9server_auth?$AA@		; `string'
PUBLIC	??_C@_0N@BMCMBAED@?9client_auth?$AA@		; `string'
PUBLIC	??_C@_0M@HAACCACK@?9proxy_auth?$AA@		; `string'
PUBLIC	??_C@_0M@IIGCKNBL@?9proxy_cond?$AA@		; `string'
PUBLIC	??_C@_02EJEOCNCO@?9v?$AA@			; `string'
PUBLIC	??_C@_02DBLKFNPN@?9d?$AA@			; `string'
PUBLIC	??_C@_06MJBNDFGP@?9reuse?$AA@			; `string'
PUBLIC	??_C@_07DNAOJJKI@?9dhe512?$AA@			; `string'
PUBLIC	??_C@_0M@FEHPCELJ@?9dhe1024dsa?$AA@		; `string'
PUBLIC	??_C@_07IKMMOABC@?9no_dhe?$AA@			; `string'
PUBLIC	??_C@_09ICIAJIMM@?9no_ecdhe?$AA@		; `string'
PUBLIC	??_C@_04LLANCHKO@?9psk?$AA@			; `string'
PUBLIC	??_C@_0BH@FOHPLPMO@abcdefABCDEF1234567890?$AA@	; `string'
PUBLIC	??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@ ; `string'
PUBLIC	??_C@_08CDOPKGGH@?9srpuser?$AA@			; `string'
PUBLIC	??_C@_08BAKPFIIA@?9srppass?$AA@			; `string'
PUBLIC	??_C@_05JOEKLLOM@?9ssl2?$AA@			; `string'
PUBLIC	??_C@_05BIEHJHLL@?9tls1?$AA@			; `string'
PUBLIC	??_C@_05IHFBIKKN@?9ssl3?$AA@			; `string'
PUBLIC	??_C@_06LCNEOKJO@?9dtls1?$AA@			; `string'
PUBLIC	??_C@_07PKHFDONI@?9dtls12?$AA@			; `string'
PUBLIC	??_C@_04FJBMNMDG@?9num?$AA@			; `string'
PUBLIC	??_C@_06NDFEEAAH@?9bytes?$AA@			; `string'
PUBLIC	??_C@_05DLEDECNE@?9cert?$AA@			; `string'
PUBLIC	??_C@_07BGLKCNOF@?9s_cert?$AA@			; `string'
PUBLIC	??_C@_04FMEKFICB@?9key?$AA@			; `string'
PUBLIC	??_C@_06KHMKOENO@?9s_key?$AA@			; `string'
PUBLIC	??_C@_07HBGELBCL@?9c_cert?$AA@			; `string'
PUBLIC	??_C@_06KEBMOGEF@?9c_key?$AA@			; `string'
PUBLIC	??_C@_07DJFOHCGH@?9cipher?$AA@			; `string'
PUBLIC	??_C@_07MNNNLALG@?9CApath?$AA@			; `string'
PUBLIC	??_C@_07EAFCHGPO@?9CAfile?$AA@			; `string'
PUBLIC	??_C@_09LLIGBAAH@?9bio_pair?$AA@		; `string'
PUBLIC	??_C@_02DIMDPHP@?9f?$AA@			; `string'
PUBLIC	??_C@_05OHPGHBKD@?9time?$AA@			; `string'
PUBLIC	??_C@_05CHFAABOL@?9zlib?$AA@			; `string'
PUBLIC	??_C@_04JIPNCGOG@?9rle?$AA@			; `string'
PUBLIC	??_C@_0N@NBKDOJHA@?9named_curve?$AA@		; `string'
PUBLIC	??_C@_0M@LJBIAIKK@?9app_verify?$AA@		; `string'
PUBLIC	??_C@_06IDJDNKLB@?9proxy?$AA@			; `string'
PUBLIC	??_C@_0BB@FNEKPOED@?9test_cipherlist?$AA@	; `string'
PUBLIC	??_C@_0BA@DGOAIBNO@?9serverinfo_sct?$AA@	; `string'
PUBLIC	??_C@_0BB@OGBEAMFA@?9serverinfo_tack?$AA@	; `string'
PUBLIC	??_C@_0BB@KMFPIKOO@?9serverinfo_file?$AA@	; `string'
PUBLIC	??_C@_0M@FEEIMHKA@?9custom_ext?$AA@		; `string'
PUBLIC	??_C@_0N@FHKGFJCG@?9alpn_client?$AA@		; `string'
PUBLIC	??_C@_0N@BIOEICKF@?9alpn_server?$AA@		; `string'
PUBLIC	??_C@_0O@GAPJLEFH@?9alpn_server1?$AA@		; `string'
PUBLIC	??_C@_0O@ELNEOHJE@?9alpn_server2?$AA@		; `string'
PUBLIC	??_C@_0P@BPNJMBEN@?9alpn_expected?$AA@		; `string'
PUBLIC	??_C@_0L@IIABNIII@?9sn_client?$AA@		; `string'
PUBLIC	??_C@_0M@FBEIJNDJ@?9sn_server1?$AA@		; `string'
PUBLIC	??_C@_0M@HKGFMOPK@?9sn_server2?$AA@		; `string'
PUBLIC	??_C@_0M@KGPLDHKM@?9sn_expect1?$AA@		; `string'
PUBLIC	??_C@_0M@INNGGEGP@?9sn_expect2?$AA@		; `string'
PUBLIC	??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0DM@EOPFGCOD@Testing?5cipherlist?5order?5only?4?5I@ ; `string'
PUBLIC	??_C@_0EM@EBBAFJPJ@At?5most?5one?5of?5?9ssl2?0?5?9ssl3?0?5?9tl@ ; `string'
PUBLIC	??_C@_0EA@BDLPFBAG@Testing?5was?5requested?5for?5a?5disa@ ; `string'
PUBLIC	??_C@_0KP@HELALI@This?5case?5cannot?5work?4?5?5Use?5?9f?5t@ ; `string'
PUBLIC	??_C@_0BM@CODBDPGH@Using?5BIO?5pair?5?$CI?9bio_pair?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0EG@JBDEEIJL@Warning?3?5For?5accurate?5timings?0?5u@ ; `string'
PUBLIC	??_C@_0CC@DGEPOMBG@Failed?5to?5add?5compression?5method@ ; `string'
PUBLIC	??_C@_03EGMKOFFC@rle?$AA@			; `string'
PUBLIC	??_C@_04OLICEBLN@zlib?$AA@			; `string'
PUBLIC	??_C@_07CIFAGBMG@unknown?$AA@			; `string'
PUBLIC	??_C@_0CH@BBOHELO@Warning?3?5?$CFs?5compression?5not?5supp@ ; `string'
PUBLIC	??_C@_0CA@FEOHMMGB@Available?5compression?5methods?3?6?$AA@ ; `string'
PUBLIC	??_C@_07LEJCFHHH@?5?5NONE?6?$AA@		; `string'
PUBLIC	??_C@_09EACCHIHO@?5?5?$CFd?3?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BJ@FINFOCGI@unknown?5curve?5name?5?$CI?$CFs?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0BI@HEAPKHMI@unable?5to?5create?5curve?6?$AA@ ; `string'
PUBLIC	??_C@_0BH@IBJMGGIH@client?5authentication?6?$AA@ ; `string'
PUBLIC	??_C@_0BH@NAGJPKDE@server?5authentication?6?$AA@ ; `string'
PUBLIC	??_C@_0CE@LHPICLJC@setting?5PSK?5identity?5hint?5to?5s_c@ ; `string'
PUBLIC	??_C@_0BJ@LIANGLBF@ctx?5server?5identity_hint?$AA@ ; `string'
PUBLIC	??_C@_0CK@FBLKOACO@error?5setting?5PSK?5identity?5hint?5@ ; `string'
PUBLIC	??_C@_0CL@MBAOLIN@error?5setting?5PSK?5identity?5hint?5@ ; `string'
PUBLIC	??_C@_0BM@BPFDKLGC@Unable?5to?5set?5SRP?5username?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@EEBLKDLF@missing?5serverinfo?5file?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@OBPKAAPH@Error?5parsing?5?9alpn_client?5argum@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0CB@EKNPBIPP@?$CFd?5handshakes?5of?5?$CFld?5bytes?5done?6@ ; `string'
PUBLIC	??_C@_0EP@JJOJECDL@Approximate?5total?5server?5time?3?5?$CF@ ; `string'
PUBLIC	??_C@_0CE@EMPDBGIF@client?5waiting?5in?5SSL_connect?5?9?5@ ; `string'
PUBLIC	??_C@_0BB@IAPOCMPA@ERROR?5in?5CLIENT?6?$AA@	; `string'
PUBLIC	??_C@_0BL@EDFJMBF@SSL?5CLIENT?5STARTUP?5FAILED?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@IBPCFKPH@client?5wrote?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0BA@OOHCFBKE@client?5read?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0CD@MNGPMDCC@server?5waiting?5in?5SSL_accept?5?9?5?$CF@ ; `string'
PUBLIC	??_C@_0BB@PEAALMLB@ERROR?5in?5SERVER?6?$AA@	; `string'
PUBLIC	??_C@_0BL@FFMAAAKG@SSL?5SERVER?5STARTUP?5FAILED?6?$AA@ ; `string'
PUBLIC	??_C@_0BB@MDGJPHBB@server?5wrote?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_0BA@MHEHNLIN@server?5read?5?$CFd?6?$AA@	; `string'
PUBLIC	??_C@_1CA@NMFAJOKH@?$AA?4?$AA?2?$AAs?$AAs?$AAl?$AA?2?$AAs?$AAs?$AAl?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@GEMGJJPD@?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@GKOLFBDK@?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAi?$AAn?$AAt?$AA?$CJ?$AAn?$AAu?$AAm?$AA?$AA@ ; `string'
PUBLIC	??_C@_0EG@NKIELMIN@ERROR?3?5BIO_write?5could?5not?5write@ ; `string'
PUBLIC	??_C@_0BJ@JHPABEJB@C?9?$DOS?5relaying?3?5?$CFd?5bytes?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@GGBAHJLO@S?9?$DOC?5relaying?3?5?$CFd?5bytes?6?$AA@ ; `string'
PUBLIC	??_C@_0DI@GJPPFPNB@ERROR?3?5BIO_read?5could?5not?5read?5B@ ; `string'
PUBLIC	??_C@_0DH@FHAMPMNL@ERROR?3?5BIO_nwrite?$CI?$CJ?5did?5not?5acce@ ; `string'
PUBLIC	??_C@_0BC@IMIFBFOM@ERROR?3?5got?5stuck?6?$AA@	; `string'
PUBLIC	??_C@_05NHFKDGAI@SSLv2?$AA@			; `string'
PUBLIC	??_C@_0GB@OOKKDNKD@This?5can?5happen?5for?5SSL2?5because@ ; `string'
PUBLIC	??_C@_04OPHLJIFC@2SCF?$AA@			; `string'
PUBLIC	??_C@_04LJJPCJHD@2SSV?$AA@			; `string'
PUBLIC	??_C@_05HGOIEIJE@?5ok?4?6?$AA@			; `string'
PUBLIC	??_C@_08HMONHPMI@?5ERROR?4?6?$AA@		; `string'
PUBLIC	??_C@_0BE@IHNMHEPM@DONE?5via?5BIO?5pair?3?5?$AA@ ; `string'
PUBLIC	??_C@_0BC@EBKOHBO@ERROR?5IN?5STARTUP?6?$AA@	; `string'
PUBLIC	??_C@_0CH@JFLLBILH@SSL?5SERVER?5STARTUP?5FAILED?5in?5SSL@ ; `string'
PUBLIC	??_C@_0CI@MAHGPIHK@SSL?5SERVER?5STARTUP?5FAILED?5in?5SSL@ ; `string'
PUBLIC	??_C@_06NLKIMDJB@DONE?3?5?$AA@			; `string'
PUBLIC	??_C@_0BM@MCACEDAE@SSLtest?5for?5verify?5callback?$AA@ ; `string'
PUBLIC	??_C@_0N@ICFGBFFA@depth?$DN?$CFd?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BG@CDFJJOOL@depth?$DN?$CFd?5error?$DN?$CFd?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@ELKDOJBF@Error?5string?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BA@HCGKOGPE@?5?5?4?4?4?5ignored?4?6?$AA@	; `string'
PUBLIC	??_C@_0CA@MMHCFPAN@?5?5Independent?5proxy?5certificate?$AA@ ; `string'
PUBLIC	??_C@_0CB@BFDOKMAD@?5?5Proxy?5certificate?5inherits?5all@ ; `string'
PUBLIC	??_C@_0CD@BNGFNACI@?5?5Certificate?5proxy?5rights?5?$DN?5?$CF?$CK?4@ ; `string'
PUBLIC	??_C@_0BM@IDDECBBG@?0?5resulting?5proxy?5rights?5?$DN?5?$AA@ ; `string'
PUBLIC	??_C@_02HAOIJKIC@?$CFc?$AA@			; `string'
PUBLIC	??_C@_04CGFJFPFD@none?$AA@			; `string'
PUBLIC	??_C@_08KEEHKNKN@?$CF?$CK?4?$CKs?5?$CFs?$AA@	; `string'
PUBLIC	??_C@_0DB@EEKDFGI@Start?5process_proxy_cond_val?5at?5@ ; `string'
PUBLIC	??_C@_0CO@FIOGHHBH@Weird?5condition?5character?5in?5pos@ ; `string'
PUBLIC	??_C@_0DN@CBLGJPDH@End?5process_proxy_cond_val?5at?5po@ ; `string'
PUBLIC	??_C@_0DJ@OCFMOPNL@Start?5process_proxy_cond_multipl@ ; `string'
PUBLIC	??_C@_0CI@LMCBPGM@SOMETHING?5IS?5SERIOUSLY?5WRONG?$CB?5ST@ ; `string'
PUBLIC	??_C@_0EF@GDLBFBIF@End?5process_proxy_cond_multiplie@ ; `string'
PUBLIC	??_C@_0DE@JLNBHHLB@Start?5process_proxy_cond_adders?5@ ; `string'
PUBLIC	??_C@_0EA@GFHJPKCC@End?5process_proxy_cond_adders?5at@ ; `string'
PUBLIC	??_C@_0CI@IKPNODFH@In?5app_verify_callback?0?5allowing@ ; `string'
PUBLIC	??_C@_0M@HFNIKPPB@Arg?5is?3?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0DL@CLBCHGDO@Finished?5printing?5do?5we?5have?5a?5c@ ; `string'
PUBLIC	??_C@_0BC@HJLNGDEC@cert?5depth?$DN?$CFd?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BK@LLDLKIKC@?5?5Initial?5proxy?5rights?5?$DN?5?$AA@ ; `string'
PUBLIC	??_C@_0CP@BCHMEEFM@Stopped?5processing?5condition?5bef@ ; `string'
PUBLIC	??_C@_0DH@MIJDKMCA@Proxy?5rights?5check?5with?5conditio@ ; `string'
PUBLIC	??_C@_0DF@HMLFHEMF@Proxy?5rights?5check?5with?5conditio@ ; `string'
PUBLIC	??_C@_0BA@NFNBFMFK@Memory?5error?4?4?4?$AA@	; `string'
PUBLIC	??_C@_0CE@GMHHAGLI@Generating?5temp?5?$CI?$CFd?5bit?$CJ?5RSA?5key@ ; `string'
PUBLIC	??_C@_0BG@FMCLKKGN@Error?5generating?5key?4?$AA@ ; `string'
PUBLIC	??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@ ; `string'
PUBLIC	??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@ ; `string'
PUBLIC	??_C@_0BA@ENIBCIEA@Client_identity?$AA@		; `string'
PUBLIC	??_C@_0CG@DPEONPI@client?3?5created?5identity?5?8?$CFs?8?5le@ ; `string'
PUBLIC	??_C@_0CO@BACHNCBK@server?3?5PSK?5error?3?5client?5identi@ ; `string'
PUBLIC	??_C@_0CC@ELJOEPCM@testing?5SSLv3?5cipher?5list?5order?3@ ; `string'
PUBLIC	??_C@_0BE@DBEJMPIK@failed?5?$CFlx?5vs?4?5?$CFlx?6?$AA@ ; `string'
PUBLIC	??_C@_03DJDALPN@ok?6?$AA@			; `string'
PUBLIC	??_C@_0CC@JLDPMBAP@testing?5TLSv1?5cipher?5list?5order?3@ ; `string'
PUBLIC	__real@408f400000000000
EXTRN	__imp___wassert:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__exit:PROC
EXTRN	__imp__abort:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__atol:PROC
EXTRN	__imp__getenv:PROC
EXTRN	__imp___stricmp:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	__imp__strspn:PROC
EXTRN	__imp__clock:PROC
EXTRN	__imp__isalpha:PROC
EXTRN	__imp__islower:PROC
EXTRN	__imp__isspace:PROC
EXTRN	__imp__toupper:PROC
EXTRN	_sk_num:PROC
EXTRN	_sk_value:PROC
EXTRN	_CRYPTO_mem_ctrl:PROC
EXTRN	_CRYPTO_cleanup_all_ex_data:PROC
EXTRN	_CRYPTO_lock:PROC
EXTRN	_CRYPTO_set_locking_callback:PROC
EXTRN	_CRYPTO_set_mem_debug_functions:PROC
EXTRN	_CRYPTO_malloc:PROC
EXTRN	_CRYPTO_free:PROC
EXTRN	_CRYPTO_set_mem_debug_options:PROC
EXTRN	_CRYPTO_dbg_malloc:PROC
EXTRN	_CRYPTO_dbg_realloc:PROC
EXTRN	_CRYPTO_dbg_free:PROC
EXTRN	_CRYPTO_dbg_set_options:PROC
EXTRN	_CRYPTO_dbg_get_options:PROC
EXTRN	_CRYPTO_mem_leaks:PROC
EXTRN	_BIO_test_flags:PROC
EXTRN	_BIO_ctrl_pending:PROC
EXTRN	_BIO_ctrl_get_write_guarantee:PROC
EXTRN	_BIO_ctrl_get_read_request:PROC
EXTRN	_BIO_new_fp:PROC
EXTRN	_BIO_new:PROC
EXTRN	_BIO_free:PROC
EXTRN	_BIO_read:PROC
EXTRN	_BIO_write:PROC
EXTRN	_BIO_ctrl:PROC
EXTRN	_BIO_free_all:PROC
EXTRN	_BIO_nread:PROC
EXTRN	_BIO_nwrite0:PROC
EXTRN	_BIO_nwrite:PROC
EXTRN	_BIO_s_mem:PROC
EXTRN	_BIO_new_bio_pair:PROC
EXTRN	_BIO_printf:PROC
EXTRN	_BIO_snprintf:PROC
EXTRN	_BN_num_bits:PROC
EXTRN	_BN_new:PROC
EXTRN	_BN_bin2bn:PROC
EXTRN	_BN_bn2bin:PROC
EXTRN	_BN_set_word:PROC
EXTRN	_BN_free:PROC
EXTRN	_BN_hex2bn:PROC
EXTRN	_OBJ_obj2nid:PROC
EXTRN	_OBJ_sn2nid:PROC
EXTRN	_EVP_cleanup:PROC
EXTRN	_EVP_PKEY_free:PROC
EXTRN	_BUF_strdup:PROC
EXTRN	_EC_KEY_new_by_curve_name:PROC
EXTRN	_EC_KEY_free:PROC
EXTRN	_RSA_new:PROC
EXTRN	_RSA_generate_key_ex:PROC
EXTRN	_RSA_free:PROC
EXTRN	_DH_new:PROC
EXTRN	_DH_free:PROC
EXTRN	_X509_STORE_CTX_get_ex_new_index:PROC
EXTRN	_X509_STORE_CTX_set_ex_data:PROC
EXTRN	_X509_STORE_CTX_get_ex_data:PROC
EXTRN	_X509_STORE_CTX_set_flags:PROC
EXTRN	_X509_verify_cert_error_string:PROC
EXTRN	_X509_free:PROC
EXTRN	_X509_NAME_oneline:PROC
EXTRN	_X509_get_subject_name:PROC
EXTRN	_X509_get_pubkey:PROC
EXTRN	_X509_get_ext_d2i:PROC
EXTRN	_X509_verify_cert:PROC
EXTRN	_PROXY_CERT_INFO_EXTENSION_free:PROC
EXTRN	_COMP_rle:PROC
EXTRN	_COMP_zlib:PROC
EXTRN	_SSL_select_next_proto:PROC
EXTRN	_SSL_CTX_set_alpn_protos:PROC
EXTRN	_SSL_CTX_set_alpn_select_cb:PROC
EXTRN	_SSL_get0_alpn_selected:PROC
EXTRN	_SSL_CTX_set_psk_client_callback:PROC
EXTRN	_SSL_CTX_set_psk_server_callback:PROC
EXTRN	_SSL_CTX_use_psk_identity_hint:PROC
EXTRN	_SSL_CTX_add_client_custom_ext:PROC
EXTRN	_SSL_CTX_add_server_custom_ext:PROC
EXTRN	_SSL_get_servername:PROC
EXTRN	_BIO_f_ssl:PROC
EXTRN	_SSL_CTX_set_cipher_list:PROC
EXTRN	_SSL_CTX_new:PROC
EXTRN	_SSL_CTX_free:PROC
EXTRN	_SSL_get_current_cipher:PROC
EXTRN	_SSL_CIPHER_get_version:PROC
EXTRN	_SSL_CIPHER_get_name:PROC
EXTRN	_SSL_set_bio:PROC
EXTRN	_SSL_CTX_use_serverinfo_file:PROC
EXTRN	_SSL_CTX_use_PrivateKey_file:PROC
EXTRN	_SSL_CTX_use_certificate_file:PROC
EXTRN	_SSL_load_error_strings:PROC
EXTRN	_SSL_state_string:PROC
EXTRN	_SSL_state_string_long:PROC
EXTRN	_SSL_set_session:PROC
EXTRN	_SSL_get_peer_certificate:PROC
EXTRN	_SSL_CTX_set_verify:PROC
EXTRN	_SSL_CTX_set_cert_verify_callback:PROC
EXTRN	_SSL_CTX_set_session_id_context:PROC
EXTRN	_SSL_new:PROC
EXTRN	_SSL_CTX_set_srp_username:PROC
EXTRN	_SSL_CTX_set_srp_client_pwd_callback:PROC
EXTRN	_SSL_CTX_set_srp_username_callback:PROC
EXTRN	_SSL_CTX_set_srp_cb_arg:PROC
EXTRN	_SSL_set_srp_server_param_pw:PROC
EXTRN	_SSL_get_srp_username:PROC
EXTRN	_SSL_free:PROC
EXTRN	_SSL_ctrl:PROC
EXTRN	_SSL_CTX_ctrl:PROC
EXTRN	_SSL_CTX_callback_ctrl:PROC
EXTRN	_SSL_get_version:PROC
EXTRN	_SSLv3_method:PROC
EXTRN	_SSLv23_method:PROC
EXTRN	_TLSv1_method:PROC
EXTRN	_DTLSv1_method:PROC
EXTRN	_DTLSv1_2_method:PROC
EXTRN	_SSL_set_connect_state:PROC
EXTRN	_SSL_set_accept_state:PROC
EXTRN	_SSL_library_init:PROC
EXTRN	_SSL_CTX_set_default_verify_paths:PROC
EXTRN	_SSL_CTX_load_verify_locations:PROC
EXTRN	_SSL_get_SSL_CTX:PROC
EXTRN	_SSL_set_SSL_CTX:PROC
EXTRN	_SSL_state:PROC
EXTRN	_SSL_CTX_set_tmp_rsa_callback:PROC
EXTRN	_SSL_COMP_get_compression_methods:PROC
EXTRN	_SSL_COMP_add_compression_method:PROC
EXTRN	_RAND_seed:PROC
EXTRN	_ERR_print_errors_fp:PROC
EXTRN	_ERR_print_errors:PROC
EXTRN	_ERR_free_strings:PROC
EXTRN	_ERR_remove_thread_state:PROC
EXTRN	_ENGINE_cleanup:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
_alpn_client DD	01H DUP (?)
_alpn_server DD	01H DUP (?)
_alpn_server2 DD 01H DUP (?)
_alpn_expected DD 01H DUP (?)
_alpn_selected DD 01H DUP (?)
_sn_client DD	01H DUP (?)
_sn_server1 DD	01H DUP (?)
_sn_server2 DD	01H DUP (?)
?modes@?1??lock_dbg_cb@@9@9 DD 029H DUP (?)		; `lock_dbg_cb'::`2'::modes
_BSS	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT ??_C@_0CC@JLDPMBAP@testing?5TLSv1?5cipher?5list?5order?3@
CONST	SEGMENT
??_C@_0CC@JLDPMBAP@testing?5TLSv1?5cipher?5list?5order?3@ DB 'testing TLS'
	DB	'v1 cipher list order: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DJDALPN@ok?6?$AA@
CONST	SEGMENT
??_C@_03DJDALPN@ok?6?$AA@ DB 'ok', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DBEJMPIK@failed?5?$CFlx?5vs?4?5?$CFlx?6?$AA@
CONST	SEGMENT
??_C@_0BE@DBEJMPIK@failed?5?$CFlx?5vs?4?5?$CFlx?6?$AA@ DB 'failed %lx vs.'
	DB	' %lx', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@ELJOEPCM@testing?5SSLv3?5cipher?5list?5order?3@
CONST	SEGMENT
??_C@_0CC@ELJOEPCM@testing?5SSLv3?5cipher?5list?5order?3@ DB 'testing SSL'
	DB	'v3 cipher list order: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BACHNCBK@server?3?5PSK?5error?3?5client?5identi@
CONST	SEGMENT
??_C@_0CO@BACHNCBK@server?3?5PSK?5error?3?5client?5identi@ DB 'server: PS'
	DB	'K error: client identity not found', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DPEONPI@client?3?5created?5identity?5?8?$CFs?8?5le@
CONST	SEGMENT
??_C@_0CG@DPEONPI@client?3?5created?5identity?5?8?$CFs?8?5le@ DB 'client:'
	DB	' created identity ''%s'' len=%d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ENIBCIEA@Client_identity?$AA@
CONST	SEGMENT
??_C@_0BA@ENIBCIEA@Client_identity?$AA@ DB 'Client_identity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@
CONST	SEGMENT
??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@ DB 'psk buffer'
	DB	' of callback is too small (%d) for key (%d)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@
CONST	SEGMENT
??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@ DB 'Could'
	DB	' not convert PSK key ''%s'' to BIGNUM', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMCLKKGN@Error?5generating?5key?4?$AA@
CONST	SEGMENT
??_C@_0BG@FMCLKKGN@Error?5generating?5key?4?$AA@ DB 'Error generating key'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GMHHAGLI@Generating?5temp?5?$CI?$CFd?5bit?$CJ?5RSA?5key@
CONST	SEGMENT
??_C@_0CE@GMHHAGLI@Generating?5temp?5?$CI?$CFd?5bit?$CJ?5RSA?5key@ DB 'Ge'
	DB	'nerating temp (%d bit) RSA key...', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NFNBFMFK@Memory?5error?4?4?4?$AA@
CONST	SEGMENT
??_C@_0BA@NFNBFMFK@Memory?5error?4?4?4?$AA@ DB 'Memory error...', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@HMLFHEMF@Proxy?5rights?5check?5with?5conditio@
CONST	SEGMENT
??_C@_0DF@HMLFHEMF@Proxy?5rights?5check?5with?5conditio@ DB 'Proxy rights'
	DB	' check with condition ''%s'' proved valid', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MIJDKMCA@Proxy?5rights?5check?5with?5conditio@
CONST	SEGMENT
??_C@_0DH@MIJDKMCA@Proxy?5rights?5check?5with?5conditio@ DB 'Proxy rights'
	DB	' check with condition ''%s'' proved invalid', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@BCHMEEFM@Stopped?5processing?5condition?5bef@
CONST	SEGMENT
??_C@_0CP@BCHMEEFM@Stopped?5processing?5condition?5bef@ DB 'Stopped proce'
	DB	'ssing condition before it''s end.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LLDLKIKC@?5?5Initial?5proxy?5rights?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_0BK@LLDLKIKC@?5?5Initial?5proxy?5rights?5?$DN?5?$AA@ DB '  Initial '
	DB	'proxy rights = ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HJLNGDEC@cert?5depth?$DN?$CFd?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BC@HJLNGDEC@cert?5depth?$DN?$CFd?5?$CFs?6?$AA@ DB 'cert depth=%d %'
	DB	's', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@CLBCHGDO@Finished?5printing?5do?5we?5have?5a?5c@
CONST	SEGMENT
??_C@_0DL@CLBCHGDO@Finished?5printing?5do?5we?5have?5a?5c@ DB 'Finished p'
	DB	'rinting do we have a context? 0x%p a cert? 0x%p', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HFNIKPPB@Arg?5is?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0M@HFNIKPPB@Arg?5is?3?5?$CFs?6?$AA@ DB 'Arg is: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@IKPNODFH@In?5app_verify_callback?0?5allowing@
CONST	SEGMENT
??_C@_0CI@IKPNODFH@In?5app_verify_callback?0?5allowing@ DB 'In app_verify'
	DB	'_callback, allowing cert. ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@GFHJPKCC@End?5process_proxy_cond_adders?5at@
CONST	SEGMENT
??_C@_0EA@GFHJPKCC@End?5process_proxy_cond_adders?5at@ DB 'End process_pr'
	DB	'oxy_cond_adders at position %d: %s, returning %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@JLNBHHLB@Start?5process_proxy_cond_adders?5@
CONST	SEGMENT
??_C@_0DE@JLNBHHLB@Start?5process_proxy_cond_adders?5@ DB 'Start process_'
	DB	'proxy_cond_adders at position %d: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@GDLBFBIF@End?5process_proxy_cond_multiplie@
CONST	SEGMENT
??_C@_0EF@GDLBFBIF@End?5process_proxy_cond_multiplie@ DB 'End process_pro'
	DB	'xy_cond_multipliers at position %d: %s, returning %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LMCBPGM@SOMETHING?5IS?5SERIOUSLY?5WRONG?$CB?5ST@
CONST	SEGMENT
??_C@_0CI@LMCBPGM@SOMETHING?5IS?5SERIOUSLY?5WRONG?$CB?5ST@ DB 'SOMETHING '
	DB	'IS SERIOUSLY WRONG! STOPPING', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@OCFMOPNL@Start?5process_proxy_cond_multipl@
CONST	SEGMENT
??_C@_0DJ@OCFMOPNL@Start?5process_proxy_cond_multipl@ DB 'Start process_p'
	DB	'roxy_cond_multipliers at position %d: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@CBLGJPDH@End?5process_proxy_cond_val?5at?5po@
CONST	SEGMENT
??_C@_0DN@CBLGJPDH@End?5process_proxy_cond_val?5at?5po@ DB 'End process_p'
	DB	'roxy_cond_val at position %d: %s, returning %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@FIOGHHBH@Weird?5condition?5character?5in?5pos@
CONST	SEGMENT
??_C@_0CO@FIOGHHBH@Weird?5condition?5character?5in?5pos@ DB 'Weird condit'
	DB	'ion character in position %d: %c', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@EEKDFGI@Start?5process_proxy_cond_val?5at?5@
CONST	SEGMENT
??_C@_0DB@EEKDFGI@Start?5process_proxy_cond_val?5at?5@ DB 'Start process_'
	DB	'proxy_cond_val at position %d: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEEHKNKN@?$CF?$CK?4?$CKs?5?$CFs?$AA@
CONST	SEGMENT
??_C@_08KEEHKNKN@?$CF?$CK?4?$CKs?5?$CFs?$AA@ DB '%*.*s %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGFJFPFD@none?$AA@
CONST	SEGMENT
??_C@_04CGFJFPFD@none?$AA@ DB 'none', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02HAOIJKIC@?$CFc?$AA@
CONST	SEGMENT
??_C@_02HAOIJKIC@?$CFc?$AA@ DB '%c', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IDDECBBG@?0?5resulting?5proxy?5rights?5?$DN?5?$AA@
CONST	SEGMENT
??_C@_0BM@IDDECBBG@?0?5resulting?5proxy?5rights?5?$DN?5?$AA@ DB ', result'
	DB	'ing proxy rights = ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BNGFNACI@?5?5Certificate?5proxy?5rights?5?$DN?5?$CF?$CK?4@
CONST	SEGMENT
??_C@_0CD@BNGFNACI@?5?5Certificate?5proxy?5rights?5?$DN?5?$CF?$CK?4@ DB ' '
	DB	' Certificate proxy rights = %*.*s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BFDOKMAD@?5?5Proxy?5certificate?5inherits?5all@
CONST	SEGMENT
??_C@_0CB@BFDOKMAD@?5?5Proxy?5certificate?5inherits?5all@ DB '  Proxy cer'
	DB	'tificate inherits all', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MMHCFPAN@?5?5Independent?5proxy?5certificate?$AA@
CONST	SEGMENT
??_C@_0CA@MMHCFPAN@?5?5Independent?5proxy?5certificate?$AA@ DB '  Indepen'
	DB	'dent proxy certificate', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HCGKOGPE@?5?5?4?4?4?5ignored?4?6?$AA@
CONST	SEGMENT
??_C@_0BA@HCGKOGPE@?5?5?4?4?4?5ignored?4?6?$AA@ DB '  ... ignored.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ELKDOJBF@Error?5string?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BC@ELKDOJBF@Error?5string?3?5?$CFs?6?$AA@ DB 'Error string: %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CDFJJOOL@depth?$DN?$CFd?5error?$DN?$CFd?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BG@CDFJJOOL@depth?$DN?$CFd?5error?$DN?$CFd?5?$CFs?6?$AA@ DB 'depth'
	DB	'=%d error=%d %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ICFGBFFA@depth?$DN?$CFd?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0N@ICFGBFFA@depth?$DN?$CFd?5?$CFs?6?$AA@ DB 'depth=%d %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MCACEDAE@SSLtest?5for?5verify?5callback?$AA@
CONST	SEGMENT
??_C@_0BM@MCACEDAE@SSLtest?5for?5verify?5callback?$AA@ DB 'SSLtest for ve'
	DB	'rify callback', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06NLKIMDJB@DONE?3?5?$AA@
CONST	SEGMENT
??_C@_06NLKIMDJB@DONE?3?5?$AA@ DB 'DONE: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MAHGPIHK@SSL?5SERVER?5STARTUP?5FAILED?5in?5SSL@
CONST	SEGMENT
??_C@_0CI@MAHGPIHK@SSL?5SERVER?5STARTUP?5FAILED?5in?5SSL@ DB 'SSL SERVER '
	DB	'STARTUP FAILED in SSL_write', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JFLLBILH@SSL?5SERVER?5STARTUP?5FAILED?5in?5SSL@
CONST	SEGMENT
??_C@_0CH@JFLLBILH@SSL?5SERVER?5STARTUP?5FAILED?5in?5SSL@ DB 'SSL SERVER '
	DB	'STARTUP FAILED in SSL_read', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EBKOHBO@ERROR?5IN?5STARTUP?6?$AA@
CONST	SEGMENT
??_C@_0BC@EBKOHBO@ERROR?5IN?5STARTUP?6?$AA@ DB 'ERROR IN STARTUP', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IHNMHEPM@DONE?5via?5BIO?5pair?3?5?$AA@
CONST	SEGMENT
??_C@_0BE@IHNMHEPM@DONE?5via?5BIO?5pair?3?5?$AA@ DB 'DONE via BIO pair: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HMONHPMI@?5ERROR?4?6?$AA@
CONST	SEGMENT
??_C@_08HMONHPMI@?5ERROR?4?6?$AA@ DB ' ERROR.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HGOIEIJE@?5ok?4?6?$AA@
CONST	SEGMENT
??_C@_05HGOIEIJE@?5ok?4?6?$AA@ DB ' ok.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04LJJPCJHD@2SSV?$AA@
CONST	SEGMENT
??_C@_04LJJPCJHD@2SSV?$AA@ DB '2SSV', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OPHLJIFC@2SCF?$AA@
CONST	SEGMENT
??_C@_04OPHLJIFC@2SCF?$AA@ DB '2SCF', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@OOKKDNKD@This?5can?5happen?5for?5SSL2?5because@
CONST	SEGMENT
??_C@_0GB@OOKKDNKD@This?5can?5happen?5for?5SSL2?5because@ DB 'This can ha'
	DB	'ppen for SSL2 because CLIENT-FINISHED and SERVER-VERIFY are w'
	DB	'ritten ', 0aH, 'concurrently ...', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05NHFKDGAI@SSLv2?$AA@
CONST	SEGMENT
??_C@_05NHFKDGAI@SSLv2?$AA@ DB 'SSLv2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IMIFBFOM@ERROR?3?5got?5stuck?6?$AA@
CONST	SEGMENT
??_C@_0BC@IMIFBFOM@ERROR?3?5got?5stuck?6?$AA@ DB 'ERROR: got stuck', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FHAMPMNL@ERROR?3?5BIO_nwrite?$CI?$CJ?5did?5not?5acce@
CONST	SEGMENT
??_C@_0DH@FHAMPMNL@ERROR?3?5BIO_nwrite?$CI?$CJ?5did?5not?5acce@ DB 'ERROR'
	DB	': BIO_nwrite() did not accept BIO_nwrite0() bytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@GJPPFPNB@ERROR?3?5BIO_read?5could?5not?5read?5B@
CONST	SEGMENT
??_C@_0DI@GJPPFPNB@ERROR?3?5BIO_read?5could?5not?5read?5B@ DB 'ERROR: BIO'
	DB	'_read could not read BIO_ctrl_pending() bytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GGBAHJLO@S?9?$DOC?5relaying?3?5?$CFd?5bytes?6?$AA@
CONST	SEGMENT
??_C@_0BJ@GGBAHJLO@S?9?$DOC?5relaying?3?5?$CFd?5bytes?6?$AA@ DB 'S->C rel'
	DB	'aying: %d bytes', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JHPABEJB@C?9?$DOS?5relaying?3?5?$CFd?5bytes?6?$AA@
CONST	SEGMENT
??_C@_0BJ@JHPABEJB@C?9?$DOS?5relaying?3?5?$CFd?5bytes?6?$AA@ DB 'C->S rel'
	DB	'aying: %d bytes', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@NKIELMIN@ERROR?3?5BIO_write?5could?5not?5write@
CONST	SEGMENT
??_C@_0EG@NKIELMIN@ERROR?3?5BIO_write?5could?5not?5write@ DB 'ERROR: BIO_'
	DB	'write could not write BIO_ctrl_get_write_guarantee() bytes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@GKOLFBDK@?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAi?$AAn?$AAt?$AA?$CJ?$AAn?$AAu?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@GKOLFBDK@?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAi?$AAn?$AAt?$AA?$CJ?$AAn?$AAu?$AAm?$AA?$AA@ DB 'r'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '(', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, ')', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GEMGJJPD@?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1M@GEMGJJPD@?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ DB 'r', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@NMFAJOKH@?$AA?4?$AA?2?$AAs?$AAs?$AAl?$AA?2?$AAs?$AAs?$AAl?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@NMFAJOKH@?$AA?4?$AA?2?$AAs?$AAs?$AAl?$AA?2?$AAs?$AAs?$AAl?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@ DB '.'
	DB	00H, '\', 00H, 's', 00H, 's', 00H, 'l', 00H, '\', 00H, 's', 00H
	DB	's', 00H, 'l', 00H, 't', 00H, 'e', 00H, 's', 00H, 't', 00H, '.'
	DB	00H, 'c', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MHEHNLIN@server?5read?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BA@MHEHNLIN@server?5read?5?$CFd?6?$AA@ DB 'server read %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MDGJPHBB@server?5wrote?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BB@MDGJPHBB@server?5wrote?5?$CFd?6?$AA@ DB 'server wrote %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FFMAAAKG@SSL?5SERVER?5STARTUP?5FAILED?6?$AA@
CONST	SEGMENT
??_C@_0BL@FFMAAAKG@SSL?5SERVER?5STARTUP?5FAILED?6?$AA@ DB 'SSL SERVER STA'
	DB	'RTUP FAILED', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PEAALMLB@ERROR?5in?5SERVER?6?$AA@
CONST	SEGMENT
??_C@_0BB@PEAALMLB@ERROR?5in?5SERVER?6?$AA@ DB 'ERROR in SERVER', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MNGPMDCC@server?5waiting?5in?5SSL_accept?5?9?5?$CF@
CONST	SEGMENT
??_C@_0CD@MNGPMDCC@server?5waiting?5in?5SSL_accept?5?9?5?$CF@ DB 'server '
	DB	'waiting in SSL_accept - %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OOHCFBKE@client?5read?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BA@OOHCFBKE@client?5read?5?$CFd?6?$AA@ DB 'client read %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IBPCFKPH@client?5wrote?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BB@IBPCFKPH@client?5wrote?5?$CFd?6?$AA@ DB 'client wrote %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EDFJMBF@SSL?5CLIENT?5STARTUP?5FAILED?6?$AA@
CONST	SEGMENT
??_C@_0BL@EDFJMBF@SSL?5CLIENT?5STARTUP?5FAILED?6?$AA@ DB 'SSL CLIENT STAR'
	DB	'TUP FAILED', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IAPOCMPA@ERROR?5in?5CLIENT?6?$AA@
CONST	SEGMENT
??_C@_0BB@IAPOCMPA@ERROR?5in?5CLIENT?6?$AA@ DB 'ERROR in CLIENT', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EMPDBGIF@client?5waiting?5in?5SSL_connect?5?9?5@
CONST	SEGMENT
??_C@_0CE@EMPDBGIF@client?5waiting?5in?5SSL_connect?5?9?5@ DB 'client wai'
	DB	'ting in SSL_connect - %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@JJOJECDL@Approximate?5total?5server?5time?3?5?$CF@
CONST	SEGMENT
??_C@_0EP@JJOJECDL@Approximate?5total?5server?5time?3?5?$CF@ DB 'Approxim'
	DB	'ate total server time: %6.2f s', 0aH, 'Approximate total clie'
	DB	'nt time: %6.2f s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EKNPBIPP@?$CFd?5handshakes?5of?5?$CFld?5bytes?5done?6@
CONST	SEGMENT
??_C@_0CB@EKNPBIPP@?$CFd?5handshakes?5of?5?$CFld?5bytes?5done?6@ DB '%d h'
	DB	'andshakes of %ld bytes done', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@OBPKAAPH@Error?5parsing?5?9alpn_client?5argum@
CONST	SEGMENT
??_C@_0CF@OBPKAAPH@Error?5parsing?5?9alpn_client?5argum@ DB 'Error parsin'
	DB	'g -alpn_client argument', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EEBLKDLF@missing?5serverinfo?5file?6?$AA@
CONST	SEGMENT
??_C@_0BJ@EEBLKDLF@missing?5serverinfo?5file?6?$AA@ DB 'missing serverinf'
	DB	'o file', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BPFDKLGC@Unable?5to?5set?5SRP?5username?6?$AA@
CONST	SEGMENT
??_C@_0BM@BPFDKLGC@Unable?5to?5set?5SRP?5username?6?$AA@ DB 'Unable to se'
	DB	't SRP username', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@MBAOLIN@error?5setting?5PSK?5identity?5hint?5@
CONST	SEGMENT
??_C@_0CL@MBAOLIN@error?5setting?5PSK?5identity?5hint?5@ DB 'error settin'
	DB	'g PSK identity hint to s_ctx2', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@FBLKOACO@error?5setting?5PSK?5identity?5hint?5@
CONST	SEGMENT
??_C@_0CK@FBLKOACO@error?5setting?5PSK?5identity?5hint?5@ DB 'error setti'
	DB	'ng PSK identity hint to s_ctx', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LIANGLBF@ctx?5server?5identity_hint?$AA@
CONST	SEGMENT
??_C@_0BJ@LIANGLBF@ctx?5server?5identity_hint?$AA@ DB 'ctx server identit'
	DB	'y_hint', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LHPICLJC@setting?5PSK?5identity?5hint?5to?5s_c@
CONST	SEGMENT
??_C@_0CE@LHPICLJC@setting?5PSK?5identity?5hint?5to?5s_c@ DB 'setting PSK'
	DB	' identity hint to s_ctx', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NAGJPKDE@server?5authentication?6?$AA@
CONST	SEGMENT
??_C@_0BH@NAGJPKDE@server?5authentication?6?$AA@ DB 'server authenticatio'
	DB	'n', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IBJMGGIH@client?5authentication?6?$AA@
CONST	SEGMENT
??_C@_0BH@IBJMGGIH@client?5authentication?6?$AA@ DB 'client authenticatio'
	DB	'n', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HEAPKHMI@unable?5to?5create?5curve?6?$AA@
CONST	SEGMENT
??_C@_0BI@HEAPKHMI@unable?5to?5create?5curve?6?$AA@ DB 'unable to create '
	DB	'curve', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FINFOCGI@unknown?5curve?5name?5?$CI?$CFs?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BJ@FINFOCGI@unknown?5curve?5name?5?$CI?$CFs?$CJ?6?$AA@ DB 'unknown'
	DB	' curve name (%s)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09EACCHIHO@?5?5?$CFd?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_09EACCHIHO@?5?5?$CFd?3?5?$CFs?6?$AA@ DB '  %d: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07LEJCFHHH@?5?5NONE?6?$AA@
CONST	SEGMENT
??_C@_07LEJCFHHH@?5?5NONE?6?$AA@ DB '  NONE', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FEOHMMGB@Available?5compression?5methods?3?6?$AA@
CONST	SEGMENT
??_C@_0CA@FEOHMMGB@Available?5compression?5methods?3?6?$AA@ DB 'Available'
	DB	' compression methods:', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@BBOHELO@Warning?3?5?$CFs?5compression?5not?5supp@
CONST	SEGMENT
??_C@_0CH@BBOHELO@Warning?3?5?$CFs?5compression?5not?5supp@ DB 'Warning: '
	DB	'%s compression not supported', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CIFAGBMG@unknown?$AA@
CONST	SEGMENT
??_C@_07CIFAGBMG@unknown?$AA@ DB 'unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OLICEBLN@zlib?$AA@
CONST	SEGMENT
??_C@_04OLICEBLN@zlib?$AA@ DB 'zlib', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03EGMKOFFC@rle?$AA@
CONST	SEGMENT
??_C@_03EGMKOFFC@rle?$AA@ DB 'rle', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DGEPOMBG@Failed?5to?5add?5compression?5method@
CONST	SEGMENT
??_C@_0CC@DGEPOMBG@Failed?5to?5add?5compression?5method@ DB 'Failed to ad'
	DB	'd compression method', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@JBDEEIJL@Warning?3?5For?5accurate?5timings?0?5u@
CONST	SEGMENT
??_C@_0EG@JBDEEIJL@Warning?3?5For?5accurate?5timings?0?5u@ DB 'Warning: F'
	DB	'or accurate timings, use more connections (e.g. -num 1000)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CODBDPGH@Using?5BIO?5pair?5?$CI?9bio_pair?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BM@CODBDPGH@Using?5BIO?5pair?5?$CI?9bio_pair?$CJ?6?$AA@ DB 'Using '
	DB	'BIO pair (-bio_pair)', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0KP@HELALI@This?5case?5cannot?5work?4?5?5Use?5?9f?5t@
CONST	SEGMENT
??_C@_0KP@HELALI@This?5case?5cannot?5work?4?5?5Use?5?9f?5t@ DB 'This case'
	DB	' cannot work.  Use -f to perform the test anyway (and', 0aH, '-'
	DB	'd to see what happens), or add one of ssl2, -ssl3, -tls1, -dt'
	DB	'ls1, -dtls12, -reuse', 0aH, 'to avoid protocol mismatch.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@BDLPFBAG@Testing?5was?5requested?5for?5a?5disa@
CONST	SEGMENT
??_C@_0EA@BDLPFBAG@Testing?5was?5requested?5for?5a?5disa@ DB 'Testing was'
	DB	' requested for a disabled protocol. Skipping tests.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@EBBAFJPJ@At?5most?5one?5of?5?9ssl2?0?5?9ssl3?0?5?9tl@
CONST	SEGMENT
??_C@_0EM@EBBAFJPJ@At?5most?5one?5of?5?9ssl2?0?5?9ssl3?0?5?9tl@ DB 'At mo'
	DB	'st one of -ssl2, -ssl3, -tls1, -dtls1 or -dtls12 should be re'
	DB	'quested.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@EOPFGCOD@Testing?5cipherlist?5order?5only?4?5I@
CONST	SEGMENT
??_C@_0DM@EOPFGCOD@Testing?5cipherlist?5order?5only?4?5I@ DB 'Testing cip'
	DB	'herlist order only. Ignoring all other options.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@ DB 'unknown option %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@INNGGEGP@?9sn_expect2?$AA@
CONST	SEGMENT
??_C@_0M@INNGGEGP@?9sn_expect2?$AA@ DB '-sn_expect2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KGPLDHKM@?9sn_expect1?$AA@
CONST	SEGMENT
??_C@_0M@KGPLDHKM@?9sn_expect1?$AA@ DB '-sn_expect1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HKGFMOPK@?9sn_server2?$AA@
CONST	SEGMENT
??_C@_0M@HKGFMOPK@?9sn_server2?$AA@ DB '-sn_server2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FBEIJNDJ@?9sn_server1?$AA@
CONST	SEGMENT
??_C@_0M@FBEIJNDJ@?9sn_server1?$AA@ DB '-sn_server1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IIABNIII@?9sn_client?$AA@
CONST	SEGMENT
??_C@_0L@IIABNIII@?9sn_client?$AA@ DB '-sn_client', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BPNJMBEN@?9alpn_expected?$AA@
CONST	SEGMENT
??_C@_0P@BPNJMBEN@?9alpn_expected?$AA@ DB '-alpn_expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ELNEOHJE@?9alpn_server2?$AA@
CONST	SEGMENT
??_C@_0O@ELNEOHJE@?9alpn_server2?$AA@ DB '-alpn_server2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GAPJLEFH@?9alpn_server1?$AA@
CONST	SEGMENT
??_C@_0O@GAPJLEFH@?9alpn_server1?$AA@ DB '-alpn_server1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BIOEICKF@?9alpn_server?$AA@
CONST	SEGMENT
??_C@_0N@BIOEICKF@?9alpn_server?$AA@ DB '-alpn_server', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHKGFJCG@?9alpn_client?$AA@
CONST	SEGMENT
??_C@_0N@FHKGFJCG@?9alpn_client?$AA@ DB '-alpn_client', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FEEIMHKA@?9custom_ext?$AA@
CONST	SEGMENT
??_C@_0M@FEEIMHKA@?9custom_ext?$AA@ DB '-custom_ext', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KMFPIKOO@?9serverinfo_file?$AA@
CONST	SEGMENT
??_C@_0BB@KMFPIKOO@?9serverinfo_file?$AA@ DB '-serverinfo_file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OGBEAMFA@?9serverinfo_tack?$AA@
CONST	SEGMENT
??_C@_0BB@OGBEAMFA@?9serverinfo_tack?$AA@ DB '-serverinfo_tack', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DGOAIBNO@?9serverinfo_sct?$AA@
CONST	SEGMENT
??_C@_0BA@DGOAIBNO@?9serverinfo_sct?$AA@ DB '-serverinfo_sct', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FNEKPOED@?9test_cipherlist?$AA@
CONST	SEGMENT
??_C@_0BB@FNEKPOED@?9test_cipherlist?$AA@ DB '-test_cipherlist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06IDJDNKLB@?9proxy?$AA@
CONST	SEGMENT
??_C@_06IDJDNKLB@?9proxy?$AA@ DB '-proxy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LJBIAIKK@?9app_verify?$AA@
CONST	SEGMENT
??_C@_0M@LJBIAIKK@?9app_verify?$AA@ DB '-app_verify', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBKDOJHA@?9named_curve?$AA@
CONST	SEGMENT
??_C@_0N@NBKDOJHA@?9named_curve?$AA@ DB '-named_curve', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JIPNCGOG@?9rle?$AA@
CONST	SEGMENT
??_C@_04JIPNCGOG@?9rle?$AA@ DB '-rle', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CHFAABOL@?9zlib?$AA@
CONST	SEGMENT
??_C@_05CHFAABOL@?9zlib?$AA@ DB '-zlib', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OHPGHBKD@?9time?$AA@
CONST	SEGMENT
??_C@_05OHPGHBKD@?9time?$AA@ DB '-time', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DIMDPHP@?9f?$AA@
CONST	SEGMENT
??_C@_02DIMDPHP@?9f?$AA@ DB '-f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09LLIGBAAH@?9bio_pair?$AA@
CONST	SEGMENT
??_C@_09LLIGBAAH@?9bio_pair?$AA@ DB '-bio_pair', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EAFCHGPO@?9CAfile?$AA@
CONST	SEGMENT
??_C@_07EAFCHGPO@?9CAfile?$AA@ DB '-CAfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07MNNNLALG@?9CApath?$AA@
CONST	SEGMENT
??_C@_07MNNNLALG@?9CApath?$AA@ DB '-CApath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DJFOHCGH@?9cipher?$AA@
CONST	SEGMENT
??_C@_07DJFOHCGH@?9cipher?$AA@ DB '-cipher', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06KEBMOGEF@?9c_key?$AA@
CONST	SEGMENT
??_C@_06KEBMOGEF@?9c_key?$AA@ DB '-c_key', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HBGELBCL@?9c_cert?$AA@
CONST	SEGMENT
??_C@_07HBGELBCL@?9c_cert?$AA@ DB '-c_cert', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06KHMKOENO@?9s_key?$AA@
CONST	SEGMENT
??_C@_06KHMKOENO@?9s_key?$AA@ DB '-s_key', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FMEKFICB@?9key?$AA@
CONST	SEGMENT
??_C@_04FMEKFICB@?9key?$AA@ DB '-key', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07BGLKCNOF@?9s_cert?$AA@
CONST	SEGMENT
??_C@_07BGLKCNOF@?9s_cert?$AA@ DB '-s_cert', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05DLEDECNE@?9cert?$AA@
CONST	SEGMENT
??_C@_05DLEDECNE@?9cert?$AA@ DB '-cert', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NDFEEAAH@?9bytes?$AA@
CONST	SEGMENT
??_C@_06NDFEEAAH@?9bytes?$AA@ DB '-bytes', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FJBMNMDG@?9num?$AA@
CONST	SEGMENT
??_C@_04FJBMNMDG@?9num?$AA@ DB '-num', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PKHFDONI@?9dtls12?$AA@
CONST	SEGMENT
??_C@_07PKHFDONI@?9dtls12?$AA@ DB '-dtls12', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LCNEOKJO@?9dtls1?$AA@
CONST	SEGMENT
??_C@_06LCNEOKJO@?9dtls1?$AA@ DB '-dtls1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IHFBIKKN@?9ssl3?$AA@
CONST	SEGMENT
??_C@_05IHFBIKKN@?9ssl3?$AA@ DB '-ssl3', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BIEHJHLL@?9tls1?$AA@
CONST	SEGMENT
??_C@_05BIEHJHLL@?9tls1?$AA@ DB '-tls1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JOEKLLOM@?9ssl2?$AA@
CONST	SEGMENT
??_C@_05JOEKLLOM@?9ssl2?$AA@ DB '-ssl2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BAKPFIIA@?9srppass?$AA@
CONST	SEGMENT
??_C@_08BAKPFIIA@?9srppass?$AA@ DB '-srppass', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CDOPKGGH@?9srpuser?$AA@
CONST	SEGMENT
??_C@_08CDOPKGGH@?9srpuser?$AA@ DB '-srpuser', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@ DB 'Not a hex nu'
	DB	'mber ''%s''', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FOHPLPMO@abcdefABCDEF1234567890?$AA@
CONST	SEGMENT
??_C@_0BH@FOHPLPMO@abcdefABCDEF1234567890?$AA@ DB 'abcdefABCDEF1234567890'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04LLANCHKO@?9psk?$AA@
CONST	SEGMENT
??_C@_04LLANCHKO@?9psk?$AA@ DB '-psk', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09ICIAJIMM@?9no_ecdhe?$AA@
CONST	SEGMENT
??_C@_09ICIAJIMM@?9no_ecdhe?$AA@ DB '-no_ecdhe', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IKMMOABC@?9no_dhe?$AA@
CONST	SEGMENT
??_C@_07IKMMOABC@?9no_dhe?$AA@ DB '-no_dhe', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FEHPCELJ@?9dhe1024dsa?$AA@
CONST	SEGMENT
??_C@_0M@FEHPCELJ@?9dhe1024dsa?$AA@ DB '-dhe1024dsa', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DNAOJJKI@?9dhe512?$AA@
CONST	SEGMENT
??_C@_07DNAOJJKI@?9dhe512?$AA@ DB '-dhe512', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MJBNDFGP@?9reuse?$AA@
CONST	SEGMENT
??_C@_06MJBNDFGP@?9reuse?$AA@ DB '-reuse', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DBLKFNPN@?9d?$AA@
CONST	SEGMENT
??_C@_02DBLKFNPN@?9d?$AA@ DB '-d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02EJEOCNCO@?9v?$AA@
CONST	SEGMENT
??_C@_02EJEOCNCO@?9v?$AA@ DB '-v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IIGCKNBL@?9proxy_cond?$AA@
CONST	SEGMENT
??_C@_0M@IIGCKNBL@?9proxy_cond?$AA@ DB '-proxy_cond', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HAACCACK@?9proxy_auth?$AA@
CONST	SEGMENT
??_C@_0M@HAACCACK@?9proxy_auth?$AA@ DB '-proxy_auth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BMCMBAED@?9client_auth?$AA@
CONST	SEGMENT
??_C@_0N@BMCMBAED@?9client_auth?$AA@ DB '-client_auth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPMAOOPN@?9server_auth?$AA@
CONST	SEGMENT
??_C@_0N@BPMAOOPN@?9server_auth?$AA@ DB '-server_auth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@EAAPDDOI@not?5compiled?5with?5FIPS?5support?0?5@
CONST	SEGMENT
??_C@_0DN@EAAPDDOI@not?5compiled?5with?5FIPS?5support?0?5@ DB 'not compil'
	DB	'ed with FIPS support, so exiting without running.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02JGAIBLNN@?9F?$AA@
CONST	SEGMENT
??_C@_02JGAIBLNN@?9F?$AA@ DB '-F', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCADLMAF@off?$AA@
CONST	SEGMENT
??_C@_03MCADLMAF@off?$AA@ DB 'off', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@
CONST	SEGMENT
??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@ DB 'OPENSSL_DEBUG_MEMORY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IHFIAEOI@?4?4?1apps?1client?4pem?$AA@
CONST	SEGMENT
??_C@_0BD@IHFIAEOI@?4?4?1apps?1client?4pem?$AA@ DB '../apps/client.pem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NNEELGGK@?4?4?1apps?1server?4pem?$AA@
CONST	SEGMENT
??_C@_0BD@NNEELGGK@?4?4?1apps?1server?4pem?$AA@ DB '../apps/server.pem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MCOLHLGK@Test?5Callback?5Argument?$AA@
CONST	SEGMENT
??_C@_0BH@MCOLHLGK@Test?5Callback?5Argument?$AA@ DB 'Test Callback Argume'
	DB	'nt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MDGCFGCO@openssl?5?$CIlock_dbg_cb?$CJ?3?5?$CFs?5?$CImode?$DN@
CONST	SEGMENT
??_C@_0DH@MDGCFGCO@openssl?5?$CIlock_dbg_cb?$CJ?3?5?$CFs?5?$CImode?$DN@ DB 'o'
	DB	'penssl (lock_dbg_cb): %s (mode=%d, type=%d) at %s:%d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LHOFANHL@CRYPTO_w_unlock?5on?5read?5lock?$AA@
CONST	SEGMENT
??_C@_0BN@LHOFANHL@CRYPTO_w_unlock?5on?5read?5lock?$AA@ DB 'CRYPTO_w_unlo'
	DB	'ck on read lock', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MEMMBFGL@CRYPTO_r_unlock?5on?5write?5lock?$AA@
CONST	SEGMENT
??_C@_0BO@MEMMBFGL@CRYPTO_r_unlock?5on?5write?5lock?$AA@ DB 'CRYPTO_r_unl'
	DB	'ock on write lock', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKIDBNLG@not?5locked?$AA@
CONST	SEGMENT
??_C@_0L@CKIDBNLG@not?5locked?$AA@ DB 'not locked', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DLDEBFAD@already?5locked?$AA@
CONST	SEGMENT
??_C@_0P@DLDEBFAD@already?5locked?$AA@ DB 'already locked', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EEHOPEAJ@type?5out?5of?5bounds?$AA@
CONST	SEGMENT
??_C@_0BD@EEHOPEAJ@type?5out?5of?5bounds?$AA@ DB 'type out of bounds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MICJCNHE@invalid?5mode?$AA@
CONST	SEGMENT
??_C@_0N@MICJCNHE@invalid?5mode?$AA@ DB 'invalid mode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CCDEHKFD@?0?5?$CFd?5bit?5DSA?$AA@
CONST	SEGMENT
??_C@_0N@CCDEHKFD@?0?5?$CFd?5bit?5DSA?$AA@ DB ', %d bit DSA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHEGHCBA@?0?5?$CFd?5bit?5RSA?$AA@
CONST	SEGMENT
??_C@_0N@FHEGHCBA@?0?5?$CFd?5bit?5RSA?$AA@ DB ', %d bit RSA', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EMLJCAFF@?$CFs?$CFs?0?5cipher?5?$CFs?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BD@EMLJCAFF@?$CFs?$CFs?0?5cipher?5?$CFs?5?$CFs?$AA@ DB '%s%s, ciph'
	DB	'er %s %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EAMFMDAE@?5?9sn_expect2?5?5?5?5?5?5?5?5?5?5?9?5expected@
CONST	SEGMENT
??_C@_0CL@EAMFMDAE@?5?9sn_expect2?5?5?5?5?5?5?5?5?5?5?9?5expected@ DB ' -'
	DB	'sn_expect2          - expected server 2', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@ILJMHFOC@?5?9sn_expect1?5?5?5?5?5?5?5?5?5?5?9?5expected@
CONST	SEGMENT
??_C@_0CL@ILJMHFOC@?5?9sn_expect1?5?5?5?5?5?5?5?5?5?5?9?5expected@ DB ' -'
	DB	'sn_expect1          - expected server 1', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@PCLIKBM@?5?9sn_server2?5?$DMstring?$DO?5?9?5have?5ser@
CONST	SEGMENT
??_C@_0EK@PCLIKBM@?5?9sn_server2?5?$DMstring?$DO?5?9?5have?5ser@ DB ' -sn'
	DB	'_server2 <string> - have server context 2 respond to this ser'
	DB	'vername', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@LKFPBAGA@?5?9sn_server1?5?$DMstring?$DO?5?9?5have?5ser@
CONST	SEGMENT
??_C@_0EK@LKFPBAGA@?5?9sn_server1?5?$DMstring?$DO?5?9?5have?5ser@ DB ' -s'
	DB	'n_server1 <string> - have server context 1 respond to this se'
	DB	'rvername', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@MLPJCDPH@?5?9sn_client?5?$DMstring?$DO?5?5?9?5have?5cli@
CONST	SEGMENT
??_C@_0DN@MLPJCDPH@?5?9sn_client?5?$DMstring?$DO?5?5?9?5have?5cli@ DB ' -'
	DB	'sn_client <string>  - have client request this servername', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@PMPLADGC@?5?9alpn_expected?5?$DMstring?$DO?5?9?5the?5A@
CONST	SEGMENT
??_C@_0EI@PMPLADGC@?5?9alpn_expected?5?$DMstring?$DO?5?9?5the?5A@ DB ' -a'
	DB	'lpn_expected <string> - the ALPN protocol that should be nego'
	DB	'tiated', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@NFIOLKJE@?5?9alpn_server2?5?$DMstring?$DO?5?9?5have?5s@
CONST	SEGMENT
??_C@_0EB@NFIOLKJE@?5?9alpn_server2?5?$DMstring?$DO?5?9?5have?5s@ DB ' -a'
	DB	'lpn_server2 <string> - have server side context 2 offer ALPN', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@NCPACCEJ@?5?9alpn_server1?5?$DMstring?$DO?5?9?5alias?5@
CONST	SEGMENT
??_C@_0DC@NCPACCEJ@?5?9alpn_server1?5?$DMstring?$DO?5?9?5alias?5@ DB ' -a'
	DB	'lpn_server1 <string> - alias for -alpn_server', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@DAGJDFIA@?5?9alpn_server?5?$DMstring?$DO?5?9?5have?5se@
CONST	SEGMENT
??_C@_0DG@DAGJDFIA@?5?9alpn_server?5?$DMstring?$DO?5?9?5have?5se@ DB ' -a'
	DB	'lpn_server <string> - have server side offer ALPN', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@DDNEDIHP@?5?9alpn_client?5?$DMstring?$DO?5?9?5have?5cl@
CONST	SEGMENT
??_C@_0DG@DDNEDIHP@?5?9alpn_client?5?$DMstring?$DO?5?9?5have?5cl@ DB ' -a'
	DB	'lpn_client <string> - have client side offer ALPN', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@EMEGIEJJ@?5?9custom_ext?5?9?5try?5various?5custo@
CONST	SEGMENT
??_C@_0DH@EMEGIEJJ@?5?9custom_ext?5?9?5try?5various?5custo@ DB ' -custom_'
	DB	'ext - try various custom extension callbacks', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MDGDJJFA@?5?9serverinfo_tack?5?9?5have?5client?5@
CONST	SEGMENT
??_C@_0DH@MDGDJJFA@?5?9serverinfo_tack?5?9?5have?5client?5@ DB ' -serveri'
	DB	'nfo_tack - have client offer and expect TACK', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@FHEELKCM@?5?9serverinfo_sct?5?5?9?5have?5client?5@
CONST	SEGMENT
??_C@_0DG@FHEELKCM@?5?9serverinfo_sct?5?5?9?5have?5client?5@ DB ' -server'
	DB	'info_sct  - have client offer and expect SCT', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BFLHBEMG@?5?9serverinfo_file?5file?5?9?5have?5se@
CONST	SEGMENT
??_C@_0DE@BFLHBEMG@?5?9serverinfo_file?5file?5?9?5have?5se@ DB ' -serveri'
	DB	'nfo_file file - have server use this file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0MB@JEFMBCOB@?5?9test_cipherlist?5?9?5Verifies?5the@
CONST	SEGMENT
??_C@_0MB@JEFMBCOB@?5?9test_cipherlist?5?9?5Verifies?5the@ DB ' -test_cip'
	DB	'herlist - Verifies the order of the ssl cipher lists.', 0aH, ' '
	DB	'                   When this option is requested, the cipherl'
	DB	'ist', 0aH, '                    tests are run instead of hand'
	DB	'shake tests.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0LF@BAOACMLD@?5?9named_curve?5arg?5?5?9?5Elliptic?5cu@
CONST	SEGMENT
??_C@_0LF@BAOACMLD@?5?9named_curve?5arg?5?5?9?5Elliptic?5cu@ DB ' -named_'
	DB	'curve arg  - Elliptic curve name to use for ephemeral ECDH ke'
	DB	'ys.', 0aH, '                 Use "openssl ecparam -list_curve'
	DB	's" for all names', 0aH, '                 (default is sect163'
	DB	'r2).', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PDPMGBPE@?5?9rle?5?5?5?5?5?5?5?5?5?5?9?5use?5rle?5compres@
CONST	SEGMENT
??_C@_0CG@PDPMGBPE@?5?9rle?5?5?5?5?5?5?5?5?5?5?9?5use?5rle?5compres@ DB ' '
	DB	'-rle          - use rle compression', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@FBLDGFJA@?5?9zlib?5?5?5?5?5?5?5?5?5?9?5use?5zlib?5compre@
CONST	SEGMENT
??_C@_0CH@FBLDGFJA@?5?9zlib?5?5?5?5?5?5?5?5?5?9?5use?5zlib?5compre@ DB ' '
	DB	'-zlib         - use zlib compression', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@CEOMPCAE@?5?9time?5?5?5?5?5?5?5?5?5?9?5measure?5process@
CONST	SEGMENT
??_C@_0ED@CEOMPCAE@?5?9time?5?5?5?5?5?5?5?5?5?9?5measure?5process@ DB ' -'
	DB	'time         - measure processor time used by client and serv'
	DB	'er', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@FAEAMCHH@?5?9f?5?5?5?5?5?5?5?5?5?5?5?5?9?5Test?5even?5cases@
CONST	SEGMENT
??_C@_0DC@FAEAMCHH@?5?9f?5?5?5?5?5?5?5?5?5?5?5?5?9?5Test?5even?5cases@ DB ' '
	DB	'-f            - Test even cases that can''t work', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FDOIHLLN@?5?9bio_pair?5?5?5?5?5?9?5Use?5BIO?5pairs?6?$AA@
CONST	SEGMENT
??_C@_0CA@FDOIHLLN@?5?9bio_pair?5?5?5?5?5?9?5Use?5BIO?5pairs?6?$AA@ DB ' '
	DB	'-bio_pair     - Use BIO pairs', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DDIGJDCK@?5?9cipher?5arg?5?5?5?9?5The?5cipher?5list@
CONST	SEGMENT
??_C@_0CC@DDIGJDCK@?5?9cipher?5arg?5?5?5?9?5The?5cipher?5list@ DB ' -ciph'
	DB	'er arg   - The cipher list', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@MOLPFIGN@?5?9c_key?5arg?5?5?5?5?9?5Client?5key?5file@
CONST	SEGMENT
??_C@_0DN@MOLPFIGN@?5?9c_key?5arg?5?5?5?5?9?5Client?5key?5file@ DB ' -c_k'
	DB	'ey arg    - Client key file (default: same as -c_cert)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@LCAFHNEP@?5?9c_cert?5arg?5?5?5?9?5Client?5certific@
CONST	SEGMENT
??_C@_0CK@LCAFHNEP@?5?9c_cert?5arg?5?5?5?9?5Client?5certific@ DB ' -c_cer'
	DB	't arg   - Client certificate file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@DKOEDAPF@?5?9key?5arg?5?5?5?5?5?5?9?5Server?5key?5file@
CONST	SEGMENT
??_C@_0DL@DKOEDAPF@?5?9key?5arg?5?5?5?5?5?5?9?5Server?5key?5file@ DB ' -k'
	DB	'ey arg      - Server key file (default: same as -cert)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@JOGLHHEA@?5?9cert?5arg?5?5?5?5?5?9?5Server?5certific@
CONST	SEGMENT
??_C@_0CK@JOGLHHEA@?5?9cert?5arg?5?5?5?5?5?9?5Server?5certific@ DB ' -cer'
	DB	't arg     - Server certificate file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@
CONST	SEGMENT
??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@ DB ' -CAfi'
	DB	'le arg   - PEM format file of CA''s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@
CONST	SEGMENT
??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@ DB ' -CApa'
	DB	'th arg   - PEM format directory of CA''s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BMMAPGGG@?5?9dtls12?5?5?5?5?5?5?5?9?5use?5DTLSv1?42?6?$AA@
CONST	SEGMENT
??_C@_0BP@BMMAPGGG@?5?9dtls12?5?5?5?5?5?5?5?9?5use?5DTLSv1?42?6?$AA@ DB ' '
	DB	'-dtls12       - use DTLSv1.2', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@JFGFCCMG@?5?9dtls1?5?5?5?5?5?5?5?5?9?5use?5DTLSv1?6?$AA@
CONST	SEGMENT
??_C@_0BN@JFGFCCMG@?5?9dtls1?5?5?5?5?5?5?5?5?9?5use?5DTLSv1?6?$AA@ DB ' -'
	DB	'dtls1        - use DTLSv1', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JKGOOFMB@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5use?5TLSv1?6?$AA@
CONST	SEGMENT
??_C@_0BM@JKGOOFMB@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5use?5TLSv1?6?$AA@ DB ' -'
	DB	'tls1         - use TLSv1', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FPBKCLHG@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5use?5SSLv3?6?$AA@
CONST	SEGMENT
??_C@_0BM@FPBKCLHG@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5use?5SSLv3?6?$AA@ DB ' -'
	DB	'ssl3         - use SSLv3', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OKHIGFD@?5?9srppass?5arg?5?5?5?9?5password?5for?5?8@
CONST	SEGMENT
??_C@_0CH@OKHIGFD@?5?9srppass?5arg?5?5?5?9?5password?5for?5?8@ DB ' -srpp'
	DB	'ass arg   - password for ''user''', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@CBJNEKIG@?5?9srpuser?5user?5?5?9?5SRP?5username?5t@
CONST	SEGMENT
??_C@_0CH@CBJNEKIG@?5?9srpuser?5user?5?5?9?5SRP?5username?5t@ DB ' -srpus'
	DB	'er user  - SRP username to use', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@
CONST	SEGMENT
??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@ DB ' '
	DB	'-psk arg      - PSK in hex (without 0x)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FLJCFEIA@?5?9no_ecdhe?5?5?5?5?5?9?5disable?5ECDHE?6?$AA@
CONST	SEGMENT
??_C@_0CA@FLJCFEIA@?5?9no_ecdhe?5?5?5?5?5?9?5disable?5ECDHE?6?$AA@ DB ' -'
	DB	'no_ecdhe     - disable ECDHE', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CPDJNGK@?5?9no_dhe?5?5?5?5?5?5?5?9?5disable?5DHE?6?$AA@
CONST	SEGMENT
??_C@_0BO@CPDJNGK@?5?9no_dhe?5?5?5?5?5?5?5?9?5disable?5DHE?6?$AA@ DB ' -n'
	DB	'o_dhe       - disable DHE', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@JGBLHOEA@?5?9dhe1024dsa?5?5?5?9?5use?51024?5bit?5ke@
CONST	SEGMENT
??_C@_0ED@JGBLHOEA@?5?9dhe1024dsa?5?5?5?9?5use?51024?5bit?5ke@ DB ' -dhe1'
	DB	'024dsa   - use 1024 bit key (with 160-bit subprime) for DHE', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@IKLOHAGP@?5?9dhe1024?5?5?5?5?5?5?9?5use?51024?5bit?5ke@
CONST	SEGMENT
??_C@_0EJ@IKLOHAGP@?5?9dhe1024?5?5?5?5?5?5?9?5use?51024?5bit?5ke@ DB ' -d'
	DB	'he1024      - use 1024 bit key (safe prime) for DHE (default,'
	DB	' no-op)', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@DOOFKMLI@?5?9dhe512?5?5?5?5?5?5?5?9?5use?5512?5bit?5key@
CONST	SEGMENT
??_C@_0DM@DOOFKMLI@?5?9dhe512?5?5?5?5?5?5?5?9?5use?5512?5bit?5key@ DB ' -'
	DB	'dhe512       - use 512 bit key for DHE (to test failure)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@DNBAKJOI@?5?9bytes?5?$DMval?$DO?5?5?9?5number?5of?5bytes@
CONST	SEGMENT
??_C@_0EA@DNBAKJOI@?5?9bytes?5?$DMval?$DO?5?5?9?5number?5of?5bytes@ DB ' '
	DB	'-bytes <val>  - number of bytes to swap between client/server'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@FHELCBIE@?5?9num?5?$DMval?$DO?5?5?5?5?9?5number?5of?5conne@
CONST	SEGMENT
??_C@_0DD@FHELCBIE@?5?9num?5?$DMval?$DO?5?5?5?5?9?5number?5of?5conne@ DB ' '
	DB	'-num <val>    - number of connections to perform', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LDEMPAJB@?5?9reuse?5?5?5?5?5?5?5?5?9?5use?5session?9id?5@
CONST	SEGMENT
??_C@_0CH@LDEMPAJB@?5?9reuse?5?5?5?5?5?5?5?5?9?5use?5session?9id?5@ DB ' '
	DB	'-reuse        - use session-id reuse', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KKJLIBGH@?5?9d?5?5?5?5?5?5?5?5?5?5?5?5?9?5debug?5output?6?$AA@
CONST	SEGMENT
??_C@_0BP@KKJLIBGH@?5?9d?5?5?5?5?5?5?5?5?5?5?5?5?9?5debug?5output?6?$AA@ DB ' '
	DB	'-d            - debug output', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LNEKJLCH@?5?9v?5?5?5?5?5?5?5?5?5?5?5?5?9?5more?5output?6?$AA@
CONST	SEGMENT
??_C@_0BO@LNEKJLCH@?5?9v?5?5?5?5?5?5?5?5?5?5?5?5?9?5more?5output?6?$AA@ DB ' '
	DB	'-v            - more output', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@ELCOPDJH@?5?9proxy_cond?5?$DMval?$DO?5?9?5expression?5@
CONST	SEGMENT
??_C@_0DN@ELCOPDJH@?5?9proxy_cond?5?$DMval?$DO?5?9?5expression?5@ DB ' -p'
	DB	'roxy_cond <val> - expression to test proxy policy rights', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@JFHLELAM@?5?9proxy_auth?5?$DMval?$DO?5?9?5set?5proxy?5p@
CONST	SEGMENT
??_C@_0CO@JFHLELAM@?5?9proxy_auth?5?$DMval?$DO?5?9?5set?5proxy?5p@ DB ' -'
	DB	'proxy_auth <val> - set proxy policy rights', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EHEHBOCL@?5?9proxy?5?5?5?5?5?5?5?5?9?5allow?5proxy?5cer@
CONST	SEGMENT
??_C@_0CL@EHEHBOCL@?5?9proxy?5?5?5?5?5?5?5?5?9?5allow?5proxy?5cer@ DB ' -'
	DB	'proxy        - allow proxy certificates', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@FMPDDGAH@?5?9client_auth?5?5?9?5do?5client?5authe@
CONST	SEGMENT
??_C@_0CL@FMPDDGAH@?5?9client_auth?5?5?9?5do?5client?5authe@ DB ' -client'
	DB	'_auth  - do client authentication', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@KPPMKCMB@?5?9server_auth?5?5?9?5check?5server?5ce@
CONST	SEGMENT
??_C@_0CL@KPPMKCMB@?5?9server_auth?5?5?9?5check?5server?5ce@ DB ' -server'
	DB	'_auth  - check server certificate', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GGPCPHOI@usage?3?5ssltest?5?$FLargs?5?4?4?4?$FN?6?$AA@
CONST	SEGMENT
??_C@_0BL@GGPCPHOI@usage?3?5ssltest?5?$FLargs?5?4?4?4?$FN?6?$AA@ DB 'usag'
	DB	'e: ssltest [args ...]', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IIMANPGO@unknown?6?$AA@
CONST	SEGMENT
??_C@_08IIMANPGO@unknown?6?$AA@ DB 'unknown', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05ODNCHMDL@?8?$CFs?8?6?$AA@
CONST	SEGMENT
??_C@_05ODNCHMDL@?8?$CFs?8?6?$AA@ DB '''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@DLCNJPBJ@ALPN?5configured?3?5client?3?5?8?$CFs?8?0?5s@
CONST	SEGMENT
??_C@_0CI@DLCNJPBJ@ALPN?5configured?3?5client?3?5?8?$CFs?8?0?5s@ DB 'ALPN'
	DB	' configured: client: ''%s'', server: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02MHFDJOAC@?8?6?$AA@
CONST	SEGMENT
??_C@_02MHFDJOAC@?8?6?$AA@ DB '''', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GJFDKFPE@?8?0?5server?3?5?8?$AA@
CONST	SEGMENT
??_C@_0N@GJFDKFPE@?8?0?5server?3?5?8?$AA@ DB ''', server: ''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GDHCJMFJ@ALPN?5results?3?5client?3?5?8?$AA@
CONST	SEGMENT
??_C@_0BI@GDHCJMFJ@ALPN?5results?3?5client?3?5?8?$AA@ DB 'ALPN results: c'
	DB	'lient: ''', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@IEIAPLJD@ALPN?5selected?5protocols?5not?5equa@
CONST	SEGMENT
??_C@_0DM@IEIAPLJD@ALPN?5selected?5protocols?5not?5equa@ DB 'ALPN selecte'
	DB	'd protocols not equal to expected protocol: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KEEBEKHB@ALPN?5unexpectedly?5negotiated?6?$AA@
CONST	SEGMENT
??_C@_0BO@KEEBEKHB@ALPN?5unexpectedly?5negotiated?6?$AA@ DB 'ALPN unexpec'
	DB	'tedly negotiated', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KGHNKKJC@ALPN?5selected?5protocols?5differ?$CB?6@
CONST	SEGMENT
??_C@_0CB@KGHNKKJC@ALPN?5selected?5protocols?5differ?$CB?6@ DB 'ALPN sele'
	DB	'cted protocols differ!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@HAPGMDBF@failed?5to?5parser?5ALPN?5server?5pro@
CONST	SEGMENT
??_C@_0DC@HAPGMDBF@failed?5to?5parser?5ALPN?5server?5pro@ DB 'failed to p'
	DB	'arser ALPN server protocol string: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@
CONST	SEGMENT
??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@ DB '.\ssl\ssltest.c', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KKFBJFHF@Servername?3?5context?5is?5unknown?6?$AA@
CONST	SEGMENT
??_C@_0CA@KKFBJFHF@Servername?3?5context?5is?5unknown?6?$AA@ DB 'Serverna'
	DB	'me: context is unknown', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HOPKBHLI@Servername?3?5context?5is?51?6?$AA@
CONST	SEGMENT
??_C@_0BK@HOPKBHLI@Servername?3?5context?5is?51?6?$AA@ DB 'Servername: co'
	DB	'ntext is 1', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HMLMKJOB@Servername?3?5context?5is?52?6?$AA@
CONST	SEGMENT
??_C@_0BK@HMLMKJOB@Servername?3?5context?5is?52?6?$AA@ DB 'Servername: co'
	DB	'ntext is 2', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KHCLOBAB@Servername?3?5expected?5context?5?$CFd?6@
CONST	SEGMENT
??_C@_0CB@KHCLOBAB@Servername?3?5expected?5context?5?$CFd?6@ DB 'Serverna'
	DB	'me: expected context %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IKCLJGPN@Switching?5server?5context?4?6?$AA@
CONST	SEGMENT
??_C@_0BL@IKCLJGPN@Switching?5server?5context?4?6?$AA@ DB 'Switching serv'
	DB	'er context.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NHIDIELG@Servername?52?5is?5NULL?6?$AA@
CONST	SEGMENT
??_C@_0BG@NHIDIELG@Servername?52?5is?5NULL?6?$AA@ DB 'Servername 2 is NUL'
	DB	'L', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04MJHCKDHM@1024?$AA@
CONST	SEGMENT
??_C@_04MJHCKDHM@1024?$AA@ DB '1024', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EHOAHANM@User?5?$CFs?5doesn?8t?5exist?6?$AA@
CONST	SEGMENT
??_C@_0BH@EHOAHANM@User?5?$CFs?5doesn?8t?5exist?6?$AA@ DB 'User %s doesn'''
	DB	't exist', 0aH, 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _psk_key2bn
_TEXT	SEGMENT
_bn$ = -4						; size = 4
_pskkey$ = 8						; size = 4
_psk$ = 12						; size = 4
_max_psk_len$ = 16					; size = 4
_psk_key2bn PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 3080
	mov	eax, 4
	call	__chkstk
	push	esi
; Line 3084
	mov	esi, DWORD PTR _pskkey$[esp+4]
	lea	eax, DWORD PTR _bn$[esp+8]
	push	esi
	push	eax
	mov	DWORD PTR _bn$[esp+16], 0
	call	_BN_hex2bn
	add	esp, 8
; Line 3085
	test	eax, eax
	jne	SHORT $LN2@psk_key2bn
; Line 3086
	push	esi
	push	OFFSET ??_C@_0CK@HBBICGCE@Could?5not?5convert?5PSK?5key?5?8?$CFs?8?5t@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 3088
	mov	eax, DWORD PTR _bn$[esp+20]
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@psk_key2bn
; Line 3089
	push	eax
	call	_BN_free
	add	esp, 4
$LN3@psk_key2bn:
; Line 3090
	xor	eax, eax
	pop	esi
; Line 3102
	pop	ecx
	ret	0
$LN2@psk_key2bn:
; Line 3092
	push	DWORD PTR _bn$[esp+8]
	call	_BN_num_bits
	mov	esi, DWORD PTR _max_psk_len$[esp+8]
	add	eax, 7
	cdq
	add	esp, 4
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	cmp	eax, esi
	jle	SHORT $LN4@psk_key2bn
; Line 3093
	push	DWORD PTR _bn$[esp+8]
	call	_BN_num_bits
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	push	eax
	push	esi
	push	OFFSET ??_C@_0DH@NJMHFIPN@psk?5buffer?5of?5callback?5is?5too?5sm@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 3096
	push	DWORD PTR _bn$[esp+28]
	call	_BN_free
	add	esp, 24					; 00000018H
; Line 3097
	xor	eax, eax
	pop	esi
; Line 3102
	pop	ecx
	ret	0
$LN4@psk_key2bn:
; Line 3099
	push	DWORD PTR _psk$[esp+4]
	push	DWORD PTR _bn$[esp+12]
	call	_BN_bn2bin
; Line 3100
	push	DWORD PTR _bn$[esp+16]
	mov	esi, eax
	call	_BN_free
	add	esp, 12					; 0000000cH
; Line 3101
	mov	eax, esi
	pop	esi
; Line 3102
	pop	ecx
	ret	0
_psk_key2bn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _process_proxy_cond
_TEXT	SEGMENT
_pos$ = -4						; size = 4
_letters$ = 8						; size = 4
_cond$ = 12						; size = 4
_cond_end$ = 16						; size = 4
_process_proxy_cond PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2808
	mov	eax, 4
	call	__chkstk
; Line 2810
	push	1
	lea	eax, DWORD PTR _pos$[esp+8]
	mov	DWORD PTR _pos$[esp+8], 1
	push	eax
	push	DWORD PTR _cond_end$[esp+8]
	push	DWORD PTR _cond$[esp+12]
	push	DWORD PTR _letters$[esp+16]
	call	_process_proxy_cond_adders
; Line 2811
	add	esp, 24					; 00000018H
	ret	0
_process_proxy_cond ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _process_proxy_cond_multipliers
_TEXT	SEGMENT
_c$1$ = -9						; size = 1
_save_ok$1$ = -8					; size = 4
tv234 = -4						; size = 4
_letters$ = 8						; size = 4
_cond$ = 12						; size = 4
_cond_end$ = 16						; size = 4
_pos$ = 20						; size = 4
_indent$ = 24						; size = 4
_process_proxy_cond_multipliers PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2679
	mov	eax, 12					; 0000000cH
	call	__chkstk
; Line 2683
	cmp	DWORD PTR _debug, 0
	push	ebx
; Line 2684
	mov	ebx, DWORD PTR _indent$[esp+12]
	push	ebp
	push	esi
	mov	esi, DWORD PTR _cond$[esp+20]
	push	edi
	mov	edi, DWORD PTR _pos$[esp+24]
	je	SHORT $LN10@process_pr
	push	esi
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0DJ@OCFMOPNL@Start?5process_proxy_cond_multipl@
	push	ebx
	call	_process_proxy_debug
	add	esp, 16					; 00000010H
$LN10@process_pr:
; Line 2688
	mov	ebp, DWORD PTR _cond_end$[esp+24]
	lea	eax, DWORD PTR [ebx+1]
	push	eax
	push	edi
	push	ebp
	push	esi
	push	DWORD PTR _letters$[esp+40]
	mov	DWORD PTR tv234[esp+48], eax
	call	_process_proxy_cond_val
; Line 2689
	mov	esi, DWORD PTR [ebp]
	mov	ebx, eax
	add	esp, 20					; 00000014H
; Line 2690
	test	ebx, ebx
	js	$end$38
	mov	ebp, DWORD PTR __imp__isspace
$LL2@process_pr:
; Line 2694
	movsx	ecx, BYTE PTR [esi]
	push	ecx
	call	ebp
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@process_pr
	npad	1
$LL4@process_pr:
; Line 2696
	inc	DWORD PTR [edi]
	inc	esi
	movsx	eax, BYTE PTR [esi]
	push	eax
	call	ebp
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL4@process_pr
$LN5@process_pr:
; Line 2698
	mov	al, BYTE PTR [esi]
	mov	BYTE PTR _c$1$[esp+28], al
; Line 2700
	cmp	al, 38					; 00000026H
	je	SHORT $LN12@process_pr
	cmp	al, 94					; 0000005eH
	jne	SHORT $LN31@process_pr
$LN12@process_pr:
; Line 2708
	push	DWORD PTR tv234[esp+28]
	inc	DWORD PTR [edi]
	inc	esi
	push	edi
	push	DWORD PTR _cond_end$[esp+32]
	mov	DWORD PTR _save_ok$1$[esp+40], ebx
	push	esi
	push	DWORD PTR _letters$[esp+40]
	call	_process_proxy_cond_val
	mov	ebx, eax
	add	esp, 20					; 00000014H
; Line 2710
	mov	eax, DWORD PTR _cond_end$[esp+24]
	mov	esi, DWORD PTR [eax]
; Line 2711
	test	ebx, ebx
	js	SHORT $LN33@process_pr
; Line 2714
	mov	al, BYTE PTR _c$1$[esp+28]
	cmp	al, 38					; 00000026H
	je	SHORT $LN14@process_pr
	cmp	al, 94					; 0000005eH
	jne	SHORT $LN23@process_pr
; Line 2719
	xor	ebx, DWORD PTR _save_ok$1$[esp+28]
; Line 2720
	jmp	SHORT $LN8@process_pr
$LN14@process_pr:
; Line 2716
	and	ebx, DWORD PTR _save_ok$1$[esp+28]
$LN8@process_pr:
; Line 2693
	test	ebx, ebx
	jns	SHORT $LL2@process_pr
$LN31@process_pr:
	mov	ebp, DWORD PTR _cond_end$[esp+24]
	jmp	SHORT $end$38
$LN23@process_pr:
; Line 2722
	push	OFFSET ??_C@_0CI@LMCBPGM@SOMETHING?5IS?5SERIOUSLY?5WRONG?$CB?5ST@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2724
	push	1
	call	DWORD PTR __imp__exit
$LN37@process_pr:
$LN33@process_pr:
	mov	ebp, eax
$end$38:
; Line 2733
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN18@process_pr
; Line 2734
	push	ebx
	push	esi
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0EF@GDLBFBIF@End?5process_proxy_cond_multiplie@
	push	DWORD PTR _indent$[esp+40]
	call	_process_proxy_debug
	add	esp, 20					; 00000014H
$LN18@process_pr:
; Line 2738
	pop	edi
	mov	DWORD PTR [ebp], esi
; Line 2739
	mov	eax, ebx
	pop	esi
	pop	ebp
	pop	ebx
; Line 2740
	add	esp, 12					; 0000000cH
	ret	0
$LN36@process_pr:
_process_proxy_cond_multipliers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _process_proxy_cond_val
_TEXT	SEGMENT
_negate$1$ = -4						; size = 4
_letters$ = 8						; size = 4
_cond$ = 12						; size = 4
_cond_end$ = 16						; size = 4
_pos$ = 20						; size = 4
_indent$ = 24						; size = 4
_process_proxy_cond_val PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2601
	mov	eax, 4
	call	__chkstk
	push	ebx
; Line 2606
	mov	ebx, DWORD PTR __imp__isspace
	push	ebp
	push	esi
	mov	esi, DWORD PTR _cond$[esp+12]
	push	edi
	mov	DWORD PTR _negate$1$[esp+20], 0
	movsx	eax, BYTE PTR [esi]
	push	eax
	call	ebx
	mov	edi, DWORD PTR _pos$[esp+20]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@process_pr
$LL2@process_pr:
; Line 2608
	inc	DWORD PTR [edi]
	inc	esi
	movsx	eax, BYTE PTR [esi]
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL2@process_pr
$LN3@process_pr:
; Line 2612
	cmp	DWORD PTR _debug, 0
	movsx	ebp, BYTE PTR [esi]
	je	SHORT $LN78@process_pr
; Line 2613
	push	esi
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0DB@EEKDFGI@Start?5process_proxy_cond_val?5at?5@
	push	DWORD PTR _indent$[esp+28]
	call	_process_proxy_debug
	add	esp, 16					; 00000010H
$LN78@process_pr:
; Line 2617
	cmp	ebp, 33					; 00000021H
	jne	SHORT $LN5@process_pr
$LL4@process_pr:
; Line 2618
	xor	eax, eax
	cmp	DWORD PTR _negate$1$[esp+20], eax
	sete	al
; Line 2620
	inc	DWORD PTR [edi]
	inc	esi
	mov	DWORD PTR _negate$1$[esp+20], eax
; Line 2621
	movsx	eax, BYTE PTR [esi]
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN7@process_pr
$LL6@process_pr:
; Line 2623
	inc	DWORD PTR [edi]
	inc	esi
	movsx	eax, BYTE PTR [esi]
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL6@process_pr
$LN7@process_pr:
; Line 2625
	movsx	ebp, BYTE PTR [esi]
	cmp	ebp, 33					; 00000021H
	je	SHORT $LL4@process_pr
$LN5@process_pr:
; Line 2628
	cmp	ebp, 40					; 00000028H
	jne	SHORT $LN11@process_pr
; Line 2631
	mov	eax, DWORD PTR _indent$[esp+16]
	inc	esi
	inc	DWORD PTR [edi]
	inc	eax
	push	eax
	push	edi
	push	DWORD PTR _cond_end$[esp+24]
	push	esi
	push	DWORD PTR _letters$[esp+32]
	call	_process_proxy_cond_adders
; Line 2633
	mov	esi, DWORD PTR _cond_end$[esp+36]
	mov	ebp, eax
	add	esp, 20					; 00000014H
	mov	esi, DWORD PTR [esi]
; Line 2634
	test	ebp, ebp
	js	$end$95
; Line 2636
	movsx	eax, BYTE PTR [esi]
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN9@process_pr
$LL8@process_pr:
; Line 2638
	inc	DWORD PTR [edi]
	inc	esi
	movsx	eax, BYTE PTR [esi]
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL8@process_pr
$LN9@process_pr:
; Line 2640
	movsx	eax, BYTE PTR [esi]
; Line 2641
	cmp	eax, 41					; 00000029H
	je	SHORT $LN14@process_pr
; Line 2642
	push	eax
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0CO@FIOGHHBH@Weird?5condition?5character?5in?5pos@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2663
	mov	eax, DWORD PTR _cond_end$[esp+32]
	add	esp, 16					; 00000010H
	or	ebp, -1
	mov	DWORD PTR [eax], esi
	jmp	SHORT $LN18@process_pr
$LN11@process_pr:
; Line 2650
	cmp	ebp, 128				; 00000080H
	jae	SHORT $LN15@process_pr
	push	ebp
	call	DWORD PTR __imp__isalpha
	add	esp, 4
	test	eax, eax
	je	SHORT $LN15@process_pr
; Line 2651
	push	ebp
	call	DWORD PTR __imp__islower
	add	esp, 4
	test	eax, eax
	je	SHORT $LN17@process_pr
; Line 2652
	push	ebp
	call	DWORD PTR __imp__toupper
	add	esp, 4
	mov	ebp, eax
$LN17@process_pr:
; Line 2653
	mov	ecx, DWORD PTR _letters$[esp+16]
	mov	ebp, DWORD PTR [ecx+ebp*4-260]
$LN14@process_pr:
; Line 2654
	inc	esi
; Line 2655
	inc	DWORD PTR [edi]
; Line 2656
	jmp	SHORT $end$95
$LN15@process_pr:
; Line 2657
	push	ebp
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0CO@FIOGHHBH@Weird?5condition?5character?5in?5pos@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 2659
	or	ebp, -1
$end$95:
; Line 2663
	mov	ebx, DWORD PTR _cond_end$[esp+16]
	mov	DWORD PTR [ebx], esi
; Line 2664
	test	ebp, ebp
	js	SHORT $LN18@process_pr
	cmp	DWORD PTR _negate$1$[esp+20], 0
	je	SHORT $LN18@process_pr
; Line 2665
	xor	eax, eax
	test	ebp, ebp
	sete	al
	mov	ebp, eax
$LN18@process_pr:
; Line 2667
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN93@process_pr
; Line 2668
	push	ebp
	push	esi
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0DN@CBLGJPDH@End?5process_proxy_cond_val?5at?5po@
	push	DWORD PTR _indent$[esp+32]
	call	_process_proxy_debug
	add	esp, 20					; 00000014H
$LN93@process_pr:
; Line 2672
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 2673
	pop	ecx
	ret	0
_process_proxy_cond_val ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _process_proxy_cond_adders
_TEXT	SEGMENT
tv212 = -8						; size = 4
_save_ok$1$ = -4					; size = 4
_letters$ = 8						; size = 4
_cond$ = 12						; size = 4
_cond_end$ = 16						; size = 4
_pos$ = 20						; size = 4
_indent$ = 24						; size = 4
_process_proxy_cond_adders PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2745
	mov	eax, 8
	call	__chkstk
; Line 2749
	cmp	DWORD PTR _debug, 0
	push	ebx
; Line 2750
	mov	ebx, DWORD PTR _indent$[esp+8]
	push	ebp
	push	esi
	mov	esi, DWORD PTR _cond$[esp+16]
	push	edi
	mov	edi, DWORD PTR _pos$[esp+20]
	je	SHORT $LN10@process_pr
	push	esi
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0DE@JLNBHHLB@Start?5process_proxy_cond_adders?5@
	push	ebx
	call	_process_proxy_debug
	add	esp, 16					; 00000010H
$LN10@process_pr:
; Line 2754
	lea	eax, DWORD PTR [ebx+1]
	mov	ebx, DWORD PTR _cond_end$[esp+20]
	push	eax
	push	edi
	push	ebx
	push	esi
	push	DWORD PTR _letters$[esp+36]
	mov	DWORD PTR tv212[esp+44], eax
	call	_process_proxy_cond_multipliers
; Line 2756
	mov	esi, DWORD PTR [ebx]
	mov	ebp, eax
	add	esp, 20					; 00000014H
; Line 2757
	test	ebp, ebp
	js	SHORT $end$34
	mov	ebx, DWORD PTR __imp__isspace
	npad	3
$LL2@process_pr:
; Line 2761
	movsx	ecx, BYTE PTR [esi]
	push	ecx
	call	ebx
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@process_pr
	npad	3
$LL4@process_pr:
; Line 2763
	inc	DWORD PTR [edi]
	inc	esi
	movsx	eax, BYTE PTR [esi]
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LL4@process_pr
$LN5@process_pr:
; Line 2767
	cmp	BYTE PTR [esi], 124			; 0000007cH
	jne	SHORT $LN31@process_pr
; Line 2774
	push	DWORD PTR tv212[esp+24]
	inc	DWORD PTR [edi]
	inc	esi
	push	edi
	push	DWORD PTR _cond_end$[esp+28]
	mov	DWORD PTR _save_ok$1$[esp+36], ebp
	push	esi
	push	DWORD PTR _letters$[esp+36]
	call	_process_proxy_cond_multipliers
	mov	ebp, eax
	add	esp, 20					; 00000014H
; Line 2777
	mov	eax, DWORD PTR _cond_end$[esp+20]
	mov	esi, DWORD PTR [eax]
; Line 2778
	test	ebp, ebp
	js	SHORT $LN31@process_pr
; Line 2783
	or	ebp, DWORD PTR _save_ok$1$[esp+24]
; Line 2760
	jge	SHORT $LL2@process_pr
$LN31@process_pr:
	mov	ebx, DWORD PTR _cond_end$[esp+20]
$end$34:
; Line 2797
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN30@process_pr
; Line 2798
	push	ebp
	push	esi
	push	DWORD PTR [edi]
	push	OFFSET ??_C@_0EA@GFHJPKCC@End?5process_proxy_cond_adders?5at@
	push	DWORD PTR _indent$[esp+36]
	call	_process_proxy_debug
	add	esp, 20					; 00000014H
$LN30@process_pr:
; Line 2802
	pop	edi
	mov	DWORD PTR [ebx], esi
; Line 2803
	mov	eax, ebp
	pop	esi
	pop	ebp
	pop	ebx
; Line 2804
	add	esp, 8
	ret	0
_process_proxy_cond_adders ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _process_proxy_debug
_TEXT	SEGMENT
_my_format$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_indent$ = 8						; size = 4
_format$ = 12						; size = 4
_process_proxy_debug PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2574
	mov	eax, 260				; 00000104H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+260], eax
; Line 2582
	push	DWORD PTR _format$[esp+256]
	mov	eax, DWORD PTR _indent$[esp+260]
	push	OFFSET ?indentation@?1??process_proxy_debug@@9@9
	push	eax
	push	eax
	push	OFFSET ??_C@_08KEEHKNKN@?$CF?$CK?4?$CKs?5?$CFs?$AA@
	lea	eax, DWORD PTR _my_format$[esp+280]
	push	256					; 00000100H
	push	eax
	call	_BIO_snprintf
; Line 2586
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 32					; 00000020H
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	ecx, DWORD PTR _format$[esp+260]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _my_format$[esp+268]
	push	ecx
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2588
	mov	ecx, DWORD PTR __$ArrayPad$[esp+284]
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	add	esp, 24					; 00000018H
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2588
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	ret	0
_process_proxy_debug ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_proxy_auth_ex_data_idx
_TEXT	SEGMENT
_get_proxy_auth_ex_data_idx PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2440
	cmp	DWORD PTR ?idx@?1??get_proxy_auth_ex_data_idx@@9@9, 0
	jge	SHORT $LN5@get_proxy_
; Line 2441
	push	2441					; 00000989H
	push	OFFSET ??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@
	push	12					; 0000000cH
	push	9
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 2442
	cmp	DWORD PTR ?idx@?1??get_proxy_auth_ex_data_idx@@9@9, 0
	jge	SHORT $LN3@get_proxy_
; Line 2443
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BM@MCACEDAE@SSLtest?5for?5verify?5callback?$AA@
	push	0
	call	_X509_STORE_CTX_get_ex_new_index
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?idx@?1??get_proxy_auth_ex_data_idx@@9@9, eax
$LN3@get_proxy_:
; Line 2447
	push	2447					; 0000098fH
	push	OFFSET ??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@
	push	12					; 0000000cH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN5@get_proxy_:
; Line 2449
	mov	eax, DWORD PTR ?idx@?1??get_proxy_auth_ex_data_idx@@9@9
; Line 2450
	ret	0
_get_proxy_auth_ex_data_idx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_test_cipherlist$1$ = -156				; size = 4
_alpn_len$1 = -156					; size = 2
_number$1$ = -152					; size = 4
_force$1$ = -148					; size = 4
_bytes$2$ = -144					; size = 4
_dtls1$1$ = -140					; size = 4
_tls1$1$ = -136						; size = 4
_server_auth$1$ = -132					; size = 4
_session_id_context$2 = -132				; size = 4
_server_key$1$ = -128					; size = 4
_bio_pair$1$ = -124					; size = 4
_no_protocol$1$ = -120					; size = 4
_c_ctx$1$ = -120					; size = 4
_comp$1$ = -116						; size = 4
_ssl3$1$ = -112						; size = 4
_dtls12$1$ = -108					; size = 4
_server_cert$1$ = -104					; size = 4
_reuse$1$ = -100					; size = 4
_print_time$1$ = -96					; size = 4
_ret$1$ = -92						; size = 4
_srp_server_arg$ = -88					; size = 8
_no_dhe$1$ = -80					; size = 4
_dhe1024dsa$1$ = -76					; size = 4
_dhe512$1$ = -72					; size = 4
_no_ecdhe$1$ = -68					; size = 4
_named_curve$1$ = -64					; size = 4
_client_auth$1$ = -60					; size = 4
_client_cert$1$ = -56					; size = 4
_client_key$1$ = -52					; size = 4
_CApath$1$ = -48					; size = 4
_CAfile$1$ = -44					; size = 4
_ssl2$1$ = -40						; size = 4
_c_time$ = -36						; size = 4
_s_time$ = -32						; size = 4
_srp_client_arg$ = -28					; size = 8
_app_verify_arg$ = -20					; size = 20
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 944
	mov	eax, 156				; 0000009cH
	call	__chkstk
	push	ebx
	push	ebp
; Line 961
	xor	ebp, ebp
	mov	DWORD PTR _CApath$1$[esp+164], 0
	push	esi
	push	edi
	xorps	xmm0, xmm0
	mov	DWORD PTR _CAfile$1$[esp+172], 0
	mov	eax, OFFSET ??_C@_0BD@NNEELGGK@?4?4?1apps?1server?4pem?$AA@
	mov	DWORD PTR _bio_pair$1$[esp+172], 0
; Line 999
	push	16					; 00000010H
	push	2
	mov	DWORD PTR _force$1$[esp+180], 0
	mov	DWORD PTR _dtls1$1$[esp+180], 0
	mov	DWORD PTR _dtls12$1$[esp+180], 0
	mov	DWORD PTR _tls1$1$[esp+180], 0
	mov	DWORD PTR _ssl2$1$[esp+180], 0
	mov	DWORD PTR _ssl3$1$[esp+180], 0
	mov	DWORD PTR _ret$1$[esp+180], 1
	mov	DWORD PTR _client_auth$1$[esp+180], 0
	mov	DWORD PTR _server_auth$1$[esp+180], 0
	mov	DWORD PTR _app_verify_arg$[esp+180], OFFSET ??_C@_0BH@MCOLHLGK@Test?5Callback?5Argument?$AA@
	movups	XMMWORD PTR _app_verify_arg$[esp+184], xmm0
	mov	DWORD PTR _server_cert$1$[esp+180], eax
	mov	DWORD PTR _server_key$1$[esp+180], 0
	mov	DWORD PTR _client_cert$1$[esp+180], OFFSET ??_C@_0BD@IHFIAEOI@?4?4?1apps?1client?4pem?$AA@
	mov	DWORD PTR _client_key$1$[esp+180], 0
	mov	DWORD PTR _named_curve$1$[esp+180], 0
	mov	DWORD PTR _number$1$[esp+180], 1
	mov	DWORD PTR _reuse$1$[esp+180], ebp
	mov	DWORD PTR _bytes$2$[esp+180], 256	; 00000100H
	mov	DWORD PTR _dhe512$1$[esp+180], ebp
	mov	DWORD PTR _dhe1024dsa$1$[esp+180], ebp
	mov	DWORD PTR _srp_client_arg$[esp+180], ebp
	mov	DWORD PTR _srp_client_arg$[esp+184], ebp
	mov	DWORD PTR _srp_server_arg$[esp+180], ebp
	mov	DWORD PTR _srp_server_arg$[esp+184], ebp
	mov	DWORD PTR _no_dhe$1$[esp+180], ebp
	mov	DWORD PTR _no_ecdhe$1$[esp+180], ebp
	mov	DWORD PTR _print_time$1$[esp+180], ebp
	mov	DWORD PTR _s_time$[esp+180], ebp
	mov	DWORD PTR _c_time$[esp+180], ebp
	mov	DWORD PTR _comp$1$[esp+180], ebp
	mov	DWORD PTR _test_cipherlist$1$[esp+180], ebp
	mov	DWORD PTR _no_protocol$1$[esp+180], ebp
	mov	DWORD PTR _verbose, ebp
	mov	DWORD PTR _debug, ebp
	mov	DWORD PTR _cipher, ebp
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_BIO_new_fp
; Line 1001
	push	OFFSET _lock_dbg_cb
	mov	DWORD PTR _bio_err, eax
	call	_CRYPTO_set_locking_callback
; Line 1004
	mov	edi, DWORD PTR __imp__getenv
	push	OFFSET ??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@
	call	edi
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN4@main
	push	OFFSET ??_C@_0BF@CKJKJIOH@OPENSSL_DEBUG_MEMORY?$AA@
	mov	esi, OFFSET ??_C@_03MCADLMAF@off?$AA@
	call	edi
	add	esp, 4
$LL297@main:
	mov	cl, BYTE PTR [eax]
	cmp	cl, BYTE PTR [esi]
	jne	SHORT $LN298@main
	test	cl, cl
	je	SHORT $LN299@main
	mov	cl, BYTE PTR [eax+1]
	cmp	cl, BYTE PTR [esi+1]
	jne	SHORT $LN298@main
	add	eax, 2
	add	esi, 2
	test	cl, cl
	jne	SHORT $LL297@main
$LN299@main:
	xor	eax, eax
	jmp	SHORT $LN300@main
$LN298@main:
	sbb	eax, eax
	or	eax, 1
$LN300@main:
	test	eax, eax
	jne	SHORT $LN4@main
; Line 1010
	push	eax
	push	eax
	push	eax
	push	eax
	push	eax
	call	_CRYPTO_set_mem_debug_functions
	add	esp, 20					; 00000014H
	jmp	SHORT $LN14@main
$LN4@main:
; Line 1006
	push	OFFSET _CRYPTO_dbg_get_options
	push	OFFSET _CRYPTO_dbg_set_options
	push	OFFSET _CRYPTO_dbg_free
	push	OFFSET _CRYPTO_dbg_realloc
	push	OFFSET _CRYPTO_dbg_malloc
	call	_CRYPTO_set_mem_debug_functions
; Line 1007
	push	3
	call	_CRYPTO_set_mem_debug_options
	add	esp, 24					; 00000018H
$LN14@main:
; Line 1012
	push	1
	call	_CRYPTO_mem_ctrl
; Line 1014
	push	64					; 00000040H
	push	OFFSET _rnd_seed
	call	_RAND_seed
; Line 1016
	mov	esi, DWORD PTR __imp____acrt_iob_func
	add	esp, 12					; 0000000cH
	push	16					; 00000010H
	push	1
	call	esi
	add	esp, 4
	push	eax
	call	_BIO_new_fp
; Line 1018
	mov	edi, DWORD PTR _argc$[esp+176]
	add	esp, 8
; Line 1019
	mov	ebx, DWORD PTR _argv$[esp+168]
	dec	edi
	add	ebx, 4
	mov	DWORD PTR _bio_stdout, eax
; Line 1021
	cmp	edi, 1
	jl	$LN154@main
$LL5@main:
; Line 1022
	mov	esi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_02JGAIBLNN@?9F?$AA@
	mov	eax, esi
	npad	2
$LL301@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN302@main
	test	dl, dl
	je	SHORT $LN303@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN302@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL301@main
$LN303@main:
	xor	eax, eax
	jmp	SHORT $LN304@main
$LN302@main:
	sbb	eax, eax
	or	eax, 1
$LN304@main:
	test	eax, eax
	je	$LN246@main
; Line 1030
	mov	ecx, OFFSET ??_C@_0N@BPMAOOPN@?9server_auth?$AA@
	mov	eax, esi
$LL305@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN306@main
	test	dl, dl
	je	SHORT $LN307@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN306@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL305@main
$LN307@main:
	xor	eax, eax
	jmp	SHORT $LN308@main
$LN306@main:
	sbb	eax, eax
	or	eax, 1
$LN308@main:
	test	eax, eax
	jne	SHORT $LN18@main
; Line 1031
	mov	DWORD PTR _server_auth$1$[esp+172], 1
	jmp	$LN519@main
$LN18@main:
; Line 1032
	mov	ecx, OFFSET ??_C@_0N@BMCMBAED@?9client_auth?$AA@
	mov	eax, esi
$LL309@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN310@main
	test	dl, dl
	je	SHORT $LN311@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN310@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL309@main
$LN311@main:
	xor	eax, eax
	jmp	SHORT $LN312@main
$LN310@main:
	sbb	eax, eax
	or	eax, 1
$LN312@main:
	test	eax, eax
	jne	SHORT $LN20@main
; Line 1033
	mov	DWORD PTR _client_auth$1$[esp+172], 1
	jmp	$LN519@main
$LN20@main:
; Line 1034
	mov	ecx, OFFSET ??_C@_0M@HAACCACK@?9proxy_auth?$AA@
	mov	eax, esi
	npad	2
$LL313@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN314@main
	test	dl, dl
	je	SHORT $LN315@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN314@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL313@main
$LN315@main:
	xor	eax, eax
	jmp	SHORT $LN316@main
$LN314@main:
	sbb	eax, eax
	or	eax, 1
$LN316@main:
	test	eax, eax
	jne	SHORT $LN22@main
; Line 1035
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1037
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _app_verify_arg$[esp+184], eax
	jmp	$LN519@main
$LN22@main:
; Line 1038
	mov	ecx, OFFSET ??_C@_0M@IIGCKNBL@?9proxy_cond?$AA@
	mov	eax, esi
	npad	4
$LL317@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN318@main
	test	dl, dl
	je	SHORT $LN319@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN318@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL317@main
$LN319@main:
	xor	eax, eax
	jmp	SHORT $LN320@main
$LN318@main:
	sbb	eax, eax
	or	eax, 1
$LN320@main:
	test	eax, eax
	jne	SHORT $LN25@main
; Line 1039
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1041
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _app_verify_arg$[esp+188], eax
	jmp	$LN519@main
$LN25@main:
; Line 1042
	mov	ecx, OFFSET ??_C@_02EJEOCNCO@?9v?$AA@
	mov	eax, esi
	npad	4
$LL321@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN322@main
	test	dl, dl
	je	SHORT $LN323@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN322@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL321@main
$LN323@main:
	xor	eax, eax
	jmp	SHORT $LN324@main
$LN322@main:
	sbb	eax, eax
	or	eax, 1
$LN324@main:
	test	eax, eax
	jne	SHORT $LN28@main
; Line 1043
	mov	DWORD PTR _verbose, 1
	jmp	$LN519@main
$LN28@main:
; Line 1044
	mov	ecx, OFFSET ??_C@_02DBLKFNPN@?9d?$AA@
	mov	eax, esi
	npad	1
$LL325@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN326@main
	test	dl, dl
	je	SHORT $LN327@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN326@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL325@main
$LN327@main:
	xor	eax, eax
	jmp	SHORT $LN328@main
$LN326@main:
	sbb	eax, eax
	or	eax, 1
$LN328@main:
	test	eax, eax
	jne	SHORT $LN30@main
; Line 1045
	mov	DWORD PTR _debug, 1
	jmp	$LN519@main
$LN30@main:
; Line 1046
	mov	ecx, OFFSET ??_C@_06MJBNDFGP@?9reuse?$AA@
	mov	eax, esi
	npad	1
$LL329@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN330@main
	test	dl, dl
	je	SHORT $LN331@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN330@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL329@main
$LN331@main:
	xor	eax, eax
	jmp	SHORT $LN332@main
$LN330@main:
	sbb	eax, eax
	or	eax, 1
$LN332@main:
	test	eax, eax
	jne	SHORT $LN32@main
; Line 1047
	mov	DWORD PTR _reuse$1$[esp+172], 1
	jmp	$LN519@main
$LN32@main:
; Line 1048
	mov	ecx, OFFSET ??_C@_07DNAOJJKI@?9dhe512?$AA@
	mov	eax, esi
	npad	3
$LL333@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN334@main
	test	dl, dl
	je	SHORT $LN335@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN334@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL333@main
$LN335@main:
	xor	eax, eax
	jmp	SHORT $LN336@main
$LN334@main:
	sbb	eax, eax
	or	eax, 1
$LN336@main:
	test	eax, eax
	jne	SHORT $LN34@main
; Line 1050
	mov	DWORD PTR _dhe512$1$[esp+172], 1
	jmp	$LN519@main
$LN34@main:
; Line 1055
	mov	ecx, OFFSET ??_C@_0M@FEHPCELJ@?9dhe1024dsa?$AA@
	mov	eax, esi
	npad	3
$LL337@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN338@main
	test	dl, dl
	je	SHORT $LN339@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN338@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL337@main
$LN339@main:
	xor	eax, eax
	jmp	SHORT $LN340@main
$LN338@main:
	sbb	eax, eax
	or	eax, 1
$LN340@main:
	test	eax, eax
	jne	SHORT $LN36@main
; Line 1057
	mov	DWORD PTR _dhe1024dsa$1$[esp+172], 1
	jmp	$LN519@main
$LN36@main:
; Line 1062
	mov	ecx, OFFSET ??_C@_07IKMMOABC@?9no_dhe?$AA@
	mov	eax, esi
	npad	3
$LL341@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN342@main
	test	dl, dl
	je	SHORT $LN343@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN342@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL341@main
$LN343@main:
	xor	eax, eax
	jmp	SHORT $LN344@main
$LN342@main:
	sbb	eax, eax
	or	eax, 1
$LN344@main:
	test	eax, eax
	jne	SHORT $LN38@main
; Line 1063
	mov	DWORD PTR _no_dhe$1$[esp+172], 1
	jmp	$LN519@main
$LN38@main:
; Line 1064
	mov	ecx, OFFSET ??_C@_09ICIAJIMM@?9no_ecdhe?$AA@
	mov	eax, esi
	npad	3
$LL345@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN346@main
	test	dl, dl
	je	SHORT $LN347@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN346@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL345@main
$LN347@main:
	xor	eax, eax
	jmp	SHORT $LN348@main
$LN346@main:
	sbb	eax, eax
	or	eax, 1
$LN348@main:
	test	eax, eax
	jne	SHORT $LN40@main
; Line 1065
	mov	DWORD PTR _no_ecdhe$1$[esp+172], 1
	jmp	$LN519@main
$LN40@main:
; Line 1066
	mov	ecx, OFFSET ??_C@_04LLANCHKO@?9psk?$AA@
	mov	eax, esi
	npad	3
$LL349@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN350@main
	test	dl, dl
	je	SHORT $LN351@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN350@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL349@main
$LN351@main:
	xor	eax, eax
	jmp	SHORT $LN352@main
$LN350@main:
	sbb	eax, eax
	or	eax, 1
$LN352@main:
	test	eax, eax
	jne	SHORT $LN42@main
; Line 1067
	dec	edi
	cmp	edi, 1
	jl	SHORT $bad$542
; Line 1069
	mov	ecx, DWORD PTR [ebx+4]
	add	ebx, 4
; Line 1071
	mov	esi, ecx
	mov	DWORD PTR _psk_key, ecx
	lea	edx, DWORD PTR [esi+1]
$LL353@main:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL353@main
	push	OFFSET ??_C@_0BH@FOHPLPMO@abcdefABCDEF1234567890?$AA@
	push	ecx
	sub	esi, edx
	call	DWORD PTR __imp__strspn
	add	esp, 8
	cmp	eax, esi
	je	$LN519@main
; Line 1072
	push	DWORD PTR [ebx]
	push	OFFSET ??_C@_0BH@HEGMJGMF@Not?5a?5hex?5number?5?8?$CFs?8?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1245
	add	esp, 12					; 0000000cH
$bad$542:
; Line 1254
	call	_sv_usage
; Line 1255
	jmp	$LN530@main
$LN42@main:
; Line 1080
	mov	ecx, OFFSET ??_C@_08CDOPKGGH@?9srpuser?$AA@
	mov	eax, esi
$LL354@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN355@main
	test	dl, dl
	je	SHORT $LN356@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN355@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL354@main
$LN356@main:
	xor	eax, eax
	jmp	SHORT $LN357@main
$LN355@main:
	sbb	eax, eax
	or	eax, 1
$LN357@main:
	test	eax, eax
	jne	SHORT $LN46@main
; Line 1081
	dec	edi
	cmp	edi, 1
	jl	SHORT $bad$542
; Line 1083
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _srp_client_arg$[esp+176], eax
	mov	DWORD PTR _srp_server_arg$[esp+172], eax
; Line 1085
	mov	DWORD PTR _tls1$1$[esp+172], 1
	jmp	$LN519@main
$LN46@main:
; Line 1086
	mov	ecx, OFFSET ??_C@_08BAKPFIIA@?9srppass?$AA@
	mov	eax, esi
	npad	6
$LL358@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN359@main
	test	dl, dl
	je	SHORT $LN360@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN359@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL358@main
$LN360@main:
	xor	eax, eax
	jmp	SHORT $LN361@main
$LN359@main:
	sbb	eax, eax
	or	eax, 1
$LN361@main:
	test	eax, eax
	jne	SHORT $LN49@main
; Line 1087
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1089
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _srp_client_arg$[esp+172], eax
	mov	DWORD PTR _srp_server_arg$[esp+176], eax
; Line 1090
	mov	DWORD PTR _tls1$1$[esp+172], 1
; Line 1091
	jmp	$LN519@main
$LN49@main:
; Line 1093
	mov	ecx, OFFSET ??_C@_05JOEKLLOM@?9ssl2?$AA@
	mov	eax, esi
$LL362@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN363@main
	test	dl, dl
	je	SHORT $LN364@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN363@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL362@main
$LN364@main:
	xor	eax, eax
	jmp	SHORT $LN365@main
$LN363@main:
	sbb	eax, eax
	or	eax, 1
$LN365@main:
	test	eax, eax
	jne	SHORT $LN52@main
; Line 1095
	mov	DWORD PTR _no_protocol$1$[esp+172], 1
; Line 1097
	mov	DWORD PTR _ssl2$1$[esp+172], 1
	jmp	$LN519@main
$LN52@main:
; Line 1098
	mov	ecx, OFFSET ??_C@_05BIEHJHLL@?9tls1?$AA@
	mov	eax, esi
$LL366@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN367@main
	test	dl, dl
	je	SHORT $LN368@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN367@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL366@main
$LN368@main:
	xor	eax, eax
	jmp	SHORT $LN369@main
$LN367@main:
	sbb	eax, eax
	or	eax, 1
$LN369@main:
	test	eax, eax
	jne	SHORT $LN54@main
; Line 1102
	mov	DWORD PTR _tls1$1$[esp+172], 1
	jmp	$LN519@main
$LN54@main:
; Line 1103
	mov	ecx, OFFSET ??_C@_05IHFBIKKN@?9ssl3?$AA@
	mov	eax, esi
	npad	3
$LL370@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN371@main
	test	dl, dl
	je	SHORT $LN372@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN371@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL370@main
$LN372@main:
	xor	eax, eax
	jmp	SHORT $LN373@main
$LN371@main:
	sbb	eax, eax
	or	eax, 1
$LN373@main:
	test	eax, eax
	jne	SHORT $LN56@main
; Line 1107
	mov	DWORD PTR _ssl3$1$[esp+172], 1
	jmp	$LN519@main
$LN56@main:
; Line 1108
	mov	ecx, OFFSET ??_C@_06LCNEOKJO@?9dtls1?$AA@
	mov	eax, esi
	npad	3
$LL374@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN375@main
	test	dl, dl
	je	SHORT $LN376@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN375@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL374@main
$LN376@main:
	xor	eax, eax
	jmp	SHORT $LN377@main
$LN375@main:
	sbb	eax, eax
	or	eax, 1
$LN377@main:
	test	eax, eax
	jne	SHORT $LN58@main
; Line 1112
	mov	DWORD PTR _dtls1$1$[esp+172], 1
	jmp	$LN519@main
$LN58@main:
; Line 1113
	mov	ecx, OFFSET ??_C@_07PKHFDONI@?9dtls12?$AA@
	mov	eax, esi
	npad	3
$LL378@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN379@main
	test	dl, dl
	je	SHORT $LN380@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN379@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL378@main
$LN380@main:
	xor	eax, eax
	jmp	SHORT $LN381@main
$LN379@main:
	sbb	eax, eax
	or	eax, 1
$LN381@main:
	test	eax, eax
	jne	SHORT $LN60@main
; Line 1117
	mov	DWORD PTR _dtls12$1$[esp+172], 1
	jmp	$LN519@main
$LN60@main:
; Line 1118
	push	4
	push	OFFSET ??_C@_04FJBMNMDG@?9num?$AA@
	push	esi
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN62@main
; Line 1119
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1121
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	DWORD PTR __imp__atoi
	mov	ecx, eax
	add	esp, 4
	mov	DWORD PTR _number$1$[esp+172], ecx
; Line 1122
	test	ecx, ecx
	jne	$LN519@main
; Line 1123
	mov	DWORD PTR _number$1$[esp+172], 1
; Line 1124
	jmp	$LN519@main
$LN62@main:
	mov	esi, DWORD PTR [ebx]
	mov	ecx, OFFSET ??_C@_06NDFEEAAH@?9bytes?$AA@
	mov	eax, esi
$LL382@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN383@main
	test	dl, dl
	je	SHORT $LN384@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN383@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL382@main
$LN384@main:
	xor	eax, eax
	jmp	SHORT $LN385@main
$LN383@main:
	sbb	eax, eax
	or	eax, 1
$LN385@main:
	test	eax, eax
	jne	SHORT $LN66@main
; Line 1125
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1127
	push	DWORD PTR [ebx+4]
	add	ebx, 4
	call	DWORD PTR __imp__atol
; Line 1130
	mov	edx, DWORD PTR [ebx]
	add	esp, 4
	test	eax, eax
	mov	ecx, 1
	cmove	eax, ecx
	mov	ecx, edx
	mov	DWORD PTR _bytes$2$[esp+172], eax
	lea	esi, DWORD PTR [ecx+1]
	npad	1
$LL386@main:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL386@main
	sub	ecx, esi
; Line 1131
	mov	al, BYTE PTR [edx+ecx-1]
; Line 1132
	mov	ecx, DWORD PTR _bytes$2$[esp+172]
	cmp	al, 107					; 0000006bH
	jne	SHORT $LN70@main
	shl	ecx, 10					; 0000000aH
	mov	DWORD PTR _bytes$2$[esp+172], ecx
$LN70@main:
; Line 1133
	cmp	al, 109					; 0000006dH
; Line 1135
	mov	eax, DWORD PTR _test_cipherlist$1$[esp+172]
	jne	$LN152@main
; Line 1134
	shl	ecx, 20					; 00000014H
	mov	DWORD PTR _bytes$2$[esp+172], ecx
; Line 1135
	jmp	$LN152@main
$LN66@main:
	mov	ecx, OFFSET ??_C@_05DLEDECNE@?9cert?$AA@
	mov	eax, esi
	npad	5
$LL387@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN388@main
	test	dl, dl
	je	SHORT $LN389@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN388@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL387@main
$LN389@main:
	xor	eax, eax
	jmp	SHORT $LN390@main
$LN388@main:
	sbb	eax, eax
	or	eax, 1
$LN390@main:
	test	eax, eax
	jne	SHORT $LN72@main
$LN528@main:
; Line 1136
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1138
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _server_cert$1$[esp+172], eax
	jmp	$LN519@main
$LN72@main:
; Line 1139
	mov	ecx, OFFSET ??_C@_07BGLKCNOF@?9s_cert?$AA@
	mov	eax, esi
	npad	7
$LL391@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN392@main
	test	dl, dl
	je	SHORT $LN393@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN392@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL391@main
$LN393@main:
	xor	eax, eax
	jmp	SHORT $LN394@main
$LN392@main:
	sbb	eax, eax
	or	eax, 1
$LN394@main:
	test	eax, eax
	je	SHORT $LN528@main
; Line 1143
	mov	ecx, OFFSET ??_C@_04FMEKFICB@?9key?$AA@
	mov	eax, esi
$LL395@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN396@main
	test	dl, dl
	je	SHORT $LN397@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN396@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL395@main
$LN397@main:
	xor	eax, eax
	jmp	SHORT $LN398@main
$LN396@main:
	sbb	eax, eax
	or	eax, 1
$LN398@main:
	test	eax, eax
	jne	SHORT $LN78@main
; Line 1144
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1146
	mov	ecx, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _server_key$1$[esp+172], ecx
	jmp	$LN519@main
$LN78@main:
; Line 1147
	mov	ecx, OFFSET ??_C@_06KHMKOENO@?9s_key?$AA@
	mov	eax, esi
	npad	7
$LL399@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN400@main
	test	dl, dl
	je	SHORT $LN401@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN400@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL399@main
$LN401@main:
	xor	eax, eax
	jmp	SHORT $LN402@main
$LN400@main:
	sbb	eax, eax
	or	eax, 1
$LN402@main:
	test	eax, eax
	jne	SHORT $LN81@main
; Line 1148
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1150
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _server_key$1$[esp+172], eax
	jmp	$LN519@main
$LN81@main:
; Line 1151
	mov	ecx, OFFSET ??_C@_07HBGELBCL@?9c_cert?$AA@
	mov	eax, esi
	npad	7
$LL403@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN404@main
	test	dl, dl
	je	SHORT $LN405@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN404@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL403@main
$LN405@main:
	xor	eax, eax
	jmp	SHORT $LN406@main
$LN404@main:
	sbb	eax, eax
	or	eax, 1
$LN406@main:
	test	eax, eax
	jne	SHORT $LN84@main
; Line 1152
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1154
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _client_cert$1$[esp+172], eax
	jmp	$LN519@main
$LN84@main:
; Line 1155
	mov	ecx, OFFSET ??_C@_06KEBMOGEF@?9c_key?$AA@
	mov	eax, esi
	npad	7
$LL407@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN408@main
	test	dl, dl
	je	SHORT $LN409@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN408@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL407@main
$LN409@main:
	xor	eax, eax
	jmp	SHORT $LN410@main
$LN408@main:
	sbb	eax, eax
	or	eax, 1
$LN410@main:
	test	eax, eax
	jne	SHORT $LN87@main
; Line 1156
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1158
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _client_key$1$[esp+172], eax
	jmp	$LN519@main
$LN87@main:
; Line 1159
	mov	ecx, OFFSET ??_C@_07DJFOHCGH@?9cipher?$AA@
	mov	eax, esi
	npad	7
$LL411@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN412@main
	test	dl, dl
	je	SHORT $LN413@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN412@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL411@main
$LN413@main:
	xor	eax, eax
	jmp	SHORT $LN414@main
$LN412@main:
	sbb	eax, eax
	or	eax, 1
$LN414@main:
	test	eax, eax
	jne	SHORT $LN90@main
; Line 1160
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1162
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _cipher, eax
	jmp	$LN519@main
$LN90@main:
; Line 1163
	mov	ecx, OFFSET ??_C@_07MNNNLALG@?9CApath?$AA@
	mov	eax, esi
	npad	6
$LL415@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN416@main
	test	dl, dl
	je	SHORT $LN417@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN416@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL415@main
$LN417@main:
	xor	eax, eax
	jmp	SHORT $LN418@main
$LN416@main:
	sbb	eax, eax
	or	eax, 1
$LN418@main:
	test	eax, eax
	jne	SHORT $LN93@main
; Line 1164
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1166
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _CApath$1$[esp+172], eax
	jmp	$LN519@main
$LN93@main:
; Line 1167
	mov	ecx, OFFSET ??_C@_07EAFCHGPO@?9CAfile?$AA@
	mov	eax, esi
	npad	7
$LL419@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN420@main
	test	dl, dl
	je	SHORT $LN421@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN420@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL419@main
$LN421@main:
	xor	eax, eax
	jmp	SHORT $LN422@main
$LN420@main:
	sbb	eax, eax
	or	eax, 1
$LN422@main:
	test	eax, eax
	jne	SHORT $LN96@main
; Line 1168
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1170
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _CAfile$1$[esp+172], eax
	jmp	$LN519@main
$LN96@main:
; Line 1171
	mov	ecx, OFFSET ??_C@_09LLIGBAAH@?9bio_pair?$AA@
	mov	eax, esi
	npad	4
$LL423@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN424@main
	test	dl, dl
	je	SHORT $LN425@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN424@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL423@main
$LN425@main:
	xor	eax, eax
	jmp	SHORT $LN426@main
$LN424@main:
	sbb	eax, eax
	or	eax, 1
$LN426@main:
	test	eax, eax
	jne	SHORT $LN99@main
; Line 1172
	mov	DWORD PTR _bio_pair$1$[esp+172], 1
	jmp	$LN519@main
$LN99@main:
; Line 1173
	mov	ecx, OFFSET ??_C@_02DIMDPHP@?9f?$AA@
	mov	eax, esi
	npad	3
$LL427@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN428@main
	test	dl, dl
	je	SHORT $LN429@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN428@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL427@main
$LN429@main:
	xor	eax, eax
	jmp	SHORT $LN430@main
$LN428@main:
	sbb	eax, eax
	or	eax, 1
$LN430@main:
	test	eax, eax
	jne	SHORT $LN101@main
; Line 1174
	mov	DWORD PTR _force$1$[esp+172], 1
	jmp	$LN519@main
$LN101@main:
; Line 1175
	mov	ecx, OFFSET ??_C@_05OHPGHBKD@?9time?$AA@
	mov	eax, esi
	npad	3
$LL431@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN432@main
	test	dl, dl
	je	SHORT $LN433@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN432@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL431@main
$LN433@main:
	xor	eax, eax
	jmp	SHORT $LN434@main
$LN432@main:
	sbb	eax, eax
	or	eax, 1
$LN434@main:
	test	eax, eax
	jne	SHORT $LN103@main
; Line 1176
	mov	DWORD PTR _print_time$1$[esp+172], 1
; Line 1177
	jmp	$LN519@main
$LN103@main:
; Line 1179
	mov	ecx, OFFSET ??_C@_05CHFAABOL@?9zlib?$AA@
	mov	eax, esi
	npad	3
$LL435@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN436@main
	test	dl, dl
	je	SHORT $LN437@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN436@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL435@main
$LN437@main:
	xor	eax, eax
	jmp	SHORT $LN438@main
$LN436@main:
	sbb	eax, eax
	or	eax, 1
$LN438@main:
	test	eax, eax
	jne	SHORT $LN105@main
; Line 1180
	mov	DWORD PTR _comp$1$[esp+172], 1
	jmp	$LN519@main
$LN105@main:
; Line 1181
	mov	ecx, OFFSET ??_C@_04JIPNCGOG@?9rle?$AA@
	mov	eax, esi
	npad	3
$LL439@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN440@main
	test	dl, dl
	je	SHORT $LN441@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN440@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL439@main
$LN441@main:
	xor	eax, eax
	jmp	SHORT $LN442@main
$LN440@main:
	sbb	eax, eax
	or	eax, 1
$LN442@main:
	test	eax, eax
	jne	SHORT $LN107@main
; Line 1182
	mov	DWORD PTR _comp$1$[esp+172], 255	; 000000ffH
; Line 1183
	jmp	$LN519@main
$LN107@main:
; Line 1185
	mov	ecx, OFFSET ??_C@_0N@NBKDOJHA@?9named_curve?$AA@
	mov	eax, esi
	npad	3
$LL443@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN444@main
	test	dl, dl
	je	SHORT $LN445@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN444@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL443@main
$LN445@main:
	xor	eax, eax
	jmp	SHORT $LN446@main
$LN444@main:
	sbb	eax, eax
	or	eax, 1
$LN446@main:
	test	eax, eax
	jne	SHORT $LN109@main
; Line 1186
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1189
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _named_curve$1$[esp+172], eax
	jmp	$LN519@main
$LN109@main:
; Line 1195
	mov	ecx, OFFSET ??_C@_0M@LJBIAIKK@?9app_verify?$AA@
	mov	eax, esi
	npad	7
$LL447@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN448@main
	test	dl, dl
	je	SHORT $LN449@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN448@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL447@main
$LN449@main:
	xor	eax, eax
	jmp	SHORT $LN450@main
$LN448@main:
	sbb	eax, eax
	or	eax, 1
$LN450@main:
	test	eax, eax
	jne	SHORT $LN112@main
; Line 1196
	mov	DWORD PTR _app_verify_arg$[esp+176], 1
	jmp	$LN519@main
$LN112@main:
; Line 1197
	mov	ecx, OFFSET ??_C@_06IDJDNKLB@?9proxy?$AA@
	mov	eax, esi
$LL451@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN452@main
	test	dl, dl
	je	SHORT $LN453@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN452@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL451@main
$LN453@main:
	xor	eax, eax
	jmp	SHORT $LN454@main
$LN452@main:
	sbb	eax, eax
	or	eax, 1
$LN454@main:
	test	eax, eax
	jne	SHORT $LN114@main
; Line 1198
	mov	DWORD PTR _app_verify_arg$[esp+180], 1
	jmp	$LN519@main
$LN114@main:
; Line 1199
	mov	ecx, OFFSET ??_C@_0BB@FNEKPOED@?9test_cipherlist?$AA@
	mov	eax, esi
$LL455@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN456@main
	test	dl, dl
	je	SHORT $LN457@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN456@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL455@main
$LN457@main:
	xor	eax, eax
	jmp	SHORT $LN458@main
$LN456@main:
	sbb	eax, eax
	or	eax, 1
$LN458@main:
	test	eax, eax
	jne	SHORT $LN116@main
; Line 1200
	mov	eax, 1
	mov	DWORD PTR _test_cipherlist$1$[esp+172], eax
	jmp	$LN152@main
$LN116@main:
; Line 1201
	mov	ecx, OFFSET ??_C@_0BA@DGOAIBNO@?9serverinfo_sct?$AA@
	mov	eax, esi
	npad	2
$LL459@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN460@main
	test	dl, dl
	je	SHORT $LN461@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN460@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL459@main
$LN461@main:
	xor	eax, eax
	jmp	SHORT $LN462@main
$LN460@main:
	sbb	eax, eax
	or	eax, 1
$LN462@main:
	test	eax, eax
	jne	SHORT $LN118@main
; Line 1202
	mov	DWORD PTR _serverinfo_sct, 1
	jmp	$LN519@main
$LN118@main:
; Line 1203
	mov	ecx, OFFSET ??_C@_0BB@OGBEAMFA@?9serverinfo_tack?$AA@
	mov	eax, esi
	npad	1
$LL463@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN464@main
	test	dl, dl
	je	SHORT $LN465@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN464@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL463@main
$LN465@main:
	xor	eax, eax
	jmp	SHORT $LN466@main
$LN464@main:
	sbb	eax, eax
	or	eax, 1
$LN466@main:
	test	eax, eax
	jne	SHORT $LN120@main
; Line 1204
	mov	DWORD PTR _serverinfo_tack, 1
	jmp	$LN519@main
$LN120@main:
; Line 1205
	mov	ecx, OFFSET ??_C@_0BB@KMFPIKOO@?9serverinfo_file?$AA@
	mov	eax, esi
	npad	1
$LL467@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN468@main
	test	dl, dl
	je	SHORT $LN469@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN468@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL467@main
$LN469@main:
	xor	eax, eax
	jmp	SHORT $LN470@main
$LN468@main:
	sbb	eax, eax
	or	eax, 1
$LN470@main:
	test	eax, eax
	jne	SHORT $LN122@main
; Line 1206
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1208
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _serverinfo_file, eax
	jmp	$LN519@main
$LN122@main:
; Line 1209
	mov	ecx, OFFSET ??_C@_0M@FEEIMHKA@?9custom_ext?$AA@
	mov	eax, esi
	npad	6
$LL471@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN472@main
	test	dl, dl
	je	SHORT $LN473@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN472@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL471@main
$LN473@main:
	xor	eax, eax
	jmp	SHORT $LN474@main
$LN472@main:
	sbb	eax, eax
	or	eax, 1
$LN474@main:
	test	eax, eax
	jne	SHORT $LN125@main
; Line 1210
	mov	DWORD PTR _custom_ext, 1
	jmp	$LN519@main
$LN125@main:
; Line 1211
	mov	ecx, OFFSET ??_C@_0N@FHKGFJCG@?9alpn_client?$AA@
	mov	eax, esi
	npad	1
$LL475@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN476@main
	test	dl, dl
	je	SHORT $LN477@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN476@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL475@main
$LN477@main:
	xor	eax, eax
	jmp	SHORT $LN478@main
$LN476@main:
	sbb	eax, eax
	or	eax, 1
$LN478@main:
	test	eax, eax
	jne	SHORT $LN127@main
; Line 1212
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1214
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _alpn_client, eax
	jmp	$LN519@main
$LN127@main:
; Line 1215
	mov	ecx, OFFSET ??_C@_0N@BIOEICKF@?9alpn_server?$AA@
	mov	eax, esi
	npad	6
$LL479@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN480@main
	test	dl, dl
	je	SHORT $LN481@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN480@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL479@main
$LN481@main:
	xor	eax, eax
	jmp	SHORT $LN482@main
$LN480@main:
	sbb	eax, eax
	or	eax, 1
$LN482@main:
	test	eax, eax
	je	$LN132@main
	mov	ecx, OFFSET ??_C@_0O@GAPJLEFH@?9alpn_server1?$AA@
	mov	eax, esi
$LL483@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN484@main
	test	dl, dl
	je	SHORT $LN485@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN484@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL483@main
$LN485@main:
	xor	eax, eax
	jmp	SHORT $LN486@main
$LN484@main:
	sbb	eax, eax
	or	eax, 1
$LN486@main:
	test	eax, eax
	je	$LN132@main
; Line 1220
	mov	ecx, OFFSET ??_C@_0O@ELNEOHJE@?9alpn_server2?$AA@
	mov	eax, esi
$LL487@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN488@main
	test	dl, dl
	je	SHORT $LN489@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN488@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL487@main
$LN489@main:
	xor	eax, eax
	jmp	SHORT $LN490@main
$LN488@main:
	sbb	eax, eax
	or	eax, 1
$LN490@main:
	test	eax, eax
	jne	SHORT $LN134@main
; Line 1221
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1223
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _alpn_server2, eax
	jmp	$LN519@main
$LN134@main:
; Line 1224
	mov	ecx, OFFSET ??_C@_0P@BPNJMBEN@?9alpn_expected?$AA@
	mov	eax, esi
$LL491@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN492@main
	test	dl, dl
	je	SHORT $LN493@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN492@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL491@main
$LN493@main:
	xor	eax, eax
	jmp	SHORT $LN494@main
$LN492@main:
	sbb	eax, eax
	or	eax, 1
$LN494@main:
	test	eax, eax
	jne	SHORT $LN137@main
; Line 1225
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1227
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _alpn_expected, eax
	jmp	$LN519@main
$LN137@main:
; Line 1228
	mov	ecx, OFFSET ??_C@_0L@IIABNIII@?9sn_client?$AA@
	mov	eax, esi
	npad	4
$LL495@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN496@main
	test	dl, dl
	je	SHORT $LN497@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN496@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL495@main
$LN497@main:
	xor	eax, eax
	jmp	SHORT $LN498@main
$LN496@main:
	sbb	eax, eax
	or	eax, 1
$LN498@main:
	test	eax, eax
	jne	SHORT $LN140@main
; Line 1229
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1231
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _sn_client, eax
	jmp	$LN519@main
$LN140@main:
; Line 1232
	mov	ecx, OFFSET ??_C@_0M@FBEIJNDJ@?9sn_server1?$AA@
	mov	eax, esi
	npad	6
$LL499@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN500@main
	test	dl, dl
	je	SHORT $LN501@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN500@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL499@main
$LN501@main:
	xor	eax, eax
	jmp	SHORT $LN502@main
$LN500@main:
	sbb	eax, eax
	or	eax, 1
$LN502@main:
	test	eax, eax
	jne	SHORT $LN143@main
; Line 1233
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1235
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _sn_server1, eax
	jmp	$LN519@main
$LN143@main:
; Line 1236
	mov	ecx, OFFSET ??_C@_0M@HKGFMOPK@?9sn_server2?$AA@
	mov	eax, esi
	npad	6
$LL503@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN504@main
	test	dl, dl
	je	SHORT $LN505@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN504@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL503@main
$LN505@main:
	xor	eax, eax
	jmp	SHORT $LN506@main
$LN504@main:
	sbb	eax, eax
	or	eax, 1
$LN506@main:
	test	eax, eax
	jne	SHORT $LN146@main
; Line 1237
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1239
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _sn_server2, eax
	jmp	$LN519@main
$LN146@main:
; Line 1240
	mov	ecx, OFFSET ??_C@_0M@KGPLDHKM@?9sn_expect1?$AA@
	mov	eax, esi
	npad	6
$LL507@main:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN508@main
	test	dl, dl
	je	SHORT $LN509@main
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN508@main
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL507@main
$LN509@main:
	xor	eax, eax
	jmp	SHORT $LN510@main
$LN508@main:
	sbb	eax, eax
	or	eax, 1
$LN510@main:
	test	eax, eax
	jne	SHORT $LN149@main
; Line 1241
	mov	DWORD PTR _sn_expect, 1
	jmp	SHORT $LN519@main
$LN149@main:
; Line 1242
	mov	eax, OFFSET ??_C@_0M@INNGGEGP@?9sn_expect2?$AA@
	npad	6
$LL511@main:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN512@main
	test	cl, cl
	je	SHORT $LN513@main
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN512@main
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL511@main
$LN513@main:
	xor	eax, eax
	jmp	SHORT $LN514@main
$LN512@main:
	sbb	eax, eax
	or	eax, 1
$LN514@main:
	test	eax, eax
	jne	SHORT $LN151@main
; Line 1243
	mov	DWORD PTR _sn_expect, 2
; Line 1244
	jmp	SHORT $LN519@main
$LN132@main:
; Line 1217
	dec	edi
	cmp	edi, 1
	jl	$bad$542
; Line 1219
	mov	eax, DWORD PTR [ebx+4]
	add	ebx, 4
	mov	DWORD PTR _alpn_server, eax
$LN519@main:
	mov	eax, DWORD PTR _test_cipherlist$1$[esp+172]
$LN152@main:
; Line 1249
	dec	edi
; Line 1250
	add	ebx, 4
	cmp	edi, 1
	jge	$LL5@main
; Line 1262
	cmp	eax, 1
	jne	SHORT $LN517@main
; Line 1266
	push	OFFSET ??_C@_0DM@EOPFGCOD@Testing?5cipherlist?5order?5only?4?5I@
	push	eax
	mov	eax, DWORD PTR __imp____acrt_iob_func
	call	eax
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1268
	call	_do_test_cipherlist
	test	eax, eax
	jne	$LN155@main
; Line 1269
	push	1
	call	DWORD PTR __imp__exit
$LN539@main:
$LN151@main:
; Line 1245
	push	DWORD PTR [ebx]
	mov	eax, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0BD@NFDCLIJC@unknown?5option?5?$CFs?6?$AA@
	push	2
	call	eax
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 1254
	call	_sv_usage
; Line 1255
	jmp	$LN530@main
$LN246@main:
; Line 1026
	mov	eax, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0DN@EAAPDDOI@not?5compiled?5with?5FIPS?5support?0?5@
	push	2
	call	eax
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1028
	push	0
	call	DWORD PTR __imp__exit
$LN540@main:
$LN517@main:
	mov	esi, DWORD PTR __imp____acrt_iob_func
$LN154@main:
; Line 1274
	mov	edx, DWORD PTR _ssl2$1$[esp+172]
	mov	ebx, DWORD PTR _ssl3$1$[esp+172]
	mov	ecx, DWORD PTR _tls1$1$[esp+172]
	mov	edi, DWORD PTR _dtls12$1$[esp+172]
	lea	eax, DWORD PTR [ebx+edx]
	add	eax, ecx
	add	eax, edi
	add	eax, DWORD PTR _dtls1$1$[esp+172]
	cmp	eax, 1
	jle	SHORT $LN156@main
; Line 1275
	push	OFFSET ??_C@_0EM@EBBAFJPJ@At?5most?5one?5of?5?9ssl2?0?5?9ssl3?0?5?9tl@
$LN537@main:
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1277
	push	1
$LN538@main:
	call	DWORD PTR __imp__exit
$LN541@main:
$LN156@main:
; Line 1285
	cmp	DWORD PTR _no_protocol$1$[esp+172], ebp
	je	SHORT $LN157@main
; Line 1286
	push	OFFSET ??_C@_0EA@BDLPFBAG@Testing?5was?5requested?5for?5a?5disa@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN155@main:
; Line 1288
	xor	ebx, ebx
; Line 1289
	jmp	$end$543
$LN157@main:
; Line 1292
	mov	ebp, DWORD PTR _dtls1$1$[esp+172]
	test	edx, edx
	jne	SHORT $LN524@main
	test	ebx, ebx
	jne	SHORT $LN524@main
	test	ecx, ecx
	jne	SHORT $LN524@main
	mov	ebx, DWORD PTR _force$1$[esp+172]
	test	ebp, ebp
	jne	SHORT $LN521@main
	test	edi, edi
	mov	edi, DWORD PTR _number$1$[esp+172]
	jne	SHORT $LN158@main
	cmp	edi, 1
	jle	SHORT $LN158@main
	cmp	DWORD PTR _reuse$1$[esp+172], ecx
	jne	SHORT $LN158@main
	test	ebx, ebx
	jne	SHORT $LN158@main
; Line 1293
	push	OFFSET ??_C@_0KP@HELALI@This?5case?5cannot?5work?4?5?5Use?5?9f?5t@
; Line 1297
	jmp	SHORT $LN537@main
$LN524@main:
	mov	ebx, DWORD PTR _force$1$[esp+172]
$LN521@main:
	mov	edi, DWORD PTR _number$1$[esp+172]
$LN158@main:
; Line 1310
	cmp	DWORD PTR _print_time$1$[esp+172], 0
	je	SHORT $LN161@main
; Line 1311
	cmp	DWORD PTR _bio_pair$1$[esp+172], 0
	jne	SHORT $LN160@main
; Line 1312
	push	OFFSET ??_C@_0BM@CODBDPGH@Using?5BIO?5pair?5?$CI?9bio_pair?$CJ?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 1313
	mov	DWORD PTR _bio_pair$1$[esp+172], 1
$LN160@main:
; Line 1315
	cmp	edi, 50					; 00000032H
	jge	SHORT $LN161@main
	test	ebx, ebx
	jne	SHORT $LN161@main
; Line 1316
	push	OFFSET ??_C@_0EG@JBDEEIJL@Warning?3?5For?5accurate?5timings?0?5u@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN161@main:
; Line 1322
	call	_SSL_library_init
; Line 1323
	call	_SSL_load_error_strings
; Line 1326
	mov	ebx, DWORD PTR _comp$1$[esp+172]
	cmp	ebx, 1
	jne	SHORT $LN162@main
; Line 1327
	call	_COMP_zlib
; Line 1328
	jmp	SHORT $LN163@main
$LN162@main:
	cmp	ebx, 255				; 000000ffH
	jne	SHORT $LN166@main
; Line 1329
	call	_COMP_rle
$LN163@main:
; Line 1330
	test	eax, eax
	je	SHORT $LN166@main
; Line 1331
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN165@main
; Line 1332
	push	eax
	push	ebx
	call	_SSL_COMP_add_compression_method
	add	esp, 8
	test	eax, eax
	je	SHORT $LN166@main
; Line 1333
	push	OFFSET ??_C@_0CC@DGEPOMBG@Failed?5to?5add?5compression?5method@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 1334
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 16					; 00000010H
; Line 1336
	jmp	SHORT $LN166@main
$LN165@main:
; Line 1337
	cmp	ebx, 255				; 000000ffH
	jne	SHORT $LN238@main
	mov	eax, OFFSET ??_C@_03EGMKOFFC@rle?$AA@
	jmp	SHORT $LN239@main
$LN238@main:
	cmp	ebx, 1
	mov	eax, OFFSET ??_C@_04OLICEBLN@zlib?$AA@
	mov	ecx, OFFSET ??_C@_07CIFAGBMG@unknown?$AA@
	cmovne	eax, ecx
$LN239@main:
	push	eax
	push	OFFSET ??_C@_0CH@BBOHELO@Warning?3?5?$CFs?5compression?5not?5supp@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 1341
	push	2
	call	esi
	push	eax
	call	_ERR_print_errors_fp
	add	esp, 20					; 00000014H
$LN166@main:
; Line 1344
	call	_SSL_COMP_get_compression_methods
; Line 1345
	push	OFFSET ??_C@_0CA@FEOHMMGB@Available?5compression?5methods?3?6?$AA@
	push	2
	mov	ebx, eax
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 1347
	push	ebx
	call	_sk_num
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 1348
	test	edi, edi
	jne	SHORT $LN168@main
; Line 1349
	push	OFFSET ??_C@_07LEJCFHHH@?5?5NONE?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
	jmp	SHORT $LN8@main
$LN168@main:
; Line 1351
	xor	esi, esi
	test	edi, edi
	jle	SHORT $LN8@main
$LL9@main:
; Line 1352
	push	esi
	push	ebx
	call	_sk_value
	add	esp, 8
; Line 1353
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	push	OFFSET ??_C@_09EACCHIHO@?5?5?$CFd?3?5?$CFs?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	inc	esi
	add	esp, 16					; 00000010H
	cmp	esi, edi
	jl	SHORT $LL9@main
$LN8@main:
; Line 1369
	cmp	DWORD PTR _ssl3$1$[esp+172], 0
	je	SHORT $LN170@main
; Line 1370
	call	_SSLv3_method
	jmp	SHORT $LN531@main
$LN170@main:
; Line 1374
	test	ebp, ebp
	je	SHORT $LN172@main
; Line 1375
	call	_DTLSv1_method
	jmp	SHORT $LN531@main
$LN172@main:
; Line 1376
	cmp	DWORD PTR _dtls12$1$[esp+172], 0
	je	SHORT $LN174@main
; Line 1377
	call	_DTLSv1_2_method
	jmp	SHORT $LN531@main
$LN174@main:
; Line 1381
	cmp	DWORD PTR _tls1$1$[esp+172], 0
	je	SHORT $LN176@main
; Line 1382
	call	_TLSv1_method
	jmp	SHORT $LN531@main
$LN176@main:
; Line 1385
	call	_SSLv23_method
$LN531@main:
	mov	esi, eax
; Line 1387
	push	esi
	call	_SSL_CTX_new
	mov	ebp, eax
; Line 1388
	push	esi
	mov	DWORD PTR _c_ctx$1$[esp+180], ebp
	call	_SSL_CTX_new
; Line 1389
	push	esi
	mov	DWORD PTR _s_ctx, eax
	call	_SSL_CTX_new
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _s_ctx2, eax
; Line 1390
	test	ebp, ebp
	je	$LN179@main
	cmp	DWORD PTR _s_ctx, 0
	je	$LN179@main
	test	eax, eax
	je	$LN179@main
; Line 1395
	mov	eax, DWORD PTR _cipher
	test	eax, eax
	je	SHORT $LN180@main
; Line 1396
	push	eax
	push	ebp
	call	_SSL_CTX_set_cipher_list
; Line 1397
	push	DWORD PTR _cipher
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_cipher_list
; Line 1398
	push	DWORD PTR _cipher
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_cipher_list
	add	esp, 24					; 00000018H
$LN180@main:
; Line 1402
	cmp	DWORD PTR _no_dhe$1$[esp+172], 0
	jne	SHORT $LN181@main
; Line 1403
	cmp	DWORD PTR _dhe1024dsa$1$[esp+172], 0
	je	SHORT $LN182@main
; Line 1407
	push	0
	push	1048576					; 00100000H
	push	32					; 00000020H
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_ctrl
; Line 1408
	push	0
	push	1048576					; 00100000H
	push	32					; 00000020H
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_ctrl
	add	esp, 32					; 00000020H
; Line 1409
	call	_get_dh1024dsa
	jmp	SHORT $LN532@main
$LN182@main:
; Line 1410
	cmp	DWORD PTR _dhe512$1$[esp+172], 0
	je	SHORT $LN184@main
; Line 1411
	call	_get_dh512
	jmp	SHORT $LN532@main
$LN184@main:
; Line 1413
	call	_get_dh1024
$LN532@main:
	mov	esi, eax
; Line 1414
	push	esi
	push	0
	push	3
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_ctrl
; Line 1415
	push	esi
	push	0
	push	3
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_ctrl
; Line 1416
	push	esi
	call	_DH_free
	add	esp, 36					; 00000024H
$LN181@main:
; Line 1423
	cmp	DWORD PTR _no_ecdhe$1$[esp+172], 0
	jne	$LN186@main
; Line 1426
	mov	ebx, DWORD PTR _named_curve$1$[esp+172]
	test	ebx, ebx
	je	SHORT $LN187@main
; Line 1427
	push	ebx
	call	_OBJ_sn2nid
	add	esp, 4
; Line 1428
	test	eax, eax
	jne	SHORT $LN188@main
; Line 1429
	push	ebx
	push	OFFSET ??_C@_0BJ@FINFOCGI@unknown?5curve?5name?5?$CI?$CFs?$CJ?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 1430
	jmp	$LN530@main
$LN187@main:
; Line 1433
	mov	eax, 415				; 0000019fH
$LN188@main:
; Line 1436
	push	eax
	call	_EC_KEY_new_by_curve_name
	mov	esi, eax
	add	esp, 4
; Line 1437
	test	esi, esi
	jne	SHORT $LN190@main
; Line 1438
	push	OFFSET ??_C@_0BI@HEAPKHMI@unable?5to?5create?5curve?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1439
	jmp	$LN530@main
$LN190@main:
; Line 1442
	push	esi
	push	0
	push	4
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_ctrl
; Line 1443
	push	esi
	push	0
	push	4
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_ctrl
; Line 1444
	push	0
	push	524288					; 00080000H
	push	32					; 00000020H
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_ctrl
; Line 1445
	push	0
	push	524288					; 00080000H
	push	32					; 00000020H
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_ctrl
	add	esp, 64					; 00000040H
; Line 1446
	push	esi
	call	_EC_KEY_free
	add	esp, 4
$LN186@main:
; Line 1453
	push	OFFSET _tmp_rsa_cb
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_tmp_rsa_callback
; Line 1454
	push	OFFSET _tmp_rsa_cb
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_tmp_rsa_callback
; Line 1468
	mov	ebx, DWORD PTR _server_cert$1$[esp+188]
	push	1
	push	ebx
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_use_certificate_file
	add	esp, 28					; 0000001cH
	test	eax, eax
	jne	SHORT $LN191@main
; Line 1469
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	mov	esi, DWORD PTR _server_key$1$[esp+176]
	add	esp, 4
	jmp	SHORT $LN193@main
$LN191@main:
; Line 1470
	mov	esi, DWORD PTR _server_key$1$[esp+172]
	mov	eax, ebx
	test	esi, esi
	push	1
	cmovne	eax, esi
	push	eax
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_use_PrivateKey_file
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN179@main
$LN193@main:
; Line 1478
	push	1
	push	ebx
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_use_certificate_file
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN194@main
; Line 1479
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
	jmp	SHORT $LN196@main
$LN194@main:
; Line 1480
	test	esi, esi
	push	1
	cmovne	ebx, esi
	push	ebx
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_use_PrivateKey_file
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN179@main
$LN196@main:
; Line 1488
	mov	edi, DWORD PTR _client_auth$1$[esp+172]
	test	edi, edi
	je	SHORT $LN197@main
; Line 1489
	mov	ebx, DWORD PTR _client_cert$1$[esp+172]
	push	1
	push	ebx
	push	ebp
	call	_SSL_CTX_use_certificate_file
; Line 1490
	mov	eax, DWORD PTR _client_key$1$[esp+184]
	test	eax, eax
	push	1
	cmovne	ebx, eax
	push	ebx
	push	ebp
	call	_SSL_CTX_use_PrivateKey_file
	add	esp, 24					; 00000018H
$LN197@main:
; Line 1499
	mov	ebx, DWORD PTR _CApath$1$[esp+172]
	mov	esi, DWORD PTR _CAfile$1$[esp+172]
	push	ebx
	push	esi
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_load_verify_locations
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN199@main
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_default_verify_paths
	add	esp, 4
	test	eax, eax
	je	SHORT $LN199@main
	push	ebx
	push	esi
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_load_verify_locations
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN199@main
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_default_verify_paths
	add	esp, 4
	test	eax, eax
	je	SHORT $LN199@main
	push	ebx
	push	esi
	push	ebp
	call	_SSL_CTX_load_verify_locations
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN199@main
	push	ebp
	call	_SSL_CTX_set_default_verify_paths
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN198@main
$LN199@main:
; Line 1502
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN198@main:
; Line 1506
	test	edi, edi
	je	SHORT $LN200@main
; Line 1507
	push	OFFSET ??_C@_0BH@IBJMGGIH@client?5authentication?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1508
	push	OFFSET _verify_callback
	push	3
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_verify
; Line 1511
	lea	eax, DWORD PTR _app_verify_arg$[esp+192]
	push	eax
	push	OFFSET _app_verify_callback
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_cert_verify_callback
; Line 1513
	push	OFFSET _verify_callback
	push	3
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_verify
; Line 1516
	lea	eax, DWORD PTR _app_verify_arg$[esp+216]
	push	eax
	push	OFFSET _app_verify_callback
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_cert_verify_callback
	add	esp, 56					; 00000038H
$LN200@main:
; Line 1519
	cmp	DWORD PTR _server_auth$1$[esp+172], 0
	je	SHORT $LN201@main
; Line 1520
	push	OFFSET ??_C@_0BH@NAGJPKDE@server?5authentication?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1521
	push	OFFSET _verify_callback
	push	1
	push	ebp
	call	_SSL_CTX_set_verify
; Line 1522
	lea	eax, DWORD PTR _app_verify_arg$[esp+192]
	push	eax
	push	OFFSET _app_verify_callback
	push	ebp
	call	_SSL_CTX_set_cert_verify_callback
	add	esp, 32					; 00000020H
$LN201@main:
; Line 1528
	push	4
	lea	eax, DWORD PTR _session_id_context$2[esp+176]
	mov	DWORD PTR _session_id_context$2[esp+176], 0
	push	eax
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_session_id_context
; Line 1530
	push	4
	lea	eax, DWORD PTR _session_id_context$2[esp+188]
	push	eax
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_session_id_context
	add	esp, 24					; 00000018H
; Line 1535
	cmp	DWORD PTR _psk_key, 0
	je	$LN206@main
; Line 1548
	push	OFFSET _psk_client_callback
	push	ebp
	call	_SSL_CTX_set_psk_client_callback
; Line 1549
	push	OFFSET _psk_server_callback
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_psk_server_callback
; Line 1550
	push	OFFSET _psk_server_callback
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_psk_server_callback
	add	esp, 24					; 00000018H
; Line 1551
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN204@main
; Line 1552
	push	OFFSET ??_C@_0CE@LHPICLJC@setting?5PSK?5identity?5hint?5to?5s_c@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$LN204@main:
; Line 1553
	push	OFFSET ??_C@_0BJ@LIANGLBF@ctx?5server?5identity_hint?$AA@
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_use_psk_identity_hint
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN205@main
; Line 1554
	push	OFFSET ??_C@_0CK@FBLKOACO@error?5setting?5PSK?5identity?5hint?5@
$LN534@main:
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 1555
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 12					; 0000000cH
; Line 1556
	jmp	$LN530@main
$LN205@main:
; Line 1558
	push	OFFSET ??_C@_0BJ@LIANGLBF@ctx?5server?5identity_hint?$AA@
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_use_psk_identity_hint
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN206@main
; Line 1559
	push	OFFSET ??_C@_0CL@MBAOLIN@error?5setting?5PSK?5identity?5hint?5@
; Line 1561
	jmp	SHORT $LN534@main
$LN206@main:
; Line 1566
	mov	eax, DWORD PTR _srp_client_arg$[esp+176]
	test	eax, eax
	je	SHORT $LN207@main
; Line 1567
	push	eax
	push	ebp
	call	_SSL_CTX_set_srp_username
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN208@main
; Line 1568
	push	OFFSET ??_C@_0BM@BPFDKLGC@Unable?5to?5set?5SRP?5username?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1569
	jmp	$LN530@main
$LN208@main:
; Line 1571
	lea	eax, DWORD PTR _srp_client_arg$[esp+172]
	push	eax
	push	ebp
	call	_SSL_CTX_set_srp_cb_arg
; Line 1572
	push	OFFSET _ssl_give_srp_client_pwd_cb
	push	ebp
	call	_SSL_CTX_set_srp_client_pwd_callback
	add	esp, 16					; 00000010H
$LN207@main:
; Line 1579
	cmp	DWORD PTR _srp_server_arg$[esp+172], 0
	je	SHORT $LN209@main
; Line 1580
	push	OFFSET _verify_callback
	push	0
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_verify
; Line 1581
	push	OFFSET _verify_callback
	push	0
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_verify
; Line 1582
	lea	eax, DWORD PTR _srp_server_arg$[esp+196]
	push	eax
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_srp_cb_arg
; Line 1583
	lea	eax, DWORD PTR _srp_server_arg$[esp+204]
	push	eax
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_srp_cb_arg
; Line 1584
	push	OFFSET _ssl_srp_server_param_cb
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_srp_username_callback
; Line 1585
	push	OFFSET _ssl_srp_server_param_cb
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_srp_username_callback
	add	esp, 56					; 00000038H
$LN209@main:
; Line 1589
	cmp	DWORD PTR _serverinfo_sct, 0
	je	SHORT $LN210@main
; Line 1590
	push	0
	push	OFFSET _serverinfo_cli_parse_cb
	push	0
	push	0
	push	0
	push	18					; 00000012H
	push	ebp
	call	_SSL_CTX_add_client_custom_ext
	add	esp, 28					; 0000001cH
$LN210@main:
; Line 1593
	cmp	DWORD PTR _serverinfo_tack, 0
	je	SHORT $LN211@main
; Line 1594
	push	0
	push	OFFSET _serverinfo_cli_parse_cb
	push	0
	push	0
	push	0
	push	62208					; 0000f300H
	push	ebp
	call	_SSL_CTX_add_client_custom_ext
	add	esp, 28					; 0000001cH
$LN211@main:
; Line 1598
	mov	eax, DWORD PTR _serverinfo_file
	test	eax, eax
	je	SHORT $LN214@main
; Line 1599
	push	eax
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_use_serverinfo_file
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN213@main
$LN535@main:
; Line 1600
	push	OFFSET ??_C@_0BJ@EEBLKDLF@missing?5serverinfo?5file?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 1601
	jmp	$LN530@main
$LN213@main:
; Line 1603
	push	DWORD PTR _serverinfo_file
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_use_serverinfo_file
	add	esp, 8
	test	eax, eax
	je	SHORT $LN535@main
$LN214@main:
; Line 1609
	cmp	DWORD PTR _custom_ext, 0
	je	$LN215@main
; Line 1610
	push	0
	push	OFFSET _custom_ext_0_cli_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_0_cli_add_cb
	push	1000					; 000003e8H
	push	ebp
	call	_SSL_CTX_add_client_custom_ext
; Line 1614
	push	0
	push	OFFSET _custom_ext_1_cli_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_1_cli_add_cb
	push	1001					; 000003e9H
	push	ebp
	call	_SSL_CTX_add_client_custom_ext
; Line 1618
	push	0
	push	OFFSET _custom_ext_2_cli_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_2_cli_add_cb
	push	1002					; 000003eaH
	push	ebp
	call	_SSL_CTX_add_client_custom_ext
	add	esp, 84					; 00000054H
; Line 1622
	push	0
	push	OFFSET _custom_ext_3_cli_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_3_cli_add_cb
	push	1003					; 000003ebH
	push	ebp
	call	_SSL_CTX_add_client_custom_ext
; Line 1627
	push	0
	push	OFFSET _custom_ext_0_srv_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_0_srv_add_cb
	push	1000					; 000003e8H
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_add_server_custom_ext
; Line 1631
	push	0
	push	OFFSET _custom_ext_1_srv_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_1_srv_add_cb
	push	1001					; 000003e9H
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_add_server_custom_ext
	add	esp, 84					; 00000054H
; Line 1635
	push	0
	push	OFFSET _custom_ext_2_srv_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_2_srv_add_cb
	push	1002					; 000003eaH
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_add_server_custom_ext
; Line 1639
	push	0
	push	OFFSET _custom_ext_3_srv_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_3_srv_add_cb
	push	1003					; 000003ebH
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_add_server_custom_ext
; Line 1644
	push	0
	push	OFFSET _custom_ext_0_srv_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_0_srv_add_cb
	push	1000					; 000003e8H
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_add_server_custom_ext
	add	esp, 84					; 00000054H
; Line 1648
	push	0
	push	OFFSET _custom_ext_1_srv_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_1_srv_add_cb
	push	1001					; 000003e9H
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_add_server_custom_ext
; Line 1652
	push	0
	push	OFFSET _custom_ext_2_srv_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_2_srv_add_cb
	push	1002					; 000003eaH
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_add_server_custom_ext
; Line 1656
	push	0
	push	OFFSET _custom_ext_3_srv_parse_cb
	push	0
	push	0
	push	OFFSET _custom_ext_3_srv_add_cb
	push	1003					; 000003ebH
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_add_server_custom_ext
	add	esp, 84					; 00000054H
$LN215@main:
; Line 1662
	mov	eax, DWORD PTR _alpn_server
	test	eax, eax
	je	SHORT $LN216@main
; Line 1663
	push	eax
	push	OFFSET _cb_server_alpn
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_set_alpn_select_cb
	add	esp, 12					; 0000000cH
$LN216@main:
; Line 1664
	mov	eax, DWORD PTR _alpn_server2
	test	eax, eax
	je	SHORT $LN217@main
; Line 1665
	push	eax
	push	OFFSET _cb_server_alpn
	push	DWORD PTR _s_ctx2
	call	_SSL_CTX_set_alpn_select_cb
	add	esp, 12					; 0000000cH
$LN217@main:
; Line 1667
	mov	eax, DWORD PTR _alpn_client
	test	eax, eax
	je	SHORT $LN218@main
; Line 1669
	push	eax
	lea	eax, DWORD PTR _alpn_len$1[esp+176]
	push	eax
	call	_next_protos_parse
	mov	esi, eax
	add	esp, 8
; Line 1671
	test	esi, esi
	jne	SHORT $LN219@main
; Line 1672
	push	OFFSET ??_C@_0CF@OBPKAAPH@Error?5parsing?5?9alpn_client?5argum@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
	jmp	$LN530@main
$LN219@main:
; Line 1675
	movzx	eax, WORD PTR _alpn_len$1[esp+172]
	push	eax
	push	esi
	push	ebp
	call	_SSL_CTX_set_alpn_protos
; Line 1676
	push	esi
	call	_CRYPTO_free
	add	esp, 16					; 00000010H
$LN218@main:
; Line 1679
	cmp	DWORD PTR _sn_server1, 0
	jne	SHORT $LN221@main
	cmp	DWORD PTR _sn_server2, 0
	je	SHORT $LN220@main
$LN221@main:
; Line 1680
	push	OFFSET _servername_cb
	push	53					; 00000035H
	push	DWORD PTR _s_ctx
	call	_SSL_CTX_callback_ctrl
	add	esp, 12					; 0000000cH
$LN220@main:
; Line 1682
	push	ebp
	call	_SSL_new
; Line 1683
	push	DWORD PTR _s_ctx
	mov	esi, eax
	call	_SSL_new
	mov	edi, eax
	add	esp, 8
; Line 1685
	mov	eax, DWORD PTR _sn_client
	test	eax, eax
	je	SHORT $LN222@main
; Line 1686
	push	eax
	push	0
	push	55					; 00000037H
	push	esi
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
$LN222@main:
; Line 1703
	mov	ebx, DWORD PTR _number$1$[esp+172]
	test	ebx, ebx
	jle	SHORT $LN11@main
	mov	ebp, DWORD PTR _bytes$2$[esp+172]
	npad	4
$LL12@main:
; Line 1704
	cmp	DWORD PTR _reuse$1$[esp+172], 0
	jne	SHORT $LN223@main
; Line 1705
	push	0
	push	esi
	call	_SSL_set_session
	add	esp, 8
$LN223@main:
; Line 1706
	cmp	DWORD PTR _bio_pair$1$[esp+172], 0
	je	SHORT $LN224@main
; Line 1707
	lea	eax, DWORD PTR _c_time$[esp+172]
	push	eax
	lea	eax, DWORD PTR _s_time$[esp+176]
	push	eax
	push	ebp
	push	esi
	push	edi
	call	_doit_biopair
	add	esp, 20					; 00000014H
	jmp	SHORT $LN533@main
$LN224@main:
; Line 1709
	push	ebp
	push	esi
	push	edi
	call	_doit
	add	esp, 12					; 0000000cH
$LN533@main:
	mov	DWORD PTR _ret$1$[esp+172], eax
	sub	ebx, 1
	jne	SHORT $LL12@main
	mov	ebp, DWORD PTR _c_ctx$1$[esp+172]
	mov	ebx, DWORD PTR _number$1$[esp+172]
$LN11@main:
; Line 1712
	cmp	DWORD PTR _verbose, 0
	jne	SHORT $LN226@main
; Line 1713
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	esi
	call	_print_details
	add	esp, 8
$LN226@main:
; Line 1715
	mov	eax, DWORD PTR _bytes$2$[esp+172]
	cmp	ebx, 1
	jg	SHORT $LN228@main
	cmp	eax, 1
	jle	SHORT $LN227@main
$LN228@main:
; Line 1716
	push	eax
	push	ebx
	push	OFFSET ??_C@_0CB@EKNPBIPP@?$CFd?5handshakes?5of?5?$CFld?5bytes?5done?6@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN227@main:
; Line 1718
	cmp	DWORD PTR _print_time$1$[esp+172], 0
	je	SHORT $LN229@main
; Line 1725
	movd	xmm0, DWORD PTR _c_time$[esp+172]
	mov	eax, 8
	cvtdq2pd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@408f400000000000
	call	__chkstk
	mov	eax, 8
	movsd	QWORD PTR [esp], xmm0
	movd	xmm0, DWORD PTR _s_time$[esp+180]
	cvtdq2pd xmm0, xmm0
	divsd	xmm0, QWORD PTR __real@408f400000000000
	call	__chkstk
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET ??_C@_0EP@JJOJECDL@Approximate?5total?5server?5time?3?5?$CF@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 24					; 00000018H
$LN229@main:
; Line 1741
	push	edi
	push	esi
	call	_verify_alpn
	mov	ebx, DWORD PTR _ret$1$[esp+180]
	test	eax, eax
	mov	eax, 1
; Line 1743
	push	edi
	push	esi
	cmovs	ebx, eax
	call	_verify_servername
	test	eax, eax
	mov	eax, 1
; Line 1746
	push	edi
	cmovs	ebx, eax
	call	_SSL_free
; Line 1747
	push	esi
	call	_SSL_free
	add	esp, 24					; 00000018H
	jmp	SHORT $end$543
$LN179@main:
; Line 1391
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
$LN530@main:
	mov	ebx, 1
$end$543:
; Line 1750
	mov	eax, DWORD PTR _s_ctx
	test	eax, eax
	je	SHORT $LN232@main
; Line 1751
	push	eax
	call	_SSL_CTX_free
	add	esp, 4
$LN232@main:
; Line 1752
	mov	eax, DWORD PTR _s_ctx2
	test	eax, eax
	je	SHORT $LN233@main
; Line 1753
	push	eax
	call	_SSL_CTX_free
	add	esp, 4
$LN233@main:
; Line 1754
	test	ebp, ebp
	je	SHORT $LN234@main
; Line 1755
	push	ebp
	call	_SSL_CTX_free
	add	esp, 4
$LN234@main:
; Line 1757
	mov	eax, DWORD PTR _bio_stdout
	test	eax, eax
	je	SHORT $LN235@main
; Line 1758
	push	eax
	call	_BIO_free
	add	esp, 4
$LN235@main:
; Line 2926
	mov	eax, DWORD PTR _rsa_tmp
	test	eax, eax
	je	SHORT $LN241@main
; Line 2927
	push	eax
	call	_RSA_free
	add	esp, 4
; Line 2928
	mov	DWORD PTR _rsa_tmp, 0
$LN241@main:
; Line 1764
	call	_ENGINE_cleanup
; Line 1766
	call	_CRYPTO_cleanup_all_ex_data
; Line 1767
	call	_ERR_free_strings
; Line 1768
	push	0
	call	_ERR_remove_thread_state
; Line 1769
	call	_EVP_cleanup
; Line 1770
	push	DWORD PTR _bio_err
	call	_CRYPTO_mem_leaks
; Line 1771
	mov	eax, DWORD PTR _bio_err
	add	esp, 8
	test	eax, eax
	je	SHORT $LN236@main
; Line 1772
	push	eax
	call	_BIO_free
	add	esp, 4
$LN236@main:
; Line 1773
	push	ebx
	jmp	$LN538@main
$LN527@main:
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _lock_dbg_cb
_TEXT	SEGMENT
_mode$ = 8						; size = 4
_type$ = 12						; size = 4
_file$ = 16						; size = 4
_line$ = 20						; size = 4
_lock_dbg_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 872
	mov	edx, DWORD PTR _type$[esp-4]
	xor	eax, eax
	push	ebx
	mov	ebx, DWORD PTR _mode$[esp]
	mov	ecx, ebx
	and	ecx, 12					; 0000000cH
	push	esi
	cmp	ecx, 4
	je	SHORT $LN2@lock_dbg_c
	cmp	ecx, 8
	je	SHORT $LN2@lock_dbg_c
$LN8@lock_dbg_c:
; Line 873
	mov	eax, OFFSET ??_C@_0N@MICJCNHE@invalid?5mode?$AA@
; Line 874
	jmp	SHORT $LN14@lock_dbg_c
$LN2@lock_dbg_c:
; Line 877
	cmp	edx, 40					; 00000028H
	ja	SHORT $LN4@lock_dbg_c
; Line 882
	test	bl, 1
	je	SHORT $LN5@lock_dbg_c
; Line 883
	cmp	DWORD PTR ?modes@?1??lock_dbg_cb@@9@9[edx*4], eax
	je	SHORT $LN7@lock_dbg_c
; Line 884
	mov	eax, OFFSET ??_C@_0P@DLDEBFAD@already?5locked?$AA@
; Line 888
	jmp	SHORT $LN14@lock_dbg_c
$LN7@lock_dbg_c:
	pop	esi
; Line 891
	mov	DWORD PTR ?modes@?1??lock_dbg_cb@@9@9[edx*4], ecx
	pop	ebx
; Line 917
	ret	0
$LN5@lock_dbg_c:
; Line 892
	test	bl, 2
	je	SHORT $LN8@lock_dbg_c
; Line 893
	mov	esi, DWORD PTR ?modes@?1??lock_dbg_cb@@9@9[edx*4]
	test	esi, esi
	jne	SHORT $LN10@lock_dbg_c
; Line 894
	mov	eax, OFFSET ??_C@_0L@CKIDBNLG@not?5locked?$AA@
; Line 895
	jmp	SHORT $LN14@lock_dbg_c
$LN10@lock_dbg_c:
; Line 898
	cmp	esi, ecx
	je	SHORT $LN11@lock_dbg_c
; Line 899
	cmp	ecx, 4
	mov	eax, OFFSET ??_C@_0BO@MEMMBFGL@CRYPTO_r_unlock?5on?5write?5lock?$AA@
	mov	esi, OFFSET ??_C@_0BN@LHOFANHL@CRYPTO_w_unlock?5on?5read?5lock?$AA@
	cmovne	eax, esi
$LN11@lock_dbg_c:
; Line 904
	mov	DWORD PTR ?modes@?1??lock_dbg_cb@@9@9[edx*4], 0
$err$16:
; Line 911
	test	eax, eax
	je	SHORT $LN12@lock_dbg_c
	jmp	SHORT $LN14@lock_dbg_c
$LN4@lock_dbg_c:
; Line 878
	mov	eax, OFFSET ??_C@_0BD@EEHOPEAJ@type?5out?5of?5bounds?$AA@
$LN14@lock_dbg_c:
; Line 913
	push	DWORD PTR _line$[esp+4]
	push	DWORD PTR _file$[esp+8]
	push	edx
	push	ebx
	push	eax
	push	OFFSET ??_C@_0DH@MDGCFGCO@openssl?5?$CIlock_dbg_cb?$CJ?3?5?$CFs?5?$CImode?$DN@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 28					; 0000001cH
$LN12@lock_dbg_c:
; Line 917
	pop	esi
	pop	ebx
	ret	0
_lock_dbg_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _print_details
_TEXT	SEGMENT
_c_ssl$ = 8						; size = 4
_prefix$ = 12						; size = 4
_print_details PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 826
	push	esi
	push	edi
; Line 830
	mov	edi, DWORD PTR _c_ssl$[esp+4]
	push	edi
	call	_SSL_get_current_cipher
	mov	esi, eax
; Line 831
	push	esi
	call	_SSL_CIPHER_get_name
	add	esp, 8
	push	eax
	push	esi
	call	_SSL_CIPHER_get_version
	add	esp, 4
	push	eax
	push	edi
	call	_SSL_get_version
	add	esp, 4
	push	eax
	push	DWORD PTR _prefix$[esp+16]
	push	OFFSET ??_C@_0BD@EMLJCAFF@?$CFs?$CFs?0?5cipher?5?$CFs?5?$CFs?$AA@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
; Line 835
	push	edi
	call	_SSL_get_peer_certificate
	mov	edi, eax
	add	esp, 28					; 0000001cH
; Line 836
	test	edi, edi
	je	SHORT $LN2@print_deta
; Line 837
	push	edi
	call	_X509_get_pubkey
	mov	esi, eax
	add	esp, 4
; Line 838
	test	esi, esi
	je	SHORT $LN3@print_deta
; Line 842
	mov	eax, DWORD PTR [esi]
	cmp	eax, 6
	jne	SHORT $LN6@print_deta
	mov	ecx, DWORD PTR [esi+20]
	test	ecx, ecx
	je	SHORT $LN6@print_deta
	mov	ecx, DWORD PTR [ecx+16]
	test	ecx, ecx
	je	SHORT $LN6@print_deta
; Line 843
	push	ecx
	call	_BN_num_bits
	push	eax
	push	OFFSET ??_C@_0N@FHEGHCBA@?0?5?$CFd?5bit?5RSA?$AA@
; Line 845
	jmp	SHORT $LN10@print_deta
$LN6@print_deta:
; Line 849
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN8@print_deta
	mov	eax, DWORD PTR [esi+20]
	test	eax, eax
	je	SHORT $LN8@print_deta
	mov	eax, DWORD PTR [eax+12]
	test	eax, eax
	je	SHORT $LN8@print_deta
; Line 850
	push	eax
	call	_BN_num_bits
	push	eax
	push	OFFSET ??_C@_0N@CCDEHKFD@?0?5?$CFd?5bit?5DSA?$AA@
$LN10@print_deta:
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 16					; 00000010H
$LN8@print_deta:
; Line 854
	push	esi
	call	_EVP_PKEY_free
	add	esp, 4
$LN3@print_deta:
; Line 856
	push	edi
	call	_X509_free
	add	esp, 4
$LN2@print_deta:
; Line 862
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 8
	pop	edi
	pop	esi
; Line 863
	ret	0
_print_details ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sv_usage
_TEXT	SEGMENT
_sv_usage PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 731
	push	esi
; Line 732
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0BL@GGPCPHOI@usage?3?5ssltest?5?$FLargs?5?4?4?4?$FN?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 733
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 737
	push	OFFSET ??_C@_0CL@KPPMKCMB@?5?9server_auth?5?5?9?5check?5server?5ce@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 738
	push	OFFSET ??_C@_0CL@FMPDDGAH@?5?9client_auth?5?5?9?5do?5client?5authe@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 739
	push	OFFSET ??_C@_0CL@EHEHBOCL@?5?9proxy?5?5?5?5?5?5?5?5?9?5allow?5proxy?5cer@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 740
	push	OFFSET ??_C@_0CO@JFHLELAM@?5?9proxy_auth?5?$DMval?$DO?5?9?5set?5proxy?5p@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 741
	push	OFFSET ??_C@_0DN@ELCOPDJH@?5?9proxy_cond?5?$DMval?$DO?5?9?5expression?5@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 743
	push	OFFSET ??_C@_0BO@LNEKJLCH@?5?9v?5?5?5?5?5?5?5?5?5?5?5?5?9?5more?5output?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 744
	push	OFFSET ??_C@_0BP@KKJLIBGH@?5?9d?5?5?5?5?5?5?5?5?5?5?5?5?9?5debug?5output?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 745
	push	OFFSET ??_C@_0CH@LDEMPAJB@?5?9reuse?5?5?5?5?5?5?5?5?9?5use?5session?9id?5@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 746
	push	OFFSET ??_C@_0DD@FHELCBIE@?5?9num?5?$DMval?$DO?5?5?5?5?9?5number?5of?5conne@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 747
	push	OFFSET ??_C@_0EA@DNBAKJOI@?5?9bytes?5?$DMval?$DO?5?5?9?5number?5of?5bytes@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 750
	push	OFFSET ??_C@_0DM@DOOFKMLI@?5?9dhe512?5?5?5?5?5?5?5?9?5use?5512?5bit?5key@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 752
	push	OFFSET ??_C@_0EJ@IKLOHAGP@?5?9dhe1024?5?5?5?5?5?5?9?5use?51024?5bit?5ke@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 754
	push	OFFSET ??_C@_0ED@JGBLHOEA@?5?9dhe1024dsa?5?5?5?9?5use?51024?5bit?5ke@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 756
	push	OFFSET ??_C@_0BO@CPDJNGK@?5?9no_dhe?5?5?5?5?5?5?5?9?5disable?5DHE?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 759
	push	OFFSET ??_C@_0CA@FLJCFEIA@?5?9no_ecdhe?5?5?5?5?5?9?5disable?5ECDHE?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 762
	push	OFFSET ??_C@_0CK@PKFFOMHI@?5?9psk?5arg?5?5?5?5?5?5?9?5PSK?5in?5hex?5?$CIwit@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 765
	push	OFFSET ??_C@_0CH@CBJNEKIG@?5?9srpuser?5user?5?5?9?5SRP?5username?5t@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 766
	push	OFFSET ??_C@_0CH@OKHIGFD@?5?9srppass?5arg?5?5?5?9?5password?5for?5?8@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 772
	push	OFFSET ??_C@_0BM@FPBKCLHG@?5?9ssl3?5?5?5?5?5?5?5?5?5?9?5use?5SSLv3?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 775
	push	OFFSET ??_C@_0BM@JKGOOFMB@?5?9tls1?5?5?5?5?5?5?5?5?5?9?5use?5TLSv1?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 778
	push	OFFSET ??_C@_0BN@JFGFCCMG@?5?9dtls1?5?5?5?5?5?5?5?5?9?5use?5DTLSv1?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 779
	push	OFFSET ??_C@_0BP@BMMAPGGG@?5?9dtls12?5?5?5?5?5?5?5?9?5use?5DTLSv1?42?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 781
	push	OFFSET ??_C@_0CP@OGDLGBPO@?5?9CApath?5arg?5?5?5?9?5PEM?5format?5dire@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 782
	push	OFFSET ??_C@_0CK@OLHFNGJL@?5?9CAfile?5arg?5?5?5?9?5PEM?5format?5file@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 783
	push	OFFSET ??_C@_0CK@JOGLHHEA@?5?9cert?5arg?5?5?5?5?5?9?5Server?5certific@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 784
	push	OFFSET ??_C@_0DL@DKOEDAPF@?5?9key?5arg?5?5?5?5?5?5?9?5Server?5key?5file@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 786
	push	OFFSET ??_C@_0CK@LCAFHNEP@?5?9c_cert?5arg?5?5?5?9?5Client?5certific@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 787
	push	OFFSET ??_C@_0DN@MOLPFIGN@?5?9c_key?5arg?5?5?5?5?9?5Client?5key?5file@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 789
	push	OFFSET ??_C@_0CC@DDIGJDCK@?5?9cipher?5arg?5?5?5?9?5The?5cipher?5list@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 790
	push	OFFSET ??_C@_0CA@FDOIHLLN@?5?9bio_pair?5?5?5?5?5?9?5Use?5BIO?5pairs?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 791
	push	OFFSET ??_C@_0DC@FAEAMCHH@?5?9f?5?5?5?5?5?5?5?5?5?5?5?5?9?5Test?5even?5cases@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 792
	push	OFFSET ??_C@_0ED@CEOMPCAE@?5?9time?5?5?5?5?5?5?5?5?5?9?5measure?5process@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 794
	push	OFFSET ??_C@_0CH@FBLDGFJA@?5?9zlib?5?5?5?5?5?5?5?5?5?9?5use?5zlib?5compre@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 795
	push	OFFSET ??_C@_0CG@PDPMGBPE@?5?9rle?5?5?5?5?5?5?5?5?5?5?9?5use?5rle?5compres@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 797
	push	OFFSET ??_C@_0LF@BAOACMLD@?5?9named_curve?5arg?5?5?9?5Elliptic?5cu@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 802
	push	OFFSET ??_C@_0MB@JEFMBCOB@?5?9test_cipherlist?5?9?5Verifies?5the@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 806
	push	OFFSET ??_C@_0DE@BFLHBEMG@?5?9serverinfo_file?5file?5?9?5have?5se@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 807
	push	OFFSET ??_C@_0DG@FHEELKCM@?5?9serverinfo_sct?5?5?9?5have?5client?5@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 808
	push	OFFSET ??_C@_0DH@MDGDJJFA@?5?9serverinfo_tack?5?9?5have?5client?5@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 810
	push	OFFSET ??_C@_0DH@EMEGIEJJ@?5?9custom_ext?5?9?5try?5various?5custo@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 812
	push	OFFSET ??_C@_0DG@DDNEDIHP@?5?9alpn_client?5?$DMstring?$DO?5?9?5have?5cl@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 813
	push	OFFSET ??_C@_0DG@DAGJDFIA@?5?9alpn_server?5?$DMstring?$DO?5?9?5have?5se@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 814
	push	OFFSET ??_C@_0DC@NCPACCEJ@?5?9alpn_server1?5?$DMstring?$DO?5?9?5alias?5@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 815
	push	OFFSET ??_C@_0EB@NFIOLKJE@?5?9alpn_server2?5?$DMstring?$DO?5?9?5have?5s@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 816
	push	OFFSET ??_C@_0EI@PMPLADGC@?5?9alpn_expected?5?$DMstring?$DO?5?9?5the?5A@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 818
	push	OFFSET ??_C@_0DN@MLPJCDPH@?5?9sn_client?5?$DMstring?$DO?5?5?9?5have?5cli@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 819
	push	OFFSET ??_C@_0EK@LKFPBAGA@?5?9sn_server1?5?$DMstring?$DO?5?9?5have?5ser@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 820
	push	OFFSET ??_C@_0EK@PCLIKBM@?5?9sn_server2?5?$DMstring?$DO?5?9?5have?5ser@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 821
	push	OFFSET ??_C@_0CL@ILJMHFOC@?5?9sn_expect1?5?5?5?5?5?5?5?5?5?5?9?5expected@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 822
	push	OFFSET ??_C@_0CL@EAMFMDAE@?5?9sn_expect2?5?5?5?5?5?5?5?5?5?5?9?5expected@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
	pop	esi
; Line 823
	ret	0
_sv_usage ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _do_test_cipherlist
_TEXT	SEGMENT
_do_test_cipherlist PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 3143
	push	ebx
	push	ebp
; Line 3162
	mov	ebp, DWORD PTR __imp____acrt_iob_func
	push	esi
	push	edi
	push	OFFSET ??_C@_0CC@ELJOEPCM@testing?5SSLv3?5cipher?5list?5order?3@
	push	2
	xor	esi, esi
	call	ebp
	add	esp, 4
	push	eax
	call	_fprintf
; Line 3163
	call	_SSLv3_method
	mov	ebx, eax
; Line 3164
	xor	edi, edi
; Line 3165
	push	edi
	mov	ecx, DWORD PTR [ebx+88]
	call	ecx
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	test	ecx, ecx
	je	SHORT $LN23@do_test_ci
$LL2@do_test_ci:
	inc	esi
; Line 3166
	test	edi, edi
	je	SHORT $LN7@do_test_ci
; Line 3167
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edi+8]
	jae	$LN13@do_test_ci
$LN7@do_test_ci:
; Line 3165
	mov	eax, DWORD PTR [ebx+88]
; Line 3171
	mov	edi, ecx
	push	esi
	call	eax
	mov	ecx, eax
	add	esp, 4
	test	ecx, ecx
	jne	SHORT $LL2@do_test_ci
$LN23@do_test_ci:
; Line 3173
	push	OFFSET ??_C@_03DJDALPN@ok?6?$AA@
	push	2
	inc	esi
	call	ebp
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 3176
	push	OFFSET ??_C@_0CC@JLDPMBAP@testing?5TLSv1?5cipher?5list?5order?3@
	push	2
	call	ebp
	add	esp, 4
	push	eax
	call	_fprintf
; Line 3177
	call	_TLSv1_method
	mov	ebx, eax
; Line 3178
	xor	edi, edi
; Line 3179
	push	esi
	mov	ecx, DWORD PTR [ebx+88]
	call	ecx
	mov	ecx, eax
	add	esp, 12					; 0000000cH
	test	ecx, ecx
	je	SHORT $LN24@do_test_ci
$LL4@do_test_ci:
	inc	esi
; Line 3180
	test	edi, edi
	je	SHORT $LN9@do_test_ci
; Line 3181
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edi+8]
	jae	SHORT $LN13@do_test_ci
$LN9@do_test_ci:
; Line 3179
	mov	eax, DWORD PTR [ebx+88]
; Line 3185
	mov	edi, ecx
	push	esi
	call	eax
	mov	ecx, eax
	add	esp, 4
	test	ecx, ecx
	jne	SHORT $LL4@do_test_ci
$LN24@do_test_ci:
; Line 3187
	push	OFFSET ??_C@_03DJDALPN@ok?6?$AA@
	push	2
	call	ebp
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 3190
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 3191
	ret	0
$LN13@do_test_ci:
; Line 3168
	push	DWORD PTR [edi+8]
	push	eax
	push	OFFSET ??_C@_0BE@DBEJMPIK@failed?5?$CFlx?5vs?4?5?$CFlx?6?$AA@
	push	2
	call	ebp
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
; Line 3169
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 3191
	ret	0
_do_test_cipherlist ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _doit
_TEXT	SEGMENT
_done$1$ = -64						; size = 4
_c_bio$1$ = -60						; size = 4
_s_write$1$ = -56					; size = 4
_sbuf$1$ = -52						; size = 4
_c_r$3$ = -48						; size = 4
_c_w$1$ = -44						; size = 4
_c_write$1$ = -40					; size = 4
_bufsiz$1$ = -36					; size = 4
_s_r$3$ = -32						; size = 4
_max_frag$1$ = -28					; size = 4
_s_to_c$1$ = -24					; size = 4
_cbuf$1$ = -20						; size = 4
_sw_num$1$ = -16					; size = 4
_c_to_s$1$ = -12					; size = 4
_cr_num$1$ = -8						; size = 4
_sr_num$1$ = -4						; size = 4
_s_ssl$ = 8						; size = 4
_c_ssl$ = 12						; size = 4
_ret$1$ = 16						; size = 4
_count$ = 16						; size = 4
_doit	PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2155
	mov	eax, 64					; 00000040H
	call	__chkstk
; Line 2158
	mov	eax, DWORD PTR _count$[esp+60]
; Line 2172
	mov	ecx, 40960				; 0000a000H
	push	ebx
	push	ebp
	push	esi
	push	edi
	xor	edi, edi
	mov	DWORD PTR _cr_num$1$[esp+80], eax
	xor	esi, esi
	mov	DWORD PTR _sw_num$1$[esp+80], eax
	xor	ebx, ebx
	mov	DWORD PTR _sr_num$1$[esp+80], eax
	cmp	eax, ecx
	mov	DWORD PTR _c_to_s$1$[esp+80], edi
	mov	ebp, eax
	mov	DWORD PTR _s_to_c$1$[esp+80], edi
; Line 2174
	push	2174					; 0000087eH
	cmovg	ebp, ecx
	mov	DWORD PTR _done$1$[esp+84], edi
	push	OFFSET ??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@
	push	ebp
	mov	DWORD PTR _max_frag$1$[esp+92], 5120	; 00001400H
	mov	DWORD PTR _bufsiz$1$[esp+92], ebp
	call	_CRYPTO_malloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _cbuf$1$[esp+80], eax
	test	eax, eax
	je	$LN108@doit
; Line 2176
	push	2176					; 00000880H
	push	OFFSET ??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@
	push	ebp
	call	_CRYPTO_malloc
	mov	edi, eax
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _sbuf$1$[esp+80], edi
	test	edi, edi
	je	$LN109@doit
; Line 2179
	push	ebp
	push	ebx
	push	DWORD PTR _cbuf$1$[esp+88]
	call	_memset
; Line 2180
	push	ebp
	push	ebx
	push	edi
	call	_memset
; Line 2182
	call	_BIO_s_mem
	push	eax
	call	_BIO_new
	mov	ebp, eax
	mov	DWORD PTR _c_to_s$1$[esp+108], ebp
; Line 2183
	call	_BIO_s_mem
	push	eax
	call	_BIO_new
	add	esp, 32					; 00000020H
	mov	DWORD PTR _s_to_c$1$[esp+80], eax
; Line 2184
	test	eax, eax
	je	$LN10@doit
	test	ebp, ebp
	je	$LN10@doit
; Line 2189
	call	_BIO_f_ssl
	push	eax
	call	_BIO_new
	mov	esi, eax
	mov	DWORD PTR _c_bio$1$[esp+84], esi
; Line 2190
	call	_BIO_f_ssl
	push	eax
	call	_BIO_new
	add	esp, 8
	mov	ebx, eax
; Line 2191
	test	esi, esi
	je	$LN10@doit
	test	ebx, ebx
	je	$LN10@doit
; Line 2196
	mov	ebp, DWORD PTR _c_ssl$[esp+76]
	push	ebp
	call	_SSL_set_connect_state
; Line 2197
	mov	edi, DWORD PTR _c_to_s$1$[esp+84]
	push	edi
	push	DWORD PTR _s_to_c$1$[esp+88]
	push	ebp
	call	_SSL_set_bio
; Line 2198
	push	0
	push	5120					; 00001400H
	push	52					; 00000034H
	push	ebp
	call	_SSL_ctrl
; Line 2199
	push	ebp
	push	0
	push	109					; 0000006dH
	push	esi
	call	_BIO_ctrl
; Line 2201
	mov	ebp, DWORD PTR _s_ssl$[esp+124]
	push	ebp
	call	_SSL_set_accept_state
; Line 2202
	push	DWORD PTR _s_to_c$1$[esp+132]
	push	edi
	push	ebp
	call	_SSL_set_bio
	add	esp, 64					; 00000040H
; Line 2203
	push	0
	push	5120					; 00001400H
	push	52					; 00000034H
	push	ebp
	call	_SSL_ctrl
; Line 2204
	push	ebp
	push	0
	push	109					; 0000006dH
	push	ebx
	call	_BIO_ctrl
	add	esp, 32					; 00000020H
; Line 2206
	mov	DWORD PTR _c_r$3$[esp+80], 0
; Line 2209
	xor	ebp, ebp
	mov	DWORD PTR _s_r$3$[esp+80], 1
; Line 2210
	xor	eax, eax
	mov	DWORD PTR _c_w$1$[esp+80], 1
	mov	DWORD PTR _c_write$1$[esp+80], 1
	mov	DWORD PTR _s_write$1$[esp+80], eax
$LL2@doit:
; Line 2215
	xor	esi, esi
	xor	edi, edi
; Line 2217
	push	esi
	push	esi
	push	10					; 0000000aH
	push	ebx
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 2218
	test	eax, eax
	je	SHORT $LN13@doit
	cmp	DWORD PTR _s_r$3$[esp+80], esi
	jne	SHORT $LN12@doit
$LN13@doit:
	test	ebp, ebp
	je	SHORT $LN11@doit
$LN12@doit:
; Line 2219
	mov	edi, 1
$LN11@doit:
; Line 2221
	push	0
	push	0
	push	10					; 0000000aH
	push	DWORD PTR _c_bio$1$[esp+92]
	call	_BIO_ctrl
	add	esp, 16					; 00000010H
; Line 2222
	test	eax, eax
	je	SHORT $LN16@doit
	cmp	DWORD PTR _c_r$3$[esp+80], esi
	jne	SHORT $LN15@doit
$LN16@doit:
	cmp	DWORD PTR _c_w$1$[esp+80], esi
	je	SHORT $LN14@doit
$LN15@doit:
; Line 2223
	mov	esi, 1
$LN14@doit:
; Line 2225
	test	edi, edi
	je	SHORT $LN96@doit
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN96@doit
; Line 2226
	push	DWORD PTR _s_ssl$[esp+76]
	call	_SSL_state
	add	esp, 4
	test	eax, 12288				; 00003000H
	je	SHORT $LN96@doit
; Line 2227
	push	DWORD PTR _s_ssl$[esp+76]
	call	_SSL_state_string_long
	push	eax
	push	OFFSET ??_C@_0CD@MNGPMDCC@server?5waiting?5in?5SSL_accept?5?9?5?$CF@
	call	_printf
	add	esp, 12					; 0000000cH
$LN96@doit:
; Line 2236
	test	esi, esi
	je	$LN94@doit
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN93@doit
; Line 2237
	mov	esi, DWORD PTR _c_ssl$[esp+76]
	push	esi
	call	_SSL_state
	add	esp, 4
	test	eax, 12288				; 00003000H
	je	SHORT $LN93@doit
; Line 2238
	push	esi
	call	_SSL_state_string_long
	push	eax
	push	OFFSET ??_C@_0CE@EMPDBGIF@client?5waiting?5in?5SSL_connect?5?9?5@
	call	_printf
	add	esp, 12					; 0000000cH
$LN93@doit:
; Line 2252
	mov	ecx, DWORD PTR _done$1$[esp+80]
	test	cl, 1
	jne	$LN100@doit
; Line 2253
	cmp	DWORD PTR _c_write$1$[esp+80], 0
	je	$LN23@doit
; Line 2254
	mov	edx, DWORD PTR _count$[esp+76]
	mov	eax, edx
	cmp	edx, DWORD PTR _bufsiz$1$[esp+80]
	cmovg	eax, DWORD PTR _bufsiz$1$[esp+80]
; Line 2255
	push	eax
	push	DWORD PTR _cbuf$1$[esp+84]
	push	DWORD PTR _c_bio$1$[esp+88]
	call	_BIO_write
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 2256
	test	esi, esi
	js	SHORT $LN118@doit
; Line 2269
	je	$LN86@doit
; Line 2273
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN33@doit
; Line 2274
	push	esi
	push	OFFSET ??_C@_0BB@IBPCFKPH@client?5wrote?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
$LN33@doit:
; Line 2278
	sub	DWORD PTR _count$[esp+76], esi
; Line 2279
	mov	eax, DWORD PTR _max_frag$1$[esp+80]
	mov	DWORD PTR _s_r$3$[esp+80], 1
	mov	DWORD PTR _c_write$1$[esp+80], 0
	cmp	eax, 1029				; 00000405H
	jle	$LN101@doit
; Line 2280
	sub	eax, 5
	push	0
	push	eax
	push	52					; 00000034H
	push	DWORD PTR _c_ssl$[esp+88]
	mov	DWORD PTR _max_frag$1$[esp+96], eax
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
; Line 2282
	jmp	$LN101@doit
$LN23@doit:
; Line 2283
	push	DWORD PTR _bufsiz$1$[esp+80]
	push	DWORD PTR _cbuf$1$[esp+84]
	push	DWORD PTR _c_bio$1$[esp+88]
	call	_BIO_read
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 2284
	test	esi, esi
	jns	SHORT $LN111@doit
$LN118@doit:
; Line 2287
	mov	esi, DWORD PTR _c_bio$1$[esp+80]
	push	8
	push	esi
	mov	DWORD PTR _c_w$1$[esp+88], 0
	mov	DWORD PTR _c_r$3$[esp+88], 0
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	$LN27@doit
; Line 2288
	push	1
	push	esi
	call	_BIO_test_flags
	test	eax, eax
	mov	ecx, 1
	mov	eax, DWORD PTR _c_r$3$[esp+88]
	cmovne	eax, ecx
; Line 2290
	push	2
	push	esi
	mov	DWORD PTR _c_r$3$[esp+96], eax
	call	_BIO_test_flags
; Line 2296
	mov	ecx, DWORD PTR _done$1$[esp+96]
	add	esp, 16					; 00000010H
	test	eax, eax
	mov	eax, DWORD PTR _s_write$1$[esp+80]
	je	SHORT $LN45@doit
; Line 2291
	mov	DWORD PTR _c_w$1$[esp+80], 1
; Line 2296
	jmp	SHORT $LN45@doit
$LN111@doit:
; Line 2297
	je	$LN86@doit
; Line 2301
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN43@doit
; Line 2302
	push	esi
	push	OFFSET ??_C@_0BA@OOHCFBKE@client?5read?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
$LN43@doit:
; Line 2303
	mov	ecx, DWORD PTR _cr_num$1$[esp+80]
	sub	ecx, esi
; Line 2304
	cmp	DWORD PTR _sw_num$1$[esp+80], 0
	mov	DWORD PTR _cr_num$1$[esp+80], ecx
	jle	SHORT $LN44@doit
; Line 2305
	mov	DWORD PTR _s_write$1$[esp+80], 1
; Line 2306
	mov	ebp, 1
$LN44@doit:
; Line 2308
	test	ecx, ecx
	jg	SHORT $LN101@doit
; Line 2309
	mov	eax, 1
; Line 2311
	mov	ecx, 3
	mov	DWORD PTR _s_write$1$[esp+80], eax
	mov	ebp, eax
	mov	DWORD PTR _done$1$[esp+80], ecx
	jmp	SHORT $LN45@doit
$LN94@doit:
; Line 2247
	test	edi, edi
	je	$LN85@doit
$LN101@doit:
	mov	ecx, DWORD PTR _done$1$[esp+80]
$LN100@doit:
	mov	eax, DWORD PTR _s_write$1$[esp+80]
$LN45@doit:
; Line 2317
	test	edi, edi
	je	$LN106@doit
	test	cl, 2
	jne	$LN106@doit
; Line 2318
	test	eax, eax
	jne	$LN47@doit
; Line 2319
	push	DWORD PTR _bufsiz$1$[esp+80]
	mov	edi, DWORD PTR _sbuf$1$[esp+84]
	push	edi
	push	ebx
	call	_BIO_read
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 2320
	test	esi, esi
	jns	SHORT $LN113@doit
; Line 2323
	push	8
	push	ebx
	xor	esi, esi
	xor	ebp, ebp
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	jne	$LN115@doit
; Line 2329
	push	OFFSET ??_C@_0BB@PEAALMLB@ERROR?5in?5SERVER?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2330
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 2331
	mov	esi, DWORD PTR _c_bio$1$[esp+92]
	add	esp, 12					; 0000000cH
	jmp	$LN109@doit
$LN113@doit:
; Line 2333
	je	$LN88@doit
; Line 2339
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN57@doit
; Line 2340
	push	esi
	push	OFFSET ??_C@_0BA@MHEHNLIN@server?5read?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
$LN57@doit:
; Line 2341
	mov	eax, DWORD PTR _sr_num$1$[esp+80]
	sub	eax, esi
; Line 2342
	cmp	DWORD PTR _count$[esp+76], 0
	mov	DWORD PTR _sr_num$1$[esp+80], eax
	jle	SHORT $LN58@doit
; Line 2343
	mov	DWORD PTR _c_write$1$[esp+80], 1
; Line 2344
	mov	DWORD PTR _c_w$1$[esp+80], 1
$LN58@doit:
; Line 2352
	mov	edi, DWORD PTR _done$1$[esp+80]
	test	eax, eax
	jg	$LN70@doit
; Line 2348
	mov	DWORD PTR _s_write$1$[esp+80], 1
	mov	ebp, 1
; Line 2349
	mov	DWORD PTR _c_write$1$[esp+80], 0
; Line 2352
	jmp	$LN70@doit
$LN47@doit:
; Line 2353
	mov	edi, DWORD PTR _sw_num$1$[esp+80]
	mov	eax, edi
	cmp	edi, DWORD PTR _bufsiz$1$[esp+80]
	cmovg	eax, DWORD PTR _bufsiz$1$[esp+80]
; Line 2354
	push	eax
	push	DWORD PTR _sbuf$1$[esp+84]
	push	ebx
	call	_BIO_write
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 2355
	test	esi, esi
	jns	SHORT $LN114@doit
; Line 2358
	push	8
	push	ebx
	xor	esi, esi
	xor	ebp, ebp
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	$LN62@doit
$LN115@doit:
; Line 2359
	push	1
	push	ebx
	call	_BIO_test_flags
	test	eax, eax
	mov	eax, 1
; Line 2361
	push	2
	cmovne	esi, eax
	push	ebx
	mov	DWORD PTR _s_r$3$[esp+96], esi
	call	_BIO_test_flags
; Line 2367
	mov	edi, DWORD PTR _done$1$[esp+96]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN70@doit
; Line 2362
	mov	ebp, 1
; Line 2367
	jmp	SHORT $LN70@doit
$LN114@doit:
; Line 2368
	je	$LN89@doit
; Line 2374
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN68@doit
; Line 2375
	push	esi
	push	OFFSET ??_C@_0BB@MDGJPHBB@server?5wrote?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
$LN68@doit:
; Line 2376
	sub	edi, esi
; Line 2378
	mov	DWORD PTR _c_r$3$[esp+80], 1
	xor	eax, eax
	mov	DWORD PTR _sw_num$1$[esp+80], edi
; Line 2379
	test	edi, edi
	mov	DWORD PTR _s_write$1$[esp+80], eax
; Line 2380
	mov	edi, DWORD PTR _done$1$[esp+80]
	jg	SHORT $LN69@doit
	or	edi, 2
	mov	DWORD PTR _done$1$[esp+80], edi
$LN69@doit:
; Line 2381
	mov	eax, DWORD PTR _max_frag$1$[esp+80]
	cmp	eax, 1029				; 00000405H
	jle	SHORT $LN70@doit
; Line 2382
	sub	eax, 5
	push	0
	push	eax
	push	52					; 00000034H
	push	DWORD PTR _s_ssl$[esp+88]
	mov	DWORD PTR _max_frag$1$[esp+96], eax
	call	_SSL_ctrl
	add	esp, 16					; 00000010H
	jmp	SHORT $LN70@doit
$LN106@doit:
	mov	edi, DWORD PTR _done$1$[esp+80]
$LN70@doit:
	mov	eax, edi
	and	eax, 3
	cmp	al, 3
; Line 2387
	jne	$LL2@doit
; Line 2391
	cmp	DWORD PTR _verbose, 0
	je	SHORT $LN72@doit
; Line 2392
	push	OFFSET ??_C@_06NLKIMDJB@DONE?3?5?$AA@
	push	DWORD PTR _c_ssl$[esp+80]
	call	_print_details
	add	esp, 8
$LN72@doit:
; Line 2393
	call	_verify_serverinfo
; Line 2395
	mov	esi, DWORD PTR _c_bio$1$[esp+80]
	mov	edi, DWORD PTR _sbuf$1$[esp+80]
	test	eax, eax
	js	$LN109@doit
; Line 2397
	xor	ecx, ecx
	cmp	DWORD PTR _custom_ext_error, ecx
	setne	cl
	mov	DWORD PTR _ret$1$[esp+76], ecx
; Line 2401
	mov	ebp, ecx
	jmp	$err$120
$LN27@doit:
; Line 2265
	push	OFFSET ??_C@_0BB@IAPOCMPA@ERROR?5in?5CLIENT?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2266
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 2267
	mov	edi, DWORD PTR _sbuf$1$[esp+92]
	add	esp, 12					; 0000000cH
	jmp	$LN109@doit
$LN86@doit:
; Line 2270
	push	OFFSET ??_C@_0BL@EDFJMBF@SSL?5CLIENT?5STARTUP?5FAILED?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2271
	mov	esi, DWORD PTR _c_bio$1$[esp+88]
	add	esp, 8
	mov	edi, DWORD PTR _sbuf$1$[esp+80]
	jmp	$LN109@doit
$LN88@doit:
; Line 2334
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 2335
	push	OFFSET ??_C@_0CH@JFLLBILH@SSL?5SERVER?5STARTUP?5FAILED?5in?5SSL@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2337
	mov	esi, DWORD PTR _c_bio$1$[esp+88]
	add	esp, 8
	jmp	$LN109@doit
$LN62@doit:
; Line 2364
	push	OFFSET ??_C@_0BB@PEAALMLB@ERROR?5in?5SERVER?6?$AA@
	push	2
$LN116@doit:
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2365
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 2366
	mov	esi, DWORD PTR _c_bio$1$[esp+92]
	add	esp, 12					; 0000000cH
	mov	edi, DWORD PTR _sbuf$1$[esp+80]
	jmp	SHORT $LN109@doit
$LN89@doit:
; Line 2369
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 2370
	push	OFFSET ??_C@_0CI@MAHGPIHK@SSL?5SERVER?5STARTUP?5FAILED?5in?5SSL@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2372
	mov	esi, DWORD PTR _c_bio$1$[esp+88]
	add	esp, 8
	mov	edi, DWORD PTR _sbuf$1$[esp+80]
	jmp	SHORT $LN109@doit
$LN85@doit:
; Line 2248
	push	OFFSET ??_C@_0BC@EBKOHBO@ERROR?5IN?5STARTUP?6?$AA@
	push	1
; Line 2250
	jmp	SHORT $LN116@doit
$LN10@doit:
; Line 2192
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
	add	esp, 4
; Line 2193
	jmp	SHORT $LN109@doit
$LN108@doit:
	xor	edi, edi
$LN109@doit:
	mov	ebp, 1
$err$120:
; Line 2411
	mov	eax, DWORD PTR _s_ssl$[esp+76]
	test	eax, eax
	je	SHORT $LN75@doit
; Line 2412
	mov	DWORD PTR [eax+12], 0
; Line 2413
	mov	DWORD PTR [eax+16], 0
$LN75@doit:
; Line 2415
	mov	eax, DWORD PTR _c_ssl$[esp+76]
	test	eax, eax
	je	SHORT $LN76@doit
; Line 2416
	mov	DWORD PTR [eax+12], 0
; Line 2417
	mov	DWORD PTR [eax+16], 0
$LN76@doit:
; Line 2420
	mov	eax, DWORD PTR _c_to_s$1$[esp+80]
	test	eax, eax
	je	SHORT $LN77@doit
; Line 2421
	push	eax
	call	_BIO_free
	add	esp, 4
$LN77@doit:
; Line 2422
	mov	eax, DWORD PTR _s_to_c$1$[esp+80]
	test	eax, eax
	je	SHORT $LN78@doit
; Line 2423
	push	eax
	call	_BIO_free
	add	esp, 4
$LN78@doit:
; Line 2424
	test	esi, esi
	je	SHORT $LN79@doit
; Line 2425
	push	esi
	call	_BIO_free_all
	add	esp, 4
$LN79@doit:
; Line 2426
	test	ebx, ebx
	je	SHORT $LN80@doit
; Line 2427
	push	ebx
	call	_BIO_free_all
	add	esp, 4
$LN80@doit:
; Line 2429
	mov	eax, DWORD PTR _cbuf$1$[esp+80]
	test	eax, eax
	je	SHORT $LN81@doit
; Line 2430
	push	eax
	call	_CRYPTO_free
	add	esp, 4
$LN81@doit:
; Line 2431
	test	edi, edi
	je	SHORT $LN95@doit
; Line 2432
	push	edi
	call	_CRYPTO_free
	add	esp, 4
$LN95@doit:
; Line 2434
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 2435
	add	esp, 64					; 00000040H
	ret	0
_doit	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _doit_biopair
_TEXT	SEGMENT
_c_ssl_bio$1$ = -16460					; size = 4
_s_ssl_bio$1$ = -16456					; size = 4
_cr_num$1$ = -16452					; size = 4
_sr_num$1$ = -16448					; size = 4
_c_ssl$GSCopy$1$ = -16444				; size = 4
_sw_num$1$ = -16440					; size = 4
_s_ssl$GSCopy$1$ = -16436				; size = 4
_client_io$ = -16432					; size = 4
_io2$1$ = -16428					; size = 4
_io1$1$ = -16424					; size = 4
_server$ = -16420					; size = 4
_server_io$ = -16416					; size = 4
_client$ = -16412					; size = 4
_r2$1$ = -16408						; size = 4
_dataptr$1 = -16404					; size = 4
_c_time$GSCopy$1$ = -16400				; size = 4
_s_time$GSCopy$1$ = -16396				; size = 4
_dataptr$2 = -16392					; size = 4
_cbuf$3 = -16388					; size = 8192
_sbuf$4 = -8196						; size = 8192
__$ArrayPad$ = -4					; size = 4
_s_ssl$ = 8						; size = 4
_c_ssl$ = 12						; size = 4
_count$ = 16						; size = 4
_s_time$ = 20						; size = 4
_c_time$ = 24						; size = 4
_doit_biopair PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 1779
	mov	eax, 16460				; 0000404cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+16460], eax
	mov	eax, DWORD PTR _s_ssl$[esp+16456]
	push	ebx
	push	ebp
; Line 1780
	mov	ebp, DWORD PTR _count$[esp+16464]
	mov	ebx, ebp
	mov	DWORD PTR _s_ssl$GSCopy$1$[esp+16468], eax
	mov	eax, DWORD PTR _c_ssl$[esp+16464]
	push	esi
	mov	DWORD PTR _c_ssl$GSCopy$1$[esp+16472], eax
; Line 1781
	xor	esi, esi
	mov	eax, DWORD PTR _s_time$[esp+16468]
	push	edi
	mov	DWORD PTR _s_time$GSCopy$1$[esp+16476], eax
	xor	edi, edi
	mov	eax, DWORD PTR _c_time$[esp+16472]
; Line 1783
	lea	edi, DWORD PTR [esi+1]
	mov	DWORD PTR _c_time$GSCopy$1$[esp+16476], eax
; Line 1787
	lea	eax, DWORD PTR _server_io$[esp+16476]
	push	256					; 00000100H
	push	eax
	lea	eax, DWORD PTR _server$[esp+16484]
	mov	DWORD PTR _cr_num$1$[esp+16484], ebp
	push	256					; 00000100H
	push	eax
	mov	DWORD PTR _sw_num$1$[esp+16492], ebx
	mov	DWORD PTR _sr_num$1$[esp+16492], ebp
	mov	DWORD PTR _server$[esp+16492], esi
	mov	DWORD PTR _server_io$[esp+16492], esi
	mov	DWORD PTR _client$[esp+16492], esi
	mov	DWORD PTR _client_io$[esp+16492], esi
	call	_BIO_new_bio_pair
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN116@doit_biopa
; Line 1789
	push	256					; 00000100H
	lea	eax, DWORD PTR _client_io$[esp+16480]
	push	eax
	lea	eax, DWORD PTR _client$[esp+16484]
	push	256					; 00000100H
	push	eax
	call	_BIO_new_bio_pair
	add	esp, 16					; 00000010H
	test	eax, eax
	je	$LN116@doit_biopa
; Line 1792
	call	_BIO_f_ssl
	push	eax
	call	_BIO_new
	mov	edi, eax
	add	esp, 4
	mov	DWORD PTR _s_ssl_bio$1$[esp+16476], edi
; Line 1793
	test	edi, edi
	je	$LN114@doit_biopa
; Line 1796
	call	_BIO_f_ssl
	push	eax
	call	_BIO_new
	mov	esi, eax
	add	esp, 4
	mov	DWORD PTR _c_ssl_bio$1$[esp+16476], esi
; Line 1797
	test	esi, esi
	je	$LN113@doit_biopa
; Line 1800
	push	DWORD PTR _c_ssl$GSCopy$1$[esp+16476]
	call	_SSL_set_connect_state
; Line 1801
	mov	ecx, DWORD PTR _client$[esp+16480]
	push	ecx
	push	ecx
	push	DWORD PTR _c_ssl$GSCopy$1$[esp+16488]
	call	_SSL_set_bio
; Line 1802
	push	DWORD PTR _c_ssl$GSCopy$1$[esp+16492]
	push	0
	push	109					; 0000006dH
	push	esi
	call	_BIO_ctrl
; Line 1804
	push	DWORD PTR _s_ssl$GSCopy$1$[esp+16508]
	call	_SSL_set_accept_state
; Line 1805
	mov	eax, DWORD PTR _server$[esp+16512]
	push	eax
	push	eax
	push	DWORD PTR _s_ssl$GSCopy$1$[esp+16520]
	call	_SSL_set_bio
; Line 1806
	push	DWORD PTR _s_ssl$GSCopy$1$[esp+16524]
	push	0
	push	109					; 0000006dH
	push	edi
	call	_BIO_ctrl
	add	esp, 64					; 00000040H
$LL4@doit_biopa:
; Line 1856
	call	DWORD PTR __imp__clock
; Line 1858
	push	8192					; 00002000H
	mov	edi, eax
	lea	eax, DWORD PTR _cbuf$3[esp+16480]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1860
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN13@doit_biopa
; Line 1861
	push	DWORD PTR _c_ssl$GSCopy$1$[esp+16476]
	call	_SSL_state
	add	esp, 4
	test	eax, 12288				; 00003000H
	je	SHORT $LN13@doit_biopa
; Line 1862
	push	DWORD PTR _c_ssl$GSCopy$1$[esp+16476]
	call	_SSL_state_string_long
	push	eax
	push	OFFSET ??_C@_0CE@EMPDBGIF@client?5waiting?5in?5SSL_connect?5?9?5@
	call	_printf
	add	esp, 12					; 0000000cH
$LN13@doit_biopa:
; Line 1865
	test	ebp, ebp
	jle	$LN21@doit_biopa
; Line 1868
	cmp	ebp, 8192				; 00002000H
	mov	ecx, 8192				; 00002000H
	mov	eax, ebp
	cmovg	eax, ecx
; Line 1872
	push	eax
	lea	eax, DWORD PTR _cbuf$3[esp+16480]
	push	eax
	push	esi
	call	_BIO_write
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1873
	test	esi, esi
	jns	SHORT $LN118@doit_biopa
; Line 1874
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16476]
	push	8
	push	esi
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN21@doit_biopa
$LN86@doit_biopa:
; Line 1875
	push	OFFSET ??_C@_0BB@IAPOCMPA@ERROR?5in?5CLIENT?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 1876
	mov	ebp, DWORD PTR _s_ssl_bio$1$[esp+16484]
	add	esp, 8
	mov	edi, 1
	jmp	$err$126
$LN118@doit_biopa:
; Line 1884
	je	$LN88@doit_biopa
; Line 1888
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN22@doit_biopa
; Line 1889
	push	esi
	push	OFFSET ??_C@_0BB@IBPCFKPH@client?5wrote?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
$LN22@doit_biopa:
; Line 1890
	sub	ebp, esi
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16476]
	mov	DWORD PTR _count$[esp+16472], ebp
$LN21@doit_biopa:
; Line 1894
	mov	ebp, DWORD PTR _cr_num$1$[esp+16476]
	test	ebp, ebp
	jle	SHORT $LN28@doit_biopa
; Line 1897
	push	8192					; 00002000H
	lea	eax, DWORD PTR _cbuf$3[esp+16480]
	push	eax
	push	esi
	call	_BIO_read
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1898
	test	esi, esi
	jns	SHORT $LN119@doit_biopa
; Line 1899
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16476]
	push	8
	push	esi
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	$LN86@doit_biopa
; Line 1902
	jmp	SHORT $LN28@doit_biopa
$LN119@doit_biopa:
; Line 1906
	je	$LN88@doit_biopa
; Line 1910
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN29@doit_biopa
; Line 1911
	push	esi
	push	OFFSET ??_C@_0BA@OOHCFBKE@client?5read?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
$LN29@doit_biopa:
; Line 1912
	sub	ebp, esi
	mov	DWORD PTR _cr_num$1$[esp+16476], ebp
$LN28@doit_biopa:
; Line 1925
	mov	ebp, DWORD PTR __imp__clock
	call	ebp
	mov	ecx, DWORD PTR _c_time$GSCopy$1$[esp+16476]
	sub	eax, edi
	add	DWORD PTR [ecx], eax
; Line 1933
	call	ebp
; Line 1935
	push	8192					; 00002000H
	mov	edi, eax
	lea	eax, DWORD PTR _sbuf$4[esp+16480]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1937
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN31@doit_biopa
; Line 1938
	mov	ebp, DWORD PTR _s_ssl$GSCopy$1$[esp+16476]
	push	ebp
	call	_SSL_state
	add	esp, 4
	test	eax, 12288				; 00003000H
	je	SHORT $LN31@doit_biopa
; Line 1939
	push	ebp
	call	_SSL_state_string_long
	push	eax
	push	OFFSET ??_C@_0CD@MNGPMDCC@server?5waiting?5in?5SSL_accept?5?9?5?$CF@
	call	_printf
	add	esp, 12					; 0000000cH
$LN31@doit_biopa:
; Line 1949
	mov	ebp, DWORD PTR _s_ssl_bio$1$[esp+16476]
	test	ebx, ebx
	jle	$LN39@doit_biopa
; Line 1945
	cmp	ebx, 8192				; 00002000H
	mov	ecx, 8192				; 00002000H
	mov	eax, ebx
	cmovg	eax, ecx
; Line 1949
	push	eax
	lea	eax, DWORD PTR _sbuf$4[esp+16480]
	push	eax
	push	ebp
	call	_BIO_write
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1950
	test	esi, esi
	jns	SHORT $LN120@doit_biopa
; Line 1951
	push	8
	push	ebp
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN39@doit_biopa
$LN91@doit_biopa:
; Line 1952
	push	OFFSET ??_C@_0BB@PEAALMLB@ERROR?5in?5SERVER?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 1953
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16484]
	add	esp, 8
	mov	edi, 1
	jmp	$err$126
$LN120@doit_biopa:
; Line 1956
	je	$LN92@doit_biopa
; Line 1960
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN40@doit_biopa
; Line 1961
	push	esi
	push	OFFSET ??_C@_0BB@MDGJPHBB@server?5wrote?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
$LN40@doit_biopa:
; Line 1962
	sub	ebx, esi
	mov	DWORD PTR _sw_num$1$[esp+16476], ebx
$LN39@doit_biopa:
; Line 1966
	mov	ebx, DWORD PTR _sr_num$1$[esp+16476]
	test	ebx, ebx
	jle	SHORT $LN46@doit_biopa
; Line 1969
	push	8192					; 00002000H
	lea	eax, DWORD PTR _sbuf$4[esp+16480]
	push	eax
	push	ebp
	call	_BIO_read
	mov	esi, eax
	add	esp, 12					; 0000000cH
; Line 1970
	test	esi, esi
	jns	SHORT $LN121@doit_biopa
; Line 1971
	push	8
	push	ebp
	call	_BIO_test_flags
	add	esp, 8
	test	eax, eax
	je	SHORT $LN91@doit_biopa
; Line 1974
	jmp	SHORT $LN46@doit_biopa
$LN121@doit_biopa:
; Line 1976
	je	$LN92@doit_biopa
; Line 1980
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN47@doit_biopa
; Line 1981
	push	esi
	push	OFFSET ??_C@_0BA@MHEHNLIN@server?5read?5?$CFd?6?$AA@
	call	_printf
	add	esp, 8
$LN47@doit_biopa:
; Line 1982
	sub	ebx, esi
	mov	DWORD PTR _sr_num$1$[esp+16476], ebx
$LN46@doit_biopa:
; Line 1986
	call	DWORD PTR __imp__clock
	mov	ecx, DWORD PTR _s_time$GSCopy$1$[esp+16476]
	sub	eax, edi
; Line 1993
	mov	edi, DWORD PTR _server_io$[esp+16476]
	mov	esi, DWORD PTR _client_io$[esp+16476]
	mov	DWORD PTR _io1$1$[esp+16476], edi
	add	DWORD PTR [ecx], eax
; Line 2000
	xor	ebp, ebp
	mov	DWORD PTR _io2$1$[esp+16476], esi
$LL7@doit_biopa:
; Line 2007
	push	edi
	call	_BIO_ctrl_pending
; Line 2008
	push	esi
	mov	ebx, eax
	call	_BIO_ctrl_get_write_guarantee
	add	esp, 8
	mov	DWORD PTR _r2$1$[esp+16476], eax
; Line 2011
	cmp	eax, ebx
	mov	esi, ebx
	cmovb	esi, eax
; Line 2013
	test	esi, esi
	je	$LN108@doit_biopa
; Line 2016
	cmp	esi, 2147483647				; 7fffffffH
	mov	eax, 2147483647				; 7fffffffH
	cmova	esi, eax
; Line 2019
	lea	eax, DWORD PTR _dataptr$2[esp+16476]
	push	esi
	push	eax
	push	edi
	call	_BIO_nread
; Line 2020
	mov	ebp, DWORD PTR __imp___wassert
	mov	edi, eax
	add	esp, 12					; 0000000cH
	test	edi, edi
	jg	SHORT $LN77@doit_biopa
	push	2020					; 000007e4H
	push	OFFSET ??_C@_1CA@NMFAJOKH@?$AA?4?$AA?2?$AAs?$AAs?$AAl?$AA?2?$AAs?$AAs?$AAl?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1M@GEMGJJPD@?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	ebp
	add	esp, 12					; 0000000cH
$LN77@doit_biopa:
; Line 2021
	cmp	edi, esi
	jle	SHORT $LN78@doit_biopa
	push	2021					; 000007e5H
	push	OFFSET ??_C@_1CA@NMFAJOKH@?$AA?4?$AA?2?$AAs?$AAs?$AAl?$AA?2?$AAs?$AAs?$AAl?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1BM@GKOLFBDK@?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAi?$AAn?$AAt?$AA?$CJ?$AAn?$AAu?$AAm?$AA?$AA@
	call	ebp
	add	esp, 12					; 0000000cH
$LN78@doit_biopa:
; Line 2026
	mov	esi, DWORD PTR _io2$1$[esp+16476]
	push	edi
	push	DWORD PTR _dataptr$2[esp+16480]
	push	esi
	call	_BIO_write
	add	esp, 12					; 0000000cH
; Line 2027
	cmp	eax, edi
	jne	$LN85@doit_biopa
; Line 2034
	cmp	DWORD PTR _debug, 0
	mov	ebp, 1
	je	SHORT $LN107@doit_biopa
; Line 2035
	push	edi
	mov	edi, DWORD PTR _io1$1$[esp+16480]
	mov	ecx, OFFSET ??_C@_0BJ@GGBAHJLO@S?9?$DOC?5relaying?3?5?$CFd?5bytes?6?$AA@
	cmp	edi, DWORD PTR _client_io$[esp+16480]
	mov	eax, OFFSET ??_C@_0BJ@JHPABEJB@C?9?$DOS?5relaying?3?5?$CFd?5bytes?6?$AA@
	cmovne	eax, ecx
	push	eax
	call	_printf
	mov	eax, DWORD PTR _r2$1$[esp+16484]
	add	esp, 8
	jmp	SHORT $LN5@doit_biopa
$LN107@doit_biopa:
	mov	eax, DWORD PTR _r2$1$[esp+16476]
	mov	edi, DWORD PTR _io1$1$[esp+16476]
	jmp	SHORT $LN5@doit_biopa
$LN108@doit_biopa:
	mov	esi, DWORD PTR _io2$1$[esp+16476]
$LN5@doit_biopa:
; Line 2040
	test	ebx, ebx
	je	SHORT $LN53@doit_biopa
	test	eax, eax
	jne	$LL7@doit_biopa
$LN53@doit_biopa:
; Line 2047
	push	esi
	call	_BIO_ctrl_pending
; Line 2048
	push	edi
	mov	esi, eax
	call	_BIO_ctrl_get_read_request
	add	esp, 8
; Line 2055
	cmp	eax, esi
	cmovb	esi, eax
; Line 2057
	test	esi, esi
	je	$LN61@doit_biopa
; Line 2060
	cmp	esi, 2147483647				; 7fffffffH
	jbe	SHORT $LN56@doit_biopa
; Line 2061
	mov	esi, 2147483647				; 7fffffffH
; Line 2063
	jmp	SHORT $LN101@doit_biopa
$LN56@doit_biopa:
	cmp	esi, 1
	jbe	SHORT $LN57@doit_biopa
$LN101@doit_biopa:
; Line 2064
	dec	esi
$LN57@doit_biopa:
; Line 2066
	lea	eax, DWORD PTR _dataptr$1[esp+16476]
	push	eax
	push	edi
	call	_BIO_nwrite0
	mov	edi, eax
	add	esp, 8
; Line 2067
	test	edi, edi
	jg	SHORT $LN79@doit_biopa
	push	2067					; 00000813H
	push	OFFSET ??_C@_1CA@NMFAJOKH@?$AA?4?$AA?2?$AAs?$AAs?$AAl?$AA?2?$AAs?$AAs?$AAl?$AAt?$AAe?$AAs?$AAt?$AA?4?$AAc?$AA?$AA@
	push	OFFSET ??_C@_1M@GEMGJJPD@?$AAr?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
$LN79@doit_biopa:
; Line 2068
	cmp	edi, esi
	cmovl	esi, edi
; Line 2070
	mov	edi, DWORD PTR _io2$1$[esp+16476]
	push	esi
	push	DWORD PTR _dataptr$1[esp+16480]
	push	edi
	call	_BIO_read
	add	esp, 12					; 0000000cH
; Line 2071
	cmp	eax, esi
	jne	$LN95@doit_biopa
; Line 2077
	push	esi
	lea	eax, DWORD PTR _dataptr$1[esp+16480]
	mov	ebp, 1
	push	eax
	push	DWORD PTR _io1$1$[esp+16484]
	call	_BIO_nwrite
	add	esp, 12					; 0000000cH
; Line 2078
	cmp	eax, esi
	jne	$LN96@doit_biopa
; Line 2084
	cmp	DWORD PTR _debug, 0
	je	SHORT $LN112@doit_biopa
; Line 2085
	cmp	edi, DWORD PTR _client_io$[esp+16476]
	mov	ecx, OFFSET ??_C@_0BJ@GGBAHJLO@S?9?$DOC?5relaying?3?5?$CFd?5bytes?6?$AA@
	mov	eax, OFFSET ??_C@_0BJ@JHPABEJB@C?9?$DOS?5relaying?3?5?$CFd?5bytes?6?$AA@
	cmovne	eax, ecx
	push	esi
	push	eax
	call	_printf
	add	esp, 8
$LN112@doit_biopa:
	mov	ecx, DWORD PTR _sr_num$1$[esp+16476]
	mov	eax, DWORD PTR _cr_num$1$[esp+16476]
	mov	ebx, DWORD PTR _sw_num$1$[esp+16476]
$LN63@doit_biopa:
; Line 2112
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16476]
	mov	DWORD PTR ?prev_progress@?BK@??doit_biopair@@9@9, ebp
	mov	ebp, DWORD PTR _count$[esp+16472]
	test	ebp, ebp
	jg	$LL4@doit_biopa
	test	eax, eax
	jg	$LL4@doit_biopa
	test	ebx, ebx
	jg	$LL4@doit_biopa
	test	ecx, ecx
	jg	$LL4@doit_biopa
; Line 2114
	cmp	DWORD PTR _verbose, 0
	je	SHORT $LN67@doit_biopa
; Line 2115
	push	OFFSET ??_C@_0BE@IHNMHEPM@DONE?5via?5BIO?5pair?3?5?$AA@
	push	DWORD PTR _c_ssl$GSCopy$1$[esp+16480]
	call	_print_details
	add	esp, 8
$LN67@doit_biopa:
; Line 2117
	call	_verify_serverinfo
	test	eax, eax
	jns	$LN68@doit_biopa
; Line 2119
	mov	ebp, DWORD PTR _s_ssl_bio$1$[esp+16476]
	mov	edi, 1
	jmp	$err$126
$LN61@doit_biopa:
; Line 2092
	test	ebp, ebp
	jne	SHORT $LN112@doit_biopa
	cmp	DWORD PTR ?prev_progress@?BK@??doit_biopair@@9@9, ebp
	jne	SHORT $LN112@doit_biopa
; Line 2093
	cmp	DWORD PTR _count$[esp+16472], ebp
	jg	SHORT $LN64@doit_biopa
	mov	eax, DWORD PTR _cr_num$1$[esp+16476]
	test	eax, eax
	jg	SHORT $LN64@doit_biopa
	mov	ebx, DWORD PTR _sw_num$1$[esp+16476]
	test	ebx, ebx
	jg	SHORT $LN64@doit_biopa
	mov	ecx, DWORD PTR _sr_num$1$[esp+16476]
	test	ecx, ecx
	jle	$LN63@doit_biopa
$LN64@doit_biopa:
; Line 2094
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0BC@IMIFBFOM@ERROR?3?5got?5stuck?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2095
	mov	ebx, DWORD PTR _c_ssl$GSCopy$1$[esp+16484]
	push	ebx
	call	_SSL_get_version
	add	esp, 12					; 0000000cH
	mov	ecx, OFFSET ??_C@_05NHFKDGAI@SSLv2?$AA@
	npad	1
$LL102@doit_biopa:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	$LN103@doit_biopa
	test	dl, dl
	je	SHORT $LN104@doit_biopa
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	$LN103@doit_biopa
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL102@doit_biopa
$LN104@doit_biopa:
	xor	eax, eax
	jmp	$LN105@doit_biopa
$LN88@doit_biopa:
; Line 1885
	push	OFFSET ??_C@_0BL@EDFJMBF@SSL?5CLIENT?5STARTUP?5FAILED?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
$LN123@doit_biopa:
	add	esp, 4
	push	eax
	call	_fprintf
; Line 1886
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16484]
	add	esp, 8
	mov	ebp, DWORD PTR _s_ssl_bio$1$[esp+16476]
	mov	edi, 1
	jmp	$err$126
$LN92@doit_biopa:
; Line 1957
	push	OFFSET ??_C@_0BL@FFMAAAKG@SSL?5SERVER?5STARTUP?5FAILED?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 1958
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16484]
	add	esp, 8
	mov	edi, 1
	jmp	$err$126
$LN85@doit_biopa:
; Line 2028
	push	OFFSET ??_C@_0EG@NKIELMIN@ERROR?3?5BIO_write?5could?5not?5write@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2030
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16484]
	add	esp, 8
	mov	ebp, DWORD PTR _s_ssl_bio$1$[esp+16476]
	mov	edi, 1
	jmp	$err$126
$LN96@doit_biopa:
; Line 2079
	push	OFFSET ??_C@_0DH@FHAMPMNL@ERROR?3?5BIO_nwrite?$CI?$CJ?5did?5not?5acce@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2081
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16484]
	add	esp, 8
	mov	ebp, DWORD PTR _s_ssl_bio$1$[esp+16476]
	mov	edi, 1
	jmp	$err$126
$LN95@doit_biopa:
; Line 2072
	push	OFFSET ??_C@_0DI@GJPPFPNB@ERROR?3?5BIO_read?5could?5not?5read?5B@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2074
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16484]
	add	esp, 8
	mov	ebp, DWORD PTR _s_ssl_bio$1$[esp+16476]
	mov	edi, 1
	jmp	$err$126
$LN103@doit_biopa:
; Line 2095
	sbb	eax, eax
	or	eax, 1
$LN105@doit_biopa:
	test	eax, eax
	jne	SHORT $LN66@doit_biopa
; Line 2096
	push	OFFSET ??_C@_0GB@OOKKDNKD@This?5can?5happen?5for?5SSL2?5because@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2100
	push	4
	push	ebx
	call	_SSL_state_string
	mov	edi, DWORD PTR __imp__strncmp
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_04OPHLJIFC@2SCF?$AA@
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN66@doit_biopa
	push	4
	push	DWORD PTR _s_ssl$GSCopy$1$[esp+16480]
	call	_SSL_state_string
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_04LJJPCJHD@2SSV?$AA@
	call	edi
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN66@doit_biopa
; Line 2102
	push	OFFSET ??_C@_05HGOIEIJE@?5ok?4?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$end$127:
; Line 2128
	mov	esi, DWORD PTR _c_ssl_bio$1$[esp+16476]
	xor	edi, edi
	mov	ebp, DWORD PTR _s_ssl_bio$1$[esp+16476]
	jmp	SHORT $err$126
$LN66@doit_biopa:
; Line 2106
	push	OFFSET ??_C@_08HMONHPMI@?5ERROR?4?6?$AA@
	push	2
	call	esi
; Line 2107
	jmp	$LN123@doit_biopa
$LN68@doit_biopa:
; Line 2122
	cmp	DWORD PTR _custom_ext_error, 0
	je	SHORT $end$127
; Line 2124
	mov	ebp, DWORD PTR _s_ssl_bio$1$[esp+16476]
	mov	edi, 1
	jmp	SHORT $err$126
$LN113@doit_biopa:
	mov	ebp, edi
; Line 1886
	mov	edi, 1
	jmp	SHORT $err$126
$LN114@doit_biopa:
	mov	ebp, eax
	mov	edi, 1
	jmp	SHORT $err$126
$LN116@doit_biopa:
	xor	ebp, ebp
$err$126:
; Line 2131
	push	DWORD PTR _bio_err
	call	_ERR_print_errors
; Line 2133
	mov	eax, DWORD PTR _server$[esp+16480]
	add	esp, 4
	test	eax, eax
	je	SHORT $LN70@doit_biopa
; Line 2134
	push	eax
	call	_BIO_free
	add	esp, 4
$LN70@doit_biopa:
; Line 2135
	mov	eax, DWORD PTR _server_io$[esp+16476]
	test	eax, eax
	je	SHORT $LN71@doit_biopa
; Line 2136
	push	eax
	call	_BIO_free
	add	esp, 4
$LN71@doit_biopa:
; Line 2137
	mov	eax, DWORD PTR _client$[esp+16476]
	test	eax, eax
	je	SHORT $LN72@doit_biopa
; Line 2138
	push	eax
	call	_BIO_free
	add	esp, 4
$LN72@doit_biopa:
; Line 2139
	mov	eax, DWORD PTR _client_io$[esp+16476]
	test	eax, eax
	je	SHORT $LN73@doit_biopa
; Line 2140
	push	eax
	call	_BIO_free
	add	esp, 4
$LN73@doit_biopa:
; Line 2141
	test	ebp, ebp
	je	SHORT $LN74@doit_biopa
; Line 2142
	push	ebp
	call	_BIO_free
	add	esp, 4
$LN74@doit_biopa:
; Line 2143
	test	esi, esi
	je	SHORT $LN106@doit_biopa
; Line 2144
	push	esi
	call	_BIO_free
	add	esp, 4
$LN106@doit_biopa:
; Line 2147
	mov	ecx, DWORD PTR __$ArrayPad$[esp+16476]
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 16460				; 0000404cH
	ret	0
_doit_biopair ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_3_srv_add_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_out$ = 16						; size = 4
_outlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_3_srv_add_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 708
	mov	eax, DWORD PTR _out$[esp-4]
	mov	DWORD PTR [eax], OFFSET _custom_ext_srv_string
; Line 709
	mov	eax, DWORD PTR _outlen$[esp-4]
	mov	DWORD PTR [eax], 4
; Line 710
	mov	eax, 1
; Line 711
	ret	0
_custom_ext_3_srv_add_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_3_srv_parse_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_3_srv_parse_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 694
	cmp	DWORD PTR _ext_type$[esp-4], 1003	; 000003ebH
; Line 699
	mov	edx, OFFSET _custom_ext_cli_string
	mov	ecx, DWORD PTR _in$[esp-4]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _inlen$[esp+4]
	mov	ebx, 1
	push	edi
	mov	edi, DWORD PTR _custom_ext_error
	cmovne	edi, ebx
	cmp	esi, 3
	cmovne	edi, ebx
	mov	DWORD PTR _custom_ext_error, edi
	sub	esi, 4
	jb	SHORT $LN8@custom_ext
$LL9@custom_ext:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN7@custom_ext
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL9@custom_ext
$LN8@custom_ext:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN6@custom_ext
$LN7@custom_ext:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN6@custom_ext
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN6@custom_ext
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -1
	je	SHORT $LN6@custom_ext
	mov	cl, BYTE PTR [ecx+3]
	cmp	cl, BYTE PTR [edx+3]
	je	SHORT $LN6@custom_ext
$LN10@custom_ext:
	pop	edi
	pop	esi
	mov	DWORD PTR _custom_ext_error, ebx
; Line 701
	mov	eax, ebx
	pop	ebx
; Line 702
	ret	0
$LN6@custom_ext:
; Line 699
	mov	DWORD PTR _custom_ext_error, edi
; Line 701
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 702
	ret	0
_custom_ext_3_srv_parse_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_2_srv_add_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_out$ = 16						; size = 4
_outlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_2_srv_add_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 685
	mov	eax, DWORD PTR _out$[esp-4]
	mov	DWORD PTR [eax], 0
; Line 686
	mov	eax, DWORD PTR _outlen$[esp-4]
	mov	DWORD PTR [eax], 0
; Line 687
	mov	eax, 1
; Line 688
	ret	0
_custom_ext_2_srv_add_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_2_srv_parse_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_2_srv_parse_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 671
	cmp	DWORD PTR _ext_type$[esp-4], 1002	; 000003eaH
; Line 676
	mov	edx, OFFSET _custom_ext_cli_string
	mov	ecx, DWORD PTR _in$[esp-4]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _inlen$[esp+4]
	mov	ebx, 1
	push	edi
	mov	edi, DWORD PTR _custom_ext_error
	cmovne	edi, ebx
	cmp	esi, 3
	cmovne	edi, ebx
	mov	DWORD PTR _custom_ext_error, edi
	sub	esi, 4
	jb	SHORT $LN8@custom_ext
$LL9@custom_ext:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN7@custom_ext
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL9@custom_ext
$LN8@custom_ext:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN6@custom_ext
$LN7@custom_ext:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN6@custom_ext
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN6@custom_ext
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -1
	je	SHORT $LN6@custom_ext
	mov	cl, BYTE PTR [ecx+3]
	cmp	cl, BYTE PTR [edx+3]
	je	SHORT $LN6@custom_ext
$LN10@custom_ext:
	pop	edi
	pop	esi
	mov	DWORD PTR _custom_ext_error, ebx
; Line 678
	mov	eax, ebx
	pop	ebx
; Line 679
	ret	0
$LN6@custom_ext:
; Line 676
	mov	DWORD PTR _custom_ext_error, edi
; Line 678
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 679
	ret	0
_custom_ext_2_srv_parse_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_1_srv_add_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_out$ = 16						; size = 4
_outlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_1_srv_add_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 664
	xor	eax, eax
; Line 665
	ret	0
_custom_ext_1_srv_add_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_1_srv_parse_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_1_srv_parse_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 650
	cmp	DWORD PTR _ext_type$[esp-4], 1001	; 000003e9H
; Line 655
	mov	edx, OFFSET _custom_ext_cli_string
	mov	ecx, DWORD PTR _in$[esp-4]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _inlen$[esp+4]
	mov	ebx, 1
	push	edi
	mov	edi, DWORD PTR _custom_ext_error
	cmovne	edi, ebx
	cmp	esi, 3
	cmovne	edi, ebx
	mov	DWORD PTR _custom_ext_error, edi
	sub	esi, 4
	jb	SHORT $LN8@custom_ext
$LL9@custom_ext:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN7@custom_ext
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL9@custom_ext
$LN8@custom_ext:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN6@custom_ext
$LN7@custom_ext:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN6@custom_ext
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN6@custom_ext
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -1
	je	SHORT $LN6@custom_ext
	mov	cl, BYTE PTR [ecx+3]
	cmp	cl, BYTE PTR [edx+3]
	je	SHORT $LN6@custom_ext
$LN10@custom_ext:
	pop	edi
	pop	esi
	mov	DWORD PTR _custom_ext_error, ebx
; Line 657
	mov	eax, ebx
	pop	ebx
; Line 658
	ret	0
$LN6@custom_ext:
; Line 655
	mov	DWORD PTR _custom_ext_error, edi
; Line 657
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 658
	ret	0
_custom_ext_1_srv_parse_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_0_srv_add_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_out$ = 16						; size = 4
_outlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_0_srv_add_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 642
	mov	DWORD PTR _custom_ext_error, 1
; Line 643
	xor	eax, eax
; Line 644
	ret	0
_custom_ext_0_srv_add_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_0_srv_parse_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_0_srv_parse_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 632
	mov	DWORD PTR _custom_ext_error, 1
; Line 633
	mov	eax, 1
; Line 634
	ret	0
_custom_ext_0_srv_parse_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_3_cli_parse_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_3_cli_parse_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 615
	cmp	DWORD PTR _ext_type$[esp-4], 1003	; 000003ebH
; Line 619
	mov	ecx, OFFSET _custom_ext_srv_string
	mov	edx, DWORD PTR _in$[esp-4]
	push	ebx
	push	esi
	mov	esi, DWORD PTR _inlen$[esp+4]
	mov	ebx, 1
	push	edi
	mov	edi, DWORD PTR _custom_ext_error
	cmovne	edi, ebx
	cmp	esi, 4
	cmovne	edi, ebx
	mov	DWORD PTR _custom_ext_error, edi
	sub	esi, 4
	jb	SHORT $LN8@custom_ext
$LL9@custom_ext:
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN7@custom_ext
	add	ecx, 4
	add	edx, 4
	sub	esi, 4
	jae	SHORT $LL9@custom_ext
$LN8@custom_ext:
	cmp	esi, -4					; fffffffcH
	je	SHORT $LN6@custom_ext
$LN7@custom_ext:
	mov	al, BYTE PTR [ecx]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -3					; fffffffdH
	je	SHORT $LN6@custom_ext
	mov	al, BYTE PTR [ecx+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -2					; fffffffeH
	je	SHORT $LN6@custom_ext
	mov	al, BYTE PTR [ecx+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN10@custom_ext
	cmp	esi, -1
	je	SHORT $LN6@custom_ext
	mov	cl, BYTE PTR [ecx+3]
	cmp	cl, BYTE PTR [edx+3]
	je	SHORT $LN6@custom_ext
$LN10@custom_ext:
	pop	edi
	pop	esi
	mov	DWORD PTR _custom_ext_error, ebx
; Line 621
	mov	eax, ebx
	pop	ebx
; Line 622
	ret	0
$LN6@custom_ext:
; Line 619
	mov	DWORD PTR _custom_ext_error, edi
; Line 621
	mov	eax, ebx
	pop	edi
	pop	esi
	pop	ebx
; Line 622
	ret	0
_custom_ext_3_cli_parse_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_3_cli_add_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_out$ = 16						; size = 4
_outlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_3_cli_add_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 604
	mov	ecx, DWORD PTR _custom_ext_error
	mov	eax, 1
	cmp	DWORD PTR _ext_type$[esp-4], 1003	; 000003ebH
	cmovne	ecx, eax
	mov	DWORD PTR _custom_ext_error, ecx
; Line 606
	mov	ecx, DWORD PTR _out$[esp-4]
	mov	DWORD PTR [ecx], OFFSET _custom_ext_cli_string
; Line 607
	mov	ecx, DWORD PTR _outlen$[esp-4]
	mov	DWORD PTR [ecx], 3
; Line 609
	ret	0
_custom_ext_3_cli_add_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_2_cli_parse_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_2_cli_parse_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 593
	cmp	DWORD PTR _ext_type$[esp-4], 1002	; 000003eaH
	mov	eax, 1
	mov	ecx, DWORD PTR _custom_ext_error
	cmovne	ecx, eax
; Line 595
	cmp	DWORD PTR _inlen$[esp-4], 0
	cmovne	ecx, eax
	mov	DWORD PTR _custom_ext_error, ecx
; Line 598
	ret	0
_custom_ext_2_cli_parse_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_2_cli_add_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_out$ = 16						; size = 4
_outlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_2_cli_add_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 582
	mov	ecx, DWORD PTR _custom_ext_error
	mov	eax, 1
	cmp	DWORD PTR _ext_type$[esp-4], 1002	; 000003eaH
	cmovne	ecx, eax
	mov	DWORD PTR _custom_ext_error, ecx
; Line 584
	mov	ecx, DWORD PTR _out$[esp-4]
	mov	DWORD PTR [ecx], OFFSET _custom_ext_cli_string
; Line 585
	mov	ecx, DWORD PTR _outlen$[esp-4]
	mov	DWORD PTR [ecx], 3
; Line 587
	ret	0
_custom_ext_2_cli_add_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_1_cli_parse_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_1_cli_parse_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 575
	mov	eax, 1
; Line 576
	ret	0
_custom_ext_1_cli_parse_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_1_cli_add_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_out$ = 16						; size = 4
_outlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_1_cli_add_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 564
	mov	ecx, DWORD PTR _custom_ext_error
	mov	eax, 1
	cmp	DWORD PTR _ext_type$[esp-4], 1001	; 000003e9H
	cmovne	ecx, eax
	mov	DWORD PTR _custom_ext_error, ecx
; Line 566
	mov	ecx, DWORD PTR _out$[esp-4]
	mov	DWORD PTR [ecx], OFFSET _custom_ext_cli_string
; Line 567
	mov	ecx, DWORD PTR _outlen$[esp-4]
	mov	DWORD PTR [ecx], 3
; Line 569
	ret	0
_custom_ext_1_cli_add_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_0_cli_parse_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_0_cli_parse_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 557
	mov	eax, 1
; Line 558
	ret	0
_custom_ext_0_cli_parse_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _custom_ext_0_cli_add_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_out$ = 16						; size = 4
_outlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_custom_ext_0_cli_add_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 548
	mov	eax, DWORD PTR _custom_ext_error
	mov	ecx, 1
	cmp	DWORD PTR _ext_type$[esp-4], 1000	; 000003e8H
	cmovne	eax, ecx
	mov	DWORD PTR _custom_ext_error, eax
; Line 550
	xor	eax, eax
; Line 551
	ret	0
_custom_ext_0_cli_add_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _verify_serverinfo
_TEXT	SEGMENT
_verify_serverinfo PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 527
	mov	eax, DWORD PTR _serverinfo_sct
	cmp	eax, DWORD PTR _serverinfo_sct_seen
	je	SHORT $LN2@verify_ser
$LN6@verify_ser:
; Line 528
	or	eax, -1
; Line 534
	ret	0
$LN2@verify_ser:
; Line 529
	mov	eax, DWORD PTR _serverinfo_tack
	cmp	eax, DWORD PTR _serverinfo_tack_seen
	jne	SHORT $LN6@verify_ser
; Line 531
	mov	eax, DWORD PTR _serverinfo_other_seen
	neg	eax
	sbb	eax, eax
; Line 534
	ret	0
_verify_serverinfo ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _serverinfo_cli_parse_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ext_type$ = 12						; size = 4
_in$ = 16						; size = 4
_inlen$ = 20						; size = 4
_al$ = 24						; size = 4
_arg$ = 28						; size = 4
_serverinfo_cli_parse_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 516
	mov	eax, DWORD PTR _ext_type$[esp-4]
	cmp	eax, 18					; 00000012H
	jne	SHORT $LN2@serverinfo
; Line 517
	inc	DWORD PTR _serverinfo_sct_seen
; Line 522
	mov	eax, 1
; Line 523
	ret	0
$LN2@serverinfo:
; Line 518
	cmp	eax, 62208				; 0000f300H
	jne	SHORT $LN4@serverinfo
; Line 519
	inc	DWORD PTR _serverinfo_tack_seen
; Line 522
	mov	eax, 1
; Line 523
	ret	0
$LN4@serverinfo:
; Line 521
	inc	DWORD PTR _serverinfo_other_seen
; Line 522
	mov	eax, 1
; Line 523
	ret	0
_serverinfo_cli_parse_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _verify_alpn
_TEXT	SEGMENT
_client_proto_len$ = -16				; size = 4
_server_proto_len$ = -12				; size = 4
_client_proto$ = -8					; size = 4
_server_proto$ = -4					; size = 4
_client$ = 8						; size = 4
_server$ = 12						; size = 4
_verify_alpn PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 427
	mov	eax, 16					; 00000010H
	call	__chkstk
	push	ebx
	push	ebp
	push	esi
	push	edi
; Line 430
	lea	eax, DWORD PTR _client_proto_len$[esp+32]
	mov	DWORD PTR _client_proto_len$[esp+32], 0
	push	eax
	lea	eax, DWORD PTR _client_proto$[esp+36]
	mov	DWORD PTR _server_proto_len$[esp+36], 0
	push	eax
	push	DWORD PTR _client$[esp+36]
	call	_SSL_get0_alpn_selected
; Line 431
	mov	ebp, DWORD PTR _server$[esp+40]
	lea	eax, DWORD PTR _server_proto_len$[esp+44]
	push	eax
	lea	eax, DWORD PTR _server_proto$[esp+48]
	push	eax
	push	ebp
	call	_SSL_get0_alpn_selected
; Line 433
	mov	eax, DWORD PTR _alpn_selected
	add	esp, 24					; 00000018H
	test	eax, eax
	je	SHORT $LN2@verify_alp
; Line 434
	push	eax
	call	_CRYPTO_free
	add	esp, 4
; Line 435
	mov	DWORD PTR _alpn_selected, 0
$LN2@verify_alp:
; Line 438
	mov	ecx, DWORD PTR _client_proto_len$[esp+32]
	cmp	ecx, DWORD PTR _server_proto_len$[esp+32]
	jne	$LN4@verify_alp
	mov	esi, DWORD PTR _client_proto$[esp+32]
	mov	ebx, ecx
	mov	edi, DWORD PTR _server_proto$[esp+32]
	mov	edx, esi
	sub	ebx, 4
	jb	SHORT $LN16@verify_alp
$LL17@verify_alp:
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR [edi]
	jne	SHORT $LN15@verify_alp
	add	edx, 4
	add	edi, 4
	sub	ebx, 4
	jae	SHORT $LL17@verify_alp
$LN16@verify_alp:
	cmp	ebx, -4					; fffffffcH
	je	SHORT $LN14@verify_alp
$LN15@verify_alp:
	mov	al, BYTE PTR [edx]
	cmp	al, BYTE PTR [edi]
	jne	$LN4@verify_alp
	cmp	ebx, -3					; fffffffdH
	je	SHORT $LN14@verify_alp
	mov	al, BYTE PTR [edx+1]
	cmp	al, BYTE PTR [edi+1]
	jne	$LN4@verify_alp
	cmp	ebx, -2					; fffffffeH
	je	SHORT $LN14@verify_alp
	mov	al, BYTE PTR [edx+2]
	cmp	al, BYTE PTR [edi+2]
	jne	$LN4@verify_alp
	cmp	ebx, -1
	je	SHORT $LN14@verify_alp
	mov	al, BYTE PTR [edx+3]
	cmp	al, BYTE PTR [edi+3]
	jne	$LN4@verify_alp
$LN14@verify_alp:
; Line 444
	mov	edi, DWORD PTR _alpn_expected
	test	ecx, ecx
	je	SHORT $LN5@verify_alp
	test	edi, edi
	jne	SHORT $LN13@verify_alp
; Line 445
	push	OFFSET ??_C@_0BO@KEEBEKHB@ALPN?5unexpectedly?5negotiated?6?$AA@
; Line 446
	jmp	$LN24@verify_alp
$LN5@verify_alp:
; Line 449
	test	edi, edi
	je	SHORT $LN6@verify_alp
$LN13@verify_alp:
	mov	edx, edi
	lea	ebx, DWORD PTR [edx+1]
$LL18@verify_alp:
	mov	al, BYTE PTR [edx]
	inc	edx
	test	al, al
	jne	SHORT $LL18@verify_alp
	sub	edx, ebx
	cmp	ecx, edx
	jne	SHORT $LN23@verify_alp
	mov	edx, edi
	sub	ecx, 4
	jb	SHORT $LN21@verify_alp
	npad	5
$LL22@verify_alp:
	mov	eax, DWORD PTR [esi]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN20@verify_alp
	add	esi, 4
	add	edx, 4
	sub	ecx, 4
	jae	SHORT $LL22@verify_alp
$LN21@verify_alp:
	cmp	ecx, -4					; fffffffcH
	je	SHORT $LN6@verify_alp
$LN20@verify_alp:
	mov	al, BYTE PTR [esi]
	cmp	al, BYTE PTR [edx]
	jne	SHORT $LN23@verify_alp
	cmp	ecx, -3					; fffffffdH
	je	SHORT $LN6@verify_alp
	mov	al, BYTE PTR [esi+1]
	cmp	al, BYTE PTR [edx+1]
	jne	SHORT $LN23@verify_alp
	cmp	ecx, -2					; fffffffeH
	je	SHORT $LN6@verify_alp
	mov	al, BYTE PTR [esi+2]
	cmp	al, BYTE PTR [edx+2]
	jne	SHORT $LN23@verify_alp
	cmp	ecx, -1
	je	SHORT $LN6@verify_alp
	mov	al, BYTE PTR [esi+3]
	cmp	al, BYTE PTR [edx+3]
	je	SHORT $LN6@verify_alp
$LN23@verify_alp:
; Line 452
	push	edi
	push	OFFSET ??_C@_0DM@IEIAPLJD@ALPN?5selected?5protocols?5not?5equa@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 455
	jmp	SHORT $err$27
$LN6@verify_alp:
	pop	edi
	pop	esi
	pop	ebp
; Line 458
	xor	eax, eax
	pop	ebx
; Line 478
	add	esp, 16					; 00000010H
	ret	0
$LN4@verify_alp:
; Line 440
	push	OFFSET ??_C@_0CB@KGHNKKJC@ALPN?5selected?5protocols?5differ?$CB?6@
$LN24@verify_alp:
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 8
$err$27:
; Line 461
	push	OFFSET ??_C@_0BI@GDHCJMFJ@ALPN?5results?3?5client?3?5?8?$AA@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
; Line 462
	push	DWORD PTR _client_proto_len$[esp+40]
	push	DWORD PTR _client_proto$[esp+44]
	push	DWORD PTR _bio_stdout
	call	_BIO_write
; Line 463
	push	OFFSET ??_C@_0N@GJFDKFPE@?8?0?5server?3?5?8?$AA@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
; Line 464
	push	DWORD PTR _server_proto_len$[esp+60]
	push	DWORD PTR _server_proto$[esp+64]
	push	DWORD PTR _bio_stdout
	call	_BIO_write
; Line 465
	push	OFFSET ??_C@_02MHFDJOAC@?8?6?$AA@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
; Line 466
	push	DWORD PTR _alpn_client
	push	OFFSET ??_C@_0CI@DLCNJPBJ@ALPN?5configured?3?5client?3?5?8?$CFs?8?0?5s@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
; Line 468
	push	ebp
	call	_SSL_get_SSL_CTX
	add	esp, 64					; 00000040H
	cmp	eax, DWORD PTR _s_ctx2
	jne	SHORT $LN8@verify_alp
; Line 469
	push	DWORD PTR _alpn_server2
	jmp	SHORT $LN25@verify_alp
$LN8@verify_alp:
; Line 471
	push	ebp
	call	_SSL_get_SSL_CTX
	add	esp, 4
	cmp	eax, DWORD PTR _s_ctx
	jne	SHORT $LN10@verify_alp
; Line 472
	push	DWORD PTR _alpn_server
$LN25@verify_alp:
	push	OFFSET ??_C@_05ODNCHMDL@?8?$CFs?8?6?$AA@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 477
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 478
	add	esp, 16					; 00000010H
	ret	0
$LN10@verify_alp:
; Line 475
	push	OFFSET ??_C@_08IIMANPGO@unknown?6?$AA@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 8
; Line 477
	or	eax, -1
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 478
	add	esp, 16					; 00000010H
	ret	0
_verify_alpn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _cb_server_alpn
_TEXT	SEGMENT
_s$ = 8							; size = 4
_out$ = 12						; size = 4
_outlen$ = 16						; size = 4
_in$ = 20						; size = 4
_inlen$ = 24						; size = 4
_protos_len$ = 28					; size = 2
_arg$ = 28						; size = 4
_cb_server_alpn PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 395
	push	esi
; Line 400
	mov	esi, DWORD PTR _arg$[esp]
	lea	eax, DWORD PTR _protos_len$[esp]
	push	edi
	push	esi
	push	eax
	call	_next_protos_parse
	mov	edi, eax
	add	esp, 8
; Line 401
	test	edi, edi
	jne	SHORT $LN2@cb_server_
; Line 402
	push	esi
	push	OFFSET ??_C@_0DC@HAPGMDBF@failed?5to?5parser?5ALPN?5server?5pro@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 404
	call	DWORD PTR __imp__abort
$LN9@cb_server_:
$LN2@cb_server_:
; Line 409
	movzx	eax, WORD PTR _protos_len$[esp+4]
	push	ebx
	mov	ebx, DWORD PTR _outlen$[esp+8]
	push	ebp
	push	DWORD PTR _inlen$[esp+12]
	mov	ebp, DWORD PTR _out$[esp+16]
	push	DWORD PTR _in$[esp+16]
	push	eax
	push	edi
	push	ebx
	push	ebp
	call	_SSL_select_next_proto
	add	esp, 24					; 00000018H
	cmp	eax, 1
	je	SHORT $LN3@cb_server_
; Line 410
	push	edi
	call	_CRYPTO_free
	add	esp, 4
; Line 411
	mov	eax, 3
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 424
	ret	0
$LN3@cb_server_:
; Line 418
	movzx	eax, BYTE PTR [ebx]
	push	418					; 000001a2H
	push	OFFSET ??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@
	push	eax
	call	_CRYPTO_malloc
; Line 419
	movzx	ecx, BYTE PTR [ebx]
	mov	esi, eax
	push	ecx
	push	DWORD PTR [ebp]
	mov	DWORD PTR _alpn_selected, esi
	push	esi
	call	_memcpy
; Line 422
	push	edi
	mov	DWORD PTR [ebp], esi
	call	_CRYPTO_free
	add	esp, 28					; 0000001cH
; Line 423
	xor	eax, eax
	pop	ebp
	pop	ebx
	pop	edi
	pop	esi
; Line 424
	ret	0
$LN8@cb_server_:
_cb_server_alpn ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _next_protos_parse
_TEXT	SEGMENT
_outlen$ = 8						; size = 4
_in$ = 12						; size = 4
_next_protos_parse PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 363
	push	ebx
	push	esi
	push	edi
; Line 368
	mov	edi, DWORD PTR _in$[esp+8]
	xor	ebx, ebx
	mov	esi, edi
	lea	ecx, DWORD PTR [esi+1]
	npad	2
$LL17@next_proto:
	mov	al, BYTE PTR [esi]
	inc	esi
	test	al, al
	jne	SHORT $LL17@next_proto
	sub	esi, ecx
; Line 369
	cmp	esi, 65535				; 0000ffffH
	jae	SHORT $LN19@next_proto
; Line 372
	mov	ecx, edi
	lea	edx, DWORD PTR [ecx+1]
$LL18@next_proto:
	mov	al, BYTE PTR [ecx]
	inc	ecx
	test	al, al
	jne	SHORT $LL18@next_proto
	sub	ecx, edx
	push	372					; 00000174H
	push	OFFSET ??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@
	lea	eax, DWORD PTR [ecx+1]
	push	eax
	call	_CRYPTO_malloc
	mov	edx, eax
	add	esp, 12					; 0000000cH
; Line 374
	xor	eax, eax
	test	edx, edx
	je	SHORT $LN1@next_proto
; Line 377
	cmp	eax, esi
$LN20@next_proto:
	je	SHORT $LN9@next_proto
	mov	cl, BYTE PTR [eax+edi]
	cmp	cl, 44					; 0000002cH
	je	SHORT $LN9@next_proto
; Line 385
	mov	BYTE PTR [eax+edx+1], cl
	jmp	SHORT $LN2@next_proto
$LN9@next_proto:
; Line 378
	mov	ecx, eax
	sub	ecx, ebx
	cmp	ecx, 255				; 000000ffH
	ja	SHORT $LN13@next_proto
; Line 382
	mov	cl, al
	sub	cl, bl
	mov	BYTE PTR [edx+ebx], cl
; Line 383
	lea	ebx, DWORD PTR [eax+1]
$LN2@next_proto:
; Line 376
	inc	eax
	cmp	eax, esi
	jbe	SHORT $LN20@next_proto
; Line 388
	mov	eax, DWORD PTR _outlen$[esp+8]
	lea	ecx, DWORD PTR [esi+1]
	pop	edi
	pop	esi
	pop	ebx
	mov	WORD PTR [eax], cx
; Line 389
	mov	eax, edx
; Line 390
	ret	0
$LN13@next_proto:
; Line 379
	push	edx
	call	_CRYPTO_free
	add	esp, 4
$LN19@next_proto:
; Line 380
	xor	eax, eax
$LN1@next_proto:
	pop	edi
	pop	esi
	pop	ebx
; Line 390
	ret	0
_next_protos_parse ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _verify_servername
_TEXT	SEGMENT
_client$ = 8						; size = 4
_server$ = 12						; size = 4
_verify_servername PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 333
	push	esi
; Line 335
	push	DWORD PTR _server$[esp]
	call	_SSL_get_SSL_CTX
	mov	esi, eax
	add	esp, 4
; Line 336
	mov	eax, DWORD PTR _sn_expect
	test	eax, eax
	je	SHORT $LN11@verify_ser
; Line 338
	cmp	eax, 1
	jne	SHORT $LN3@verify_ser
	cmp	esi, DWORD PTR _s_ctx
	jne	SHORT $LN4@verify_ser
$LN11@verify_ser:
; Line 339
	xor	eax, eax
	pop	esi
; Line 350
	ret	0
$LN3@verify_ser:
; Line 340
	cmp	eax, 2
	jne	SHORT $LN4@verify_ser
	cmp	esi, DWORD PTR _s_ctx2
	jne	SHORT $LN4@verify_ser
; Line 341
	xor	eax, eax
	pop	esi
; Line 350
	ret	0
$LN4@verify_ser:
; Line 342
	push	eax
	push	OFFSET ??_C@_0CB@KHCLOBAB@Servername?3?5expected?5context?5?$CFd?6@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 12					; 0000000cH
; Line 343
	cmp	esi, DWORD PTR _s_ctx2
	jne	SHORT $LN5@verify_ser
; Line 344
	push	OFFSET ??_C@_0BK@HMLMKJOB@Servername?3?5context?5is?52?6?$AA@
; Line 348
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 8
; Line 349
	or	eax, -1
	pop	esi
; Line 350
	ret	0
$LN5@verify_ser:
; Line 345
	cmp	esi, DWORD PTR _s_ctx
	jne	SHORT $LN7@verify_ser
; Line 346
	push	OFFSET ??_C@_0BK@HOPKBHLI@Servername?3?5context?5is?51?6?$AA@
; Line 348
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 8
; Line 349
	or	eax, -1
	pop	esi
; Line 350
	ret	0
$LN7@verify_ser:
; Line 348
	push	OFFSET ??_C@_0CA@KKFBJFHF@Servername?3?5context?5is?5unknown?6?$AA@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 8
; Line 349
	or	eax, -1
	pop	esi
; Line 350
	ret	0
_verify_servername ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _servername_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ad$ = 12						; size = 4
_arg$ = 16						; size = 4
_servername_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 317
	push	0
	push	DWORD PTR _s$[esp]
	call	_SSL_get_servername
; Line 318
	mov	ecx, DWORD PTR _sn_server2
	add	esp, 8
	test	ecx, ecx
	jne	SHORT $LN2@servername
; Line 319
	push	OFFSET ??_C@_0BG@NHIDIELG@Servername?52?5is?5NULL?6?$AA@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
	add	esp, 8
; Line 320
	mov	eax, 3
; Line 331
	ret	0
$LN2@servername:
; Line 323
	test	eax, eax
	je	SHORT $LN4@servername
; Line 324
	cmp	DWORD PTR _s_ctx2, 0
	je	SHORT $LN4@servername
	push	ecx
	push	eax
	call	DWORD PTR __imp___stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@servername
; Line 326
	push	OFFSET ??_C@_0BL@IKCLJGPN@Switching?5server?5context?4?6?$AA@
	push	DWORD PTR _bio_stdout
	call	_BIO_printf
; Line 327
	push	DWORD PTR _s_ctx2
	push	DWORD PTR _s$[esp+8]
	call	_SSL_set_SSL_CTX
	add	esp, 16					; 00000010H
$LN4@servername:
; Line 330
	xor	eax, eax
; Line 331
	ret	0
_servername_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_srp_server_param_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_ad$ = 12						; size = 4
_arg$ = 16						; size = 4
_ssl_srp_server_param_cb PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 287
	push	ebx
	push	esi
; Line 290
	mov	esi, DWORD PTR _s$[esp+4]
	push	edi
	mov	edi, DWORD PTR _arg$[esp+8]
	push	esi
	mov	ebx, DWORD PTR [edi]
	call	_SSL_get_srp_username
	add	esp, 4
	mov	ecx, ebx
$LL5@ssl_srp_se:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN6@ssl_srp_se
	test	dl, dl
	je	SHORT $LN7@ssl_srp_se
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN6@ssl_srp_se
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL5@ssl_srp_se
$LN7@ssl_srp_se:
	xor	eax, eax
	jmp	SHORT $LN8@ssl_srp_se
$LN6@ssl_srp_se:
	sbb	eax, eax
	or	eax, 1
$LN8@ssl_srp_se:
	test	eax, eax
	je	SHORT $LN2@ssl_srp_se
; Line 291
	push	esi
	call	_SSL_get_srp_username
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BH@EHOAHANM@User?5?$CFs?5doesn?8t?5exist?6?$AA@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 292
	mov	eax, 2
	pop	edi
	pop	esi
	pop	ebx
; Line 299
	ret	0
$LN2@ssl_srp_se:
; Line 294
	push	OFFSET ??_C@_04MJHCKDHM@1024?$AA@
	push	DWORD PTR [edi+4]
	push	ebx
	push	esi
	call	_SSL_set_srp_server_param_pw
	add	esp, 16					; 00000010H
	test	eax, eax
	jns	SHORT $LN3@ssl_srp_se
; Line 295
	mov	eax, DWORD PTR _ad$[esp+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	DWORD PTR [eax], 80			; 00000050H
; Line 296
	mov	eax, 2
; Line 299
	ret	0
$LN3@ssl_srp_se:
	pop	edi
	pop	esi
; Line 298
	xor	eax, eax
	pop	ebx
; Line 299
	ret	0
_ssl_srp_server_param_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _ssl_give_srp_client_pwd_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_arg$ = 12						; size = 4
_ssl_give_srp_client_pwd_cb PROC			; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 276
	mov	eax, DWORD PTR _arg$[esp-4]
	push	DWORD PTR [eax]
	call	_BUF_strdup
	add	esp, 4
; Line 277
	ret	0
_ssl_give_srp_client_pwd_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _psk_server_callback
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_identity$ = 12						; size = 4
_psk$ = 16						; size = 4
_max_psk_len$ = 20					; size = 4
_psk_server_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 3133
	mov	eax, DWORD PTR _identity$[esp-4]
	mov	ecx, OFFSET ??_C@_0BA@ENIBCIEA@Client_identity?$AA@
	npad	7
$LL4@psk_server:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN5@psk_server
	test	dl, dl
	je	SHORT $LN6@psk_server
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN5@psk_server
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL4@psk_server
$LN6@psk_server:
	xor	eax, eax
	jmp	SHORT $LN7@psk_server
$LN5@psk_server:
	sbb	eax, eax
	or	eax, 1
$LN7@psk_server:
	test	eax, eax
	je	SHORT $LN2@psk_server
; Line 3134
	push	OFFSET ??_C@_0CO@BACHNCBK@server?3?5PSK?5error?3?5client?5identi@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
; Line 3135
	xor	eax, eax
; Line 3139
	ret	0
$LN2@psk_server:
; Line 3137
	push	DWORD PTR _max_psk_len$[esp-4]
	push	DWORD PTR _psk$[esp]
	push	DWORD PTR _psk_key
	call	_psk_key2bn
	add	esp, 12					; 0000000cH
; Line 3139
	ret	0
_psk_server_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _psk_client_callback
_TEXT	SEGMENT
_ssl$ = 8						; size = 4
_hint$ = 12						; size = 4
_identity$ = 16						; size = 4
_max_identity_len$ = 20					; size = 4
_psk$ = 24						; size = 4
_max_psk_len$ = 28					; size = 4
_psk_client_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 3109
	push	esi
; Line 3113
	push	OFFSET ??_C@_0BA@ENIBCIEA@Client_identity?$AA@
	push	DWORD PTR _max_identity_len$[esp+4]
	xor	esi, esi
	push	DWORD PTR _identity$[esp+8]
	call	_BIO_snprintf
	add	esp, 12					; 0000000cH
; Line 3114
	test	eax, eax
	js	SHORT $LN6@psk_client
; Line 3116
	cmp	DWORD PTR _debug, esi
	je	SHORT $LN3@psk_client
; Line 3117
	push	eax
	push	DWORD PTR _identity$[esp+4]
	push	OFFSET ??_C@_0CG@DPEONPI@client?3?5created?5identity?5?8?$CFs?8?5le@
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
$LN3@psk_client:
; Line 3119
	push	DWORD PTR _max_psk_len$[esp]
	push	DWORD PTR _psk$[esp+4]
	push	DWORD PTR _psk_key
	call	_psk_key2bn
	add	esp, 12					; 0000000cH
; Line 3120
	test	eax, eax
	cmovns	esi, eax
$LN6@psk_client:
; Line 3124
	mov	eax, esi
$out_err$8:
	pop	esi
; Line 3125
	ret	0
_psk_client_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_dh1024dsa
_TEXT	SEGMENT
_get_dh1024dsa PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 3014
	push	esi
; Line 3063
	call	_DH_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN6@get_dh1024
; Line 3065
	push	0
	push	128					; 00000080H
	push	OFFSET ?dh1024_p@?1??get_dh1024dsa@@9@9
	call	_BN_bin2bn
; Line 3066
	push	0
	push	128					; 00000080H
	push	OFFSET ?dh1024_g@?1??get_dh1024dsa@@9@9
	mov	DWORD PTR [esi+8], eax
	call	_BN_bin2bn
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+12], eax
; Line 3067
	cmp	DWORD PTR [esi+8], 0
	je	SHORT $LN4@get_dh1024
	test	eax, eax
	je	SHORT $LN4@get_dh1024
; Line 3071
	mov	DWORD PTR [esi+16], 160			; 000000a0H
; Line 3072
	mov	eax, esi
	pop	esi
; Line 3073
	ret	0
$LN4@get_dh1024:
; Line 3068
	push	esi
	call	_DH_free
	add	esp, 4
$LN6@get_dh1024:
; Line 3069
	xor	eax, eax
	pop	esi
; Line 3073
	ret	0
_get_dh1024dsa ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_dh1024
_TEXT	SEGMENT
_get_dh1024 PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2973
	push	esi
; Line 3002
	call	_DH_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN6@get_dh1024
; Line 3004
	push	0
	push	128					; 00000080H
	push	OFFSET ?dh1024_p@?1??get_dh1024@@9@9
	call	_BN_bin2bn
; Line 3005
	push	0
	push	1
	push	OFFSET ?dh1024_g@?1??get_dh1024@@9@9
	mov	DWORD PTR [esi+8], eax
	call	_BN_bin2bn
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+12], eax
; Line 3006
	cmp	DWORD PTR [esi+8], 0
	je	SHORT $LN4@get_dh1024
	test	eax, eax
	je	SHORT $LN4@get_dh1024
; Line 3010
	mov	eax, esi
	pop	esi
; Line 3011
	ret	0
$LN4@get_dh1024:
; Line 3007
	push	esi
	call	_DH_free
	add	esp, 4
$LN6@get_dh1024:
; Line 3008
	xor	eax, eax
	pop	esi
; Line 3011
	ret	0
_get_dh1024 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _get_dh512
_TEXT	SEGMENT
_get_dh512 PROC						; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2942
	push	esi
; Line 2961
	call	_DH_new
	mov	esi, eax
	test	esi, esi
	je	SHORT $LN6@get_dh512
; Line 2963
	push	0
	push	64					; 00000040H
	push	OFFSET ?dh512_p@?1??get_dh512@@9@9
	call	_BN_bin2bn
; Line 2964
	push	0
	push	1
	push	OFFSET ?dh512_g@?1??get_dh512@@9@9
	mov	DWORD PTR [esi+8], eax
	call	_BN_bin2bn
	add	esp, 24					; 00000018H
	mov	DWORD PTR [esi+12], eax
; Line 2965
	cmp	DWORD PTR [esi+8], 0
	je	SHORT $LN4@get_dh512
	test	eax, eax
	je	SHORT $LN4@get_dh512
; Line 2969
	mov	eax, esi
	pop	esi
; Line 2970
	ret	0
$LN4@get_dh512:
; Line 2966
	push	esi
	call	_DH_free
	add	esp, 4
$LN6@get_dh512:
; Line 2967
	xor	eax, eax
	pop	esi
; Line 2970
	ret	0
_get_dh512 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _app_verify_callback
_TEXT	SEGMENT
_arg$GSCopy$1$ = -376					; size = 4
_cond_end$1 = -376					; size = 4
_ctx$GSCopy$1$ = -372					; size = 4
_pos$2 = -368						; size = 4
_letters$ = -364					; size = 104
_buf$3 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_arg$ = 12						; size = 4
_app_verify_callback PROC				; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2814
	mov	eax, 376				; 00000178H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+376], eax
	push	ebx
	mov	ebx, DWORD PTR _ctx$[esp+376]
	push	ebp
	mov	ebp, DWORD PTR _arg$[esp+380]
	push	esi
	mov	DWORD PTR _ctx$GSCopy$1$[esp+388], ebx
	mov	DWORD PTR _arg$GSCopy$1$[esp+388], ebp
; Line 2819
	cmp	DWORD PTR [ebp+4], 0
	je	$LN11@app_verify
; Line 2822
	mov	esi, DWORD PTR __imp____acrt_iob_func
	push	OFFSET ??_C@_0CI@IKPNODFH@In?5app_verify_callback?0?5allowing@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2823
	push	DWORD PTR [ebp]
	push	OFFSET ??_C@_0M@HFNIKPPB@Arg?5is?3?5?$CFs?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 2824
	push	DWORD PTR [ebx+8]
	push	ebx
	push	OFFSET ??_C@_0DL@CLBCHGDO@Finished?5printing?5do?5we?5have?5a?5c@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2827
	mov	eax, DWORD PTR [ebx+8]
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN13@app_verify
; Line 2828
	push	256					; 00000100H
	lea	ecx, DWORD PTR _buf$3[esp+392]
	push	ecx
	push	eax
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
	add	esp, 12					; 0000000cH
; Line 2829
	test	eax, eax
	je	SHORT $LN13@app_verify
; Line 2830
	lea	eax, DWORD PTR _buf$3[esp+388]
	push	eax
	push	DWORD PTR [ebx+96]
	push	OFFSET ??_C@_0BC@HJLNGDEC@cert?5depth?$DN?$CFd?5?$CFs?6?$AA@
	push	2
	call	esi
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
$LN13@app_verify:
; Line 2832
	pop	esi
	pop	ebp
	mov	eax, 1
	pop	ebx
; Line 2893
	mov	ecx, DWORD PTR __$ArrayPad$[esp+376]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 376				; 00000178H
	ret	0
$LN11@app_verify:
; Line 2834
	mov	ebx, DWORD PTR __imp____acrt_iob_func
	push	edi
	mov	edi, DWORD PTR [ebp+12]
	test	edi, edi
	je	$LN46@app_verify
; Line 2839
	xorps	xmm0, xmm0
	movups	XMMWORD PTR _letters$[esp+392], xmm0
	movups	XMMWORD PTR _letters$[esp+408], xmm0
	movups	XMMWORD PTR _letters$[esp+424], xmm0
	movups	XMMWORD PTR _letters$[esp+440], xmm0
	movups	XMMWORD PTR _letters$[esp+456], xmm0
	movups	XMMWORD PTR _letters$[esp+472], xmm0
	movq	QWORD PTR _letters$[esp+488], xmm0
; Line 2840
	mov	al, BYTE PTR [edi]
	test	al, al
	je	SHORT $LN6@app_verify
	npad	3
$LL7@app_verify:
; Line 2841
	movsx	esi, al
; Line 2842
	cmp	esi, 128				; 00000080H
	jae	SHORT $LN5@app_verify
	push	esi
	call	DWORD PTR __imp__isalpha
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@app_verify
; Line 2843
	push	esi
	call	DWORD PTR __imp__islower
	add	esp, 4
	test	eax, eax
	je	SHORT $LN16@app_verify
; Line 2844
	push	esi
	call	DWORD PTR __imp__toupper
	add	esp, 4
	mov	esi, eax
$LN16@app_verify:
; Line 2845
	mov	DWORD PTR _letters$[esp+esi*4+132], 1
$LN5@app_verify:
; Line 2840
	mov	al, BYTE PTR [edi+1]
	inc	edi
	test	al, al
	jne	SHORT $LL7@app_verify
$LN6@app_verify:
; Line 2849
	push	OFFSET ??_C@_0BK@LLDLKIKC@?5?5Initial?5proxy?5rights?5?$DN?5?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2850
	xor	esi, esi
	xor	ebp, ebp
	npad	1
$LL10@app_verify:
; Line 2851
	cmp	DWORD PTR _letters$[esp+esi*4+392], 0
	je	SHORT $LN8@app_verify
; Line 2852
	lea	eax, DWORD PTR [esi+65]
	push	eax
	push	OFFSET ??_C@_02HAOIJKIC@?$CFc?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 2853
	mov	ebp, 1
$LN8@app_verify:
; Line 2850
	inc	esi
	cmp	esi, 26					; 0000001aH
	jl	SHORT $LL10@app_verify
; Line 2855
	test	ebp, ebp
	mov	ebp, DWORD PTR _arg$GSCopy$1$[esp+392]
	jne	SHORT $LN18@app_verify
; Line 2856
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN18@app_verify:
; Line 2857
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2440
	cmp	DWORD PTR ?idx@?1??get_proxy_auth_ex_data_idx@@9@9, 0
	jge	SHORT $LN28@app_verify
; Line 2441
	push	2441					; 00000989H
	push	OFFSET ??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@
	push	12					; 0000000cH
	push	9
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
; Line 2442
	cmp	DWORD PTR ?idx@?1??get_proxy_auth_ex_data_idx@@9@9, 0
	jge	SHORT $LN29@app_verify
; Line 2443
	push	0
	push	0
	push	0
	push	OFFSET ??_C@_0BM@MCACEDAE@SSLtest?5for?5verify?5callback?$AA@
	push	0
	call	_X509_STORE_CTX_get_ex_new_index
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?idx@?1??get_proxy_auth_ex_data_idx@@9@9, eax
$LN29@app_verify:
; Line 2447
	push	2447					; 0000098fH
	push	OFFSET ??_C@_0BA@BEHPHMOA@?4?2ssl?2ssltest?4c?$AA@
	push	12					; 0000000cH
	push	10					; 0000000aH
	call	_CRYPTO_lock
	add	esp, 16					; 00000010H
$LN28@app_verify:
; Line 2859
	mov	esi, DWORD PTR _ctx$GSCopy$1$[esp+392]
	lea	eax, DWORD PTR _letters$[esp+392]
	push	eax
	mov	eax, DWORD PTR ?idx@?1??get_proxy_auth_ex_data_idx@@9@9
	push	eax
	push	esi
	call	_X509_STORE_CTX_set_ex_data
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN14@app_verify
$LN46@app_verify:
	mov	esi, DWORD PTR _ctx$GSCopy$1$[esp+392]
$LN14@app_verify:
; Line 2862
	cmp	DWORD PTR [ebp+8], 0
	pop	edi
	je	SHORT $LN19@app_verify
; Line 2863
	push	64					; 00000040H
	push	esi
	call	_X509_STORE_CTX_set_flags
	add	esp, 8
$LN19@app_verify:
; Line 2866
	push	esi
	call	_X509_verify_cert
	add	esp, 4
	mov	esi, eax
; Line 2869
	cmp	DWORD PTR [ebp+12], 0
	je	$LN25@app_verify
; Line 2870
	test	esi, esi
	jle	$LN25@app_verify
; Line 2810
	push	1
	lea	eax, DWORD PTR _pos$2[esp+392]
; Line 2871
	mov	DWORD PTR _cond_end$1[esp+392], 0
; Line 2810
	push	eax
	lea	eax, DWORD PTR _cond_end$1[esp+396]
	mov	DWORD PTR _pos$2[esp+396], 1
	push	eax
	push	DWORD PTR [ebp+16]
	lea	eax, DWORD PTR _letters$[esp+404]
	push	eax
	call	_process_proxy_cond_adders
; Line 2873
	mov	esi, eax
; Line 2810
	add	esp, 20					; 00000014H
; Line 2875
	test	esi, esi
	jns	SHORT $LN22@app_verify
; Line 2876
	push	3
	call	DWORD PTR __imp__exit
$LN50@app_verify:
$LN22@app_verify:
; Line 2877
	mov	eax, DWORD PTR _cond_end$1[esp+388]
	cmp	BYTE PTR [eax], 0
	je	SHORT $LN23@app_verify
; Line 2878
	push	OFFSET ??_C@_0CP@BCHMEEFM@Stopped?5processing?5condition?5bef@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2880
	xor	esi, esi
; Line 2883
	push	DWORD PTR [ebp+16]
	push	OFFSET ??_C@_0DH@MIJDKMCA@Proxy?5rights?5check?5with?5conditio@
	jmp	SHORT $LN48@app_verify
$LN23@app_verify:
; Line 2882
	test	esi, esi
	jne	SHORT $LN24@app_verify
; Line 2883
	push	DWORD PTR [ebp+16]
	push	OFFSET ??_C@_0DH@MIJDKMCA@Proxy?5rights?5check?5with?5conditio@
	jmp	SHORT $LN48@app_verify
$LN24@app_verify:
; Line 2887
	push	DWORD PTR [ebp+16]
	push	OFFSET ??_C@_0DF@HMLFHEMF@Proxy?5rights?5check?5with?5conditio@
$LN48@app_verify:
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN25@app_verify:
; Line 2893
	mov	ecx, DWORD PTR __$ArrayPad$[esp+388]
	mov	eax, esi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 376				; 00000178H
	ret	0
$LN49@app_verify:
_app_verify_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _free_tmp_rsa
_TEXT	SEGMENT
_free_tmp_rsa PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2926
	mov	eax, DWORD PTR _rsa_tmp
	test	eax, eax
	je	SHORT $LN2@free_tmp_r
; Line 2927
	push	eax
	call	_RSA_free
	add	esp, 4
; Line 2928
	mov	DWORD PTR _rsa_tmp, 0
$LN2@free_tmp_r:
; Line 2930
	ret	0
_free_tmp_rsa ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _tmp_rsa_cb
_TEXT	SEGMENT
_s$ = 8							; size = 4
_is_export$ = 12					; size = 4
_keylength$ = 16					; size = 4
_tmp_rsa_cb PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2901
	mov	eax, DWORD PTR _rsa_tmp
	test	eax, eax
	jne	$LN6@tmp_rsa_cb
; Line 2902
	push	edi
	call	_BN_new
	mov	edi, eax
; Line 2903
	call	_RSA_new
	mov	DWORD PTR _rsa_tmp, eax
; Line 2904
	test	edi, edi
	je	SHORT $LN4@tmp_rsa_cb
	test	eax, eax
	je	SHORT $LN4@tmp_rsa_cb
	push	65537					; 00010001H
	push	edi
	call	_BN_set_word
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@tmp_rsa_cb
; Line 2908
	push	DWORD PTR _keylength$[esp]
	push	OFFSET ??_C@_0CE@GMHHAGLI@Generating?5temp?5?$CI?$CFd?5bit?$CJ?5RSA?5key@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2909
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
; Line 2910
	push	0
	push	edi
	push	DWORD PTR _keylength$[esp+36]
	push	DWORD PTR _rsa_tmp
	call	_RSA_generate_key_ex
	add	esp, 44					; 0000002cH
	test	eax, eax
	jne	SHORT $end$12
; Line 2911
	push	OFFSET ??_C@_0BG@FMCLKKGN@Error?5generating?5key?4?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2912
	push	DWORD PTR _rsa_tmp
	call	_RSA_free
	add	esp, 12					; 0000000cH
; Line 2913
	mov	DWORD PTR _rsa_tmp, 0
	jmp	SHORT $end$12
$LN4@tmp_rsa_cb:
; Line 2905
	push	OFFSET ??_C@_0BA@NFNBFMFK@Memory?5error?4?4?4?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
	add	esp, 8
$end$12:
; Line 2916
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	DWORD PTR _bio_err
	call	_BIO_printf
; Line 2917
	push	0
	push	0
	push	11					; 0000000bH
	push	DWORD PTR _bio_err
	call	_BIO_ctrl
	add	esp, 24					; 00000018H
; Line 2919
	test	edi, edi
	je	SHORT $LN8@tmp_rsa_cb
; Line 2920
	push	edi
	call	_BN_free
	add	esp, 4
$LN8@tmp_rsa_cb:
; Line 2921
	mov	eax, DWORD PTR _rsa_tmp
	pop	edi
$LN6@tmp_rsa_cb:
; Line 2922
	ret	0
_tmp_rsa_cb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _verify_callback
_TEXT	SEGMENT
_i$1$ = -268						; size = 4
_xs$1$ = -268						; size = 4
_pci$1$ = -264						; size = 4
_buf$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_ok$ = 8						; size = 4
_ctx$ = 12						; size = 4
_verify_callback PROC					; COMDAT
; File c:\workpace\openssl\openssl-1.0.2h\ssl\ssltest.c
; Line 2453
	mov	eax, 268				; 0000010cH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+268], eax
	push	ebx
	push	ebp
	push	esi
	mov	esi, DWORD PTR _ctx$[esp+276]
; Line 2456
	lea	eax, DWORD PTR _buf$[esp+280]
	push	256					; 00000100H
	push	eax
	push	DWORD PTR [esi+104]
	call	_X509_get_subject_name
	add	esp, 4
	push	eax
	call	_X509_NAME_oneline
; Line 2458
	mov	ebp, DWORD PTR _ok$[esp+288]
	add	esp, 12					; 0000000cH
	mov	ebx, DWORD PTR __imp____acrt_iob_func
	test	eax, eax
	je	SHORT $LN19@verify_cal
; Line 2460
	lea	eax, DWORD PTR _buf$[esp+280]
	push	eax
	test	ebp, ebp
	je	SHORT $LN18@verify_cal
	push	DWORD PTR [esi+96]
	push	OFFSET ??_C@_0N@ICFGBFFA@depth?$DN?$CFd?5?$CFs?6?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
$LN19@verify_cal:
; Line 2467
	test	ebp, ebp
	jne	$LN2@verify_cal
$LN56@verify_cal:
; Line 2468
	push	DWORD PTR [esi+100]
	call	_X509_verify_cert_error_string
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BC@ELKDOJBF@Error?5string?3?5?$CFs?6?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2470
	mov	eax, DWORD PTR [esi+100]
	add	esp, 12					; 0000000cH
	cmp	eax, 9
	jl	$LN59@verify_cal
	cmp	eax, 10					; 0000000aH
	jle	SHORT $LN21@verify_cal
	cmp	eax, 18					; 00000012H
	jne	$LN59@verify_cal
$LN21@verify_cal:
; Line 2474
	push	OFFSET ??_C@_0BA@HCGKOGPE@?5?5?4?4?4?5ignored?4?6?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2475
	mov	ebp, 1
	add	esp, 8
	mov	DWORD PTR _ok$[esp+276], ebp
; Line 2479
	jmp	SHORT $LN57@verify_cal
$LN18@verify_cal:
; Line 2462
	push	DWORD PTR [esi+100]
	mov	ebx, DWORD PTR __imp____acrt_iob_func
	push	DWORD PTR [esi+96]
	push	OFFSET ??_C@_0BG@CDFJJOOL@depth?$DN?$CFd?5error?$DN?$CFd?5?$CFs?6?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 20					; 00000014H
; Line 2467
	jmp	$LN56@verify_cal
$LN2@verify_cal:
; Line 2479
	cmp	ebp, 1
	jne	$LN59@verify_cal
$LN57@verify_cal:
; Line 2480
	mov	eax, DWORD PTR [esi+104]
	mov	DWORD PTR _xs$1$[esp+280], eax
; Line 2485
	test	DWORD PTR [eax+40], 1024		; 00000400H
	je	$LN59@verify_cal
; Line 2486
	push	edi
	call	_get_proxy_auth_ex_data_idx
	push	eax
	push	esi
	call	_X509_STORE_CTX_get_ex_data
	mov	edi, eax
	add	esp, 8
; Line 2490
	test	edi, edi
	je	$LN58@verify_cal
; Line 2493
	push	0
	push	0
	push	663					; 00000297H
	push	DWORD PTR _xs$1$[esp+296]
	call	_X509_get_ext_d2i
	mov	ebp, eax
	mov	DWORD PTR _pci$1$[esp+300], ebp
; Line 2497
	mov	ecx, DWORD PTR [ebp+4]
	push	DWORD PTR [ecx]
	call	_OBJ_obj2nid
	add	esp, 20					; 00000014H
	sub	eax, 665				; 00000299H
	je	$LN26@verify_cal
	sub	eax, 2
	je	$LN25@verify_cal
; Line 2517
	mov	eax, DWORD PTR [ebp+4]
	mov	eax, DWORD PTR [eax+4]
	mov	ebp, DWORD PTR [eax+8]
; Line 2519
	mov	esi, DWORD PTR [eax]
; Line 2537
	push	ebp
	push	esi
	push	esi
	push	OFFSET ??_C@_0CD@BNGFNACI@?5?5Certificate?5proxy?5rights?5?$DN?5?$CF?$CK?4@
	push	2
	mov	DWORD PTR _i$1$[esp+304], esi
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 20					; 00000014H
; Line 2539
	test	esi, esi
	jle	SHORT $LN39@verify_cal
	mov	ebx, esi
	npad	5
$LL9@verify_cal:
; Line 2540
	movsx	esi, BYTE PTR [ebp]
	lea	ebp, DWORD PTR [ebp+1]
	dec	ebx
; Line 2541
	cmp	esi, 128				; 00000080H
	jae	SHORT $LN28@verify_cal
	push	esi
	call	DWORD PTR __imp__isalpha
	add	esp, 4
	test	eax, eax
	je	SHORT $LN28@verify_cal
; Line 2542
	push	esi
	call	DWORD PTR __imp__islower
	add	esp, 4
	test	eax, eax
	je	SHORT $LN29@verify_cal
; Line 2543
	push	esi
	call	DWORD PTR __imp__toupper
	add	esp, 4
	mov	esi, eax
$LN29@verify_cal:
; Line 2544
	inc	DWORD PTR [edi+esi*4-260]
$LN28@verify_cal:
; Line 2539
	test	ebx, ebx
	jg	SHORT $LL9@verify_cal
	mov	ebx, DWORD PTR __imp____acrt_iob_func
$LN39@verify_cal:
; Line 2547
	xor	ecx, ecx
	npad	5
$LL43@verify_cal:
; Line 2548
	cmp	DWORD PTR [edi+ecx*4], 2
	sbb	eax, eax
	inc	eax
	mov	DWORD PTR [edi+ecx*4], eax
	inc	ecx
	cmp	ecx, 26					; 0000001aH
	jl	SHORT $LL43@verify_cal
; Line 2547
	jmp	SHORT $LN12@verify_cal
$LN25@verify_cal:
; Line 2505
	push	OFFSET ??_C@_0CA@MMHCFPAN@?5?5Independent?5proxy?5certificate?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	xorps	xmm0, xmm0
; Line 2507
	movups	XMMWORD PTR [edi], xmm0
	movups	XMMWORD PTR [edi+16], xmm0
	movups	XMMWORD PTR [edi+32], xmm0
	movups	XMMWORD PTR [edi+48], xmm0
	movups	XMMWORD PTR [edi+64], xmm0
	movups	XMMWORD PTR [edi+80], xmm0
	movq	QWORD PTR [edi+96], xmm0
; Line 2508
	jmp	SHORT $LN64@verify_cal
$LN26@verify_cal:
; Line 2514
	push	OFFSET ??_C@_0CB@BFDOKMAD@?5?5Proxy?5certificate?5inherits?5all@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
$LN64@verify_cal:
	add	esp, 8
$LN12@verify_cal:
; Line 2555
	push	OFFSET ??_C@_0BM@IDDECBBG@?0?5resulting?5proxy?5rights?5?$DN?5?$AA@
	push	2
	xor	ebp, ebp
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 2556
	xor	esi, esi
$LL16@verify_cal:
; Line 2557
	cmp	DWORD PTR [edi+esi*4], 0
	je	SHORT $LN14@verify_cal
; Line 2558
	lea	eax, DWORD PTR [esi+65]
	push	eax
	push	OFFSET ??_C@_02HAOIJKIC@?$CFc?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 2559
	mov	ebp, 1
$LN14@verify_cal:
; Line 2556
	inc	esi
	cmp	esi, 26					; 0000001aH
	jl	SHORT $LL16@verify_cal
; Line 2561
	test	ebp, ebp
	mov	ebp, DWORD PTR _ok$[esp+280]
	jne	SHORT $LN33@verify_cal
; Line 2562
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
$LN33@verify_cal:
; Line 2563
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	2
	call	ebx
	add	esp, 4
	push	eax
	call	_fprintf
; Line 2565
	push	DWORD PTR _pci$1$[esp+292]
	call	_PROXY_CERT_INFO_EXTENSION_free
	add	esp, 12					; 0000000cH
$LN58@verify_cal:
; Line 2570
	pop	edi
	pop	esi
	mov	eax, ebp
	pop	ebp
	pop	ebx
; Line 2571
	mov	ecx, DWORD PTR __$ArrayPad$[esp+268]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	ret	0
$LN59@verify_cal:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+280]
	mov	eax, ebp
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	ret	0
_verify_callback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
; Line 639
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _fprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 838
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _vfprintf
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__ArgList$ = 16						; size = 4
_vfprintf PROC						; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 654
	ret	0
_vfprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files\windows kits\10\include\10.0.10586.0\ucrt\corecrt_stdio_config.h
; Line 82
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 83
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END

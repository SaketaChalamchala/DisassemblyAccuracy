endp
_main		proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '1']
mov ['ds:dword_7C,', 'offset', '??_C@_01LFCBOECM@?4?$AA@']
push ['offset', '_options']
push ['9']
mov ['eax,', '[ebp+argv]']
push ['eax']
mov ['ecx,', '[ebp+argc]']
push ['ecx']
call ['_u_parseArgs']
add ['esp,', '10h']
mov ['[ebp+argc],', 'eax']
cmp ['[ebp+argc],', '0']
jge ['short', 'loc_186']
mov ['eax,', '[ebp+argc]']
neg ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+argv]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
push ['offset', '??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+argc],', '0']
jl ['short', 'loc_1A6']
movsx ['eax,', 'ds:byte_62']
test ['eax,', 'eax']
jnz ['short', 'loc_1A6']
movsx ['eax,', 'ds:byte_76']
test ['eax,', 'eax']
jz ['loc_234']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+argv]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['offset', '??_C@_0BLN@IFKELJHJ@usage?3?5?$CFs?5?$FL?9options?$FN?5filename1?5f@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0OK@CBNEBILO@?7?9o?5or?5?9?9object?5?5?5?5?5?5write?5a?5?4ob@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_0JF@ELKGNILA@?7?9f?5or?5?9?9filename?5?5?5?5Specify?5an?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
call ['_printAssemblyHeadersToStdErr']
jmp ['loc_406']
movsx ['eax,', 'ds:byte_102']
test ['eax,', 'eax']
jz ['short', 'loc_299']
mov ['[ebp+Format],', 'offset', '??_C@_0CB@BDINFBLB@generating?5assembly?5code?5for?5?$CFs?6@']
mov ['[ebp+var_11],', '61h']
mov ['eax,', 'ds:dword_F4']
push ['eax']
call ['_checkAssemblyHeaderName']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_297']
mov ['esi,', 'esp']
mov ['eax,', 'ds:dword_F4']
push ['eax']
push ['offset', '??_C@_0CA@LDKEGMIE@Assembly?5type?5?$CC?$CFs?$CC?5is?5unknown?4?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_408']
jmp ['short', 'loc_2BC']
movsx ['eax,', 'ds:byte_C6']
test ['eax,', 'eax']
jz ['short', 'loc_2B1']
mov ['[ebp+Format],', 'offset', '??_C@_0BP@NABGCAI@generating?5object?5code?5for?5?$CFs?6?$AA@']
mov ['[ebp+var_11],', '6Fh']
jmp ['short', 'loc_2BC']
mov ['[ebp+Format],', 'offset', '??_C@_0BK@HKNBMBBN@generating?5C?5code?5for?5?$CFs?6?$AA@']
mov ['[ebp+var_11],', '63h']
mov ['eax,', '[ebp+argc]']
sub ['eax,', '1']
mov ['[ebp+argc],', 'eax']
jz ['loc_406']
mov ['eax,', '[ebp+argc]']
mov ['ecx,', '[ebp+argv]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_getLongPathname']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jz ['short', 'loc_315']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+Format]']
push ['ecx']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '20h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '[ebp+var_11]']
mov ['[ebp+var_F4],', 'al']
cmp ['[ebp+var_F4],', '61h']
jz ['short', 'loc_37C']
cmp ['[ebp+var_F4],', '63h']
jz ['short', 'loc_33E']
cmp ['[ebp+var_F4],', '6Fh']
jz ['short', 'loc_3B7']
jmp ['loc_401']
push ['0']
movsx ['eax,', 'ds:byte_EE']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', 'ds:dword_E0']
push ['eax']
movsx ['ecx,', 'ds:byte_9E']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', 'ds:dword_90']
push ['ecx']
mov ['edx,', 'ds:dword_7C']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_writeCCode']
add ['esp,', '14h']
jmp ['loc_401']
push ['0']
movsx ['eax,', 'ds:byte_EE']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', 'ds:dword_E0']
push ['eax']
movsx ['ecx,', 'ds:byte_B2']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', 'ds:dword_A4']
push ['ecx']
mov ['edx,', 'ds:dword_7C']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_writeAssemblyCode']
add ['esp,', '14h']
jmp ['short', 'loc_401']
push ['0']
movsx ['eax,', 'ds:byte_EE']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', 'ds:dword_E0']
push ['eax']
movsx ['ecx,', 'ds:byte_DA']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', 'ds:dword_CC']
push ['ecx']
movsx ['edx,', 'ds:byte_B2']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', 'ds:dword_A4']
push ['edx']
mov ['eax,', 'ds:dword_7C']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_writeObjectCode']
add ['esp,', '18h']
jmp ['loc_2BC']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0BK@HKNBMBBN@generating?5C?5code?5for?5?$CFs?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BP@NABGCAI@generating?5object?5code?5for?5?$CFs?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CA@LDKEGMIE@Assembly?5type?5?$CC?$CFs?$CC?5is?5unknown?4?6?$AA@']
assume ['cs:_rdata']
public ['??_C@_0CB@BDINFBLB@generating?5assembly?5code?5for?5?$CFs?6@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0JF@ELKGNILA@?7?9f?5or?5?9?9filename?5?5?5?5Specify?5an?5@']
db ["':", "symbolname_typ)',0Ah"]
db ["9,'-a", 'or', '--assembly', 'Create', 'assembly', 'file.', '(possible', 'values', 'are:', "'"]
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0OK@CBNEBILO@?7?9o?5or?5?9?9object?5?5?5?5?5?5write?5a?5?4ob@']
db ["9,'-m", 'or', '--match-arch', 'file.o', 'match', 'the', 'architecture', '(CPU,', '32/64', "bi'"]
db ["'ts)", 'of', 'the', 'specified', ".o',0Ah"]
db ["9,'", 'ELF', 'format', 'defaults', 'to', 'i386.', 'Windows', "default'"]
db ["'s", 'to', 'the', 'native', "platform.',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BLN@IFKELJHJ@usage?3?5?$CFs?5?$FL?9options?$FN?5filename1?5f@']
db ["9,'read", 'each', 'binary', 'input', 'file', 'and', "',0Ah"]
db ["9,'create", 'a', '.c', 'file', 'with', 'a', 'byte', 'array', 'that', 'contains', 'the', 'input', "file',27h"]
db ["'s", "data',0Ah"]
db ["'options:',0Ah"]
db ["9,'-h", 'or', '-?', 'or', '--help', 'this', 'usage', "text',0Ah"]
db ["9,'-d", 'or', '--destdir', 'destination', 'directory,', 'followed', 'by', 'the', "path',0Ah"]
db ["9,'-n", 'or', '--name', 'symbol', 'prefix,', 'followed', 'by', 'the', "prefix',0Ah"]
db ["9,'-e", 'or', '--entrypoint', 'entry', 'point', 'name,', 'followed', 'by', 'the', 'name', "(_dat'"]
db ["'", 'will', 'be', "appended)',0Ah"]
db ["9,'-r", 'or', '--revision', 'Specify', 'a', "version',0Ah,0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_01LFCBOECM@?4?$AA@']
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
extrn ['_writeObjectCode:near']
extrn ['_writeAssemblyCode:near']
extrn ['_writeCCode:near']
extrn ['_getLongPathname:near']
extrn ['_checkAssemblyHeaderName:near']
extrn ['_printAssemblyHeadersToStdErr:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_u_parseArgs:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
end

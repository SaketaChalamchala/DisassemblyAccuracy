endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSyntax@PatternProps@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_2A8']
xor ['al,', 'al']
jmp ['loc_353']
jmp ['loc_353']
cmp ['[ebp+arg_0],', '0FFh']
jg ['short', 'loc_2CD']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', '_latin1[eax]']
sar ['ecx,', '1']
movsx ['eax,', 'cl']
and ['eax,', '1']
jmp ['loc_353']
jmp ['loc_353']
cmp ['[ebp+arg_0],', '2010h']
jge ['short', 'loc_2DC']
xor ['al,', 'al']
jmp ['short', 'loc_353']
jmp ['short', 'loc_353']
cmp ['[ebp+arg_0],', '3030h']
jg ['short', 'loc_313']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2000h']
sar ['eax,', '5']
movzx ['ecx,', '_index2000[eax]']
mov ['edx,', '_syntax2000[ecx*4]']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
mov ['eax,', '[ebp+var_8]']
shr ['eax,', 'cl']
and ['eax,', '1']
jmp ['short', 'loc_353']
jmp ['short', 'loc_353']
cmp ['[ebp+arg_0],', '0FD3Eh']
jl ['short', 'loc_351']
cmp ['[ebp+arg_0],', '0FE46h']
jg ['short', 'loc_351']
cmp ['[ebp+arg_0],', '0FD3Fh']
jle ['short', 'loc_340']
cmp ['[ebp+arg_0],', '0FE45h']
jge ['short', 'loc_340']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_347']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
jmp ['short', 'loc_353']
jmp ['short', 'loc_353']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSyntaxOrWhiteSpace@PatternProps@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_38C']
xor ['al,', 'al']
jmp ['loc_432']
jmp ['loc_432']
cmp ['[ebp+arg_0],', '0FFh']
jg ['short', 'loc_3AC']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', '_latin1[eax]']
and ['eax,', '1']
jmp ['loc_432']
jmp ['loc_432']
cmp ['[ebp+arg_0],', '200Eh']
jge ['short', 'loc_3BB']
xor ['al,', 'al']
jmp ['short', 'loc_432']
jmp ['short', 'loc_432']
cmp ['[ebp+arg_0],', '3030h']
jg ['short', 'loc_3F2']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2000h']
sar ['eax,', '5']
movzx ['ecx,', '_index2000[eax]']
mov ['edx,', '_syntaxOrWhiteSpace2000[ecx*4]']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
mov ['eax,', '[ebp+var_8]']
shr ['eax,', 'cl']
and ['eax,', '1']
jmp ['short', 'loc_432']
jmp ['short', 'loc_432']
cmp ['[ebp+arg_0],', '0FD3Eh']
jl ['short', 'loc_430']
cmp ['[ebp+arg_0],', '0FE46h']
jg ['short', 'loc_430']
cmp ['[ebp+arg_0],', '0FD3Fh']
jle ['short', 'loc_41F']
cmp ['[ebp+arg_0],', '0FE45h']
jge ['short', 'loc_41F']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_426']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
jmp ['short', 'loc_432']
jmp ['short', 'loc_432']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isWhiteSpace@PatternProps@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_466']
xor ['al,', 'al']
jmp ['short', 'loc_4C6']
jmp ['short', 'loc_4C6']
cmp ['[ebp+arg_0],', '0FFh']
jg ['short', 'loc_486']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', '_latin1[eax]']
sar ['ecx,', '2']
movsx ['eax,', 'cl']
and ['eax,', '1']
jmp ['short', 'loc_4C6']
jmp ['short', 'loc_4C6']
cmp ['[ebp+arg_0],', '200Eh']
jl ['short', 'loc_4C4']
cmp ['[ebp+arg_0],', '2029h']
jg ['short', 'loc_4C4']
cmp ['[ebp+arg_0],', '200Fh']
jle ['short', 'loc_4B3']
cmp ['[ebp+arg_0],', '2028h']
jge ['short', 'loc_4B3']
mov ['[ebp+var_C1],', '0']
jmp ['short', 'loc_4BA']
mov ['[ebp+var_C1],', '1']
mov ['al,', '[ebp+var_C1]']
jmp ['short', 'loc_4C6']
jmp ['short', 'loc_4C6']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?skipWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_51E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
call ['?isWhiteSpace@PatternProps@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_51E']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_4EE']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?trimWhiteSpace@PatternProps@icu_56@@SAPB_WPB_WAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_591']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
call ['?isWhiteSpace@PatternProps@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_596']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
push ['eax']
call ['?isWhiteSpace@PatternProps@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_596']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_614']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_5D2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isWhiteSpace@PatternProps@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5D2']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_5A5']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_600']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
push ['edx']
call ['?isWhiteSpace@PatternProps@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_600']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_5DA']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+eax*2]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isIdentifier@PatternProps@icu_56@@SACPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jg ['short', 'loc_650']
xor ['al,', 'al']
jmp ['short', 'loc_695']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
push ['eax']
call ['?isSyntaxOrWhiteSpace@PatternProps@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_68B']
xor ['al,', 'al']
jmp ['short', 'loc_695']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_8]']
jb ['short', 'loc_65C']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?skipIdentifier@PatternProps@icu_56@@SAPB_WPB_WH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_6FA']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
call ['?isSyntaxOrWhiteSpace@PatternProps@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_6FA']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_6CA']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
end

endp
__CompoundTextOpen proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1DC]']
mov ['ecx,', '77h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['54h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['loc_56F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_118],', '1Ch']
xor ['eax,', 'eax']
mov ['[ebp+var_114],', 'eax']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_10C],', 'eax']
mov ['[ebp+var_108],', 'eax']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_100],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BJ@ONCBAHBI@icu?9internal?9compound?9s1?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BJ@MGAMFENL@icu?9internal?9compound?9s2?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BJ@NPBHGFJK@icu?9internal?9compound?9s3?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BJ@PEEILCON@icu?9internal?9compound?9d1?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BJ@NPGFOBCO@icu?9internal?9compound?9d2?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BJ@MGHONAGP@icu?9internal?9compound?9d3?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+18h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BJ@IJDPEGKI@icu?9internal?9compound?9d4?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+1Ch],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BJ@JACEHHOJ@icu?9internal?9compound?9d5?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+20h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BJ@LLAJCECK@icu?9internal?9compound?9d6?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+24h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BJ@KCBCBFGL@icu?9internal?9compound?9d7?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+28h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BI@IHBLKOHN@icu?9internal?9compound?9t?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+2Ch],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BC@FCLNMLII@ibm?9915_P100?91995?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BC@CFCDBJHI@ibm?9916_P100?91995?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+34h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BC@MJBIIHOH@ibm?9914_P100?91995?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+38h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BC@PEPCLJEM@ibm?9874_P100?91995?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+3Ch],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BC@CGCFCCAH@ibm?9912_P100?91995?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+40h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BC@PFIOJEPI@ibm?9913_P100?92000?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+44h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BB@BCJEGKIH@iso?98859_14?91998?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+48h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_118]']
push ['ecx']
lea ['edx,', '[ebp+var_F4]']
push ['edx']
push ['offset', '??_C@_0BC@LFOEHMOL@ibm?9923_P100?91998?$AA@']
call ['_ucnv_loadSharedData_56']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+4Ch],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_555']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_563']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['__CompoundTextClose']
add ['esp,', '4']
jmp ['short', 'loc_578']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+50h],', '0']
jmp ['short', 'loc_578']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN9']
dd ['offset', '$LN7']
dd ['0FFFFFEE8h,', '1Ch']
dd ['offset', '$LN8']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BC@LFOEHMOL@ibm?9923_P100?91998?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BB@BCJEGKIH@iso?98859_14?91998?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@PFIOJEPI@ibm?9913_P100?92000?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@CGCFCCAH@ibm?9912_P100?91995?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BC@PEPCLJEM@ibm?9874_P100?91995?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@MJBIIHOH@ibm?9914_P100?91995?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@CFCDBJHI@ibm?9916_P100?91995?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@FCLNMLII@ibm?9915_P100?91995?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BI@IHBLKOHN@icu?9internal?9compound?9t?$AA@']
assume ['cs:_rdata']
public ['??_C@_0BJ@KCBCBFGL@icu?9internal?9compound?9d7?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BJ@LLAJCECK@icu?9internal?9compound?9d6?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BJ@JACEHHOJ@icu?9internal?9compound?9d5?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BJ@IJDPEGKI@icu?9internal?9compound?9d4?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BJ@MGHONAGP@icu?9internal?9compound?9d3?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BJ@NPGFOBCO@icu?9internal?9compound?9d2?$AA@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BJ@PEEILCON@icu?9internal?9compound?9d1?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BJ@NPBHGFJK@icu?9internal?9compound?9s3?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BJ@MGAMFENL@icu?9internal?9compound?9s2?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BJ@ONCBAHBI@icu?9internal?9compound?9s1?$AA@']
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__CompoundTextClose proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_82F']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_7FA']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '14h']
jge ['short', 'loc_820']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jz ['short', 'loc_81E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_ucnv_unloadSharedDataIfReady_56']
add ['esp,', '4']
jmp ['short', 'loc_7F1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__CompoundTextReset proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__CompoundTextgetName proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '??_C@_0BC@MILLLJIK@x11?9compound?9text?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@MILLLJIK@x11?9compound?9text?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_UConverter_fromUnicode_CompoundText_OFFSETS proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1A0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1A0]']
mov ['ecx,', '68h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_30],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_3C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+23h]']
mov ['[ebp+var_51],', 'cl']
mov ['[ebp+var_70],', '0']
mov ['[ebp+var_A0],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+var_7C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_48],', 'ecx']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_94C']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_24]']
jnb ['short', 'loc_94C']
jmp ['short', '$getTrail$11047']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_3C]']
jnb ['loc_D55']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_24]']
jnb ['loc_D45']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '2']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_48]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['loc_A27']
mov ['eax,', '[ebp+var_48]']
and ['eax,', '400h']
jnz ['short', 'loc_A10']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_3C]']
jnb ['short', 'loc_A00']
mov ['eax,', '[ebp+var_30]']
mov ['cx,', '[eax]']
mov ['[ebp+var_DC],', 'cx']
movzx ['eax,', '[ebp+var_DC]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_9E7']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '2']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_48]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_DC]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+38h],', '0']
jmp ['short', 'loc_9FE']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_48]']
mov ['[eax+38h],', 'ecx']
jmp ['loc_D55']
jmp ['short', 'loc_A0E']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_48]']
mov ['[eax+38h],', 'ecx']
jmp ['loc_D55']
jmp ['short', 'loc_A27']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_48]']
mov ['[eax+38h],', 'ecx']
jmp ['loc_D55']
mov ['[ebp+var_70],', '0']
mov ['eax,', '[ebp+var_48]']
push ['eax']
call ['_getState']
add ['esp,', '4']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0FFFFFFFFh']
jz ['short', 'loc_AB5']
mov ['eax,', '[ebp+var_7C]']
cmp ['eax,', '[ebp+var_88]']
jz ['short', 'loc_AB5']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_7C],', 'eax']
mov ['[ebp+var_AC],', '0']
jmp ['short', 'loc_A78']
mov ['eax,', '[ebp+var_AC]']
add ['eax,', '1']
mov ['[ebp+var_AC],', 'eax']
mov ['eax,', '[ebp+var_7C]']
imul ['eax,', '5']
mov ['ecx,', '[ebp+var_AC]']
movzx ['edx,', '_escSeqCompoundText[eax+ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_AB5']
mov ['eax,', '[ebp+var_7C]']
imul ['eax,', '5']
mov ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ebp+var_AC]']
mov ['al,', '_escSeqCompoundText[eax+edx]']
mov ['[ebp+ecx+var_64],', 'al']
mov ['ecx,', '[ebp+var_70]']
add ['ecx,', '1']
mov ['[ebp+var_70],', 'ecx']
jmp ['short', 'loc_A69']
cmp ['[ebp+var_88],', '0FFFFFFFFh']
jnz ['loc_BF5']
mov ['[ebp+var_AC],', '1']
jmp ['short', 'loc_ADD']
mov ['eax,', '[ebp+var_AC]']
add ['eax,', '1']
mov ['[ebp+var_AC],', 'eax']
cmp ['[ebp+var_AC],', '0Ch']
jge ['loc_BF0']
movzx ['eax,', '[ebp+var_51]']
push ['eax']
lea ['ecx,', '[ebp+var_94]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_AC]']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_ucnv_MBCSFromUChar32_56']
add ['esp,', '10h']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0']
jle ['loc_BEB']
mov ['eax,', '[ebp+var_AC]']
mov ['[ebp+var_88],', 'eax']
mov ['eax,', '[ebp+var_7C]']
cmp ['eax,', '[ebp+var_88]']
jz ['short', 'loc_B9D']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_7C],', 'eax']
mov ['[ebp+var_C4],', '0']
jmp ['short', 'loc_B60']
mov ['eax,', '[ebp+var_C4]']
add ['eax,', '1']
mov ['[ebp+var_C4],', 'eax']
mov ['eax,', '[ebp+var_7C]']
imul ['eax,', '5']
mov ['ecx,', '[ebp+var_C4]']
movzx ['edx,', '_escSeqCompoundText[eax+ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_B9D']
mov ['eax,', '[ebp+var_7C]']
imul ['eax,', '5']
mov ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ebp+var_C4]']
mov ['al,', '_escSeqCompoundText[eax+edx]']
mov ['[ebp+ecx+var_64],', 'al']
mov ['ecx,', '[ebp+var_70]']
add ['ecx,', '1']
mov ['[ebp+var_70],', 'ecx']
jmp ['short', 'loc_B51']
mov ['eax,', '[ebp+var_A0]']
sub ['eax,', '1']
mov ['[ebp+var_B8],', 'eax']
jmp ['short', 'loc_BBD']
mov ['eax,', '[ebp+var_B8]']
sub ['eax,', '1']
mov ['[ebp+var_B8],', 'eax']
cmp ['[ebp+var_B8],', '0']
jl ['short', 'loc_BE9']
mov ['ecx,', '[ebp+var_B8]']
shl ['ecx,', '3']
mov ['eax,', '[ebp+var_94]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_70]']
mov ['[ebp+ecx+var_64],', 'al']
mov ['edx,', '[ebp+var_70]']
add ['edx,', '1']
mov ['[ebp+var_70],', 'edx']
jmp ['short', 'loc_BAE']
jmp ['short', 'loc_BF0']
jmp ['loc_ACE']
jmp ['loc_C96']
cmp ['[ebp+var_88],', '0']
jnz ['short', 'loc_C16']
mov ['eax,', '[ebp+var_70]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_48]']
mov ['[ebp+eax+var_64],', 'cl']
mov ['edx,', '[ebp+var_70]']
add ['edx,', '1']
mov ['[ebp+var_70],', 'edx']
jmp ['loc_C96']
movzx ['eax,', '[ebp+var_51]']
push ['eax']
lea ['ecx,', '[ebp+var_94]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_ucnv_MBCSFromUChar32_56']
add ['esp,', '10h']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0']
jle ['short', 'loc_C96']
mov ['eax,', '[ebp+var_A0]']
sub ['eax,', '1']
mov ['[ebp+var_B8],', 'eax']
jmp ['short', 'loc_C6A']
mov ['eax,', '[ebp+var_B8]']
sub ['eax,', '1']
mov ['[ebp+var_B8],', 'eax']
cmp ['[ebp+var_B8],', '0']
jl ['short', 'loc_C96']
mov ['ecx,', '[ebp+var_B8]']
shl ['ecx,', '3']
mov ['eax,', '[ebp+var_94]']
shr ['eax,', 'cl']
mov ['ecx,', '[ebp+var_70]']
mov ['[ebp+ecx+var_64],', 'al']
mov ['edx,', '[ebp+var_70]']
add ['edx,', '1']
mov ['[ebp+var_70],', 'edx']
jmp ['short', 'loc_C5B']
mov ['[ebp+var_AC],', '0']
jmp ['short', 'loc_CB1']
mov ['eax,', '[ebp+var_AC]']
add ['eax,', '1']
mov ['[ebp+var_AC],', 'eax']
mov ['eax,', '[ebp+var_AC]']
cmp ['eax,', '[ebp+var_70]']
jge ['short', 'loc_CEB']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_24]']
jnb ['short', 'loc_CDE']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_AC]']
mov ['dl,', '[ebp+ecx+var_64]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_CE9']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_CEB']
jmp ['short', 'loc_CA2']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_D43']
jmp ['short', 'loc_D04']
mov ['eax,', '[ebp+var_AC]']
add ['eax,', '1']
mov ['[ebp+var_AC],', 'eax']
mov ['eax,', '[ebp+var_AC]']
cmp ['eax,', '[ebp+var_70]']
jge ['short', 'loc_D43']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['eax,', '[ebp+var_AC]']
mov ['al,', '[ebp+eax+var_64]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
jmp ['short', 'loc_CF5']
jmp ['short', 'loc_D50']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_D55']
jmp ['loc_94C']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+var_7C]']
mov ['[eax+50h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+10h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN50']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1A0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN49']
dd ['offset', '$LN47']
dd ['0FFFFFF6Ch,', '4']
dd ['offset', '$LN48']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_getState	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0FFFFFFFFh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_E31']
cmp ['[ebp+arg_0],', '9']
jz ['short', 'loc_E31']
cmp ['[ebp+arg_0],', '0Ah']
jz ['short', 'loc_E31']
cmp ['[ebp+arg_0],', '20h']
jl ['short', 'loc_E1F']
cmp ['[ebp+arg_0],', '7Fh']
jle ['short', 'loc_E31']
cmp ['[ebp+arg_0],', '0A0h']
jl ['short', 'loc_E3D']
cmp ['[ebp+arg_0],', '0FFh']
jg ['short', 'loc_E3D']
mov ['[ebp+var_8],', '0']
jmp ['loc_13D8']
cmp ['[ebp+arg_0],', '102h']
jl ['short', 'loc_E53']
cmp ['[ebp+arg_0],', '107h']
jle ['loc_FB4']
cmp ['[ebp+arg_0],', '10Ch']
jl ['short', 'loc_E69']
cmp ['[ebp+arg_0],', '111h']
jle ['loc_FB4']
cmp ['[ebp+arg_0],', '118h']
jl ['short', 'loc_E7F']
cmp ['[ebp+arg_0],', '11Bh']
jle ['loc_FB4']
cmp ['[ebp+arg_0],', '139h']
jz ['loc_FB4']
cmp ['[ebp+arg_0],', '13Ah']
jz ['loc_FB4']
cmp ['[ebp+arg_0],', '13Dh']
jz ['loc_FB4']
cmp ['[ebp+arg_0],', '13Eh']
jz ['loc_FB4']
cmp ['[ebp+arg_0],', '141h']
jl ['short', 'loc_EC9']
cmp ['[ebp+arg_0],', '144h']
jle ['loc_FB4']
cmp ['[ebp+arg_0],', '147h']
jz ['loc_FB4']
cmp ['[ebp+arg_0],', '147h']
jz ['loc_FB4']
cmp ['[ebp+arg_0],', '150h']
jz ['loc_FB4']
cmp ['[ebp+arg_0],', '151h']
jz ['loc_FB4']
cmp ['[ebp+arg_0],', '154h']
jz ['loc_FB4']
cmp ['[ebp+arg_0],', '155h']
jz ['loc_FB4']
cmp ['[ebp+arg_0],', '158h']
jl ['short', 'loc_F2D']
cmp ['[ebp+arg_0],', '15Bh']
jle ['loc_FB4']
cmp ['[ebp+arg_0],', '15Eh']
jz ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '15Fh']
jz ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '160h']
jl ['short', 'loc_F51']
cmp ['[ebp+arg_0],', '165h']
jle ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '16Eh']
jz ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '16Fh']
jz ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '170h']
jz ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '171h']
jz ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '179h']
jl ['short', 'loc_F87']
cmp ['[ebp+arg_0],', '17Eh']
jle ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '2C7h']
jz ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '2D8h']
jz ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '2D9h']
jz ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '2DBh']
jz ['short', 'loc_FB4']
cmp ['[ebp+arg_0],', '2DDh']
jnz ['short', 'loc_FC0']
mov ['[ebp+var_8],', '10h']
jmp ['loc_13D8']
cmp ['[ebp+arg_0],', '108h']
jl ['short', 'loc_FD2']
cmp ['[ebp+arg_0],', '10Bh']
jle ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '11Ch']
jz ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '11Dh']
jz ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '120h']
jz ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '121h']
jz ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '124h']
jl ['short', 'loc_1008']
cmp ['[ebp+arg_0],', '127h']
jle ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '134h']
jz ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '135h']
jz ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '15Ch']
jz ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '15Dh']
jz ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '16Ch']
jz ['short', 'loc_103E']
cmp ['[ebp+arg_0],', '16Dh']
jnz ['short', 'loc_104A']
mov ['[ebp+var_8],', '11h']
jmp ['loc_13D8']
cmp ['[ebp+arg_0],', '174h']
jl ['short', 'loc_1060']
cmp ['[ebp+arg_0],', '177h']
jle ['loc_10F4']
cmp ['[ebp+arg_0],', '1E0Ah']
jz ['loc_10F4']
cmp ['[ebp+arg_0],', '1E0Bh']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E1Eh']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E1Fh']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E40h']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E41h']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E56h']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E57h']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E60h']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E61h']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E6Ah']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E6Bh']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1EF2h']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1EF3h']
jz ['short', 'loc_10F4']
cmp ['[ebp+arg_0],', '1E80h']
jl ['short', 'loc_1100']
cmp ['[ebp+arg_0],', '1E85h']
jg ['short', 'loc_1100']
mov ['[ebp+var_8],', '12h']
jmp ['loc_13D8']
cmp ['[ebp+arg_0],', '152h']
jz ['short', 'loc_1124']
cmp ['[ebp+arg_0],', '153h']
jz ['short', 'loc_1124']
cmp ['[ebp+arg_0],', '178h']
jz ['short', 'loc_1124']
cmp ['[ebp+arg_0],', '20ACh']
jnz ['short', 'loc_1130']
mov ['[ebp+var_8],', '13h']
jmp ['loc_13D8']
cmp ['[ebp+arg_0],', '0E01h']
jl ['short', 'loc_1142']
cmp ['[ebp+arg_0],', '0E3Ah']
jle ['short', 'loc_1154']
cmp ['[ebp+arg_0],', '0E3Fh']
jl ['short', 'loc_1160']
cmp ['[ebp+arg_0],', '0E5Bh']
jg ['short', 'loc_1160']
mov ['[ebp+var_8],', '0Fh']
jmp ['loc_13D8']
cmp ['[ebp+arg_0],', '100h']
jz ['loc_1272']
cmp ['[ebp+arg_0],', '101h']
jz ['loc_1272']
cmp ['[ebp+arg_0],', '112h']
jz ['loc_1272']
cmp ['[ebp+arg_0],', '113h']
jz ['loc_1272']
cmp ['[ebp+arg_0],', '116h']
jz ['loc_1272']
cmp ['[ebp+arg_0],', '117h']
jz ['loc_1272']
cmp ['[ebp+arg_0],', '122h']
jz ['loc_1272']
cmp ['[ebp+arg_0],', '123h']
jz ['loc_1272']
cmp ['[ebp+arg_0],', '128h']
jl ['short', 'loc_11DE']
cmp ['[ebp+arg_0],', '12Bh']
jle ['loc_1272']
cmp ['[ebp+arg_0],', '12Eh']
jz ['loc_1272']
cmp ['[ebp+arg_0],', '12Fh']
jz ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '136h']
jl ['short', 'loc_1206']
cmp ['[ebp+arg_0],', '138h']
jle ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '13Bh']
jz ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '13Ch']
jz ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '145h']
jz ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '146h']
jz ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '14Ah']
jl ['short', 'loc_123C']
cmp ['[ebp+arg_0],', '14Dh']
jle ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '156h']
jz ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '157h']
jz ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '166h']
jl ['short', 'loc_1260']
cmp ['[ebp+arg_0],', '16Bh']
jle ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '172h']
jz ['short', 'loc_1272']
cmp ['[ebp+arg_0],', '173h']
jnz ['short', 'loc_127E']
mov ['[ebp+var_8],', '0Eh']
jmp ['loc_13D8']
cmp ['[ebp+arg_0],', '2BCh']
jz ['short', 'loc_12AB']
cmp ['[ebp+arg_0],', '2BDh']
jz ['short', 'loc_12AB']
cmp ['[ebp+arg_0],', '384h']
jl ['short', 'loc_12A2']
cmp ['[ebp+arg_0],', '3CEh']
jle ['short', 'loc_12AB']
cmp ['[ebp+arg_0],', '2015h']
jnz ['short', 'loc_12B7']
mov ['[ebp+var_8],', '2']
jmp ['loc_13D8']
cmp ['[ebp+arg_0],', '60Ch']
jz ['short', 'loc_133E']
cmp ['[ebp+arg_0],', '61Bh']
jz ['short', 'loc_133E']
cmp ['[ebp+arg_0],', '61Fh']
jz ['short', 'loc_133E']
cmp ['[ebp+arg_0],', '621h']
jl ['short', 'loc_12E4']
cmp ['[ebp+arg_0],', '63Ah']
jle ['short', 'loc_133E']
cmp ['[ebp+arg_0],', '640h']
jl ['short', 'loc_12F6']
cmp ['[ebp+arg_0],', '652h']
jle ['short', 'loc_133E']
cmp ['[ebp+arg_0],', '660h']
jl ['short', 'loc_1308']
cmp ['[ebp+arg_0],', '66Dh']
jle ['short', 'loc_133E']
cmp ['[ebp+arg_0],', '200Bh']
jz ['short', 'loc_133E']
cmp ['[ebp+arg_0],', '0FE70h']
jl ['short', 'loc_1323']
cmp ['[ebp+arg_0],', '0FE72h']
jle ['short', 'loc_133E']
cmp ['[ebp+arg_0],', '0FE74h']
jz ['short', 'loc_133E']
cmp ['[ebp+arg_0],', '0FE76h']
jl ['short', 'loc_134A']
cmp ['[ebp+arg_0],', '0FEBEh']
jg ['short', 'loc_134A']
mov ['[ebp+var_8],', '3']
jmp ['loc_13D8']
cmp ['[ebp+arg_0],', '5D0h']
jl ['short', 'loc_135C']
cmp ['[ebp+arg_0],', '5EAh']
jle ['short', 'loc_136E']
cmp ['[ebp+arg_0],', '2017h']
jz ['short', 'loc_136E']
cmp ['[ebp+arg_0],', '203Eh']
jnz ['short', 'loc_1377']
mov ['[ebp+var_8],', '0Dh']
jmp ['short', 'loc_13D8']
cmp ['[ebp+arg_0],', '401h']
jl ['short', 'loc_1389']
cmp ['[ebp+arg_0],', '45Fh']
jle ['short', 'loc_1392']
cmp ['[ebp+arg_0],', '2116h']
jnz ['short', 'loc_139B']
mov ['[ebp+var_8],', '0Ch']
jmp ['short', 'loc_13D8']
cmp ['[ebp+arg_0],', '11Eh']
jz ['short', 'loc_13D1']
cmp ['[ebp+arg_0],', '11Fh']
jz ['short', 'loc_13D1']
cmp ['[ebp+arg_0],', '130h']
jz ['short', 'loc_13D1']
cmp ['[ebp+arg_0],', '131h']
jz ['short', 'loc_13D1']
cmp ['[ebp+arg_0],', '218h']
jl ['short', 'loc_13D8']
cmp ['[ebp+arg_0],', '21Bh']
jg ['short', 'loc_13D8']
mov ['[ebp+var_8],', '1']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_UConverter_toUnicode_CompoundText_OFFSETS proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '168h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_168]']
mov ['ecx,', '5Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_5C],', '0']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_68],', 'edx']
mov ['[ebp+var_74],', '0']
mov ['eax,', '[ebp+Src]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '1Ch']
jnb ['short', 'loc_145D']
mov ['eax,', '[ebp+Src]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+Size],', 'ecx']
jmp ['short', 'loc_1467']
mov ['[ebp+Size],', '1Ch']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ax,', 'word', 'ptr', '[ebp+Size]']
mov ['[ebp+Dst],', 'ax']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_1763']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['loc_1753']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+24h]']
test ['edx,', 'edx']
jle ['short', 'loc_14E4']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+25h]']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_14ED']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '1Bh']
jnz ['loc_15EA']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
mov ['edx,', '[ecx+4]']
movsx ['eax,', 'byte', 'ptr', '[edx+24h]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
mov ['edx,', '[ecx+4]']
add ['edx,', '25h']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_findStateFromEscSeq']
add ['esp,', '14h']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0Bh']
jnz ['short', 'loc_157B']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_156B']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+Src]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+24h]']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax]']
mov ['[ecx+edx+25h],', 'al']
mov ['ecx,', '[ebp+Src]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+24h]']
add ['al,', '1']
mov ['ecx,', '[ebp+Src]']
mov ['edx,', '[ecx+4]']
mov ['[edx+24h],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_152B']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['loc_1763']
jmp ['short', 'loc_15A6']
cmp ['[ebp+var_50],', '0FFFFFFFEh']
jnz ['short', 'loc_15A6']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+24h]']
test ['edx,', 'edx']
jnz ['short', 'loc_1598']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_1763']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jz ['short', 'loc_15B4']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
imul ['eax,', '5']
add ['eax,', 'offset', '_escSeqCompoundText']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+Src]']
mov ['edx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[edx+24h]']
sub ['eax,', 'ecx']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+4]']
mov ['byte', 'ptr', '[ecx+24h],', '0']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_1648']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_1643']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1Bh']
jnz ['short', 'loc_1605']
jmp ['short', 'loc_1643']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_1636']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '0FFh']
mov ['edx,', '[ebp+var_14]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_1641']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_1643']
jmp ['short', 'loc_15F0']
jmp ['loc_1751']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_1751']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_findNextEsc']
add ['esp,', '8']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_88],', 'eax']
mov ['eax,', '[ebp+var_94]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+var_94]']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ebp+var_68]']
mov ['ecx,', '[edx+ecx*4]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_ucnv_MBCSToUnicodeWithOffsets_56']
add ['esp,', '8']
mov ['eax,', '[ebp+var_94]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_90]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1751']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_174F']
mov ['eax,', '[ebp+var_94]']
movsx ['ecx,', 'byte', 'ptr', '[eax+41h]']
test ['ecx,', 'ecx']
jle ['short', 'loc_1733']
push ['1']
mov ['eax,', '[ebp+var_94]']
add ['eax,', '74h']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_94]']
movsx ['edx,', 'byte', 'ptr', '[ecx+41h]']
push ['edx']
mov ['eax,', '[ebp+var_94]']
add ['eax,', '74h']
push ['eax']
mov ['ecx,', '[ebp+Src]']
mov ['edx,', '[ecx+4]']
add ['edx,', '74h']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_94]']
mov ['al,', '[edx+41h]']
mov ['[ecx+41h],', 'al']
mov ['eax,', '[ebp+var_94]']
mov ['byte', 'ptr', '[eax+41h],', '0']
jmp ['short', 'loc_1763']
jmp ['short', 'loc_175E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_1763']
jmp ['loc_14AC']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+50h],', 'ecx']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '168h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN31']
dd ['offset', '$LN30']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_findNextEsc	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_17F9']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_1816']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1Bh']
jnz ['short', 'loc_1814']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_1819']
jmp ['short', 'loc_17F0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_findStateFromEscSeq proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0FFFFFFFEh']
mov ['[ebp+var_11],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_1861']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '14h']
jge ['loc_191F']
mov ['[ebp+var_11],', '1']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_1881']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '5']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', '_escSeqCompoundText[eax+ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_1910']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_18C4']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_20]']
imul ['edx,', '5']
mov ['eax,', '[ebp+var_2C]']
movzx ['edx,', '_escSeqCompoundText[edx+eax]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_18C2']
mov ['[ebp+var_11],', '0']
jmp ['short', 'loc_1910']
jmp ['short', 'loc_190B']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jb ['short', 'loc_18E3']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0Bh']
mov ['[ebp+var_11],', '0']
jmp ['short', 'loc_1910']
jmp ['short', 'loc_190B']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '5']
mov ['ecx,', '[ebp+var_2C]']
movzx ['eax,', '_escSeqCompoundText[eax+ecx]']
cmp ['edx,', 'eax']
jz ['short', 'loc_190B']
mov ['[ebp+var_11],', '0']
jmp ['short', 'loc_1910']
jmp ['loc_1878']
movsx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jz ['short', 'loc_191A']
jmp ['short', 'loc_191F']
jmp ['loc_1858']
movsx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jz ['short', 'loc_192D']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__CompoundText_GetUnicodeSet proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_1971']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '14h']
jge ['short', 'loc_1997']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_ucnv_MBCSGetUnicodeSetForUnicode_56']
add ['esp,', '10h']
jmp ['short', 'loc_1968']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['9']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Ah']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7Fh']
push ['20h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0FFh']
push ['0A0h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_ucnv_loadSharedData_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['___security_cookie:near']
extrn ['__RTC_CheckEsp:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_uprv_free_56:near']
extrn ['_ucnv_unloadSharedDataIfReady_56:near']
extrn ['_ucnv_MBCSFromUChar32_56:near']
extrn ['_ucnv_MBCSToUnicodeWithOffsets_56:near']
extrn ['_strlen:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_ucnv_MBCSGetUnicodeSetForUnicode_56:near']
end

endp
_ultag_isUnicodeLocaleKey_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_31B']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '2']
jnz ['short', 'loc_33C']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isAlphaNumericString']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_33C']
mov ['al,', '1']
jmp ['short', 'loc_33E']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isAlphaNumericString proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_38C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_3CF']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_isASCIILetter_56']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3CD']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jl ['short', 'loc_3C9']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jle ['short', 'loc_3CD']
xor ['al,', 'al']
jmp ['short', 'loc_3D1']
jmp ['short', 'loc_383']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_isUnicodeLocaleType_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_422']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+Str]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_43C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_4A7']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_460']
cmp ['[ebp+var_14],', '3']
jge ['short', 'loc_457']
xor ['al,', 'al']
jmp ['short', 'loc_4B0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_4A5']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_isASCIILetter_56']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_48C']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jl ['short', 'loc_4A1']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jg ['short', 'loc_4A1']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '8']
jle ['short', 'loc_49F']
xor ['al,', 'al']
jmp ['short', 'loc_4B0']
jmp ['short', 'loc_4A5']
xor ['al,', 'al']
jmp ['short', 'loc_4B0']
jmp ['short', 'loc_42A']
xor ['eax,', 'eax']
cmp ['[ebp+var_14],', '3']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uloc_toLanguageTag_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2A4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2A4]']
mov ['ecx,', '0A9h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_114],', '0']
mov ['[ebp+var_120],', '0']
mov ['[ebp+var_129],', '0']
mov ['byte', 'ptr', '[ebp+var_108],', '0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
test ['eax,', 'eax']
jbe ['short', 'loc_556']
lea ['eax,', '[ebp+var_120]']
push ['eax']
push ['100h']
lea ['ecx,', '[ebp+var_108]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_uloc_canonicalize_56']
add ['esp,', '10h']
cmp ['[ebp+var_120],', '0']
jz ['short', 'loc_556']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_8AA']
lea ['eax,', '[ebp+var_108]']
push ['eax']
call ['_locale_getKeywordsStart_56']
add ['esp,', '4']
mov ['[ebp+var_138],', 'eax']
mov ['eax,', '[ebp+var_138]']
lea ['ecx,', '[ebp+var_108]']
cmp ['eax,', 'ecx']
jnz ['loc_749']
mov ['[ebp+var_150],', '0']
mov ['[ebp+var_159],', '0']
lea ['eax,', '[ebp+var_120]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
push ['ecx']
call ['_uloc_openKeywords_56']
add ['esp,', '8']
mov ['[ebp+var_144],', 'eax']
cmp ['[ebp+var_144],', '0']
jz ['loc_749']
lea ['eax,', '[ebp+var_120]']
push ['eax']
mov ['ecx,', '[ebp+var_144]']
push ['ecx']
call ['_uenum_count_56']
add ['esp,', '8']
mov ['[ebp+var_150],', 'eax']
cmp ['[ebp+var_150],', '1']
jnz ['loc_724']
mov ['[ebp+var_174],', '0']
lea ['eax,', '[ebp+var_120]']
push ['eax']
lea ['ecx,', '[ebp+var_174]']
push ['ecx']
mov ['edx,', '[ebp+var_144]']
push ['edx']
call ['_uenum_next_56']
add ['esp,', '0Ch']
mov ['[ebp+var_168],', 'eax']
cmp ['[ebp+var_174],', '1']
jnz ['loc_724']
mov ['eax,', '[ebp+var_168]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '78h']
jnz ['loc_724']
mov ['[ebp+Src],', '78h']
mov ['[ebp+var_1DF],', '2Dh']
lea ['eax,', '[ebp+var_120]']
push ['eax']
push ['62h']
lea ['ecx,', '[ebp+var_1DE]']
push ['ecx']
mov ['edx,', '[ebp+var_168]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_uloc_getKeywordValue_56']
add ['esp,', '14h']
mov ['[ebp+var_174],', 'eax']
cmp ['[ebp+var_120],', '0']
jg ['loc_714']
mov ['eax,', '[ebp+var_174]']
push ['eax']
lea ['ecx,', '[ebp+var_1DE]']
push ['ecx']
call ['__isPrivateuseValueSubtags']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6FA']
mov ['eax,', '[ebp+var_174]']
add ['eax,', '2']
mov ['[ebp+var_114],', 'eax']
push ['1']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_114]']
push ['edx']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
lea ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_114]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_u_terminateChars_56']
add ['esp,', '10h']
mov ['[ebp+var_159],', '1']
jmp ['short', 'loc_712']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_712']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['[ebp+var_159],', '1']
jmp ['short', 'loc_724']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['[ebp+var_159],', '1']
mov ['eax,', '[ebp+var_144]']
push ['eax']
call ['_uenum_close_56']
add ['esp,', '4']
movsx ['eax,', '[ebp+var_159]']
test ['eax,', 'eax']
jz ['short', 'loc_749']
mov ['eax,', '[ebp+var_114]']
jmp ['loc_8AA']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
push ['ecx']
call ['__appendLanguageToLanguageTag']
add ['esp,', '14h']
add ['eax,', '[ebp+var_114]']
mov ['[ebp+var_114],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_114]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_114]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
push ['ecx']
call ['__appendScriptToLanguageTag']
add ['esp,', '14h']
add ['eax,', '[ebp+var_114]']
mov ['[ebp+var_114],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_114]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_114]']
push ['eax']
lea ['ecx,', '[ebp+var_108]']
push ['ecx']
call ['__appendRegionToLanguageTag']
add ['esp,', '14h']
add ['eax,', '[ebp+var_114]']
mov ['[ebp+var_114],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_129]']
push ['ecx']
movzx ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_114]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_114]']
push ['ecx']
lea ['edx,', '[ebp+var_108]']
push ['edx']
call ['__appendVariantsToLanguageTag']
add ['esp,', '18h']
add ['eax,', '[ebp+var_114]']
mov ['[ebp+var_114],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+var_129]']
push ['ecx']
movzx ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_114]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_114]']
push ['ecx']
lea ['edx,', '[ebp+var_108]']
push ['edx']
call ['__appendKeywordsToLanguageTag']
add ['esp,', '18h']
add ['eax,', '[ebp+var_114]']
mov ['[ebp+var_114],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+var_129]']
push ['ecx']
movzx ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_114]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_114]']
push ['ecx']
lea ['edx,', '[ebp+var_108]']
push ['edx']
call ['__appendPrivateuseToLanguageTag']
add ['esp,', '18h']
add ['eax,', '[ebp+var_114]']
mov ['[ebp+var_114],', 'eax']
mov ['eax,', '[ebp+var_114]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2A4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN20']
dd ['offset', '$LN15']
dd ['0FFFFFEE0h,', '4']
dd ['offset', '$LN16']
dd ['0FFFFFED7h,', '1']
dd ['offset', '$LN17']
dd ['0FFFFFE8Ch,', '4']
dd ['offset', '$LN18']
dd ['0FFFFFE20h,', '64h']
dd ['offset', '$LN19']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isPrivateuseValueSubtags proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Str]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_988']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+Str]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_9E6']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_9CF']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_9A8']
xor ['al,', 'al']
jmp ['short', 'loc_A03']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['__isPrivateuseValueSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_9C6']
xor ['al,', 'al']
jmp ['short', 'loc_A03']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_9DB']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_9DB']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_988']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_9F0']
xor ['al,', 'al']
jmp ['short', 'loc_A03']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['__isPrivateuseValueSubtag']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isPrivateuseValueSubtag proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_A4B']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '1']
jl ['short', 'loc_A72']
cmp ['[ebp+arg_4],', '8']
jg ['short', 'loc_A72']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isAlphaNumericString']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A72']
mov ['al,', '1']
jmp ['short', 'loc_A74']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__appendLanguageToLanguageTag proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_ACD']
xor ['eax,', 'eax']
jmp ['loc_C9A']
lea ['eax,', '[ebp+var_20]']
push ['eax']
push ['0Ch']
lea ['ecx,', '[ebp+Str1]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getLanguage_56']
add ['esp,', '10h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_20],', '0']
jg ['short', 'loc_AF2']
cmp ['[ebp+var_20],', '0FFFFFF84h']
jnz ['short', 'loc_B11']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_B0A']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_C9A']
mov ['[ebp+var_2C],', '0']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_B62']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_B54']
push ['1']
push ['offset', '_LANG_UND']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_44]']
push ['eax']
push ['3']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
push ['offset', '_LANG_UND']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '3']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_C7F']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['__isLanguageSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_BDC']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_B91']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_C9A']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_BCE']
push ['1']
push ['offset', '_LANG_UND']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_44]']
push ['eax']
push ['3']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
push ['offset', '_LANG_UND']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '3']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_C7F']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_BEE']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '6']
jge ['short', 'loc_C39']
mov ['eax,', '[ebp+var_38]']
lea ['ecx,', '_DEPRECATEDLANGS[eax*4]']
push ['ecx']
lea ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_C37']
mov ['eax,', '[ebp+var_38]']
lea ['ecx,', 'Source[eax*4]']
push ['ecx']
lea ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcpy']
add ['esp,', '8']
lea ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_C39']
jmp ['short', 'loc_BE5']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_C76']
push ['1']
lea ['eax,', '[ebp+Str1]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
lea ['eax,', '[ebp+Str1]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_terminateChars_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN21_0']
dd ['offset', '$LN19_0']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN20_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isLanguageSubtag proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_D2F']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '2']
jl ['short', 'loc_D56']
cmp ['[ebp+arg_4],', '8']
jg ['short', 'loc_D56']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isAlphaString']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_D56']
mov ['al,', '1']
jmp ['short', 'loc_D58']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isAlphaString	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_D9C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_DC3']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_isASCIILetter_56']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_DC1']
xor ['al,', 'al']
jmp ['short', 'loc_DC5']
jmp ['short', 'loc_D93']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__appendScriptToLanguageTag proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F8]']
mov ['ecx,', '3Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_34],', '0']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_E21']
xor ['eax,', 'eax']
jmp ['loc_F11']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
push ['6']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getScript_56']
add ['esp,', '10h']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_1C],', '0']
jg ['short', 'loc_E46']
cmp ['[ebp+var_1C],', '0FFFFFF84h']
jnz ['short', 'loc_E5E']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_E57']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_F11']
cmp ['[ebp+var_28],', '0']
jle ['loc_EF6']
mov ['eax,', '[ebp+var_28]']
push ['eax']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
call ['__isScriptSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_E96']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_E90']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_F11']
jmp ['short', 'loc_EF6']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_EA7']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_34]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '1']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_EED']
push ['1']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
lea ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '[ebp+var_28]']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_terminateChars_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_34]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN15_0']
dd ['offset', '$LN13']
dd ['0FFFFFFE4h,', '4']
dd ['offset', '$LN14']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isScriptSubtag proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_FA3']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '4']
jnz ['short', 'loc_FC4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isAlphaString']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_FC4']
mov ['al,', '1']
jmp ['short', 'loc_FC6']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__appendRegionToLanguageTag proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1017']
xor ['eax,', 'eax']
jmp ['loc_1107']
lea ['eax,', '[ebp+var_14]']
push ['eax']
push ['4']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getCountry_56']
add ['esp,', '10h']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_14],', '0']
jg ['short', 'loc_103C']
cmp ['[ebp+var_14],', '0FFFFFF84h']
jnz ['short', 'loc_1054']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_104D']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_1107']
cmp ['[ebp+var_20],', '0']
jle ['loc_10EC']
mov ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
call ['__isRegionSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_108C']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_1086']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_1107']
jmp ['short', 'loc_10EC']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_109D']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_2C]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_10E3']
push ['1']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
lea ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_terminateChars_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_2C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN15_1']
dd ['offset', '$LN13_0']
dd ['0FFFFFFECh,', '4']
dd ['offset', '$LN14_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isRegionSubtag proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_118F']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '2']
jnz ['short', 'loc_11B0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isAlphaString']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_11B0']
mov ['al,', '1']
jmp ['short', 'loc_11D3']
cmp ['[ebp+arg_4],', '3']
jnz ['short', 'loc_11D1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isNumericString']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_11D1']
mov ['al,', '1']
jmp ['short', 'loc_11D3']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isNumericString proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1218']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_1242']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jl ['short', 'loc_123C']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jle ['short', 'loc_1240']
xor ['al,', 'al']
jmp ['short', 'loc_1244']
jmp ['short', 'loc_120F']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__appendVariantsToLanguageTag proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1F0]']
mov ['ecx,', '7Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_B4],', '0']
mov ['[ebp+var_D8],', '0']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1297']
xor ['eax,', 'eax']
jmp ['loc_1670']
lea ['eax,', '[ebp+var_B4]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getVariant_56']
add ['esp,', '10h']
mov ['[ebp+var_C0],', 'eax']
cmp ['[ebp+var_B4],', '0']
jg ['short', 'loc_12CE']
cmp ['[ebp+var_B4],', '0FFFFFF84h']
jnz ['short', 'loc_12E6']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_12DF']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_1670']
cmp ['[ebp+var_C0],', '0']
jle ['loc_164F']
mov ['[ebp+var_F9],', '1']
mov ['[ebp+var_114],', '0']
mov ['[ebp+Str1],', '0']
lea ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_E4],', 'eax']
movsx ['eax,', '[ebp+var_F9]']
test ['eax,', 'eax']
jz ['loc_151A']
mov ['eax,', '[ebp+var_E4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jz ['short', 'loc_1356']
mov ['eax,', '[ebp+var_E4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Fh']
jz ['short', 'loc_1356']
mov ['eax,', '[ebp+var_E4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['loc_14F1']
mov ['eax,', '[ebp+var_E4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_136C']
mov ['[ebp+var_F9],', '0']
jmp ['short', 'loc_1375']
mov ['eax,', '[ebp+var_E4]']
mov ['byte', 'ptr', '[eax],', '0']
cmp ['[ebp+Str1],', '0']
jnz ['short', 'loc_1399']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_1394']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_151A']
jmp ['loc_14E5']
mov ['[ebp+var_CC],', '0']
jmp ['short', 'loc_13B4']
mov ['eax,', '[ebp+var_CC]']
add ['eax,', '1']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+Str1]']
add ['eax,', '[ebp+var_CC]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_13EF']
mov ['eax,', '[ebp+Str1]']
add ['eax,', '[ebp+var_CC]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_asciitolower_56']
add ['esp,', '4']
mov ['edx,', '[ebp+Str1]']
add ['edx,', '[ebp+var_CC]']
mov ['[edx],', 'al']
jmp ['short', 'loc_13A5']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['__isVariantSubtag']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_14B6']
push ['offset', '_POSIX_VALUE']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1438']
push ['offset', '_POSIX_VALUE']
call ['_strlen']
add ['esp,', '4']
cmp ['[ebp+var_C0],', 'eax']
jz ['short', 'loc_14AE']
push ['8']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_108],', 'eax']
cmp ['[ebp+var_108],', '0']
jnz ['short', 'loc_145F']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_151A']
mov ['eax,', '[ebp+var_108]']
mov ['ecx,', '[ebp+Str1]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_108]']
push ['eax']
lea ['ecx,', '[ebp+var_114]']
push ['ecx']
call ['__addVariantToList']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_14AC']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_14AC']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_151A']
jmp ['short', 'loc_14B4']
mov ['eax,', '[ebp+arg_10]']
mov ['byte', 'ptr', '[eax],', '1']
jmp ['short', 'loc_14E5']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_14CB']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_151A']
jmp ['short', 'loc_14E5']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['__isPrivateuseValueSubtag']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_14E5']
jmp ['short', 'loc_151A']
mov ['[ebp+Str1],', '0']
jmp ['short', 'loc_1506']
cmp ['[ebp+Str1],', '0']
jnz ['short', 'loc_1506']
mov ['eax,', '[ebp+var_E4]']
mov ['[ebp+Str1],', 'eax']
mov ['eax,', '[ebp+var_E4]']
add ['eax,', '1']
mov ['[ebp+var_E4],', 'eax']
jmp ['loc_131A']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['loc_1602']
cmp ['[ebp+var_114],', '0']
jz ['loc_1602']
mov ['eax,', '[ebp+var_114]']
mov ['[ebp+var_108],', 'eax']
cmp ['[ebp+var_108],', '0']
jz ['loc_1602']
mov ['eax,', '[ebp+var_D8]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_1563']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_D8]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['eax,', '[ebp+var_D8]']
add ['eax,', '1']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+var_108]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_120],', 'eax']
mov ['eax,', '[ebp+var_D8]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_15DC']
push ['1']
mov ['eax,', '[ebp+var_108]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_D8]']
push ['edx']
mov ['eax,', '[ebp+var_120]']
push ['eax']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_108]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_D8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_D8]']
add ['eax,', '[ebp+var_120]']
mov ['[ebp+var_D8],', 'eax']
mov ['eax,', '[ebp+var_108]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_108],', 'ecx']
jmp ['loc_153F']
mov ['eax,', '[ebp+var_114]']
mov ['[ebp+var_108],', 'eax']
cmp ['[ebp+var_108],', '0']
jz ['short', 'loc_1643']
mov ['eax,', '[ebp+var_108]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_12C],', 'ecx']
mov ['eax,', '[ebp+var_108]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_12C]']
mov ['[ebp+var_108],', 'eax']
jmp ['short', 'loc_160E']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_164F']
xor ['eax,', 'eax']
jmp ['short', 'loc_1670']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_D8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_terminateChars_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_D8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN46']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN45']
dd ['offset', '$LN42']
dd ['0FFFFFF4Ch,', '4']
dd ['offset', '$LN43']
dd ['0FFFFFEECh,', '4']
dd ['offset', '$LN44']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isVariantSubtag proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_1717']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '5']
jl ['short', 'loc_173E']
cmp ['[ebp+arg_4],', '8']
jg ['short', 'loc_173E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isAlphaNumericString']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_173E']
mov ['al,', '1']
jmp ['short', 'loc_1778']
cmp ['[ebp+arg_4],', '4']
jnz ['short', 'loc_1776']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jl ['short', 'loc_1776']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '39h']
jg ['short', 'loc_1776']
push ['3']
mov ['eax,', '[ebp+Str]']
add ['eax,', '1']
push ['eax']
call ['__isAlphaNumericString']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1776']
mov ['al,', '1']
jmp ['short', 'loc_1778']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__addVariantToList proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_17CA']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_1831']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_1831']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_17FD']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
jmp ['short', 'loc_1831']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_1820']
mov ['[ebp+var_5],', '0']
jmp ['short', 'loc_1831']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_17D9']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__appendKeywordsToLanguageTag proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '328h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_328]']
mov ['ecx,', '0CAh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+Source],', '0']
push ['63h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_E4],', '0']
mov ['[ebp+var_ED],', '0']
mov ['[ebp+var_FC],', '0']
mov ['[ebp+var_108],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_uloc_openKeywords_56']
add ['esp,', '8']
mov ['[ebp+var_FC],', 'eax']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_18EB']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jnz ['short', 'loc_18EB']
mov ['eax,', '[ebp+var_FC]']
push ['eax']
call ['_uenum_close_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_231F']
cmp ['[ebp+var_FC],', '0']
jnz ['short', 'loc_1900']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['loc_2304']
mov ['[ebp+var_12C],', '0']
mov ['[ebp+var_144],', '0']
lea ['eax,', '[ebp+var_1C8]']
mov ['[ebp+var_1D4],', 'eax']
mov ['[ebp+var_1E0],', '64h']
mov ['[ebp+var_204],', '0']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['loc_1EB3']
mov ['[ebp+var_ED],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_FC]']
push ['ecx']
call ['_uenum_next_56']
add ['esp,', '0Ch']
mov ['[ebp+Str],', 'eax']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_1971']
jmp ['loc_1EB3']
lea ['eax,', '[ebp+var_204]']
push ['eax']
push ['64h']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uloc_getKeywordValue_56']
add ['esp,', '14h']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+var_204],', '0']
jg ['short', 'loc_19A9']
cmp ['[ebp+var_204],', '0FFFFFF84h']
jnz ['short', 'loc_19CE']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_19BF']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1EB3']
mov ['[ebp+var_204],', '0']
jmp ['loc_1934']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_210],', 'eax']
xor ['eax,', 'eax']
cmp ['[ebp+var_210],', '1']
setnle ['al']
mov ['[ebp+var_219],', 'al']
push ['offset', '_LOCALE_ATTRIBUTE_KEY']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_1BAB']
mov ['[ebp+var_ED],', '1']
cmp ['[ebp+Size],', '0']
jle ['loc_1BA6']
mov ['[ebp+var_228],', '0']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['loc_1BA6']
mov ['[ebp+var_E4],', '0']
jmp ['short', 'loc_1A57']
mov ['eax,', '[ebp+var_228]']
add ['eax,', '1']
mov ['[ebp+var_228],', 'eax']
mov ['eax,', '[ebp+var_228]']
cmp ['eax,', '[ebp+Size]']
jge ['short', 'loc_1AB0']
mov ['eax,', '[ebp+var_228]']
movsx ['ecx,', '[ebp+eax+Src]']
cmp ['ecx,', '2Dh']
jz ['short', 'loc_1A9D']
mov ['eax,', '[ebp+var_E4]']
mov ['ecx,', '[ebp+var_228]']
mov ['dl,', '[ebp+ecx+Src]']
mov ['[ebp+eax+Source],', 'dl']
mov ['eax,', '[ebp+var_E4]']
add ['eax,', '1']
mov ['[ebp+var_E4],', 'eax']
jmp ['short', 'loc_1AAE']
mov ['eax,', '[ebp+var_228]']
add ['eax,', '1']
mov ['[ebp+var_228],', 'eax']
jmp ['short', 'loc_1AB0']
jmp ['short', 'loc_1A48']
cmp ['[ebp+var_E4],', '0']
jle ['short', 'loc_1AC9']
mov ['eax,', '[ebp+var_E4]']
mov ['[ebp+eax+Source],', '0']
jmp ['short', 'loc_1ADC']
mov ['eax,', '[ebp+var_228]']
cmp ['eax,', '[ebp+Size]']
jl ['short', 'loc_1ADC']
jmp ['loc_1BA6']
push ['8']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_150],', 'eax']
cmp ['[ebp+var_150],', '0']
jnz ['short', 'loc_1B03']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_1BA6']
mov ['eax,', '[ebp+var_E4]']
add ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dest],', 'eax']
cmp ['[ebp+Dest],', '0']
jnz ['short', 'loc_1B2F']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_1BA6']
lea ['eax,', '[ebp+Source]']
push ['eax']
mov ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[ebp+Dest]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_150]']
push ['eax']
lea ['ecx,', '[ebp+var_144]']
push ['ecx']
call ['__addAttributeToList']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1BA1']
mov ['eax,', '[ebp+var_150]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_1BA1']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_1BA6']
jmp ['loc_1A2F']
jmp ['loc_1E1D']
movsx ['eax,', '[ebp+var_219]']
test ['eax,', 'eax']
jz ['loc_1CE4']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_uloc_toUnicodeLocaleKey_56']
add ['esp,', '4']
mov ['[ebp+var_1EC],', 'eax']
cmp ['[ebp+var_1EC],', '0']
jnz ['short', 'loc_1BF3']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_1BEE']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1EB3']
jmp ['loc_1934']
lea ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_uloc_toUnicodeLocaleType_56']
add ['esp,', '8']
mov ['[ebp+var_1F8],', 'eax']
cmp ['[ebp+var_1F8],', '0']
jnz ['short', 'loc_1C30']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_1C2B']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1EB3']
jmp ['loc_1934']
mov ['eax,', '[ebp+var_1F8]']
lea ['ecx,', '[ebp+Src]']
cmp ['eax,', 'ecx']
jnz ['loc_1CDF']
mov ['eax,', '[ebp+var_1F8]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_234],', 'eax']
mov ['eax,', '[ebp+var_234]']
cmp ['eax,', '[ebp+var_1E0]']
jge ['short', 'loc_1CC4']
mov ['eax,', '[ebp+var_1F8]']
push ['eax']
mov ['ecx,', '[ebp+var_1D4]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_1D4]']
push ['eax']
call ['_T_CString_toLowerCase_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1D4]']
mov ['[ebp+var_1F8],', 'eax']
mov ['eax,', '[ebp+var_234]']
mov ['ecx,', '[ebp+var_1D4]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_1D4],', 'edx']
mov ['eax,', '[ebp+var_234]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_1E0]']
sub ['ecx,', 'eax']
mov ['[ebp+var_1E0],', 'ecx']
jmp ['short', 'loc_1CDF']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_1CDA']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1EB3']
jmp ['loc_1934']
jmp ['loc_1E1D']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '78h']
jnz ['short', 'loc_1D29']
mov ['eax,', '[ebp+Size]']
push ['eax']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
call ['__isPrivateuseValueSubtags']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1D27']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_1D22']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1EB3']
jmp ['loc_1934']
jmp ['short', 'loc_1D7B']
mov ['eax,', '[ebp+var_210]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isExtensionSingleton']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1D60']
mov ['eax,', '[ebp+Size]']
push ['eax']
lea ['ecx,', '[ebp+Src]']
push ['ecx']
call ['__isExtensionSubtags']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1D7B']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_1D76']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1EB3']
jmp ['loc_1934']
mov ['eax,', '[ebp+Str]']
mov ['[ebp+var_1EC],', 'eax']
mov ['eax,', '[ebp+Size]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_1E0]']
jge ['short', 'loc_1E0F']
push ['1']
lea ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
lea ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_1D4]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_1D4]']
mov ['[ebp+var_1F8],', 'eax']
mov ['eax,', '[ebp+var_1D4]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+var_1D4],', 'eax']
mov ['eax,', '[ebp+var_1D4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_1D4]']
add ['eax,', '1']
mov ['[ebp+var_1D4],', 'eax']
mov ['eax,', '[ebp+Size]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_1E0]']
sub ['ecx,', 'eax']
mov ['[ebp+var_1E0],', 'ecx']
jmp ['short', 'loc_1E1D']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1EB3']
movsx ['eax,', '[ebp+var_ED]']
test ['eax,', 'eax']
jnz ['loc_1EAE']
push ['0Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_138],', 'eax']
cmp ['[ebp+var_138],', '0']
jnz ['short', 'loc_1E50']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_1EB3']
mov ['eax,', '[ebp+var_138]']
mov ['ecx,', '[ebp+var_1EC]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_138]']
mov ['ecx,', '[ebp+var_1F8]']
mov ['[eax+4],', 'ecx']
push ['1']
mov ['eax,', '[ebp+var_138]']
push ['eax']
lea ['ecx,', '[ebp+var_12C]']
push ['ecx']
call ['__addExtensionToList']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1EAE']
mov ['eax,', '[ebp+var_138]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_1EAE']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_1EB3']
jmp ['loc_1934']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_1F29']
push ['0Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_138],', 'eax']
cmp ['[ebp+var_138],', '0']
jnz ['short', 'loc_1EE2']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$cleanup$11118']
mov ['eax,', '[ebp+var_138]']
mov ['dword', 'ptr', '[eax],', 'offset', '_POSIX_KEY']
mov ['eax,', '[ebp+var_138]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '_POSIX_VALUE']
push ['1']
mov ['eax,', '[ebp+var_138]']
push ['eax']
lea ['ecx,', '[ebp+var_12C]']
push ['ecx']
call ['__addExtensionToList']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1F29']
mov ['eax,', '[ebp+var_138]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['$cleanup$11118']
cmp ['[ebp+var_12C],', '0']
jnz ['short', 'loc_1F4B']
cmp ['[ebp+var_144],', '0']
jz ['$cleanup$11118']
mov ['[ebp+var_23D],', '0']
mov ['eax,', '[ebp+var_144]']
mov ['[ebp+var_150],', 'eax']
mov ['eax,', '[ebp+var_12C]']
mov ['[ebp+var_138],', 'eax']
movsx ['eax,', '[ebp+var_23D]']
test ['eax,', 'eax']
jnz ['short', 'loc_1FE7']
cmp ['[ebp+var_138],', '0']
jz ['short', 'loc_1FE7']
mov ['eax,', '[ebp+var_138]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
cmp ['eax,', '1']
jbe ['short', 'loc_1FE7']
mov ['eax,', '[ebp+var_108]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_1FAB']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_108]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['eax,', '[ebp+var_108]']
add ['eax,', '1']
mov ['[ebp+var_108],', 'eax']
mov ['eax,', '[ebp+var_108]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_1FD1']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_108]']
mov ['byte', 'ptr', '[eax],', '75h']
mov ['eax,', '[ebp+var_108]']
add ['eax,', '1']
mov ['[ebp+var_108],', 'eax']
mov ['[ebp+var_23D],', '1']
cmp ['[ebp+var_138],', '0']
jz ['loc_2172']
mov ['eax,', '[ebp+var_138]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
cmp ['eax,', '1']
jz ['short', 'loc_2017']
cmp ['[ebp+var_150],', '0']
jnz ['loc_2172']
mov ['eax,', '[ebp+var_108]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_202E']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_108]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['eax,', '[ebp+var_108]']
add ['eax,', '1']
mov ['[ebp+var_108],', 'eax']
mov ['eax,', '[ebp+var_138]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+var_108]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_20A7']
push ['1']
mov ['eax,', '[ebp+var_138]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_108]']
push ['edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_138]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_108]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_108]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+var_108],', 'eax']
mov ['eax,', '[ebp+var_108]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_20D0']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_108]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['eax,', '[ebp+var_108]']
add ['eax,', '1']
mov ['[ebp+var_108],', 'eax']
mov ['eax,', '[ebp+var_138]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+var_108]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_214C']
push ['1']
mov ['eax,', '[ebp+var_138]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_108]']
push ['edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_138]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_108]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_108]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+var_108],', 'eax']
mov ['eax,', '[ebp+var_138]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_138],', 'ecx']
jmp ['loc_2230']
cmp ['[ebp+var_150],', '0']
jz ['loc_2230']
mov ['eax,', '[ebp+var_108]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2196']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_108]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['eax,', '[ebp+var_108]']
add ['eax,', '1']
mov ['[ebp+var_108],', 'eax']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+var_108]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_220F']
push ['1']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_108]']
push ['edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_150]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_108]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_108]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+var_108],', 'eax']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_150],', 'ecx']
cmp ['[ebp+var_150],', '0']
jnz ['loc_1F6A']
cmp ['[ebp+var_138],', '0']
jnz ['loc_1F6A']
mov ['eax,', '[ebp+var_12C]']
mov ['[ebp+var_138],', 'eax']
cmp ['[ebp+var_138],', '0']
jz ['short', 'loc_228B']
mov ['eax,', '[ebp+var_138]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_24C],', 'ecx']
mov ['eax,', '[ebp+var_138]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_24C]']
mov ['[ebp+var_138],', 'eax']
jmp ['short', 'loc_2256']
mov ['eax,', '[ebp+var_144]']
mov ['[ebp+var_150],', 'eax']
cmp ['[ebp+var_150],', '0']
jz ['short', 'loc_22E9']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_258],', 'ecx']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_264],', 'ecx']
mov ['eax,', '[ebp+var_264]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_150]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_258]']
mov ['[ebp+var_150],', 'eax']
jmp ['short', 'loc_2297']
mov ['eax,', '[ebp+var_FC]']
push ['eax']
call ['_uenum_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_2304']
xor ['eax,', 'eax']
jmp ['short', 'loc_231F']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_108]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_terminateChars_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN92']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '328h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN91']
dd ['offset', '$LN85']
dd ['0FFFFFF28h,', '64h']
dd ['offset', '$LN86']
dd ['0FFFFFED4h,', '4']
dd ['offset', '$LN87']
dd ['0FFFFFEBCh,', '4']
dd ['offset', '$LN88']
dd ['0FFFFFE38h,', '64h']
dd ['offset', '$LN89']
dd ['0FFFFFDFCh,', '4']
dd ['offset', '$LN90']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isExtensionSingleton proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2403']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_243A']
mov ['eax,', '[ebp+Str]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_isASCIILetter_56']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_243A']
mov ['eax,', '[ebp+Str]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_asciitolower_56']
add ['esp,', '4']
movsx ['edx,', 'al']
cmp ['edx,', '78h']
jz ['short', 'loc_243A']
mov ['al,', '1']
jmp ['short', 'loc_243C']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isExtensionSubtags proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Str]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2490']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+Str]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_24EE']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_24D7']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_24B0']
xor ['al,', 'al']
jmp ['short', 'loc_250B']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['__isExtensionSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_24CE']
xor ['al,', 'al']
jmp ['short', 'loc_250B']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_24E3']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_24E3']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2490']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_24F8']
xor ['al,', 'al']
jmp ['short', 'loc_250B']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['__isExtensionSubtag']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isExtensionSubtag proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2553']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '2']
jl ['short', 'loc_257A']
cmp ['[ebp+arg_4],', '8']
jg ['short', 'loc_257A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isAlphaNumericString']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_257A']
mov ['al,', '1']
jmp ['short', 'loc_257C']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__addAttributeToList proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_25D1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
jmp ['loc_2665']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_2665']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_2604']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+4],', '0']
jmp ['short', 'loc_2665']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jge ['short', 'loc_2645']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2631']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_263A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+4],', 'ecx']
jmp ['short', 'loc_2665']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_2651']
mov ['[ebp+var_5],', '0']
jmp ['short', 'loc_2665']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
jmp ['loc_25E0']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__addExtensionToList proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_26BD']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
jmp ['loc_283B']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['loc_283B']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_26F7']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
jmp ['loc_283B']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_27DA']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_38],', '1']
jnz ['short', 'loc_2791']
cmp ['[ebp+var_44],', '1']
jnz ['short', 'loc_2791']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
movsx ['eax,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', 'eax']
jnz ['short', 'loc_274E']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_278F']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '78h']
jnz ['short', 'loc_2764']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_278F']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '78h']
jnz ['short', 'loc_277A']
mov ['[ebp+var_2C],', '0FFFFFFFFh']
jmp ['short', 'loc_278F']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
movsx ['eax,', 'byte', 'ptr', '[ecx]']
sub ['edx,', 'eax']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_27D8']
cmp ['[ebp+var_38],', '1']
jnz ['short', 'loc_27A7']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
sub ['edx,', '75h']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_27D8']
cmp ['[ebp+var_44],', '1']
jnz ['short', 'loc_27C1']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '75h']
sub ['eax,', 'edx']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_27D8']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_27F1']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jge ['short', 'loc_281B']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2807']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_2810']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
jmp ['short', 'loc_283B']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_2827']
mov ['[ebp+var_5],', '0']
jmp ['short', 'loc_283B']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
jmp ['loc_26CC']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__appendPrivateuseToLanguageTag	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '280h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_280]']
mov ['ecx,', '0A0h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_15C],', '0']
mov ['[ebp+var_180],', '0']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_289F']
xor ['eax,', 'eax']
jmp ['loc_2CC5']
lea ['eax,', '[ebp+var_15C]']
push ['eax']
push ['9Dh']
lea ['ecx,', '[ebp+var_A8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_uloc_getVariant_56']
add ['esp,', '10h']
mov ['[ebp+var_168],', 'eax']
cmp ['[ebp+var_15C],', '0']
jg ['short', 'loc_28D6']
cmp ['[ebp+var_15C],', '0FFFFFF84h']
jnz ['short', 'loc_28EE']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_28E7']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_2CC5']
cmp ['[ebp+var_168],', '0']
jle ['loc_2C47']
mov ['[ebp+var_1A1],', '1']
mov ['[ebp+var_1AD],', '1']
mov ['[ebp+Str],', '0']
lea ['eax,', '[ebp+var_A8]']
mov ['[ebp+var_18C],', 'eax']
movsx ['eax,', '[ebp+var_1A1]']
test ['eax,', 'eax']
jz ['loc_2C3B']
mov ['[ebp+var_1B9],', '0']
mov ['eax,', '[ebp+var_18C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jz ['short', 'loc_2962']
mov ['eax,', '[ebp+var_18C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Fh']
jz ['short', 'loc_2962']
mov ['eax,', '[ebp+var_18C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['loc_2C12']
mov ['eax,', '[ebp+var_18C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2978']
mov ['[ebp+var_1A1],', '0']
jmp ['short', 'loc_2981']
mov ['eax,', '[ebp+var_18C]']
mov ['byte', 'ptr', '[eax],', '0']
cmp ['[ebp+Str],', '0']
jz ['loc_2C06']
mov ['[ebp+var_174],', '0']
jmp ['short', 'loc_29A9']
mov ['eax,', '[ebp+var_174]']
add ['eax,', '1']
mov ['[ebp+var_174],', 'eax']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_174]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_29E4']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_174]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_asciitolower_56']
add ['esp,', '4']
mov ['edx,', '[ebp+Str]']
add ['edx,', '[ebp+var_174]']
mov ['[edx],', 'al']
jmp ['short', 'loc_299A']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['__isPrivateuseValueSubtag']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2A31']
movsx ['eax,', '[ebp+var_1AD]']
test ['eax,', 'eax']
jz ['short', 'loc_2A28']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['__isVariantSubtag']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2A26']
mov ['[ebp+var_1B9],', '1']
jmp ['short', 'loc_2A2F']
mov ['[ebp+var_1B9],', '1']
jmp ['short', 'loc_2A4E']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_2A49']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_2C3B']
jmp ['short', 'loc_2A4E']
jmp ['loc_2C3B']
movsx ['eax,', '[ebp+var_1B9]']
test ['eax,', 'eax']
jz ['loc_2C06']
mov ['eax,', '[ebp+var_180]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2A85']
mov ['eax,', '[ebp+var_180]']
mov ['[ebp+eax+Dst],', '2Dh']
mov ['ecx,', '[ebp+var_180]']
add ['ecx,', '1']
mov ['[ebp+var_180],', 'ecx']
movsx ['eax,', '[ebp+var_1AD]']
test ['eax,', 'eax']
jz ['loc_2B8C']
mov ['eax,', '[ebp+var_180]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2AC1']
mov ['eax,', '[ebp+var_180]']
mov ['cl,', 'ds:_PRIVATEUSE_KEY']
mov ['[ebp+eax+Dst],', 'cl']
mov ['edx,', '[ebp+var_180]']
add ['edx,', '1']
mov ['[ebp+var_180],', 'edx']
mov ['eax,', '[ebp+var_180]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2AE9']
mov ['eax,', '[ebp+var_180]']
mov ['[ebp+eax+Dst],', '2Dh']
mov ['ecx,', '[ebp+var_180]']
add ['ecx,', '1']
mov ['[ebp+var_180],', 'ecx']
push ['offset', '_PRIVUSE_VARIANT_PREFIX']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_168],', 'eax']
mov ['eax,', '[ebp+var_180]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2B4B']
push ['1']
push ['offset', '_PRIVUSE_VARIANT_PREFIX']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_180]']
push ['eax']
mov ['ecx,', '[ebp+var_168]']
push ['ecx']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
push ['offset', '_PRIVUSE_VARIANT_PREFIX']
mov ['edx,', '[ebp+var_180]']
lea ['eax,', '[ebp+edx+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_180]']
add ['eax,', '[ebp+var_168]']
mov ['[ebp+var_180],', 'eax']
mov ['eax,', '[ebp+var_180]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2B85']
mov ['eax,', '[ebp+var_180]']
mov ['[ebp+eax+Dst],', '2Dh']
mov ['ecx,', '[ebp+var_180]']
add ['ecx,', '1']
mov ['[ebp+var_180],', 'ecx']
mov ['[ebp+var_1AD],', '0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_168],', 'eax']
mov ['eax,', '[ebp+var_180]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2BF4']
push ['1']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_180]']
push ['ecx']
mov ['edx,', '[ebp+var_168]']
push ['edx']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_180]']
lea ['edx,', '[ebp+ecx+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_180]']
add ['eax,', '[ebp+var_168]']
mov ['[ebp+var_180],', 'eax']
mov ['[ebp+Str],', '0']
jmp ['short', 'loc_2C27']
cmp ['[ebp+Str],', '0']
jnz ['short', 'loc_2C27']
mov ['eax,', '[ebp+var_18C]']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+var_18C]']
add ['eax,', '1']
mov ['[ebp+var_18C],', 'eax']
jmp ['loc_291F']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_2C47']
xor ['eax,', 'eax']
jmp ['short', 'loc_2CC5']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_2CA4']
mov ['eax,', '[ebp+var_180]']
mov ['[ebp+var_168],', 'eax']
mov ['eax,', '[ebp+var_180]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2CA4']
push ['1']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_180]']
push ['ecx']
mov ['edx,', '[ebp+var_168]']
push ['edx']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
lea ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_180]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_terminateChars_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_180]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN42_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '280h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN41']
dd ['offset', '$LN38']
dd ['0FFFFFEB0h,', '9Dh']
dd ['offset', '$LN39']
dd ['0FFFFFEA4h,', '4']
dd ['offset', '$LN40']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uloc_forLanguageTag_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_59],', '1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['0FFFFFFFFh']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_ultag_parse']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_2D89']
xor ['eax,', 'eax']
jmp ['loc_30F2']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ultag_getExtlangSize']
add ['esp,', '4']
test ['eax,', 'eax']
jle ['short', 'loc_2DAF']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ultag_getExtlang']
add ['esp,', '8']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_2DC1']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ultag_getLanguage']
add ['esp,', '4']
mov ['[ebp+var_124],', 'eax']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+Str1],', 'eax']
push ['offset', '_LANG_UND']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2E37']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_2E37']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2E2E']
push ['1']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
mov ['eax,', '[ebp+Str1]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ultag_getScript']
add ['esp,', '4']
mov ['[ebp+Str1],', 'eax']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_2ECF']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2E6C']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '5Fh']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+Str1]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2ECF']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2EBB']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+Str1]']
jnz ['short', 'loc_2EAE']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_toupper_56']
add ['esp,', '4']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+var_14]']
mov ['[edx],', 'al']
jmp ['short', 'loc_2EBB']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_2E7B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ultag_getRegion']
add ['esp,', '4']
mov ['[ebp+Str1],', 'eax']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_2F54']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2F04']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '5Fh']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+Str1]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2F50']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2F3C']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_toupper_56']
add ['esp,', '4']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+var_14]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_2F13']
mov ['[ebp+var_59],', '0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ultag_getVariantsSize']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jle ['loc_301E']
movsx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jz ['short', 'loc_2F8F']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2F86']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '5Fh']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_2FA1']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_301E']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ultag_getVariant']
add ['esp,', '8']
mov ['[ebp+Str1],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2FCD']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '5Fh']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+Str1]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3019']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_3005']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_toupper_56']
add ['esp,', '4']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+var_14]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_2FDC']
jmp ['loc_2F98']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ultag_getExtensionsSize']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ultag_getPrivateUse']
add ['esp,', '4']
mov ['[ebp+Str1],', 'eax']
cmp ['[ebp+var_50],', '0']
jg ['short', 'loc_3052']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
test ['eax,', 'eax']
jbe ['short', 'loc_30CE']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_30A4']
cmp ['[ebp+var_50],', '0']
jle ['short', 'loc_30A4']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_309B']
push ['1']
push ['offset', '_LANG_UND']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_14]']
push ['eax']
push ['3']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
push ['offset', '_LANG_UND']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '3']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['__appendKeywords']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ultag_close']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_u_terminateChars_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__appendKeywords proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '15Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_15C]']
mov ['ecx,', '57h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_68],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_7D],', '0']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_3154']
xor ['eax,', 'eax']
jmp ['loc_3507']
mov ['eax,', '[ebp+var_74]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jnz ['short', 'loc_3179']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_3507']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ultag_getVariantsSize']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_318D']
mov ['[ebp+var_7D],', '1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ultag_getExtensionsSize']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_31AE']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_327B']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ultag_getExtensionKey']
add ['esp,', '8']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ultag_getExtensionValue']
add ['esp,', '8']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+var_50]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '75h']
jnz ['short', 'loc_3217']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_7D]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['eax,', '[ebp+var_68]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['__appendLDMLExtensionAsKeywords']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_3215']
jmp ['short', 'loc_327B']
jmp ['short', 'loc_3276']
push ['0Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_3235']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_327B']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+Str]']
mov ['[eax+4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+var_44]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['__addExtensionToList']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3276']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_327B']
jmp ['loc_31A5']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_3300']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ultag_getPrivateUse']
add ['esp,', '4']
mov ['[ebp+Str],', 'eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
test ['eax,', 'eax']
jle ['short', 'loc_3300']
push ['0Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jnz ['short', 'loc_32C0']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_3300']
mov ['eax,', '[ebp+var_44]']
mov ['dword', 'ptr', '[eax],', 'offset', '_PRIVATEUSE_KEY']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+Str]']
mov ['[eax+4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+var_44]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['__addExtensionToList']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3300']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_3368']
movsx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jz ['short', 'loc_3368']
push ['offset', '__POSIX']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_335F']
push ['1']
push ['offset', '__POSIX']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
push ['offset', '__POSIX']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_8]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['loc_34A8']
cmp ['[ebp+var_38],', '0']
jz ['loc_34A8']
mov ['[ebp+var_89],', '1']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_33B9']
movsx ['eax,', '[ebp+var_89]']
test ['eax,', 'eax']
jz ['short', 'loc_33B0']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '40h']
mov ['[ebp+var_89],', '0']
jmp ['short', 'loc_33B9']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '3Bh']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_3414']
push ['1']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_342E']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '3Dh']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_348C']
push ['1']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_44],', 'ecx']
cmp ['[ebp+var_44],', '0']
jnz ['loc_338B']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_34D7']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_98],', 'ecx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_34AE']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_34EF']
xor ['eax,', 'eax']
jmp ['short', 'loc_3507']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_u_terminateChars_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN37']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '15Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN36']
dd ['offset', '$LN34']
dd ['0FFFFFF83h,', '1']
dd ['offset', '$LN35']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__appendLDMLExtensionAsKeywords	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2D8]']
mov ['ecx,', '0B6h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['cl,', '[eax]']
mov ['[ebp+var_21],', 'cl']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_54],', '0']
mov ['[ebp+var_84],', '0']
mov ['[ebp+var_FC],', '0']
mov ['eax,', '[ebp+arg_10]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+Src],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+Src]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_371D']
mov ['[ebp+Size],', '0']
jmp ['short', 'loc_35E9']
mov ['eax,', '[ebp+Size]']
add ['eax,', '1']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Size]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3606']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Size]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jz ['short', 'loc_3606']
jmp ['short', 'loc_35E0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['_ultag_isUnicodeLocaleKey_56']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3628']
mov ['eax,', '[ebp+Src]']
mov ['[ebp+var_18],', 'eax']
jmp ['loc_371D']
push ['8']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jnz ['short', 'loc_3649']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$cleanup$11201']
mov ['eax,', '64h']
sub ['eax,', '[ebp+var_FC]']
cmp ['[ebp+Size],', 'eax']
jge ['short', 'loc_36BD']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_FC]']
lea ['ecx,', '[ebp+eax+Dst]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_FC]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+eax+Dst],', '0']
mov ['eax,', '[ebp+var_FC]']
lea ['ecx,', '[ebp+eax+Dst]']
mov ['edx,', '[ebp+var_60]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+var_FC]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_FC],', 'edx']
jmp ['short', 'loc_36CB']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['$cleanup$11201']
mov ['eax,', '[ebp+var_60]']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
call ['__addAttributeToList']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_36FC']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_60]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
jmp ['$cleanup$11201']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+Src]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3718']
mov ['eax,', '[ebp+Src]']
add ['eax,', '1']
mov ['[ebp+Src],', 'eax']
jmp ['loc_35C9']
cmp ['[ebp+var_54],', '0']
jz ['loc_3884']
mov ['eax,', '[ebp+var_FC]']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_3740']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['$cleanup$11201']
push ['0Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_3761']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$cleanup$11201']
mov ['eax,', '[ebp+var_3C]']
mov ['dword', 'ptr', '[eax],', 'offset', '_LOCALE_ATTRIBUTE_KEY']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jz ['loc_3806']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_6C],', 'ecx']
mov ['eax,', '[ebp+var_60]']
cmp ['eax,', '[ebp+var_54]']
jz ['short', 'loc_37AF']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '1']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Size],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '[ebp+var_84]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_60],', 'eax']
jmp ['loc_3779']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '1']
mov ['[ebp+var_84],', 'eax']
push ['0']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['__addExtensionToList']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3854']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
jmp ['$cleanup$11201']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_387D']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_6C],', 'ecx']
mov ['eax,', '[ebp+var_60]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_385A']
mov ['[ebp+var_54],', '0']
cmp ['[ebp+var_18],', '0']
jz ['loc_3DF2']
mov ['[ebp+Source],', '0']
mov ['[ebp+var_114],', '0']
mov ['[ebp+Count],', '0']
mov ['[ebp+var_12C],', '0']
mov ['[ebp+var_135],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+Src],', 'eax']
movsx ['eax,', '[ebp+var_135]']
test ['eax,', 'eax']
jnz ['loc_3DF2']
mov ['[ebp+var_144],', '0']
mov ['[ebp+var_150],', '0']
mov ['[ebp+var_159],', '0']
mov ['eax,', '[ebp+Src]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_39F7']
mov ['[ebp+Size],', '0']
jmp ['short', 'loc_390D']
mov ['eax,', '[ebp+Size]']
add ['eax,', '1']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Size]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_392A']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Size]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jz ['short', 'loc_392A']
jmp ['short', 'loc_3904']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['_ultag_isUnicodeLocaleKey_56']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3979']
cmp ['[ebp+Source],', '0']
jz ['short', 'loc_3965']
mov ['[ebp+var_159],', '1']
mov ['eax,', '[ebp+Src]']
mov ['[ebp+var_144],', 'eax']
mov ['eax,', '[ebp+Size]']
mov ['[ebp+var_150],', 'eax']
jmp ['short', 'loc_3977']
mov ['eax,', '[ebp+Src]']
mov ['[ebp+Source],', 'eax']
mov ['eax,', '[ebp+Size]']
mov ['[ebp+Count],', 'eax']
jmp ['short', 'loc_39D9']
cmp ['[ebp+Source],', '0']
jnz ['short', 'loc_39A9']
mov ['eax,', 'ds:?__LINE__Var@?1??_appendLDMLExtensionAsKeywords@@9@9@97a5f4f1']
add ['eax,', '92h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@JNHHFJMB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1CO@HAHAKBHN@?$AAp?$AAB?$AAc?$AAp?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_114],', '0']
jz ['short', 'loc_39C7']
mov ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+var_12C]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_12C],', 'edx']
jmp ['short', 'loc_39D9']
mov ['eax,', '[ebp+Src]']
mov ['[ebp+var_114],', 'eax']
mov ['eax,', '[ebp+Size]']
mov ['[ebp+var_12C],', 'eax']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+Src]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_39F5']
mov ['eax,', '[ebp+Src]']
add ['eax,', '1']
mov ['[ebp+Src],', 'eax']
jmp ['short', 'loc_3A05']
mov ['[ebp+var_159],', '1']
mov ['[ebp+var_135],', '1']
movsx ['eax,', '[ebp+var_159]']
test ['eax,', 'eax']
jz ['loc_3DED']
mov ['[ebp+Str1],', '0']
mov ['[ebp+var_174],', '0']
cmp ['[ebp+Source],', '0']
jnz ['short', 'loc_3A58']
mov ['eax,', 'ds:?__LINE__Var@?1??_appendLDMLExtensionAsKeywords@@9@9@97a5f4f1']
add ['eax,', '0AEh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@JNHHFJMB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1CO@HAHAKBHN@?$AAp?$AAB?$AAc?$AAp?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+Count],', '9']
jb ['short', 'loc_3A6F']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['$cleanup$11201']
push ['1']
mov ['eax,', '[ebp+Source]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+Count]']
push ['ecx']
mov ['edx,', '[ebp+Source]']
push ['edx']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Count]']
mov ['[ebp+eax+Dest],', '0']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_uloc_toLegacyKey_56']
add ['esp,', '4']
mov ['[ebp+Str1],', 'eax']
cmp ['[ebp+Str1],', '0']
jnz ['short', 'loc_3AE1']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['$cleanup$11201']
mov ['eax,', '[ebp+Str1]']
lea ['ecx,', '[ebp+Dest]']
cmp ['eax,', 'ecx']
jnz ['loc_3B95']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_T_CString_toLowerCase_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_84]']
sub ['eax,', '1']
cmp ['eax,', '[ebp+Count]']
jl ['short', 'loc_3B87']
push ['1']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Count]']
push ['ecx']
lea ['edx,', '[ebp+Dest]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
mov ['[ebp+Str1],', 'eax']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '[ebp+Count]']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '1']
mov ['[ebp+var_84],', 'eax']
jmp ['short', 'loc_3B95']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$cleanup$11201']
cmp ['[ebp+var_114],', '0']
jz ['loc_3CEB']
cmp ['[ebp+var_12C],', '80h']
jb ['short', 'loc_3BBC']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['$cleanup$11201']
push ['1']
mov ['eax,', '[ebp+var_114]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
mov ['edx,', '[ebp+var_114]']
push ['edx']
lea ['eax,', '[ebp+var_210]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncpy']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_12C]']
mov ['[ebp+eax+var_210],', '0']
lea ['eax,', '[ebp+var_210]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_uloc_toLegacyType_56']
add ['esp,', '8']
mov ['[ebp+var_174],', 'eax']
cmp ['[ebp+var_174],', '0']
jnz ['short', 'loc_3C35']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['$cleanup$11201']
mov ['eax,', '[ebp+var_174]']
lea ['ecx,', '[ebp+var_210]']
cmp ['eax,', 'ecx']
jnz ['loc_3CE9']
lea ['eax,', '[ebp+var_210]']
push ['eax']
call ['_T_CString_toLowerCase_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_84]']
sub ['eax,', '1']
cmp ['eax,', '[ebp+var_12C]']
jl ['short', 'loc_3CDB']
push ['1']
lea ['eax,', '[ebp+var_210]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_12C]']
push ['ecx']
lea ['edx,', '[ebp+var_210]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
mov ['[ebp+var_174],', 'eax']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '[ebp+var_12C]']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_84]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_84]']
add ['eax,', '1']
mov ['[ebp+var_84],', 'eax']
jmp ['short', 'loc_3CE9']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$cleanup$11201']
jmp ['short', 'loc_3CF5']
mov ['[ebp+var_174],', 'offset', '_LOCALE_TYPE_YES']
movsx ['eax,', '[ebp+var_21]']
test ['eax,', 'eax']
jnz ['short', 'loc_3D35']
push ['offset', '_POSIX_KEY']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3D35']
push ['offset', '_POSIX_VALUE']
mov ['eax,', '[ebp+var_174]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3D35']
mov ['eax,', '[ebp+arg_10]']
mov ['byte', 'ptr', '[eax],', '1']
jmp ['short', 'loc_3DA0']
push ['0Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jnz ['short', 'loc_3D56']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$cleanup$11201']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+Str1]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_174]']
mov ['[eax+4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['__addExtensionToList']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3DA0']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
jmp ['$cleanup$11201']
mov ['eax,', '[ebp+var_144]']
mov ['[ebp+Source],', 'eax']
cmp ['[ebp+var_144],', '0']
jz ['short', 'loc_3DC3']
mov ['eax,', '[ebp+var_150]']
mov ['[ebp+var_2D8],', 'eax']
jmp ['short', 'loc_3DCD']
mov ['[ebp+var_2D8],', '0']
mov ['ecx,', '[ebp+var_2D8]']
mov ['[ebp+Count],', 'ecx']
mov ['[ebp+var_114],', '0']
mov ['[ebp+var_12C],', '0']
jmp ['loc_38C3']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_3E21']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_48],', 'ecx']
push ['0']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['__addExtensionToList']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_3DF8']
jmp ['short', 'loc_3E75']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_3E4C']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_6C],', 'ecx']
mov ['eax,', '[ebp+var_60]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_3E29']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_3E75']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_48],', 'ecx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_3E52']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN71']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN70']
dd ['offset', '$LN65']
dd ['0FFFFFFACh,', '4']
dd ['offset', '$LN66']
dd ['0FFFFFF10h,', '64h']
dd ['offset', '$LN67']
dd ['0FFFFFE78h,', '9']
dd ['offset', '$LN68']
dd ['0FFFFFDF0h,', '80h']
dd ['offset', '$LN69']
assume ['cs:_rdata']
public ['??_C@_1CO@HAHAKBHN@?$AAp?$AAB?$AAc?$AAp?$AAK?$AAe?$AAy?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA0?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<pBcpKey', '!=', '((void', '*)0)>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FK@JNHHFJMB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\uloc_tag.c>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??_appendLDMLExtensionAsKeywords@@9@9@97a5f4f1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_parse	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1B4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1B4]']
mov ['ecx,', '6Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_95],', '0']
mov ['[ebp+var_A4],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_3FE6']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_3FF5']
xor ['eax,', 'eax']
jmp ['loc_490B']
cmp ['[ebp+Size],', '0']
jge ['short', 'loc_400A']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+Size]']
add ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_4032']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_490B']
push ['1']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+Size]']
mov ['byte', 'ptr', '[eax],', '0']
push ['2Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_408C']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_490B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['__initializeULanguageTag']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
cmp ['[ebp+Size],', '2']
jge ['short', 'loc_40AE']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_490B']
mov ['[ebp+var_8C],', '0']
jmp ['short', 'loc_40C9']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '2']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_8C]']
cmp ['ds:_GRANDFATHERED[eax*4],', '0']
jz ['loc_41A6']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_8C]']
mov ['edx,', 'ds:_GRANDFATHERED[ecx*4]']
push ['edx']
call ['_uprv_stricmp_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_41A1']
mov ['eax,', '[ebp+Size]']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', 'ds:Str[eax*4]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+Size]']
cmp ['eax,', '[ebp+var_B0]']
jge ['short', 'loc_4183']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_4172']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ultag_close']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_490B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', 'ds:Str[eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
jmp ['short', 'loc_41A6']
jmp ['loc_40BA']
mov ['eax,', '81h']
mov ['[ebp+var_20],', 'ax']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_80],', '0']
cmp ['[ebp+var_38],', '0']
jz ['loc_485A']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+Str1],', 'eax']
mov ['eax,', '[ebp+Str1]']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_BC]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_421E']
mov ['eax,', '[ebp+var_BC]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_420D']
jmp ['short', 'loc_421E']
mov ['eax,', '[ebp+var_BC]']
add ['eax,', '1']
mov ['[ebp+var_BC],', 'eax']
jmp ['short', 'loc_41F0']
mov ['eax,', '[ebp+var_BC]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4234']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_4240']
mov ['eax,', '[ebp+var_BC]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_BC]']
sub ['eax,', '[ebp+Str1]']
mov ['[ebp+var_50],', 'eax']
movsx ['eax,', '[ebp+var_20]']
and ['eax,', '1']
jz ['short', 'loc_429E']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['__isLanguageSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_429E']
mov ['eax,', '[ebp+var_BC]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_T_CString_toLowerCase_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '0BEh']
mov ['[ebp+var_20],', 'ax']
jmp ['loc_41D7']
movsx ['eax,', '[ebp+var_20]']
and ['eax,', '2']
jz ['short', 'loc_430E']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['__isExtlangSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_430E']
mov ['eax,', '[ebp+var_BC]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_T_CString_toLowerCase_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+ecx*4+8],', 'eax']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_5C],', '3']
jge ['short', 'loc_4300']
mov ['eax,', '0BEh']
mov ['[ebp+var_20],', 'ax']
jmp ['short', 'loc_4309']
mov ['eax,', '0BCh']
mov ['[ebp+var_20],', 'ax']
jmp ['loc_41D7']
movsx ['eax,', '[ebp+var_20]']
and ['eax,', '4']
jz ['loc_43CB']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['__isScriptSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_43CB']
mov ['eax,', '[ebp+Str1]']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_BC]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_C8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_toupper_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C8]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_C8]']
add ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
jmp ['short', 'loc_4382']
mov ['eax,', '[ebp+var_C8]']
add ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_C8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_43AB']
mov ['eax,', '[ebp+var_C8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_asciitolower_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_C8]']
mov ['[edx],', 'al']
jmp ['short', 'loc_4373']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Str1]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '0B8h']
mov ['[ebp+var_20],', 'ax']
jmp ['loc_41D7']
movsx ['eax,', '[ebp+var_20]']
and ['eax,', '8']
jz ['short', 'loc_441D']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['__isRegionSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_441D']
mov ['eax,', '[ebp+var_BC]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_T_CString_toUpperCase_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+18h],', 'eax']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '0B0h']
mov ['[ebp+var_20],', 'ax']
jmp ['loc_41D7']
movsx ['eax,', '[ebp+var_20]']
and ['eax,', '10h']
jz ['loc_4501']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['__isVariantSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_446B']
movsx ['eax,', '[ebp+var_95]']
test ['eax,', 'eax']
jz ['loc_4501']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['__isPrivateuseVariantSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_4501']
push ['8']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0']
jnz ['short', 'loc_4492']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$error$11534']
mov ['eax,', '[ebp+var_BC]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_T_CString_toUpperCase_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_D4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1Ch']
push ['ecx']
call ['__addVariantToList']
add ['esp,', '8']
mov ['[ebp+var_DD],', 'al']
movsx ['eax,', '[ebp+var_DD]']
test ['eax,', 'eax']
jnz ['short', 'loc_44EA']
mov ['eax,', '[ebp+var_D4]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
jmp ['loc_485A']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '0B0h']
mov ['[ebp+var_20],', 'ax']
jmp ['loc_41D7']
movsx ['eax,', '[ebp+var_20]']
and ['eax,', '20h']
jz ['loc_4608']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['__isExtensionSingleton']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_4608']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_45A7']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_453B']
cmp ['[ebp+var_80],', '0']
jnz ['short', 'loc_4553']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['[ebp+var_68],', '0']
jmp ['loc_485A']
mov ['eax,', '[ebp+var_80]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_74]']
push ['eax']
call ['_T_CString_toLowerCase_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+4],', 'eax']
push ['0']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '20h']
push ['ecx']
call ['__addExtensionToList']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_458F']
mov ['eax,', '[ebp+var_80]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_45A7']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['[ebp+var_68],', '0']
jmp ['loc_485A']
push ['0Ch']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jnz ['short', 'loc_45C8']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$error$11534']
mov ['eax,', '[ebp+var_BC]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_T_CString_toLowerCase_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_68]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_80],', '0']
mov ['eax,', '40h']
mov ['[ebp+var_20],', 'ax']
jmp ['loc_41D7']
movsx ['eax,', '[ebp+var_20]']
and ['eax,', '40h']
jz ['short', 'loc_464B']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['__isExtensionSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_464B']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_4634']
mov ['eax,', '[ebp+Str1]']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '0E0h']
mov ['[ebp+var_20],', 'ax']
jmp ['loc_41D7']
movsx ['eax,', '[ebp+var_20]']
and ['eax,', '80h']
jz ['loc_4853']
mov ['eax,', '[ebp+Str1]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_uprv_asciitolower_56']
add ['esp,', '4']
movsx ['edx,', 'al']
cmp ['edx,', '78h']
jnz ['loc_4851']
cmp ['[ebp+var_68],', '0']
jz ['loc_4700']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_468B']
cmp ['[ebp+var_80],', '0']
jnz ['short', 'loc_46A5']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['[ebp+var_68],', '0']
jmp ['loc_485A']
jmp ['short', 'loc_4700']
mov ['eax,', '[ebp+var_80]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_74]']
push ['eax']
call ['_T_CString_toLowerCase_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+4],', 'eax']
push ['0']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '20h']
push ['ecx']
call ['__addExtensionToList']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_46E8']
mov ['eax,', '[ebp+var_80]']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_68],', '0']
jmp ['short', 'loc_4700']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['[ebp+var_68],', '0']
jmp ['loc_485A']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_470B']
jmp ['loc_485A']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_EC],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['loc_4819']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+Str1],', 'eax']
mov ['eax,', '[ebp+Str1]']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_BC]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_475B']
mov ['eax,', '[ebp+var_BC]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_474A']
jmp ['short', 'loc_475B']
mov ['eax,', '[ebp+var_BC]']
add ['eax,', '1']
mov ['[ebp+var_BC],', 'eax']
jmp ['short', 'loc_472D']
mov ['eax,', '[ebp+var_BC]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4771']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_477D']
mov ['eax,', '[ebp+var_BC]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_BC]']
sub ['eax,', '[ebp+Str1]']
mov ['[ebp+var_50],', 'eax']
push ['1']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['1']
push ['offset', '_PRIVUSE_VARIANT_PREFIX']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['offset', '_PRIVUSE_VARIANT_PREFIX']
call ['_strlen']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '_PRIVUSE_VARIANT_PREFIX']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_47F0']
mov ['eax,', '[ebp+var_BC]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '10h']
mov ['[ebp+var_20],', 'ax']
mov ['[ebp+var_95],', '1']
jmp ['short', 'loc_4819']
jmp ['short', 'loc_4814']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['__isPrivateuseValueSubtag']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4812']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_4814']
jmp ['short', 'loc_4819']
jmp ['loc_4714']
movsx ['eax,', '[ebp+var_20]']
cmp ['eax,', '10h']
jnz ['short', 'loc_4827']
jmp ['loc_41D7']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_EC]']
test ['eax,', 'eax']
jle ['short', 'loc_484F']
mov ['eax,', '[ebp+var_44]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_EC]']
push ['eax']
call ['_T_CString_toLowerCase_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+24h],', 'eax']
jmp ['short', 'loc_485A']
jmp ['short', 'loc_485A']
jmp ['short', 'loc_485A']
jmp ['loc_41D7']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_48C2']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_486C']
cmp ['[ebp+var_80],', '0']
jnz ['short', 'loc_487A']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
jmp ['short', 'loc_48C2']
mov ['eax,', '[ebp+var_80]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_74]']
push ['eax']
call ['_T_CString_toLowerCase_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+4],', 'eax']
push ['0']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '20h']
push ['ecx']
call ['__addExtensionToList']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_48B6']
mov ['eax,', '[ebp+var_80]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_48C2']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_48F8']
cmp ['[ebp+var_A4],', '0']
jle ['short', 'loc_48DF']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_1B4],', 'eax']
jmp ['short', 'loc_48ED']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_44]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_1B4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_1B4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_490B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ultag_close']
add ['esp,', '4']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1B4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isExtlangSubtag proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_4953']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '3']
jnz ['short', 'loc_4974']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isAlphaString']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4974']
mov ['al,', '1']
jmp ['short', 'loc_4976']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__isPrivateuseVariantSubtag proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_49BF']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '1']
jl ['short', 'loc_49E6']
cmp ['[ebp+arg_4],', '8']
jg ['short', 'loc_49E6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['__isAlphaNumericString']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_49E6']
mov ['al,', '1']
jmp ['short', 'loc_49E8']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__initializeULanguageTag proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '_EMPTY']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_4A3F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '3']
jge ['short', 'loc_4A55']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+eax*4+8],', '0']
jmp ['short', 'loc_4A36']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', 'offset', '_EMPTY']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '_EMPTY']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', 'offset', '_EMPTY']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+24h],', 'offset', '_EMPTY']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_close	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_4AC1']
jmp ['loc_4B45']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jz ['short', 'loc_4B04']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_4B04']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4AE1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['short', 'loc_4B39']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_4B39']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4B16']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getLanguage proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getExtlang proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_4BBE']
cmp ['[ebp+arg_4],', '3']
jge ['short', 'loc_4BBE']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax*4+8]']
jmp ['short', 'loc_4BC0']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getExtlangSize proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_4BFF']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '3']
jge ['short', 'loc_4C1D']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+eax*4+8],', '0']
jz ['short', 'loc_4C1B']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4BF6']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getScript proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getRegion proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+18h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getVariant proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4CE1']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_4CCD']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_4CE1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4CB5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getVariantsSize proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_4D3F']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_4D2B']
jmp ['short', 'loc_4D3F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_4D1A']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getExtensionKey proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4DAD']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_4D99']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_4DAD']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4D81']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getExtensionValue proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_4E1A']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_4E06']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_4E1A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4DED']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getExtensionsSize proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_4E77']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_4E63']
jmp ['short', 'loc_4E77']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_4E52']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ultag_getPrivateUse proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+24h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_strlen:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_uprv_isASCIILetter_56:near']
extrn ['_uenum_close_56:near']
extrn ['_u_terminateChars_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_min_56:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_uloc_getKeywordValue_56:near']
extrn ['_uenum_next_56:near']
extrn ['_uenum_count_56:near']
extrn ['_uloc_openKeywords_56:near']
extrn ['_locale_getKeywordsStart_56:near']
extrn ['_uloc_canonicalize_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_strcpy:near']
extrn ['_strcmp:near']
extrn ['_uloc_getLanguage_56:near']
extrn ['_uloc_getScript_56:near']
extrn ['_uloc_getCountry_56:near']
extrn ['_uprv_free_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_uprv_asciitolower_56:near']
extrn ['_uloc_getVariant_56:near']
extrn ['_T_CString_toLowerCase_56:near']
extrn ['_uloc_toUnicodeLocaleType_56:near']
extrn ['_uloc_toUnicodeLocaleKey_56:near']
extrn ['_memset:near']
extrn ['_uprv_toupper_56:near']
extrn ['_uloc_toLegacyType_56:near']
extrn ['_uloc_toLegacyKey_56:near']
extrn ['__imp__strncpy:near']
extrn ['__imp___wassert:near']
extrn ['__imp__strncmp:near']
extrn ['_T_CString_toUpperCase_56:near']
extrn ['_uprv_stricmp_56:near']
end

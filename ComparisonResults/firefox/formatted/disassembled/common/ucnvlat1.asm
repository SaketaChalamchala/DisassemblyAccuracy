endp
__Latin1ToUnicodeWithOffsets proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
sar ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_20]']
jg ['short', 'loc_399']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_3A8']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_20],', '8']
jl ['loc_520']
mov ['eax,', '[ebp+var_20]']
sar ['eax,', '3']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '7']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+1]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+2],', 'cx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+2]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+3]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+6],', 'cx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+4]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+8],', 'cx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+5]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Ah],', 'cx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+6]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Ch],', 'cx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+7]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Eh],', 'cx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jg ['loc_3D0']
cmp ['[ebp+var_38],', '0']
jz ['loc_520']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '20h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jg ['loc_475']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_550']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_520']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+10h],', 'ecx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_59C']
cmp ['[ebp+var_2C],', '0']
jle ['short', 'loc_593']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_568']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+18h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__Latin1GetNextUChar proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_5F2']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
jmp ['short', 'loc_600']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '8']
mov ['eax,', '0FFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__Latin1FromUnicodeWithOffsets proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '19Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_19C]']
mov ['ecx,', '67h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', 'offset', '__Latin1Data_56']
jnz ['short', 'loc_67F']
mov ['eax,', '0FFh']
mov ['[ebp+var_80],', 'ax']
jmp ['short', 'loc_688']
mov ['eax,', '7Fh']
mov ['[ebp+var_80],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+var_68]']
neg ['eax']
sbb ['eax,', 'eax']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_14]']
sar ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_6B7']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_6C8']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_6C8']
jmp ['$getTrail$7814']
cmp ['[ebp+var_44],', '10h']
jl ['loc_DBD']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '4']
mov ['[ebp+var_98],', 'eax']
mov ['ecx,', '[ebp+var_98]']
mov ['[ebp+var_A4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
mov ['dx,', '[ebp+var_B0]']
mov ['[ebp+var_BC],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
movzx ['eax,', '[ebp+var_BC]']
or ['eax,', 'edx']
mov ['[ebp+var_BC],', 'ax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
movzx ['eax,', '[ebp+var_BC]']
movzx ['ecx,', '[ebp+var_80]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_B14']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '20h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '10h']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_B30']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
cmp ['[ebp+var_98],', '0']
jg ['loc_6EA']
mov ['eax,', '[ebp+var_A4]']
sub ['eax,', '[ebp+var_98]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', 'eax']
mov ['[ebp+var_44],', 'ecx']
cmp ['[ebp+var_5C],', '0']
jz ['loc_DBD']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '4']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_98],', '0']
jle ['loc_DBD']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
jmp ['loc_B6C']
xor ['eax,', 'eax']
mov ['[ebp+var_74],', 'ax']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_E23']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_74],', 'cx']
movzx ['edx,', '[ebp+var_80]']
movzx ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
cmp ['eax,', 'edx']
jg ['short', 'loc_DF4']
mov ['[ebp+var_19C],', '1']
jmp ['short', 'loc_DFE']
mov ['[ebp+var_19C],', '0']
cmp ['[ebp+var_19C],', '0']
jz ['short', 'loc_E23']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_DC3']
movzx ['eax,', '[ebp+var_74]']
movzx ['ecx,', '[ebp+var_80]']
cmp ['eax,', 'ecx']
jle ['$noMoreInput$7860']
movzx ['eax,', '[ebp+var_74]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_E4B']
jmp ['short', 'loc_EAA']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '400h']
jnz ['short', 'loc_EAA']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_E9F']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_C8],', 'cx']
movzx ['eax,', '[ebp+var_C8]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_E9D']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_68]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_C8]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_68],', 'edx']
jmp ['short', 'loc_EAA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_68]']
mov ['[eax+38h],', 'ecx']
jmp ['short', '$noMoreInput$7860']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFF800h']
xor ['ecx,', 'ecx']
cmp ['eax,', '0D800h']
setz ['cl']
lea ['ecx,', '[ecx+ecx+0Ah]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_68]']
mov ['[eax+38h],', 'ecx']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_F1D']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_38]']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0']
jbe ['short', 'loc_F1D']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_D4]']
sub ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
jmp ['short', 'loc_EE0']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_F41']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_F41']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+14h]']
jb ['short', 'loc_F41']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+18h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucnv_Latin1FromUTF8 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '128h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_128]']
mov ['ecx,', '4Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_44],', 'ecx']
cmp ['[ebp+var_44],', '0']
jz ['loc_1064']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_1064']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_FEA']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_1257']
jmp ['short', 'loc_1064']
cmp ['[ebp+var_44],', '0C2h']
jl ['short', 'loc_1056']
cmp ['[ebp+var_44],', '0C3h']
jg ['short', 'loc_1056']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_59],', 'cl']
movzx ['edx,', '[ebp+var_59]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_1056']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '3']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_59]']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '0']
jmp ['short', 'loc_1064']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0FFFFFF81h']
jmp ['loc_1257']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_108A']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax-1]']
sub ['ecx,', '0C0h']
movzx ['edx,', 'cl']
cmp ['edx,', '3Eh']
jge ['short', 'loc_108A']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_116D']
cmp ['[ebp+var_38],', '0']
jle ['loc_115D']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax]']
mov ['[ebp+var_4D],', 'cl']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
movsx ['eax,', '[ebp+var_4D]']
test ['eax,', 'eax']
jl ['short', 'loc_10D8']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', '[ebp+var_4D]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_115B']
movzx ['eax,', '[ebp+var_4D]']
cmp ['eax,', '0C2h']
jl ['short', 'loc_1138']
movzx ['eax,', '[ebp+var_4D]']
cmp ['eax,', '0C3h']
jg ['short', 'loc_1138']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_59],', 'cl']
movzx ['edx,', '[ebp+var_59]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_1138']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', '[ebp+var_4D]']
and ['eax,', '3']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_59]']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_115B']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0FFFFFF81h']
jmp ['loc_1257']
jmp ['short', 'loc_1168']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_116D']
jmp ['loc_108A']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['loc_1245']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_20]']
jnb ['loc_1245']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax]']
mov ['[ebp+var_4D],', 'cl']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[ebp+var_4D]']
mov ['[edx+25h],', 'al']
movzx ['ecx,', '[ebp+var_4D]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
movzx ['eax,', '[ebp+var_4D]']
cmp ['eax,', '0F0h']
jge ['short', 'loc_11EB']
movzx ['ecx,', '[ebp+var_4D]']
xor ['edx,', 'edx']
cmp ['ecx,', '0C0h']
setnl ['dl']
movzx ['eax,', '[ebp+var_4D]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0E0h']
setnl ['cl']
add ['edx,', 'ecx']
mov ['[ebp+var_124],', 'edx']
jmp ['short', 'loc_1236']
movzx ['edx,', '[ebp+var_4D]']
cmp ['edx,', '0FEh']
jge ['short', 'loc_1220']
movzx ['eax,', '[ebp+var_4D]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0F8h']
setnl ['cl']
movzx ['edx,', '[ebp+var_4D]']
xor ['eax,', 'eax']
cmp ['edx,', '0FCh']
setnl ['al']
lea ['ecx,', '[ecx+eax+3]']
mov ['[ebp+var_128],', 'ecx']
jmp ['short', 'loc_122A']
mov ['[ebp+var_128],', '0']
mov ['edx,', '[ebp+var_128]']
mov ['[ebp+var_124],', 'edx']
mov ['eax,', '[ebp+var_124]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+10h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__Latin1GetUnicodeSet proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0FFh']
push ['0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__ASCIIToUnicodeWithOffsets proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '16Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '5Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
sar ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_50],', 'ecx']
mov ['[ebp+var_5C],', '0']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_132B']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '8']
jl ['loc_15DD']
mov ['eax,', '[ebp+var_38]']
sar ['eax,', '3']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['[ebp+var_80],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_20]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[eax]']
mov ['[ebp+var_8C],', 'cx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+1]']
mov ['word', 'ptr', '[ebp+var_16C+2],', 'cx']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+var_16C+2]']
mov ['[edx+2],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_16C+2]']
movzx ['edx,', '[ebp+var_8C]']
or ['edx,', 'ecx']
mov ['[ebp+var_8C],', 'dx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+2]']
mov ['word', 'ptr', '[ebp+var_16C+2],', 'cx']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+var_16C+2]']
mov ['[edx+4],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_16C+2]']
movzx ['edx,', '[ebp+var_8C]']
or ['edx,', 'ecx']
mov ['[ebp+var_8C],', 'dx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+3]']
mov ['word', 'ptr', '[ebp+var_16C+2],', 'cx']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+var_16C+2]']
mov ['[edx+6],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_16C+2]']
movzx ['edx,', '[ebp+var_8C]']
or ['edx,', 'ecx']
mov ['[ebp+var_8C],', 'dx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+4]']
mov ['word', 'ptr', '[ebp+var_16C+2],', 'cx']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+var_16C+2]']
mov ['[edx+8],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_16C+2]']
movzx ['edx,', '[ebp+var_8C]']
or ['edx,', 'ecx']
mov ['[ebp+var_8C],', 'dx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+5]']
mov ['word', 'ptr', '[ebp+var_16C+2],', 'cx']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+var_16C+2]']
mov ['[edx+0Ah],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_16C+2]']
movzx ['edx,', '[ebp+var_8C]']
or ['edx,', 'ecx']
mov ['[ebp+var_8C],', 'dx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+6]']
mov ['word', 'ptr', '[ebp+var_16C+2],', 'cx']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+var_16C+2]']
mov ['[edx+0Ch],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_16C+2]']
movzx ['edx,', '[ebp+var_8C]']
or ['edx,', 'ecx']
mov ['[ebp+var_8C],', 'dx']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax+7]']
mov ['word', 'ptr', '[ebp+var_16C+2],', 'cx']
mov ['edx,', '[ebp+var_20]']
mov ['ax,', 'word', 'ptr', '[ebp+var_16C+2]']
mov ['[edx+0Eh],', 'ax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_16C+2]']
movzx ['edx,', '[ebp+var_8C]']
or ['edx,', 'ecx']
mov ['[ebp+var_8C],', 'dx']
movzx ['eax,', '[ebp+var_8C]']
cmp ['eax,', '7Fh']
jle ['short', 'loc_14D8']
jmp ['short', 'loc_14FD']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '10h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jg ['loc_1344']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '[ebp+var_74]']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
shl ['eax,', '3']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', 'eax']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['loc_15DD']
mov ['eax,', '[ebp+var_74]']
shl ['eax,', '3']
mov ['ecx,', '[ebp+var_2C]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_74],', '0']
jle ['loc_15DD']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+1Ch],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '20h']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
jmp ['loc_152D']
mov ['[ebp+var_65],', '0']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_163F']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['[ebp+var_65],', 'cl']
movzx ['edx,', '[ebp+var_65]']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['edx,', '7Fh']
jg ['short', 'loc_160D']
mov ['[ebp+var_16C],', '1']
jmp ['short', 'loc_1617']
mov ['[ebp+var_16C],', '0']
cmp ['[ebp+var_16C],', '0']
jz ['short', 'loc_163F']
movzx ['ax,', '[ebp+var_65]']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_15E1']
movzx ['eax,', '[ebp+var_65]']
cmp ['eax,', '7Fh']
jle ['short', 'loc_1675']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_98],', 'ecx']
mov ['eax,', '[ebp+var_98]']
mov ['cl,', '[ebp+var_65]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_98]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_1691']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_1691']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+14h]']
jb ['short', 'loc_1691']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_16D9']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_2C]']
sar ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '0']
jbe ['short', 'loc_16D9']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_A4]']
sub ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_16A5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax+18h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__ASCIIGetNextUChar proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_1782']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['[ebp+var_11],', 'cl']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
movzx ['eax,', '[ebp+var_11]']
cmp ['eax,', '7Fh']
jg ['short', 'loc_1759']
movzx ['eax,', '[ebp+var_11]']
jmp ['short', 'loc_1790']
jmp ['short', 'loc_1782']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[ebp+var_11]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_20]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '0FFFFh']
jmp ['short', 'loc_1790']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '8']
mov ['eax,', '0FFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucnv_ASCIIFromUTF8 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '12Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '4Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
cmp ['dword', 'ptr', '[ecx+2Ch],', '0']
jz ['short', 'loc_17D0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0FFFFFF81h']
jmp ['loc_1B9C']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_1811']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '10h']
jl ['loc_1B1A']
mov ['eax,', '[ebp+var_2C]']
sar ['eax,', '4']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_65],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_65]']
or ['edx,', 'ecx']
mov ['[ebp+var_65],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+var_65]']
cmp ['eax,', '7Fh']
jle ['short', 'loc_1AF0']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '10h']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1B03']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jg ['loc_182A']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '[ebp+var_50]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', 'eax']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_41],', '0']
cmp ['[ebp+var_2C],', '0']
jle ['short', 'loc_1B5A']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['[ebp+var_41],', 'cl']
movzx ['edx,', '[ebp+var_41]']
cmp ['edx,', '7Fh']
jg ['short', 'loc_1B5A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[ebp+var_41]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_1B1E']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '7Fh']
jle ['short', 'loc_1B6E']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0FFFFFF81h']
jmp ['short', 'loc_1B8A']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_1B8A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+14h]']
jb ['short', 'loc_1B8A']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__ASCIIGetUnicodeSet proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['7Fh']
push ['0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_CheckEsp:near']
end

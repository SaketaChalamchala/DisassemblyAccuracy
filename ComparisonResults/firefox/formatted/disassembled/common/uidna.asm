endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uidna_toASCII_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_B5']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_BC']
xor ['eax,', 'eax']
jmp ['loc_14C']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_DA']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jl ['short', 'loc_DA']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_DA']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_E7']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_E7']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_14C']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['0']
call ['_usprep_openByType_56']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_112']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_14C']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?_internal_toASCII@@YAHPB_WHPA_WHHPAUUStringPrepProfile@@PAUUParseError@@PAW4UErrorCode@@@Z']
add ['esp,', '20h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_usprep_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_internal_toASCII@@YAHPB_WHPA_WHHPAUUStringPrepProfile@@PAUUParseError@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '310h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_310]']
mov ['ecx,', '0C4h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_D0]']
mov ['[ebp+Src],', 'eax']
lea ['eax,', '[ebp+var_1A0]']
mov ['[ebp+var_1B8],', 'eax']
mov ['[ebp+var_1C4],', '0']
mov ['[ebp+var_1DC],', '64h']
mov ['[ebp+var_1E8],', '64h']
mov ['[ebp+var_1F4],', '0']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_200],', 'eax']
mov ['[ebp+var_20C],', '0']
mov ['[ebp+var_215],', '1']
mov ['[ebp+var_221],', '1']
mov ['[ebp+var_230],', '0']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '2']
setnz ['cl']
mov ['[ebp+var_239],', 'cl']
mov ['[ebp+var_248],', '0FFFFFFFFh']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jnz ['short', 'loc_256']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_1DC]']
jle ['short', 'loc_29A']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Src],', 'eax']
cmp ['[ebp+Src],', '0']
jnz ['short', 'loc_291']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$CLEANUP$10532']
jmp ['$CLEANUP$10532']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_1DC],', 'eax']
mov ['[ebp+var_230],', '0']
jmp ['short', 'loc_2B5']
mov ['eax,', '[ebp+var_230]']
add ['eax,', '1']
mov ['[ebp+var_230],', 'eax']
mov ['eax,', '[ebp+var_230]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_307']
mov ['eax,', '[ebp+var_230]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '7Fh']
jle ['short', 'loc_2D9']
mov ['[ebp+var_215],', '0']
mov ['eax,', '[ebp+var_1C4]']
mov ['ecx,', '[ebp+Src]']
mov ['edx,', '[ebp+var_230]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_1C4]']
add ['eax,', '1']
mov ['[ebp+var_1C4],', 'eax']
jmp ['short', 'loc_2A6']
movsx ['eax,', '[ebp+var_215]']
test ['eax,', 'eax']
jnz ['loc_3EB']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+var_200]']
push ['edx']
mov ['eax,', '[ebp+var_1DC]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
call ['_usprep_prepare_56']
add ['esp,', '20h']
mov ['[ebp+var_1C4],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['loc_3EB']
mov ['eax,', '[ebp+Src]']
lea ['ecx,', '[ebp+var_D0]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_378']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1C4]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Src],', 'eax']
cmp ['[ebp+Src],', '0']
jnz ['short', 'loc_3AB']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$CLEANUP$10532']
jmp ['$CLEANUP$10532']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+var_200]']
push ['edx']
mov ['eax,', '[ebp+var_1C4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
call ['_usprep_prepare_56']
add ['esp,', '20h']
mov ['[ebp+var_1C4],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_40A']
jmp ['$CLEANUP$10532']
jmp ['$CLEANUP$10532']
cmp ['[ebp+var_1C4],', '0']
jnz ['short', 'loc_426']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '10407h']
jmp ['$CLEANUP$10532']
jmp ['$CLEANUP$10532']
mov ['[ebp+var_215],', '1']
mov ['[ebp+var_230],', '0']
jmp ['short', 'loc_448']
mov ['eax,', '[ebp+var_230]']
add ['eax,', '1']
mov ['[ebp+var_230],', 'eax']
mov ['eax,', '[ebp+var_230]']
cmp ['eax,', '[ebp+var_1C4]']
jge ['short', 'loc_4A9']
mov ['eax,', '[ebp+var_230]']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '7Fh']
jle ['short', 'loc_474']
mov ['[ebp+var_215],', '0']
jmp ['short', 'loc_4A7']
mov ['eax,', '[ebp+var_230]']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isLDHChar@@YAC_W@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_4A7']
mov ['[ebp+var_221],', '0']
mov ['eax,', '[ebp+var_230]']
mov ['[ebp+var_248],', 'eax']
jmp ['short', 'loc_439']
movsx ['eax,', '[ebp+var_239]']
cmp ['eax,', '1']
jnz ['loc_5A0']
movsx ['eax,', '[ebp+var_221]']
test ['eax,', 'eax']
jz ['short', 'loc_4EC']
mov ['eax,', '[ebp+Src]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jz ['short', 'loc_4EC']
mov ['eax,', '[ebp+var_1C4]']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
cmp ['edx,', '2Dh']
jnz ['loc_5A0']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '10403h']
movsx ['eax,', '[ebp+var_221]']
test ['eax,', 'eax']
jnz ['short', 'loc_523']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_1C4]']
push ['ecx']
mov ['edx,', '[ebp+var_248]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_syntaxError_56']
add ['esp,', '10h']
jmp ['short', 'loc_596']
mov ['eax,', '[ebp+Src]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_54F']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_1C4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Src]']
push ['edx']
call ['_uprv_syntaxError_56']
add ['esp,', '10h']
jmp ['short', 'loc_596']
cmp ['[ebp+var_1C4],', '0']
jle ['short', 'loc_569']
mov ['eax,', '[ebp+var_1C4]']
sub ['eax,', '1']
mov ['[ebp+var_310],', 'eax']
jmp ['short', 'loc_575']
mov ['ecx,', '[ebp+var_1C4]']
mov ['[ebp+var_310],', 'ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+var_1C4]']
push ['eax']
mov ['ecx,', '[ebp+var_310]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
call ['_uprv_syntaxError_56']
add ['esp,', '10h']
jmp ['$CLEANUP$10532']
jmp ['$CLEANUP$10532']
movsx ['eax,', '[ebp+var_215]']
test ['eax,', 'eax']
jz ['short', 'loc_616']
mov ['eax,', '[ebp+var_1C4]']
cmp ['eax,', '[ebp+arg_C]']
jg ['short', 'loc_5FB']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_1C4]']
shl ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_1C4]']
mov ['[ebp+var_1F4],', 'eax']
jmp ['short', 'loc_611']
mov ['eax,', '[ebp+var_1C4]']
mov ['[ebp+var_1F4],', 'eax']
jmp ['$CLEANUP$10532']
jmp ['$CLEANUP$10532']
jmp ['loc_7AE']
mov ['eax,', '[ebp+var_1C4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['?startsWithPrefix@@YACPB_WH@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_785']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_20C]']
push ['ecx']
mov ['edx,', '[ebp+var_1E8]']
push ['edx']
mov ['eax,', '[ebp+var_1B8]']
push ['eax']
mov ['ecx,', '[ebp+var_1C4]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
call ['_u_strToPunycode_56']
add ['esp,', '18h']
mov ['[ebp+var_1D0],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_6E5']
mov ['eax,', '[ebp+var_1D0]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_1B8],', 'eax']
cmp ['[ebp+var_1B8],', '0']
jnz ['short', 'loc_6A7']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$CLEANUP$10532']
jmp ['$CLEANUP$10532']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_20C]']
push ['ecx']
mov ['edx,', '[ebp+var_1D0]']
push ['edx']
mov ['eax,', '[ebp+var_1B8]']
push ['eax']
mov ['ecx,', '[ebp+var_1C4]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
call ['_u_strToPunycode_56']
add ['esp,', '18h']
mov ['[ebp+var_1D0],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_704']
jmp ['$CLEANUP$10532']
jmp ['$CLEANUP$10532']
mov ['eax,', '[ebp+var_1D0]']
add ['eax,', '4']
mov ['[ebp+var_1F4],', 'eax']
mov ['eax,', '[ebp+var_1F4]']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_731']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$CLEANUP$10532']
jmp ['$CLEANUP$10532']
push ['1']
push ['offset', '_ACE_PREFIX']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['8']
push ['offset', '_ACE_PREFIX']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
push ['1']
mov ['eax,', '[ebp+var_1B8]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_1D0]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_1B8]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '8']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_7AE']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '10404h']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_1C4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Src]']
push ['edx']
call ['_uprv_syntaxError_56']
add ['esp,', '10h']
jmp ['short', '$CLEANUP$10532']
jmp ['short', '$CLEANUP$10532']
cmp ['[ebp+var_1F4],', '3Fh']
jle ['short', '$CLEANUP$10532']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '10406h']
mov ['eax,', '[ebp+Src]']
lea ['ecx,', '[ebp+var_D0]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_7DF']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_1B8]']
lea ['ecx,', '[ebp+var_1A0]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_7FE']
mov ['eax,', '[ebp+var_1B8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_20C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_1F4]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN57']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '310h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN56']
dd ['offset', '$LN54']
dd ['0FFFFFE60h,', '0C8h']
dd ['offset', '$LN55']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWithPrefix@@YACPB_WH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5],', '1']
cmp ['[ebp+arg_4],', '4']
jge ['short', 'loc_8B4']
xor ['al,', 'al']
jmp ['short', 'loc_8FB']
mov ['[ebp+var_11],', '0']
jmp ['short', 'loc_8C2']
mov ['al,', '[ebp+var_11]']
add ['al,', '1']
mov ['[ebp+var_11],', 'al']
movsx ['eax,', '[ebp+var_11]']
cmp ['eax,', '4']
jge ['short', 'loc_8F8']
movsx ['eax,', '[ebp+var_11]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?toASCIILower@@YA_W_W@Z']
add ['esp,', '4']
movzx ['eax,', 'ax']
movsx ['ecx,', '[ebp+var_11]']
movzx ['edx,', 'word', 'ptr', '_ACE_PREFIX[ecx*2]']
cmp ['eax,', 'edx']
jz ['short', 'loc_8F6']
mov ['[ebp+var_5],', '0']
jmp ['short', 'loc_8BA']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toASCIILower@@YA_W_W@Z	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '41h']
jl ['short', 'loc_949']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '5Ah']
jg ['short', 'loc_949']
movzx ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
jmp ['short', 'loc_94D']
mov ['ax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLDHChar@@YAC_W@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '7Ah']
jle ['short', 'loc_97F']
xor ['al,', 'al']
jmp ['short', 'loc_9C4']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '2Dh']
jz ['short', 'loc_9BE']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '30h']
jl ['short', 'loc_99A']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '39h']
jle ['short', 'loc_9BE']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '41h']
jl ['short', 'loc_9AC']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '5Ah']
jle ['short', 'loc_9BE']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '61h']
jl ['short', 'loc_9C2']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '7Ah']
jg ['short', 'loc_9C2']
mov ['al,', '1']
jmp ['short', 'loc_9C4']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uidna_toUnicode_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_A05']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A0C']
xor ['eax,', 'eax']
jmp ['loc_A9C']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_A2A']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jl ['short', 'loc_A2A']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_A2A']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_A37']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_A37']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_A9C']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['0']
call ['_usprep_openByType_56']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A62']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_A9C']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?_internal_toUnicode@@YAHPB_WHPA_WHHPAUUStringPrepProfile@@PAUUParseError@@PAW4UErrorCode@@@Z']
add ['esp,', '20h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_usprep_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_internal_toUnicode@@YAHPB_WHPA_WHHPAUUStringPrepProfile@@PAUUParseError@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3F4]']
mov ['ecx,', '0FDh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '1']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
mov ['[ebp+var_C],', 'eax']
lea ['eax,', '[ebp+var_DC]']
mov ['[ebp+var_288],', 'eax']
lea ['eax,', '[ebp+var_1AC]']
mov ['[ebp+Src],', 'eax']
mov ['[ebp+var_2A0],', '0']
lea ['eax,', '[ebp+var_27C]']
mov ['[ebp+var_2AC],', 'eax']
mov ['[ebp+var_2B8],', '0']
mov ['[ebp+var_2E8],', '64h']
mov ['[ebp+var_2F4],', '64h']
mov ['[ebp+var_300],', '64h']
mov ['[ebp+var_30C],', '0']
mov ['[ebp+var_318],', '0']
mov ['[ebp+var_321],', '1']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jnz ['short', 'loc_B96']
mov ['[ebp+arg_4],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
test ['edx,', 'edx']
jz ['short', 'loc_B94']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '7Fh']
jle ['short', 'loc_B89']
mov ['[ebp+var_321],', '0']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_B65']
jmp ['short', 'loc_BE6']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_BDF']
mov ['[ebp+var_330],', '0']
jmp ['short', 'loc_BB7']
mov ['eax,', '[ebp+var_330]']
add ['eax,', '1']
mov ['[ebp+var_330],', 'eax']
mov ['eax,', '[ebp+var_330]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_BDD']
mov ['eax,', '[ebp+var_330]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '7Fh']
jle ['short', 'loc_BDB']
mov ['[ebp+var_321],', '0']
jmp ['short', 'loc_BA8']
jmp ['short', 'loc_BE6']
xor ['eax,', 'eax']
jmp ['loc_105D']
movsx ['eax,', '[ebp+var_321]']
test ['eax,', 'eax']
jnz ['loc_CC2']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_2E8]']
push ['eax']
mov ['ecx,', '[ebp+var_288]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
call ['_usprep_prepare_56']
add ['esp,', '20h']
mov ['[ebp+var_2B8],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_CA1']
mov ['eax,', '[ebp+var_2B8]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_288],', 'eax']
cmp ['[ebp+var_288],', '0']
jnz ['short', 'loc_C64']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$CLEANUP$10626']
jmp ['$CLEANUP$10626']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_2B8]']
push ['eax']
mov ['ecx,', '[ebp+var_288]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
call ['_usprep_prepare_56']
add ['esp,', '20h']
mov ['[ebp+var_2B8],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_CC0']
jmp ['$CLEANUP$10626']
jmp ['$CLEANUP$10626']
jmp ['short', 'loc_CD4']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_288],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_2B8],', 'eax']
mov ['eax,', '[ebp+var_2B8]']
push ['eax']
mov ['ecx,', '[ebp+var_288]']
push ['ecx']
call ['?startsWithPrefix@@YACPB_WH@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_F1B']
mov ['eax,', '[ebp+var_288]']
add ['eax,', '8']
mov ['[ebp+var_2A0],', 'eax']
mov ['eax,', '[ebp+var_2B8]']
sub ['eax,', '4']
mov ['[ebp+var_2D0],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_318]']
push ['ecx']
mov ['edx,', '[ebp+var_2F4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_2D0]']
push ['ecx']
mov ['edx,', '[ebp+var_2A0]']
push ['edx']
call ['_u_strFromPunycode_56']
add ['esp,', '18h']
mov ['[ebp+var_2C4],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_DC1']
mov ['eax,', '[ebp+var_2C4]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Src],', 'eax']
cmp ['[ebp+Src],', '0']
jnz ['short', 'loc_D83']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$CLEANUP$10626']
jmp ['$CLEANUP$10626']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_318]']
push ['ecx']
mov ['edx,', '[ebp+var_2C4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_2D0]']
push ['ecx']
mov ['edx,', '[ebp+var_2A0]']
push ['edx']
call ['_u_strFromPunycode_56']
add ['esp,', '18h']
mov ['[ebp+var_2C4],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_300]']
push ['eax']
mov ['ecx,', '[ebp+var_2AC]']
push ['ecx']
mov ['edx,', '[ebp+var_2C4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uidna_toASCII_56']
add ['esp,', '1Ch']
mov ['[ebp+var_2DC],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_E71']
mov ['eax,', '[ebp+var_2DC]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_2AC],', 'eax']
cmp ['[ebp+var_2AC],', '0']
jnz ['short', 'loc_E32']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$CLEANUP$10626']
jmp ['$CLEANUP$10626']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_2DC]']
push ['eax']
mov ['ecx,', '[ebp+var_2AC]']
push ['ecx']
mov ['edx,', '[ebp+var_2C4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uidna_toASCII_56']
add ['esp,', '1Ch']
mov ['[ebp+var_2DC],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_E90']
jmp ['$CLEANUP$10626']
jmp ['$CLEANUP$10626']
mov ['eax,', '[ebp+var_2DC]']
push ['eax']
mov ['ecx,', '[ebp+var_2AC]']
push ['ecx']
mov ['edx,', '[ebp+var_2B8]']
push ['edx']
mov ['eax,', '[ebp+var_288]']
push ['eax']
call ['?compareCaseInsensitiveASCII@@YAHPB_WH0H@Z']
add ['esp,', '10h']
test ['eax,', 'eax']
jz ['short', 'loc_ECB']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '10405h']
jmp ['$CLEANUP$10626']
jmp ['$CLEANUP$10626']
mov ['eax,', '[ebp+var_2C4]']
mov ['[ebp+var_30C],', 'eax']
mov ['eax,', '[ebp+var_2C4]']
cmp ['eax,', '[ebp+arg_C]']
jg ['short', 'loc_F19']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_2C4]']
shl ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', '$CLEANUP$10626']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jg ['short', 'loc_F51']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_30C],', 'eax']
mov ['eax,', '[ebp+var_288]']
lea ['ecx,', '[ebp+var_DC]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_F84']
mov ['eax,', '[ebp+var_288]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_F84']
mov ['eax,', '[ebp+var_288]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+Src]']
lea ['ecx,', '[ebp+var_1AC]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_FA3']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_318]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1042']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_1030']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jg ['short', 'loc_1030']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_1002']
mov ['eax,', 'ds:?__LINE__Var@?1??_internal_toUnicode@@YAHPB_WHPA_WHHPAUUStringPrepProfile@@PAUUParseError@@PAW4UErrorCode@@@Z@4JA@b121f502']
add ['eax,', '0C7h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@EHNKFCBG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BO@FPACHIGK@?$AAs?$AAr?$AAc?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_30C],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_30C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN44']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN43']
dd ['offset', '$LN40']
dd ['0FFFFFE54h,', '0C8h']
dd ['offset', '$LN41']
dd ['0FFFFFD84h,', '0C8h']
dd ['offset', '$LN42']
assume ['cs:_rdata']
public ['??_C@_1BO@FPACHIGK@?$AAs?$AAr?$AAc?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<srcLength', '>']
dw ['3Eh']
unicode ['0,', '<=', '0>,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1FI@EHNKFCBG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\uidna.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??_internal_toUnicode@@YAHPB_WHPA_WHHPAUUStringPrepProfile@@PAUUParseError@@PAW4UErrorCode@@@Z@4JA@b121f502']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCaseInsensitiveASCII@@YAHPB_WH0H@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jz ['short', 'loc_1198']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_1189']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0FFFFFFFFh']
jmp ['short', 'loc_1196']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_11A5']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_11B7']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_11C4']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_1220']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_20],', 'dx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_8]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_2C],', 'dx']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_2C]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_121B']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
call ['?toASCIILower@@YA_W_W@Z']
add ['esp,', '4']
movzx ['esi,', 'ax']
movzx ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['?toASCIILower@@YA_W_W@Z']
add ['esp,', '4']
movzx ['edx,', 'ax']
sub ['esi,', 'edx']
mov ['[ebp+var_38],', 'esi']
jz ['short', 'loc_121B']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_121D']
jmp ['short', 'loc_11AE']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uidna_IDNToASCII_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_138]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_126D']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1274']
xor ['eax,', 'eax']
jmp ['loc_1450']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1292']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jl ['short', 'loc_1292']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_1292']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_12A2']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_12A2']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_1450']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['0']
call ['_usprep_openByType_56']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_12D6']
xor ['eax,', 'eax']
jmp ['loc_1450']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_71],', '0']
lea ['eax,', '[ebp+var_71]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?getNextSeparator@@YAHPA_WHPAPA_WPAC@Z']
add ['esp,', '10h']
mov ['[ebp+var_5C],', 'eax']
mov ['[ebp+var_68],', '0']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_1336']
movsx ['eax,', '[ebp+var_71]']
test ['eax,', 'eax']
jnz ['short', 'loc_1379']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['?_internal_toASCII@@YAHPB_WHPA_WHHPAUUStringPrepProfile@@PAUUParseError@@PAW4UErrorCode@@@Z']
add ['esp,', '20h']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_18]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_1379']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1393']
jmp ['loc_141A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_13BB']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+Dst]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_68]']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_13C2']
mov ['[ebp+var_50],', '0']
movsx ['eax,', '[ebp+var_71]']
cmp ['eax,', '1']
jnz ['short', 'loc_13CD']
jmp ['short', 'loc_141A']
cmp ['[ebp+var_50],', '0']
jle ['short', 'loc_13F0']
mov ['eax,', '2Eh']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '2']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_1415']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_44],', 'ecx']
jmp ['loc_1306']
cmp ['[ebp+var_8],', '0FFh']
jle ['short', 'loc_142C']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '10408h']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_usprep_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN22']
dd ['offset', '$LN20']
dd ['0FFFFFF8Fh,', '1']
dd ['offset', '$LN21']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getNextSeparator@@YAHPA_WHPAPA_WPAC@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jnz ['short', 'loc_153A']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_14DE']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
test ['edx,', 'edx']
jnz ['short', 'loc_1508']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_159B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isLabelSeparator@@YAC_W@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1536']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2+2]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_159B']
jmp ['short', 'loc_14D5']
jmp ['short', 'loc_159B']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_154C']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_1584']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isLabelSeparator@@YAC_W@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1582']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2+2]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_159B']
jmp ['short', 'loc_1543']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLabelSeparator@@YAC_W@Z proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '0FF0Eh']
jg ['short', 'loc_1607']
cmp ['[ebp+var_C4],', '0FF0Eh']
jz ['short', 'loc_1615']
cmp ['[ebp+var_C4],', '2Eh']
jz ['short', 'loc_1615']
cmp ['[ebp+var_C4],', '3002h']
jz ['short', 'loc_1615']
jmp ['short', 'loc_1619']
cmp ['[ebp+var_C4],', '0FF61h']
jz ['short', 'loc_1615']
jmp ['short', 'loc_1619']
mov ['al,', '1']
jmp ['short', 'loc_161B']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uidna_IDNToUnicode_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_138]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_165D']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1664']
xor ['eax,', 'eax']
jmp ['loc_1830']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1682']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jl ['short', 'loc_1682']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_1682']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_1692']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_1692']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_1830']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['0']
call ['_usprep_openByType_56']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_16C6']
xor ['eax,', 'eax']
jmp ['loc_1830']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_71],', '0']
lea ['eax,', '[ebp+var_71]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?getNextSeparator@@YAHPA_WHPAPA_WPAC@Z']
add ['esp,', '10h']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['?_internal_toUnicode@@YAHPB_WHPA_WHHPAUUStringPrepProfile@@PAUUParseError@@PAW4UErrorCode@@@Z']
add ['esp,', '20h']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_18]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_1754']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_176E']
jmp ['loc_17FA']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_1796']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+Dst]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '[ebp+var_68]']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_179D']
mov ['[ebp+var_50],', '0']
movsx ['eax,', '[ebp+var_71]']
cmp ['eax,', '1']
jnz ['short', 'loc_17A8']
jmp ['short', 'loc_17FA']
cmp ['[ebp+var_50],', '0']
jle ['short', 'loc_17D0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_2C]']
mov ['cx,', '[edx+ecx*2]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '2']
mov ['[ebp+Dst],', 'edx']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_17F5']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_44],', 'ecx']
jmp ['loc_16F6']
cmp ['[ebp+var_8],', '0FFh']
jle ['short', 'loc_180C']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '10408h']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_usprep_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN20_0']
dd ['offset', '$LN18']
dd ['0FFFFFF8Fh,', '1']
dd ['offset', '$LN19']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uidna_compare_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '578h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_578]']
mov ['ecx,', '15Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_18CB']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_18D3']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_1AC5']
lea ['eax,', '[ebp+var_208]']
mov ['[ebp+var_41C],', 'eax']
lea ['eax,', '[ebp+var_410]']
mov ['[ebp+var_428],', 'eax']
mov ['[ebp+var_44C],', '100h']
mov ['[ebp+var_458],', '100h']
mov ['[ebp+var_464],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_4B4]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_44C]']
push ['eax']
mov ['ecx,', '[ebp+var_41C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uidna_IDNToASCII_56']
add ['esp,', '1Ch']
mov ['[ebp+var_434],', 'eax']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_19B3']
mov ['eax,', '[ebp+var_434]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_41C],', 'eax']
cmp ['[ebp+var_41C],', '0']
jnz ['short', 'loc_1977']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['$CLEANUP$10791']
jmp ['$CLEANUP$10791']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_4B4]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_434]']
push ['eax']
mov ['ecx,', '[ebp+var_41C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uidna_IDNToASCII_56']
add ['esp,', '1Ch']
mov ['[ebp+var_434],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_4B4]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_458]']
push ['eax']
mov ['ecx,', '[ebp+var_428]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_uidna_IDNToASCII_56']
add ['esp,', '1Ch']
mov ['[ebp+var_440],', 'eax']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jnz ['short', 'loc_1A57']
mov ['eax,', '[ebp+var_440]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_428],', 'eax']
cmp ['[ebp+var_428],', '0']
jnz ['short', 'loc_1A1B']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', '$CLEANUP$10791']
jmp ['short', '$CLEANUP$10791']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
lea ['ecx,', '[ebp+var_4B4]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_440]']
push ['eax']
mov ['ecx,', '[ebp+var_428]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_uidna_IDNToASCII_56']
add ['esp,', '1Ch']
mov ['[ebp+var_440],', 'eax']
mov ['eax,', '[ebp+var_440]']
push ['eax']
mov ['ecx,', '[ebp+var_428]']
push ['ecx']
mov ['edx,', '[ebp+var_434]']
push ['edx']
mov ['eax,', '[ebp+var_41C]']
push ['eax']
call ['?compareCaseInsensitiveASCII@@YAHPB_WH0H@Z']
add ['esp,', '10h']
mov ['[ebp+var_464],', 'eax']
mov ['eax,', '[ebp+var_41C]']
lea ['ecx,', '[ebp+var_208]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_1AA0']
mov ['eax,', '[ebp+var_41C]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_428]']
lea ['ecx,', '[ebp+var_410]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_1ABF']
mov ['eax,', '[ebp+var_428]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_464]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '578h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN16']
dd ['offset', '$LN13']
dd ['0FFFFFBF0h,', '200h']
dd ['offset', '$LN14']
dd ['0FFFFFB4Ch,', '48h']
dd ['offset', '$LN15']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_usprep_close_56:near']
extrn ['_usprep_openByType_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['_u_terminateUChars_56:near']
extrn ['_memcpy:near']
extrn ['_u_strToPunycode_56:near']
extrn ['__imp__memmove:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_uprv_syntaxError_56:near']
extrn ['_uprv_free_56:near']
extrn ['_usprep_prepare_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_u_strlen_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp___wassert:near']
extrn ['_u_strFromPunycode_56:near']
end

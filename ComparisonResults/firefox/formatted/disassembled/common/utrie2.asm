endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??2UMemory@icu_56@@SAPAXIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??3UMemory@icu_56@@SAXPAX0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UObject@icu_56@@6B@']
public ['??_7UObject@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4UObject@icu_56@@6B@']
dd ['offset', '??_R0?AVUObject@icu_56@@@8']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??3@YAXPAX@Z']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '??3@YAXPAX@Z']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??3@YAXPAX@Z']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_24B']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_255']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??4UObject@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??_GUObject@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2DB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??_EUObject@icu_56@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_355']
push ['offset', '??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_34D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_374']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_371']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??_FMutex@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['??0Mutex@icu_56@@QAE@PAUUMutex@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??0Mutex@icu_56@@QAE@PAUUMutex@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_umtx_lock_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??1Mutex@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_umtx_unlock_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_get32_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['loc_5AD']
cmp ['[ebp+arg_4],', '0D800h']
jnb ['short', 'loc_4C3']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_C4],', 'edx']
jmp ['loc_594']
cmp ['[ebp+arg_4],', '0FFFFh']
ja ['short', 'loc_505']
xor ['eax,', 'eax']
cmp ['[ebp+arg_4],', '0DBFFh']
setnle ['al']
sub ['eax,', '1']
and ['eax,', '140h']
mov ['ecx,', '[ebp+arg_4]']
sar ['ecx,', '5']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_C8],', 'ecx']
jmp ['loc_588']
cmp ['[ebp+arg_4],', '10FFFFh']
jbe ['short', 'loc_521']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '80h']
mov ['[ebp+var_CC],', 'eax']
jmp ['short', 'loc_57C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_53A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_D0],', 'ecx']
jmp ['short', 'loc_570']
mov ['edx,', '[ebp+arg_4]']
sar ['edx,', '0Bh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2+1040h]']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['edx,', '[ebp+arg_4]']
and ['edx,', '1Fh']
lea ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['[ebp+var_CC],', 'ecx']
mov ['edx,', '[ebp+var_CC]']
mov ['[ebp+var_C8],', 'edx']
mov ['eax,', '[ebp+var_C8]']
mov ['[ebp+var_C4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_C4]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
jmp ['loc_6E8']
jmp ['loc_6E8']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['loc_6C0']
cmp ['[ebp+arg_4],', '0D800h']
jnb ['short', 'loc_5E6']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_C4],', 'edx']
jmp ['loc_6AD']
cmp ['[ebp+arg_4],', '0FFFFh']
ja ['short', 'loc_625']
xor ['eax,', 'eax']
cmp ['[ebp+arg_4],', '0DBFFh']
setnle ['al']
sub ['eax,', '1']
and ['eax,', '140h']
mov ['ecx,', '[ebp+arg_4]']
sar ['ecx,', '5']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_C8],', 'ecx']
jmp ['short', 'loc_6A1']
cmp ['[ebp+arg_4],', '10FFFFh']
jbe ['short', 'loc_63A']
mov ['[ebp+var_CC],', '80h']
jmp ['short', 'loc_695']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+20h]']
jl ['short', 'loc_653']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_689']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '0Bh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2+1040h]']
mov ['ecx,', '[ebp+arg_4]']
sar ['ecx,', '5']
and ['ecx,', '3Fh']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_D0]']
mov ['[ebp+var_CC],', 'edx']
mov ['eax,', '[ebp+var_CC]']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_C4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_C4]']
mov ['eax,', '[eax+ecx*4]']
jmp ['short', 'loc_6E8']
jmp ['short', 'loc_6E8']
cmp ['[ebp+arg_4],', '10FFFFh']
jbe ['short', 'loc_6D3']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+1Ch]']
jmp ['short', 'loc_6E8']
jmp ['short', 'loc_6E8']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
push ['edx']
call ['?get32@@YAIPBUUNewTrie2@@HC@Z']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?get32@@YAIPBUUNewTrie2@@HC@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+23324h]']
jl ['short', 'loc_757']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_73F']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_757']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+23314h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+23300h]']
mov ['eax,', '[eax+ecx*4-10h]']
jmp ['short', 'loc_7BB']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_77E']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_77E']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '5']
add ['eax,', '140h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_796']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '0Bh']
mov ['ecx,', '[ebp+arg_4]']
sar ['ecx,', '5']
and ['ecx,', '3Fh']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4+880h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1Fh']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+23300h]']
mov ['eax,', '[edx+eax*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_get32FromLeadSurrogateCodeUnit_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_7F9']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+1Ch]']
jmp ['short', 'loc_86A']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_827']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
jmp ['short', 'loc_86A']
jmp ['short', 'loc_86A']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_855']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['eax,', '[ecx+edx*4]']
jmp ['short', 'loc_86A']
jmp ['short', 'loc_86A']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
push ['edx']
call ['?get32@@YAIPBUUNewTrie2@@HC@Z']
add ['esp,', '0Ch']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_internalU8NextIndex_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+arg_8]']
cmp ['eax,', '7']
jg ['short', 'loc_8BB']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_8C2']
mov ['[ebp+var_14],', '7']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_utf8_nextCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?u8Index@@YAHPBUUTrie2@@HH@Z']
add ['esp,', '0Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN6']
dd ['offset', '$LN5']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?u8Index@@YAHPBUUTrie2@@HH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E0]']
mov ['ecx,', '38h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0D800h']
jnb ['short', 'loc_97A']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_D0],', 'edx']
jmp ['loc_A6D']
cmp ['[ebp+arg_4],', '0FFFFh']
ja ['short', 'loc_9BC']
xor ['eax,', 'eax']
cmp ['[ebp+arg_4],', '0DBFFh']
setnle ['al']
sub ['eax,', '1']
and ['eax,', '140h']
mov ['ecx,', '[ebp+arg_4]']
sar ['ecx,', '5']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_D4],', 'ecx']
jmp ['loc_A61']
cmp ['[ebp+arg_4],', '10FFFFh']
jbe ['short', 'loc_9FA']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_9DC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_D8],', 'ecx']
jmp ['short', 'loc_9E6']
mov ['[ebp+var_D8],', '0']
mov ['edx,', '[ebp+var_D8]']
add ['edx,', '80h']
mov ['[ebp+var_DC],', 'edx']
jmp ['short', 'loc_A55']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+20h]']
jl ['short', 'loc_A13']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
mov ['[ebp+var_E0],', 'eax']
jmp ['short', 'loc_A49']
mov ['ecx,', '[ebp+arg_4]']
sar ['ecx,', '0Bh']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2+1040h]']
mov ['edx,', '[ebp+arg_4]']
sar ['edx,', '5']
and ['edx,', '3Fh']
add ['ecx,', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_E0],', 'edx']
mov ['eax,', '[ebp+var_E0]']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+var_DC]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '3']
or ['eax,', '[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_internalU8PrevIndex_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+arg_8]']
cmp ['eax,', '7']
jg ['short', 'loc_AC2']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_AD8']
mov ['[ebp+var_14],', '7']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '7']
mov ['[ebp+arg_8],', 'eax']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_utf8_prevCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?u8Index@@YAHPBUUTrie2@@HH@Z']
add ['esp,', '0Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_0']
dd ['offset', '$LN5_0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_openFromSerialized_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '134h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_134]']
mov ['ecx,', '4Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_B8A']
xor ['eax,', 'eax']
jmp ['loc_DE0']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_BA4']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '3']
jnz ['short', 'loc_BA4']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_BA4']
cmp ['[ebp+arg_0],', '2']
jl ['short', 'loc_BB4']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_DE0']
cmp ['[ebp+arg_8],', '10h']
jge ['short', 'loc_BCA']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['loc_DE0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '54726932h']
jz ['short', 'loc_BEB']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['loc_DE0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '0Fh']
cmp ['[ebp+arg_0],', 'ecx']
jz ['short', 'loc_C0A']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['loc_DE0']
push ['38h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+6]']
mov ['[ebp+var_54],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
shl ['ecx,', '2']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax+0Ah]']
mov ['[ebp+var_4C],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax+0Ch]']
mov ['[ebp+var_4A],', 'cx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Eh]']
shl ['ecx,', '0Bh']
mov ['[ebp+var_40],', 'ecx']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '4']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_C6C']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_54]']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_54]']
lea ['ecx,', '[eax+eax+10h]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_C8A']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_C96']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_CAE']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['loc_DE0']
push ['38h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_6C],', 'eax']
cmp ['[ebp+var_6C],', '0']
jnz ['short', 'loc_CD1']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_DE0']
push ['1']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['38h']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_6C]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+28h],', 'ecx']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_6C]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_134],', 'eax']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_D47']
cmp ['[ebp+var_134],', '1']
jz ['short', 'loc_D85']
jmp ['short', 'loc_DC2']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_6C]']
movzx ['ecx,', 'word', 'ptr', '[eax+16h]']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['edx,', '[ebp+var_6C]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'word', 'ptr', '[ecx+100h]']
mov ['eax,', '[ebp+var_6C]']
mov ['[eax+1Ch],', 'edx']
jmp ['short', 'loc_DCF']
mov ['eax,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_6C]']
movzx ['ecx,', 'word', 'ptr', '[eax+16h]']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx+8]']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[eax+ecx*4]']
mov ['[edx+18h],', 'eax']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ecx+200h]']
mov ['[edx+1Ch],', 'eax']
jmp ['short', 'loc_DCF']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['short', 'loc_DE0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_DDD']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_6C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '134h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN21']
dd ['offset', '$LN20']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_openDummy_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_E8E']
xor ['eax,', 'eax']
jmp ['loc_121A']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_E9A']
cmp ['[ebp+arg_0],', '2']
jl ['short', 'loc_EAA']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_121A']
mov ['[ebp+var_38],', '840h']
mov ['[ebp+var_44],', '0C4h']
mov ['eax,', '[ebp+var_38]']
lea ['ecx,', '[eax+eax+10h]']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_ED6']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_50]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_EE2']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_50]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
push ['38h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_F05']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_121A']
push ['38h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+28h],', 'eax']
mov ['eax,', '[ebp+Dst]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jnz ['short', 'loc_F4C']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_121A']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+30h],', '1']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_F6A']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_F71']
mov ['[ebp+var_68],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+10h],', 'ecx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+14h],', 'ax']
mov ['eax,', '[ebp+Dst]']
mov ['cx,', 'word', 'ptr', '[ebp+var_68]']
mov ['[eax+16h],', 'cx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '0C0h']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+24h],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', '54726932h']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+arg_0]']
mov ['[eax+4],', 'cx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+var_38]']
mov ['[eax+6],', 'cx']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '2']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'ax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ah],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+var_68]']
mov ['[eax+0Ch],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Eh],', 'ax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '10h']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_1036']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '820h']
jge ['short', 'loc_1056']
mov ['eax,', '[ebp+var_68]']
sar ['eax,', '2']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_102D']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_1068']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '2']
jge ['short', 'loc_1087']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '80h']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_105F']
jmp ['short', 'loc_1092']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '20h']
jge ['short', 'loc_10AD']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_1089']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_130],', 'eax']
cmp ['[ebp+var_130],', '0']
jz ['short', 'loc_10D1']
cmp ['[ebp+var_130],', '1']
jz ['loc_116F']
jmp ['loc_120A']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_10F6']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '80h']
jge ['short', 'loc_1114']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+arg_4]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_10ED']
jmp ['short', 'loc_111F']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0C0h']
jge ['short', 'loc_113D']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+arg_8]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_1116']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_114F']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '4']
jge ['short', 'loc_116A']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+arg_4]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_1146']
jmp ['loc_1217']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_119A']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '80h']
jge ['short', 'loc_11B6']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '4']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_1191']
jmp ['short', 'loc_11C1']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0C0h']
jge ['short', 'loc_11DD']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '4']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_11B8']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_11EF']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '4']
jge ['short', 'loc_1208']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '4']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_11E6']
jmp ['short', 'loc_1217']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_121A']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_close_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_12A7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+30h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_126E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+34h],', '0']
jz ['short', 'loc_129B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+23300h]']
push ['edx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_getVersion_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '10h']
jl ['short', 'loc_12EE']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_12EE']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '3']
jz ['short', 'loc_12F2']
xor ['eax,', 'eax']
jmp ['short', 'loc_134C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '54726932h']
jnz ['short', 'loc_130A']
mov ['eax,', '2']
jmp ['short', 'loc_134C']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_1322']
cmp ['[ebp+var_8],', '32697254h']
jnz ['short', 'loc_1322']
mov ['eax,', '2']
jmp ['short', 'loc_134C']
cmp ['[ebp+var_8],', '54726965h']
jnz ['short', 'loc_1332']
mov ['eax,', '1']
jmp ['short', 'loc_134C']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_134A']
cmp ['[ebp+var_8],', '65697254h']
jnz ['short', 'loc_134A']
mov ['eax,', '1']
jmp ['short', 'loc_134C']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_isFrozen_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+34h],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_serialize_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_13BE']
xor ['eax,', 'eax']
jmp ['loc_1444']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_13F0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jz ['short', 'loc_13F0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+34h],', '0']
jnz ['short', 'loc_13F0']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_13F0']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_13FD']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_13F0']
mov ['eax,', '[ebp+Dst]']
and ['eax,', '3']
jz ['short', 'loc_13FD']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_1444']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
cmp ['ecx,', '[eax+2Ch]']
jl ['short', 'loc_1435']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_143E']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+2Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_swap_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '11Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_11C]']
mov ['ecx,', '47h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_149C']
xor ['eax,', 'eax']
jmp ['loc_1752']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_14B4']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_14B4']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_14C4']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_14C4']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_1752']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_14E0']
cmp ['[ebp+arg_8],', '10h']
jge ['short', 'loc_14E0']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_1752']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'word', 'ptr', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'ax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'word', 'ptr', '[eax+6]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1E],', 'ax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C],', 'ax']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0Fh']
mov ['[ebp+var_48],', 'eax']
movzx ['eax,', '[ebp+var_1C]']
shl ['eax,', '2']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_24],', '54726932h']
jnz ['short', 'loc_15A0']
cmp ['[ebp+var_48],', '0']
jl ['short', 'loc_15A0']
cmp ['[ebp+var_48],', '2']
jge ['short', 'loc_15A0']
movzx ['eax,', '[ebp+var_1E]']
cmp ['eax,', '840h']
jl ['short', 'loc_15A0']
cmp ['[ebp+var_30],', '0C0h']
jge ['short', 'loc_15B0']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['loc_1752']
movzx ['eax,', '[ebp+var_1E]']
lea ['ecx,', '[eax+eax+10h]']
mov ['[ebp+var_3C],', 'ecx']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_11C],', 'eax']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_15D8']
cmp ['[ebp+var_11C],', '1']
jz ['short', 'loc_15E6']
jmp ['short', 'loc_15F4']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_3C]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_3C],', 'edx']
jmp ['short', 'loc_1604']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_3C]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_3C],', 'edx']
jmp ['short', 'loc_1604']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['loc_1752']
cmp ['[ebp+arg_8],', '0']
jl ['loc_174F']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_3C]']
jge ['short', 'loc_1626']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_1752']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_54],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
add ['ecx,', '4']
push ['ecx']
push ['0Ch']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_11C],', 'eax']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_169E']
cmp ['[ebp+var_11C],', '1']
jz ['short', 'loc_16D4']
jmp ['loc_1742']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
add ['ecx,', '10h']
push ['ecx']
movzx ['edx,', '[ebp+var_1E]']
add ['edx,', '[ebp+var_30]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_174F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
add ['ecx,', '10h']
push ['ecx']
movzx ['edx,', '[ebp+var_1E]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+var_1E]']
mov ['edx,', '[ebp+var_54]']
lea ['eax,', '[edx+ecx*2+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
shl ['ecx,', '2']
push ['ecx']
movzx ['edx,', '[ebp+var_1E]']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+edx*2+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_174F']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['short', 'loc_1752']
mov ['eax,', '[ebp+var_3C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '11Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN22_0']
dd ['offset', '$LN21_0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_enum_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['110000h']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?enumEitherTrie@@YAXPBUUTrie2@@HHP6AIPBXI@ZP6AC1HHI@Z1@Z']
add ['esp,', '18h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?enumEitherTrie@@YAXPBUUTrie2@@HHP6AIPBXI@ZP6AC1HHI@Z1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1A8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1A8]']
mov ['ecx,', '6Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_10],', '0']
jnz ['short', 'loc_181D']
jmp ['loc_1DEA']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_182A']
mov ['[ebp+arg_C],', 'offset', '?enumSameValue@@YAIPBXI@Z']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+34h],', '0']
jnz ['short', 'loc_188B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_1866']
mov ['eax,', 'ds:?__LINE__Var@?1??enumEitherTrie@@YAXPBUUTrie2@@HHP6AIPBXI@ZP6AC1HHI@Z1@Z@4JA@d5d937bd']
add ['eax,', '12h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@PALNECJH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1O@LPBGOKFA@?$AAi?$AAd?$AAx?$AA?$CB?$AA?$DN?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+14h]']
mov ['[ebp+var_8C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+16h]']
mov ['[ebp+var_B0],', 'ecx']
jmp ['short', 'loc_18F0']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+23300h]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_18CC']
mov ['eax,', 'ds:?__LINE__Var@?1??enumEitherTrie@@YAXPBUUTrie2@@HHP6AIPBXI@ZP6AC1HHI@Z1@Z@4JA@d5d937bd']
add ['eax,', '1Bh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@PALNECJH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BE@PBHNKIKN@?$AAd?$AAa?$AAt?$AAa?$AA3?$AA2?$AA?$CB?$AA?$DN?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+2331Ch]']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+23320h]']
mov ['[ebp+var_B0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
call ['[ebp+arg_C]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_80],', '0FFFFFFFFh']
mov ['[ebp+var_A4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+arg_8]']
jge ['loc_1CDC']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_5C]']
jge ['loc_1CDC']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '800h']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_BC]']
jge ['short', 'loc_1974']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_44],', '0FFFFh']
jg ['loc_1A0B']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_199B']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '5']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_1A09']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '400h']
jnz ['short', 'loc_19D8']
mov ['[ebp+var_74],', '800h']
cmp ['[ebp+arg_8],', '0DC00h']
jle ['short', 'loc_19C1']
mov ['[ebp+var_1A8],', '0DC00h']
jmp ['short', 'loc_19CA']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_1A8],', 'eax']
mov ['ecx,', '[ebp+var_1A8]']
mov ['[ebp+var_BC],', 'ecx']
jmp ['short', 'loc_1A09']
mov ['[ebp+var_74],', '6C0h']
cmp ['[ebp+arg_8],', '0E000h']
jle ['short', 'loc_19F4']
mov ['[ebp+var_1A8],', '0E000h']
jmp ['short', 'loc_19FD']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_1A8],', 'eax']
mov ['ecx,', '[ebp+var_1A8]']
mov ['[ebp+var_BC],', 'ecx']
jmp ['short', 'loc_1A5E']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1A27']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '0Bh']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+1040h]']
mov ['[ebp+var_74],', 'edx']
jmp ['short', 'loc_1A39']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '0Bh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+eax*4]']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_80]']
jnz ['short', 'loc_1A5E']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_50]']
cmp ['eax,', '800h']
jl ['short', 'loc_1A5E']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '800h']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_193A']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_8C]']
jnz ['short', 'loc_1AD5']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jz ['short', 'loc_1AC5']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_1AAD']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['[ebp+arg_10]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1AAD']
jmp ['loc_1DEA']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '800h']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_1CD7']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '5']
and ['eax,', '3Fh']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '0Bh']
mov ['ecx,', '[ebp+var_BC]']
sar ['ecx,', '0Bh']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_1B0B']
mov ['eax,', '[ebp+var_BC]']
sar ['eax,', '5']
and ['eax,', '3Fh']
mov ['[ebp+var_D4],', 'eax']
jmp ['short', 'loc_1B15']
mov ['[ebp+var_D4],', '40h']
jmp ['short', 'loc_1B26']
mov ['eax,', '[ebp+var_C8]']
add ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_C8]']
cmp ['eax,', '[ebp+var_D4]']
jge ['loc_1CD7']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1B59']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '[ebp+var_C8]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
shl ['edx,', '2']
mov ['[ebp+var_98],', 'edx']
jmp ['short', 'loc_1B75']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ebp+var_74]']
add ['edx,', '[ebp+var_C8]']
mov ['eax,', '[ecx+edx*4+880h]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
cmp ['eax,', '[ebp+var_A4]']
jnz ['short', 'loc_1B9C']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_50]']
cmp ['eax,', '20h']
jl ['short', 'loc_1B9C']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '20h']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_1B17']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_98]']
cmp ['eax,', '[ebp+var_B0]']
jnz ['short', 'loc_1C0E']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jz ['short', 'loc_1C00']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_1BF4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['[ebp+arg_10]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1BF4']
jmp ['loc_1DEA']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '20h']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_1CD2']
mov ['[ebp+var_68],', '0']
jmp ['short', 'loc_1C20']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '20h']
jge ['loc_1CD2']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1C47']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_1A8],', 'edx']
jmp ['short', 'loc_1C5D']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_1A8],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_1A8]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
call ['[ebp+arg_C]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jz ['short', 'loc_1CC4']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_1CB8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['[ebp+arg_10]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1CB8']
jmp ['loc_1DEA']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_1C17']
jmp ['loc_1B17']
jmp ['loc_193A']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+arg_8]']
jle ['short', 'loc_1CEF']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_1DC8']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+arg_8]']
jge ['loc_1DC8']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1D3C']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1D1B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_1A8],', 'eax']
jmp ['short', 'loc_1D2E']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['[ebp+var_1A8],', 'ecx']
mov ['edx,', '[ebp+var_1A8]']
mov ['[ebp+var_E0],', 'edx']
jmp ['short', 'loc_1D5E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
mov ['edx,', '[eax+23314h]']
mov ['eax,', '[ecx+23300h]']
mov ['ecx,', '[eax+edx*4-10h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_E0]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
call ['[ebp+arg_C]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jz ['short', 'loc_1DC2']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_1DB6']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['[ebp+arg_10]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1DB6']
jmp ['short', 'loc_1DEA']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_44],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['[ebp+arg_10]']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1A8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1BE@PBHNKIKN@?$AAd?$AAa?$AAt?$AAa?$AA3?$AA2?$AA?$CB?$AA?$DN?$AA0?$AA?$AA@']
unicode ['0,', '<data32!=0>,0']
assume ['cs:_rdata']
public ['??_C@_1O@LPBGOKFA@?$AAi?$AAd?$AAx?$AA?$CB?$AA?$DN?$AA0?$AA?$AA@']
unicode ['0,', '<idx!=0>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FK@PALNECJH@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\utrie2.cpp>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??enumEitherTrie@@YAXPBUUTrie2@@HHP6AIPBXI@ZP6AC1HHI@Z1@Z@4JA@d5d937bd']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?enumSameValue@@YAIPBXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie2_enumForLeadSurrogate_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_1EDB']
jmp ['short', 'loc_1F0E']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '0D7C0h']
shl ['eax,', '0Ah']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '400h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?enumEitherTrie@@YAXPBUUTrie2@@HHP6AIPBXI@ZP6AC1HHI@Z1@Z']
add ['esp,', '18h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?previous16@BackwardUTrie2StringIterator@icu_56@@QAEGXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+4]']
jb ['short', 'loc_1F72']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
xor ['eax,', 'eax']
jmp ['loc_20D9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '2']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_1FDC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+10h]']
jz ['short', 'loc_1FDC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['dx,', '[ecx-2]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_2034']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_8]']
mov ['edx,', '[edx+0Ch]']
and ['edx,', '0FFFFFC00h']
sub ['edx,', '0D800h']
neg ['edx']
sbb ['edx,', 'edx']
and ['edx,', '0FFFFFEC0h']
add ['edx,', '140h']
mov ['esi,', '[ebp+var_8]']
mov ['esi,', '[esi+0Ch]']
sar ['esi,', '5']
add ['edx,', 'esi']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_14],', 'cx']
jmp ['loc_20D5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
movzx ['eax,', '[ebp+var_20]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
lea ['eax,', '[eax+edx-35FDC00h]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
cmp ['eax,', '[ecx+20h]']
jl ['short', 'loc_207D']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+24h]']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_20C0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
sar ['eax,', '0Bh']
mov ['ecx,', '[ecx]']
movzx ['eax,', 'word', 'ptr', '[ecx+eax*2+1040h]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+0Ch]']
sar ['ecx,', '5']
and ['ecx,', '3Fh']
add ['eax,', 'ecx']
mov ['edx,', '[edx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
and ['edx,', '1Fh']
lea ['eax,', '[edx+eax*4]']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_E8]']
mov ['dx,', '[eax+ecx*2]']
mov ['[ebp+var_14],', 'dx']
mov ['ax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?next16@ForwardUTrie2StringIterator@icu_56@@QAEGXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+10h]']
jnz ['short', 'loc_212E']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
xor ['eax,', 'eax']
jmp ['loc_229C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '2']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0D800h']
jz ['short', 'loc_2194']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_8]']
mov ['edx,', '[edx+0Ch]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_14],', 'cx']
jmp ['loc_2298']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+10h]']
jz ['short', 'loc_21BF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['dx,', '[ecx]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jz ['short', 'loc_21F7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_8]']
mov ['edx,', '[edx+0Ch]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+280h]']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_14],', 'cx']
jmp ['loc_2298']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '0Ah']
movzx ['edx,', '[ebp+var_20]']
lea ['eax,', '[ecx+edx-35FDC00h]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
cmp ['eax,', '[ecx+20h]']
jl ['short', 'loc_2240']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+24h]']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_2283']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
sar ['eax,', '0Bh']
mov ['ecx,', '[ecx]']
movzx ['eax,', 'word', 'ptr', '[ecx+eax*2+1040h]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+0Ch]']
sar ['ecx,', '5']
and ['ecx,', '3Fh']
add ['eax,', 'ecx']
mov ['edx,', '[edx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
and ['edx,', '1Fh']
lea ['eax,', '[edx+eax*4]']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_E8]']
mov ['dx,', '[eax+ecx*2]']
mov ['[ebp+var_14],', 'dx']
mov ['ax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1UObject@icu_56@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['_umtx_lock_56:near']
extrn ['_umtx_unlock_56:near']
extrn ['_utf8_nextCharSafeBody_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_utf8_prevCharSafeBody_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_uprv_malloc_56:near']
extrn ['_memset:near']
extrn ['_uprv_free_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__imp___wassert:near']
end

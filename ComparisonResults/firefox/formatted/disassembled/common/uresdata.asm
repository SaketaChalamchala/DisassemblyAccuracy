endp
_res_read_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['28h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_84']
jmp ['short', 'loc_C6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
push ['0']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_isAcceptable']
add ['esp,', '10h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_AA']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
jmp ['short', 'loc_C6']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_res_init']
add ['esp,', '14h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN5']
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_isAcceptable	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '0Ch']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['4']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '14h']
jl ['short', 'loc_1DA']
mov ['edx,', '[ebp+arg_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
test ['eax,', 'eax']
jnz ['short', 'loc_1DA']
mov ['ecx,', '[ebp+arg_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
test ['edx,', 'edx']
jnz ['short', 'loc_1DA']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+6]']
cmp ['ecx,', '2']
jnz ['short', 'loc_1DA']
mov ['edx,', '[ebp+arg_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
cmp ['eax,', '52h']
jnz ['short', 'loc_1DA']
mov ['ecx,', '[ebp+arg_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9]']
cmp ['edx,', '65h']
jnz ['short', 'loc_1DA']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '73h']
jnz ['short', 'loc_1DA']
mov ['edx,', '[ebp+arg_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Bh]']
cmp ['eax,', '42h']
jnz ['short', 'loc_1DA']
mov ['ecx,', '[ebp+arg_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ch]']
cmp ['edx,', '1']
jl ['short', 'loc_1DA']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '3']
jg ['short', 'loc_1DA']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_1E1']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', 'offset', '_gEmpty16']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_29B']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1']
jnz ['short', 'loc_263']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
test ['eax,', 'eax']
jnz ['short', 'loc_263']
mov ['[ebp+var_F4],', '1']
jmp ['short', 'loc_26D']
mov ['[ebp+var_F4],', '6']
mov ['eax,', '[ebp+arg_C]']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
cmp ['eax,', '[ebp+var_F4]']
jge ['short', 'loc_29B']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_res_unload_56']
add ['esp,', '4']
jmp ['loc_478']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
shr ['ecx,', '1Ch']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '2']
jz ['short', 'loc_2D3']
cmp ['[ebp+var_8],', '5']
jz ['short', 'loc_2D3']
cmp ['[ebp+var_8],', '4']
jz ['short', 'loc_2D3']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_res_unload_56']
add ['esp,', '4']
jmp ['loc_478']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1']
jnz ['short', 'loc_2F8']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2F8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '10000h']
jmp ['loc_45D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FFh']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '4']
jg ['short', 'loc_332']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_res_unload_56']
add ['esp,', '4']
jmp ['loc_478']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_36F']
mov ['eax,', '[ebp+var_20]']
lea ['ecx,', 'ds:4[eax*4]']
cmp ['[ebp+arg_C],', 'ecx']
jl ['short', 'loc_355']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '2']
cmp ['[ebp+arg_C],', 'ecx']
jge ['short', 'loc_36F']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_res_unload_56']
add ['esp,', '4']
jmp ['loc_478']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
cmp ['[ecx+4],', 'eax']
jle ['short', 'loc_38C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3']
jl ['short', 'loc_3A5']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
shr ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1Ch],', 'ecx']
cmp ['[ebp+var_20],', '5']
jle ['short', 'loc_401']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+24h],', 'al']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '2']
setnz ['cl']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+25h],', 'cl']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '4']
setnz ['cl']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+26h],', 'cl']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0F000h']
shl ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
or ['eax,', '[ecx+1Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1Ch],', 'eax']
mov ['eax,', '[ebp+var_2C]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+25h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_417']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+26h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_434']
cmp ['[ebp+var_20],', '7']
jg ['short', 'loc_434']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_res_unload_56']
add ['esp,', '4']
jmp ['short', 'loc_478']
cmp ['[ebp+var_20],', '6']
jle ['short', 'loc_45D']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+18h]']
cmp ['edx,', '[ecx+4]']
jle ['short', 'loc_45D']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
lea ['ecx,', '[eax+ecx*4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1']
jz ['short', 'loc_471']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_478']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+27h],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_load_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['28h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['offset', '_isAcceptable']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '??_C@_03FFIDGLAK@res?$AA@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_udata_openChoice_56']
add ['esp,', '18h']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_4EB']
jmp ['short', 'loc_510']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_udata_getMemory_56']
add ['esp,', '4']
push ['eax']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_res_init']
add ['esp,', '14h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_0']
dd ['offset', '$LN4']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03FFIDGLAK@res?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_unload_56	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_59D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_udata_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_getPublicType_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '1Ch']
movsx ['eax,', 'ds:_gPublicTypes[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_getString_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFFFh']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '1Ch']
cmp ['eax,', '6']
jnz ['loc_6E5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+1Ch]']
jnb ['short', 'loc_63C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*2]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_651']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax+1Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
lea ['ecx,', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jz ['short', 'loc_67A']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_6E3']
cmp ['[ebp+var_2C],', '0DFEFh']
jge ['short', 'loc_699']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '3FFh']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_6E3']
cmp ['[ebp+var_2C],', '0DFFFh']
jge ['short', 'loc_6C4']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '0DFEFh']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
or ['eax,', 'edx']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_6E3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+4]']
or ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_741']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_733']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_6FF']
mov ['[ebp+var_100],', 'offset', '_gEmptyString']
jmp ['short', 'loc_711']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_100],', 'eax']
mov ['ecx,', '[ebp+var_100]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_741']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_74F']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_getAlias_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFFFh']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '1Ch']
cmp ['eax,', '3']
jnz ['short', 'loc_7E2']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_7AE']
mov ['[ebp+var_F4],', 'offset', '_gEmptyString']
jmp ['short', 'loc_7C0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_F4],', 'eax']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_7F0']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_7FE']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_getBinary_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFFFh']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '1Ch']
cmp ['eax,', '1']
jnz ['short', 'loc_882']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_84E']
mov ['[ebp+var_F4],', 'offset', '_gEmpty32']
jmp ['short', 'loc_860']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_F4],', 'eax']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_890']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_89E']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_getIntVector_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFFFh']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '1Ch']
cmp ['eax,', '0Eh']
jnz ['short', 'loc_91C']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_8EE']
mov ['[ebp+var_E8],', 'offset', '_gEmpty32']
jmp ['short', 'loc_900']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_92A']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_938']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_countArrayItems_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFFFh']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '1Ch']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '0Eh']
ja ['$LN1']
mov ['ecx,', '[ebp+var_D0]']
movzx ['edx,', 'ds:$LN14[ecx]']
jmp ['ds:$LN15[edx*4]']
mov ['eax,', '1']
jmp ['short', 'loc_A0B']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_9B3']
mov ['[ebp+var_D0],', '0']
jmp ['short', 'loc_9C5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
jmp ['short', 'loc_A0B']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_9DF']
mov ['[ebp+var_D0],', '0']
jmp ['short', 'loc_9F2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*4]']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
jmp ['short', 'loc_A0B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
jmp ['short', 'loc_A0B']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN3']
dd ['offset', '$LN4_0']
dd ['offset', '$LN2']
dd ['offset', '$LN1']
db ['2,', '3,', '0,', '0']
db ['2,', '3,', '4,', '4']
db ['4,', '4,', '0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_getTableItemByKey_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFFFh']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A6F']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_A77']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_BFF']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '1Ch']
mov ['[ebp+var_118],', 'eax']
cmp ['[ebp+var_118],', '2']
jz ['short', 'loc_AAB']
cmp ['[ebp+var_118],', '4']
jz ['loc_B99']
cmp ['[ebp+var_118],', '5']
jz ['loc_B2B']
jmp ['loc_BFC']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_B26']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['__res_findTableItem']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_B26']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
lea ['edx,', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_14]']
not ['eax']
and ['eax,', '1']
lea ['ecx,', '[edx+eax*2]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_38]']
mov ['eax,', '[ecx+eax*4]']
jmp ['loc_BFF']
jmp ['loc_BFC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*2]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '2']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['__res_findTableItem']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_B97']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_44]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_makeResourceFrom16']
add ['esp,', '8']
jmp ['short', 'loc_BFF']
jmp ['short', 'loc_BFC']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BFC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['__res_findTable32Item']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_BFC']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_50]']
mov ['eax,', '[ecx+eax*4]']
jmp ['short', 'loc_BFF']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__res_findTableItem proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jge ['loc_D0E']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_2C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_0]']
cmp ['edx,', '[eax+14h]']
jge ['short', 'loc_C83']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+4]']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_CA1']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
sub ['eax,', '[ecx+14h]']
mov ['[ebp+var_100],', 'eax']
mov ['edx,', '[ebp+var_100]']
mov ['[ebp+Str2],', 'edx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+27h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_CCA']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_CDD']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jge ['short', 'loc_CEB']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_D09']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_CFC']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_D09']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+Str2]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_D11']
jmp ['loc_C3F']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__res_findTable32Item proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jge ['loc_E18']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_2C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jl ['short', 'loc_D90']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_4]']
add ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_DAB']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+eax*4]']
and ['edx,', '7FFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+0Ch]']
mov ['[ebp+var_100],', 'edx']
mov ['ecx,', '[ebp+var_100]']
mov ['[ebp+Str2],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+27h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_DD4']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_DE7']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jge ['short', 'loc_DF5']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_E13']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_E06']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_E13']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+Str2]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_E1B']
jmp ['loc_D53']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_makeResourceFrom16 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+20h]']
jge ['short', 'loc_E5B']
jmp ['short', 'loc_E6D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+1Ch]']
mov ['[ebp+arg_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
or ['eax,', '60000000h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_getTableItemByIndex_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFFFh']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_ED0']
mov ['eax,', 'ds:?__LINE__Var@?1??res_getTableItemByIndex_56@@9@9']
add ['eax,', '3']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@OHFGOEAM@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BE@HLFFIPOE@?$AAi?$AAn?$AAd?$AAe?$AAx?$AAR?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '1Ch']
mov ['[ebp+var_10C],', 'eax']
cmp ['[ebp+var_10C],', '2']
jz ['short', 'loc_F04']
cmp ['[ebp+var_10C],', '4']
jz ['loc_1060']
cmp ['[ebp+var_10C],', '5']
jz ['loc_FBA']
jmp ['loc_10EF']
cmp ['[ebp+var_8],', '0']
jz ['loc_FB5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_FB5']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_14]']
not ['eax']
and ['eax,', '1']
lea ['ecx,', '[edx+eax*2]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_FA7']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_0]']
cmp ['edx,', '[eax+14h]']
jge ['short', 'loc_F7E']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_20]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+4]']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_F9C']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
sub ['eax,', '[ecx+14h]']
mov ['[ebp+var_10C],', 'eax']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_10C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_2C]']
mov ['eax,', '[ecx+eax*4]']
jmp ['loc_10F2']
jmp ['loc_10EF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*2]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_105B']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_103C']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_0]']
cmp ['edx,', '[eax+14h]']
jge ['short', 'loc_1013']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_38]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+4]']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_1031']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
sub ['eax,', '[ecx+14h]']
mov ['[ebp+var_10C],', 'eax']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_10C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_makeResourceFrom16']
add ['esp,', '8']
jmp ['loc_10F2']
jmp ['loc_10EF']
cmp ['[ebp+var_8],', '0']
jz ['loc_10EF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_10EF']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_10E1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_44]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jl ['short', 'loc_10BB']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_44]']
add ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_10D6']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ecx+eax*4]']
and ['edx,', '7FFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+0Ch]']
mov ['[ebp+var_10C],', 'edx']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_10C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_44]']
mov ['eax,', '[ecx+eax*4]']
jmp ['short', 'loc_10F2']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BE@HLFFIPOE@?$AAi?$AAn?$AAd?$AAe?$AAx?$AAR?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@']
unicode ['0,', '<indexR>']
dw ['3Eh']
unicode ['0,', '<=0>,0']
assume ['cs:_rdata']
public ['??_C@_1FK@OHFGOEAM@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\uresdata.c>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??res_getTableItemByIndex_56@@9@9']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_getResource_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
lea ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_res_getTableItemByKey_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN5_2']
dd ['offset', '$LN3_0']
dd ['0FFFFFFECh,', '4']
dd ['offset', '$LN4_1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_getArrayItem_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFFFh']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_1260']
mov ['eax,', 'ds:?__LINE__Var@?1??res_getArrayItem_56@@9@9']
add ['eax,', '2']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@OHFGOEAM@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BE@HLFFIPOE@?$AAi?$AAn?$AAd?$AAe?$AAx?$AAR?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '1Ch']
mov ['[ebp+var_E8],', 'eax']
cmp ['[ebp+var_E8],', '8']
jz ['short', 'loc_1280']
cmp ['[ebp+var_E8],', '9']
jz ['short', 'loc_12AD']
jmp ['short', 'loc_12E1']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_12AB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_12AB']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[ecx+eax*4+4]']
jmp ['short', 'loc_12E4']
jmp ['short', 'loc_12E1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[ecx+edx*2]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['[ebp+arg_8],', 'ecx']
jge ['short', 'loc_12E1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_makeResourceFrom16']
add ['esp,', '8']
jmp ['short', 'loc_12E4']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_data']
public ['?__LINE__Var@?1??res_getArrayItem_56@@9@9']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_res_findResource_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+Str],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+EndPtr],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+var_2C]']
shr ['eax,', '1Ch']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_135F']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_151D']
cmp ['[ebp+var_50],', '2']
jz ['short', 'loc_1385']
cmp ['[ebp+var_50],', '5']
jz ['short', 'loc_1385']
cmp ['[ebp+var_50],', '4']
jz ['short', 'loc_1385']
cmp ['[ebp+var_50],', '8']
jz ['short', 'loc_1385']
cmp ['[ebp+var_50],', '9']
jz ['short', 'loc_1385']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_151D']
cmp ['[ebp+var_14],', '0']
jz ['loc_151A']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_151A']
cmp ['[ebp+var_2C],', '0FFFFFFFFh']
jz ['loc_151A']
cmp ['[ebp+var_50],', '2']
jz ['short', 'loc_13C9']
cmp ['[ebp+var_50],', '5']
jz ['short', 'loc_13C9']
cmp ['[ebp+var_50],', '4']
jz ['short', 'loc_13C9']
cmp ['[ebp+var_50],', '8']
jz ['short', 'loc_13C9']
cmp ['[ebp+var_50],', '9']
jnz ['loc_151A']
mov ['esi,', 'esp']
push ['2Fh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_13FD']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_141A']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_50],', '2']
jz ['short', 'loc_142C']
cmp ['[ebp+var_50],', '5']
jz ['short', 'loc_142C']
cmp ['[ebp+var_50],', '4']
jnz ['short', 'loc_1499']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+Str]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_res_getTableItemByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0FFFFFFFFh']
jnz ['short', 'loc_1497']
mov ['esi,', 'esp']
push ['0Ah']
lea ['eax,', '[ebp+EndPtr]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strtol']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+EndPtr]']
cmp ['eax,', '[ebp+Str]']
jz ['short', 'loc_1497']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_res_getTableItemByIndex_56']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_14FE']
cmp ['[ebp+var_50],', '8']
jz ['short', 'loc_14A5']
cmp ['[ebp+var_50],', '9']
jnz ['short', 'loc_14F7']
mov ['esi,', 'esp']
push ['0Ah']
lea ['eax,', '[ebp+EndPtr]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strtol']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+EndPtr]']
cmp ['eax,', '[ebp+Str]']
jz ['short', 'loc_14E5']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_res_getArrayItem_56']
add ['esp,', '0Ch']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_14EC']
mov ['[ebp+var_38],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_14FE']
mov ['[ebp+var_38],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
shr ['eax,', '1Ch']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+Str],', 'ecx']
jmp ['loc_1385']
mov ['eax,', '[ebp+var_2C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN23']
dd ['offset', '$LN21']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN22']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ures_swap_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E24h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E24]']
mov ['ecx,', '389h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_swapDataHeader_56']
add ['esp,', '14h']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_15CD']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_15D4']
xor ['eax,', 'eax']
jmp ['loc_1BB6']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '52h']
jnz ['short', 'loc_163D']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '65h']
jnz ['short', 'loc_163D']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '73h']
jnz ['short', 'loc_163D']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
cmp ['ecx,', '42h']
jnz ['short', 'loc_163D']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '1']
jnz ['short', 'loc_1625']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
cmp ['ecx,', '1']
jge ['short', 'loc_168E']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '2']
jz ['short', 'loc_168E']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '3']
jz ['short', 'loc_168E']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Bh]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
push ['edx']
push ['offset', '??_C@_0GC@DCLIMPGO@ures_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4?$CF0@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_1BB6']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+0Ch]']
mov ['[ebp+var_9B8],', 'cl']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_16AC']
mov ['[ebp+var_9E4],', '0FFFFFFFFh']
jmp ['short', 'loc_16F2']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_30]']
cdq
and ['edx,', '3']
add ['eax,', 'edx']
sar ['eax,', '2']
mov ['[ebp+var_9E4],', 'eax']
cmp ['[ebp+var_9E4],', '6']
jge ['short', 'loc_16F2']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_30]']
push ['eax']
push ['offset', '??_C@_0EE@FPCJDGKP@ures_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_1BB6']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_30]']
mov ['[ebp+Src],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+Src]']
add ['eax,', '4']
mov ['[ebp+var_9D8],', 'eax']
mov ['eax,', '[ebp+var_9D8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
and ['eax,', '0FFh']
mov ['[ebp+var_9F0],', 'eax']
cmp ['[ebp+var_9F0],', '4']
jg ['short', 'loc_176E']
push ['offset', '??_C@_0DJ@BDIDNCA@ures_swap?$CI?$CJ?3?5too?5few?5indexes?5for@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_1BB6']
mov ['eax,', '[ebp+var_9F0]']
add ['eax,', '1']
mov ['[ebp+var_9FC],', 'eax']
mov ['eax,', '[ebp+var_9D8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_A08],', 'eax']
cmp ['[ebp+var_9F0],', '6']
jle ['short', 'loc_17C0']
mov ['eax,', '[ebp+var_9D8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_A14],', 'eax']
jmp ['short', 'loc_17CC']
mov ['eax,', '[ebp+var_A08]']
mov ['[ebp+var_A14],', 'eax']
mov ['eax,', '[ebp+var_9D8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_A20],', 'eax']
mov ['eax,', '[ebp+var_9D8]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_9E4],', '0']
jl ['short', 'loc_1847']
mov ['eax,', '[ebp+var_9E4]']
cmp ['eax,', '[ebp+var_A20]']
jge ['short', 'loc_1847']
mov ['eax,', '[ebp+var_9E4]']
push ['eax']
mov ['ecx,', '[ebp+var_A20]']
push ['ecx']
push ['offset', '??_C@_0DH@BMPCLKBG@ures_swap?$CI?$CJ?3?5resource?5top?5?$CFd?5exc@']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_printError_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_1BB6']
mov ['eax,', '[ebp+var_9F0]']
add ['eax,', '1']
cmp ['[ebp+var_A08],', 'eax']
jle ['short', 'loc_1869']
mov ['eax,', '[ebp+var_A08]']
shl ['eax,', '2']
mov ['[ebp+var_9BC],', 'eax']
jmp ['short', 'loc_1873']
mov ['[ebp+var_9BC],', '0']
cmp ['[ebp+arg_8],', '0']
jl ['loc_1BAA']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_30]']
mov ['[ebp+var_A2C],', 'eax']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '1Fh']
sar ['eax,', '5']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+Size]']
add ['eax,', '3']
and ['eax,', '0FFFFFFFCh']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+Size],', '320h']
ja ['short', 'loc_18C4']
lea ['eax,', '[ebp+var_D54]']
mov ['[ebp+Dst],', 'eax']
jmp ['short', 'loc_1903']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_1903']
push ['offset', '??_C@_0DP@KGOIBCBC@ures_swap?$CI?$CJ?3?5unable?5to?5allocate?5@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_1BB6']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
jz ['short', 'loc_194E']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_A20]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_A2C]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_9FC]']
mov ['edx,', '[ebp+var_A2C]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_A08]']
sub ['ecx,', '[ebp+var_9FC]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+var_9FC]']
mov ['eax,', '[ebp+Src]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_swapInvStringBlock_56']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_19BB']
mov ['eax,', '[ebp+var_A08]']
sub ['eax,', '[ebp+var_9FC]']
shl ['eax,', '2']
push ['eax']
push ['offset', '??_C@_0DH@CFKJPKIA@ures_swap?$CI?$CJ?4udata_swapInvStringB@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jmp ['loc_1BB6']
mov ['eax,', '[ebp+var_A08]']
cmp ['eax,', '[ebp+var_A14]']
jge ['short', 'loc_1A41']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_A08]']
mov ['edx,', '[ebp+var_A2C]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_A14]']
sub ['ecx,', '[ebp+var_A08]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+var_A08]']
mov ['eax,', '[ebp+Src]']
lea ['ecx,', '[eax+edx*4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1A41']
mov ['eax,', '[ebp+var_A14]']
sub ['eax,', '[ebp+var_A08]']
shl ['eax,', '1']
push ['eax']
push ['offset', '??_C@_0DC@FKKCKLIN@ures_swap?$CI?$CJ?4swapArray16?$CI16?9bit?5u@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jmp ['loc_1BB6']
mov ['eax,', '[ebp+var_A2C]']
mov ['[ebp+var_9CC],', 'eax']
movzx ['eax,', '[ebp+var_9B8]']
cmp ['eax,', '1']
jg ['short', 'loc_1A62']
cmp ['[ebp+var_3C],', '0C8h']
jg ['short', 'loc_1A7C']
lea ['eax,', '[ebp+var_684]']
mov ['[ebp+var_9C8],', 'eax']
lea ['eax,', '[ebp+var_9AC]']
mov ['[ebp+var_9C4],', 'eax']
jmp ['short', 'loc_1AF6']
mov ['eax,', '[ebp+var_3C]']
shl ['eax,', '2']
mov ['ecx,', '[ebp+var_3C]']
lea ['edx,', '[eax+ecx*8]']
push ['edx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_9C8],', 'eax']
cmp ['[ebp+var_9C8],', '0']
jnz ['short', 'loc_1AE4']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
push ['offset', '??_C@_0EM@IJPGONAP@ures_swap?$CI?$CJ?3?5unable?5to?5allocate?5@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+Dst]']
lea ['ecx,', '[ebp+var_D54]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_1ADD']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_1BB6']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_9C8]']
lea ['edx,', '[ecx+eax*8]']
mov ['[ebp+var_9C4],', 'edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_9CC]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_A2C]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ures_swapResource']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1B3B']
mov ['eax,', '[ebp+var_24]']
push ['eax']
push ['offset', '??_C@_0CJ@NFBMAAND@ures_swapResource?$CIroot?5res?$DN?$CF08x?$CJ@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_9C8]']
lea ['ecx,', '[ebp+var_684]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_1B5A']
mov ['eax,', '[ebp+var_9C8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+Dst]']
lea ['ecx,', '[ebp+var_D54]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_1B79']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_A2C]']
push ['ecx']
mov ['edx,', '[ebp+var_9FC]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_A20]']
mov ['ecx,', '[ebp+var_30]']
lea ['eax,', '[ecx+eax*4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN38']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN37']
dd ['offset', '$LN33']
push ['esp']
idiv ['bh']
jmp ['dword', 'ptr', '[eax]']
db ['3,', '2', 'dup(0)']
dd ['offset', '$LN34']
dd ['0FFFFF634h,', '18h']
dd ['offset', '$LN35']
dd ['0FFFFF2ACh,', '320h']
dd ['offset', '$LN36']
assume ['cs:_rdata']
public ['??_C@_0CJ@NFBMAAND@ures_swapResource?$CIroot?5res?$DN?$CF08x?$CJ@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EM@IJPGONAP@ures_swap?$CI?$CJ?3?5unable?5to?5allocate?5@']
db ["'ngth:", "%d)',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0DC@FKKCKLIN@ures_swap?$CI?$CJ?4swapArray16?$CI16?9bit?5u@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DH@CFKJPKIA@ures_swap?$CI?$CJ?4udata_swapInvStringB@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DP@KGOIBCBC@ures_swap?$CI?$CJ?3?5unable?5to?5allocate?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DH@BMPCLKBG@ures_swap?$CI?$CJ?3?5resource?5top?5?$CFd?5exc@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DJ@BDIDNCA@ures_swap?$CI?$CJ?3?5too?5few?5indexes?5for@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EE@FPCJDGKP@ures_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd?5a@']
db ["'e',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0GC@DCLIMPGO@ures_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4?$CF0@']
db ["'.%02x)", 'is', 'not', 'a', 'resource', "bundle',0Ah,0"]
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ures_swapResource proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1ACh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1AC]']
mov ['ecx,', '6Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
shr ['eax,', '1Ch']
mov ['[ebp+var_1A8],', 'eax']
cmp ['[ebp+var_1A8],', '5']
jl ['short', 'loc_1ED0']
cmp ['[ebp+var_1A8],', '7']
jle ['short', 'loc_1ECB']
cmp ['[ebp+var_1A8],', '9']
jz ['short', 'loc_1ECB']
jmp ['short', 'loc_1ED0']
jmp ['loc_28A7']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '0FFFFFFFh']
mov ['[ebp+var_20],', 'eax']
jnz ['short', 'loc_1EE2']
jmp ['loc_28A7']
mov ['eax,', '[ebp+var_20]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx+0Ch]']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '1Fh']
mov ['esi,', '1']
shl ['esi,', 'cl']
and ['esi,', '[edx+eax*4]']
jz ['short', 'loc_1F07']
jmp ['loc_28A7']
jmp ['short', 'loc_1F32']
mov ['eax,', '[ebp+var_20]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx+0Ch]']
mov ['ecx,', '[ebp+var_20]']
and ['ecx,', '1Fh']
mov ['esi,', '1']
shl ['esi,', 'cl']
or ['esi,', '[edx+eax*4]']
mov ['eax,', '[ebp+var_20]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx+0Ch]']
mov ['[edx+eax*4],', 'esi']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_C]']
shr ['eax,', '1Ch']
mov ['[ebp+var_1A8],', 'eax']
cmp ['[ebp+var_1A8],', '0Eh']
ja ['$LN1_0']
mov ['ecx,', '[ebp+var_1A8]']
movzx ['edx,', 'ds:$LN69[ecx]']
jmp ['ds:$LN70[edx*4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_28A7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_10],', '0']
jz ['loc_20B6']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', 'ds:_gUnknownKey']
jz ['short', 'loc_206B']
mov ['esi,', 'esp']
push ['0Eh']
push ['offset', '_gCollationBinKey']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['[ebp+var_1A8],', 'eax']
jmp ['short', 'loc_208B']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucol_looksLikeCollationBinary_56']
add ['esp,', '0Ch']
movsx ['edx,', 'al']
mov ['[ebp+var_1A8],', 'edx']
cmp ['[ebp+var_1A8],', '0']
jz ['short', 'loc_20B6']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucol_swap_56']
add ['esp,', '14h']
jmp ['loc_28A7']
mov ['eax,', '[ebp+arg_C]']
shr ['eax,', '1Ch']
cmp ['eax,', '2']
jnz ['loc_216A']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+Dst],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'ax']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_5C],', '0']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_1A8],', 'eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '2']
mov ['[ebp+Dst],', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['[ebp+var_1AC],', 'edx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+var_1A8]']
push ['edx']
push ['2']
mov ['eax,', '[ebp+var_1AC]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '2']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
jmp ['loc_21F5']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+Dst],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_1A8],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '4']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+var_50]']
mov ['[ebp+var_1AC],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '4']
mov ['[ebp+var_50],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+var_1A8]']
push ['edx']
push ['4']
mov ['eax,', '[ebp+var_1AC]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_2200']
jmp ['loc_28A7']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_222A']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_2C]']
jge ['loc_2339']
mov ['eax,', 'ds:_gUnknownKey']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_228E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', 'ax']
mov ['[ebp+var_98],', 'edx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_98]']
cmp ['ecx,', '[eax+10h]']
jge ['short', 'loc_228C']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_98]']
mov ['[ebp+var_8C],', 'eax']
jmp ['short', 'loc_22C2']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+var_A4],', '0']
jl ['short', 'loc_22C2']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_8C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8C]']
push ['edx']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ures_swapResource']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_18]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_2334']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
push ['offset', '??_C@_0DM@GDNJIOPO@ures_swapResource?$CItable?5res?$DN?$CF08x@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '14h']
jmp ['loc_28A7']
jmp ['loc_2221']
mov ['eax,', '[ebp+arg_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+14h]']
cmp ['ecx,', '1']
jg ['short', 'loc_235B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
cmp ['ecx,', 'eax']
jnz ['loc_23EA']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_23B8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_23E5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '1']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_28A7']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_244C']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_2402']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_244A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_14]']
mov ['ecx,', '[edx+4]']
movzx ['edx,', 'ax']
mov ['eax,', '[ebp+var_74]']
mov ['[ecx+eax*8],', 'edx']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[ebp+var_74]']
mov ['[ecx+edx*8+4],', 'eax']
jmp ['short', 'loc_23F9']
jmp ['short', 'loc_249A']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_245E']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_249A']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+var_74]']
mov ['[edx+ecx*8],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[ebp+var_74]']
mov ['[ecx+edx*8+4],', 'eax']
jmp ['short', 'loc_2455']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx]']
push ['edx']
push ['offset', '_ures_compareRows']
push ['8']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_uprv_sortArray_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_18]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_24E6']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '??_C@_0ED@GKIPNJCO@ures_swapResource?$CItable?5res?$DN?$CF08x@']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_printError_56']
add ['esp,', '10h']
jmp ['loc_28A7']
cmp ['[ebp+var_38],', '0']
jz ['loc_25AA']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+Dst]']
jz ['short', 'loc_2503']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+Src],', 'eax']
jmp ['short', 'loc_250F']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+Src],', 'ecx']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_2521']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_2570']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[ecx+edx*8+4]']
mov ['[ebp+var_80],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+Src]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_80]']
mov ['edx,', '[ebp+var_38]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2518']
mov ['eax,', '[ebp+Dst]']
cmp ['eax,', '[ebp+Src]']
jz ['short', 'loc_25A5']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_2C]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['loc_2660']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jz ['short', 'loc_25BD']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_BC],', 'eax']
jmp ['short', 'loc_25C9']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_BC],', 'ecx']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_25DB']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_262A']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[ecx+edx*8+4]']
mov ['[ebp+var_80],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_BC]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+var_80]']
mov ['edx,', '[ebp+var_50]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_25D2']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_BC]']
jz ['short', 'loc_2660']
push ['1']
mov ['eax,', '[ebp+var_BC]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_2C]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+var_BC]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jz ['short', 'loc_2673']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_C8],', 'eax']
jmp ['short', 'loc_267F']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_C8],', 'ecx']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_2691']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_26E0']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[ecx+edx*8+4]']
mov ['[ebp+var_80],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_C8]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+var_80]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_2688']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_C8]']
jz ['short', 'loc_2716']
push ['1']
mov ['eax,', '[ebp+var_C8]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_2C]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+var_C8]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['loc_28A7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1A8],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_1AC],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+var_1A8]']
push ['edx']
push ['4']
mov ['eax,', '[ebp+var_1AC]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', '0']
jmp ['short', 'loc_279B']
mov ['eax,', '[ebp+var_E0]']
add ['eax,', '1']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+var_E0]']
cmp ['eax,', '[ebp+var_2C]']
jge ['loc_282B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_E0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_D4]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ures_swapResource']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_18]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_2826']
mov ['eax,', '[ebp+var_D4]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
push ['offset', '??_C@_0DM@JKJIHGDG@ures_swapResource?$CIarray?5res?$DN?$CF08x@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '14h']
jmp ['loc_28A7']
jmp ['loc_278C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_28A7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
lea ['eax,', 'ds:4[edx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_28A7']
mov ['eax,', '[ebp+arg_18]']
mov ['dword', 'ptr', '[eax],', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1ACh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN54']
dd ['offset', '$LN52']
dd ['offset', '$LN7_0']
dd ['offset', '$LN2_0']
dd ['offset', '$LN1_0']
db ['2,', '5,', '5,', '5']
db ['3,', '5,', '5,', '5']
db ['5,', '5,', '4']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DM@JKJIHGDG@ures_swapResource?$CIarray?5res?$DN?$CF08x@']
assume ['cs:_rdata']
public ['??_C@_0ED@GKIPNJCO@ures_swapResource?$CItable?5res?$DN?$CF08x@']
db ['0Ah,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DM@GDNJIOPO@ures_swapResource?$CItable?5res?$DN?$CF08x@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ures_compareRows proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[edx]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_memset:near']
extrn ['__RTC_CheckEsp:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_udata_getMemory_56:near']
extrn ['_udata_openChoice_56:near']
extrn ['_udata_close_56:near']
extrn ['_u_strlen_56:near']
extrn ['_strcmp:near']
extrn ['__imp___wassert:near']
extrn ['__imp__strtol:near']
extrn ['__imp__strchr:near']
extrn ['_strlen:near']
extrn ['_uprv_free_56:near']
extrn ['_udata_swapInvStringBlock_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_udata_readInt32_56:near']
extrn ['_udata_printError_56:near']
extrn ['_udata_swapDataHeader_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['_uprv_sortArray_56:near']
extrn ['_ucol_swap_56:near']
extrn ['_ucol_looksLikeCollationBinary_56:near']
end

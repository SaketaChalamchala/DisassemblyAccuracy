endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??2UMemory@icu_56@@SAPAXIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3UMemory@icu_56@@SAXPAX0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UObject@icu_56@@6B@']
public ['??_7UObject@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4UObject@icu_56@@6B@']
dd ['offset', '??_R0?AVUObject@icu_56@@@8']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_347']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_351']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UObject@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUObject@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3D7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUObject@icu_56@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_451']
push ['offset', '??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_449']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_470']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_46D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ParsePosition@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ParsePosition@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4ParsePosition@icu_56@@6B@']
public ['??_7ParsePosition@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@ParsePosition@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4ParsePosition@icu_56@@6B@']
dd ['offset', '??_R0?AVParsePosition@icu_56@@@8']
dd ['offset', '??_R3ParsePosition@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVParsePosition@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3ParsePosition@icu_56@@8']
dd ['3']
dd ['offset', '??_R2ParsePosition@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ParsePosition@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ParsePosition@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3ParsePosition@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ParsePosition@icu_56@@QAE@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ParsePosition@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ParsePosition@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ParsePosition@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GParsePosition@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ParsePosition@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_673']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EParsePosition@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_6ED']
push ['offset', '??1ParsePosition@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['0Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6E5']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_70C']
mov ['ecx,', '[ebp+var_8]']
call ['??1ParsePosition@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_709']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4ParsePosition@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8ParsePosition@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+4]']
cmp ['edx,', '[ecx+4]']
jnz ['short', 'loc_7AB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+8]']
jz ['short', 'loc_7B1']
xor ['al,', 'al']
jmp ['short', 'loc_7B3']
jmp ['short', 'loc_7B3']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9ParsePosition@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8ParsePosition@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getIndex@ParsePosition@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setIndex@ParsePosition@icu_56@@QAEXH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getErrorIndex@ParsePosition@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setErrorIndex@ParsePosition@icu_56@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SymbolTable@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SymbolTable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4SymbolTable@icu_56@@6B@']
public ['??_7SymbolTable@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4SymbolTable@icu_56@@6B@']
dd ['offset', '??_R0?AVSymbolTable@icu_56@@@8']
dd ['offset', '??_R3SymbolTable@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVSymbolTable@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3SymbolTable@icu_56@@8']
dd ['1']
dd ['offset', '??_R2SymbolTable@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2SymbolTable@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SymbolTable@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3SymbolTable@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SymbolTable@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SymbolTable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSymbolTable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SymbolTable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_A3B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ESymbolTable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_AB5']
push ['offset', '??1SymbolTable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_AAD']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_AD4']
mov ['ecx,', '[ebp+var_8]']
call ['??1SymbolTable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_AD1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_V@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFunctor@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFunctor@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFunctor@icu_56@@6B@']
public ['??_7UnicodeFunctor@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFunctor@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeFunctor@icu_56@@@8']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFunctor@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFunctor@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UnicodeFunctor@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFunctor@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_CD7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_D51']
push ['offset', '??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_D49']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_D70']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_D6D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeMatcher@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeMatcher@icu_56@@6B@']
public ['??_7UnicodeMatcher@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeMatcher@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeMatcher@icu_56@@@8']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeMatcher@icu_56@@@8']
dd ['0']
dd ['56413F2Eh,', '63696E55h,', '4D65646Fh']
assume ['cs:_rdata$r']
public ['??_R3UnicodeMatcher@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_EEB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_F65']
push ['offset', '??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_F5D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_F84']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_F81']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFilter@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UnicodeFunctor@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??0UnicodeMatcher@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
public ['??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
dd ['offset', '?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
public ['??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFilter@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFilter@icu_56@@8']
dd ['1,', '5']
dd ['offset', '??_R2UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
dd ['4,', '0']
dd ['offset', '??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1123']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_112D']
mov ['[ebp+var_D0],', '0']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_11AF']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_11B9']
mov ['[ebp+var_D0],', '0']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeFilter@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1223']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFilter@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_129D']
push ['offset', '??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1295']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_12BC']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_12B9']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4Replaceable@icu_56@@6B@']
public ['??_7Replaceable@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?hasMetaData@Replaceable@icu_56@@UBECXZ']
dd ['offset', '?clone@Replaceable@icu_56@@UBEPAV12@XZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4Replaceable@icu_56@@6B@']
dd ['offset', '??_R0?AVReplaceable@icu_56@@@8']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVReplaceable@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3Replaceable@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Replaceable@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_144F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_14C9']
push ['offset', '??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_14C1']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_14E8']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_14E5']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@IAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@Replaceable@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@Replaceable@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?char32At@Replaceable@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@PBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@StringPiece@icu_56@@QBEPBDXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@StringPiece@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@StringPiece@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@StringPiece@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clear@StringPiece@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@StringPiece@icu_56@@QAEXPBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_prefix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_18B9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_189D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_suffix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_1913']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jg ['short', 'loc_1909']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_1913']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ByteSink@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ByteSink@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4ByteSink@icu_56@@6B@']
public ['??_7ByteSink@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z']
dd ['offset', '?Flush@ByteSink@icu_56@@UAEXXZ']
assume ['cs:_rdata$r']
public ['??_R4ByteSink@icu_56@@6B@']
dd ['offset', '??_R0?AVByteSink@icu_56@@@8']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVByteSink@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3ByteSink@icu_56@@8']
dd ['2']
dd ['offset', '??_R2ByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1AA3']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1B1D']
push ['offset', '??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1B15']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1B3C']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1B39']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1CAB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1D25']
push ['offset', '??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['40h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1D1D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_1D44']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1D41']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_1D92']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1DAE']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx],', 'eax']
jle ['short', 'loc_1DAE']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_1E05']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1E17']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_14]']
jle ['short', 'loc_1E17']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_1E2A']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1E46']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['[edx],', 'ecx']
jle ['short', 'loc_1E46']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1E99']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_1EA5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1EF1']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_1EFD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeString@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0Replaceable@icu_56@@IAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeString@icu_56@@6B@']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeString@icu_56@@6B@']
public ['??_7UnicodeString@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ']
dd ['offset', '?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z']
dd ['offset', '?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z']
dd ['offset', '?copy@UnicodeString@icu_56@@UAEXHHH@Z']
dd ['offset', '?hasMetaData@UnicodeString@icu_56@@UBECXZ']
dd ['offset', '?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ']
dd ['offset', '?getLength@UnicodeString@icu_56@@MBEHXZ']
dd ['offset', '?getCharAt@UnicodeString@icu_56@@MBE_WH@Z']
dd ['offset', '?getChar32At@UnicodeString@icu_56@@MBEHH@Z']
assume ['cs:_rdata$r']
public ['??_R4UnicodeString@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeString@icu_56@@@8']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeString@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeString@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UnicodeString@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeString@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeString@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasShortLength@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getShortLength@UnicodeString@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
sar ['eax,', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasShortLength@UnicodeString@icu_56@@ABECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_20B6']
mov ['ecx,', '[ebp+var_8]']
call ['?getShortLength@UnicodeString@icu_56@@ABEHXZ']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_20C2']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_2117']
mov ['[ebp+var_D0],', '1Dh']
jmp ['short', 'loc_2123']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hashCode@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doHashCode@UnicodeString@icu_56@@ABEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBufferWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '19h']
jnz ['short', 'loc_222D']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+4]']
and ['eax,', '4']
jz ['short', 'loc_2224']
mov ['ecx,', '[ebp+var_8]']
call ['?refCount@UnicodeString@icu_56@@ABEHXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_222D']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_2234']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
jz ['short', 'loc_2285']
xor ['eax,', 'eax']
jmp ['short', 'loc_22A1']
jmp ['short', 'loc_22A1']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_229B']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '6']
jmp ['short', 'loc_22A1']
jmp ['short', 'loc_22A1']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_22EE']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_231F']
jmp ['short', 'loc_231F']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2376']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
jmp ['short', 'loc_23D0']
jmp ['short', 'loc_23D0']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_23C3']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_23C3']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_23C3']
mov ['[ebp+var_E5],', '1']
jmp ['short', 'loc_23CA']
mov ['[ebp+var_E5],', '0']
mov ['al,', '[ebp+var_E5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UnicodeString@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??OUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??MUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??PUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??NUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECPB_WH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_287A']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_28AB']
jmp ['short', 'loc_28AB']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2B76']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_2BAB']
jmp ['short', 'loc_2BAB']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_2EB7']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_2EB7']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_2EBA']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_W@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_33DF']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_33DF']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_33E2']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_381C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_388C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['esi,', 'eax']
push ['esi']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_39EC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_3A6A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
neg ['ecx']
sbb ['ecx,', 'ecx']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_D4],', '0']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_405B']
mov ['ecx,', '[ebp+var_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['ax,', '[eax+ecx*2]']
jmp ['short', 'loc_4060']
jmp ['short', 'loc_4060']
mov ['eax,', '0FFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@UnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AUnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
sar ['ecx,', '5']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setZeroLength@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setShortLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+arg_0]']
shl ['edx,', '5']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '3FFh']
jg ['short', 'loc_4202']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setShortLength@UnicodeString@icu_56@@AAEXH@Z']
jmp ['short', 'loc_421F']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
or ['ecx,', '0FFE0h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToEmpty@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4A34']
mov ['ecx,', '[ebp+var_8]']
call ['?setToEmpty@UnicodeString@icu_56@@AAEXXZ']
jmp ['short', 'loc_4A3C']
mov ['ecx,', '[ebp+var_8]']
call ['?setZeroLength@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jg ['short', 'loc_4A90']
cmp ['[ebp+arg_4],', '7FFFFFFFh']
jnz ['short', 'loc_4A90']
mov ['ecx,', '[ebp+var_8]']
call ['?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
jmp ['short', 'loc_4AA6']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?truncate@UnicodeString@icu_56@@QAECH@Z']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?truncate@UnicodeString@icu_56@@QAECH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4BB2']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_4BB2']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
xor ['al,', 'al']
jmp ['short', 'loc_4BD3']
jmp ['short', 'loc_4BD3']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_4BD1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['al,', '1']
jmp ['short', 'loc_4BD3']
jmp ['short', 'loc_4BD3']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeSet@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4CC3']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeSet@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_4D3D']
push ['offset', '??1UnicodeSet@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['34h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4D35']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_4D5C']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4D59']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UnicodeSet@icu_56@@QBECABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isFrozen@UnicodeSet@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_4E0E']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+2Ch],', '0']
jnz ['short', 'loc_4E0E']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_4E15']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECHH@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@UnicodeSet@icu_56@@QBECXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[eax+30h]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_5039']
mov ['[ebp+arg_4],', '0']
jmp ['short', 'loc_5047']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_5047']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
add ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_50C1']
mov ['[ebp+arg_4],', '0']
jmp ['short', 'loc_50CF']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_50CF']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4PatternProps@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4ICU_Utility@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@UVector@icu_56@@QBEHXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UVector@icu_56@@QBECXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UVector@icu_56@@QBECPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UVector@icu_56@@QBEHPAXH@Z']
test ['eax,', 'eax']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UVector@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UVector@icu_56@@QBEHHH@Z']
test ['eax,', 'eax']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?firstElement@UVector@icu_56@@QBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastElement@UVector@icu_56@@QBEPAXXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastElementi@UVector@icu_56@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAti@UVector@icu_56@@QBEHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AUVector@icu_56@@QBEPAXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UVector@icu_56@@QAECABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UVector@icu_56@@QAECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@UStack@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isEmpty@UVector@icu_56@@QBECXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?peek@UStack@icu_56@@QBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastElement@UVector@icu_56@@QBEPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?peeki@UStack@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastElementi@UVector@icu_56@@QBEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharString@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CharString@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+34h],', '0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z']
mov ['byte', 'ptr', '[eax],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CharString@icu_56@@QAE@XZ$0 proc near 
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ']
endp
__ehhandler$??0CharString@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CharString@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CharString@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??0CharString@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+34h],', '0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$0	proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ']
endp
__ehhandler$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+34h],', '0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ']
endp
__ehhandler$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0CharString@icu_56@@QAE@ABV01@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+34h],', '0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z$0 proc	near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ']
endp
__ehhandler$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0CharString@icu_56@@QAE@PBDHAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CharString@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@CharString@icu_56@@QBECXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+34h],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@CharString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+34h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??ACharString@icu_56@@QBEDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z']
mov ['al,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0StringPiece@icu_56@@QAE@PBDH@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@CharString@icu_56@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@CharString@icu_56@@QAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clear@CharString@icu_56@@QAEAAV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@StringPiece@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?data@StringPiece@icu_56@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@CharString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?data@CharString@icu_56@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1SymbolTable@icu_56@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SymbolTable@icu_56@@6B@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@UnicodeSet@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@UnicodeSet@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@UnicodeSet@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeSet@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0UnicodeSet@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0UnicodeFilter@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '11h']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_5D53']
jmp ['short', 'loc_5D8A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_5D82']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
mov ['dword', 'ptr', '[ecx],', '110000h']
jmp ['short', 'loc_5D8A']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN9']
dd ['offset', '$LN7']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0UnicodeSet@icu_56@@QAE@XZ$0 proc near 
mov ['ecx,', '[ebp-14h]']
jmp ['??1UnicodeFilter@icu_56@@UAE@XZ']
endp
__ehhandler$??0UnicodeSet@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0UnicodeSet@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
public ['??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
dd ['offset', '?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z']
dd ['offset', '?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z']
dd ['offset', '?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z']
dd ['offset', '?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
public ['??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '?getDynamicClassID@UnicodeSet@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ']
dd ['offset', '?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z']
dd ['offset', '?contains@UnicodeSet@icu_56@@UBECH@Z']
dd ['offset', '??8UnicodeSet@icu_56@@UBECABV01@@Z']
dd ['offset', '?hashCode@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?size@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?isEmpty@UnicodeSet@icu_56@@UBECXZ']
dd ['offset', '?contains@UnicodeSet@icu_56@@UBECHH@Z']
dd ['offset', '?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z']
dd ['offset', '?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
dd ['offset', '?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
dd ['offset', '?complement@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?clear@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ']
dd ['offset', '?getRangeCount@UnicodeSet@icu_56@@UBEHXZ']
dd ['offset', '?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z']
dd ['offset', '?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z']
dd ['offset', '?compact@UnicodeSet@icu_56@@UAEAAV12@XZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0UnicodeSet@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??0UnicodeSet@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '??_R0?AVUnicodeSet@icu_56@@@8']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeSet@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeSet@icu_56@@8']
dd ['1,', '6']
dd ['offset', '??_R2UnicodeSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeSet@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeSet@icu_56@@8']
dd ['5,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
dd ['4,', '0']
dd ['offset', '??_R0?AVUnicodeSet@icu_56@@@8']
dd ['offset', '??_R3UnicodeSet@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeSet@icu_56@@QAE@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0UnicodeSet@icu_56@@QAE@HH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0UnicodeFilter@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '11h']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6073']
jmp ['short', 'loc_60BA']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_60B2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
mov ['dword', 'ptr', '[ecx],', '110000h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z']
jmp ['short', 'loc_60BA']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN9_0']
dd ['offset', '$LN7_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0UnicodeSet@icu_56@@QAE@HH@Z$0 proc near 
mov ['ecx,', '[ebp-14h]']
jmp ['??1UnicodeFilter@icu_56@@UAE@XZ']
endp
__ehhandler$??0UnicodeSet@icu_56@@QAE@HH@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0E8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0UnicodeSet@icu_56@@QAE@HH@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0UnicodeSet@icu_56@@QAE@HH@Z$0']
dd ['offset', '__unwindtable$??0UnicodeSet@icu_56@@QAE@HH@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeSet@icu_56@@QAE@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0UnicodeSet@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0UnicodeFilter@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_61F7']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_E8],', 'edx']
jmp ['short', 'loc_6206']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '10h']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6291']
jmp ['short', 'loc_62C8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_62C0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
jmp ['short', 'loc_62C8']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
dd ['offset', '$LN11']
dd ['offset', '$LN9_1']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0UnicodeSet@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UnicodeFilter@icu_56@@UAE@XZ']
endp
__ehhandler$??0UnicodeSet@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0ECh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0UnicodeSet@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0UnicodeSet@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0UnicodeSet@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeSet@icu_56@@AAE@ABV01@C@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '12Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_138]']
mov ['ecx,', '4Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0UnicodeFilter@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '10h']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['[ebp+var_24],', '0']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_647A']
jmp ['loc_6575']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['loc_656D']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jz ['short', 'loc_650B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jz ['short', 'loc_650B']
lea ['eax,', '[ebp+var_24]']
push ['eax']
push ['offset', '?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+28h]']
call ['?assign@UVector@icu_56@@QAEXABV12@P6AXPATUElement@@1@ZAAW4UErrorCode@@@Z']
jmp ['short', 'loc_6515']
mov ['ecx,', '[ebp+var_18]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
jmp ['short', 'loc_6575']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_656B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
push ['eax']
lea ['ecx,', '[ebp+var_12C]']
call ['??0UnicodeString@icu_56@@QAE@PB_WH@Z']
mov ['[ebp+var_134],', 'eax']
mov ['ecx,', '[ebp+var_134]']
mov ['[ebp+var_138],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_138]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_12C]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
jmp ['short', 'loc_6575']
mov ['ecx,', '[ebp+var_18]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN13']
dd ['offset', '$LN11_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z$0 proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1UnicodeFilter@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z$1 proc near
lea ['ecx,', '[ebp-12Ch]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__ehhandler$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-13Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z$1']
dd ['offset', '__unwindtable$??0UnicodeSet@icu_56@@AAE@ABV01@C@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['40h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_66BE']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_D4]']
call ['??0UnicodeString@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_66C8']
mov ['[ebp+var_E8],', '0']
mov ['edx,', '[ebp+var_E8]']
mov ['[ebp+var_E0],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_E0]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z$0 proc near
mov ['eax,', '[ebp-0D4h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0ECh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z$0']
dd ['offset', '__unwindtable$?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1UnicodeSet@icu_56@@UAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1UnicodeSet@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_110]']
mov ['[ebp+var_11C],', 'edx']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_6811']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_11C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_11C]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_681B']
mov ['[ebp+var_124],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_6833']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_F8],', 'ecx']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'edx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_6879']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_104]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_6883']
mov ['[ebp+var_124],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_68B9']
push ['1']
mov ['ecx,', '[ebp+var_EC]']
call ['??_GUnicodeSetStringSpan@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_68C3']
mov ['[ebp+var_124],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1UnicodeSet@icu_56@@UAE@XZ$0 proc near 
mov ['ecx,', '[ebp-14h]']
jmp ['??1UnicodeFilter@icu_56@@UAE@XZ']
endp
__ehhandler$??1UnicodeSet@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-128h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1UnicodeSet@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1UnicodeSet@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1UnicodeSet@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeSetStringSpan@icu_56@@QAEPAXI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_698F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '15Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_168]']
mov ['ecx,', '57h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_69FD']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_6C8B']
mov ['ecx,', '[ebp+var_18]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6A14']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_6C8B']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6A33']
mov ['ecx,', '[ebp+var_18]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_6C8B']
mov ['[ebp+var_24],', '0']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6A68']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_6C8B']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_6ABD']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+14h],', '0']
jmp ['loc_6B4A']
push ['314h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_108],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_108],', '0']
jz ['short', 'loc_6B08']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['ecx,', '[ebp+var_108]']
call ['??0BMPSet@icu_56@@QAE@ABV01@PBHH@Z']
mov ['[ebp+var_164],', 'eax']
jmp ['short', 'loc_6B12']
mov ['[ebp+var_164],', '0']
mov ['eax,', '[ebp+var_164]']
mov ['[ebp+var_114],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_114]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_6B4A']
mov ['ecx,', '[ebp+var_18]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_6C8B']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jz ['short', 'loc_6B79']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jz ['short', 'loc_6B79']
lea ['eax,', '[ebp+var_24]']
push ['eax']
push ['offset', '?cloneUnicodeString@icu_56@@YAXPATUElement@@0@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+28h]']
call ['?assign@UVector@icu_56@@QAEXABV12@P6AXPATUElement@@1@ZAAW4UErrorCode@@@Z']
jmp ['short', 'loc_6B89']
mov ['ecx,', '[ebp+var_18]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_18]']
jmp ['loc_6C8B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jnz ['short', 'loc_6BA1']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
jmp ['loc_6C24']
push ['0D8h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_F0],', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_F0],', '0']
jz ['short', 'loc_6BE5']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_F0]']
call ['??0UnicodeSetStringSpan@icu_56@@QAE@ABV01@ABVUVector@1@@Z']
mov ['[ebp+var_164],', 'eax']
jmp ['short', 'loc_6BEF']
mov ['[ebp+var_164],', '0']
mov ['ecx,', '[ebp+var_164]']
mov ['[ebp+var_FC],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_FC]']
mov ['[edx+2Ch],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jnz ['short', 'loc_6C24']
mov ['ecx,', '[ebp+var_18]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_18]']
jmp ['short', 'loc_6C8B']
mov ['ecx,', '[ebp+var_18]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_6C88']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
push ['eax']
lea ['ecx,', '[ebp+var_15C]']
call ['??0UnicodeString@icu_56@@QAE@PB_WH@Z']
mov ['[ebp+var_164],', 'eax']
mov ['ecx,', '[ebp+var_164]']
mov ['[ebp+var_168],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['edx,', '[ebp+var_168]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_15C]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '168h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN25']
dd ['offset', '$LN23']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$0 proc near
mov ['eax,', '[ebp-108h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$1 proc near
mov ['eax,', '[ebp-0F0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$2 proc near
lea ['ecx,', '[ebp-15Ch]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__ehhandler$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-16Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$1']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z$2']
dd ['offset', '__unwindtable$??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['34h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_6DE5']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0UnicodeSet@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_6DEF']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_EC]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ$0 proc near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ$0']
dd ['offset', '__unwindtable$?clone@UnicodeSet@icu_56@@UBEPAVUnicodeFunctor@2@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['34h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_6EFB']
push ['1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0UnicodeSet@icu_56@@AAE@ABV01@C@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_6F05']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_EC]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ$0 proc near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ$0']
dd ['offset', '__unwindtable$?cloneAsThawed@UnicodeSet@icu_56@@QBEPAVUnicodeFunctor@2@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8UnicodeSet@icu_56@@UBECABV01@@Z proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+8]']
jz ['short', 'loc_6FCD']
xor ['al,', 'al']
jmp ['short', 'loc_7029']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_6FDF']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+8]']
jge ['short', 'loc_700A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', '[ebp+var_14]']
mov ['ecx,', '[ecx+edx*4]']
cmp ['ecx,', '[eax+esi*4]']
jz ['short', 'loc_7008']
xor ['al,', 'al']
jmp ['short', 'loc_7029']
jmp ['short', 'loc_6FD6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+28h]']
call ['??9UVector@icu_56@@QAECABV01@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_7027']
xor ['al,', 'al']
jmp ['short', 'loc_7029']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hashCode@UnicodeSet@icu_56@@UBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_707E']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+8]']
jge ['short', 'loc_70A9']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0F4243h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_7075']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@UnicodeSet@icu_56@@UBEHXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+60h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_7109']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_7155']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+68h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'eax']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+64h]']
call ['edx']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
sub ['esi,', 'eax']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[eax+esi+1]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_7100']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
call ['?size@UVector@icu_56@@QBEHXZ']
add ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UnicodeSet@icu_56@@UBECXZ proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '1']
jnz ['short', 'loc_71BC']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+28h]']
call ['?size@UVector@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_71BC']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_71C3']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UnicodeSet@icu_56@@UBECH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_722E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_726A']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_7248']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+2Ch]']
call ['?contains@UnicodeSetStringSpan@icu_56@@QBECH@Z']
jmp ['short', 'loc_726A']
cmp ['[ebp+arg_0],', '110000h']
jl ['short', 'loc_7255']
xor ['al,', 'al']
jmp ['short', 'loc_726A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UnicodeSetStringSpan@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx]']
jge ['short', 'loc_7308']
xor ['eax,', 'eax']
jmp ['short', 'loc_7375']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_7335']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ecx+edx*4-4]']
jl ['short', 'loc_733A']
mov ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_7375']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_20]']
sar ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_7351']
jmp ['short', 'loc_7372']
jmp ['short', 'loc_7370']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ecx+edx*4]']
jge ['short', 'loc_736A']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_7370']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_733A']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UnicodeSet@icu_56@@UBECHH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '1']
jz ['short', 'loc_73D4']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[edx+eax*4]']
jge ['short', 'loc_73D4']
mov ['[ebp+var_D9],', '1']
jmp ['short', 'loc_73DB']
mov ['[ebp+var_D9],', '0']
mov ['al,', '[ebp+var_D9]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_742B']
xor ['al,', 'al']
jmp ['short', 'loc_746D']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_7453']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+28h]']
call ['?contains@UVector@icu_56@@QBECPAX@Z']
jmp ['short', 'loc_746D']
jmp ['short', 'loc_746D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsAll@UnicodeSet@icu_56@@UBECABV12@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_74D2']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_7533']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+68h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['eax']
mov ['edi,', 'esp']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+64h]']
call ['edx']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_7531']
xor ['al,', 'al']
jmp ['short', 'loc_7552']
jmp ['short', 'loc_74C9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+28h]']
call ['?containsAll@UVector@icu_56@@QBECABV12@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_7550']
xor ['al,', 'al']
jmp ['short', 'loc_7552']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsAll@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsNone@UnicodeSet@icu_56@@QBECHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '1']
jnz ['short', 'loc_7620']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[edx+eax*4]']
jge ['short', 'loc_7620']
mov ['[ebp+var_D9],', '1']
jmp ['short', 'loc_7627']
mov ['[ebp+var_D9],', '0']
mov ['al,', '[ebp+var_D9]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_7692']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_76E5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+68h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+64h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_76E3']
xor ['al,', 'al']
jmp ['short', 'loc_7704']
jmp ['short', 'loc_7689']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+28h]']
call ['?containsNone@UVector@icu_56@@QBECABV12@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_7702']
xor ['al,', 'al']
jmp ['short', 'loc_7704']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?matchesIndexValue@UnicodeSet@icu_56@@EBECE@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax-4]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+60h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_77D2']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_7889']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx-4]']
mov ['edx,', '[eax+64h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx-4]']
mov ['edx,', '[eax+68h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFFFF00h']
mov ['ecx,', '[ebp+var_38]']
and ['ecx,', '0FFFFFF00h']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_785F']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFh']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ecx']
jg ['short', 'loc_785D']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
and ['ecx,', '0FFh']
cmp ['eax,', 'ecx']
jg ['short', 'loc_785D']
mov ['al,', '1']
jmp ['loc_78F1']
jmp ['short', 'loc_7884']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFh']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_7880']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
and ['ecx,', '0FFh']
cmp ['eax,', 'ecx']
jg ['short', 'loc_7884']
mov ['al,', '1']
jmp ['short', 'loc_78F1']
jmp ['loc_77C9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
call ['?size@UVector@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jz ['short', 'loc_78EF']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_78AA']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
call ['?size@UVector@icu_56@@QBEHXZ']
cmp ['[ebp+var_14],', 'eax']
jge ['short', 'loc_78EF']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+24h]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
mov ['[ebp+var_44],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_44]']
call ['?char32At@UnicodeString@icu_56@@QBEHH@Z']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
and ['eax,', '0FFh']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_78ED']
mov ['al,', '1']
jmp ['short', 'loc_78F1']
jmp ['short', 'loc_78A1']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?matches@UnicodeSet@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_8]']
jnz ['short', 'loc_7979']
mov ['esi,', 'esp']
push ['0FFFFh']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax-4]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_796D']
movsx ['eax,', '[ebp+arg_C]']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '2']
jmp ['loc_7B3E']
jmp ['short', 'loc_7974']
xor ['eax,', 'eax']
jmp ['loc_7B3E']
jmp ['loc_7B3E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
call ['?size@UVector@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jz ['loc_7B25']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_8]']
setl ['dl']
mov ['[ebp+var_1D],', 'dl']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?charAt@Replaceable@icu_56@@QBE_WH@Z']
mov ['[ebp+var_2C],', 'ax']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_79C5']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
call ['?size@UVector@icu_56@@QBEHXZ']
cmp ['[ebp+var_14],', 'eax']
jge ['loc_7AEA']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+24h]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
mov ['[ebp+var_44],', 'eax']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_79FF']
mov ['[ebp+var_130],', '0']
jmp ['short', 'loc_7A10']
mov ['ecx,', '[ebp+var_44]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '1']
mov ['[ebp+var_130],', 'eax']
mov ['ecx,', '[ebp+var_130]']
push ['ecx']
mov ['ecx,', '[ebp+var_44]']
call ['?charAt@UnicodeString@icu_56@@QBE_WH@Z']
mov ['[ebp+var_50],', 'ax']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_7A3C']
movzx ['eax,', '[ebp+var_50]']
movzx ['ecx,', '[ebp+var_2C]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_7A3C']
jmp ['loc_7AEA']
movzx ['eax,', '[ebp+var_50]']
movzx ['ecx,', '[ebp+var_2C]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_7A4D']
jmp ['loc_79BC']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?matchRest@UnicodeSet@icu_56@@CAHABVReplaceable@2@HHABVUnicodeString@2@@Z']
add ['esp,', '10h']
mov ['[ebp+var_5C],', 'eax']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_7AB3']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_7A8A']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_130],', 'edx']
jmp ['short', 'loc_7A98']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_130],', 'ecx']
mov ['edx,', '[ebp+var_130]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_68]']
jnz ['short', 'loc_7AB3']
mov ['eax,', '1']
jmp ['loc_7B3E']
mov ['ecx,', '[ebp+var_44]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+var_5C],', 'eax']
jnz ['short', 'loc_7AE5']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_38]']
jle ['short', 'loc_7ACE']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_38],', 'eax']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_7AE0']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_7AE0']
jmp ['short', 'loc_7AEA']
jmp ['loc_79BC']
jmp ['loc_79BC']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_7B25']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_7B03']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_130],', 'ecx']
jmp ['short', 'loc_7B0E']
mov ['edx,', '[ebp+var_38]']
neg ['edx']
mov ['[ebp+var_130],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_130]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '2']
jmp ['short', 'loc_7B3E']
movzx ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?matchRest@UnicodeSet@icu_56@@CAHABVReplaceable@2@HHABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '[ebp+arg_C]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_7BE3']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jle ['short', 'loc_7B9C']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_7BAE']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_7BE1']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?charAt@Replaceable@icu_56@@QBE_WH@Z']
movzx ['esi,', 'ax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?charAt@UnicodeString@icu_56@@QBE_WH@Z']
movzx ['edx,', 'ax']
cmp ['esi,', 'edx']
jz ['short', 'loc_7BDF']
xor ['eax,', 'eax']
jmp ['short', 'loc_7C4E']
jmp ['short', 'loc_7BA5']
jmp ['short', 'loc_7C4B']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jle ['short', 'loc_7BFA']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_7C15']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_7C4B']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?charAt@Replaceable@icu_56@@QBE_WH@Z']
movzx ['esi,', 'ax']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?charAt@UnicodeString@icu_56@@QBE_WH@Z']
movzx ['edx,', 'ax']
cmp ['esi,', 'edx']
jz ['short', 'loc_7C49']
xor ['eax,', 'eax']
jmp ['short', 'loc_7C4E']
jmp ['short', 'loc_7C0C']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addMatchSetTo@UnicodeSet@icu_56@@UBEXAAV12@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeSet@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_7CEE']
cmp ['[ebp+arg_0],', '10FFFFh']
jle ['short', 'loc_7CF3']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_7D5F']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_7D26']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_7D5F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_7D51']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_7D5F']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_7D01']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@UnicodeSet@icu_56@@QBEHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_7DFA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFFEh']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_7DFA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
sub ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_7DEF']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_7DFD']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+var_38]']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_7DA4']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@UnicodeSet@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+50h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?add@UnicodeSet@icu_56@@UAEAAV12@HH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?pinCodePoint@icu_56@@YAHAAH@Z']
add ['esp,', '4']
mov ['esi,', 'eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?pinCodePoint@icu_56@@YAHAAH@Z']
add ['esp,', '4']
cmp ['esi,', 'eax']
jge ['short', 'loc_7EEB']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', '110000h']
push ['0']
push ['2']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?add@UnicodeSet@icu_56@@AAEXPBHHC@Z']
jmp ['short', 'loc_7EFF']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_7EFF']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN7_1']
dd ['offset', '$LN6']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinCodePoint@icu_56@@YAHAAH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_7F81']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_7F95']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '10FFFFh']
jle ['short', 'loc_7F95']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '10FFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?add@UnicodeSet@icu_56@@QAEAAV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_138]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?pinCodePoint@icu_56@@YAHAAH@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?findCodePoint@UnicodeSet@icu_56@@ABEHH@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '1']
jnz ['short', 'loc_8005']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_8005']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_800D']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_8212']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+edx*4]']
sub ['eax,', '1']
cmp ['[ebp+arg_0],', 'eax']
jnz ['loc_8114']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
mov ['[ecx+edx*4],', 'eax']
cmp ['[ebp+arg_0],', '10FFFFh']
jnz ['short', 'loc_8097']
mov ['[ebp+var_20],', '0']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8075']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_8212']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
mov ['dword', 'ptr', '[eax+ecx*4],', '110000h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+8],', 'edx']
cmp ['[ebp+var_14],', '0']
jle ['short', 'loc_810F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ecx+edx*4-4]']
jnz ['short', 'loc_810F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*4-4]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '8']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnb ['short', 'loc_8100']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '4']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_80DA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
jmp ['loc_8207']
cmp ['[ebp+var_14],', '0']
jle ['short', 'loc_814E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ecx+edx*4-4]']
jnz ['short', 'loc_814E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+edx*4-4]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['ecx,', '[ebp+var_14]']
mov ['[edx+ecx*4-4],', 'eax']
jmp ['loc_8207']
mov ['[ebp+var_50],', '0']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '2']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8186']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_8212']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '8']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_74]']
jbe ['short', 'loc_81D6']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '4']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_68]']
sub ['ecx,', '4']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_81B0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
mov ['[ecx+edx*4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['ecx,', '[ebp+var_14]']
mov ['[edx+ecx*4+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN19']
dd ['offset', '$LN17']
dd ['0FFFFFFB0h,', '4']
dd ['offset', '$LN18']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?add@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jz ['short', 'loc_82B9']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_82B9']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_82BE']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_830E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_82FF']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+28h]']
call ['?contains@UVector@icu_56@@QBECPAX@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_82FD']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
jmp ['short', 'loc_830B']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_8384']
mov ['ecx,', '[ebp+var_14]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_8389']
jmp ['loc_8480']
push ['40h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_83C0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_110]']
call ['??0UnicodeString@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_83CA']
mov ['[ebp+var_124],', '0']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+var_11C],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_11C]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_83F9']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
jmp ['loc_8480']
mov ['[ebp+var_2C],', '0']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['offset', '?compareUnicodeString@icu_56@@YACTUElement@@0@Z']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+28h]']
call ['?sortedInsert@UVector@icu_56@@QAEXPAXP6ACTUElement@@1@ZAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8480']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_F8],', 'eax']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'ecx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_8476']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_104]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_8480']
mov ['[ebp+var_124],', '0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN14_0']
dd ['offset', '$LN12_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z$0 proc near
mov ['eax,', '[ebp-110h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-128h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z$0']
dd ['offset', '__unwindtable$?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareUnicodeString@icu_56@@YACTUElement@@0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?compare@UnicodeString@icu_56@@QBECABV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['eax,', '2']
jle ['short', 'loc_85A0']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_85DA']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_85BC']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?charAt@UnicodeString@icu_56@@QBE_WH@Z']
movzx ['eax,', 'ax']
jmp ['short', 'loc_85DA']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?char32At@UnicodeString@icu_56@@QBEHH@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0FFFFh']
jle ['short', 'loc_85D7']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_85DA']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_8631']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_14]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
add ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+var_20],', 'eax']
jge ['short', 'loc_865B']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?char32At@UnicodeString@icu_56@@QBEHH@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
jmp ['short', 'loc_861C']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_50]']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
call ['?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+3Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_50]']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_11C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN6_0']
dd ['offset', '$LN4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__ehhandler$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-124h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0']
dd ['offset', '__unwindtable$?retainAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_50]']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
call ['?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+40h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_50]']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_11C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
dd ['offset', '$LN6_1']
dd ['offset', '$LN4_0']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0 proc	near
lea ['ecx,', '[ebp-50h]']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__ehhandler$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-124h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0']
dd ['offset', '__unwindtable$?complementAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_50]']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
call ['?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+44h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_50]']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_11C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN6_2']
dd ['offset', '$LN4_1']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0 proc near
lea ['ecx,', '[ebp-50h]']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__ehhandler$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-124h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z$0']
dd ['offset', '__unwindtable$?removeAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeAllStrings@UnicodeSet@icu_56@@UAEAAV12@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
call ['?removeAllElements@UVector@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['34h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_8AC8']
mov ['ecx,', '[ebp+var_E0]']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_8AD2']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_8B00']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z$0 proc near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z$0']
dd ['offset', '__unwindtable$?createFrom@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['34h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_8BEC']
mov ['ecx,', '[ebp+var_E0]']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_8BF6']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_8C24']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?addAll@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z$0 proc near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z$0']
dd ['offset', '__unwindtable$?createFromAll@UnicodeSet@icu_56@@SAPAV12@ABVUnicodeString@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retain@UnicodeSet@icu_56@@UAEAAV12@HH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?pinCodePoint@icu_56@@YAHAAH@Z']
add ['esp,', '4']
mov ['esi,', 'eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?pinCodePoint@icu_56@@YAHAAH@Z']
add ['esp,', '4']
cmp ['esi,', 'eax']
jg ['short', 'loc_8D13']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', '110000h']
push ['0']
push ['2']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z']
jmp ['short', 'loc_8D29']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_C]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_5']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
dd ['offset', '$LN6_3']
dd ['offset', '$LN5']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retain@UnicodeSet@icu_56@@QAEAAV12@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+48h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeSet@icu_56@@UAEAAV12@HH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?pinCodePoint@icu_56@@YAHAAH@Z']
add ['esp,', '4']
mov ['esi,', 'eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?pinCodePoint@icu_56@@YAHAAH@Z']
add ['esp,', '4']
cmp ['esi,', 'eax']
jg ['short', 'loc_8E45']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', '110000h']
push ['2']
push ['2']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN5_0']
dd ['offset', '$LN4_2']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+4Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jz ['short', 'loc_8F3D']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_8F3D']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_8F42']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_8F91']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_8F70']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+28h]']
call ['?removeElement@UVector@icu_56@@QAECPAX@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
jmp ['short', 'loc_8F8E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+4Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?complement@UnicodeSet@icu_56@@UAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_8FF3']
mov ['ecx,', '[ebp+var_C]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_8FF8']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_9047']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?pinCodePoint@icu_56@@YAHAAH@Z']
add ['esp,', '4']
mov ['esi,', 'eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?pinCodePoint@icu_56@@YAHAAH@Z']
add ['esp,', '4']
cmp ['esi,', 'eax']
jg ['short', 'loc_903C']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', '110000h']
push ['0']
push ['2']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?exclusiveOr@UnicodeSet@icu_56@@AAEXPBHHC@Z']
mov ['ecx,', '[ebp+var_C]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
dd ['offset', '$LN7_6']
dd ['offset', '$LN6_5']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?complement@UnicodeSet@icu_56@@QAEAAV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+50h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?complement@UnicodeSet@icu_56@@UAEAAV12@XZ proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_912D']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_9135']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_9254']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_91C4']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
sub ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_9178']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_9254']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '4']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
lea ['ecx,', 'ds:0FFFFFFFCh[eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
jmp ['short', 'loc_9241']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_91F2']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_9254']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '4']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?swapBuffers@UnicodeSet@icu_56@@AAEXXZ']
mov ['ecx,', '[ebp+var_8]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN10_1']
dd ['offset', '$LN9_2']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?complement@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jz ['short', 'loc_92E5']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_92E5']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_92EA']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_935D']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?getSingleCP@UnicodeSet@icu_56@@CAHABVUnicodeString@2@@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_933C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+28h]']
call ['?contains@UVector@icu_56@@QBECPAX@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9326']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+28h]']
call ['?removeElement@UVector@icu_56@@QAECPAX@Z']
jmp ['short', 'loc_9332']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
jmp ['short', 'loc_935A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+50h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jle ['short', 'loc_93C1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_93C1']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?add@UnicodeSet@icu_56@@AAEXPBHHC@Z']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jz ['short', 'loc_9422']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_93DC']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
call ['?size@UVector@icu_56@@QBEHXZ']
cmp ['[ebp+var_14],', 'eax']
jge ['short', 'loc_9422']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+28h]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+28h]']
call ['?contains@UVector@icu_56@@QBECPAX@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_9420']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z']
jmp ['short', 'loc_93D3']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retainAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_947D']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_9482']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_94AF']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+28h]']
call ['?retainAll@UVector@icu_56@@QAECABV12@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_9509']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_950E']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_953B']
push ['2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+28h]']
call ['?removeAll@UVector@icu_56@@QAECABV12@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?complementAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_9595']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_959A']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_960D']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?exclusiveOr@UnicodeSet@icu_56@@AAEXPBHHC@Z']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_95C4']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
call ['?size@UVector@icu_56@@QBEHXZ']
cmp ['[ebp+var_14],', 'eax']
jge ['short', 'loc_960A']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+28h]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+28h]']
call ['?removeElement@UVector@icu_56@@QAECPAX@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_9608']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_add@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z']
jmp ['short', 'loc_95BB']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clear@UnicodeSet@icu_56@@UAEAAV12@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_965B']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_96B2']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_9670']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['dword', 'ptr', '[ecx],', '110000h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '1']
mov ['ecx,', '[ebp+var_8]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jz ['short', 'loc_9696']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
call ['?removeAllElements@UVector@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_96AF']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jz ['short', 'loc_96AF']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRangeCount@UnicodeSet@icu_56@@UBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRangeStart@UnicodeSet@icu_56@@UBEHH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[edx+eax*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRangeEnd@UnicodeSet@icu_56@@UBEHH@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['eax,', '[edx+eax*4+4]']
sub ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStringCount@UnicodeSet@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
call ['?size@UVector@icu_56@@QBEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getString@UnicodeSet@icu_56@@ABEPBVUnicodeString@2@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+28h]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compact@UnicodeSet@icu_56@@UAEAAV12@XZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_9849']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_984E']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_98C7']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_9870']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+0Ch]']
jge ['short', 'loc_98C4']
mov ['eax,', '[ebp+var_8]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+8],', '0']
setz ['cl']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_uprv_realloc_56']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_98C4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0UnicodeFilter@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeSet@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '11h']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_99CD']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
jmp ['loc_9B89']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_99DF']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_99DF']
cmp ['[ebp+arg_4],', '1']
jge ['short', 'loc_99F5']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
jmp ['loc_9B89']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9A23']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
jmp ['loc_9B89']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
and ['ecx,', '8000h']
neg ['ecx']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '1']
jnz ['short', 'loc_9A50']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['[ebp+var_FE],', 'cx']
jmp ['short', 'loc_9A5E']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+2]']
mov ['[ebp+var_FE],', 'ax']
movzx ['ecx,', '[ebp+var_FE]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[eax]']
and ['eax,', '7FFFh']
sub ['eax,', '[ebp+var_2C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
add ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '2']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_9AC9']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9AD6']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
jmp ['loc_9B89']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_9AE8']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_9B0B']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
mov ['eax,', '[ebp+var_38]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_9ADF']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_9B1C']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[eax+8]']
jge ['short', 'loc_9B67']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', '[ebp+var_2C]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_2C]']
lea ['edx,', '[edx+eax*2]']
mov ['eax,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+2]']
add ['ecx,', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '[eax+10h]']
mov ['eax,', '[ebp+var_38]']
mov ['[edx+eax*4],', 'ecx']
jmp ['short', 'loc_9B13']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
mov ['dword', 'ptr', '[eax+ecx*4],', '110000h']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+8],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UnicodeFilter@icu_56@@UAE@XZ']
endp
__ehhandler$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-104h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0UnicodeSet@icu_56@@QAE@QBGHW4ESerialization@01@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?serialize@UnicodeSet@icu_56@@QBEHPAGHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9C47']
xor ['eax,', 'eax']
jmp ['loc_9E25']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_9C59']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_9C69']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_9C69']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_9E25']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jnz ['short', 'loc_9C9A']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_9C87']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'ax']
jmp ['short', 'loc_9C90']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '1']
jmp ['loc_9E25']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx+edx*4-4],', '0FFFFh']
jg ['short', 'loc_9CB5']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_9D11']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
cmp ['dword', 'ptr', '[ecx],', '10000h']
jl ['short', 'loc_9CD4']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_9D11']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_9CE6']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_9D02']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+edx*4],', '0FFFFh']
jg ['short', 'loc_9D02']
jmp ['short', 'loc_9CDD']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '7FFFh']
jle ['short', 'loc_9D2A']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_9E25']
mov ['eax,', '[ebp+var_20]']
xor ['ecx,', 'ecx']
cmp ['eax,', '[ebp+var_14]']
setnle ['cl']
add ['ecx,', '1']
add ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_4]']
jg ['loc_9E19']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', 'word', 'ptr', '[ebp+var_20]']
mov ['[eax],', 'cx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_9D81']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
or ['ecx,', '8000h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'word', 'ptr', '[ebp+var_14]']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_9DA5']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_9DCD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '4']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_9D9C']
jmp ['short', 'loc_9DD8']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_9E17']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '4']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_9DCF']
jmp ['short', 'loc_9E22']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_2C]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9E9A']
xor ['al,', 'al']
jmp ['loc_9F91']
push ['18h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_9EDD']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['1']
push ['offset', '_uhash_compareUnicodeString_56']
push ['offset', '_uprv_deleteUObject_56']
mov ['ecx,', '[ebp+var_F8]']
call ['??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_9EE7']
mov ['[ebp+var_10C],', '0']
mov ['ecx,', '[ebp+var_10C]']
mov ['[ebp+var_104],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_104]']
mov ['[edx+28h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jnz ['short', 'loc_9F1C']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['al,', 'al']
jmp ['short', 'loc_9F91']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9F8F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_9F77']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_9F81']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+28h],', '0']
xor ['al,', 'al']
jmp ['short', 'loc_9F91']
mov ['al,', '1']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z$0 proc near
mov ['eax,', '[ebp-0F8h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-110h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?allocateStrings@UnicodeSet@icu_56@@AAECAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ensureCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+0Ch]']
jg ['short', 'loc_A03C']
jmp ['short', 'loc_A087']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', 'ds:40h[eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_uprv_realloc_56']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_A072']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_8]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
jmp ['short', 'loc_A087']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_A0D9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_A0D9']
jmp ['short', 'loc_A124']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', 'ds:40h[eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_uprv_realloc_56']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_A10F']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['ecx,', '[ebp+var_8]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
jmp ['short', 'loc_A124']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+1Ch],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?swapBuffers@UnicodeSet@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+1Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToBogus@UnicodeSet@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+30h],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?exclusiveOr@UnicodeSet@icu_56@@AAEXPBHHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_A239']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_A23E']
jmp ['loc_A3D6']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A273']
jmp ['loc_A3D6']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
cmp ['eax,', '1']
jz ['short', 'loc_A2B2']
movsx ['eax,', '[ebp+arg_8]']
cmp ['eax,', '2']
jnz ['short', 'loc_A2DC']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jnz ['short', 'loc_A2DA']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_A2F1']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_A32E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['loc_A3C1']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_A365']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_50]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_A3C1']
cmp ['[ebp+var_44],', '110000h']
jz ['short', 'loc_A39D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_A3C1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['dword', 'ptr', '[ecx+edx*4],', '110000h']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+8],', 'ecx']
jmp ['short', 'loc_A3C6']
jmp ['loc_A2F1']
mov ['ecx,', '[ebp+var_8]']
call ['?swapBuffers@UnicodeSet@icu_56@@AAEXXZ']
mov ['ecx,', '[ebp+var_8]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
dd ['offset', '$LN19_0']
dd ['offset', '$LN18_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?add@UnicodeSet@icu_56@@AAEXPBHHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_A463']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_A463']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_A468']
jmp ['loc_A93A']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A49D']
jmp ['loc_A93A']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_118],', 'eax']
cmp ['[ebp+var_118],', '3']
ja ['loc_A903']
mov ['ecx,', '[ebp+var_118]']
jmp ['ds:$LN47[ecx*4]']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
jge ['loc_A596']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_A557']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ecx+edx*4-4]']
jg ['short', 'loc_A557']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
call ['?max@icu_56@@YAHHH@Z']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_A57E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_A6D7']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['loc_A623']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_A5E7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ecx+edx*4-4]']
jg ['short', 'loc_A5E7']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
call ['?max@icu_56@@YAHHH@Z']
add ['esp,', '8']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_A60B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_50]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_A6D7']
cmp ['[ebp+var_44],', '110000h']
jnz ['short', 'loc_A636']
jmp ['$loop_end$37768']
jmp ['$loop_end$37768']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_A67E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ecx+edx*4-4]']
jg ['short', 'loc_A67E']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
call ['?max@icu_56@@YAHHH@Z']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_A6A5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_A903']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jg ['short', 'loc_A711']
cmp ['[ebp+var_44],', '110000h']
jnz ['short', 'loc_A6F7']
jmp ['$loop_end$37768']
jmp ['$loop_end$37768']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_A73C']
cmp ['[ebp+var_50],', '110000h']
jnz ['short', 'loc_A724']
jmp ['$loop_end$37768']
jmp ['$loop_end$37768']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_50]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_A903']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_A7C6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
jmp ['short', 'loc_A843']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_A7EF']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['short', 'loc_A843']
cmp ['[ebp+var_44],', '110000h']
jnz ['short', 'loc_A802']
jmp ['$loop_end$37768']
jmp ['$loop_end$37768']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_A903']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_A889']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_50]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['short', 'loc_A903']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_A8B5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
jmp ['short', 'loc_A903']
cmp ['[ebp+var_44],', '110000h']
jnz ['short', 'loc_A8C2']
jmp ['short', '$loop_end$37768']
jmp ['short', '$loop_end$37768']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_A4DF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['dword', 'ptr', '[ecx+edx*4],', '110000h']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?swapBuffers@UnicodeSet@icu_56@@AAEXXZ']
mov ['ecx,', '[ebp+var_8]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN46']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN45']
dd ['offset', '$LN44']
align ['10h']
dd ['offset', '$LN14_1']
dd ['offset', '$LN7_7']
dd ['offset', '$LN21']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?max@icu_56@@YAHHH@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jle ['short', 'loc_A9C1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'ecx']
jmp ['short', 'loc_A9CA']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_C4],', 'edx']
mov ['eax,', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retain@UnicodeSet@icu_56@@AAEXPBHHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_AA19']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_AA1E']
jmp ['loc_AE39']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureBufferCapacity@UnicodeSet@icu_56@@AAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AA53']
jmp ['loc_AE39']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_118],', 'eax']
cmp ['[ebp+var_118],', '3']
ja ['loc_AE02']
mov ['ecx,', '[ebp+var_118]']
jmp ['ds:$LN41[ecx*4]']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_AAE8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_AB7D']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_AB11']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['short', 'loc_AB7D']
cmp ['[ebp+var_44],', '110000h']
jnz ['short', 'loc_AB24']
jmp ['$loop_end$37821']
jmp ['$loop_end$37821']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_AE02']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_ABC9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_AC76']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_AC0A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_50]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['short', 'loc_AC76']
cmp ['[ebp+var_44],', '110000h']
jnz ['short', 'loc_AC1D']
jmp ['$loop_end$37821']
jmp ['$loop_end$37821']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_AE02']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_ACAA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_AD3F']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_ACEB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_50]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['short', 'loc_AD3F']
cmp ['[ebp+var_44],', '110000h']
jnz ['short', 'loc_ACFE']
jmp ['$loop_end$37821']
jmp ['$loop_end$37821']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_AE02']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_AD70']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_AE02']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_ADB4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_44]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
jmp ['short', 'loc_AE02']
cmp ['[ebp+var_44],', '110000h']
jnz ['short', 'loc_ADC1']
jmp ['short', '$loop_end$37821']
jmp ['short', '$loop_end$37821']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '1']
mov ['[ebp+arg_8],', 'al']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
xor ['eax,', '2']
mov ['[ebp+arg_8],', 'al']
jmp ['loc_AA95']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['dword', 'ptr', '[ecx+edx*4],', '110000h']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?swapBuffers@UnicodeSet@icu_56@@AAEXXZ']
mov ['ecx,', '[ebp+var_8]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN40']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN39']
dd ['offset', '$LN38']
align ['4']
dd ['offset', '$LN14_2']
dd ['offset', '$LN7_8']
dd ['offset', '$LN21_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@ABV32@C@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_AEC8']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_8]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
add ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+var_14],', 'eax']
jge ['short', 'loc_AEFB']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?char32At@UnicodeString@icu_56@@QBEHH@Z']
mov ['[ebp+var_8],', 'eax']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z']
add ['esp,', '0Ch']
jmp ['short', 'loc_AEB3']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_AF62']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?isUnprintable@ICU_Utility@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AF62']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?escapeUnprintable@ICU_Utility@icu_56@@SACAAVUnicodeString@2@H@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_AF62']
jmp ['short', 'loc_AFCC']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C4],', 'eax']
mov ['ecx,', '[ebp+var_C4]']
sub ['ecx,', '24h']
mov ['[ebp+var_C4],', 'ecx']
cmp ['[ebp+var_C4],', '59h']
ja ['short', '$LN2']
mov ['edx,', '[ebp+var_C4]']
movzx ['eax,', 'ds:$LN10_2[edx]']
jmp ['ds:$LN11_2[eax*4]']
push ['5Ch']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
jmp ['short', 'loc_AFC0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?isWhiteSpace@PatternProps@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AFC0']
push ['5Ch']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['1,', '1,', '1,', '1']
db ['1,', '0,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '0,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '0']
db ['0,', '0,', '0,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '1']
db ['1,', '1,', '1,', '0']
db ['1,', '0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_toPattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['loc_B18E']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+20h]']
jge ['loc_B189']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_B104']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+20h]']
jz ['short', 'loc_B104']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
mov ['edx,', '[ebp+var_14]']
mov ['ax,', '[ecx+edx*2]']
mov ['[ebp+var_38],', 'ax']
movzx ['ecx,', '[ebp+var_38]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_B104']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_38]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_2C],', 'edx']
movsx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['short', 'loc_B160']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?isUnprintable@ICU_Utility@icu_56@@SACH@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B160']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '80000001h']
jns ['short', 'loc_B12E']
dec ['eax']
or ['eax,', '0FFFFFFFEh']
inc ['eax']
cmp ['eax,', '1']
jnz ['short', 'loc_B147']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?truncate@UnicodeString@icu_56@@QAECH@Z']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?escapeUnprintable@ICU_Utility@icu_56@@SACAAVUnicodeString@2@H@Z']
add ['esp,', '8']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_B184']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
cmp ['[ebp+var_2C],', '5Ch']
jnz ['short', 'loc_B17D']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_B184']
mov ['[ebp+var_20],', '0']
jmp ['loc_B082']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_B19F']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_generatePattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toPattern@UnicodeSet@icu_56@@UBEAAVUnicodeString@2@AAV32@C@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?truncate@UnicodeString@icu_56@@QAECH@Z']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '4']
call ['?_toPattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_generatePattern@UnicodeSet@icu_56@@ABEAAVUnicodeString@2@AAV32@C@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '12Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '4Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['5Bh']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+60h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '1']
jle ['loc_B364']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['loc_B364']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+68h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '10FFFFh']
jnz ['loc_B364']
push ['5Eh']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
mov ['[ebp+var_20],', '1']
jmp ['short', 'loc_B2C4']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jge ['loc_B35F']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+68h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jz ['short', 'loc_B35A']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_38]']
jz ['short', 'loc_B345']
push ['2Dh']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z']
add ['esp,', '0Ch']
jmp ['loc_B2BB']
jmp ['loc_B408']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_B376']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_14]']
jge ['loc_B408']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+68h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5C],', 'eax']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jz ['short', 'loc_B403']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_5C]']
jz ['short', 'loc_B3EE']
push ['2Dh']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@HC@Z']
add ['esp,', '0Ch']
jmp ['loc_B36D']
mov ['[ebp+var_68],', '0']
jmp ['short', 'loc_B41A']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+28h]']
call ['?size@UVector@icu_56@@QBEHXZ']
cmp ['[ebp+var_68],', 'eax']
jge ['short', 'loc_B461']
push ['7Bh']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+28h]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?_appendToPat@UnicodeSet@icu_56@@CAXAAVUnicodeString@2@ABV32@C@Z']
add ['esp,', '0Ch']
push ['7Dh']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
jmp ['short', 'loc_B411']
push ['5Dh']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@_W@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?releasePattern@UnicodeSet@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_B4D3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+20h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setPattern@UnicodeSet@icu_56@@AAEXABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?releasePattern@UnicodeSet@icu_56@@AAEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+24h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_B572']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+20h],', 'ecx']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
xor ['edx,', 'edx']
mov ['[eax+ecx*2],', 'dx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?isFrozen@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['loc_B7E1']
mov ['ecx,', '[ebp+var_14]']
call ['?isBogus@UnicodeSet@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['loc_B7E1']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_B612']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '10h']
mov ['edx,', '[ebp+var_14]']
cmp ['[edx+0Ch],', 'ecx']
jle ['short', 'loc_B673']
mov ['eax,', '[ebp+var_14]']
xor ['ecx,', 'ecx']
cmp ['dword', 'ptr', '[eax+8],', '0']
setz ['cl']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_uprv_realloc_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_B673']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_B7E4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+28h]']
call ['?isEmpty@UVector@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_B75A']
push ['0D8h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_B6CC']
push ['3Fh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_110]']
call ['??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_B6D6']
mov ['[ebp+var_124],', '0']
mov ['eax,', '[ebp+var_124]']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_11C]']
mov ['[ecx+2Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_B75A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+2Ch]']
call ['?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_B75A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_F8],', 'ecx']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'edx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_B746']
push ['1']
mov ['ecx,', '[ebp+var_104]']
call ['??_GUnicodeSetStringSpan@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_B750']
mov ['[ebp+var_124],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jnz ['short', 'loc_B7E1']
push ['314h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_B7A7']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0BMPSet@icu_56@@QAE@PBHH@Z']
mov ['[ebp+var_124],', 'eax']
jmp ['short', 'loc_B7B1']
mov ['[ebp+var_124],', '0']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+var_EC],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_EC]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_B7E1']
mov ['ecx,', '[ebp+var_14]']
call ['?setToBogus@UnicodeSet@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ$0 proc near
mov ['eax,', '[ebp-110h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ$1 proc near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-128h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ$1']
dd ['offset', '__unwindtable$?freeze@UnicodeSet@icu_56@@QAEPAVUnicodeFunctor@2@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1F8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_204]']
mov ['ecx,', '7Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_B923']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_B923']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+14h]']
call ['?span@BMPSet@icu_56@@QBEPB_WPB_W0W4USetSpanCondition@@@Z']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
jmp ['loc_BB0E']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_B938']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_B945']
xor ['eax,', 'eax']
jmp ['loc_BB0E']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_B96F']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+2Ch]']
call ['?span@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
jmp ['loc_BB0E']
jmp ['loc_BA13']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+28h]']
call ['?isEmpty@UVector@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_BA13']
xor ['eax,', 'eax']
cmp ['[ebp+arg_8],', '0']
setnz ['al']
add ['eax,', '29h']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_104]']
call ['??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_104]']
call ['?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_BA01']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_104]']
call ['?span@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
mov ['[ebp+var_200],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_104]']
call ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_200]']
jmp ['loc_BB0E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_104]']
call ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_BA20']
mov ['[ebp+arg_8],', '1']
mov ['[ebp+var_11C],', '0']
mov ['[ebp+var_128],', '0']
mov ['eax,', '[ebp+var_11C]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_110],', 'edx']
mov ['eax,', '[ebp+var_11C]']
add ['eax,', '1']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_110]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_BAC6']
mov ['eax,', '[ebp+var_11C]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_BAC6']
mov ['eax,', '[ebp+var_11C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_134],', 'dx']
movzx ['eax,', '[ebp+var_134]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_BAC6']
mov ['eax,', '[ebp+var_11C]']
add ['eax,', '1']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_110]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_134]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_110],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_110]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
cmp ['[ebp+arg_8],', 'ecx']
jz ['short', 'loc_BAED']
jmp ['short', 'loc_BB08']
mov ['eax,', '[ebp+var_11C]']
mov ['[ebp+var_128],', 'eax']
mov ['ecx,', '[ebp+var_128]']
cmp ['ecx,', '[ebp+arg_4]']
jl ['loc_BA34']
mov ['eax,', '[ebp+var_128]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '204h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN20_1']
dd ['offset', '$LN18_1']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z$0 proc near
lea ['ecx,', '[ebp-104h]']
jmp ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
endp
__ehhandler$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-208h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z$0']
dd ['offset', '__unwindtable$?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1ECh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1F8]']
mov ['ecx,', '7Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_BC43']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_BC43']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+14h]']
call ['?spanBack@BMPSet@icu_56@@QBEPB_WPB_W0W4USetSpanCondition@@@Z']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
jmp ['loc_BE08']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_BC58']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_BC65']
xor ['eax,', 'eax']
jmp ['loc_BE08']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_BC8F']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+2Ch]']
call ['?spanBack@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
jmp ['loc_BE08']
jmp ['loc_BD33']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+28h]']
call ['?isEmpty@UVector@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_BD33']
xor ['eax,', 'eax']
cmp ['[ebp+arg_8],', '0']
setnz ['al']
add ['eax,', '19h']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_104]']
call ['??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_104]']
call ['?needsStringSpanUTF16@UnicodeSetStringSpan@icu_56@@QAECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_BD21']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_104]']
call ['?spanBack@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
mov ['[ebp+var_1F4],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_104]']
call ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_1F4]']
jmp ['loc_BE08']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_104]']
call ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_BD40']
mov ['[ebp+arg_8],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['[ebp+var_110],', 'eax']
mov ['eax,', '[ebp+var_110]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_BDC5']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_BDC5']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2-2]']
mov ['[ebp+var_128],', 'dx']
movzx ['eax,', '[ebp+var_128]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_BDC5']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
movzx ['eax,', '[ebp+var_128]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_110]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_110],', 'edx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_110]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
cmp ['[ebp+arg_8],', 'ecx']
jz ['short', 'loc_BDEC']
jmp ['short', 'loc_BE02']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_11C],', 'eax']
cmp ['[ebp+var_11C],', '0']
jg ['loc_BD49']
mov ['eax,', '[ebp+var_11C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN20_2']
dd ['offset', '$LN18_2']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z$0	proc near
lea ['ecx,', '[ebp-104h]']
jmp ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
endp
__ehhandler$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1FCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z$0']
dd ['offset', '__unwindtable$?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '210h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_21C]']
mov ['ecx,', '84h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_BF39']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_BF39']
mov ['eax,', '[ebp+Str]']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+14h]']
call ['?spanUTF8@BMPSet@icu_56@@QBEPBEPBEHW4USetSpanCondition@@@Z']
sub ['eax,', '[ebp+var_24]']
jmp ['loc_C218']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_BF4E']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_BF5B']
xor ['eax,', 'eax']
jmp ['loc_C218']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_BF85']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+2Ch]']
call ['?spanUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z']
jmp ['loc_C218']
jmp ['loc_C029']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+28h]']
call ['?isEmpty@UVector@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_C029']
xor ['eax,', 'eax']
cmp ['[ebp+arg_8],', '0']
setnz ['al']
add ['eax,', '25h']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_110]']
call ['??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_110]']
call ['?needsStringSpanUTF8@UnicodeSetStringSpan@icu_56@@QAECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_C017']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
lea ['ecx,', '[ebp+var_110]']
call ['?spanUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z']
mov ['[ebp+var_218],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_110]']
call ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_218]']
jmp ['loc_C218']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_110]']
call ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_C036']
mov ['[ebp+arg_8],', '1']
mov ['[ebp+var_128],', '0']
mov ['[ebp+var_134],', '0']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_128]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_11C],', 'ecx']
mov ['edx,', '[ebp+var_128]']
add ['edx,', '1']
mov ['[ebp+var_128],', 'edx']
cmp ['[ebp+var_11C],', '80h']
jl ['loc_C1D0']
cmp ['[ebp+var_11C],', '0E0h']
jle ['loc_C137']
cmp ['[ebp+var_11C],', '0ECh']
jg ['loc_C137']
mov ['eax,', '[ebp+var_128]']
add ['eax,', '1']
cmp ['eax,', '[ebp+arg_4]']
jl ['short', 'loc_C0B3']
cmp ['[ebp+arg_4],', '0']
jge ['loc_C137']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_128]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_13D],', 'cl']
movzx ['edx,', '[ebp+var_13D]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_C137']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_128]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
sub ['ecx,', '80h']
mov ['[ebp+var_149],', 'cl']
movzx ['edx,', '[ebp+var_149]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_C137']
mov ['eax,', '[ebp+var_11C]']
shl ['eax,', '0Ch']
movzx ['ecx,', '[ebp+var_13D]']
shl ['ecx,', '6']
or ['eax,', 'ecx']
movzx ['edx,', '[ebp+var_149]']
or ['eax,', 'edx']
movzx ['eax,', 'ax']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_128]']
add ['eax,', '2']
mov ['[ebp+var_128],', 'eax']
jmp ['loc_C1D0']
cmp ['[ebp+var_11C],', '0E0h']
jge ['short', 'loc_C1AA']
cmp ['[ebp+var_11C],', '0C2h']
jl ['short', 'loc_C1AA']
mov ['eax,', '[ebp+var_128]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_C1AA']
mov ['eax,', '[ebp+Str]']
add ['eax,', '[ebp+var_128]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_13D],', 'cl']
movzx ['edx,', '[ebp+var_13D]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_C1AA']
mov ['eax,', '[ebp+var_11C]']
and ['eax,', '1Fh']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_13D]']
or ['eax,', 'ecx']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_128]']
add ['eax,', '1']
mov ['[ebp+var_128],', 'eax']
jmp ['short', 'loc_C1D0']
push ['0FFFFFFFDh']
mov ['eax,', '[ebp+var_11C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['edx,', '[ebp+var_128]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_utf8_nextCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+var_11C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_11C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
cmp ['[ebp+arg_8],', 'ecx']
jz ['short', 'loc_C1F7']
jmp ['short', 'loc_C212']
mov ['eax,', '[ebp+var_128]']
mov ['[ebp+var_134],', 'eax']
mov ['ecx,', '[ebp+var_134]']
cmp ['ecx,', '[ebp+arg_4]']
jl ['loc_C04A']
mov ['eax,', '[ebp+var_134]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '21Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN25_0']
dd ['offset', '$LN22']
dd ['0FFFFFED8h,', '4']
dd ['offset', '$LN23_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z$0 proc near
lea ['ecx,', '[ebp-110h]']
jmp ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
endp
__ehhandler$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-220h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z$0']
dd ['offset', '__unwindtable$?spanUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?needsStringSpanUTF8@UnicodeSetStringSpan@icu_56@@QAECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+50h],', '0']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1ECh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1F8]']
mov ['ecx,', '7Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_C38E']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['short', 'loc_C38E']
mov ['eax,', '[ebp+Str]']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+14h]']
call ['?spanBackUTF8@BMPSet@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z']
jmp ['loc_C518']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_C3A3']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_C3B0']
xor ['eax,', 'eax']
jmp ['loc_C518']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_C3DA']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+2Ch]']
call ['?spanBackUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z']
jmp ['loc_C518']
jmp ['loc_C47E']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+28h]']
call ['?isEmpty@UVector@icu_56@@QBECXZ']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_C47E']
xor ['eax,', 'eax']
cmp ['[ebp+arg_8],', '0']
setnz ['al']
add ['eax,', '15h']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_110]']
call ['??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_110]']
call ['?needsStringSpanUTF8@UnicodeSetStringSpan@icu_56@@QAECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_C46C']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
lea ['ecx,', '[ebp+var_110]']
call ['?spanBackUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z']
mov ['[ebp+var_1F4],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_110]']
call ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_1F4]']
jmp ['loc_C518']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_110]']
call ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_C48B']
mov ['[ebp+arg_8],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_128],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+Str]']
add ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_11C],', 'edx']
cmp ['[ebp+var_11C],', '80h']
jl ['short', 'loc_C4D9']
push ['0FFFFFFFDh']
mov ['eax,', '[ebp+var_11C]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_utf8_prevCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+var_11C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_11C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
cmp ['[ebp+arg_8],', 'ecx']
jz ['short', 'loc_C500']
jmp ['short', 'loc_C512']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_128],', 'eax']
cmp ['[ebp+var_128],', '0']
jg ['short', 'loc_C494']
mov ['eax,', '[ebp+var_128]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN19_1']
dd ['offset', '$LN17_0']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z$0 proc	near
lea ['ecx,', '[ebp-110h]']
jmp ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ']
endp
__ehhandler$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1FCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z$0']
dd ['offset', '__unwindtable$?spanBackUTF8@UnicodeSet@icu_56@@QBEHPBDHW4USetSpanCondition@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '9']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '28h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$MaybeStackArray@D$0CI@@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@?$MaybeStackArray@D$0CI@@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayLimit@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getAlias@?$MaybeStackArray@D$0CI@@icu_56@@QBEPADXZ']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@D$0CI@@icu_56@@QBEABDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??A?$MaybeStackArray@D$0CI@@icu_56@@QAEAADH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
add ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?aliasInstead@?$MaybeStackArray@D$0CI@@icu_56@@QAEXPADH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_C86B']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_C86B']
mov ['ecx,', '[ebp+var_8]']
call ['?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_C8C0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9?$MaybeStackArray@D$0CI@@icu_56@@AAE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$MaybeStackArray@D$0CI@@icu_56@@AAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4?$MaybeStackArray@D$0CI@@icu_56@@AAEXABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_C9CA']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_C9D6']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?resize@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jle ['loc_CA9B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_CA94']
cmp ['[ebp+Size],', '0']
jle ['short', 'loc_CA74']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Size]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_CA40']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+Size],', 'ecx']
mov ['eax,', '[ebp+Size]']
cmp ['eax,', '[ebp+arg_0]']
jle ['short', 'loc_CA4E']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+Size],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
call ['?releaseArray@?$MaybeStackArray@D$0CI@@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '1']
mov ['eax,', '[ebp+Dst]']
jmp ['short', 'loc_CA9D']
jmp ['short', 'loc_CA9D']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?orphanOrClone@?$MaybeStackArray@D$0CI@@icu_56@@QAEPADHAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_CAEC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+Dst],', 'ecx']
jmp ['short', 'loc_CB4B']
cmp ['[ebp+Size],', '0']
jg ['short', 'loc_CAF8']
xor ['eax,', 'eax']
jmp ['short', 'loc_CB72']
jmp ['short', 'loc_CB4B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Size]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_CB0C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+Size],', 'ecx']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_CB25']
xor ['eax,', 'eax']
jmp ['short', 'loc_CB72']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+Size]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '9']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '28h']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeSet@icu_56@@W3AEPAXI@Z proc near
sub ['ecx,', '4']
jmp ['??_EUnicodeSet@icu_56@@UAEPAXI@Z']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z proc near
sub ['ecx,', '4']
jmp ['??_EUnicodeFilter@icu_56@@UAEPAXI@Z']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1UObject@icu_56@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['?getDynamicClassID@ParsePosition@icu_56@@UBEPAXXZ:near']
extrn ['??1ParsePosition@icu_56@@UAE@XZ:near']
extrn ['__purecall:near']
extrn ['?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:near']
extrn ['??1UnicodeFunctor@icu_56@@UAE@XZ:near']
extrn ['??1UnicodeMatcher@icu_56@@UAE@XZ:near']
extrn ['?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:near']
extrn ['?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:near']
extrn ['??1UnicodeFilter@icu_56@@UAE@XZ:near']
extrn ['?hasMetaData@Replaceable@icu_56@@UBECXZ:near']
extrn ['?clone@Replaceable@icu_56@@UBEPAV12@XZ:near']
extrn ['??1Replaceable@icu_56@@UAE@XZ:near']
extrn ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z:near']
extrn ['?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:near']
extrn ['?Flush@ByteSink@icu_56@@UAEXXZ:near']
extrn ['??1ByteSink@icu_56@@UAE@XZ:near']
extrn ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:near']
extrn ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:near']
extrn ['??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:near']
extrn ['?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:near']
extrn ['?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:near']
extrn ['?copy@UnicodeString@icu_56@@UAEXHHH@Z:near']
extrn ['?hasMetaData@UnicodeString@icu_56@@UBECXZ:near']
extrn ['?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:near']
extrn ['?getLength@UnicodeString@icu_56@@MBEHXZ:near']
extrn ['?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:near']
extrn ['?getChar32At@UnicodeString@icu_56@@MBEHH@Z:near']
extrn ['?doHashCode@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?refCount@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:near']
extrn ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:near']
extrn ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['_u_strlen_56:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:near']
extrn ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:near']
extrn ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:near']
extrn ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:near']
extrn ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:near']
extrn ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:near']
extrn ['?unBogus@UnicodeString@icu_56@@AAEXXZ:near']
extrn ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:near']
extrn ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z:near']
extrn ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:near']
extrn ['?indexOf@UVector@icu_56@@QBEHPAXH@Z:near']
extrn ['?indexOf@UVector@icu_56@@QBEHHH@Z:near']
extrn ['?elementAt@UVector@icu_56@@QBEPAXH@Z:near']
extrn ['?elementAti@UVector@icu_56@@QBEHH@Z:near']
extrn ['??8UVector@icu_56@@QAECABV01@@Z:near']
extrn ['?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:near']
extrn ['?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z:near']
extrn ['_uprv_malloc_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['??0UnicodeString@icu_56@@QAE@PB_WH@Z:near']
extrn ['?assign@UVector@icu_56@@QAEXABV12@P6AXPATUElement@@1@ZAAW4UErrorCode@@@Z:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['_uprv_free_56:near']
extrn ['??1UnicodeSetStringSpan@icu_56@@QAE@XZ:near']
extrn ['??0UnicodeSetStringSpan@icu_56@@QAE@ABV01@ABVUVector@1@@Z:near']
extrn ['??0BMPSet@icu_56@@QAE@ABV01@PBHH@Z:near']
extrn ['?containsAll@UVector@icu_56@@QBECABV12@@Z:near']
extrn ['?containsNone@UVector@icu_56@@QBECABV12@@Z:near']
extrn ['?char32At@UnicodeString@icu_56@@QBEHH@Z:near']
extrn ['?sortedInsert@UVector@icu_56@@QAEXPAXP6ACTUElement@@1@ZAAW4UErrorCode@@@Z:near']
extrn ['?removeAllElements@UVector@icu_56@@QAEXXZ:near']
extrn ['?removeElement@UVector@icu_56@@QAECPAX@Z:near']
extrn ['?retainAll@UVector@icu_56@@QAECABV12@@Z:near']
extrn ['?removeAll@UVector@icu_56@@QAECABV12@@Z:near']
extrn ['_uprv_realloc_56:near']
extrn ['??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZHAAW4UErrorCode@@@Z:near']
extrn ['_uprv_deleteUObject_56:near']
extrn ['_uhash_compareUnicodeString_56:near']
extrn ['?isWhiteSpace@PatternProps@icu_56@@SACH@Z:near']
extrn ['?escapeUnprintable@ICU_Utility@icu_56@@SACAAVUnicodeString@2@H@Z:near']
extrn ['?isUnprintable@ICU_Utility@icu_56@@SACH@Z:near']
extrn ['??0BMPSet@icu_56@@QAE@PBHH@Z:near']
extrn ['??0UnicodeSetStringSpan@icu_56@@QAE@ABVUnicodeSet@1@ABVUVector@1@I@Z:near']
extrn ['?span@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:near']
extrn ['?span@BMPSet@icu_56@@QBEPB_WPB_W0W4USetSpanCondition@@@Z:near']
extrn ['?spanBack@UnicodeSetStringSpan@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:near']
extrn ['?spanBack@BMPSet@icu_56@@QBEPB_WPB_W0W4USetSpanCondition@@@Z:near']
extrn ['_utf8_nextCharSafeBody_56:near']
extrn ['?spanUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z:near']
extrn ['_strlen:near']
extrn ['?spanUTF8@BMPSet@icu_56@@QBEPBEPBEHW4USetSpanCondition@@@Z:near']
extrn ['_utf8_prevCharSafeBody_56:near']
extrn ['?spanBackUTF8@UnicodeSetStringSpan@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z:near']
extrn ['?spanBackUTF8@BMPSet@icu_56@@QBEHPBEHW4USetSpanCondition@@@Z:near']
end

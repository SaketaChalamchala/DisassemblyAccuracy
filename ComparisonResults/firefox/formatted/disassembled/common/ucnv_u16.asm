endp
__UTF16BEFromUnicodeWithOffsets	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '[ebp+var_14]']
sar ['ecx,', '1']
mov ['[ebp+var_44],', 'ecx']
jnz ['short', 'loc_6A0']
jmp ['loc_C44']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+34h],', '1']
jnz ['short', 'loc_6EA']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
push ['ecx']
push ['2']
push ['offset', '?bom@?3??_UTF16BEFromUnicodeWithOffsets@@9@9']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ucnv_fromUWriteBytes_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+14h]']
jb ['short', 'loc_70C']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_C44']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax+38h]']
mov ['[ebp+var_5C],', 'cx']
movzx ['edx,', '[ebp+var_5C]']
test ['edx,', 'edx']
jz ['loc_81D']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_68],', 'cx']
movzx ['edx,', '[ebp+var_68]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['loc_81D']
cmp ['[ebp+var_38],', '4']
jb ['loc_81D']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax+1],', 'cl']
movzx ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+2],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[eax+3],', 'cl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '4']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_806']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_50],', '1']
xor ['eax,', 'eax']
mov ['[ebp+var_5C],', 'ax']
movzx ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+38h],', 'ecx']
movzx ['eax,', '[ebp+var_5C]']
test ['eax,', 'eax']
jnz ['loc_B28']
mov ['eax,', '[ebp+var_44]']
shl ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+var_38]']
jbe ['short', 'loc_842']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFFFEh']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_80]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_80]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['loc_93D']
cmp ['[ebp+var_80],', '0']
jbe ['loc_938']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_5C],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_8B3']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax+1],', 'cl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_92A']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '400h']
jnz ['short', 'loc_928']
cmp ['[ebp+var_80],', '2']
jb ['short', 'loc_928']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_68],', 'cx']
movzx ['edx,', '[ebp+var_68]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['short', 'loc_928']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax+1],', 'cl']
movzx ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+2],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[eax+3],', 'cl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '4']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_92A']
jmp ['short', 'loc_938']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
jmp ['loc_866']
jmp ['loc_A96']
cmp ['[ebp+var_80],', '0']
jbe ['loc_A96']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_5C],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_9B8']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax+1],', 'cl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_A88']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '400h']
jnz ['loc_A86']
cmp ['[ebp+var_80],', '2']
jb ['loc_A86']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_68],', 'cx']
movzx ['edx,', '[ebp+var_68]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['loc_A86']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax+1],', 'cl']
movzx ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+2],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[eax+3],', 'cl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '2']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_A88']
jmp ['short', 'loc_A96']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
jmp ['loc_93D']
cmp ['[ebp+var_80],', '0']
jnz ['short', 'loc_B1A']
cmp ['[ebp+var_44],', '0']
jbe ['short', 'loc_B0B']
cmp ['[ebp+var_38],', '0']
jbe ['short', 'loc_B0B']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_5C],', 'cx']
movzx ['edx,', '[ebp+var_5C]']
and ['edx,', '0FFFFF800h']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_AD9']
mov ['[ebp+var_148],', '1']
jmp ['short', 'loc_AE3']
mov ['[ebp+var_148],', '0']
cmp ['[ebp+var_148],', '0']
jnz ['short', 'loc_B09']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['[ebp+var_74],', 'al']
mov ['al,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[ebp+var_73],', 'al']
mov ['[ebp+var_44],', '2']
xor ['eax,', 'eax']
mov ['[ebp+var_5C],', 'ax']
jmp ['short', 'loc_B18']
mov ['[ebp+var_44],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_5C],', 'ax']
jmp ['short', 'loc_B26']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_B2F']
mov ['[ebp+var_44],', '0']
movzx ['eax,', '[ebp+var_5C]']
test ['eax,', 'eax']
jz ['loc_BCA']
mov ['[ebp+var_44],', '0']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '400h']
jnz ['short', 'loc_BB7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_BB5']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_68],', 'cx']
movzx ['edx,', '[ebp+var_68]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['short', 'loc_BAC']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['[ebp+var_74],', 'al']
mov ['al,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[ebp+var_73],', 'al']
movzx ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['[ebp+var_72],', 'al']
mov ['al,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[ebp+var_71],', 'al']
mov ['[ebp+var_44],', '4']
xor ['eax,', 'eax']
mov ['[ebp+var_5C],', 'ax']
jmp ['short', 'loc_BB5']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_BC0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
movzx ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+38h],', 'eax']
cmp ['[ebp+var_44],', '0']
jbe ['short', 'loc_C07']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ucnv_fromUWriteBytes_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_C29']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_C29']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_C29']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+18h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN45']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN44']
dd ['offset', '$LN41']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN42']
dd ['0FFFFFF8Ch,', '4']
dd ['offset', '$LN43']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16BEToUnicodeWithOffsets proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '144h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '51h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['dword', 'ptr', '[ecx+30h],', '8']
jge ['short', 'loc_CF7']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__UTF16ToUnicodeWithOffsets']
add ['esp,', '8']
jmp ['loc_136A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_44],', 'ecx']
jnz ['short', 'loc_D25']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jnz ['short', 'loc_D25']
jmp ['loc_136A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+14h]']
jb ['short', 'loc_D47']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_136A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_20]']
sar ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_5C],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'ax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_D91']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx+2Ch]']
mov ['[eax+25h],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+24h]']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['loc_FCB']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '25h']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_50],', '2']
jnz ['loc_E74']
mov ['eax,', '[ebp+var_80]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_80]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
or ['ecx,', 'eax']
mov ['[ebp+var_68],', 'cx']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_E57']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_E3A']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_50],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'ax']
jmp ['loc_FC2']
jmp ['short', 'loc_E6F']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '400h']
jnz ['short', 'loc_E6A']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'ax']
jmp ['short', 'loc_E6F']
jmp ['loc_FC2']
jmp ['loc_FB8']
cmp ['[ebp+var_50],', '4']
jnz ['loc_FB8']
mov ['eax,', '[ebp+var_80]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_80]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
or ['ecx,', 'eax']
mov ['[ebp+var_68],', 'cx']
mov ['eax,', '[ebp+var_80]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_80]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
or ['ecx,', 'eax']
mov ['[ebp+var_74],', 'cx']
movzx ['eax,', '[ebp+var_74]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['loc_F53']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '2']
jb ['short', 'loc_F20']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_F15']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_F42']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax+74h],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['[ebp+var_50],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'ax']
jmp ['short', 'loc_FC2']
jmp ['short', 'loc_FB8']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '2']
jl ['short', 'loc_F75']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_F91']
mov ['eax,', '[ebp+var_80]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
or ['ecx,', '100h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+18h],', 'ecx']
jmp ['loc_136A']
cmp ['[ebp+var_44],', '0']
ja ['loc_DAE']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_50]']
mov ['[eax+24h],', 'cl']
mov ['eax,', '[ebp+var_38]']
shl ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jbe ['short', 'loc_FE4']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0FFFFFFFEh']
mov ['[ebp+var_50],', 'eax']
movzx ['eax,', '[ebp+var_68]']
test ['eax,', 'eax']
jnz ['loc_1227']
cmp ['[ebp+var_50],', '0']
jbe ['loc_1227']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_50]']
shr ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_50]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['loc_10EB']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
or ['ecx,', 'eax']
mov ['[ebp+var_68],', 'cx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_1062']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_10D7']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '400h']
jnz ['short', 'loc_10D5']
cmp ['[ebp+var_50],', '2']
jb ['short', 'loc_10D5']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
or ['ecx,', 'eax']
mov ['[ebp+var_74],', 'cx']
movzx ['ecx,', '[ebp+var_74]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_10D5']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_10D7']
jmp ['short', 'loc_10E6']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jnz ['loc_101E']
jmp ['loc_1203']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
or ['ecx,', 'eax']
mov ['[ebp+var_68],', 'cx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_114C']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '2']
mov ['[ebp+var_5C],', 'eax']
jmp ['loc_11F4']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '400h']
jnz ['loc_11F2']
cmp ['[ebp+var_50],', '2']
jb ['loc_11F2']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
or ['ecx,', 'eax']
mov ['[ebp+var_74],', 'cx']
movzx ['ecx,', '[ebp+var_74]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_11F2']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '4']
mov ['[ebp+var_5C],', 'eax']
jmp ['short', 'loc_11F4']
jmp ['short', 'loc_1203']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jnz ['loc_10EB']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_1211']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'ax']
jmp ['short', 'loc_1227']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_44]']
lea ['edx,', '[ecx+eax*2-2]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_50]']
mov ['[ebp+var_38],', 'eax']
movzx ['eax,', '[ebp+var_68]']
test ['eax,', 'eax']
jz ['loc_1305']
movzx ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+25h],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '400h']
jnz ['loc_12FC']
cmp ['[ebp+var_44],', '2']
jb ['loc_12FA']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
or ['ecx,', 'eax']
mov ['[ebp+var_74],', 'cx']
movzx ['ecx,', '[ebp+var_74]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_12F1']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_12CD']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax+74h],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_12FA']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_1305']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_134F']
cmp ['[ebp+var_44],', '0']
jbe ['short', 'loc_134F']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_1324']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_134F']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+24h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
mov ['al,', '[eax]']
mov ['[edx+ecx+25h],', 'al']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx+24h]']
add ['dl,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+24h],', 'dl']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+18h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16BEGetNextUChar proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['dword', 'ptr', '[ecx+30h],', '8']
jge ['short', 'loc_13B4']
mov ['eax,', '0FFFFFFF7h']
jmp ['loc_1571']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jb ['short', 'loc_13E1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '8']
mov ['eax,', '0FFFFh']
jmp ['loc_1571']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
cmp ['eax,', '[ebp+var_14]']
jbe ['short', 'loc_1429']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx]']
mov ['[ecx+25h],', 'al']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['byte', 'ptr', '[ecx+24h],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Bh']
mov ['eax,', '0FFFFh']
jmp ['loc_1571']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
or ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['loc_1565']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '400h']
jnz ['loc_151B']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
cmp ['eax,', '[ebp+var_14]']
ja ['short', 'loc_14C1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
or ['ecx,', 'eax']
mov ['[ebp+var_2C],', 'cx']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_14B8']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_2C]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_14BF']
mov ['[ebp+var_20],', '0FFFFFFFEh']
jmp ['short', 'loc_1519']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '25h']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+24h],', 'al']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jb ['short', 'loc_14E5']
mov ['[ebp+var_20],', '0FFFFh']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Bh']
jmp ['short', 'loc_1522']
mov ['[ebp+var_20],', '0FFFFFFFEh']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_1565']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '25h']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['byte', 'ptr', '[ecx+24h],', '2']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-2]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-1]']
mov ['[eax+1],', 'dl']
mov ['[ebp+var_20],', '0FFFFh']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16BEReset	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '1']
jg ['short', 'loc_15BD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
jnz ['short', 'loc_15B3']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+30h],', '8']
jmp ['short', 'loc_15BD']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+30h],', '0']
cmp ['[ebp+arg_4],', '1']
jz ['short', 'loc_15DB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
cmp ['ecx,', '1']
jnz ['short', 'loc_15DB']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16BEOpen	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
cmp ['ecx,', '1']
ja ['short', 'loc_1620']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['__UTF16BEReset']
add ['esp,', '8']
jmp ['short', 'loc_1629']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16BEGetName proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
jnz ['short', 'loc_1672']
mov ['eax,', 'offset', '??_C@_08NLKHJAFK@UTF?916BE?$AA@']
jmp ['short', 'loc_1677']
jmp ['short', 'loc_1677']
mov ['eax,', 'offset', '??_C@_0BD@DKLBNCKF@UTF?916BE?0version?$DN1?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0BD@DKLBNCKF@UTF?916BE?0version?$DN1?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08NLKHJAFK@UTF?916BE?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16LEFromUnicodeWithOffsets	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '[ebp+var_14]']
sar ['ecx,', '1']
mov ['[ebp+var_44],', 'ecx']
jnz ['short', 'loc_16DC']
jmp ['loc_1C83']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+34h],', '1']
jnz ['short', 'loc_1726']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
push ['ecx']
push ['2']
push ['offset', '?bom@?3??_UTF16LEFromUnicodeWithOffsets@@9@9']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ucnv_fromUWriteBytes_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+14h]']
jb ['short', 'loc_1748']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_1C83']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax+38h]']
mov ['[ebp+var_5C],', 'cx']
movzx ['edx,', '[ebp+var_5C]']
test ['edx,', 'edx']
jz ['loc_185C']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_68],', 'cx']
movzx ['edx,', '[ebp+var_68]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['loc_185C']
cmp ['[ebp+var_38],', '4']
jb ['loc_185C']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax],', 'cl']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+1],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[eax+2],', 'cl']
movzx ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+3],', 'al']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '4']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_1845']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_50],', '1']
xor ['eax,', 'eax']
mov ['[ebp+var_5C],', 'ax']
movzx ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+38h],', 'ecx']
movzx ['eax,', '[ebp+var_5C]']
test ['eax,', 'eax']
jnz ['loc_1B67']
mov ['eax,', '[ebp+var_44]']
shl ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+var_38]']
jbe ['short', 'loc_1881']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFFFEh']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_80]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_80]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['loc_197C']
cmp ['[ebp+var_80],', '0']
jbe ['loc_1977']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_5C],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_18F2']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax],', 'cl']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+1],', 'al']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1969']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '400h']
jnz ['short', 'loc_1967']
cmp ['[ebp+var_80],', '2']
jb ['short', 'loc_1967']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_68],', 'cx']
movzx ['edx,', '[ebp+var_68]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['short', 'loc_1967']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax],', 'cl']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+1],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[eax+2],', 'cl']
movzx ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+3],', 'al']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '4']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1969']
jmp ['short', 'loc_1977']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
jmp ['loc_18A5']
jmp ['loc_1AD5']
cmp ['[ebp+var_80],', '0']
jbe ['loc_1AD5']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_5C],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_19F7']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax],', 'cl']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+1],', 'al']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_1AC7']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '400h']
jnz ['loc_1AC5']
cmp ['[ebp+var_80],', '2']
jb ['loc_1AC5']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_68],', 'cx']
movzx ['edx,', '[ebp+var_68]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['loc_1AC5']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[eax],', 'cl']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+1],', 'al']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[eax+2],', 'cl']
movzx ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+3],', 'al']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '2']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_1AC7']
jmp ['short', 'loc_1AD5']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
jmp ['loc_197C']
cmp ['[ebp+var_80],', '0']
jnz ['short', 'loc_1B59']
cmp ['[ebp+var_44],', '0']
jbe ['short', 'loc_1B4A']
cmp ['[ebp+var_38],', '0']
jbe ['short', 'loc_1B4A']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_5C],', 'cx']
movzx ['edx,', '[ebp+var_5C]']
and ['edx,', '0FFFFF800h']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_1B18']
mov ['[ebp+var_148],', '1']
jmp ['short', 'loc_1B22']
mov ['[ebp+var_148],', '0']
cmp ['[ebp+var_148],', '0']
jnz ['short', 'loc_1B48']
mov ['al,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[ebp+var_74],', 'al']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['[ebp+var_73],', 'al']
mov ['[ebp+var_44],', '2']
xor ['eax,', 'eax']
mov ['[ebp+var_5C],', 'ax']
jmp ['short', 'loc_1B57']
mov ['[ebp+var_44],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_5C],', 'ax']
jmp ['short', 'loc_1B65']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_1B6E']
mov ['[ebp+var_44],', '0']
movzx ['eax,', '[ebp+var_5C]']
test ['eax,', 'eax']
jz ['loc_1C09']
mov ['[ebp+var_44],', '0']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '400h']
jnz ['short', 'loc_1BF6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_1BF4']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_68],', 'cx']
movzx ['edx,', '[ebp+var_68]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['short', 'loc_1BEB']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['al,', 'byte', 'ptr', '[ebp+var_5C]']
mov ['[ebp+var_74],', 'al']
movzx ['eax,', '[ebp+var_5C]']
sar ['eax,', '8']
mov ['[ebp+var_73],', 'al']
mov ['al,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[ebp+var_72],', 'al']
movzx ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['[ebp+var_71],', 'al']
mov ['[ebp+var_44],', '4']
xor ['eax,', 'eax']
mov ['[ebp+var_5C],', 'ax']
jmp ['short', 'loc_1BF4']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_1BFF']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
movzx ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+38h],', 'eax']
cmp ['[ebp+var_44],', '0']
jbe ['short', 'loc_1C46']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ucnv_fromUWriteBytes_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_1C68']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_1C68']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_1C68']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+18h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN45_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN44_0']
dd ['offset', '$LN41_0']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN42_0']
dd ['0FFFFFF8Ch,', '4']
dd ['offset', '$LN43_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16LEToUnicodeWithOffsets proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '144h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '51h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['dword', 'ptr', '[ecx+30h],', '8']
jge ['short', 'loc_1D2B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__UTF16ToUnicodeWithOffsets']
add ['esp,', '8']
jmp ['loc_23A1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_44],', 'ecx']
jnz ['short', 'loc_1D59']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jnz ['short', 'loc_1D59']
jmp ['loc_23A1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+14h]']
jb ['short', 'loc_1D7B']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_23A1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
sar ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_5C],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'ax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_1DC8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx+2Ch]']
mov ['[eax+25h],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+24h]']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['loc_2002']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '25h']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_50],', '2']
jnz ['loc_1EAB']
mov ['eax,', '[ebp+var_80]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_80]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['ecx,', 'eax']
mov ['[ebp+var_68],', 'cx']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_1E8E']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_1E71']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_50],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'ax']
jmp ['loc_1FF9']
jmp ['short', 'loc_1EA6']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '400h']
jnz ['short', 'loc_1EA1']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'ax']
jmp ['short', 'loc_1EA6']
jmp ['loc_1FF9']
jmp ['loc_1FEF']
cmp ['[ebp+var_50],', '4']
jnz ['loc_1FEF']
mov ['eax,', '[ebp+var_80]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_80]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['ecx,', 'eax']
mov ['[ebp+var_68],', 'cx']
mov ['eax,', '[ebp+var_80]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_80]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
or ['ecx,', 'eax']
mov ['[ebp+var_74],', 'cx']
movzx ['eax,', '[ebp+var_74]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['loc_1F8A']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '2']
jb ['short', 'loc_1F57']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_1F4C']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '4']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_1F79']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax+74h],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['[ebp+var_50],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'ax']
jmp ['short', 'loc_1FF9']
jmp ['short', 'loc_1FEF']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '2']
jl ['short', 'loc_1FAC']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1FC8']
mov ['eax,', '[ebp+var_80]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
or ['ecx,', '100h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+18h],', 'ecx']
jmp ['loc_23A1']
cmp ['[ebp+var_44],', '0']
ja ['loc_1DE5']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_50]']
mov ['[eax+24h],', 'cl']
mov ['eax,', '[ebp+var_38]']
shl ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jbe ['short', 'loc_201B']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0FFFFFFFEh']
mov ['[ebp+var_50],', 'eax']
movzx ['eax,', '[ebp+var_68]']
test ['eax,', 'eax']
jnz ['loc_225E']
cmp ['[ebp+var_50],', '0']
jbe ['loc_225E']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_50]']
shr ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_50]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['loc_2122']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['ecx,', 'eax']
mov ['[ebp+var_68],', 'cx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_2099']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_210E']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '400h']
jnz ['short', 'loc_210C']
cmp ['[ebp+var_50],', '2']
jb ['short', 'loc_210C']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['ecx,', 'eax']
mov ['[ebp+var_74],', 'cx']
movzx ['ecx,', '[ebp+var_74]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_210C']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_210E']
jmp ['short', 'loc_211D']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jnz ['loc_2055']
jmp ['loc_223A']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['ecx,', 'eax']
mov ['[ebp+var_68],', 'cx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_2183']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '2']
mov ['[ebp+var_5C],', 'eax']
jmp ['loc_222B']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '400h']
jnz ['loc_2229']
cmp ['[ebp+var_50],', '2']
jb ['loc_2229']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['ecx,', 'eax']
mov ['[ebp+var_74],', 'cx']
movzx ['ecx,', '[ebp+var_74]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_2229']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '4']
mov ['[ebp+var_5C],', 'eax']
jmp ['short', 'loc_222B']
jmp ['short', 'loc_223A']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jnz ['loc_2122']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_2248']
xor ['eax,', 'eax']
mov ['[ebp+var_68],', 'ax']
jmp ['short', 'loc_225E']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_44]']
lea ['edx,', '[ecx+eax*2-2]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_50]']
mov ['[ebp+var_38],', 'eax']
movzx ['eax,', '[ebp+var_68]']
test ['eax,', 'eax']
jz ['loc_233C']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_68]']
mov ['[eax+25h],', 'cl']
movzx ['eax,', '[ebp+var_68]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+26h],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
movzx ['eax,', '[ebp+var_68]']
and ['eax,', '400h']
jnz ['loc_2333']
cmp ['[ebp+var_44],', '2']
jb ['loc_2331']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['ecx,', 'eax']
mov ['[ebp+var_74],', 'cx']
movzx ['ecx,', '[ebp+var_74]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_2328']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_2304']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax+74h],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_2331']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_233C']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_2386']
cmp ['[ebp+var_44],', '0']
jbe ['short', 'loc_2386']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_235B']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_2386']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+24h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
mov ['al,', '[eax]']
mov ['[edx+ecx+25h],', 'al']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx+24h]']
add ['dl,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+24h],', 'dl']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+18h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16LEGetNextUChar proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['dword', 'ptr', '[ecx+30h],', '8']
jge ['short', 'loc_23EC']
mov ['eax,', '0FFFFFFF7h']
jmp ['loc_25A9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jb ['short', 'loc_2419']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '8']
mov ['eax,', '0FFFFh']
jmp ['loc_25A9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
cmp ['eax,', '[ebp+var_14]']
jbe ['short', 'loc_2461']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx]']
mov ['[ecx+25h],', 'al']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['byte', 'ptr', '[ecx+24h],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Bh']
mov ['eax,', '0FFFFh']
jmp ['loc_25A9']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['loc_259D']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '400h']
jnz ['loc_2553']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
cmp ['eax,', '[ebp+var_14]']
ja ['short', 'loc_24F9']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['ecx,', 'eax']
mov ['[ebp+var_2C],', 'cx']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_24F0']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_2C]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_24F7']
mov ['[ebp+var_20],', '0FFFFFFFEh']
jmp ['short', 'loc_2551']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '25h']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+24h],', 'al']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jb ['short', 'loc_251D']
mov ['[ebp+var_20],', '0FFFFh']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Bh']
jmp ['short', 'loc_255A']
mov ['[ebp+var_20],', '0FFFFFFFEh']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_259D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '25h']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['byte', 'ptr', '[ecx+24h],', '2']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-2]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx-1]']
mov ['[eax+1],', 'dl']
mov ['[ebp+var_20],', '0FFFFh']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16LEReset	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '1']
jg ['short', 'loc_25F5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
jnz ['short', 'loc_25EB']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+30h],', '8']
jmp ['short', 'loc_25F5']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+30h],', '0']
cmp ['[ebp+arg_4],', '1']
jz ['short', 'loc_2613']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
cmp ['ecx,', '1']
jnz ['short', 'loc_2613']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16LEOpen	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
cmp ['ecx,', '1']
ja ['short', 'loc_2658']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['__UTF16LEReset']
add ['esp,', '8']
jmp ['short', 'loc_2661']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16LEGetName proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
jnz ['short', 'loc_26AA']
mov ['eax,', 'offset', '??_C@_08NBDJLNFA@UTF?916LE?$AA@']
jmp ['short', 'loc_26AF']
jmp ['short', 'loc_26AF']
mov ['eax,', 'offset', '??_C@_0BD@MAFHNOBF@UTF?916LE?0version?$DN1?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BD@MAFHNOBF@UTF?916LE?0version?$DN1?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_08NBDJLNFA@UTF?916LE?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16Reset	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '1']
jg ['short', 'loc_2706']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+30h],', '0']
cmp ['[ebp+arg_4],', '1']
jz ['short', 'loc_2716']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16Open	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
cmp ['ecx,', '2']
ja ['short', 'loc_27AD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
cmp ['ecx,', '2']
jnz ['short', 'loc_279D']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_279D']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '__UTF16v2Data']
push ['1']
mov ['eax,', 'off_58C']
add ['eax,', '48h']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['4']
mov ['ecx,', 'off_58C']
add ['ecx,', '48h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['__UTF16Reset']
add ['esp,', '8']
jmp ['short', 'loc_27B6']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16GetName	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
jnz ['short', 'loc_27FE']
mov ['eax,', 'offset', '??_C@_06KNDPGIKI@UTF?916?$AA@']
jmp ['short', 'loc_281A']
jmp ['short', 'loc_281A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
cmp ['ecx,', '1']
jnz ['short', 'loc_2815']
mov ['eax,', 'offset', '??_C@_0BB@HAPLKFNG@UTF?916?0version?$DN1?$AA@']
jmp ['short', 'loc_281A']
jmp ['short', 'loc_281A']
mov ['eax,', 'offset', '??_C@_0BB@FLNGPGBF@UTF?916?0version?$DN2?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BB@FLNGPGBF@UTF?916?0version?$DN2?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BB@HAPLKFNG@UTF?916?0version?$DN1?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_06KNDPGIKI@UTF?916?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16ToUnicodeWithOffsets proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_2AA6']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['loc_2AA6']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '9']
ja ['$LN33']
mov ['ecx,', '[ebp+var_124]']
movzx ['edx,', 'ds:$LN40[ecx]']
jmp ['ds:$LN41_1[edx*4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx]']
mov ['[eax+25h],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['[ebp+var_38],', '1']
jmp ['$LN33']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax]']
mov ['[ebp+var_4D],', 'cl']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+25h]']
cmp ['ecx,', '0FEh']
jnz ['short', 'loc_294F']
movzx ['eax,', '[ebp+var_4D]']
cmp ['eax,', '0FFh']
jnz ['short', 'loc_294F']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', 'offset', '__UTF16LEData_56']
jnz ['short', 'loc_2946']
mov ['[ebp+var_38],', '7']
jmp ['short', 'loc_294D']
mov ['[ebp+var_38],', '8']
jmp ['short', 'loc_29B4']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+25h]']
cmp ['ecx,', '0FFh']
jnz ['short', 'loc_2987']
movzx ['eax,', '[ebp+var_4D]']
cmp ['eax,', '0FEh']
jnz ['short', 'loc_2987']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', 'offset', '__UTF16BEData_56']
jnz ['short', 'loc_297E']
mov ['[ebp+var_38],', '6']
jmp ['short', 'loc_2985']
mov ['[ebp+var_38],', '9']
jmp ['short', 'loc_29B4']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', 'offset', '__UTF16Data_56']
jz ['short', 'loc_299F']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', 'offset', '__UTF16v2Data']
jnz ['short', 'loc_29B4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '0Fh']
cmp ['ecx,', '1']
jnz ['short', 'loc_29B4']
mov ['[ebp+var_38],', '6']
cmp ['[ebp+var_38],', '8']
jl ['short', 'loc_29D8']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax+8]']
mov ['[ebp+var_44],', 'ecx']
jmp ['short', 'loc_2A4D']
cmp ['[ebp+var_38],', '6']
jge ['short', 'loc_2A17']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+8]']
jz ['short', 'loc_29F9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', 'offset', '__UTF16LEData_56']
jnz ['short', 'loc_2A0E']
mov ['[ebp+var_38],', '9']
jmp ['short', 'loc_2A15']
mov ['[ebp+var_38],', '8']
jmp ['short', 'loc_2A4D']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_4D]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '12h']
jmp ['loc_2B41']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+30h],', 'ecx']
jmp ['loc_28A6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__UTF16BEToUnicodeWithOffsets']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', '$LN33']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__UTF16LEToUnicodeWithOffsets']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_28A6']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_2ADB']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_2ADB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_5C]']
jnb ['short', 'loc_2ADB']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_2ABB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_2B38']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2B38']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '8']
jz ['short', 'loc_2B16']
cmp ['[ebp+var_124],', '9']
jz ['short', 'loc_2B28']
jmp ['short', 'loc_2B38']
jmp ['short', 'loc_2B38']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__UTF16BEToUnicodeWithOffsets']
add ['esp,', '8']
jmp ['short', 'loc_2B38']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__UTF16LEToUnicodeWithOffsets']
add ['esp,', '8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+30h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN31']
dd ['offset', '$LN13']
dd ['offset', '$LN12']
dd ['offset', '$LN33']
db ['4,', '4,', '4,', '4']
db ['2,', '3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__UTF16GetNextUChar proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+30h]']
mov ['[ebp+var_C4],', 'edx']
cmp ['[ebp+var_C4],', '8']
jz ['short', 'loc_2BB9']
cmp ['[ebp+var_C4],', '9']
jz ['short', 'loc_2BCB']
jmp ['short', 'loc_2BDD']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__UTF16BEGetNextUChar']
add ['esp,', '8']
jmp ['short', 'loc_2BE2']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__UTF16LEGetNextUChar']
add ['esp,', '8']
jmp ['short', 'loc_2BE2']
mov ['eax,', '0FFFFFFF7h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_ucnv_getNonSurrogateUnicodeSet_56:near']
extrn ['_ucnv_fromUWriteBytes_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
end

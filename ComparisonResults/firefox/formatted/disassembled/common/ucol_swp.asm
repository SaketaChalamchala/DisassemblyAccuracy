endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??2UMemory@icu_56@@SAPAXIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??3UMemory@icu_56@@SAXPAX0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UObject@icu_56@@6B@']
public ['??_7UObject@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4UObject@icu_56@@6B@']
dd ['offset', '??_R0?AVUObject@icu_56@@@8']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??3@YAXPAX@Z']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '??3@YAXPAX@Z']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '??3@YAXPAX@Z']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_24B']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_255']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??4UObject@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??_GUObject@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2DB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??_EUObject@icu_56@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_355']
push ['offset', '??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_34D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_374']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_371']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??_FMutex@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['??0Mutex@icu_56@@QAE@PAUUMutex@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??0Mutex@icu_56@@QAE@PAUUMutex@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_umtx_lock_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
??1Mutex@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_umtx_unlock_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_utrie_swap_56	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_4AF']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4B6']
xor ['eax,', 'eax']
jmp ['loc_6EC']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_4CE']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_4CE']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_4DE']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_4DE']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_6EC']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_4FA']
cmp ['[ebp+arg_8],', '10h']
jnb ['short', 'loc_4FA']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_6EC']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_24],', '54726965h']
jnz ['short', 'loc_5BB']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0Fh']
cmp ['eax,', '5']
jnz ['short', 'loc_5BB']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '4']
and ['eax,', '0Fh']
cmp ['eax,', '2']
jnz ['short', 'loc_5BB']
cmp ['[ebp+var_1C],', '800h']
jl ['short', 'loc_5BB']
mov ['eax,', '[ebp+var_1C]']
and ['eax,', '1Fh']
jnz ['short', 'loc_5BB']
cmp ['[ebp+var_18],', '20h']
jl ['short', 'loc_5BB']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '3']
jnz ['short', 'loc_5BB']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '200h']
jz ['short', 'loc_5CB']
cmp ['[ebp+var_18],', '120h']
jge ['short', 'loc_5CB']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['loc_6EC']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '100h']
setnz ['cl']
mov ['[ebp+var_39],', 'cl']
movsx ['eax,', '[ebp+var_39]']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '2']
add ['eax,', '2']
imul ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_1C]']
lea ['edx,', '[eax+ecx*2+10h]']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+arg_8],', '0']
jl ['loc_6E9']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_30]']
jge ['short', 'loc_617']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_6EC']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_48],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+var_39]']
test ['eax,', 'eax']
jz ['short', 'loc_6B6']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '10h']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_48]']
lea ['eax,', '[edx+ecx*2+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+edx*2+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_6E9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '10h']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '[ebp+var_18]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN16']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN15']
dd ['offset', '$LN14']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucol_looksLikeCollationBinary_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '198h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_198]']
mov ['ecx,', '66h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_79E']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_79E']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jge ['short', 'loc_7A5']
xor ['al,', 'al']
jmp ['loc_8E9']
mov ['[ebp+var_C],', '0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_swapDataHeader_56']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_817']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '55h']
jnz ['short', 'loc_817']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '43h']
jnz ['short', 'loc_817']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '6Fh']
jnz ['short', 'loc_817']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
cmp ['ecx,', '6Ch']
jnz ['short', 'loc_817']
mov ['al,', '1']
jmp ['loc_8E9']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_24],', 'eax']
push ['0A8h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_853']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+Dst],', 'eax']
jmp ['short', 'loc_883']
cmp ['[ebp+arg_8],', '0A8h']
jl ['short', 'loc_87F']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Dst]']
jge ['short', 'loc_883']
xor ['al,', 'al']
jmp ['short', 'loc_8E9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C4],', 'eax']
cmp ['[ebp+var_C4],', '20030618h']
jnz ['short', 'loc_8BC']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+50h]']
cmp ['ecx,', '3']
jz ['short', 'loc_8C0']
xor ['al,', 'al']
jmp ['short', 'loc_8E9']
mov ['eax,', '[ebp+var_24]']
movsx ['ecx,', 'byte', 'ptr', '[eax+41h]']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_8E3']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+42h]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_8E7']
xor ['al,', 'al']
jmp ['short', 'loc_8E9']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '198h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN17']
dd ['offset', '$LN15_0']
dd ['0FFFFFF2Ch,', '0A8h']
dd ['offset', '$LN16_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?swapFormatVersion3@?A0xf15769f3@@YAHPBUUDataSwapper@@PBXHPAXPAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1E0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1E0]']
mov ['ecx,', '78h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9BC']
xor ['eax,', 'eax']
jmp ['loc_1164']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9DA']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_9DA']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jl ['short', 'loc_9DA']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_9EA']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_9EA']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_1164']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_30],', 'eax']
push ['0A8h']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_A38']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+Dst],', 'eax']
jmp ['short', 'loc_A89']
cmp ['[ebp+arg_8],', '0A8h']
jl ['short', 'loc_A64']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Dst]']
jge ['short', 'loc_A89']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0FA@GHOCPEDB@ucol_swap?$CIformatVersion?$DN3?$CJ?3?5too?5@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_1164']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '20030618h']
jnz ['short', 'loc_AC2']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+50h]']
cmp ['ecx,', '3']
jz ['short', 'loc_AFA']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+51h]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
movzx ['eax,', 'byte', 'ptr', '[edx+50h]']
push ['eax']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
push ['offset', '??_C@_0GA@EDGMMAGA@ucol_swap?$CIformatVersion?$DN3?$CJ?3?5magi@']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_printError_56']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_1164']
mov ['eax,', '[ebp+var_24]']
movsx ['ecx,', 'byte', 'ptr', '[eax+41h]']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_B1D']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+42h]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_B4E']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+42h]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
movsx ['eax,', 'byte', 'ptr', '[edx+41h]']
push ['eax']
push ['offset', '??_C@_0FE@PMMIBHKJ@ucol_swap?$CIformatVersion?$DN3?$CJ?3?5endi@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['eax,', 'eax']
jmp ['loc_1164']
cmp ['[ebp+arg_8],', '0']
jl ['loc_115E']
mov ['eax,', '[ebp+Src]']
cmp ['eax,', '[ebp+var_18]']
jz ['short', 'loc_B85']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_DC],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_CC],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C0],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_BC],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+3Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_A4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+54h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+58h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_88],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '40h']
sub ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '54h']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '54h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+2]']
mov ['[eax+41h],', 'dl']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+3]']
mov ['[eax+42h],', 'dl']
cmp ['[ebp+var_DC],', '0']
jz ['short', 'loc_DFB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_DC]']
push ['ecx']
mov ['edx,', '[ebp+var_C8]']
sub ['edx,', '[ebp+var_DC]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_DC]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_CC],', '0']
jz ['short', 'loc_E73']
cmp ['[ebp+var_C8],', '0']
jz ['short', 'loc_E73']
cmp ['[ebp+var_C4],', '0']
jz ['short', 'loc_E2A']
mov ['eax,', '[ebp+var_C4]']
sub ['eax,', '[ebp+var_C8]']
mov ['[ebp+var_EC],', 'eax']
jmp ['short', 'loc_E3C']
mov ['eax,', '[ebp+var_CC]']
sub ['eax,', '[ebp+var_C8]']
mov ['[ebp+var_EC],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_C8]']
push ['ecx']
mov ['edx,', '[ebp+var_EC]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_BC],', '0']
jz ['short', 'loc_EEF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+var_BC]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+var_BC]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_CC],', '0']
jz ['short', 'loc_F35']
mov ['eax,', '[ebp+var_B8]']
sub ['eax,', '[ebp+var_CC]']
mov ['[ebp+var_EC],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_CC]']
push ['ecx']
mov ['edx,', '[ebp+var_EC]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_CC]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_utrie_swap_56']
add ['esp,', '14h']
cmp ['[ebp+var_B0],', '0']
jz ['short', 'loc_F78']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_B8]']
push ['ecx']
mov ['edx,', '[ebp+var_B0]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_B8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_D8],', '0']
jz ['short', 'loc_FBE']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_D8]']
push ['ecx']
mov ['edx,', '[ebp+var_D4]']
sub ['edx,', '[ebp+var_D8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_D8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_A4],', '0']
jz ['short', 'loc_1014']
mov ['eax,', '[ebp+var_24]']
movzx ['ecx,', 'byte', 'ptr', '[eax+43h]']
imul ['ecx,', '[ebp+var_A4]']
shl ['ecx,', '1']
mov ['[ebp+var_EC],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_D4]']
push ['ecx']
mov ['edx,', '[ebp+var_EC]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_D4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_8C],', '0']
jz ['loc_10B9']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_8C]']
mov ['esi,', 'esp']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'ax']
mov ['[ebp+var_F8],', 'ecx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_8C]']
mov ['esi,', 'esp']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'ax']
mov ['[ebp+var_104],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_8C]']
push ['ecx']
mov ['edx,', '[ebp+var_104]']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_F8]']
lea ['ecx,', '[edx+eax*4+4]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
add ['edx,', '[ebp+var_8C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_88],', '0']
jz ['loc_115E']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_88]']
mov ['esi,', 'esp']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'ax']
mov ['[ebp+var_110],', 'ecx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_88]']
mov ['esi,', 'esp']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'ax']
mov ['[ebp+var_11C],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '[ebp+var_88]']
push ['ecx']
mov ['edx,', '[ebp+var_11C]']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_110]']
lea ['ecx,', '[edx+eax*2+4]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
add ['edx,', '[ebp+var_88]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Dst]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1E0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN28']
dd ['offset', '$LN27']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0FE@PMMIBHKJ@ucol_swap?$CIformatVersion?$DN3?$CJ?3?5endi@']
db ["'match", 'the', "swapper',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0GA@EDGMMAGA@ucol_swap?$CIformatVersion?$DN3?$CJ?3?5magi@']
db ["'02x", 'is', 'not', 'a', 'collation', "binary',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0FA@GHOCPEDB@ucol_swap?$CIformatVersion?$DN3?$CJ?3?5too?5@']
db ["'ollation", "data',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
?swapFormatVersion4@?A0xf15769f3@@YAHPBUUDataSwapper@@PBXHPAXAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '188h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_188]']
mov ['ecx,', '62h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_12F8']
xor ['eax,', 'eax']
jmp ['loc_199E']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+Src]']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_133B']
cmp ['[ebp+arg_8],', '8']
jge ['short', 'loc_133B']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0FA@DHAJIPBE@ucol_swap?$CIformatVersion?$DN4?$CJ?3?5too?5@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_199E']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+var_7C],', 'eax']
mov ['eax,', '[ebp+var_7C]']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_1392']
mov ['eax,', '[ebp+var_88]']
shl ['eax,', '2']
cmp ['[ebp+arg_8],', 'eax']
jge ['short', 'loc_1392']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0FA@DHAJIPBE@ucol_swap?$CIformatVersion?$DN4?$CJ?3?5too?5@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_199E']
mov ['[ebp+var_94],', '1']
jmp ['short', 'loc_13AD']
mov ['eax,', '[ebp+var_94]']
add ['eax,', '1']
mov ['[ebp+var_94],', 'eax']
cmp ['[ebp+var_94],', '13h']
jg ['short', 'loc_13E9']
mov ['eax,', '[ebp+var_94]']
cmp ['eax,', '[ebp+var_88]']
jge ['short', 'loc_13E9']
mov ['eax,', '[ebp+var_94]']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_94]']
mov ['[ebp+ecx*4+var_7C],', 'eax']
jmp ['short', 'loc_139E']
mov ['eax,', '[ebp+var_88]']
mov ['[ebp+var_A0],', 'eax']
jmp ['short', 'loc_1406']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '1']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '13h']
jg ['short', 'loc_141F']
mov ['eax,', '[ebp+var_A0]']
mov ['[ebp+eax*4+var_7C],', '0FFFFFFFFh']
jmp ['short', 'loc_13F7']
mov ['[ebp+var_24],', '0']
cmp ['[ebp+var_88],', '13h']
jle ['short', 'loc_143A']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+Size],', 'eax']
jmp ['short', 'loc_1464']
cmp ['[ebp+var_88],', '5']
jle ['short', 'loc_1455']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[ebp+eax*4+var_80]']
mov ['[ebp+Size],', 'ecx']
jmp ['short', 'loc_1464']
mov ['eax,', '[ebp+var_88]']
shl ['eax,', '2']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_1475']
mov ['eax,', '[ebp+Size]']
jmp ['loc_199E']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Size]']
jge ['short', 'loc_14A5']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0FA@DHAJIPBE@ucol_swap?$CIformatVersion?$DN4?$CJ?3?5too?5@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_199E']
mov ['eax,', '[ebp+Src]']
cmp ['eax,', '[ebp+Dst]']
jz ['short', 'loc_14D2']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_88]']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', '5']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_1567']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', '7']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_15C2']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_utrie2_swap_56']
add ['esp,', '14h']
mov ['[ebp+var_B8],', '8']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_161A']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0EB@KBOODMHK@ucol_swap?$CIformatVersion?$DN4?$CJ?3?5unkn@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_199E']
mov ['[ebp+var_B8],', '9']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_1681']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', '0Ah']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_16D9']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0EC@JAIMGEPM@ucol_swap?$CIformatVersion?$DN4?$CJ?3?5unkn@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_199E']
mov ['[ebp+var_B8],', '0Bh']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_1740']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', '0Ch']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_17A7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', '0Dh']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_180E']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', '0Eh']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_1875']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', '0Fh']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_18DC']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', '10h']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_1943']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_C4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_C4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', '12h']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_7C]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+eax*4+var_78]']
sub ['ecx,', '[ebp+var_C4]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_1998']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0EC@IDFLCEAI@ucol_swap?$CIformatVersion?$DN4?$CJ?3?5unkn@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['short', 'loc_199E']
mov ['eax,', '[ebp+Size]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN33']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '188h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN32']
dd ['offset', '$LN31']
assume ['cs:_rdata']
public ['??_C@_0EC@IDFLCEAI@ucol_swap?$CIformatVersion?$DN4?$CJ?3?5unkn@']
db ['0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EC@JAIMGEPM@ucol_swap?$CIformatVersion?$DN4?$CJ?3?5unkn@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EB@KBOODMHK@ucol_swap?$CIformatVersion?$DN4?$CJ?3?5unkn@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FA@DHAJIPBE@ucol_swap?$CIformatVersion?$DN4?$CJ?3?5too?5@']
db ["'ollation", "data',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucol_swap_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1B42']
xor ['eax,', 'eax']
jmp ['loc_1CD0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_swapDataHeader_56']
add ['esp,', '14h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1BA0']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?swapFormatVersion3@?A0xf15769f3@@YAHPBUUDataSwapper@@PBXHPAXPAW4UErrorCode@@@Z']
add ['esp,', '14h']
jmp ['loc_1CD0']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '55h']
jnz ['short', 'loc_1BF1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '43h']
jnz ['short', 'loc_1BF1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '6Fh']
jnz ['short', 'loc_1BF1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
cmp ['ecx,', '6Ch']
jnz ['short', 'loc_1BF1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '3']
jl ['short', 'loc_1BF1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '5']
jle ['short', 'loc_1C42']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Bh]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
push ['edx']
push ['offset', '??_C@_0GN@LMNEJPBK@ucol_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4?$CF0@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_1CD0']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_1C5A']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_C],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '4']
jl ['short', 'loc_1C90']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?swapFormatVersion4@?A0xf15769f3@@YAHPBUUDataSwapper@@PBXHPAXAAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1CAF']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?swapFormatVersion3@?A0xf15769f3@@YAHPBUUDataSwapper@@PBXHPAXPAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1CCE']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_20]']
jmp ['short', 'loc_1CD0']
jmp ['short', 'loc_1CD0']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0GN@LMNEJPBK@ucol_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4?$CF0@']
db ["'.%02x)", 'is', 'not', 'recognized', 'as', 'collation', "data',0Ah,0"]
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ucol_swapInverseUCA_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '134h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_134]']
mov ['ecx,', '4Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+Size],', '0']
mov ['[ebp+var_6C],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_64],', '0']
mov ['[ebp+var_60],', '0']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_5B],', '0']
mov ['[ebp+var_5A],', '0']
mov ['[ebp+var_59],', '0']
mov ['[ebp+var_58],', '0']
mov ['[ebp+var_57],', '0']
mov ['[ebp+var_56],', '0']
mov ['[ebp+var_55],', '0']
mov ['[ebp+var_54],', '0']
mov ['[ebp+var_53],', '0']
mov ['[ebp+var_52],', '0']
mov ['[ebp+var_51],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_swapDataHeader_56']
add ['esp,', '14h']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1E09']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1E10']
xor ['eax,', 'eax']
jmp ['loc_2079']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '49h']
jnz ['short', 'loc_1E61']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '6Eh']
jnz ['short', 'loc_1E61']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '76h']
jnz ['short', 'loc_1E61']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
cmp ['ecx,', '43h']
jnz ['short', 'loc_1E61']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '2']
jnz ['short', 'loc_1E61']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
cmp ['ecx,', '1']
jge ['short', 'loc_1EB2']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Dh]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Bh]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
push ['edx']
push ['offset', '??_C@_0HI@MDHGHJMJ@ucol_swapInverseUCA?$CI?$CJ?3?5data?5form@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '20h']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_2079']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+Src]']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_1EED']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+Size],', 'eax']
jmp ['short', 'loc_1F3D']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_18]']
cmp ['eax,', '20h']
jl ['short', 'loc_1F18']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+Size]']
jnb ['short', 'loc_1F3D']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0FH@MFHCONKO@ucol_swapInverseUCA?$CI?$CJ?3?5too?5few?5b@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_2079']
cmp ['[ebp+arg_8],', '0']
jl ['loc_2073']
mov ['eax,', '[ebp+Src]']
cmp ['eax,', '[ebp+Dst]']
jz ['short', 'loc_1F71']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_6C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_68],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_64],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_60],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
push ['14h']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_64]']
push ['ecx']
mov ['edx,', '[ebp+var_6C]']
imul ['edx,', '3']
shl ['edx,', '2']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_64]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+var_68]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+Size]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '134h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN14_0']
db ['3', 'dup(0FFh)']
dd ['offset', 'loc_1E+2']
dd ['offset', '$LN13']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FH@MFHCONKO@ucol_swapInverseUCA?$CI?$CJ?3?5too?5few?5b@']
db ["'e", 'UCA', 'collation', "data',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0HI@MDHGHJMJ@ucol_swapInverseUCA?$CI?$CJ?3?5data?5form@']
db ["'rsion", '%02x.%02x)', 'is', 'not', 'an', 'inverse', 'UCA', 'collation', "file',0Ah,0"]
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1UObject@icu_56@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['_umtx_lock_56:near']
extrn ['_umtx_unlock_56:near']
extrn ['_udata_readInt32_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_memset:near']
extrn ['_udata_swapDataHeader_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_udata_printError_56:near']
extrn ['_utrie2_swap_56:near']
end

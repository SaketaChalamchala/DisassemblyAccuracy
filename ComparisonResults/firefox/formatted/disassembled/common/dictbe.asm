endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??2UMemory@icu_56@@SAPAXIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3UMemory@icu_56@@SAXPAX0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UObject@icu_56@@6B@']
public ['??_7UObject@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4UObject@icu_56@@6B@']
dd ['offset', '??_R0?AVUObject@icu_56@@@8']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_367']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_371']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UObject@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUObject@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3F7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUObject@icu_56@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_471']
push ['offset', '??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_469']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_490']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_48D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4Replaceable@icu_56@@6B@']
public ['??_7Replaceable@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?hasMetaData@Replaceable@icu_56@@UBECXZ']
dd ['offset', '?clone@Replaceable@icu_56@@UBEPAV12@XZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4Replaceable@icu_56@@6B@']
dd ['offset', '??_R0?AVReplaceable@icu_56@@@8']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVReplaceable@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3Replaceable@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Replaceable@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_623']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_69D']
push ['offset', '??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_695']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_6BC']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6B9']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@IAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@Replaceable@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@Replaceable@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?char32At@Replaceable@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@PBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@StringPiece@icu_56@@QBEPBDXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@StringPiece@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@StringPiece@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@StringPiece@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clear@StringPiece@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@StringPiece@icu_56@@QAEXPBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_prefix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_A8D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_A71']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_suffix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_AE7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jg ['short', 'loc_ADD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_AE7']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ByteSink@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ByteSink@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4ByteSink@icu_56@@6B@']
public ['??_7ByteSink@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z']
dd ['offset', '?Flush@ByteSink@icu_56@@UAEXXZ']
assume ['cs:_rdata$r']
public ['??_R4ByteSink@icu_56@@6B@']
dd ['offset', '??_R0?AVByteSink@icu_56@@@8']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVByteSink@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3ByteSink@icu_56@@8']
dd ['2']
dd ['offset', '??_R2ByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C77']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_CF1']
push ['offset', '??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_CE9']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_D10']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_D0D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_E7F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_EF9']
push ['offset', '??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['40h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_EF1']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_F18']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_F15']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_F66']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_F82']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx],', 'eax']
jle ['short', 'loc_F82']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_FD9']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_FEB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_14]']
jle ['short', 'loc_FEB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_FFE']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_101A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['[edx],', 'ecx']
jle ['short', 'loc_101A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_106D']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_1079']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_10C5']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_10D1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeString@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0Replaceable@icu_56@@IAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeString@icu_56@@6B@']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeString@icu_56@@6B@']
public ['??_7UnicodeString@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ']
dd ['offset', '?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z']
dd ['offset', '?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z']
dd ['offset', '?copy@UnicodeString@icu_56@@UAEXHHH@Z']
dd ['offset', '?hasMetaData@UnicodeString@icu_56@@UBECXZ']
dd ['offset', '?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ']
dd ['offset', '?getLength@UnicodeString@icu_56@@MBEHXZ']
dd ['offset', '?getCharAt@UnicodeString@icu_56@@MBE_WH@Z']
dd ['offset', '?getChar32At@UnicodeString@icu_56@@MBEHH@Z']
assume ['cs:_rdata$r']
public ['??_R4UnicodeString@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeString@icu_56@@@8']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeString@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeString@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UnicodeString@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeString@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeString@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasShortLength@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getShortLength@UnicodeString@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
sar ['eax,', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasShortLength@UnicodeString@icu_56@@ABECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_128A']
mov ['ecx,', '[ebp+var_8]']
call ['?getShortLength@UnicodeString@icu_56@@ABEHXZ']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_1296']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_12EB']
mov ['[ebp+var_D0],', '1Dh']
jmp ['short', 'loc_12F7']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hashCode@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doHashCode@UnicodeString@icu_56@@ABEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBufferWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '19h']
jnz ['short', 'loc_1401']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+4]']
and ['eax,', '4']
jz ['short', 'loc_13F8']
mov ['ecx,', '[ebp+var_8]']
call ['?refCount@UnicodeString@icu_56@@ABEHXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_1401']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_1408']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
jz ['short', 'loc_1459']
xor ['eax,', 'eax']
jmp ['short', 'loc_1475']
jmp ['short', 'loc_1475']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_146F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '6']
jmp ['short', 'loc_1475']
jmp ['short', 'loc_1475']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_14C2']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_14F3']
jmp ['short', 'loc_14F3']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_154A']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
jmp ['short', 'loc_15A4']
jmp ['short', 'loc_15A4']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1597']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_1597']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1597']
mov ['[ebp+var_E5],', '1']
jmp ['short', 'loc_159E']
mov ['[ebp+var_E5],', '0']
mov ['al,', '[ebp+var_E5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UnicodeString@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??OUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??MUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??PUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??NUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECPB_WH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1A4E']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_1A7F']
jmp ['short', 'loc_1A7F']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1D4A']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_1D7F']
jmp ['short', 'loc_1D7F']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_208B']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_208B']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_208E']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_W@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_25B3']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_25B3']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_25B6']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_29F0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_2A60']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['esi,', 'eax']
push ['esi']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2BC0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_2C3E']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
neg ['ecx']
sbb ['ecx,', 'ecx']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_D4],', '0']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_322F']
mov ['ecx,', '[ebp+var_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['ax,', '[eax+ecx*2]']
jmp ['short', 'loc_3234']
jmp ['short', 'loc_3234']
mov ['eax,', '0FFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@UnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AUnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
sar ['ecx,', '5']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setZeroLength@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setShortLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+arg_0]']
shl ['edx,', '5']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '3FFh']
jg ['short', 'loc_33D6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setShortLength@UnicodeString@icu_56@@AAEXH@Z']
jmp ['short', 'loc_33F3']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
or ['ecx,', '0FFE0h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToEmpty@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3C08']
mov ['ecx,', '[ebp+var_8]']
call ['?setToEmpty@UnicodeString@icu_56@@AAEXXZ']
jmp ['short', 'loc_3C10']
mov ['ecx,', '[ebp+var_8]']
call ['?setZeroLength@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jg ['short', 'loc_3C64']
cmp ['[ebp+arg_4],', '7FFFFFFFh']
jnz ['short', 'loc_3C64']
mov ['ecx,', '[ebp+var_8]']
call ['?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
jmp ['short', 'loc_3C7A']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?truncate@UnicodeString@icu_56@@QAECH@Z']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?truncate@UnicodeString@icu_56@@QAECH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3D86']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_3D86']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
xor ['al,', 'al']
jmp ['short', 'loc_3DA7']
jmp ['short', 'loc_3DA7']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_3DA5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['al,', '1']
jmp ['short', 'loc_3DA7']
jmp ['short', 'loc_3DA7']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToStart@CharacterIterator@icu_56@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+5Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToEnd@CharacterIterator@icu_56@@QAEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['2']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+5Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startIndex@CharacterIterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endIndex@CharacterIterator@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getIndex@CharacterIterator@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLength@CharacterIterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFunctor@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFunctor@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFunctor@icu_56@@6B@']
public ['??_7UnicodeFunctor@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFunctor@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeFunctor@icu_56@@@8']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFunctor@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFunctor@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UnicodeFunctor@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFunctor@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4203']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_427D']
push ['offset', '??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4275']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_429C']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4299']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeMatcher@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeMatcher@icu_56@@6B@']
public ['??_7UnicodeMatcher@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeMatcher@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeMatcher@icu_56@@@8']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeMatcher@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeMatcher@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4417']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_4491']
push ['offset', '??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4489']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_44B0']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_44AD']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_V@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFilter@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UnicodeFunctor@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??0UnicodeMatcher@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
public ['??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
dd ['offset', '?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
public ['??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFilter@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFilter@icu_56@@8']
dd ['1,', '5']
dd ['offset', '??_R2UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
dd ['4,', '0']
dd ['offset', '??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_4683']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_468D']
mov ['[ebp+var_D0],', '0']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_470F']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_4719']
mov ['[ebp+var_D0],', '0']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeFilter@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4783']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFilter@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_47FD']
push ['offset', '??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_47F5']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_481C']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4819']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UnicodeSet@icu_56@@QBECABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isFrozen@UnicodeSet@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_48CE']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+2Ch],', '0']
jnz ['short', 'loc_48CE']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_48D5']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECHH@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@UnicodeSet@icu_56@@QBECXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[eax+30h]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_4AF9']
mov ['[ebp+arg_4],', '0']
jmp ['short', 'loc_4B07']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_4B07']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
add ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_4B81']
mov ['[ebp+arg_4],', '0']
jmp ['short', 'loc_4B8F']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_4B8F']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringEnumeration@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StringEnumeration@icu_56@@6B@']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
call ['??0UnicodeString@icu_56@@QAE@ABV01@@Z']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '44h']
mov ['edi,', '[ebp+var_14]']
add ['edi,', '44h']
mov ['ecx,', '8']
rep ['movsd']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[eax+64h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+68h]']
mov ['[eax+68h],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UObject@icu_56@@UAE@XZ']
endp
__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4StringEnumeration@icu_56@@6B@']
public ['??_7StringEnumeration@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@StringEnumeration@icu_56@@UBEPAV12@XZ']
dd ['offset', '__purecall']
dd ['offset', '?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z']
dd ['offset', '?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z']
dd ['offset', '?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '__purecall']
dd ['offset', '??8StringEnumeration@icu_56@@UBECABV01@@Z']
dd ['offset', '??9StringEnumeration@icu_56@@UBECABV01@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4StringEnumeration@icu_56@@6B@']
dd ['offset', '??_R0?AVStringEnumeration@icu_56@@@8']
dd ['offset', '??_R3StringEnumeration@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVStringEnumeration@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3StringEnumeration@icu_56@@8']
dd ['3']
dd ['offset', '??_R2StringEnumeration@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2StringEnumeration@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@StringEnumeration@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3StringEnumeration@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_4DD3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '20h']
jnb ['short', 'loc_4DED']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx+44h]']
mov ['[eax+44h],', 'dl']
jmp ['short', 'loc_4DCA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[eax+64h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+68h]']
mov ['[eax+68h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GStringEnumeration@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1StringEnumeration@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4E5F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EStringEnumeration@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_4ED9']
push ['offset', '??1StringEnumeration@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['6Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4ED1']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_4EF8']
mov ['ecx,', '[ebp+var_8]']
call ['??1StringEnumeration@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4EF5']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ensureCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_4F4A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+arg_0]']
jl ['short', 'loc_4F4A']
mov ['al,', '1']
jmp ['short', 'loc_4F5A']
jmp ['short', 'loc_4F5A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?expandCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?elementAti@UVector32@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_4FC3']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jle ['short', 'loc_4FC3']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '[ebp+arg_0]']
test ['edx,', 'edx']
jle ['short', 'loc_4FC3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_4FCD']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_503D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reserveBlock@UVector32@icu_56@@QAEPAHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
add ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_5098']
xor ['eax,', 'eax']
jmp ['short', 'loc_50BC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?popFrame@UVector32@icu_56@@QAEPAHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+arg_0]']
jge ['short', 'loc_5128']
mov ['edx,', 'ds:?__LINE__Var@?1??popFrame@UVector32@icu_56@@QAEPAHH@Z@4JA']
add ['edx,', '1']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FK@CCGGFNFG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BM@FLCAFPEE@?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jge ['short', 'loc_514A']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
lea ['eax,', '[eax+ecx*4]']
mov ['ecx,', '[ebp+arg_0]']
shl ['ecx,', '2']
sub ['eax,', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BM@FLCAFPEE@?$AAc?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$AA@']
unicode ['0,', '<count', '>']
dw ['3Eh']
unicode ['0,', '<=', 'size>,0']
assume ['cs:_rdata']
public ['??_C@_1FK@CCGGFNFG@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\uvectr32.h>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??popFrame@UVector32@icu_56@@QAEPAHH@Z@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@UVector32@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UVector32@icu_56@@QBECXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UVector32@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UVector32@icu_56@@QBEHHH@Z']
test ['eax,', 'eax']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastElementi@UVector32@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UVector32@icu_56@@QAECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UVector32@icu_56@@QAECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBuffer@UVector32@icu_56@@QBEPAHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@UVector32@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isEmpty@UVector32@icu_56@@QBECXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?peeki@UVector32@icu_56@@QBEHXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastElementi@UVector32@icu_56@@QBEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?push@UVector32@icu_56@@QAEHHAAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?popi@UVector32@icu_56@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jle ['short', 'loc_5490']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
mov ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@UVector@icu_56@@QBEHXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UVector@icu_56@@QBECXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UVector@icu_56@@QBECPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UVector@icu_56@@QBEHPAXH@Z']
test ['eax,', 'eax']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UVector@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UVector@icu_56@@QBEHHH@Z']
test ['eax,', 'eax']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?firstElement@UVector@icu_56@@QBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastElement@UVector@icu_56@@QBEPAXXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastElementi@UVector@icu_56@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAti@UVector@icu_56@@QBEHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AUVector@icu_56@@QBEPAXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UVector@icu_56@@QAECABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UVector@icu_56@@QAECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@UStack@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isEmpty@UVector@icu_56@@QBECXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?peek@UStack@icu_56@@QBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastElement@UVector@icu_56@@QBEPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?peeki@UStack@icu_56@@QBEHXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastElementi@UVector@icu_56@@QBEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_12C],', '0']
lea ['ecx,', '[ebp+var_60]']
call ['??0UnicodeString@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UnicodeString@icu_56@@QAE@$$QAV01@@Z']
mov ['ecx,', '[ebp+var_12C]']
or ['ecx,', '1']
mov ['[ebp+var_12C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_60]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN8']
dd ['offset', '$LN6']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$0	proc near
lea ['ecx,', '[ebp-60h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$1	proc near
mov ['eax,', '[ebp-12Ch]']
and ['eax,', '1']
jz ['$LN5']
and ['dword', 'ptr', '[ebp-12Ch],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
retn
endp
__ehhandler$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-134h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$1']
dd ['0']
dd ['offset', '__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Normalizer2@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Normalizer2@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4Normalizer2@icu_56@@6B@']
public ['??_7Normalizer2@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?getRawDecomposition@Normalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z']
dd ['offset', '?composePair@Normalizer2@icu_56@@UBEHHH@Z']
dd ['offset', '?getCombiningClass@Normalizer2@icu_56@@UBEEH@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4Normalizer2@icu_56@@6B@']
dd ['offset', '??_R0?AVNormalizer2@icu_56@@@8']
dd ['offset', '??_R3Normalizer2@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVNormalizer2@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3Normalizer2@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Normalizer2@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Normalizer2@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Normalizer2@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Normalizer2@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Normalizer2@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Normalizer2@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GNormalizer2@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1Normalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5BC7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ENormalizer2@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_5C41']
push ['offset', '??1Normalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5C39']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_5C60']
mov ['ecx,', '[ebp+var_8]']
call ['??1Normalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5C5D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0Normalizer2@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FilteredNormalizer2@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4FilteredNormalizer2@icu_56@@6B@']
public ['??_7FilteredNormalizer2@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?normalize@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z']
dd ['offset', '?normalizeSecondAndAppend@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z']
dd ['offset', '?append@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z']
dd ['offset', '?getDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z']
dd ['offset', '?getRawDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z']
dd ['offset', '?composePair@FilteredNormalizer2@icu_56@@UBEHHH@Z']
dd ['offset', '?getCombiningClass@FilteredNormalizer2@icu_56@@UBEEH@Z']
dd ['offset', '?isNormalized@FilteredNormalizer2@icu_56@@UBECABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?quickCheck@FilteredNormalizer2@icu_56@@UBE?AW4UNormalizationCheckResult@@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?spanQuickCheckYes@FilteredNormalizer2@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?hasBoundaryBefore@FilteredNormalizer2@icu_56@@UBECH@Z']
dd ['offset', '?hasBoundaryAfter@FilteredNormalizer2@icu_56@@UBECH@Z']
dd ['offset', '?isInert@FilteredNormalizer2@icu_56@@UBECH@Z']
assume ['cs:_rdata$r']
public ['??_R4FilteredNormalizer2@icu_56@@6B@']
dd ['offset', '??_R0?AVFilteredNormalizer2@icu_56@@@8']
dd ['offset', '??_R3FilteredNormalizer2@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFilteredNormalizer2@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3FilteredNormalizer2@icu_56@@8']
dd ['4']
dd ['offset', '??_R2FilteredNormalizer2@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FilteredNormalizer2@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Normalizer2@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3FilteredNormalizer2@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0Normalizer2@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FilteredNormalizer2@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FilteredNormalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5E43']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_5EBD']
push ['offset', '??1FilteredNormalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['0Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5EB5']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_5EDC']
mov ['ecx,', '[ebp+var_8]']
call ['??1FilteredNormalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5ED9']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9Normalizer@icu_56@@QBECABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8Normalizer@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?quickCheck@Normalizer@icu_56@@SA?AW4UNormalizationCheckResult@@ABVUnicodeString@2@W4UNormalizationMode@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?quickCheck@Normalizer@icu_56@@SA?AW4UNormalizationCheckResult@@ABVUnicodeString@2@W4UNormalizationMode@@HAAW4UErrorCode@@@Z']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isNormalized@Normalizer@icu_56@@SACABVUnicodeString@2@W4UNormalizationMode@@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?isNormalized@Normalizer@icu_56@@SACABVUnicodeString@2@W4UNormalizationMode@@HAAW4UErrorCode@@@Z']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@Normalizer@icu_56@@SAHABVUnicodeString@2@0IAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
push ['eax']
call ['_unorm_compare_56']
add ['esp,', '18h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4DictionaryData@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0DictionaryMatcher@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7DictionaryMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4DictionaryMatcher@icu_56@@6B@']
public ['??_7DictionaryMatcher@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4DictionaryMatcher@icu_56@@6B@']
dd ['offset', '??_R0?AVDictionaryMatcher@icu_56@@@8']
dd ['offset', '??_R3DictionaryMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVDictionaryMatcher@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3DictionaryMatcher@icu_56@@8']
dd ['2']
dd ['offset', '??_R2DictionaryMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2DictionaryMatcher@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@DictionaryMatcher@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3DictionaryMatcher@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0DictionaryMatcher@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_615F']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_6169']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7DictionaryMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4DictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GDictionaryMatcher@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1DictionaryMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_61EF']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EDictionaryMatcher@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_6269']
push ['offset', '??1DictionaryMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6261']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_6288']
mov ['ecx,', '[ebp+var_8]']
call ['??1DictionaryMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6285']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UCharsDictionaryMatcher@icu_56@@QAE@PB_WPAUUDataMemory@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0DictionaryMatcher@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UCharsDictionaryMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4UCharsDictionaryMatcher@icu_56@@6B@']
public ['??_7UCharsDictionaryMatcher@icu_56@@6B@']
dd ['offset', '?matches@UCharsDictionaryMatcher@icu_56@@UBEHPAUUText@@HHPAH111@Z']
dd ['offset', '?getType@UCharsDictionaryMatcher@icu_56@@UBEHXZ']
assume ['cs:_rdata$r']
public ['??_R4UCharsDictionaryMatcher@icu_56@@6B@']
dd ['offset', '??_R0?AVUCharsDictionaryMatcher@icu_56@@@8']
dd ['offset', '??_R3UCharsDictionaryMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUCharsDictionaryMatcher@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UCharsDictionaryMatcher@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UCharsDictionaryMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UCharsDictionaryMatcher@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@DictionaryMatcher@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UCharsDictionaryMatcher@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UCharsDictionaryMatcher@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UCharsDictionaryMatcher@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0DictionaryMatcher@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UCharsDictionaryMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UCharsDictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4DictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UCharsDictionaryMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_649B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUCharsDictionaryMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_6515']
push ['offset', '??1UCharsDictionaryMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['0Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_650D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_6534']
mov ['ecx,', '[ebp+var_8]']
call ['??1UCharsDictionaryMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6531']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0BytesDictionaryMatcher@icu_56@@QAE@PBDHPAUUDataMemory@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0DictionaryMatcher@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7BytesDictionaryMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_rdata']
dd ['offset', '??_R4BytesDictionaryMatcher@icu_56@@6B@']
public ['??_7BytesDictionaryMatcher@icu_56@@6B@']
dd ['offset', '?matches@BytesDictionaryMatcher@icu_56@@UBEHPAUUText@@HHPAH111@Z']
dd ['offset', '?getType@BytesDictionaryMatcher@icu_56@@UBEHXZ']
assume ['cs:_rdata$r']
public ['??_R4BytesDictionaryMatcher@icu_56@@6B@']
dd ['offset', '??_R0?AVBytesDictionaryMatcher@icu_56@@@8']
dd ['offset', '??_R3BytesDictionaryMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVBytesDictionaryMatcher@icu_56@@@8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3BytesDictionaryMatcher@icu_56@@8']
dd ['3']
dd ['offset', '??_R2BytesDictionaryMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2BytesDictionaryMatcher@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@DictionaryMatcher@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@BytesDictionaryMatcher@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3BytesDictionaryMatcher@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0BytesDictionaryMatcher@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0DictionaryMatcher@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7BytesDictionaryMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4BytesDictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4DictionaryMatcher@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GBytesDictionaryMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1BytesDictionaryMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6763']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EBytesDictionaryMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_67DD']
push ['offset', '??1BytesDictionaryMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_67D5']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_67FC']
mov ['ecx,', '[ebp+var_8]']
call ['??1BytesDictionaryMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_67F9']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0DictionaryBreakEngine@icu_56@@QAE@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0DictionaryBreakEngine@icu_56@@QAE@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0LanguageBreakEngine@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7DictionaryBreakEngine@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+38h],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0DictionaryBreakEngine@icu_56@@QAE@I@Z$0 proc	near
mov ['ecx,', '[ebp-14h]']
jmp ['??1LanguageBreakEngine@icu_56@@UAE@XZ']
endp
__ehhandler$??0DictionaryBreakEngine@icu_56@@QAE@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0DictionaryBreakEngine@icu_56@@QAE@I@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4DictionaryBreakEngine@icu_56@@6B@']
public ['??_7DictionaryBreakEngine@icu_56@@6B@']
dd ['offset', '?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z']
dd ['offset', '?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z']
dd ['offset', '?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
dd ['offset', '__purecall']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0DictionaryBreakEngine@icu_56@@QAE@I@Z$0']
dd ['offset', '__unwindtable$??0DictionaryBreakEngine@icu_56@@QAE@I@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4DictionaryBreakEngine@icu_56@@6B@']
dd ['offset', '??_R0?AVDictionaryBreakEngine@icu_56@@@8']
dd ['offset', '??_R3DictionaryBreakEngine@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVDictionaryBreakEngine@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3DictionaryBreakEngine@icu_56@@8']
dd ['3']
dd ['offset', '??_R2DictionaryBreakEngine@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2DictionaryBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3DictionaryBreakEngine@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3LanguageBreakEngine@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVLanguageBreakEngine@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3LanguageBreakEngine@icu_56@@8']
dd ['2']
dd ['offset', '??_R2LanguageBreakEngine@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2LanguageBreakEngine@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GDictionaryBreakEngine@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6A3B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1DictionaryBreakEngine@icu_56@@UAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1DictionaryBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7DictionaryBreakEngine@icu_56@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1LanguageBreakEngine@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1DictionaryBreakEngine@icu_56@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1LanguageBreakEngine@icu_56@@UAE@XZ']
endp
__ehhandler$??1DictionaryBreakEngine@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1DictionaryBreakEngine@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1DictionaryBreakEngine@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1DictionaryBreakEngine@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_6BA3']
cmp ['[ebp+arg_4],', '20h']
jge ['short', 'loc_6BA3']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
and ['eax,', '[ecx+38h]']
jz ['short', 'loc_6BA3']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6BA3']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_6BAA']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['loc_6CF6']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_59],', 'al']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[ebp+arg_4]']
jle ['short', 'loc_6C8E']
movsx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jz ['short', 'loc_6C8E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_59],', 'al']
jmp ['short', 'loc_6C3D']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_6C9E']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_6CC7']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_38],', 'eax']
movsx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jnz ['short', 'loc_6CC7']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_20]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_6D5B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['short', 'loc_6D4F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6D4F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_6CF6']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+arg_10],', '0']
jl ['short', 'loc_6DB4']
cmp ['[ebp+arg_10],', '20h']
jge ['short', 'loc_6DB4']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_10]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_8]']
and ['eax,', '[ecx+38h]']
jz ['short', 'loc_6DB4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax+4]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+8]']
jz ['short', 'loc_6ED3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '64h']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '14h']
push ['edx']
push ['14h']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['short', 'loc_6ED3']
mov ['eax,', '[ebp+var_14]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_6EF9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[edx+ecx*4+10h]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['edx,', '[ebp+var_8]']
add ['eax,', '[edx+ecx*4+14h]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+ecx*4+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jle ['short', 'loc_7005']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_D0]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+edx*4+14h]']
cdq
push ['edx']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['al,', '1']
jmp ['short', 'loc_7007']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '168h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_174]']
mov ['ecx,', '5Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
push ['6']
mov ['ecx,', '[ebp+var_18]']
call ['??0DictionaryBreakEngine@icu_56@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ThaiBreakEngine@icu_56@@6B@']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '10Ch']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+140h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1DI@ELKHNJKF@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_168]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_170],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_174],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['edx,', '[ebp+var_174]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_168]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7152']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1EE@GGKKCAAG@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@']
push ['1']
lea ['ecx,', '[ebp+var_120]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_170],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_174],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['edx,', '[ebp+var_174]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '10Ch']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_120]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
push ['20h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '10Ch']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
push ['0E31h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['esi,', 'esp']
push ['0E44h']
push ['0E40h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+70h]']
mov ['eax,', '[edx+4Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0E2Eh']
push ['0E01h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0E44h']
push ['0E40h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['0E2Fh']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
push ['0E46h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '10Ch']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+10Ch]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+70h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0D8h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '174h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0 proc	near
mov ['ecx,', '[ebp-18h]']
jmp ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '3Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '70h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '0A4h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '0D8h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '10Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6 proc	near
lea ['ecx,', '[ebp-168h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$7 proc	near
lea ['ecx,', '[ebp-120h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__ehhandler$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-178h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1EE@GGKKCAAG@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@']
unicode ['0,', '<[[:Thai:]&[:LineBreak=SA:]&[:M:]]>,0']
assume ['cs:_rdata']
public ['??_C@_1DI@ELKHNJKF@?$AA?$FL?$AA?$FL?$AA?3?$AAT?$AAh?$AAa?$AAi?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@']
unicode ['0,', '<[[:Thai:]&[:LineBreak=SA:]]>,0']
assume ['cs:_rdata']
dd ['offset', '??_R4ThaiBreakEngine@icu_56@@6B@']
public ['??_7ThaiBreakEngine@icu_56@@6B@']
dd ['offset', '?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z']
dd ['offset', '?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z']
dd ['offset', '?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
dd ['offset', '?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
dd ['offset', '__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3']
dd ['3']
dd ['offset', '__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4']
dd ['4']
dd ['offset', '__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5']
dd ['5']
dd ['offset', '__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6']
dd ['5']
dd ['offset', '__unwindfunclet$??0ThaiBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$7']
assume ['cs:_rdata$r']
public ['??_R4ThaiBreakEngine@icu_56@@6B@']
dd ['offset', '??_R0?AVThaiBreakEngine@icu_56@@@8']
dd ['offset', '??_R3ThaiBreakEngine@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVThaiBreakEngine@icu_56@@@8']
align ['10h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3ThaiBreakEngine@icu_56@@8']
dd ['4']
dd ['offset', '??_R2ThaiBreakEngine@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ThaiBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ThaiBreakEngine@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3ThaiBreakEngine@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GThaiBreakEngine@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ThaiBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_758B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1ThaiBreakEngine@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1ThaiBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ThaiBreakEngine@icu_56@@6B@']
mov ['[ebp+var_4],', '5']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_763F']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_7649']
mov ['[ebp+var_F4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '10Ch']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0D8h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0A4h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '70h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '3Ch']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '3Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$2 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '70h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$3 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0A4h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$4 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0D8h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$5 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '10Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__ehhandler$??1ThaiBreakEngine@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1ThaiBreakEngine@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??1ThaiBreakEngine@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$0']
dd ['0']
dd ['offset', '__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$2']
dd ['2']
dd ['offset', '__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$3']
dd ['3']
dd ['offset', '__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$4']
dd ['4']
dd ['offset', '__unwindfunclet$??1ThaiBreakEngine@icu_56@@UAE@XZ$5']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_3E8]']
mov ['ecx,', '0F7h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
push ['4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_moveIndex32_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+arg_8]']
cdq
mov ['[ebp+var_3E0],', 'ecx']
mov ['[ebp+var_3DC],', 'esi']
mov ['[ebp+var_3E8],', 'eax']
mov ['[ebp+var_3E4],', 'edx']
mov ['edx,', '[ebp+var_3DC]']
cmp ['edx,', '[ebp+var_3E4]']
jl ['short', 'loc_783E']
jg ['short', 'loc_7837']
mov ['eax,', '[ebp+var_3E0]']
cmp ['eax,', '[ebp+var_3E8]']
jb ['short', 'loc_783E']
xor ['eax,', 'eax']
jmp ['loc_800D']
mov ['eax,', '[ebp+arg_4]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_54],', '0']
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['offset', '??0PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['eax,', '[ebp+var_278]']
push ['eax']
call ['??_L@YGXPAXIHP6EX0@Z1@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_54]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_7FC1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['loc_7FC1']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_3C],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
mov ['[ebp+var_284],', 'eax']
cmp ['[ebp+var_284],', '1']
jnz ['short', 'loc_7975']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markedCPLength@PossibleWord@icu_56@@QAEHXZ']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['loc_7B27']
cmp ['[ebp+var_284],', '1']
jle ['loc_7B27']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_7998']
jmp ['$foundBest$39474']
mov ['[ebp+var_290],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jle ['loc_7AAB']
cmp ['[ebp+var_290],', '2']
jge ['short', 'loc_7A0E']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markCurrent@PossibleWord@icu_56@@QAEXXZ']
mov ['[ebp+var_290],', '2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_7A24']
jmp ['$foundBest$39474']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '2']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jz ['short', 'loc_7A7B']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markCurrent@PossibleWord@icu_56@@QAEXXZ']
jmp ['short', '$foundBest$39474']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_7A24']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_7998']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markedCPLength@PossibleWord@icu_56@@QAEHXZ']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_29C],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jge ['loc_7D49']
cmp ['[ebp+var_30],', '3']
jge ['loc_7D49']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jg ['loc_7D34']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_7BB5']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?longestPrefix@PossibleWord@icu_56@@QAEHXZ']
cmp ['eax,', '3']
jge ['loc_7D34']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
mov ['[ebp+var_2A8],', 'ecx']
mov ['[ebp+var_2C0],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2CC],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_2B4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+var_2CC]']
cdq
sub ['ecx,', 'eax']
sbb ['esi,', 'edx']
mov ['[ebp+var_2D8],', 'ecx']
mov ['eax,', '[ebp+var_2C0]']
add ['eax,', '[ebp+var_2D8]']
mov ['[ebp+var_2C0],', 'eax']
mov ['eax,', '[ebp+var_2A8]']
sub ['eax,', '[ebp+var_2D8]']
mov ['[ebp+var_2A8],', 'eax']
cmp ['[ebp+var_2A8],', '0']
jg ['short', 'loc_7C47']
jmp ['loc_7D17']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_29C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2B4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+70h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_7D12']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_29C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0A4h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_7D12']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
mov ['[ebp+var_2E4],', 'eax']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_2C0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
cmp ['[ebp+var_2E4],', '0']
jle ['short', 'loc_7D12']
jmp ['short', 'loc_7D17']
jmp ['loc_7BD0']
cmp ['[ebp+var_3C],', '0']
jg ['short', 'loc_7D26']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_2C0]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_7D49']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2F0],', 'eax']
mov ['ecx,', '[ebp+var_2F0]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['short', 'loc_7DC0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '10Ch']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+10Ch]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_7DC0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
sub ['eax,', '[ebp+var_2F0]']
add ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_7D49']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jge ['loc_7FA3']
cmp ['[ebp+var_3C],', '0']
jle ['loc_7FA3']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jg ['loc_7F8E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_29C],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_29C]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0D8h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_7F8E']
cmp ['[ebp+var_29C],', '0E2Fh']
jnz ['loc_7F0F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0D8h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_7F03']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2FC],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+var_2FC]']
cdq
sub ['ecx,', 'eax']
sbb ['esi,', 'edx']
mov ['eax,', '[ebp+var_3C]']
cdq
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_29C],', 'eax']
jmp ['short', 'loc_7F0F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
cmp ['[ebp+var_29C],', '0E46h']
jnz ['short', 'loc_7F8C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_previous32_56']
add ['esp,', '4']
cmp ['eax,', '0E46h']
jz ['short', 'loc_7F80']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_308],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+var_308]']
cdq
sub ['ecx,', 'eax']
sbb ['esi,', 'edx']
mov ['eax,', '[ebp+var_3C]']
cdq
add ['eax,', 'ecx']
adc ['edx,', 'esi']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_7F8C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
jmp ['short', 'loc_7FA3']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
cmp ['[ebp+var_3C],', '0']
jle ['short', 'loc_7FBC']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z']
jmp ['loc_78A2']
mov ['ecx,', '[ebp+arg_C]']
call ['?peeki@UStack@icu_56@@QBEHXZ']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_7FDF']
mov ['ecx,', '[ebp+arg_C]']
call ['?popi@UStack@icu_56@@QAEHXZ']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_3D4],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['ecx,', '[ebp+var_278]']
push ['ecx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+var_3D4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN52']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN51']
dd ['offset', '$LN48']
dd ['0FFFFFD88h,', '21Ch']
dd ['offset', '$LN49']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3 proc near
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['eax,', '[ebp-278h]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
retn
endp
__ehhandler$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3ECh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3']
dd ['offset', '__unwindtable$?divideUpDictionaryRange@ThaiBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0PossibleWord@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1PossibleWord@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?longestPrefix@PossibleWord@icu_56@@QAEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?markCurrent@PossibleWord@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+0Ch],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?markedCPLength@PossibleWord@icu_56@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+ecx*4+64h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '168h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_174]']
mov ['ecx,', '5Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
push ['6']
mov ['ecx,', '[ebp+var_18]']
call ['??0DictionaryBreakEngine@icu_56@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7LaoBreakEngine@icu_56@@6B@']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10Ch],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1DI@PLPACDPG@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_168]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_170],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_174],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['edx,', '[ebp+var_174]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_168]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8338']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1EE@FFIPMKLO@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@']
push ['1']
lea ['ecx,', '[ebp+var_120]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_170],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_174],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['edx,', '[ebp+var_174]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_120]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
push ['20h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
mov ['esi,', 'esp']
push ['0EC4h']
push ['0EC0h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+70h]']
mov ['eax,', '[edx+4Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0EAEh']
push ['0E81h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0EDDh']
push ['0EDCh']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0EC4h']
push ['0EC0h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0D8h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+70h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '174h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '3Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '70h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '0A4h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '0D8h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5 proc near
lea ['ecx,', '[ebp-168h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6 proc near
lea ['ecx,', '[ebp-120h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__ehhandler$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-178h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
public ['??_C@_1EE@FFIPMKLO@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@']
unicode ['0,', '<[[:Laoo:]&[:LineBreak=SA:]&[:M:]]>,0']
assume ['cs:_rdata']
public ['??_C@_1DI@PLPACDPG@?$AA?$FL?$AA?$FL?$AA?3?$AAL?$AAa?$AAo?$AAo?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@']
unicode ['0,', '<[[:Laoo:]&[:LineBreak=SA:]]>,0']
assume ['cs:_rdata']
dd ['offset', '??_R4LaoBreakEngine@icu_56@@6B@']
public ['??_7LaoBreakEngine@icu_56@@6B@']
dd ['offset', '?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z']
dd ['offset', '?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z']
dd ['offset', '?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
dd ['offset', '?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3']
dd ['3']
dd ['offset', '__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4']
dd ['4']
dd ['offset', '__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5']
dd ['4']
dd ['offset', '__unwindfunclet$??0LaoBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6']
assume ['cs:_rdata$r']
public ['??_R4LaoBreakEngine@icu_56@@6B@']
dd ['offset', '??_R0?AVLaoBreakEngine@icu_56@@@8']
dd ['offset', '??_R3LaoBreakEngine@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVLaoBreakEngine@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3LaoBreakEngine@icu_56@@8']
dd ['4']
dd ['offset', '??_R2LaoBreakEngine@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2LaoBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@LaoBreakEngine@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3LaoBreakEngine@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GLaoBreakEngine@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1LaoBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_86FF']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1LaoBreakEngine@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1LaoBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7LaoBreakEngine@icu_56@@6B@']
mov ['[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10Ch]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_87B3']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_87BD']
mov ['[ebp+var_F4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0D8h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0A4h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '70h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '3Ch']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$0 proc	near 
mov ['ecx,', '[ebp-14h]']
jmp ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$1 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '3Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$2 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '70h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$3 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0A4h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$4 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0D8h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__ehhandler$??1LaoBreakEngine@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1LaoBreakEngine@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??1LaoBreakEngine@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$0']
align ['8']
dd ['offset', '__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$2']
dd ['2']
dd ['offset', '__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$3']
dd ['3']
dd ['offset', '__unwindfunclet$??1LaoBreakEngine@icu_56@@UAE@XZ$4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3C4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_3D0]']
mov ['ecx,', '0F1h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
cmp ['eax,', '4']
jge ['short', 'loc_892B']
xor ['eax,', 'eax']
jmp ['loc_8F34']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_54],', '0']
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['offset', '??0PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['eax,', '[ebp+var_278]']
push ['eax']
call ['??_L@YGXPAXIHP6EX0@Z1@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_54]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_8EE8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['loc_8EE8']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
mov ['[ebp+var_284],', 'eax']
cmp ['[ebp+var_284],', '1']
jnz ['short', 'loc_8A50']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markedCPLength@PossibleWord@icu_56@@QAEHXZ']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['loc_8C3B']
cmp ['[ebp+var_284],', '1']
jle ['loc_8C3B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+arg_8]']
cdq
mov ['[ebp+var_3C8],', 'ecx']
mov ['[ebp+var_3C4],', 'esi']
mov ['[ebp+var_3D0],', 'eax']
mov ['[ebp+var_3CC],', 'edx']
mov ['edx,', '[ebp+var_3C4]']
cmp ['edx,', '[ebp+var_3CC]']
jl ['short', 'loc_8AAC']
jg ['short', 'loc_8AA7']
mov ['eax,', '[ebp+var_3C8]']
cmp ['eax,', '[ebp+var_3D0]']
jb ['short', 'loc_8AAC']
jmp ['$foundBest$39583']
mov ['[ebp+var_290],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jle ['loc_8BBF']
cmp ['[ebp+var_290],', '2']
jge ['short', 'loc_8B22']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markCurrent@PossibleWord@icu_56@@QAEXXZ']
mov ['[ebp+var_290],', '2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_8B38']
jmp ['$foundBest$39583']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '2']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jz ['short', 'loc_8B8F']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markCurrent@PossibleWord@icu_56@@QAEXXZ']
jmp ['short', '$foundBest$39583']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_8B38']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_8AAC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markedCPLength@PossibleWord@icu_56@@QAEHXZ']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jge ['loc_8E53']
cmp ['[ebp+var_30],', '3']
jge ['loc_8E53']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jg ['loc_8E3E']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_8CBF']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?longestPrefix@PossibleWord@icu_56@@QAEHXZ']
cmp ['eax,', '3']
jge ['loc_8E3E']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
mov ['[ebp+var_29C],', 'ecx']
mov ['[ebp+var_2C0],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2CC],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_2A8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+var_2CC]']
cdq
sub ['ecx,', 'eax']
sbb ['esi,', 'edx']
mov ['[ebp+var_2D8],', 'ecx']
mov ['eax,', '[ebp+var_2C0]']
add ['eax,', '[ebp+var_2D8]']
mov ['[ebp+var_2C0],', 'eax']
mov ['eax,', '[ebp+var_29C]']
sub ['eax,', '[ebp+var_2D8]']
mov ['[ebp+var_29C],', 'eax']
cmp ['[ebp+var_29C],', '0']
jg ['short', 'loc_8D51']
jmp ['loc_8E21']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_2B4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2A8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+70h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_8E1C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2B4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0A4h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_8E1C']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
mov ['[ebp+var_2E4],', 'eax']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_2C0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
cmp ['[ebp+var_2E4],', '0']
jle ['short', 'loc_8E1C']
jmp ['short', 'loc_8E21']
jmp ['loc_8CDA']
cmp ['[ebp+var_3C],', '0']
jg ['short', 'loc_8E30']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_2C0]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_8E53']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2F0],', 'eax']
mov ['ecx,', '[ebp+var_2F0]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['short', 'loc_8ECA']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0D8h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_8ECA']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
sub ['eax,', '[ebp+var_2F0]']
add ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_8E53']
cmp ['[ebp+var_3C],', '0']
jle ['short', 'loc_8EE3']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z']
jmp ['loc_897D']
mov ['ecx,', '[ebp+arg_C]']
call ['?peeki@UStack@icu_56@@QBEHXZ']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_8F06']
mov ['ecx,', '[ebp+arg_C]']
call ['?popi@UStack@icu_56@@QAEHXZ']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_3BC],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['ecx,', '[ebp+var_278]']
push ['ecx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+var_3BC]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN43']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
dd ['offset', '$LN42']
dd ['offset', '$LN39']
dd ['0FFFFFD88h,', '21Ch']
dd ['offset', '$LN40']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3 proc near
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['eax,', '[ebp-278h]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
retn
endp
__ehhandler$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3D4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3']
dd ['offset', '__unwindtable$?divideUpDictionaryRange@LaoBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '168h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_174]']
mov ['ecx,', '5Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
push ['6']
mov ['ecx,', '[ebp+var_18]']
call ['??0DictionaryBreakEngine@icu_56@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7BurmeseBreakEngine@icu_56@@6B@']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10Ch],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1DI@BMPIDMJK@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_168]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_170],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_174],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['edx,', '[ebp+var_174]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_168]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9130']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1EE@IFJHHOM@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@']
push ['1']
lea ['ecx,', '[ebp+var_120]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_170],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_174],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['edx,', '[ebp+var_174]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_120]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
push ['20h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
mov ['esi,', 'esp']
push ['102Ah']
push ['1000h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0D8h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+70h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '174h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '3Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '70h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '0A4h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '0D8h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5 proc near
lea ['ecx,', '[ebp-168h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6 proc near
lea ['ecx,', '[ebp-120h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__ehhandler$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-178h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
public ['??_C@_1EE@IFJHHOM@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@']
unicode ['0,', '<[[:Mymr:]&[:LineBreak=SA:]&[:M:]]>,0']
assume ['cs:_rdata']
public ['??_C@_1DI@BMPIDMJK@?$AA?$FL?$AA?$FL?$AA?3?$AAM?$AAy?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@']
unicode ['0,', '<[[:Mymr:]&[:LineBreak=SA:]]>,0']
assume ['cs:_rdata']
dd ['offset', '??_R4BurmeseBreakEngine@icu_56@@6B@']
public ['??_7BurmeseBreakEngine@icu_56@@6B@']
dd ['offset', '?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z']
dd ['offset', '?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z']
dd ['offset', '?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
dd ['offset', '?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3']
dd ['3']
dd ['offset', '__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4']
dd ['4']
dd ['offset', '__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5']
dd ['4']
dd ['offset', '__unwindfunclet$??0BurmeseBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6']
assume ['cs:_rdata$r']
public ['??_R4BurmeseBreakEngine@icu_56@@6B@']
dd ['offset', '??_R0?AVBurmeseBreakEngine@icu_56@@@8']
dd ['offset', '??_R3BurmeseBreakEngine@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVBurmeseBreakEngine@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3BurmeseBreakEngine@icu_56@@8']
dd ['4']
dd ['offset', '??_R2BurmeseBreakEngine@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2BurmeseBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@BurmeseBreakEngine@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3BurmeseBreakEngine@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GBurmeseBreakEngine@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1BurmeseBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_9483']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1BurmeseBreakEngine@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1BurmeseBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7BurmeseBreakEngine@icu_56@@6B@']
mov ['[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10Ch]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_9537']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_9541']
mov ['[ebp+var_F4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0D8h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0A4h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '70h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '3Ch']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '3Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$2 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '70h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$3 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0A4h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$4 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0D8h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__ehhandler$??1BurmeseBreakEngine@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1BurmeseBreakEngine@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??1BurmeseBreakEngine@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$0']
dd ['0']
dd ['offset', '__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$2']
dd ['2']
dd ['offset', '__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$3']
dd ['3']
dd ['offset', '__unwindfunclet$??1BurmeseBreakEngine@icu_56@@UAE@XZ$4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3C4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_3D0]']
mov ['ecx,', '0F1h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
cmp ['eax,', '4']
jge ['short', 'loc_96AF']
xor ['eax,', 'eax']
jmp ['loc_9CB8']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_54],', '0']
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['offset', '??0PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['eax,', '[ebp+var_278]']
push ['eax']
call ['??_L@YGXPAXIHP6EX0@Z1@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_54]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_9C6C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['loc_9C6C']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
mov ['[ebp+var_284],', 'eax']
cmp ['[ebp+var_284],', '1']
jnz ['short', 'loc_97D4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markedCPLength@PossibleWord@icu_56@@QAEHXZ']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['loc_99BF']
cmp ['[ebp+var_284],', '1']
jle ['loc_99BF']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+arg_8]']
cdq
mov ['[ebp+var_3C8],', 'ecx']
mov ['[ebp+var_3C4],', 'esi']
mov ['[ebp+var_3D0],', 'eax']
mov ['[ebp+var_3CC],', 'edx']
mov ['edx,', '[ebp+var_3C4]']
cmp ['edx,', '[ebp+var_3CC]']
jl ['short', 'loc_9830']
jg ['short', 'loc_982B']
mov ['eax,', '[ebp+var_3C8]']
cmp ['eax,', '[ebp+var_3D0]']
jb ['short', 'loc_9830']
jmp ['$foundBest$39680']
mov ['[ebp+var_290],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jle ['loc_9943']
cmp ['[ebp+var_290],', '2']
jge ['short', 'loc_98A6']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markCurrent@PossibleWord@icu_56@@QAEXXZ']
mov ['[ebp+var_290],', '2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_98BC']
jmp ['$foundBest$39680']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '2']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jz ['short', 'loc_9913']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markCurrent@PossibleWord@icu_56@@QAEXXZ']
jmp ['short', '$foundBest$39680']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_98BC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_9830']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markedCPLength@PossibleWord@icu_56@@QAEHXZ']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jge ['loc_9BD7']
cmp ['[ebp+var_30],', '3']
jge ['loc_9BD7']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jg ['loc_9BC2']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_9A43']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?longestPrefix@PossibleWord@icu_56@@QAEHXZ']
cmp ['eax,', '3']
jge ['loc_9BC2']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
mov ['[ebp+var_29C],', 'ecx']
mov ['[ebp+var_2C0],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2CC],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_2A8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+var_2CC]']
cdq
sub ['ecx,', 'eax']
sbb ['esi,', 'edx']
mov ['[ebp+var_2D8],', 'ecx']
mov ['eax,', '[ebp+var_2C0]']
add ['eax,', '[ebp+var_2D8]']
mov ['[ebp+var_2C0],', 'eax']
mov ['eax,', '[ebp+var_29C]']
sub ['eax,', '[ebp+var_2D8]']
mov ['[ebp+var_29C],', 'eax']
cmp ['[ebp+var_29C],', '0']
jg ['short', 'loc_9AD5']
jmp ['loc_9BA5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_2B4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2A8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+70h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_9BA0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2B4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0A4h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_9BA0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
mov ['[ebp+var_2E4],', 'eax']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_2C0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
cmp ['[ebp+var_2E4],', '0']
jle ['short', 'loc_9BA0']
jmp ['short', 'loc_9BA5']
jmp ['loc_9A5E']
cmp ['[ebp+var_3C],', '0']
jg ['short', 'loc_9BB4']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_2C0]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_9BD7']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2F0],', 'eax']
mov ['ecx,', '[ebp+var_2F0]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['short', 'loc_9C4E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0D8h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_9C4E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
sub ['eax,', '[ebp+var_2F0]']
add ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_9BD7']
cmp ['[ebp+var_3C],', '0']
jle ['short', 'loc_9C67']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z']
jmp ['loc_9701']
mov ['ecx,', '[ebp+arg_C]']
call ['?peeki@UStack@icu_56@@QBEHXZ']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_9C8A']
mov ['ecx,', '[ebp+arg_C]']
call ['?popi@UStack@icu_56@@QAEHXZ']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_3BC],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['ecx,', '[ebp+var_278]']
push ['ecx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+var_3BC]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN43_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
dd ['offset', '$LN42_0']
dd ['offset', '$LN39_0']
dd ['0FFFFFD88h,', '21Ch']
dd ['offset', '$LN40_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3 proc near
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['eax,', '[ebp-278h]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
retn
endp
__ehhandler$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3D4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3']
dd ['offset', '__unwindtable$?divideUpDictionaryRange@BurmeseBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '168h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_174]']
mov ['ecx,', '5Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
push ['6']
mov ['ecx,', '[ebp+var_18]']
call ['??0DictionaryBreakEngine@icu_56@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7KhmerBreakEngine@icu_56@@6B@']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10Ch],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1DI@OCPBEJKA@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_168]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_170],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_174],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['edx,', '[ebp+var_174]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_168]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9EB4']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1EE@NLBDGEPK@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@']
push ['1']
lea ['ecx,', '[ebp+var_120]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_170],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_174],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['edx,', '[ebp+var_174]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_120]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
push ['20h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z']
mov ['esi,', 'esp']
push ['17B3h']
push ['1780h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['17D2h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0D8h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+70h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax+0A4h]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+6Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '174h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '3Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '70h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '0A4h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4 proc near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '0D8h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5 proc near
lea ['ecx,', '[ebp-168h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6 proc near
lea ['ecx,', '[ebp-120h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__ehhandler$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-178h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
public ['??_C@_1EE@NLBDGEPK@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAM?$AA?3?$AA?$FN@']
unicode ['0,', '<[[:Khmr:]&[:LineBreak=SA:]&[:M:]]>,0']
assume ['cs:_rdata']
public ['??_C@_1DI@OCPBEJKA@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAh?$AAm?$AAr?$AA?3?$AA?$FN?$AA?$CG?$AA?$FL?$AA?3?$AAL?$AAi?$AAn?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AA?$DN?$AAS?$AAA?$AA?3?$AA?$FN?$AA?$FN?$AA?$AA@']
unicode ['0,', '<[[:Khmr:]&[:LineBreak=SA:]]>,0']
assume ['cs:_rdata']
dd ['offset', '??_R4KhmerBreakEngine@icu_56@@6B@']
public ['??_7KhmerBreakEngine@icu_56@@6B@']
dd ['offset', '?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z']
dd ['offset', '?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z']
dd ['offset', '?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
dd ['offset', '?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
dd ['offset', '__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$0']
align ['10h']
dd ['offset', '__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$3']
dd ['3']
dd ['offset', '__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$4']
dd ['4']
dd ['offset', '__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$5']
dd ['4']
dd ['offset', '__unwindfunclet$??0KhmerBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@AAW4UErrorCode@@@Z$6']
assume ['cs:_rdata$r']
public ['??_R4KhmerBreakEngine@icu_56@@6B@']
dd ['offset', '??_R0?AVKhmerBreakEngine@icu_56@@@8']
dd ['offset', '??_R3KhmerBreakEngine@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVKhmerBreakEngine@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3KhmerBreakEngine@icu_56@@8']
dd ['4']
dd ['offset', '??_R2KhmerBreakEngine@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2KhmerBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@KhmerBreakEngine@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3KhmerBreakEngine@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GKhmerBreakEngine@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1KhmerBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_A217']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1KhmerBreakEngine@icu_56@@UAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1KhmerBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7KhmerBreakEngine@icu_56@@6B@']
mov ['[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10Ch]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_A2CB']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_A2D5']
mov ['[ebp+var_F4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0D8h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0A4h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '70h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '3Ch']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '3Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$2 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '70h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$3 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0A4h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$4 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0D8h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__ehhandler$??1KhmerBreakEngine@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1KhmerBreakEngine@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??1KhmerBreakEngine@icu_56@@UAE@XZ']
align ['20h']
dd ['1']
dd ['offset', '__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$0']
align ['10h']
dd ['offset', '__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$2']
dd ['2']
dd ['offset', '__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$3']
dd ['3']
dd ['offset', '__unwindfunclet$??1KhmerBreakEngine@icu_56@@UAE@XZ$4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3B4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_3C0]']
mov ['ecx,', '0EDh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
cmp ['eax,', '4']
jge ['short', 'loc_A443']
xor ['eax,', 'eax']
jmp ['loc_AA13']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_54],', '0']
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['offset', '??0PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['eax,', '[ebp+var_278]']
push ['eax']
call ['??_L@YGXPAXIHP6EX0@Z1@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_54]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_A9C7']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['loc_A9C7']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
mov ['[ebp+var_284],', 'eax']
cmp ['[ebp+var_284],', '1']
jnz ['short', 'loc_A568']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markedCPLength@PossibleWord@icu_56@@QAEHXZ']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['loc_A71A']
cmp ['[ebp+var_284],', '1']
jle ['loc_A71A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_A58B']
jmp ['$foundBest$39778']
mov ['[ebp+var_290],', '1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jle ['loc_A69E']
cmp ['[ebp+var_290],', '2']
jge ['short', 'loc_A601']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markCurrent@PossibleWord@icu_56@@QAEXXZ']
mov ['[ebp+var_290],', '2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_A617']
jmp ['$foundBest$39778']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '2']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jz ['short', 'loc_A66E']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markCurrent@PossibleWord@icu_56@@QAEXXZ']
jmp ['short', '$foundBest$39778']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_A617']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?backUp@PossibleWord@icu_56@@QAECPAUUText@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_A58B']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?acceptMarked@PossibleWord@icu_56@@QAEHPAUUText@@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?markedCPLength@PossibleWord@icu_56@@QAEHXZ']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_8]']
jge ['loc_A932']
cmp ['[ebp+var_30],', '3']
jge ['loc_A932']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
test ['eax,', 'eax']
jg ['loc_A91D']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_A79E']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?longestPrefix@PossibleWord@icu_56@@QAEHXZ']
cmp ['eax,', '3']
jge ['loc_A91D']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
mov ['[ebp+var_29C],', 'ecx']
mov ['[ebp+var_2C0],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2CC],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_2A8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+var_2CC]']
cdq
sub ['ecx,', 'eax']
sbb ['esi,', 'edx']
mov ['[ebp+var_2D8],', 'ecx']
mov ['eax,', '[ebp+var_2C0]']
add ['eax,', '[ebp+var_2D8]']
mov ['[ebp+var_2C0],', 'eax']
mov ['eax,', '[ebp+var_29C]']
sub ['eax,', '[ebp+var_2D8]']
mov ['[ebp+var_29C],', 'eax']
cmp ['[ebp+var_29C],', '0']
jg ['short', 'loc_A830']
jmp ['loc_A900']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_2B4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2A8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+70h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_A8FB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_2B4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0A4h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_A8FB']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
xor ['edx,', 'edx']
mov ['ecx,', '3']
div ['ecx']
imul ['edx,', '0B4h']
lea ['ecx,', '[ebp+edx+var_278]']
call ['?candidates@PossibleWord@icu_56@@QAEHPAUUText@@PAVDictionaryMatcher@2@H@Z']
mov ['[ebp+var_2E4],', 'eax']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_2C0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
cmp ['[ebp+var_2E4],', '0']
jle ['short', 'loc_A8FB']
jmp ['short', 'loc_A900']
jmp ['loc_A7B9']
cmp ['[ebp+var_3C],', '0']
jg ['short', 'loc_A90F']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_2C0]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_A932']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '[ebp+var_3C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_2F0],', 'eax']
mov ['ecx,', '[ebp+var_2F0]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['short', 'loc_A9A9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0D8h]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_A9A9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
sub ['eax,', '[ebp+var_2F0]']
add ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_A932']
cmp ['[ebp+var_3C],', '0']
jle ['short', 'loc_A9C2']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z']
jmp ['loc_A495']
mov ['ecx,', '[ebp+arg_C]']
call ['?peeki@UStack@icu_56@@QBEHXZ']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_A9E5']
mov ['ecx,', '[ebp+arg_C]']
call ['?popi@UStack@icu_56@@QAEHXZ']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_3BC],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['ecx,', '[ebp+var_278]']
push ['ecx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+var_3BC]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN42_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
dd ['offset', '$LN41']
dd ['offset', '$LN38']
dd ['0FFFFFD88h,', '21Ch']
dd ['offset', '$LN39_1']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3 proc	near
push ['offset', '??1PossibleWord@icu_56@@QAE@XZ']
push ['3']
push ['0B4h']
lea ['eax,', '[ebp-278h]']
push ['eax']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
retn
endp
__ehhandler$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3C4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3']
dd ['offset', '__unwindtable$?divideUpDictionaryRange@KhmerBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '234h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_240]']
mov ['ecx,', '8Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
push ['2']
mov ['ecx,', '[ebp+var_18]']
call ['??0DictionaryBreakEngine@icu_56@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CjkBreakEngine@icu_56@@6B@']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10Ch],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1CA@BMFKKFLJ@?$AA?$FL?$AA?2?$AAu?$AAa?$AAc?$AA0?$AA0?$AA?9?$AA?2?$AAu?$AAd?$AA7?$AAa?$AA3?$AA?$FN?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_234]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_23C],', 'eax']
mov ['ecx,', '[ebp+var_23C]']
mov ['[ebp+var_240],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['edx,', '[ebp+var_240]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_234]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1BA@KJIKCGCB@?$AA?$FL?$AA?3?$AAH?$AAa?$AAn?$AA?3?$AA?$FN?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_1EC]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_23C],', 'eax']
mov ['ecx,', '[ebp+var_23C]']
mov ['[ebp+var_240],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['edx,', '[ebp+var_240]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '70h']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1EC]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1DG@BIONPNNM@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAa?$AAt?$AAa?$AAk?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAe?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAf?$AA?$FN?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_1A4]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_23C],', 'eax']
mov ['ecx,', '[ebp+var_23C]']
mov ['[ebp+var_240],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['edx,', '[ebp+var_240]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0A4h']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_1A4]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0FFFFFFFFh']
push ['offset', '??_C@_1BK@PJEAFFAL@?$AA?$FL?$AA?3?$AAH?$AAi?$AAr?$AAa?$AAg?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?$AA@']
push ['1']
lea ['ecx,', '[ebp+var_15C]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['[ebp+var_23C],', 'eax']
mov ['ecx,', '[ebp+var_23C]']
mov ['[ebp+var_240],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['edx,', '[ebp+var_240]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '0D8h']
call ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_15C]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?getNFKCInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+110h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_AD93']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_AD24']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
jmp ['short', 'loc_AD93']
lea ['ecx,', '[ebp+var_54]']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '70h']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
call ['?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '0A4h']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
call ['?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '0D8h']
push ['eax']
lea ['ecx,', '[ebp+var_54]']
call ['?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z']
push ['0FF70h']
lea ['ecx,', '[ebp+var_54]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
push ['30FCh']
lea ['ecx,', '[ebp+var_54]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_54]']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '240h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
dd ['offset', '$LN18']
dd ['offset', '$LN16']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$0 proc	near
mov ['ecx,', '[ebp-18h]']
jmp ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$1 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '3Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$2 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '70h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$3 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '0A4h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$4 proc	near
mov ['ecx,', '[ebp-18h]']
add ['ecx,', '0D8h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$5 proc	near
lea ['ecx,', '[ebp-234h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$6 proc	near
lea ['ecx,', '[ebp-1ECh]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$7 proc	near
lea ['ecx,', '[ebp-1A4h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$8 proc	near
lea ['ecx,', '[ebp-15Ch]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$9 proc	near
lea ['ecx,', '[ebp-54h]']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__ehhandler$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-244h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1BK@PJEAFFAL@?$AA?$FL?$AA?3?$AAH?$AAi?$AAr?$AAa?$AAg?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?$AA@']
unicode ['0,', '<[:Hiragana:]>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1DG@BIONPNNM@?$AA?$FL?$AA?$FL?$AA?3?$AAK?$AAa?$AAt?$AAa?$AAk?$AAa?$AAn?$AAa?$AA?3?$AA?$FN?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAe?$AA?2?$AAu?$AAf?$AAf?$AA9?$AAf?$AA?$FN?$AA?$AA@']
unicode ['0,', '<[[:Katakana:]\\uff9e\\uff9f]>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BA@KJIKCGCB@?$AA?$FL?$AA?3?$AAH?$AAa?$AAn?$AA?3?$AA?$FN?$AA?$AA@']
unicode ['0,', '<[:Han:]>,0']
assume ['cs:_rdata']
public ['??_C@_1CA@BMFKKFLJ@?$AA?$FL?$AA?2?$AAu?$AAa?$AAc?$AA0?$AA0?$AA?9?$AA?2?$AAu?$AAd?$AA7?$AAa?$AA3?$AA?$FN?$AA?$AA@']
unicode ['0,', '<[\\uac00-\\ud7a3]>,0']
assume ['cs:_rdata']
dd ['offset', '??_R4CjkBreakEngine@icu_56@@6B@']
public ['??_7CjkBreakEngine@icu_56@@6B@']
dd ['offset', '?handles@DictionaryBreakEngine@icu_56@@UBECHH@Z']
dd ['offset', '?findBreaks@DictionaryBreakEngine@icu_56@@UBEHPAUUText@@HHCHAAVUStack@2@@Z']
dd ['offset', '?setCharacters@DictionaryBreakEngine@icu_56@@MAEXABVUnicodeSet@2@@Z']
dd ['offset', '?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$2']
dd ['2']
dd ['offset', '__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$3']
dd ['3']
dd ['offset', '__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$4']
dd ['4']
dd ['offset', '__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$5']
dd ['4']
dd ['offset', '__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$6']
dd ['4']
dd ['offset', '__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$7']
dd ['4']
dd ['offset', '__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$8']
dd ['4']
dd ['offset', '__unwindfunclet$??0CjkBreakEngine@icu_56@@QAE@PAVDictionaryMatcher@1@W4LanguageType@1@AAW4UErrorCode@@@Z$9']
assume ['cs:_rdata$r']
public ['??_R4CjkBreakEngine@icu_56@@6B@']
dd ['offset', '??_R0?AVCjkBreakEngine@icu_56@@@8']
dd ['offset', '??_R3CjkBreakEngine@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVCjkBreakEngine@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3CjkBreakEngine@icu_56@@8']
dd ['4']
dd ['offset', '??_R2CjkBreakEngine@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2CjkBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@DictionaryBreakEngine@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@LanguageBreakEngine@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@CjkBreakEngine@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3CjkBreakEngine@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCjkBreakEngine@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CjkBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_B057']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CjkBreakEngine@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1CjkBreakEngine@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7CjkBreakEngine@icu_56@@6B@']
mov ['[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10Ch]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_B10B']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_B115']
mov ['[ebp+var_F4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0D8h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '0A4h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '70h']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '3Ch']
call ['??1UnicodeSet@icu_56@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$0 proc	near 
mov ['ecx,', '[ebp-14h]']
jmp ['??1DictionaryBreakEngine@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$1 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '3Ch']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$2 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '70h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$3 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0A4h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$4 proc	near 
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '0D8h']
jmp ['??1UnicodeSet@icu_56@@UAE@XZ']
endp
__ehhandler$??1CjkBreakEngine@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1CjkBreakEngine@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$??1CjkBreakEngine@icu_56@@UAE@XZ']
align ['20h']
dd ['1']
dd ['offset', '__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$0']
align ['10h']
dd ['offset', '__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$1']
dd ['1']
dd ['offset', '__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$2']
dd ['2']
dd ['offset', '__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$3']
dd ['3']
dd ['offset', '__unwindfunclet$??1CjkBreakEngine@icu_56@@UAE@XZ$4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '514h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_520]']
mov ['ecx,', '145h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_B280']
xor ['eax,', 'eax']
jmp ['loc_C4B6']
lea ['ecx,', '[ebp+var_60]']
call ['??0UnicodeString@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
push ['0']
lea ['ecx,', '[ebp+var_6C]']
call ['??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_78],', '0']
push ['2']
call ['?utext_i32_flag@icu_56@@YAHH@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
and ['eax,', '[ecx+8]']
jz ['loc_B3CB']
mov ['eax,', '[ebp+arg_4]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_514],', 'ecx']
mov ['[ebp+var_51C],', 'eax']
mov ['[ebp+var_518],', 'edx']
mov ['edx,', '[ebp+var_514]']
mov ['eax,', '[edx+24h]']
cmp ['eax,', '[ebp+var_518]']
jg ['loc_B3CB']
jl ['short', 'loc_B2FF']
mov ['ecx,', '[ebp+var_514]']
mov ['edx,', '[ecx+20h]']
cmp ['edx,', '[ebp+var_51C]']
ja ['loc_B3CB']
mov ['eax,', '[ebp+arg_8]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_514],', 'ecx']
mov ['[ebp+var_51C],', 'eax']
mov ['[ebp+var_518],', 'edx']
mov ['edx,', '[ebp+var_514]']
mov ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+var_518]']
jl ['loc_B3CB']
jg ['short', 'loc_B344']
mov ['ecx,', '[ebp+var_514]']
mov ['edx,', '[ecx+10h]']
cmp ['edx,', '[ebp+var_51C]']
jb ['loc_B3CB']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+1Ch]']
cdq
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+arg_8]']
cdq
mov ['edi,', '[ebp+arg_0]']
sub ['eax,', '[edi+20h]']
sbb ['edx,', '[edi+24h]']
mov ['[ebp+var_518],', 'ecx']
mov ['[ebp+var_514],', 'esi']
mov ['[ebp+var_520],', 'eax']
mov ['[ebp+var_51C],', 'edx']
mov ['edx,', '[ebp+var_514]']
cmp ['edx,', '[ebp+var_51C]']
jl ['short', 'loc_B3CB']
jg ['short', 'loc_B392']
mov ['eax,', '[ebp+var_518]']
cmp ['eax,', '[ebp+var_520]']
jb ['short', 'loc_B3CB']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+30h]']
mov ['eax,', '[ebp+arg_4]']
lea ['esi,', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_0]']
push ['0']
push ['2']
mov ['edx,', '[ecx+24h]']
push ['edx']
mov ['eax,', '[ecx+20h]']
push ['eax']
call ['__allmul']
sub ['esi,', 'eax']
push ['esi']
push ['0']
lea ['ecx,', '[ebp+var_60]']
call ['?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z']
jmp ['loc_B669']
mov ['eax,', '[ebp+arg_4]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_84]']
cdq
mov ['esi,', 'eax']
mov ['edi,', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_518],', 'esi']
mov ['[ebp+var_514],', 'edi']
mov ['[ebp+var_520],', 'eax']
mov ['[ebp+var_51C],', 'edx']
mov ['ecx,', '[ebp+var_514]']
cmp ['ecx,', '[ebp+var_51C]']
jl ['short', 'loc_B458']
jg ['short', 'loc_B433']
mov ['edx,', '[ebp+var_518]']
cmp ['edx,', '[ebp+var_520]']
jbe ['short', 'loc_B458']
mov ['eax,', 'ds:?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA']
add ['eax,', '1Fh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1EO@NBEKDALA@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA_?$AA5?$AA6?$AA?$CI?$AAi@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_84]']
cdq
mov ['esi,', 'eax']
mov ['edi,', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_518],', 'esi']
mov ['[ebp+var_514],', 'edi']
mov ['[ebp+var_520],', 'eax']
mov ['[ebp+var_51C],', 'edx']
mov ['ecx,', '[ebp+var_514]']
cmp ['ecx,', '[ebp+var_51C]']
jl ['short', 'loc_B4B7']
jg ['short', 'loc_B4A5']
mov ['edx,', '[ebp+var_518]']
cmp ['edx,', '[ebp+var_520]']
jbe ['short', 'loc_B4B7']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_84],', 'eax']
push ['14h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4D0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
cmp ['[ebp+var_4D0],', '0']
jz ['short', 'loc_B4EB']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_4D0]']
call ['??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['[ebp+var_514],', 'eax']
jmp ['short', 'loc_B4F5']
mov ['[ebp+var_514],', '0']
mov ['ecx,', '[ebp+var_514]']
mov ['[ebp+var_4DC],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['edx,', '[ebp+var_78]']
push ['edx']
mov ['eax,', '[ebp+var_4DC]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['?adoptInsteadAndCheckErrorCode@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_78]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B55B']
mov ['[ebp+var_4C4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_60]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_4C4]']
jmp ['loc_C4B6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['eax,', '[ebp+var_84]']
cdq
mov ['[ebp+var_518],', 'ecx']
mov ['[ebp+var_514],', 'esi']
mov ['[ebp+var_520],', 'eax']
mov ['[ebp+var_51C],', 'edx']
mov ['edx,', '[ebp+var_514]']
cmp ['edx,', '[ebp+var_51C]']
jg ['loc_B64F']
jl ['short', 'loc_B5B0']
mov ['eax,', '[ebp+var_518]']
cmp ['eax,', '[ebp+var_520]']
jnb ['loc_B64F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_9C],', 'eax']
cmp ['[ebp+var_9C],', '0FFFFFFFFh']
jnz ['short', 'loc_B602']
mov ['eax,', 'ds:?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA']
add ['eax,', '2Ah']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BE@LMGOGEHB@?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_9C]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
lea ['ecx,', '[ebp+var_6C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?size@UVector32@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
lea ['ecx,', '[ebp+var_60]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
jge ['short', 'loc_B64A']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
lea ['ecx,', '[ebp+var_6C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
jmp ['short', 'loc_B611']
jmp ['loc_B55B']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_84]']
push ['ecx']
lea ['ecx,', '[ebp+var_6C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_78]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+110h]']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+110h]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_BA5C']
lea ['ecx,', '[ebp+var_E4]']
call ['??0UnicodeString@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
push ['14h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4AC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
cmp ['[ebp+var_4AC],', '0']
jz ['short', 'loc_B6E1']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_4AC]']
call ['??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['[ebp+var_514],', 'eax']
jmp ['short', 'loc_B6EB']
mov ['[ebp+var_514],', '0']
mov ['ecx,', '[ebp+var_514]']
mov ['[ebp+var_4B8],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['edx,', '[ebp+var_78]']
push ['edx']
mov ['eax,', '[ebp+var_4B8]']
push ['eax']
lea ['ecx,', '[ebp+var_F0]']
call ['??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['eax,', '[ebp+var_78]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B776']
mov ['[ebp+var_4A0],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_F0]']
call ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_E4]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_60]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_4A0]']
jmp ['loc_C4B6']
lea ['ecx,', '[ebp+var_138]']
call ['??0UnicodeString@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_180]']
call ['??0UnicodeString@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['[ebp+var_18C],', '0']
lea ['ecx,', '[ebp+var_60]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+var_18C],', 'eax']
jge ['loc_B951']
lea ['ecx,', '[ebp+var_138]']
call ['?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
mov ['eax,', '[ebp+var_18C]']
mov ['[ebp+var_198],', 'eax']
mov ['eax,', '[ebp+var_18C]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?char32At@UnicodeString@icu_56@@QBEHH@Z']
mov ['[ebp+var_1A4],', 'eax']
mov ['eax,', '[ebp+var_1A4]']
push ['eax']
lea ['ecx,', '[ebp+var_138]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
push ['1']
mov ['eax,', '[ebp+var_18C]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z']
mov ['[ebp+var_18C],', 'eax']
lea ['ecx,', '[ebp+var_60]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+var_18C],', 'eax']
jnz ['short', 'loc_B819']
jmp ['short', 'loc_B865']
mov ['eax,', '[ebp+var_18C]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?char32At@UnicodeString@icu_56@@QBEHH@Z']
mov ['[ebp+var_1A4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_1A4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+110h]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+110h]']
mov ['edx,', '[edx]']
mov ['eax,', '[edx+30h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B860']
jmp ['short', 'loc_B865']
jmp ['loc_B7DE']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_78]']
push ['eax']
lea ['ecx,', '[ebp+var_180]']
push ['ecx']
lea ['edx,', '[ebp+var_138]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+110h]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+110h]']
mov ['edx,', '[ecx]']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_180]']
push ['eax']
lea ['ecx,', '[ebp+var_E4]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z']
lea ['ecx,', '[ebp+var_6C]']
call ['?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_B8DA']
mov ['ecx,', '[ebp+var_198]']
push ['ecx']
lea ['ecx,', '[ebp+var_6C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
mov ['[ebp+var_514],', 'eax']
jmp ['short', 'loc_B8E9']
mov ['edx,', '[ebp+var_198]']
add ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_514],', 'edx']
mov ['eax,', '[ebp+var_514]']
mov ['[ebp+var_1B0],', 'eax']
lea ['ecx,', '[ebp+var_F0]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?size@UVector32@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
lea ['ecx,', '[ebp+var_E4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
jge ['short', 'loc_B94C']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_1B0]']
push ['ecx']
lea ['ecx,', '[ebp+var_F0]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_78]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B94A']
jmp ['short', 'loc_B94C']
jmp ['short', 'loc_B8F5']
jmp ['loc_B79E']
lea ['ecx,', '[ebp+var_F0]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?size@UVector32@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
lea ['ecx,', '[ebp+var_E4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['esi,', 'eax']
jz ['short', 'loc_B999']
mov ['eax,', 'ds:?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA']
add ['eax,', '5Bh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1GE@CIBAKEOJ@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AAM?$AAa?$AAp?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_6C]']
call ['?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_B9C8']
lea ['ecx,', '[ebp+var_60]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
mov ['[ebp+var_514],', 'eax']
jmp ['short', 'loc_B9D9']
lea ['ecx,', '[ebp+var_60]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
add ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_514],', 'eax']
mov ['ecx,', '[ebp+var_514]']
mov ['[ebp+var_1BC],', 'ecx']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_1BC]']
push ['ecx']
lea ['ecx,', '[ebp+var_F0]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
lea ['eax,', '[ebp+var_F0]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['?moveFrom@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z']
lea ['eax,', '[ebp+var_E4]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_180]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_138]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_F0]']
call ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_E4]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
push ['7FFFFFFFh']
push ['0']
lea ['ecx,', '[ebp+var_60]']
call ['?countChar32@UnicodeString@icu_56@@QBEHHH@Z']
mov ['[ebp+var_1C8],', 'eax']
lea ['ecx,', '[ebp+var_60]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+var_1C8],', 'eax']
jz ['loc_BC24']
lea ['ecx,', '[ebp+var_6C]']
call ['?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ']
mov ['[ebp+var_1D1],', 'al']
movsx ['eax,', '[ebp+var_1D1]']
test ['eax,', 'eax']
jnz ['loc_BB46']
push ['14h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_500],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
cmp ['[ebp+var_500],', '0']
jz ['short', 'loc_BAD6']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_500]']
call ['??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['[ebp+var_514],', 'eax']
jmp ['short', 'loc_BAE0']
mov ['[ebp+var_514],', '0']
mov ['ecx,', '[ebp+var_514]']
mov ['[ebp+var_50C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['edx,', '[ebp+var_78]']
push ['edx']
mov ['eax,', '[ebp+var_50C]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['?adoptInsteadAndCheckErrorCode@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_78]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_BB46']
mov ['[ebp+var_4F4],', '0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_60]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_4F4]']
jmp ['loc_C4B6']
mov ['[ebp+var_1E0],', '0']
mov ['[ebp+var_1EC],', '0']
jmp ['short', 'loc_BB73']
push ['1']
mov ['eax,', '[ebp+var_1EC]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z']
mov ['[ebp+var_1EC],', 'eax']
mov ['eax,', '[ebp+var_1EC]']
cmp ['eax,', '[ebp+var_1E0]']
jge ['short', 'loc_BBA7']
mov ['ecx,', 'ds:?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA']
add ['ecx,', '74h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BO@HHICADMK@?$AAc?$AAu?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAc?$AAp?$AAI?$AAd?$AAx?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+var_1D1]']
test ['eax,', 'eax']
jz ['short', 'loc_BBE1']
mov ['eax,', '[ebp+var_1E0]']
push ['eax']
mov ['ecx,', '[ebp+var_1EC]']
push ['ecx']
lea ['ecx,', '[ebp+var_6C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?setElementAt@UVector32@icu_56@@QAEXHH@Z']
jmp ['short', 'loc_BBFE']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_1EC]']
add ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_6C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_1E0]']
add ['eax,', '1']
mov ['[ebp+var_1E0],', 'eax']
lea ['ecx,', '[ebp+var_60]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+var_1EC],', 'eax']
jnz ['short', 'loc_BC1F']
jmp ['short', 'loc_BC24']
jmp ['loc_BB5C']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_1C8]']
add ['ecx,', '1']
push ['ecx']
lea ['ecx,', '[ebp+var_208]']
call ['??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['eax,', '[ebp+var_78]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_208]']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['[ebp+var_214],', '1']
jmp ['short', 'loc_BC6D']
mov ['eax,', '[ebp+var_214]']
add ['eax,', '1']
mov ['[ebp+var_214],', 'eax']
mov ['eax,', '[ebp+var_214]']
cmp ['eax,', '[ebp+var_1C8]']
jg ['short', 'loc_BC8E']
lea ['eax,', '[ebp+var_78]']
push ['eax']
push ['0FFFFFFFFh']
lea ['ecx,', '[ebp+var_208]']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
jmp ['short', 'loc_BC5E']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_1C8]']
add ['ecx,', '1']
push ['ecx']
lea ['ecx,', '[ebp+var_230]']
call ['??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['[ebp+var_23C],', '0']
jmp ['short', 'loc_BCC6']
mov ['eax,', '[ebp+var_23C]']
add ['eax,', '1']
mov ['[ebp+var_23C],', 'eax']
mov ['eax,', '[ebp+var_23C]']
cmp ['eax,', '[ebp+var_1C8]']
jg ['short', 'loc_BCE7']
lea ['eax,', '[ebp+var_78]']
push ['eax']
push ['0FFFFFFFFh']
lea ['ecx,', '[ebp+var_230]']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
jmp ['short', 'loc_BCB7']
mov ['[ebp+var_248],', '14h']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_1C8]']
push ['ecx']
lea ['ecx,', '[ebp+var_264]']
call ['??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
mov ['eax,', '[ebp+var_1C8]']
push ['eax']
lea ['ecx,', '[ebp+var_264]']
call ['?setSize@UVector32@icu_56@@QAEXH@Z']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_1C8]']
push ['ecx']
lea ['ecx,', '[ebp+var_280]']
call ['??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
mov ['eax,', '[ebp+var_1C8]']
push ['eax']
lea ['ecx,', '[ebp+var_280]']
call ['?setSize@UVector32@icu_56@@QAEXH@Z']
mov ['[ebp+var_2F8],', '345AD82Ch']
mov ['[ebp+var_2F4],', '0']
mov ['[ebp+var_2F0],', '0']
mov ['[ebp+var_2EC],', '70h']
mov ['[ebp+var_2E8],', '0']
mov ['[ebp+var_2E4],', '0']
mov ['[ebp+var_2E0],', '0']
mov ['[ebp+var_2DC],', '0']
mov ['[ebp+var_2D8],', '0']
mov ['[ebp+var_2D4],', '0']
mov ['[ebp+var_2D0],', '0']
mov ['[ebp+var_2CC],', '0']
mov ['[ebp+var_2C8],', '0']
mov ['[ebp+var_2C4],', '0']
mov ['[ebp+var_2C0],', '0']
mov ['[ebp+var_2BC],', '0']
mov ['[ebp+var_2B8],', '0']
mov ['[ebp+var_2B4],', '0']
mov ['[ebp+var_2B0],', '0']
mov ['[ebp+var_2AC],', '0']
mov ['[ebp+var_2A8],', '0']
mov ['[ebp+var_2A4],', '0']
mov ['[ebp+var_2A0],', '0']
mov ['[ebp+var_29C],', '0']
mov ['[ebp+var_298],', '0']
mov ['[ebp+var_294],', '0']
mov ['[ebp+var_290],', '0']
mov ['[ebp+var_28C],', '0']
lea ['eax,', '[ebp+var_78]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
lea ['edx,', '[ebp+var_2F8]']
push ['edx']
call ['_utext_openUnicodeString_56']
add ['esp,', '0Ch']
mov ['[ebp+var_304],', '0']
mov ['[ebp+var_310],', '0']
jmp ['short', 'loc_BEB4']
mov ['eax,', '[ebp+var_310]']
add ['eax,', '1']
mov ['[ebp+var_310],', 'eax']
push ['1']
mov ['ecx,', '[ebp+var_304]']
push ['ecx']
lea ['ecx,', '[ebp+var_60]']
call ['?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z']
mov ['[ebp+var_304],', 'eax']
mov ['eax,', '[ebp+var_310]']
cmp ['eax,', '[ebp+var_1C8]']
jge ['loc_C202']
mov ['eax,', '[ebp+var_310]']
push ['eax']
lea ['ecx,', '[ebp+var_208]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_BEDF']
jmp ['short', 'loc_BE8E']
mov ['eax,', '[ebp+var_304]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+var_2F8]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['0']
lea ['ecx,', '[ebp+var_264]']
call ['?getBuffer@UVector32@icu_56@@QBEPAHXZ']
push ['eax']
lea ['ecx,', '[ebp+var_280]']
call ['?getBuffer@UVector32@icu_56@@QBEPAHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+var_1C8]']
push ['eax']
push ['14h']
lea ['ecx,', '[ebp+var_2F8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+10Ch]']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+10Ch]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_31C],', 'eax']
cmp ['[ebp+var_31C],', '0']
jz ['short', 'loc_BF66']
push ['0']
lea ['ecx,', '[ebp+var_280]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
cmp ['eax,', '1']
jz ['short', 'loc_BFDD']
mov ['eax,', '[ebp+var_304]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?char32At@UnicodeString@icu_56@@QBEHH@Z']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '3Ch']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+3Ch]']
mov ['edx,', '[eax+18h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_BFDD']
mov ['eax,', '[ebp+var_31C]']
push ['eax']
push ['0FFh']
lea ['ecx,', '[ebp+var_264]']
call ['?setElementAt@UVector32@icu_56@@QAEXHH@Z']
mov ['eax,', '[ebp+var_31C]']
mov ['[ebp+var_514],', 'eax']
mov ['ecx,', '[ebp+var_31C]']
add ['ecx,', '1']
mov ['[ebp+var_31C],', 'ecx']
mov ['edx,', '[ebp+var_514]']
push ['edx']
push ['1']
lea ['ecx,', '[ebp+var_280]']
call ['?setElementAt@UVector32@icu_56@@QAEXHH@Z']
mov ['[ebp+var_328],', '0']
jmp ['short', 'loc_BFF8']
mov ['eax,', '[ebp+var_328]']
add ['eax,', '1']
mov ['[ebp+var_328],', 'eax']
mov ['eax,', '[ebp+var_328]']
cmp ['eax,', '[ebp+var_31C]']
jge ['loc_C0A7']
mov ['eax,', '[ebp+var_310]']
push ['eax']
lea ['ecx,', '[ebp+var_208]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_328]']
push ['ecx']
lea ['ecx,', '[ebp+var_264]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
add ['esi,', 'eax']
mov ['[ebp+var_334],', 'esi']
mov ['eax,', '[ebp+var_328]']
push ['eax']
lea ['ecx,', '[ebp+var_280]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
add ['eax,', '[ebp+var_310]']
mov ['[ebp+var_340],', 'eax']
mov ['eax,', '[ebp+var_340]']
push ['eax']
lea ['ecx,', '[ebp+var_208]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
cmp ['[ebp+var_334],', 'eax']
jnb ['short', 'loc_C0A2']
mov ['eax,', '[ebp+var_340]']
push ['eax']
mov ['ecx,', '[ebp+var_334]']
push ['ecx']
lea ['ecx,', '[ebp+var_208]']
call ['?setElementAt@UVector32@icu_56@@QAEXHH@Z']
mov ['eax,', '[ebp+var_340]']
push ['eax']
mov ['ecx,', '[ebp+var_310]']
push ['ecx']
lea ['ecx,', '[ebp+var_230]']
call ['?setElementAt@UVector32@icu_56@@QAEXHH@Z']
jmp ['loc_BFE9']
mov ['[ebp+var_349],', '0']
mov ['eax,', '[ebp+var_304]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?char32At@UnicodeString@icu_56@@QBEHH@Z']
push ['eax']
call ['?isKatakana@icu_56@@YA_NG@Z']
add ['esp,', '4']
mov ['[ebp+var_355],', 'al']
mov ['[ebp+var_364],', '1']
movzx ['eax,', '[ebp+var_349]']
test ['eax,', 'eax']
jnz ['loc_C1F1']
movzx ['eax,', '[ebp+var_355]']
test ['eax,', 'eax']
jz ['loc_C1F1']
push ['1']
mov ['eax,', '[ebp+var_304]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z']
mov ['[ebp+var_370],', 'eax']
lea ['ecx,', '[ebp+var_60]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+var_370],', 'eax']
jge ['short', 'loc_C16B']
cmp ['[ebp+var_364],', '14h']
jge ['short', 'loc_C16B']
mov ['eax,', '[ebp+var_370]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?char32At@UnicodeString@icu_56@@QBEHH@Z']
push ['eax']
call ['?isKatakana@icu_56@@YA_NG@Z']
add ['esp,', '4']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C16B']
push ['1']
mov ['eax,', '[ebp+var_370]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z']
mov ['[ebp+var_370],', 'eax']
mov ['eax,', '[ebp+var_364]']
add ['eax,', '1']
mov ['[ebp+var_364],', 'eax']
jmp ['short', 'loc_C10B']
cmp ['[ebp+var_364],', '14h']
jge ['short', 'loc_C1F1']
mov ['eax,', '[ebp+var_310]']
push ['eax']
lea ['ecx,', '[ebp+var_208]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_364]']
push ['ecx']
call ['?getKatakanaCost@icu_56@@YAIH@Z']
add ['esp,', '4']
add ['esi,', 'eax']
mov ['[ebp+var_37C],', 'esi']
mov ['eax,', '[ebp+var_370]']
push ['eax']
lea ['ecx,', '[ebp+var_208]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
cmp ['[ebp+var_37C],', 'eax']
jnb ['short', 'loc_C1F1']
mov ['eax,', '[ebp+var_370]']
push ['eax']
mov ['ecx,', '[ebp+var_37C]']
push ['ecx']
lea ['ecx,', '[ebp+var_208]']
call ['?setElementAt@UVector32@icu_56@@QAEXHH@Z']
mov ['eax,', '[ebp+var_310]']
add ['eax,', '[ebp+var_364]']
push ['eax']
mov ['ecx,', '[ebp+var_310]']
push ['ecx']
lea ['ecx,', '[ebp+var_230]']
call ['?setElementAt@UVector32@icu_56@@QAEXHH@Z']
mov ['al,', '[ebp+var_355]']
mov ['[ebp+var_349],', 'al']
jmp ['loc_BE8E']
lea ['eax,', '[ebp+var_2F8]']
push ['eax']
call ['_utext_close_56']
add ['esp,', '4']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_1C8]']
add ['ecx,', '1']
push ['ecx']
lea ['ecx,', '[ebp+var_398]']
call ['??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
mov ['[ebp+var_3A4],', '0']
mov ['eax,', '[ebp+var_1C8]']
push ['eax']
lea ['ecx,', '[ebp+var_208]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_C279']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_1C8]']
push ['ecx']
lea ['ecx,', '[ebp+var_398]']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_3A4]']
add ['eax,', '1']
mov ['[ebp+var_3A4],', 'eax']
jmp ['loc_C31D']
mov ['eax,', '[ebp+var_1C8]']
mov ['[ebp+var_3B0],', 'eax']
jmp ['short', 'loc_C29F']
mov ['eax,', '[ebp+var_3B0]']
push ['eax']
lea ['ecx,', '[ebp+var_230]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
mov ['[ebp+var_3B0],', 'eax']
cmp ['[ebp+var_3B0],', '0']
jle ['short', 'loc_C2CF']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_3B0]']
push ['ecx']
lea ['ecx,', '[ebp+var_398]']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_3A4]']
add ['eax,', '1']
mov ['[ebp+var_3A4],', 'eax']
jmp ['short', 'loc_C287']
mov ['eax,', '[ebp+var_3A4]']
sub ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_398]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
push ['eax']
lea ['ecx,', '[ebp+var_230]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
test ['eax,', 'eax']
jz ['short', 'loc_C31D']
mov ['ecx,', 'ds:?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA']
add ['ecx,', '0EDh']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1HG@ELJMMCLP@?$AAp?$AAr?$AAe?$AAv?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAA?$AAt?$AAi?$AA?$CI?$AAt?$AA_?$AAb?$AAo?$AAu?$AAn?$AAd?$AAa?$AAr?$AAy?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_C]']
call ['?size@UVector@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jz ['short', 'loc_C336']
mov ['ecx,', '[ebp+arg_C]']
call ['?peeki@UStack@icu_56@@QBEHXZ']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_C356']
lea ['eax,', '[ebp+var_78]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_398]']
call ['?addElement@UVector32@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_3A4]']
add ['eax,', '1']
mov ['[ebp+var_3A4],', 'eax']
mov ['eax,', '[ebp+var_3A4]']
sub ['eax,', '1']
mov ['[ebp+var_3BC],', 'eax']
jmp ['short', 'loc_C376']
mov ['eax,', '[ebp+var_3BC]']
sub ['eax,', '1']
mov ['[ebp+var_3BC],', 'eax']
cmp ['[ebp+var_3BC],', '0']
jl ['loc_C43E']
mov ['eax,', '[ebp+var_3BC]']
push ['eax']
lea ['ecx,', '[ebp+var_398]']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
mov ['[ebp+var_3C8],', 'eax']
lea ['ecx,', '[ebp+var_6C]']
call ['?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_C3C8']
mov ['ecx,', '[ebp+var_3C8]']
push ['ecx']
lea ['ecx,', '[ebp+var_6C]']
call ['??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ']
mov ['ecx,', 'eax']
call ['?elementAti@UVector32@icu_56@@QBEHH@Z']
mov ['[ebp+var_514],', 'eax']
jmp ['short', 'loc_C3D7']
mov ['edx,', '[ebp+var_3C8]']
add ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_514],', 'edx']
mov ['eax,', '[ebp+var_514]']
mov ['[ebp+var_3D4],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
call ['?size@UVector@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jz ['short', 'loc_C426']
mov ['ecx,', '[ebp+arg_C]']
call ['?peeki@UStack@icu_56@@QBEHXZ']
cmp ['eax,', '[ebp+var_3D4]']
jl ['short', 'loc_C426']
mov ['eax,', 'ds:?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA']
add ['eax,', '0FEh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1HC@GDEJECAF@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_3D4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z']
jmp ['loc_C367']
mov ['eax,', '[ebp+var_3A4]']
mov ['[ebp+var_4E8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
lea ['ecx,', '[ebp+var_398]']
call ['??1UVector32@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
lea ['ecx,', '[ebp+var_280]']
call ['??1UVector32@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
lea ['ecx,', '[ebp+var_264]']
call ['??1UVector32@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
lea ['ecx,', '[ebp+var_230]']
call ['??1UVector32@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_208]']
call ['??1UVector32@icu_56@@UAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_6C]']
call ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_60]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_4E8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN116']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '520h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN115']
dd ['offset', '$LN101']
dd ['0FFFFFF94h,', '4']
dd ['offset', '$LN102']
db ['88h,', '0FFh']
dw ['0FFFFh']
dd ['4']
dd ['offset', '$LN103']
dd ['0FFFFFF1Ch,', '40h']
dd ['offset', '$LN104']
dd ['0FFFFFF10h,', '4']
dd ['offset', '$LN105']
dd ['0FFFFFEC8h,', '40h']
dd ['offset', '$LN106']
dd ['0FFFFFE80h,', '40h']
dd ['offset', '$LN107']
dd ['0FFFFFDF8h,', '14h']
dd ['offset', '$LN108']
dd ['0FFFFFDD0h,', '14h']
dd ['offset', '$LN109']
dd ['0FFFFFD9Ch,', '14h']
dd ['offset', '$LN110']
dd ['0FFFFFD80h,', '14h']
dd ['offset', '$LN111']
dd ['0FFFFFD08h,', '70h']
dd ['offset', '$LN112']
dd ['0FFFFFC68h,', '14h']
dd ['offset', '$LN113']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$0 proc near
lea ['ecx,', '[ebp-60h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$1 proc near
lea ['ecx,', '[ebp-6Ch]']
jmp ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$2 proc near
mov ['eax,', '[ebp-4D0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3 proc near
lea ['ecx,', '[ebp-0E4h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$4 proc near
mov ['eax,', '[ebp-4ACh]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$5 proc near
lea ['ecx,', '[ebp-0F0h]']
jmp ['??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$6 proc near
lea ['ecx,', '[ebp-138h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$7 proc near
lea ['ecx,', '[ebp-180h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$8 proc near
mov ['eax,', '[ebp-500h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$9 proc near
lea ['ecx,', '[ebp-208h]']
jmp ['??1UVector32@icu_56@@UAE@XZ']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$10 proc near
lea ['ecx,', '[ebp-230h]']
jmp ['??1UVector32@icu_56@@UAE@XZ']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$11 proc near
lea ['ecx,', '[ebp-264h]']
jmp ['??1UVector32@icu_56@@UAE@XZ']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$12 proc near
lea ['ecx,', '[ebp-280h]']
jmp ['??1UVector32@icu_56@@UAE@XZ']
endp
__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$13 proc near
lea ['ecx,', '[ebp-398h]']
jmp ['??1UVector32@icu_56@@UAE@XZ']
endp
__ehhandler$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-524h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1HC@GDEJECAF@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB@']
unicode ['0,', '<foundBreaks.size()', '==', '0', '||foundBreaks.peeki()', '>']
dw ['3Ch']
unicode ['0,', '<', 'utextPos>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1HG@ELJMMCLP@?$AAp?$AAr?$AAe?$AAv?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe?$AAn?$AAt?$AAA?$AAt?$AAi?$AA?$CI?$AAt?$AA_?$AAb?$AAo?$AAu?$AAn?$AAd?$AAa?$AAr?$AAy?$AA?4?$AAe?$AAl?$AAe?$AAm?$AAe@']
unicode ['0,', '<prev.elementAti(t_boundary.elementAti(numBreaks', '-', '1))', '==', '>']
unicode ['0,', '<0>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BO@HHICADMK@?$AAc?$AAu?$AAI?$AAd?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAc?$AAp?$AAI?$AAd?$AAx?$AA?$AA@']
unicode ['0,', '<cuIdx', '>']
dw ['3Eh']
unicode ['0,', '<=', 'cpIdx>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1GE@CIBAKEOJ@?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi?$AAz?$AAe?$AAd?$AAM?$AAa?$AAp?$AA?9?$AA?$DO?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAn?$AAo?$AAr?$AAm?$AAa?$AAl?$AAi@']
unicode ['0,', '<normalizedMap->']
dw ['3Eh']
unicode ['0,', '<size()', '==', 'normalizedInput.length()>,0']
assume ['cs:_rdata']
public ['??_C@_1BE@LMGOGEHB@?$AAc?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?$AA@']
unicode ['0,', '<c', '!=', '(-1)>,0']
assume ['cs:_rdata']
public ['??_C@_1EO@NBEKDALA@?$AAl?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA_?$AA5?$AA6?$AA?$CI?$AAi@']
unicode ['0,', '<limit', '>']
dw ['3Ch']
unicode ['0,', '<=', 'utext_nativeLength_56(inText)>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FK@BLEHEOOD@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\dictbe.cpp>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@3@@Z@4JA']
assume ['cs:_xdata$x']
dd ['offset', '__unwindtable$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$1']
dd ['1']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$2']
dd ['1']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$3']
dd ['3']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$4']
dd ['3']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$5']
dd ['5']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$6']
dd ['6']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$7']
dd ['1']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$8']
dd ['1']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$9']
dd ['9']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$10']
dd ['0Ah']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$11']
dd ['0Bh']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$12']
dd ['0Ch']
dd ['offset', '__unwindfunclet$?divideUpDictionaryRange@CjkBreakEngine@icu_56@@MBEHPAUUText@@HHAAVUStack@2@@Z$13']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getKatakanaCost@icu_56@@YAIH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '8']
jle ['short', 'loc_CA04']
mov ['[ebp+var_C4],', '2000h']
jmp ['short', 'loc_CA14']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', 'ds:?katakanaCost@?1??getKatakanaCost@icu_56@@YAIH@Z@4QBIB[eax*4]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isKatakana@icu_56@@YA_NG@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '30A1h']
jb ['short', 'loc_CA65']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '30FEh']
ja ['short', 'loc_CA65']
movzx ['edx,', '[ebp+arg_0]']
cmp ['edx,', '30FBh']
jnz ['short', 'loc_CA88']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FF66h']
jb ['short', 'loc_CA7C']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '0FF9Fh']
jbe ['short', 'loc_CA88']
mov ['[ebp+var_C4],', '0']
jmp ['short', 'loc_CA92']
mov ['[ebp+var_C4],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?utext_i32_flag@icu_56@@YAHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
shl ['eax,', 'cl']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CC41']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_CC41']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_CD4E']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_CD58']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ']
endp
__ehhandler$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??1?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?moveFrom@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEAAV12@AAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_D4],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_CE44']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_CE4E']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?adoptInsteadAndCheckErrorCode@?$LocalPointer@VUVector32@icu_56@@@icu_56@@QAEXPAVUVector32@2@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_CF1C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'edx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_CEF9']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_F8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_F8]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_CF03']
mov ['[ebp+var_100],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CF1A']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_CF69']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'ecx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_CF5F']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_CF69']
mov ['[ebp+var_100],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isValid@?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??C?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QBEPAVUVector32@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_D01E']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_D02A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@PAVUVector32@1@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1?$LocalPointerBase@VUVector32@icu_56@@@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z proc near
sub ['ecx,', '4']
jmp ['??_EUnicodeFilter@icu_56@@UAEPAXI@Z']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1UObject@icu_56@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__purecall:near']
extrn ['?hasMetaData@Replaceable@icu_56@@UBECXZ:near']
extrn ['?clone@Replaceable@icu_56@@UBEPAV12@XZ:near']
extrn ['??1Replaceable@icu_56@@UAE@XZ:near']
extrn ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z:near']
extrn ['?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:near']
extrn ['?Flush@ByteSink@icu_56@@UAEXXZ:near']
extrn ['??1ByteSink@icu_56@@UAE@XZ:near']
extrn ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:near']
extrn ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:near']
extrn ['??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:near']
extrn ['?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:near']
extrn ['?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:near']
extrn ['?copy@UnicodeString@icu_56@@UAEXHHH@Z:near']
extrn ['?hasMetaData@UnicodeString@icu_56@@UBECXZ:near']
extrn ['?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:near']
extrn ['?getLength@UnicodeString@icu_56@@MBEHXZ:near']
extrn ['?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:near']
extrn ['?getChar32At@UnicodeString@icu_56@@MBEHH@Z:near']
extrn ['?doHashCode@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?refCount@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:near']
extrn ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:near']
extrn ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['_u_strlen_56:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:near']
extrn ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:near']
extrn ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:near']
extrn ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:near']
extrn ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:near']
extrn ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:near']
extrn ['?unBogus@UnicodeString@icu_56@@AAEXXZ:near']
extrn ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:near']
extrn ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z:near']
extrn ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:near']
extrn ['?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:near']
extrn ['??1UnicodeFunctor@icu_56@@UAE@XZ:near']
extrn ['??1UnicodeMatcher@icu_56@@UAE@XZ:near']
extrn ['?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:near']
extrn ['?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:near']
extrn ['??1UnicodeFilter@icu_56@@UAE@XZ:near']
extrn ['?containsNone@UnicodeSet@icu_56@@QBECHH@Z:near']
extrn ['?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z:near']
extrn ['?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z:near']
extrn ['?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:near']
extrn ['?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:near']
extrn ['??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:near']
extrn ['?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:near']
extrn ['?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:near']
extrn ['?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['??8StringEnumeration@icu_56@@UBECABV01@@Z:near']
extrn ['??9StringEnumeration@icu_56@@UBECABV01@@Z:near']
extrn ['??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['??1StringEnumeration@icu_56@@UAE@XZ:near']
extrn ['?expandCapacity@UVector32@icu_56@@QAECHAAW4UErrorCode@@@Z:near']
extrn ['__imp___wassert:near']
extrn ['?indexOf@UVector32@icu_56@@QBEHHH@Z:near']
extrn ['??8UVector32@icu_56@@QAECABV01@@Z:near']
extrn ['?indexOf@UVector@icu_56@@QBEHPAXH@Z:near']
extrn ['?indexOf@UVector@icu_56@@QBEHHH@Z:near']
extrn ['?elementAt@UVector@icu_56@@QBEPAXH@Z:near']
extrn ['?elementAti@UVector@icu_56@@QBEHH@Z:near']
extrn ['??8UVector@icu_56@@QAECABV01@@Z:near']
extrn ['?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:near']
extrn ['?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:near']
extrn ['??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['?getRawDecomposition@Normalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:near']
extrn ['?composePair@Normalizer2@icu_56@@UBEHHH@Z:near']
extrn ['?getCombiningClass@Normalizer2@icu_56@@UBEEH@Z:near']
extrn ['??1Normalizer2@icu_56@@UAE@XZ:near']
extrn ['?normalize@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z:near']
extrn ['?normalizeSecondAndAppend@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z:near']
extrn ['?append@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z:near']
extrn ['?getDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:near']
extrn ['?getRawDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:near']
extrn ['?composePair@FilteredNormalizer2@icu_56@@UBEHHH@Z:near']
extrn ['?getCombiningClass@FilteredNormalizer2@icu_56@@UBEEH@Z:near']
extrn ['?isNormalized@FilteredNormalizer2@icu_56@@UBECABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['?quickCheck@FilteredNormalizer2@icu_56@@UBE?AW4UNormalizationCheckResult@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['?spanQuickCheckYes@FilteredNormalizer2@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['?hasBoundaryBefore@FilteredNormalizer2@icu_56@@UBECH@Z:near']
extrn ['?hasBoundaryAfter@FilteredNormalizer2@icu_56@@UBECH@Z:near']
extrn ['?isInert@FilteredNormalizer2@icu_56@@UBECH@Z:near']
extrn ['??1FilteredNormalizer2@icu_56@@UAE@XZ:near']
extrn ['??8Normalizer@icu_56@@QBECABV01@@Z:near']
extrn ['?quickCheck@Normalizer@icu_56@@SA?AW4UNormalizationCheckResult@@ABVUnicodeString@2@W4UNormalizationMode@@HAAW4UErrorCode@@@Z:near']
extrn ['?isNormalized@Normalizer@icu_56@@SACABVUnicodeString@2@W4UNormalizationMode@@HAAW4UErrorCode@@@Z:near']
extrn ['_unorm_compare_56:near']
extrn ['??1DictionaryMatcher@icu_56@@UAE@XZ:near']
extrn ['?matches@UCharsDictionaryMatcher@icu_56@@UBEHPAUUText@@HHPAH111@Z:near']
extrn ['?getType@UCharsDictionaryMatcher@icu_56@@UBEHXZ:near']
extrn ['??1UCharsDictionaryMatcher@icu_56@@UAE@XZ:near']
extrn ['?matches@BytesDictionaryMatcher@icu_56@@UBEHPAUUText@@HHPAH111@Z:near']
extrn ['?getType@BytesDictionaryMatcher@icu_56@@UBEHXZ:near']
extrn ['??1BytesDictionaryMatcher@icu_56@@UAE@XZ:near']
extrn ['??1LanguageBreakEngine@icu_56@@UAE@XZ:near']
extrn ['??0UnicodeSet@icu_56@@QAE@XZ:near']
extrn ['??0LanguageBreakEngine@icu_56@@QAE@XZ:near']
extrn ['??_GDictionaryBreakEngine@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EDictionaryBreakEngine@icu_56@@UAEPAXI@Z:near']
extrn ['??1UnicodeSet@icu_56@@UAE@XZ:near']
extrn ['_utext_setNativeIndex_56:near']
extrn ['_utext_next32_56:near']
extrn ['_utext_previous32_56:near']
extrn ['_utext_current32_56:near']
extrn ['_utext_getNativeIndex_56:near']
extrn ['??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['?remove@UnicodeSet@icu_56@@QAEAAV12@H@Z:near']
extrn ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:near']
extrn ['?applyPattern@UnicodeSet@icu_56@@QAEAAV12@ABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['??_GThaiBreakEngine@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EThaiBreakEngine@icu_56@@UAEPAXI@Z:near']
extrn ['?popi@UStack@icu_56@@QAEHXZ:near']
extrn ['??_L@YGXPAXIHP6EX0@Z1@Z:near']
extrn ['_utext_moveIndex32_56:near']
extrn ['??_GLaoBreakEngine@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ELaoBreakEngine@icu_56@@UAEPAXI@Z:near']
extrn ['??_GBurmeseBreakEngine@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EBurmeseBreakEngine@icu_56@@UAEPAXI@Z:near']
extrn ['??_GKhmerBreakEngine@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_EKhmerBreakEngine@icu_56@@UAEPAXI@Z:near']
extrn ['?addAll@UnicodeSet@icu_56@@UAEAAV12@ABV12@@Z:near']
extrn ['?getNFKCInstance@Normalizer2@icu_56@@SAPBV12@AAW4UErrorCode@@@Z:near']
extrn ['??_GCjkBreakEngine@icu_56@@UAEPAXI@Z_0:near']
extrn ['??_ECjkBreakEngine@icu_56@@UAEPAXI@Z:near']
extrn ['??1UVector32@icu_56@@UAE@XZ:near']
extrn ['_utext_close_56:near']
extrn ['_utext_openUnicodeString_56:near']
extrn ['?setSize@UVector32@icu_56@@QAEXH@Z:near']
extrn ['??0UVector32@icu_56@@QAE@HAAW4UErrorCode@@@Z:near']
extrn ['?setElementAt@UVector32@icu_56@@QAEXHH@Z:near']
extrn ['?countChar32@UnicodeString@icu_56@@QBEHHH@Z:near']
extrn ['?moveIndex32@UnicodeString@icu_56@@QBEHHH@Z:near']
extrn ['?char32At@UnicodeString@icu_56@@QBEHH@Z:near']
extrn ['??0UVector32@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['_utext_nativeLength_56:near']
extrn ['?setTo@UnicodeString@icu_56@@QAEAAV12@CPB_WH@Z:near']
extrn ['__allmul:near']
end

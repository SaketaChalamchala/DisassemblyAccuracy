endp
__ISCIIOpen	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_67A']
jmp ['loc_7D8']
push ['30h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['loc_7CF']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2Ch],', '0FFFFh']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+2],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+19h],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0Fh']
cmp ['ecx,', '9']
jnb ['loc_7AB']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0Fh']
imul ['ecx,', '0Ch']
mov ['edx,', '_lookupInitialData[ecx]']
shl ['edx,', '7']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+var_DC]']
mov ['[eax+4],', 'cx']
mov ['edx,', '[ebp+var_14]']
mov ['ax,', 'word', 'ptr', '[ebp+var_DC]']
mov ['[edx+8],', 'ax']
mov ['ecx,', '[ebp+var_14]']
mov ['dx,', 'word', 'ptr', '[ebp+var_DC]']
mov ['[ecx+6],', 'dx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0Fh']
imul ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', 'off_4[ecx]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+14h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+18h],', '1']
push ['offset', '??_C@_0P@KIBDDMGM@ISCII?0version?$DN?$AA@']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1Ah']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1Ah']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0Fh']
add ['ecx,', '30h']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+var_8]']
mov ['[edx+1Ah],', 'cl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+1Bh],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
jmp ['short', 'loc_7CD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_7D8']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0P@KIBDDMGM@ISCII?0version?$DN?$AA@']
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__ISCIIClose	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_84F']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+22h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_845']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__ISCIIgetName	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_89C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1Ah']
jmp ['short', 'loc_89E']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__ISCIIReset	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '1']
jg ['short', 'loc_918']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2Ch],', '0FFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['dx,', '[ecx+4]']
mov ['[eax+8],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
cmp ['[ebp+arg_4],', '1']
jz ['short', 'loc_959']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+38h],', '0']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+2],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['dx,', '[ecx+4]']
mov ['[eax+6],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+18h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+19h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_UConverter_fromUnicode_ISCII_OFFSETS_LOGIC proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1A8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1A8]']
mov ['ecx,', '6Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_44],', '0']
mov ['[ebp+var_50],', '0']
mov ['[ebp+var_5C],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_74],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_80],', 'ax']
mov ['[ebp+var_89],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_9F8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
cmp ['edx,', '[ecx+10h]']
jb ['short', 'loc_9F8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+8]']
jnb ['short', 'loc_A06']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_1A0C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_68]']
mov ['cx,', '[eax+6]']
mov ['[ebp+var_74],', 'cx']
movzx ['eax,', '[ebp+var_74]']
cdq
and ['edx,', '7Fh']
add ['eax,', 'edx']
sar ['eax,', '7']
mov ['[ebp+var_80],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+38h]']
mov ['[ebp+var_50],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_A45']
jmp ['$getTrail$10572']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jnb ['loc_19FA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
cmp ['dword', 'ptr', '[ecx+34h],', '0Ah']
jnz ['loc_CE7']
mov ['[ebp+var_44],', '0EF00h']
movzx ['eax,', '[ebp+var_80]']
imul ['eax,', '0Ch']
movzx ['ecx,', 'byte_8[eax]']
add ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['dword', 'ptr', '[ecx+34h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sar ['ecx,', '1']
sub ['ecx,', '1']
mov ['[ebp+var_98],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_C34']
cmp ['[ebp+var_44],', '0FFh']
ja ['short', 'loc_AE2']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_ADD']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
jmp ['loc_C2F']
cmp ['[ebp+var_44],', '0FFFFh']
jbe ['short', 'loc_B28']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_B28']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jb ['short', 'loc_B98']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_C2F']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_BC6']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_BFB']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_BF9']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_C2F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_CDA']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0FF0000h']
jz ['short', 'loc_C6D']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0FF00h']
jz ['short', 'loc_CA6']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_CE7']
jmp ['loc_19FA']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_5C],', 'ecx']
mov ['[ebp+var_44],', '0FFFFh']
cmp ['[ebp+var_50],', '0A0h']
jg ['loc_F86']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_50]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sar ['ecx,', '1']
sub ['ecx,', '1']
mov ['[ebp+var_A4],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_ECE']
cmp ['[ebp+var_50],', '0FFh']
jg ['short', 'loc_D7C']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_50]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_D77']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
jmp ['loc_EC9']
cmp ['[ebp+var_50],', '0FFFFh']
jle ['short', 'loc_DC2']
mov ['eax,', '[ebp+var_50]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_DC2']
mov ['eax,', '[ebp+var_A4]']
sub ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jb ['short', 'loc_E32']
mov ['eax,', '[ebp+var_50]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_50]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_EC9']
mov ['eax,', '[ebp+var_50]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_E60']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_E95']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_50]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_E93']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_EC9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_50]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_F74']
mov ['eax,', '[ebp+var_50]']
and ['eax,', '0FF0000h']
jz ['short', 'loc_F07']
mov ['eax,', '[ebp+var_50]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+var_50]']
and ['eax,', '0FF00h']
jz ['short', 'loc_F40']
mov ['eax,', '[ebp+var_50]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_50]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_F81']
jmp ['loc_19FA']
jmp ['loc_A45']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_1A8],', 'eax']
cmp ['[ebp+var_1A8],', '200Ch']
jz ['short', 'loc_FA9']
cmp ['[ebp+var_1A8],', '200Dh']
jz ['short', 'loc_FD9']
jmp ['short', 'loc_1002']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FC6']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+2],', 'ax']
mov ['[ebp+var_44],', '0E8h']
jmp ['short', 'loc_FD4']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+2],', 'ax']
jmp ['loc_A45']
jmp ['loc_1414']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FED']
mov ['[ebp+var_44],', '0E9h']
jmp ['short', 'loc_FF4']
mov ['[ebp+var_44],', '0D9h']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+2],', 'ax']
jmp ['loc_1414']
mov ['eax,', '0D7Fh']
sub ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'ax']
cmp ['ecx,', '47Fh']
jg ['loc_140B']
cmp ['[ebp+var_50],', '964h']
jz ['loc_10DE']
cmp ['[ebp+var_50],', '965h']
jz ['loc_10DE']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '900h']
cdq
and ['edx,', '7Fh']
add ['eax,', 'edx']
sar ['eax,', '7']
mov ['[ebp+var_80],', 'ax']
movzx ['eax,', '[ebp+var_80]']
shl ['eax,', '7']
mov ['[ebp+var_74],', 'ax']
movzx ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_68]']
movzx ['edx,', 'word', 'ptr', '[ecx+6]']
cmp ['eax,', 'edx']
jnz ['short', 'loc_106D']
mov ['eax,', '[ebp+var_68]']
movsx ['ecx,', 'byte', 'ptr', '[eax+18h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1099']
mov ['eax,', '[ebp+var_68]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax+6],', 'cx']
movzx ['eax,', '[ebp+var_80]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', 'off_4[eax]']
mov ['[ecx+0Ch],', 'edx']
mov ['[ebp+var_89],', '1']
mov ['eax,', '[ebp+var_68]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax+6]']
cmp ['ecx,', '100h']
jnz ['short', 'loc_10CF']
cmp ['[ebp+var_50],', '0A70h']
jnz ['short', 'loc_10BA']
mov ['[ebp+var_50],', '0A02h']
jmp ['short', 'loc_10CF']
cmp ['[ebp+var_50],', '0A71h']
jnz ['short', 'loc_10CF']
mov ['eax,', '0A71h']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+2],', 'ax']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax+6]']
mov ['edx,', '[ebp+var_50]']
sub ['edx,', 'ecx']
mov ['[ebp+var_50],', 'edx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_50]']
movzx ['ecx,', '_fromUnicodeTable[eax*2]']
mov ['[ebp+var_44],', 'ecx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_50]']
movzx ['ecx,', '_validityTable[eax]']
mov ['edx,', '[ebp+var_68]']
and ['ecx,', '[edx+0Ch]']
jnz ['short', 'loc_111F']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax+6]']
cmp ['ecx,', '300h']
jnz ['short', 'loc_1118']
cmp ['[ebp+var_50],', '931h']
jz ['short', 'loc_111F']
mov ['[ebp+var_44],', '0FFFFh']
movsx ['eax,', '[ebp+var_89]']
test ['eax,', 'eax']
jz ['loc_13E8']
mov ['[ebp+var_B0],', '0']
mov ['[ebp+var_B0],', '0EF00h']
movzx ['eax,', '[ebp+var_80]']
imul ['eax,', '0Ch']
movzx ['ecx,', 'byte_8[eax]']
add ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_B0],', 'ecx']
mov ['[ebp+var_89],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sar ['ecx,', '1']
sub ['ecx,', '1']
mov ['[ebp+var_BC],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_1329']
cmp ['[ebp+var_B0],', '0FFh']
ja ['short', 'loc_11C2']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_11BD']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_BC]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
jmp ['loc_1324']
cmp ['[ebp+var_B0],', '0FFFFh']
jbe ['short', 'loc_120E']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_120E']
mov ['eax,', '[ebp+var_BC]']
sub ['eax,', '1']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_BC]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jb ['short', 'loc_1284']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_1324']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_12B5']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_BC]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_12ED']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_12EB']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_BC]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_1324']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_13DE']
mov ['eax,', '[ebp+var_B0]']
and ['eax,', '0FF0000h']
jz ['short', 'loc_1368']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+var_B0]']
and ['eax,', '0FF00h']
jz ['short', 'loc_13A7']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_13E8']
jmp ['short', 'loc_1414']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax+6]']
cmp ['ecx,', '100h']
jnz ['short', 'loc_140B']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '100h']
cmp ['eax,', '0A71h']
jnz ['short', 'loc_140B']
jmp ['loc_A45']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+2],', 'ax']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax+6]']
cmp ['ecx,', '100h']
jnz ['loc_16CD']
cmp ['[ebp+var_5C],', '0A71h']
jnz ['loc_16CD']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '100h']
push ['eax']
call ['_isPNJConsonant']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_16CD']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['[ecx+2],', 'ax']
mov ['eax,', '[ebp+var_44]']
shl ['eax,', '10h']
or ['eax,', '0E800h']
or ['eax,', '[ebp+var_44]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sar ['ecx,', '1']
sub ['ecx,', '1']
mov ['[ebp+var_C8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_1615']
cmp ['[ebp+var_44],', '0FFh']
ja ['short', 'loc_14C3']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_14BE']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_C8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
jmp ['loc_1610']
cmp ['[ebp+var_44],', '0FFFFh']
jbe ['short', 'loc_1509']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_1509']
mov ['eax,', '[ebp+var_C8]']
sub ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_C8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jb ['short', 'loc_1579']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_1610']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_15A7']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_C8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_15DC']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_15DA']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_C8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_1610']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_16BB']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0FF0000h']
jz ['short', 'loc_164E']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0FF00h']
jz ['short', 'loc_1687']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_16C8']
jmp ['loc_19FA']
jmp ['loc_19F5']
cmp ['[ebp+var_44],', '0FFFFh']
jz ['loc_1951']
cmp ['[ebp+var_44],', '0E8h']
jnz ['short', 'loc_16EE']
mov ['eax,', '[ebp+var_68]']
mov ['cx,', 'word', 'ptr', '[ebp+var_44]']
mov ['[eax+2],', 'cx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sar ['ecx,', '1']
sub ['ecx,', '1']
mov ['[ebp+var_D4],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_1899']
cmp ['[ebp+var_44],', '0FFh']
ja ['short', 'loc_1747']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_1742']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_D4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
jmp ['loc_1894']
cmp ['[ebp+var_44],', '0FFFFh']
jbe ['short', 'loc_178D']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_178D']
mov ['eax,', '[ebp+var_D4]']
sub ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_D4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jb ['short', 'loc_17FD']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_1894']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_182B']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_D4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_1860']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_185E']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_D4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '4']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_1894']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_193F']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0FF0000h']
jz ['short', 'loc_18D2']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0FF00h']
jz ['short', 'loc_190B']
mov ['eax,', '[ebp+var_44]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+4]']
movsx ['ecx,', 'byte', 'ptr', '[ecx+3Fh]']
mov ['[edx+ecx+4Ch],', 'al']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['cl,', '[eax+3Fh]']
add ['cl,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+3Fh]']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ecx+edx+4Ch],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+3Fh]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+3Fh],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_194C']
jmp ['loc_19FA']
jmp ['loc_19F5']
mov ['eax,', '[ebp+var_50]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_19DE']
mov ['eax,', '[ebp+var_50]']
and ['eax,', '400h']
jnz ['short', 'loc_19D3']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_19C8']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['[ebp+var_E0],', 'cx']
movzx ['eax,', '[ebp+var_E0]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_19BD']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_E0]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ah']
jmp ['short', 'loc_19C6']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_19D1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_19DC']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_19E7']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ah']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_50]']
mov ['[ecx+38h],', 'edx']
jmp ['short', 'loc_19FA']
jmp ['loc_A45']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+10h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1A8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_isPNJConsonant	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0A00h']
jl ['short', 'loc_1A50']
cmp ['[ebp+arg_0],', '0A50h']
jl ['short', 'loc_1A56']
xor ['al,', 'al']
jmp ['short', 'loc_1A63']
jmp ['short', 'loc_1A63']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', '(byte_64B-0FDBh)[eax]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_UConverter_toUnicode_ISCII_OFFSETS_LOGIC proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '16Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '5Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_41],', '0']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_98],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_1AF7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+10h]']
jb ['short', 'loc_1AF7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_1B05']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_3314']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '2Ch']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['loc_3190']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_3190']
mov ['[ebp+var_38],', '0FFFFh']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_3180']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax]']
mov ['[ebp+var_41],', 'cl']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0EFh']
jnz ['loc_1C1B']
movzx ['eax,', '[ebp+var_41]']
mov ['ecx,', '4Bh']
sub ['ecx,', 'eax']
movzx ['edx,', 'cl']
cmp ['edx,', '9']
jg ['short', 'loc_1BB4']
movzx ['eax,', '[ebp+var_41]']
and ['eax,', '0Fh']
movzx ['ecx,', '_lookupTable[eax*4]']
shl ['ecx,', '7']
mov ['edx,', '[ebp+var_50]']
mov ['[edx+8],', 'cx']
movzx ['eax,', '[ebp+var_41]']
and ['eax,', '0Fh']
movzx ['ecx,', 'word_48A[eax*4]']
mov ['edx,', '[ebp+var_50]']
mov ['[edx+10h],', 'ecx']
jmp ['short', 'loc_1C06']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '40h']
jnz ['short', 'loc_1BD9']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx+4]']
mov ['[eax+8],', 'dx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+10h],', 'edx']
jmp ['short', 'loc_1C06']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '21h']
jl ['short', 'loc_1BED']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '3Fh']
jg ['short', 'loc_1BED']
jmp ['short', 'loc_1C06']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
jmp ['$CALLBACK$10815']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
jmp ['loc_1B23']
jmp ['loc_204B']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0F0h']
jnz ['loc_1E70']
movzx ['eax,', '[ebp+var_41]']
mov ['ecx,', '0EEh']
sub ['ecx,', 'eax']
movzx ['edx,', 'cl']
cmp ['edx,', '4Dh']
jg ['loc_1E52']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '0BFh']
jz ['short', 'loc_1C5E']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '0B8h']
jnz ['loc_1E40']
movzx ['eax,', '[ebp+var_41]']
sub ['eax,', '0BFh']
neg ['eax']
sbb ['eax,', 'eax']
and ['eax,', '0FFFFFFE2h']
add ['eax,', '970h']
mov ['[ebp+var_38],', 'eax']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_38]']
movzx ['ecx,', '_validityTable[eax]']
mov ['edx,', '[ebp+var_50]']
and ['ecx,', '[edx+10h]']
jz ['loc_1E40']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['loc_1D7F']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0A0h']
jle ['short', 'loc_1CED']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Dh']
jz ['short', 'loc_1CED']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Ch']
jz ['short', 'loc_1CED']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '964h']
jz ['short', 'loc_1CED']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '965h']
jz ['short', 'loc_1CED']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_1D3C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx+2Ch]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_1D3A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_1D75']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_50]']
mov ['ax,', '[eax+2Ch]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_50]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
cmp ['[ebp+var_38],', '0A0h']
jbe ['short', 'loc_1DB9']
cmp ['[ebp+var_38],', '200Dh']
jz ['short', 'loc_1DB9']
cmp ['[ebp+var_38],', '200Ch']
jz ['short', 'loc_1DB9']
cmp ['[ebp+var_38],', '964h']
jz ['short', 'loc_1DB9']
cmp ['[ebp+var_38],', '965h']
jz ['short', 'loc_1DB9']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
add ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_1E05']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_1E03']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_1E3B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['ax,', 'word', 'ptr', '[ebp+var_38]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_1B23']
mov ['[ebp+var_38],', '0FFFFh']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ah']
jmp ['short', 'loc_1E66']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['$CALLBACK$10815']
jmp ['loc_204B']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0D9h']
jnz ['loc_204B']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '0E8h']
jnz ['short', 'loc_1E96']
mov ['[ebp+var_38],', '20h']
jmp ['short', 'loc_1E9D']
mov ['[ebp+var_38],', '200Dh']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['loc_1F84']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0A0h']
jle ['short', 'loc_1EF2']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Dh']
jz ['short', 'loc_1EF2']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Ch']
jz ['short', 'loc_1EF2']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '964h']
jz ['short', 'loc_1EF2']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '965h']
jz ['short', 'loc_1EF2']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_1F41']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx+2Ch]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_1F3F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_1F7A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_50]']
mov ['ax,', '[eax+2Ch]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_50]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
cmp ['[ebp+var_38],', '0A0h']
jbe ['short', 'loc_1FBE']
cmp ['[ebp+var_38],', '200Dh']
jz ['short', 'loc_1FBE']
cmp ['[ebp+var_38],', '200Ch']
jz ['short', 'loc_1FBE']
cmp ['[ebp+var_38],', '964h']
jz ['short', 'loc_1FBE']
cmp ['[ebp+var_38],', '965h']
jz ['short', 'loc_1FBE']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
add ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_200A']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_2008']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_2040']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['ax,', 'word', 'ptr', '[ebp+var_38]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
movzx ['eax,', '[ebp+var_41]']
mov ['[ebp+var_16C],', 'eax']
mov ['ecx,', '[ebp+var_16C]']
sub ['ecx,', '0Ah']
mov ['[ebp+var_16C],', 'ecx']
cmp ['[ebp+var_16C],', '0E6h']
ja ['$LN45']
mov ['edx,', '[ebp+var_16C]']
movzx ['eax,', 'ds:$LN177[edx]']
jmp ['ds:$LN178[eax*4]']
movzx ['ax,', '[ebp+var_41]']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFh']
jz ['loc_2260']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['loc_2189']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0A0h']
jle ['short', 'loc_20F7']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Dh']
jz ['short', 'loc_20F7']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Ch']
jz ['short', 'loc_20F7']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '964h']
jz ['short', 'loc_20F7']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '965h']
jz ['short', 'loc_20F7']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_2146']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx+2Ch]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_2144']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_217F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_50]']
mov ['ax,', '[eax+2Ch]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_50]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '0A0h']
jle ['short', 'loc_21D1']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '200Dh']
jz ['short', 'loc_21D1']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '200Ch']
jz ['short', 'loc_21D1']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '964h']
jz ['short', 'loc_21D1']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '965h']
jz ['short', 'loc_21D1']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+var_5C]']
add ['ecx,', '[edx]']
mov ['eax,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_221F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_5C]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_221D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_2257']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_5C]']
mov ['ax,', '[eax]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
jmp ['loc_1B23']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0EAh']
jnz ['short', 'loc_2290']
mov ['[ebp+var_38],', '965h']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
jmp ['short', 'loc_22E9']
movzx ['eax,', '[ebp+var_41]']
movzx ['ecx,', '_toUnicodeTable[eax*2]']
mov ['[ebp+var_38],', 'ecx']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '0A0h']
jle ['short', 'loc_22DE']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '7Fh']
movzx ['ecx,', '_validityTable[eax]']
mov ['edx,', '[ebp+var_50]']
and ['ecx,', '[edx+10h]']
jnz ['short', 'loc_22DE']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '300h']
jnz ['short', 'loc_22D7']
cmp ['[ebp+var_38],', '931h']
jz ['short', 'loc_22DE']
mov ['[ebp+var_38],', '0FFFFh']
movzx ['ax,', '[ebp+var_41]']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
jmp ['loc_2BCE']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0E8h']
jnz ['short', 'loc_2310']
mov ['[ebp+var_38],', '200Ch']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
jmp ['short', 'loc_2369']
movzx ['eax,', '[ebp+var_41]']
movzx ['ecx,', '_toUnicodeTable[eax*2]']
mov ['[ebp+var_38],', 'ecx']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '0A0h']
jle ['short', 'loc_235E']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '7Fh']
movzx ['ecx,', '_validityTable[eax]']
mov ['edx,', '[ebp+var_50]']
and ['ecx,', '[edx+10h]']
jnz ['short', 'loc_235E']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '300h']
jnz ['short', 'loc_2357']
cmp ['[ebp+var_38],', '931h']
jz ['short', 'loc_235E']
mov ['[ebp+var_38],', '0FFFFh']
movzx ['ax,', '[ebp+var_41]']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
jmp ['loc_2BCE']
mov ['eax,', '[ebp+var_50]']
mov ['byte', 'ptr', '[eax+19h],', '1']
movzx ['eax,', '[ebp+var_41]']
movzx ['ecx,', '_toUnicodeTable[eax*2]']
mov ['[ebp+var_38],', 'ecx']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '0A0h']
jle ['short', 'loc_23C3']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '7Fh']
movzx ['ecx,', '_validityTable[eax]']
mov ['edx,', '[ebp+var_50]']
and ['ecx,', '[edx+10h]']
jnz ['short', 'loc_23C3']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '300h']
jnz ['short', 'loc_23BC']
cmp ['[ebp+var_38],', '931h']
jz ['short', 'loc_23C3']
mov ['[ebp+var_38],', '0FFFFh']
movzx ['ax,', '[ebp+var_41]']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
jmp ['loc_2BCE']
mov ['[ebp+var_8C],', '1']
mov ['[ebp+var_7D],', '0']
jmp ['short', 'loc_23F2']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
movzx ['eax,', '_vowelSignESpecialCases']
cmp ['[ebp+var_8C],', 'eax']
jge ['short', 'loc_2462']
cmp ['[ebp+var_8C],', '2']
jb ['short', 'loc_2431']
mov ['eax,', 'ds:?__LINE__Var@?1??UConverter_toUnicode_ISCII_OFFSETS_LOGIC@@9@9@71c455f6']
add ['eax,', '0A4h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@KEDHFIAL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1IG@NPLMGFDC@?$AAi?$AA?$DM?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAw?$AAe?$AAl?$AAS?$AAi?$AAg?$AAn?$AAE?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AAC?$AAa?$AAs?$AAe?$AAs?$AA?$CJ@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8C]']
movzx ['ecx,', '_vowelSignESpecialCases[eax*4]']
mov ['edx,', '[ebp+var_74]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_2460']
mov ['eax,', '[ebp+var_8C]']
movzx ['ecx,', 'word_442[eax*4]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_7D],', '1']
jmp ['short', 'loc_2462']
jmp ['short', 'loc_23E3']
movsx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jz ['short', 'loc_2496']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_38]']
movzx ['ecx,', '_validityTable[eax]']
mov ['edx,', '[ebp+var_50]']
and ['ecx,', '[edx+10h]']
jz ['short', 'loc_2496']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
jmp ['loc_2BCE']
movzx ['eax,', '[ebp+var_41]']
movzx ['ecx,', '_toUnicodeTable[eax*2]']
mov ['[ebp+var_38],', 'ecx']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '0A0h']
jle ['short', 'loc_24E4']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '7Fh']
movzx ['ecx,', '_validityTable[eax]']
mov ['edx,', '[ebp+var_50]']
and ['ecx,', '[edx+10h]']
jnz ['short', 'loc_24E4']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '300h']
jnz ['short', 'loc_24DD']
cmp ['[ebp+var_38],', '931h']
jz ['short', 'loc_24E4']
mov ['[ebp+var_38],', '0FFFFh']
movzx ['ax,', '[ebp+var_41]']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
jmp ['loc_2BCE']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0E8h']
jnz ['short', 'loc_251E']
mov ['[ebp+var_38],', '200Dh']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
jmp ['loc_2BCE']
jmp ['$LN45']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '100h']
jnz ['loc_2922']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0C0h']
jnz ['loc_2922']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['loc_262A']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0A0h']
jle ['short', 'loc_2598']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Dh']
jz ['short', 'loc_2598']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Ch']
jz ['short', 'loc_2598']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '964h']
jz ['short', 'loc_2598']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '965h']
jz ['short', 'loc_2598']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_25E7']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx+2Ch]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_25E5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_2620']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_50]']
mov ['ax,', '[eax+2Ch]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_50]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['[ebp+var_38],', '0A5Ch']
cmp ['[ebp+var_38],', '0A0h']
jbe ['short', 'loc_2664']
cmp ['[ebp+var_38],', '200Dh']
jz ['short', 'loc_2664']
cmp ['[ebp+var_38],', '200Ch']
jz ['short', 'loc_2664']
cmp ['[ebp+var_38],', '964h']
jz ['short', 'loc_2664']
cmp ['[ebp+var_38],', '965h']
jz ['short', 'loc_2664']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_26B0']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_26AE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_26E6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['ax,', 'word', 'ptr', '[ebp+var_38]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['loc_28A8']
mov ['[ebp+var_38],', '0A4Dh']
cmp ['[ebp+var_38],', '0A0h']
jbe ['short', 'loc_272C']
cmp ['[ebp+var_38],', '200Dh']
jz ['short', 'loc_272C']
cmp ['[ebp+var_38],', '200Ch']
jz ['short', 'loc_272C']
cmp ['[ebp+var_38],', '964h']
jz ['short', 'loc_272C']
cmp ['[ebp+var_38],', '965h']
jz ['short', 'loc_272C']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_2778']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_2776']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_27AE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['ax,', 'word', 'ptr', '[ebp+var_38]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['loc_2878']
mov ['[ebp+var_38],', '0A39h']
cmp ['[ebp+var_38],', '0A0h']
jbe ['short', 'loc_27F4']
cmp ['[ebp+var_38],', '200Dh']
jz ['short', 'loc_27F4']
cmp ['[ebp+var_38],', '200Ch']
jz ['short', 'loc_27F4']
cmp ['[ebp+var_38],', '964h']
jz ['short', 'loc_27F4']
cmp ['[ebp+var_38],', '965h']
jz ['short', 'loc_27F4']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_2840']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_283E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_2876']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['ax,', 'word', 'ptr', '[ebp+var_38]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_28A6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '0A39h']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
jmp ['short', 'loc_2904']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '0A4Dh']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '0A39h']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_50]']
mov ['[ecx],', 'ax']
jmp ['loc_1B23']
jmp ['$LN45']
mov ['[ebp+var_8C],', '1']
mov ['[ebp+var_7D],', '0']
jmp ['short', 'loc_2941']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
movzx ['eax,', '_nuktaSpecialCases']
cmp ['[ebp+var_8C],', 'eax']
jge ['short', 'loc_2981']
mov ['eax,', '[ebp+var_8C]']
movzx ['ecx,', '_nuktaSpecialCases[eax*4]']
mov ['edx,', '[ebp+var_74]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_297F']
mov ['eax,', '[ebp+var_8C]']
movzx ['ecx,', 'word_44A[eax*4]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_7D],', '1']
jmp ['short', 'loc_2981']
jmp ['short', 'loc_2932']
movsx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jz ['$LN45']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_38]']
movzx ['ecx,', '_validityTable[eax]']
mov ['edx,', '[ebp+var_50]']
and ['ecx,', '[edx+10h]']
jz ['$LN45']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '100h']
jnz ['loc_2B73']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['loc_2AB2']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0A0h']
jle ['short', 'loc_2A20']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Dh']
jz ['short', 'loc_2A20']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Ch']
jz ['short', 'loc_2A20']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '964h']
jz ['short', 'loc_2A20']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '965h']
jz ['short', 'loc_2A20']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_2A6F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx+2Ch]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_2A6D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_2AA8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_50]']
mov ['ax,', '[eax+2Ch]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_50]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
cmp ['[ebp+var_38],', '0A0h']
jbe ['short', 'loc_2AEC']
cmp ['[ebp+var_38],', '200Dh']
jz ['short', 'loc_2AEC']
cmp ['[ebp+var_38],', '200Ch']
jz ['short', 'loc_2AEC']
cmp ['[ebp+var_38],', '964h']
jz ['short', 'loc_2AEC']
cmp ['[ebp+var_38],', '965h']
jz ['short', 'loc_2AEC']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
add ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_2B38']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+var_38]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_2B36']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_2B6E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['ax,', 'word', 'ptr', '[ebp+var_38]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_1B23']
jmp ['short', 'loc_2BCE']
movzx ['eax,', '[ebp+var_41]']
movzx ['ecx,', '_toUnicodeTable[eax*2]']
mov ['[ebp+var_38],', 'ecx']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '0A0h']
jle ['short', 'loc_2BC3']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '7Fh']
movzx ['ecx,', '_validityTable[eax]']
mov ['edx,', '[ebp+var_50]']
and ['ecx,', '[edx+10h]']
jnz ['short', 'loc_2BC3']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '300h']
jnz ['short', 'loc_2BBC']
cmp ['[ebp+var_38],', '931h']
jz ['short', 'loc_2BC3']
mov ['[ebp+var_38],', '0FFFFh']
movzx ['ax,', '[ebp+var_41]']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFh']
jz ['loc_311C']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '100h']
jnz ['loc_2DF1']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['loc_2DF1']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
call ['_isPNJConsonant']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2DF1']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax]']
add ['ecx,', '100h']
cmp ['ecx,', '0A4Dh']
jnz ['loc_2DF1']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '100h']
mov ['ecx,', '[ebp+var_50]']
cmp ['eax,', '[ecx+2Ch]']
jnz ['loc_2DF1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '3']
mov ['[ebp+var_98],', 'ecx']
mov ['[ebp+var_68],', '0A71h']
cmp ['[ebp+var_68],', '0A0h']
jle ['short', 'loc_2C8E']
cmp ['[ebp+var_68],', '200Dh']
jz ['short', 'loc_2C8E']
cmp ['[ebp+var_68],', '200Ch']
jz ['short', 'loc_2C8E']
cmp ['[ebp+var_68],', '964h']
jz ['short', 'loc_2C8E']
cmp ['[ebp+var_68],', '965h']
jz ['short', 'loc_2C8E']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_2CD4']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', 'word', 'ptr', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_2CD2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_98]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+18h],', 'ecx']
jmp ['short', 'loc_2D0A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['ax,', 'word', 'ptr', '[ebp+var_68]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0A0h']
jle ['short', 'loc_2D52']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Dh']
jz ['short', 'loc_2D52']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Ch']
jz ['short', 'loc_2D52']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '964h']
jz ['short', 'loc_2D52']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '965h']
jz ['short', 'loc_2D52']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_2D9B']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx+2Ch]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_2D99']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_98]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+18h],', 'ecx']
jmp ['short', 'loc_2DD4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_50]']
mov ['ax,', '[eax+2Ch]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_50]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
jmp ['loc_1B23']
jmp ['loc_3113']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['loc_2ED8']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0A0h']
jle ['short', 'loc_2E46']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Dh']
jz ['short', 'loc_2E46']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '200Ch']
jz ['short', 'loc_2E46']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '964h']
jz ['short', 'loc_2E46']
mov ['eax,', '[ebp+var_50]']
cmp ['dword', 'ptr', '[eax+2Ch],', '965h']
jz ['short', 'loc_2E46']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_2E95']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx+2Ch]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_2E93']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_2ECE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_50]']
mov ['ax,', '[eax+2Ch]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_50]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '100h']
jnz ['loc_2FF6']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '100h']
cmp ['eax,', '0A02h']
jnz ['loc_2FF6']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax]']
add ['ecx,', '100h']
push ['ecx']
call ['_isPNJBindiTippi']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2FF6']
mov ['[ebp+var_38],', '970h']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '0A0h']
jle ['short', 'loc_2F6B']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '200Dh']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '200Ch']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '964h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '965h']
jz ['short', 'loc_2F6B']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax]']
add ['ecx,', '100h']
mov ['edx,', '[ebp+var_5C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_2FB9']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_5C]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_2FB7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_2FF1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_5C]']
mov ['ax,', '[eax]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_3113']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '100h']
jnz ['short', 'loc_3045']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '100h']
cmp ['eax,', '0A4Dh']
jnz ['short', 'loc_3045']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax]']
add ['ecx,', '100h']
push ['ecx']
call ['_isPNJConsonant']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3045']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax]']
add ['ecx,', '100h']
mov ['edx,', '[ebp+var_50]']
mov ['[edx+2Ch],', 'ecx']
jmp ['loc_3113']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '0A0h']
jle ['short', 'loc_308D']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '200Dh']
jz ['short', 'loc_308D']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '200Ch']
jz ['short', 'loc_308D']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '964h']
jz ['short', 'loc_308D']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '965h']
jz ['short', 'loc_308D']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+var_5C]']
add ['ecx,', '[edx]']
mov ['eax,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_30DB']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_5C]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_30D9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_3113']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_5C]']
mov ['ax,', '[eax]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
cmp ['[ebp+var_38],', '0FFFFh']
jz ['short', 'loc_315D']
movzx ['eax,', 'word', 'ptr', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_50]']
movsx ['ecx,', 'byte', 'ptr', '[eax+19h]']
cmp ['ecx,', '1']
jnz ['short', 'loc_315B']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx+4]']
mov ['[eax+8],', 'dx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['byte', 'ptr', '[eax+19h],', '0']
jmp ['short', 'loc_317E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ah']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['dl,', '[ebp+var_41]']
mov ['[ecx+25h],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['byte', 'ptr', '[ecx+24h],', '1']
jmp ['short', 'loc_3190']
jmp ['short', 'loc_318B']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_3190']
jmp ['loc_1B23']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['loc_3302']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['loc_3302']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jnz ['loc_3302']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_A4],', 'ecx']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0EFh']
jz ['short', 'loc_31ED']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0F0h']
jz ['short', 'loc_31ED']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0D9h']
jnz ['short', 'loc_3212']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_74]']
mov ['dl,', '[ecx]']
mov ['[eax+25h],', 'dl']
mov ['eax,', '[ebp+var_A4]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_74]']
mov ['[ecx],', 'ax']
jmp ['short', 'loc_321C']
mov ['eax,', '[ebp+var_A4]']
mov ['byte', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '0FFFFh']
jz ['loc_3302']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '0A0h']
jle ['short', 'loc_3273']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '200Dh']
jz ['short', 'loc_3273']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '200Ch']
jz ['short', 'loc_3273']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '964h']
jz ['short', 'loc_3273']
mov ['eax,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[eax],', '965h']
jz ['short', 'loc_3273']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+var_5C]']
add ['ecx,', '[edx]']
mov ['eax,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_32C1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_5C]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_32BF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_32F9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
movsx ['edx,', 'byte', 'ptr', '[eax+41h]']
mov ['eax,', '[ebp+var_5C]']
mov ['ax,', '[eax]']
mov ['[ecx+edx*2+74h],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['al,', '[edx+41h]']
add ['al,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[edx+41h],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax],', '0FFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '16Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN87,', 'offset', '$LN113,', 'offset', '$LN45']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '6,', '1,', '6,', '6,', '6,', '6,', '6,', '6,', '2,', '6']
db ['6,', '6,', '6,', '6,', '6,', '6,', '3,', '4,', '5,', '6,', '6,', '6,', '6,', '1,', '1']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1IG@NPLMGFDC@?$AAi?$AA?$DM?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAw?$AAe?$AAl?$AAS?$AAi?$AAg?$AAn?$AAE?$AAS?$AAp?$AAe?$AAc?$AAi?$AAa?$AAl?$AAC?$AAa?$AAs?$AAe?$AAs?$AA?$CJ@']
unicode ['0,', '<i>']
dw ['3Ch']
unicode ['0,', '<sizeof(vowelSignESpecialCases)/sizeof(vowelSignESpecialCa>']
unicode ['0,', '<ses[0])>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FK@KEDHFIAL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\ucnvisci.c>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??UConverter_toUnicode_ISCII_OFFSETS_LOGIC@@9@9@71c455f6']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_isPNJBindiTippi proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0A00h']
jl ['short', 'loc_3544']
cmp ['[ebp+arg_0],', '0A50h']
jl ['short', 'loc_354A']
xor ['al,', 'al']
jmp ['short', 'loc_3556']
jmp ['short', 'loc_3556']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', '(byte_64B-0FDBh)[eax]']
sar ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__ISCII_SafeClone proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '134h']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_3591']
xor ['eax,', 'eax']
jmp ['short', 'loc_35EF']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_35A5']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
xor ['eax,', 'eax']
jmp ['short', 'loc_35EF']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['30h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '104h']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '104h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+22h],', '1']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__ISCIIGetUnicodeSet proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0A0h']
push ['0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_3655']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '8']
jg ['short', 'loc_36D5']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['cl,', 'byte', 'ptr', 'off_4[eax]']
mov ['[ebp+var_1D],', 'cl']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_367C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '80h']
jge ['short', 'loc_36D0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', '_validityTable[eax]']
movzx ['edx,', '[ebp+var_1D]']
and ['ecx,', 'edx']
jnz ['short', 'loc_36A3']
cmp ['[ebp+var_14],', '6']
jnz ['short', 'loc_36CE']
cmp ['[ebp+var_8],', '31h']
jnz ['short', 'loc_36CE']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '7']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+900h]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_3673']
jmp ['loc_364C']
mov ['esi,', 'esp']
push ['964h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['965h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['200Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['200Dh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_uprv_free_56:near']
extrn ['_strlen:near']
extrn ['_strcpy:near']
extrn ['_uprv_malloc_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp___wassert:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
end

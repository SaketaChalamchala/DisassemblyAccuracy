endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??2UMemory@icu_56@@SAPAXIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3UMemory@icu_56@@SAXPAX0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UObject@icu_56@@6B@']
public ['??_7UObject@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4UObject@icu_56@@6B@']
dd ['offset', '??_R0?AVUObject@icu_56@@@8']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_343']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_34D']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UObject@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUObject@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3D3']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUObject@icu_56@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_44D']
push ['offset', '??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_445']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_46C']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_469']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFunctor@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFunctor@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFunctor@icu_56@@6B@']
public ['??_7UnicodeFunctor@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFunctor@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeFunctor@icu_56@@@8']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFunctor@icu_56@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFunctor@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UnicodeFunctor@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFunctor@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_63B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_6B5']
push ['offset', '??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6AD']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_6D4']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6D1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeMatcher@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeMatcher@icu_56@@6B@']
public ['??_7UnicodeMatcher@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeMatcher@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeMatcher@icu_56@@@8']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeMatcher@icu_56@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3UnicodeMatcher@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_84F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_8C9']
push ['offset', '??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_8C1']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_8E8']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_8E5']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_V@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFilter@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UnicodeFunctor@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??0UnicodeMatcher@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
public ['??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
dd ['offset', '?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
public ['??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFilter@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFilter@icu_56@@8']
dd ['1,', '5']
dd ['offset', '??_R2UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
align ['10h']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
dd ['4,', '0']
dd ['offset', '??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_ABB']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_AC5']
mov ['[ebp+var_D0],', '0']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B47']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_B51']
mov ['[ebp+var_D0],', '0']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeFilter@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_BBB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFilter@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_C35']
push ['offset', '??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C2D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_C54']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C51']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4Replaceable@icu_56@@6B@']
public ['??_7Replaceable@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?hasMetaData@Replaceable@icu_56@@UBECXZ']
dd ['offset', '?clone@Replaceable@icu_56@@UBEPAV12@XZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4Replaceable@icu_56@@6B@']
dd ['offset', '??_R0?AVReplaceable@icu_56@@@8']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVReplaceable@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3Replaceable@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Replaceable@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_DE7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_E61']
push ['offset', '??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_E59']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_E80']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_E7D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@IAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@Replaceable@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@Replaceable@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?char32At@Replaceable@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@PBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@StringPiece@icu_56@@QBEPBDXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@StringPiece@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@StringPiece@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@StringPiece@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clear@StringPiece@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@StringPiece@icu_56@@QAEXPBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_prefix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_1251']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_1235']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_suffix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_12AB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jg ['short', 'loc_12A1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_12AB']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ByteSink@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ByteSink@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4ByteSink@icu_56@@6B@']
public ['??_7ByteSink@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z']
dd ['offset', '?Flush@ByteSink@icu_56@@UAEXXZ']
assume ['cs:_rdata$r']
public ['??_R4ByteSink@icu_56@@6B@']
dd ['offset', '??_R0?AVByteSink@icu_56@@@8']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVByteSink@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3ByteSink@icu_56@@8']
dd ['2']
dd ['offset', '??_R2ByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_143B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_14B5']
push ['offset', '??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_14AD']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_14D4']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_14D1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1643']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_16BD']
push ['offset', '??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['40h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_16B5']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_16DC']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_16D9']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_172A']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1746']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx],', 'eax']
jle ['short', 'loc_1746']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_179D']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_17AF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_14]']
jle ['short', 'loc_17AF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_17C2']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_17DE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['[edx],', 'ecx']
jle ['short', 'loc_17DE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1831']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_183D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1889']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_1895']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeString@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0Replaceable@icu_56@@IAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeString@icu_56@@6B@']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeString@icu_56@@6B@']
public ['??_7UnicodeString@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ']
dd ['offset', '?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z']
dd ['offset', '?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z']
dd ['offset', '?copy@UnicodeString@icu_56@@UAEXHHH@Z']
dd ['offset', '?hasMetaData@UnicodeString@icu_56@@UBECXZ']
dd ['offset', '?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ']
dd ['offset', '?getLength@UnicodeString@icu_56@@MBEHXZ']
dd ['offset', '?getCharAt@UnicodeString@icu_56@@MBE_WH@Z']
dd ['offset', '?getChar32At@UnicodeString@icu_56@@MBEHH@Z']
assume ['cs:_rdata$r']
public ['??_R4UnicodeString@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeString@icu_56@@@8']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeString@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeString@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UnicodeString@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeString@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeString@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasShortLength@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getShortLength@UnicodeString@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
sar ['eax,', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasShortLength@UnicodeString@icu_56@@ABECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1A4E']
mov ['ecx,', '[ebp+var_8]']
call ['?getShortLength@UnicodeString@icu_56@@ABEHXZ']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_1A5A']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1AAF']
mov ['[ebp+var_D0],', '1Dh']
jmp ['short', 'loc_1ABB']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hashCode@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doHashCode@UnicodeString@icu_56@@ABEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBufferWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '19h']
jnz ['short', 'loc_1BC5']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+4]']
and ['eax,', '4']
jz ['short', 'loc_1BBC']
mov ['ecx,', '[ebp+var_8]']
call ['?refCount@UnicodeString@icu_56@@ABEHXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_1BC5']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_1BCC']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
jz ['short', 'loc_1C1D']
xor ['eax,', 'eax']
jmp ['short', 'loc_1C39']
jmp ['short', 'loc_1C39']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1C33']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '6']
jmp ['short', 'loc_1C39']
jmp ['short', 'loc_1C39']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1C86']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_1CB7']
jmp ['short', 'loc_1CB7']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1D0E']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
jmp ['short', 'loc_1D68']
jmp ['short', 'loc_1D68']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1D5B']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_1D5B']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1D5B']
mov ['[ebp+var_E5],', '1']
jmp ['short', 'loc_1D62']
mov ['[ebp+var_E5],', '0']
mov ['al,', '[ebp+var_E5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UnicodeString@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??OUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??MUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??PUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??NUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECPB_WH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2212']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_2243']
jmp ['short', 'loc_2243']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_250E']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_2543']
jmp ['short', 'loc_2543']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_284F']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_284F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_2852']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_W@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_2D77']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_2D77']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_2D7A']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_31B4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_3224']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['esi,', 'eax']
push ['esi']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_3384']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_3402']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
neg ['ecx']
sbb ['ecx,', 'ecx']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_D4],', '0']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_39F3']
mov ['ecx,', '[ebp+var_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['ax,', '[eax+ecx*2]']
jmp ['short', 'loc_39F8']
jmp ['short', 'loc_39F8']
mov ['eax,', '0FFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@UnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AUnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
sar ['ecx,', '5']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setZeroLength@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setShortLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+arg_0]']
shl ['edx,', '5']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '3FFh']
jg ['short', 'loc_3B9A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setShortLength@UnicodeString@icu_56@@AAEXH@Z']
jmp ['short', 'loc_3BB7']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
or ['ecx,', '0FFE0h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToEmpty@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_43CC']
mov ['ecx,', '[ebp+var_8]']
call ['?setToEmpty@UnicodeString@icu_56@@AAEXXZ']
jmp ['short', 'loc_43D4']
mov ['ecx,', '[ebp+var_8]']
call ['?setZeroLength@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jg ['short', 'loc_4428']
cmp ['[ebp+arg_4],', '7FFFFFFFh']
jnz ['short', 'loc_4428']
mov ['ecx,', '[ebp+var_8]']
call ['?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
jmp ['short', 'loc_443E']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?truncate@UnicodeString@icu_56@@QAECH@Z']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?truncate@UnicodeString@icu_56@@QAECH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_454A']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_454A']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
xor ['al,', 'al']
jmp ['short', 'loc_456B']
jmp ['short', 'loc_456B']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_4569']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['al,', '1']
jmp ['short', 'loc_456B']
jmp ['short', 'loc_456B']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UnicodeSet@icu_56@@QBECABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isFrozen@UnicodeSet@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_46B6']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+2Ch],', '0']
jnz ['short', 'loc_46B6']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_46BD']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECHH@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@UnicodeSet@icu_56@@QBECXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[eax+30h]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_48E1']
mov ['[ebp+arg_4],', '0']
jmp ['short', 'loc_48EF']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_48EF']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
add ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_4969']
mov ['[ebp+arg_4],', '0']
jmp ['short', 'loc_4977']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_4977']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_12C],', '0']
lea ['ecx,', '[ebp+var_60]']
call ['??0UnicodeString@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0UnicodeString@icu_56@@QAE@$$QAV01@@Z']
mov ['ecx,', '[ebp+var_12C]']
or ['ecx,', '1']
mov ['[ebp+var_12C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_60]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
dd ['offset', '$LN8']
dd ['offset', '$LN6']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$0	proc near
lea ['ecx,', '[ebp-60h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$1	proc near
mov ['eax,', '[ebp-12Ch]']
and ['eax,', '1']
jz ['$LN5']
and ['dword', 'ptr', '[ebp-12Ch],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
retn
endp
__ehhandler$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-134h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$1']
align ['8']
dd ['offset', '__unwindfunclet$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?normalize@Normalizer2@icu_56@@QBE?AVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Normalizer2@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Normalizer2@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4Normalizer2@icu_56@@6B@']
public ['??_7Normalizer2@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?getRawDecomposition@Normalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z']
dd ['offset', '?composePair@Normalizer2@icu_56@@UBEHHH@Z']
dd ['offset', '?getCombiningClass@Normalizer2@icu_56@@UBEEH@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4Normalizer2@icu_56@@6B@']
dd ['offset', '??_R0?AVNormalizer2@icu_56@@@8']
dd ['offset', '??_R3Normalizer2@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVNormalizer2@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3Normalizer2@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Normalizer2@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Normalizer2@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Normalizer2@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Normalizer2@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Normalizer2@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Normalizer2@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Normalizer2@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GNormalizer2@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1Normalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4D0B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ENormalizer2@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_4D85']
push ['offset', '??1Normalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4D7D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_4DA4']
mov ['ecx,', '[ebp+var_8]']
call ['??1Normalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4DA1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FilteredNormalizer2@icu_56@@QAE@ABVNormalizer2@1@ABVUnicodeSet@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0Normalizer2@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FilteredNormalizer2@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4FilteredNormalizer2@icu_56@@6B@']
public ['??_7FilteredNormalizer2@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?normalize@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z']
dd ['offset', '?normalizeSecondAndAppend@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z']
dd ['offset', '?append@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z']
dd ['offset', '?getDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z']
dd ['offset', '?getRawDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z']
dd ['offset', '?composePair@FilteredNormalizer2@icu_56@@UBEHHH@Z']
dd ['offset', '?getCombiningClass@FilteredNormalizer2@icu_56@@UBEEH@Z']
dd ['offset', '?isNormalized@FilteredNormalizer2@icu_56@@UBECABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?quickCheck@FilteredNormalizer2@icu_56@@UBE?AW4UNormalizationCheckResult@@ABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?spanQuickCheckYes@FilteredNormalizer2@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '?hasBoundaryBefore@FilteredNormalizer2@icu_56@@UBECH@Z']
dd ['offset', '?hasBoundaryAfter@FilteredNormalizer2@icu_56@@UBECH@Z']
dd ['offset', '?isInert@FilteredNormalizer2@icu_56@@UBECH@Z']
assume ['cs:_rdata$r']
public ['??_R4FilteredNormalizer2@icu_56@@6B@']
dd ['offset', '??_R0?AVFilteredNormalizer2@icu_56@@@8']
dd ['offset', '??_R3FilteredNormalizer2@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVFilteredNormalizer2@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3FilteredNormalizer2@icu_56@@8']
dd ['4']
dd ['offset', '??_R2FilteredNormalizer2@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2FilteredNormalizer2@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Normalizer2@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@FilteredNormalizer2@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3FilteredNormalizer2@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0FilteredNormalizer2@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0Normalizer2@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7FilteredNormalizer2@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GFilteredNormalizer2@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1FilteredNormalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4F87']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EFilteredNormalizer2@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_5001']
push ['offset', '??1FilteredNormalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['0Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4FF9']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_5020']
mov ['ecx,', '[ebp+var_8]']
call ['??1FilteredNormalizer2@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_501D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_FMutex@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['??0Mutex@icu_56@@QAE@PAUUMutex@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Mutex@icu_56@@QAE@PAUUMutex@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_umtx_lock_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1Mutex@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_umtx_unlock_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isHangul@Hangul@icu_56@@SACH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0AC00h']
jl ['short', 'loc_5151']
cmp ['[ebp+arg_0],', '0D7A4h']
jge ['short', 'loc_5151']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_5158']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isHangulWithoutJamoT@Hangul@icu_56@@SAC_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
sub ['eax,', '0AC00h']
mov ['[ebp+arg_0],', 'ax']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '2BA4h']
jge ['short', 'loc_51B7']
movzx ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '1Ch']
idiv ['ecx']
test ['edx,', 'edx']
jnz ['short', 'loc_51B7']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_51BE']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isJamoL@Hangul@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1100h']
cmp ['eax,', '13h']
setb ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isJamoV@Hangul@icu_56@@SACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1161h']
cmp ['eax,', '15h']
setb ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?decompose@Hangul@icu_56@@SAHHQA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '0AC00h']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '1Ch']
idiv ['ecx']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '1Ch']
idiv ['ecx']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '15h']
idiv ['ecx']
add ['eax,', '1100h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ax']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '15h']
idiv ['ecx']
add ['edx,', '1161h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+2],', 'dx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_52B6']
mov ['eax,', '2']
jmp ['short', 'loc_52CA']
jmp ['short', 'loc_52CA']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '11A7h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'ax']
mov ['eax,', '3']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRawDecomposition@Hangul@icu_56@@SAXHQA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '0AC00h']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '1Ch']
idiv ['ecx']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_5355']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '1Ch']
idiv ['ecx']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '15h']
idiv ['ecx']
add ['eax,', '1100h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ax']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['ecx,', '15h']
idiv ['ecx']
add ['edx,', '1161h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+2],', 'dx']
jmp ['short', 'loc_5370']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '11A7h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+2],', 'ax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Hangul@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ReorderingBuffer@icu_56@@QAE@ABVNormalizer2Impl@1@AAVUnicodeString@1@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1ReorderingBuffer@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_545E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx+8]']
sar ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@ReorderingBuffer@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+10h]']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@ReorderingBuffer@icu_56@@QBEHXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
sub ['eax,', '[ecx+8]']
sar ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStart@ReorderingBuffer@icu_56@@QAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLimit@ReorderingBuffer@icu_56@@QAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLastCC@ReorderingBuffer@icu_56@@QBEEXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+18h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setLastChar@ReorderingBuffer@icu_56@@QAEX_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['dx,', '[ebp+arg_0]']
mov ['[ecx-2],', 'dx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@ReorderingBuffer@icu_56@@QAECHEAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0FFFFh']
jg ['short', 'loc_55FE']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', 'word', 'ptr', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?appendBMP@ReorderingBuffer@icu_56@@QAEC_WEAAW4UErrorCode@@@Z']
mov ['[ebp+var_CD],', 'al']
jmp ['short', 'loc_5619']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?appendSupplementary@ReorderingBuffer@icu_56@@AAECHEAAW4UErrorCode@@@Z']
mov ['[ebp+var_CD],', 'al']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendBMP@ReorderingBuffer@icu_56@@QAEC_WEAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_567D']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?resize@ReorderingBuffer@icu_56@@AAECHAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_567D']
xor ['al,', 'al']
jmp ['short', 'loc_56F3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
movzx ['edx,', '[ebp+arg_4]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_5694']
movzx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jnz ['short', 'loc_56D0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['dx,', '[ebp+arg_0]']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+18h],', 'cl']
movzx ['eax,', '[ebp+arg_4]']
cmp ['eax,', '1']
jg ['short', 'loc_56CE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+0Ch],', 'edx']
jmp ['short', 'loc_56E2']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?insert@ReorderingBuffer@icu_56@@AAEXHE@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+14h],', 'ecx']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setReorderingLimit@ReorderingBuffer@icu_56@@QAEXPA_W@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '[ebp+arg_0]']
sar ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+14h]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+18h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?copyReorderableSuffixTo@ReorderingBuffer@icu_56@@QBEXAAVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx+0Ch]']
sar ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?writeCodePoint@ReorderingBuffer@icu_56@@CAXPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0FFFFh']
jg ['short', 'loc_57F3']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', 'word', 'ptr', '[ebp+arg_4]']
mov ['[eax],', 'cx']
jmp ['short', 'loc_5818']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+2],', 'ax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setIterator@ReorderingBuffer@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+1Ch],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Normalizer2Impl@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0Normalizer2Impl@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Normalizer2Impl@icu_56@@6B@']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+1B0h],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1A8h']
call ['?reset@UInitOnce@icu_56@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0Normalizer2Impl@icu_56@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UObject@icu_56@@UAE@XZ']
endp
__ehhandler$??0Normalizer2Impl@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0Normalizer2Impl@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4Normalizer2Impl@icu_56@@6B@']
public ['??_7Normalizer2Impl@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0Normalizer2Impl@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??0Normalizer2Impl@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4Normalizer2Impl@icu_56@@6B@']
dd ['offset', '??_R0?AVNormalizer2Impl@icu_56@@@8']
dd ['offset', '??_R3Normalizer2Impl@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVNormalizer2Impl@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3Normalizer2Impl@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Normalizer2Impl@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Normalizer2Impl@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Normalizer2Impl@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Normalizer2Impl@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reset@UInitOnce@icu_56@@QAEXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getNormTrie@Normalizer2Impl@icu_56@@QBEPBUUTrie2@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+18h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0D800h']
jnb ['short', 'loc_5A8E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '5']
mov ['eax,', '[ecx]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['edx,', '[ebp+arg_0]']
and ['edx,', '1Fh']
lea ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_D0],', 'eax']
jmp ['loc_5B72']
cmp ['[ebp+arg_0],', '0FFFFh']
ja ['short', 'loc_5AD3']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
xor ['eax,', 'eax']
cmp ['[ebp+arg_0],', '0DBFFh']
setnle ['al']
sub ['eax,', '1']
and ['eax,', '140h']
mov ['ecx,', '[ebp+arg_0]']
sar ['ecx,', '5']
add ['eax,', 'ecx']
mov ['edx,', '[edx]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '1Fh']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_D4],', 'edx']
jmp ['loc_5B66']
cmp ['[ebp+arg_0],', '10FFFFh']
jbe ['short', 'loc_5AF3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '80h']
mov ['[ebp+var_D8],', 'edx']
jmp ['short', 'loc_5B5A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_5B12']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_DC],', 'edx']
jmp ['short', 'loc_5B4E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[ebp+arg_0]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_DC],', 'ecx']
mov ['edx,', '[ebp+var_DC]']
mov ['[ebp+var_D8],', 'edx']
mov ['eax,', '[ebp+var_D8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_D0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_D0]']
mov ['ax,', '[ecx+edx*2]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCompQuickCheck@Normalizer2Impl@icu_56@@QBE?AW4UNormalizationCheckResult@@G@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+10h]']
cmp ['eax,', 'edx']
jl ['short', 'loc_5BCD']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FF01h']
jl ['short', 'loc_5BD6']
mov ['eax,', '1']
jmp ['short', 'loc_5BF0']
jmp ['short', 'loc_5BF0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+14h]']
movzx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jg ['short', 'loc_5BEE']
mov ['eax,', '2']
jmp ['short', 'loc_5BF0']
jmp ['short', 'loc_5BF0']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isAlgorithmicNoNo@Normalizer2Impl@icu_56@@QBECG@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+12h]']
movzx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jg ['short', 'loc_5C46']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
cmp ['eax,', 'edx']
jge ['short', 'loc_5C46']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_5C4D']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCompNo@Normalizer2Impl@icu_56@@QBECG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+10h]']
movzx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jg ['short', 'loc_5CA6']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
cmp ['eax,', 'edx']
jge ['short', 'loc_5CA6']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_5CAD']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
cmp ['eax,', 'edx']
jl ['short', 'loc_5D06']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+14h]']
movzx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_5D06']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_5D0D']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCC@Normalizer2Impl@icu_56@@QBEEG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE00h']
jl ['short', 'loc_5D4F']
mov ['al,', 'byte', 'ptr', '[ebp+arg_0]']
jmp ['short', 'loc_5D7E']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+10h]']
cmp ['eax,', 'edx']
jl ['short', 'loc_5D6D']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+12h]']
movzx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jg ['short', 'loc_5D71']
xor ['al,', 'al']
jmp ['short', 'loc_5D7E']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getCCFromNoNo@Normalizer2Impl@icu_56@@ABEEG@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE00h']
jl ['short', 'loc_5DC9']
movzx ['ecx,', 'byte', 'ptr', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'ecx']
jmp ['short', 'loc_5DD3']
mov ['[ebp+var_C4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_5E0F']
xor ['eax,', 'eax']
jmp ['short', 'loc_5E53']
jmp ['short', 'loc_5E47']
cmp ['[ebp+arg_0],', '180h']
jge ['short', 'loc_5E27']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+arg_0]']
movzx ['ax,', 'byte', 'ptr', '[eax+28h]']
jmp ['short', 'loc_5E53']
jmp ['short', 'loc_5E47']
cmp ['[ebp+arg_0],', '0FFFFh']
jg ['short', 'loc_5E47']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5E47']
xor ['eax,', 'eax']
jmp ['short', 'loc_5E53']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
cmp ['[ebp+var_14],', '180h']
jge ['short', 'loc_5EBF']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
movzx ['ax,', 'byte', 'ptr', '[eax+28h]']
jmp ['short', 'loc_5F38']
jmp ['short', 'loc_5ED6']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5ED6']
xor ['eax,', 'eax']
jmp ['short', 'loc_5F38']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_5F2C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_4]']
jz ['short', 'loc_5F2C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dx,', '[ecx]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_5F2C']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_20]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?previousFCD16@Normalizer2Impl@icu_56@@QBEGPB_WAAPB_W@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '180h']
jge ['short', 'loc_5FA1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
movzx ['ax,', 'byte', 'ptr', '[eax+28h]']
jmp ['short', 'loc_601D']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jz ['short', 'loc_5FC9']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5FC7']
xor ['eax,', 'eax']
jmp ['short', 'loc_601D']
jmp ['short', 'loc_6011']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_6011']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['dx,', '[ecx-2]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_6011']
movzx ['eax,', '[ebp+var_20]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getFCD16FromBelow180@Normalizer2Impl@icu_56@@QBEGH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+arg_0]']
movzx ['ax,', 'byte', 'ptr', '[eax+28h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+24h]']
mov ['al,', '[eax+edx]']
mov ['[ebp+var_11],', 'al']
movzx ['eax,', '[ebp+var_11]']
test ['eax,', 'eax']
jnz ['short', 'loc_60AD']
xor ['al,', 'al']
jmp ['short', 'loc_60BF']
movzx ['eax,', '[ebp+var_11]']
mov ['ecx,', '[ebp+arg_0]']
sar ['ecx,', '5']
and ['ecx,', '7']
sar ['eax,', 'cl']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isDecompInert@Normalizer2Impl@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['ecx,', 'ax']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jl ['short', 'loc_6176']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['eax,', 'ax']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@ABECHG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_6176']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_617D']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasFCDBoundaryBefore@Normalizer2Impl@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '300h']
jl ['short', 'loc_61E8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['ecx,', 'ax']
cmp ['ecx,', '0FFh']
jle ['short', 'loc_61E8']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_61EF']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasFCDBoundaryAfter@Normalizer2Impl@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
cmp ['eax,', '1']
jle ['short', 'loc_625D']
movzx ['ecx,', '[ebp+var_14]']
and ['ecx,', '0FFh']
jz ['short', 'loc_625D']
mov ['[ebp+var_D9],', '0']
jmp ['short', 'loc_6264']
mov ['[ebp+var_D9],', '1']
mov ['al,', '[ebp+var_D9]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isFCDInert@Normalizer2Impl@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['ecx,', 'ax']
cmp ['ecx,', '1']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isMaybe@Normalizer2Impl@icu_56@@ABECG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+14h]']
movzx ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jg ['short', 'loc_6316']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FF00h']
jg ['short', 'loc_6316']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_631D']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isMaybeOrNonZeroCC@Normalizer2Impl@icu_56@@ABECG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
cmp ['eax,', 'edx']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isInert@Normalizer2Impl@icu_56@@CACG@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isJamoL@Normalizer2Impl@icu_56@@CACG@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '1']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isJamoVT@Normalizer2Impl@icu_56@@CACG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FF00h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isHangul@Normalizer2Impl@icu_56@@ABECG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
cmp ['eax,', 'edx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+10h]']
cmp ['eax,', 'edx']
setl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
cmp ['eax,', 'edx']
jl ['short', 'loc_64D5']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FF00h']
jz ['short', 'loc_64D5']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
movzx ['eax,', '[ebp+arg_0]']
cmp ['edx,', 'eax']
jg ['short', 'loc_64CC']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '0FE00h']
jle ['short', 'loc_64D5']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_64DC']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isMostDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
cmp ['eax,', 'edx']
jl ['short', 'loc_653E']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE00h']
jz ['short', 'loc_653E']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '0FF00h']
jz ['short', 'loc_653E']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_6545']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+12h]']
cmp ['eax,', 'edx']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCCFromNoNo@Normalizer2Impl@icu_56@@ABEEG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
and ['ecx,', '80h']
jz ['short', 'loc_65DB']
mov ['eax,', '[ebp+var_14]']
mov ['al,', '[eax-2]']
jmp ['short', 'loc_65DD']
jmp ['short', 'loc_65DD']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
sub ['edx,', '41h']
sub ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+20h]']
lea ['eax,', '[edx+eax*2]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCompositionsListForDecompYes@Normalizer2Impl@icu_56@@ABEPBGG@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['short', 'loc_66A6']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE00h']
jl ['short', 'loc_66AC']
xor ['eax,', 'eax']
jmp ['short', 'loc_66E4']
jmp ['short', 'loc_66E4']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
cmp ['eax,', 'edx']
jge ['short', 'loc_66CC']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+20h]']
lea ['eax,', '[edx+eax*2]']
jmp ['short', 'loc_66E4']
jmp ['short', 'loc_66E4']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
lea ['eax,', '[edx+eax*2]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
shl ['edx,', '1']
sub ['eax,', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCompositionsListForComposite@Normalizer2Impl@icu_56@@ABEPBGG@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+20h]']
lea ['eax,', '[edx+eax*2]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[edx+ecx*2+2]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCompositionsList@Normalizer2Impl@icu_56@@ABEPBGG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6788']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCompositionsListForDecompYes@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_679B']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getCompositionsListForComposite@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Normalizer2Impl@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Normalizer2Impl@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+0Eh]']
mov ['[eax+0Eh],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+10h]']
mov ['[eax+10h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+12h]']
mov ['[eax+12h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+14h]']
mov ['[eax+14h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '28h']
mov ['edi,', '[ebp+var_8]']
add ['edi,', '28h']
mov ['ecx,', '60h']
rep ['movsd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1A8h]']
mov ['edx,', '[eax+1ACh]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+1A8h],', 'ecx']
mov ['[eax+1ACh],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1B0h]']
mov ['[eax+1B0h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Normalizer2Impl@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+0Eh]']
mov ['[eax+0Eh],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+10h]']
mov ['[eax+10h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+12h]']
mov ['[eax+12h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+14h]']
mov ['[eax+14h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_69AB']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '180h']
jnb ['short', 'loc_69C8']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx+28h]']
mov ['[eax+28h],', 'dl']
jmp ['short', 'loc_69A2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1A8h]']
mov ['edx,', '[eax+1ACh]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+1A8h],', 'ecx']
mov ['[eax+1ACh],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1B0h]']
mov ['[eax+1B0h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GNormalizer2Impl@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1Normalizer2Impl@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6A53']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ENormalizer2Impl@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_6AD0']
push ['offset', '??1Normalizer2Impl@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['1B4h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6AC8']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_6AEF']
mov ['ecx,', '[ebp+var_8]']
call ['??1Normalizer2Impl@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6AEC']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Normalizer2Factory@icu_56@@QAEAAV01@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@UVector@icu_56@@QBEHXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UVector@icu_56@@QBECXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UVector@icu_56@@QBECPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UVector@icu_56@@QBEHPAXH@Z']
test ['eax,', 'eax']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UVector@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UVector@icu_56@@QBEHHH@Z']
test ['eax,', 'eax']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?firstElement@UVector@icu_56@@QBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastElement@UVector@icu_56@@QBEPAXXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastElementi@UVector@icu_56@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAti@UVector@icu_56@@QBEHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AUVector@icu_56@@QBEPAXH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UVector@icu_56@@QAECABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UVector@icu_56@@QAECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@UStack@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isEmpty@UVector@icu_56@@QBECXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?peek@UStack@icu_56@@QBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastElement@UVector@icu_56@@QBEPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?peeki@UStack@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastElementi@UVector@icu_56@@QBEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?init@ReorderingBuffer@icu_56@@QAECHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
call ['?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_6F5F']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['al,', 'al']
jmp ['loc_6FEA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*2]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?getCapacity@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+10h]']
jnz ['short', 'loc_6FA8']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+18h],', '0']
jmp ['short', 'loc_6FE8']
mov ['ecx,', '[ebp+var_8]']
call ['?setIterator@ReorderingBuffer@icu_56@@AAEXXZ']
mov ['ecx,', '[ebp+var_8]']
call ['?previousCC@ReorderingBuffer@icu_56@@AAEEXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+18h],', 'al']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
cmp ['ecx,', '1']
jle ['short', 'loc_6FDC']
mov ['ecx,', '[ebp+var_8]']
call ['?previousCC@ReorderingBuffer@icu_56@@AAEEXZ']
movzx ['eax,', 'al']
cmp ['eax,', '1']
jle ['short', 'loc_6FDC']
jmp ['short', 'loc_6FCA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+0Ch],', 'edx']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?equals@ReorderingBuffer@icu_56@@QBECPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx+8]']
sar ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
cmp ['[ebp+var_14],', 'eax']
jnz ['short', 'loc_7065']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_u_memcmp_56']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_7065']
mov ['[ebp+var_D9],', '1']
jmp ['short', 'loc_706C']
mov ['[ebp+var_D9],', '0']
mov ['al,', '[ebp+var_D9]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendSupplementary@ReorderingBuffer@icu_56@@AAECHEAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '2']
jge ['short', 'loc_70D0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_8]']
call ['?resize@ReorderingBuffer@icu_56@@AAECHAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_70D0']
xor ['al,', 'al']
jmp ['loc_7163']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
movzx ['edx,', '[ebp+arg_4]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_70E7']
movzx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jnz ['short', 'loc_7141']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[edx],', 'ax']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[edx+2],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+18h],', 'cl']
movzx ['eax,', '[ebp+arg_4]']
cmp ['eax,', '1']
jg ['short', 'loc_713F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+0Ch],', 'edx']
jmp ['short', 'loc_7152']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?insert@ReorderingBuffer@icu_56@@AAEXHE@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+14h],', 'ecx']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@ReorderingBuffer@icu_56@@QAECPB_WHEEAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_71AC']
mov ['al,', '1']
jmp ['loc_73B6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_4]']
jge ['short', 'loc_71D5']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?resize@ReorderingBuffer@icu_56@@AAECHAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_71D5']
xor ['al,', 'al']
jmp ['loc_73B6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
movzx ['edx,', '[ebp+arg_8]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_71FB']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jnz ['short', 'loc_7279']
movzx ['eax,', '[ebp+arg_C]']
cmp ['eax,', '1']
jg ['short', 'loc_7218']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[ecx+edx*2]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
jmp ['short', 'loc_7230']
movzx ['eax,', '[ebp+arg_8]']
cmp ['eax,', '1']
jg ['short', 'loc_7230']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx]']
mov ['[ecx],', 'ax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '2']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_723C']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+arg_C]']
mov ['[eax+18h],', 'cl']
jmp ['loc_73B4']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_72E8']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_72E8']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'dx']
movzx ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_72E8']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_38]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_2C],', 'edx']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?insert@ReorderingBuffer@icu_56@@AAEXHE@Z']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jge ['loc_73B4']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_736D']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_736D']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_44],', 'dx']
movzx ['eax,', '[ebp+var_44]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_736D']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_44]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_7394']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['edx,', 'ax']
push ['edx']
call ['?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'al']
jmp ['short', 'loc_739A']
mov ['al,', '[ebp+arg_C]']
mov ['[ebp+arg_8],', 'al']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?append@ReorderingBuffer@icu_56@@QAECHEAAW4UErrorCode@@@Z']
jmp ['loc_72F9']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendZeroCC@ReorderingBuffer@icu_56@@QAECHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+arg_0]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+var_14]']
jge ['short', 'loc_742A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?resize@ReorderingBuffer@icu_56@@AAECHAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_742A']
xor ['al,', 'al']
jmp ['loc_74AC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+14h],', 'ecx']
cmp ['[ebp+var_14],', '1']
jnz ['short', 'loc_745D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['dx,', 'word', 'ptr', '[ebp+arg_0]']
mov ['[ecx],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
jmp ['short', 'loc_7497']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[edx],', 'ax']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[edx+2],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '4']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+0Ch],', 'edx']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?appendZeroCC@ReorderingBuffer@icu_56@@QAECPB_W0AAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_74F3']
mov ['al,', '1']
jmp ['short', 'loc_7571']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+var_14]']
jge ['short', 'loc_7524']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?resize@ReorderingBuffer@icu_56@@AAECHAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_7524']
xor ['al,', 'al']
jmp ['short', 'loc_7571']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_u_memcpy_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*2]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+0Ch],', 'edx']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@ReorderingBuffer@icu_56@@QAEXXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?getCapacity@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+18h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeSuffix@ReorderingBuffer@icu_56@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx+8]']
sar ['edx,', '1']
cmp ['[ebp+arg_0],', 'edx']
jge ['short', 'loc_764A']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
sub ['edx,', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+14h],', 'ecx']
jmp ['short', 'loc_7667']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?getCapacity@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+14h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+0Ch],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?resize@ReorderingBuffer@icu_56@@AAECHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+8]']
sar ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx+8]']
sar ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
call ['?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?getCapacity@UnicodeString@icu_56@@QBEHXZ']
shl ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_770B']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '100h']
jge ['short', 'loc_771B']
mov ['[ebp+var_2C],', '100h']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
call ['?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_7746']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['al,', 'al']
jmp ['short', 'loc_7780']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*2]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_20]']
lea ['eax,', '[ecx+edx*2]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+10h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['?getCapacity@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+14h],', 'eax']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?skipPrevious@ReorderingBuffer@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
sub ['ecx,', '2']
mov ['[ebp+var_DC],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_DC]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_DC]']
mov ['dx,', '[ecx]']
mov ['[ebp+var_14],', 'dx']
movzx ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_7834']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+1Ch]']
jnb ['short', 'loc_7834']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
movzx ['edx,', 'word', 'ptr', '[ecx-2]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_7834']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+1Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?previousCC@ReorderingBuffer@icu_56@@AAEEXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx+1Ch]']
jb ['short', 'loc_7880']
xor ['al,', 'al']
jmp ['loc_792C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
sub ['ecx,', '2']
mov ['[ebp+var_E8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_E8]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '300h']
jge ['short', 'loc_78B4']
xor ['al,', 'al']
jmp ['short', 'loc_792C']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_7912']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+1Ch]']
jnb ['short', 'loc_7912']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
mov ['dx,', '[ecx-2]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_7912']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
sub ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+1Ch],', 'ecx']
movzx ['eax,', '[ebp+var_20]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['edx,', 'ax']
push ['edx']
call ['?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@ReorderingBuffer@icu_56@@AAEXHE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?setIterator@ReorderingBuffer@icu_56@@AAEXXZ']
mov ['ecx,', '[ebp+var_8]']
call ['?skipPrevious@ReorderingBuffer@icu_56@@AAEXXZ']
mov ['ecx,', '[ebp+var_8]']
call ['?previousCC@ReorderingBuffer@icu_56@@AAEEXZ']
movzx ['eax,', 'al']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_7988']
jmp ['short', 'loc_7973']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+arg_0]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
add ['eax,', 'ecx']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_E8]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+var_E8]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '2']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+20h]']
cmp ['ecx,', '[ebp+var_14]']
jnz ['short', 'loc_79C5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['?writeCodePoint@ReorderingBuffer@icu_56@@CAXPA_WH@Z']
add ['esp,', '8']
movzx ['eax,', '[ebp+arg_4]']
cmp ['eax,', '1']
jg ['short', 'loc_7A10']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1Normalizer2Impl@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1Normalizer2Impl@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Normalizer2Impl@icu_56@@6B@']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1B0h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_7AB3']
push ['1']
mov ['ecx,', '[ebp+var_EC]']
call ['??_GCanonIterData@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_7ABD']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1Normalizer2Impl@icu_56@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UObject@icu_56@@UAE@XZ']
endp
__ehhandler$??1Normalizer2Impl@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1Normalizer2Impl@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1Normalizer2Impl@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1Normalizer2Impl@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GCanonIterData@icu_56@@QAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1CanonIterData@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7B7F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?init@Normalizer2Impl@icu_56@@QAEXPBHPBUUTrie2@@PBGPBE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+28h]']
mov ['[eax+0Ch],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+38h]']
mov ['[eax+0Eh],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+2Ch]']
mov ['[eax+10h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+30h]']
mov ['[eax+12h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+34h]']
mov ['[eax+14h],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+14h]']
mov ['edx,', '0FE00h']
sub ['edx,', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
lea ['edx,', '[ecx+edx*2]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+20h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+24h],', 'ecx']
mov ['[ebp+var_11],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
jmp ['short', 'loc_7C65']
mov ['al,', '[ebp+var_11]']
shr ['al,', '1']
mov ['[ebp+var_11],', 'al']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '180h']
jge ['loc_7D03']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFh']
jnz ['short', 'loc_7C92']
movzx ['eax,', '[ebp+var_20]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+24h]']
mov ['al,', '[eax+edx]']
mov ['[ebp+var_11],', 'al']
movzx ['eax,', '[ebp+var_11]']
and ['eax,', '1']
jz ['short', 'loc_7CDB']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_7CB9']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['cx,', '[ebp+var_20]']
add ['cx,', '1']
mov ['[ebp+var_20],', 'cx']
cmp ['[ebp+var_2C],', '20h']
jge ['short', 'loc_7CD9']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+ecx+28h],', 'al']
jmp ['short', 'loc_7CA4']
jmp ['short', 'loc_7CFE']
push ['20h']
push ['0']
movzx ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax+28h]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
movzx ['eax,', '[ebp+var_20]']
add ['eax,', '20h']
mov ['[ebp+var_20],', 'ax']
jmp ['loc_7C5D']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getTrailCCFromCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABEEPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '2']
cmp ['[ebp+arg_0],', 'eax']
jnz ['short', 'loc_7D55']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_7D6F']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
shl ['ecx,', '0Ah']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
lea ['ecx,', '[ecx+eax-35FDC00h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
cmp ['eax,', 'edx']
jg ['short', 'loc_7D94']
xor ['al,', 'al']
jmp ['short', 'loc_7DA7']
jmp ['short', 'loc_7DA7']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z']
movzx ['eax,', 'word', 'ptr', '[eax]']
sar ['eax,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addLcccChars@Normalizer2Impl@icu_56@@QBEXAAVUnicodeSet@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??0LcccContext@?A0xb0e8dd19@icu_56@@QAE@ABVNormalizer2Impl@2@AAVUnicodeSet@2@@Z']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['offset', '_enumLcccRange']
push ['0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_utrie2_enum_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0LcccContext@?A0xb0e8dd19@icu_56@@QAE@ABVNormalizer2Impl@2@AAVUnicodeSet@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_enumLcccRange	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?handleRange@LcccContext@?A0xb0e8dd19@icu_56@@QAEXHHG@Z']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleRange@LcccContext@?A0xb0e8dd19@icu_56@@QAEXHHG@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx]']
call ['?isAlgorithmicNoNo@Normalizer2Impl@icu_56@@QBECG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7F54']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx]']
call ['?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
cmp ['eax,', '0FFh']
jle ['short', 'loc_7F41']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jle ['short', 'loc_7F15']
jmp ['short', 'loc_7F95']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx]']
call ['?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '0FFh']
jle ['short', 'loc_7F95']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+4]']
mov ['edx,', '[eax]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addPropertyStarts@Normalizer2Impl@icu_56@@QBEXPBUUSetAdder@@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
lea ['ecx,', '[ebp+var_18]']
call ['??0PropertyStartsContext@?A0xb0e8dd19@icu_56@@QAE@ABVNormalizer2Impl@2@PBUUSetAdder@@@Z']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['offset', '_enumNorm16PropertyStartsRange']
push ['0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_utrie2_enum_56']
add ['esp,', '10h']
mov ['eax,', '0AC00h']
mov ['[ebp+var_24],', 'ax']
jmp ['short', 'loc_800F']
movzx ['eax,', '[ebp+var_24]']
add ['eax,', '1Ch']
mov ['[ebp+var_24],', 'ax']
movzx ['eax,', '[ebp+var_24]']
cmp ['eax,', '0D7A4h']
jge ['short', 'loc_805D']
movzx ['eax,', '[ebp+var_24]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_8004']
mov ['esi,', 'esp']
push ['0D7A4h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
dd ['offset', '$LN7']
dd ['offset', '$LN6_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0PropertyStartsContext@?A0xb0e8dd19@icu_56@@QAE@ABVNormalizer2Impl@2@PBUUSetAdder@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_enumNorm16PropertyStartsRange proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_8]']
jz ['short', 'loc_81D2']
movzx ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx]']
call ['?isAlgorithmicNoNo@Normalizer2Impl@icu_56@@QBECG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_81D2']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx]']
call ['?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_20],', 'ax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_8]']
jg ['short', 'loc_81D2']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx]']
call ['?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_2C],', 'ax']
movzx ['eax,', '[ebp+var_2C]']
movzx ['ecx,', '[ebp+var_20]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_81D0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'ax']
jmp ['short', 'loc_817B']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addCanonIterPropertyStarts@Normalizer2Impl@icu_56@@QBEXPBUUSetAdder@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?ensureCanonIterData@Normalizer2Impl@icu_56@@QBECAAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8240']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '_enumPropertyStartsRange']
push ['offset', '_segmentStarterMapper']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1B0h]']
mov ['eax,', '[edx]']
push ['eax']
call ['_utrie2_enum_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_enumPropertyStartsRange proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_segmentStarterMapper proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '80000000h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?copyLowPrefixFromNulTerminated@Normalizer2Impl@icu_56@@ABEPB_WPB_WHPAVReorderingBuffer@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['[ebp+var_20],', 'cx']
movzx ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2']
mov ['[ebp+arg_0],', 'ecx']
cmp ['edx,', 'eax']
jge ['short', 'loc_8333']
mov ['[ebp+var_E8],', '1']
jmp ['short', 'loc_833D']
mov ['[ebp+var_E8],', '0']
cmp ['[ebp+var_E8],', '0']
jz ['short', 'loc_8350']
movzx ['eax,', '[ebp+var_20]']
test ['eax,', 'eax']
jz ['short', 'loc_8350']
jmp ['short', 'loc_8309']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+var_14]']
jz ['short', 'loc_837B']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_837B']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?appendZeroCC@ReorderingBuffer@icu_56@@QAECPB_W0AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?decompose@Normalizer2Impl@icu_56@@QBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_83D9']
mov ['ecx,', '[ebp+arg_4]']
call ['?setToBogus@UnicodeString@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+arg_4]']
jmp ['short', 'loc_8437']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_83F2']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_8408']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+arg_4]']
call ['?setToBogus@UnicodeString@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+arg_4]']
jmp ['short', 'loc_8437']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[edx+eax*2]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_104]']
mov ['ecx,', '3Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jge ['short', 'loc_84D5']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_84D5']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['ecx,', '[ebp+var_40]']
call ['??0ReorderingBuffer@icu_56@@QAE@ABVNormalizer2Impl@1@AAVUnicodeString@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
lea ['ecx,', '[ebp+var_40]']
call ['?init@ReorderingBuffer@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8523']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?decompose@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_40]']
call ['??1ReorderingBuffer@icu_56@@QAE@XZ']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '104h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
dd ['offset', '$LN8_1']
sar ['bh,', '0FFh']
jmp ['dword', 'ptr', '[eax+eax]']
align ['4']
dd ['offset', '$LN6_1']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-40h]']
jmp ['??1ReorderingBuffer@icu_56@@QAE@XZ']
endp
__ehhandler$?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-108h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?decompose@Normalizer2Impl@icu_56@@QBEXPB_W0AAVUnicodeString@2@HAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?decompose@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '12Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '4Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_864F']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?copyLowPrefixFromNulTerminated@Normalizer2Impl@icu_56@@ABEPB_WPB_WHPAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_863E']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_88A6']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strchr_56']
add ['esp,', '8']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_2C],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_38],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_4D],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['loc_87BE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_14]']
jl ['short', 'loc_86C8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[ebp+var_2C]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
movzx ['edx,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?isMostDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_86D6']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
jmp ['loc_87B9']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_86EF']
jmp ['loc_87BE']
jmp ['loc_87B9']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '400h']
jnz ['short', 'loc_8737']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_8735']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+2]']
mov ['[ebp+var_5C],', 'cx']
movzx ['edx,', '[ebp+var_5C]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['short', 'loc_8735']
mov ['eax,', '[ebp+var_2C]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_5C]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_8779']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_8779']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax-2]']
mov ['[ebp+var_5C],', 'cx']
movzx ['edx,', '[ebp+var_5C]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_8779']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
movzx ['eax,', '[ebp+var_5C]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_2C]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_38],', 'ax']
movzx ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isMostDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_87B7']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_2C]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_87B9']
jmp ['short', 'loc_87BE']
jmp ['loc_866C']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_20]']
jz ['short', 'loc_87F8']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_87EE']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?appendZeroCC@ReorderingBuffer@icu_56@@QAECPB_W0AAW4UErrorCode@@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_87EC']
jmp ['loc_88A3']
jmp ['short', 'loc_87F8']
mov ['[ebp+var_4D],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_8805']
jmp ['loc_88A3']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_2C]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_8847']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
movzx ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?decompose@Normalizer2Impl@icu_56@@ABECHGAAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8845']
jmp ['short', 'loc_88A3']
jmp ['short', 'loc_889E']
movzx ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8899']
movzx ['eax,', '[ebp+var_38]']
push ['eax']
call ['?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z']
add ['esp,', '4']
mov ['[ebp+var_65],', 'al']
movzx ['eax,', '[ebp+var_4D]']
movzx ['ecx,', '[ebp+var_65]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_887F']
movzx ['eax,', '[ebp+var_65]']
test ['eax,', 'eax']
jnz ['short', 'loc_8899']
mov ['al,', '[ebp+var_65]']
mov ['[ebp+var_4D],', 'al']
movzx ['eax,', '[ebp+var_65]']
cmp ['eax,', '1']
jg ['short', 'loc_8894']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_8666']
mov ['eax,', '[ebp+var_44]']
jmp ['short', 'loc_88A6']
jmp ['loc_8666']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?decomposeShort@Normalizer2Impl@icu_56@@ABECPB_W0AAVReorderingBuffer@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['loc_8A4B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_893C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[ebp+var_14]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_20],', 'cx']
jmp ['loc_8A22']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_8960']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['[ebp+var_2C],', 'cx']
movzx ['edx,', '[ebp+var_2C]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jz ['short', 'loc_8994']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[ebp+var_14]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+280h]']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_20],', 'cx']
jmp ['loc_8A22']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_2C]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_89D0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_F4],', 'edx']
jmp ['short', 'loc_8A0C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[ebp+var_14]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+var_14]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_F4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_F4]']
mov ['ax,', '[ecx+edx*2]']
mov ['[ebp+var_20],', 'ax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
movzx ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?decompose@Normalizer2Impl@icu_56@@ABECHGAAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8A46']
xor ['al,', 'al']
jmp ['short', 'loc_8A4D']
jmp ['loc_88DF']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?decompose@Normalizer2Impl@icu_56@@ABECHGAAVReorderingBuffer@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '11Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_11C]']
mov ['ecx,', '47h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', 'ecx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8AD0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z']
add ['esp,', '4']
movzx ['edx,', 'al']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?append@ReorderingBuffer@icu_56@@QAECHEAAW4UErrorCode@@@Z']
jmp ['loc_8BC1']
jmp ['loc_8BBC']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?isHangul@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8B13']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?decompose@Hangul@icu_56@@SAHHQA_W@Z']
add ['esp,', '8']
lea ['eax,', '[ebp+eax*2+var_1C]']
push ['eax']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?appendZeroCC@ReorderingBuffer@icu_56@@QAECPB_W0AAW4UErrorCode@@@Z']
jmp ['loc_8BC1']
jmp ['loc_8BBC']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8B4D']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_C]']
call ['?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+arg_4],', 'ax']
jmp ['short', 'loc_8BBC']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
mov ['cx,', '[eax]']
mov ['[ebp+var_34],', 'cx']
movzx ['eax,', '[ebp+var_34]']
and ['eax,', '1Fh']
mov ['[ebp+var_40],', 'eax']
movzx ['eax,', '[ebp+var_34]']
sar ['eax,', '8']
mov ['[ebp+var_55],', 'al']
movzx ['eax,', '[ebp+var_34]']
and ['eax,', '80h']
jz ['short', 'loc_8B95']
mov ['eax,', '[ebp+var_28]']
movzx ['ecx,', 'word', 'ptr', '[eax-2]']
sar ['ecx,', '8']
mov ['[ebp+var_49],', 'cl']
jmp ['short', 'loc_8B99']
mov ['[ebp+var_49],', '0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
movzx ['ecx,', '[ebp+var_55]']
push ['ecx']
movzx ['edx,', '[ebp+var_49]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '2']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?append@ReorderingBuffer@icu_56@@QAECPB_WHEEAAW4UErrorCode@@@Z']
jmp ['short', 'loc_8BC1']
jmp ['loc_8A91']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '11Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
dd ['offset', '$LN14']
dd ['offset', '$LN13']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDecomposition@Normalizer2Impl@icu_56@@QBEPB_WHQA_WAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jl ['short', 'loc_8C69']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_20],', 'ax']
movzx ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8C76']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_8D86']
jmp ['loc_8D81']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isHangul@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8CAC']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?decompose@Hangul@icu_56@@SAHHQA_W@Z']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_8D86']
jmp ['loc_8D81']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_8D5B']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0FFFFh']
ja ['short', 'loc_8D0F']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', 'word', 'ptr', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_8D59']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+edx*2],', 'ax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+edx*2],', 'ax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_8D81']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '2']
jmp ['short', 'loc_8D86']
jmp ['loc_8C3A']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRawDecomposition@Normalizer2Impl@icu_56@@QBEPB_WHQA_WAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jl ['short', 'loc_8DEE']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_14],', 'ax']
movzx ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompYes@Normalizer2Impl@icu_56@@QBECG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8DFA']
xor ['eax,', 'eax']
jmp ['loc_8FA0']
jmp ['loc_8FA0']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isHangul@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8E34']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?getRawDecomposition@Hangul@icu_56@@SAXHQA_W@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '2']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_8FA0']
jmp ['loc_8FA0']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_8EE8']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0FFFFh']
ja ['short', 'loc_8E91']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', 'word', 'ptr', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_8EDB']
mov ['eax,', '[ebp+arg_0]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+edx*2],', 'ax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+edx*2],', 'ax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_8FA0']
jmp ['loc_8FA0']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[eax]']
mov ['[ebp+var_2C],', 'cx']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '1Fh']
mov ['[ebp+var_38],', 'eax']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '40h']
jz ['short', 'loc_8F92']
movzx ['eax,', '[ebp+var_2C]']
sar ['eax,', '7']
and ['eax,', '1']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', 'eax']
sub ['ecx,', '2']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_44]']
mov ['cx,', '[eax]']
mov ['[ebp+var_50],', 'cx']
movzx ['eax,', '[ebp+var_50]']
cmp ['eax,', '1Fh']
jg ['short', 'loc_8F59']
movzx ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
movzx ['eax,', '[ebp+var_50]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', 'eax']
mov ['eax,', 'ecx']
jmp ['short', 'loc_8FA0']
jmp ['short', 'loc_8F90']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[ebp+var_50]']
mov ['[eax],', 'cx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '6']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
push ['edx']
call ['_u_memcpy_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_4]']
jmp ['short', 'loc_8FA0']
jmp ['short', 'loc_8FA0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?decomposeAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?copyReorderableSuffixTo@ReorderingBuffer@icu_56@@QBEXAAVUnicodeString@2@@Z']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_900C']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?decompose@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
jmp ['loc_90C2']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0ForwardUTrie2StringIterator@icu_56@@QAE@PBUUTrie2@@PB_W1@Z']
lea ['ecx,', '[ebp+var_24]']
call ['?next16@ForwardUTrie2StringIterator@icu_56@@QAEGXZ']
movzx ['eax,', 'ax']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getCC@Normalizer2Impl@icu_56@@QBEEG@Z']
mov ['[ebp+var_45],', 'al']
mov ['cl,', '[ebp+var_45]']
mov ['[ebp+var_39],', 'cl']
mov ['dl,', '[ebp+var_39]']
mov ['[ebp+var_2D],', 'dl']
movzx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jz ['short', 'loc_906D']
mov ['al,', '[ebp+var_45]']
mov ['[ebp+var_39],', 'al']
lea ['ecx,', '[ebp+var_24]']
call ['?next16@ForwardUTrie2StringIterator@icu_56@@QAEGXZ']
movzx ['eax,', 'ax']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getCC@Normalizer2Impl@icu_56@@QBEEG@Z']
mov ['[ebp+var_45],', 'al']
jmp ['short', 'loc_9046']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_9084']
push ['0']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_u_strchr_56']
add ['esp,', '8']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
movzx ['ecx,', '[ebp+var_39]']
push ['ecx']
movzx ['edx,', '[ebp+var_2D]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_10]']
call ['?append@ReorderingBuffer@icu_56@@QAECPB_WHEEAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_90C2']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?appendZeroCC@ReorderingBuffer@icu_56@@QAECPB_W0AAW4UErrorCode@@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
dd ['offset', '$LN9_1']
dd ['offset', '$LN8_2']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ForwardUTrie2StringIterator@icu_56@@QAE@PBUUTrie2@@PB_W1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UTrie2StringIterator@icu_56@@QAE@PBUUTrie2@@PB_W@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UTrie2StringIterator@icu_56@@QAE@PBUUTrie2@@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasDecompBoundary@Normalizer2Impl@icu_56@@QBECHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_91E9']
mov ['al,', '1']
jmp ['loc_92F2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isHangul@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_9221']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_922D']
mov ['al,', '1']
jmp ['loc_92F2']
jmp ['loc_92ED']
movzx ['eax,', '[ebp+var_14]']
cmp ['eax,', '0FE00h']
jle ['short', 'loc_9244']
xor ['al,', 'al']
jmp ['loc_92F2']
jmp ['loc_92ED']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_926E']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_92ED']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[eax]']
mov ['[ebp+var_2C],', 'cx']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '1Fh']
jnz ['short', 'loc_9295']
xor ['al,', 'al']
jmp ['short', 'loc_92F2']
movsx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jnz ['short', 'loc_92BB']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '1FFh']
jle ['short', 'loc_92AC']
xor ['al,', 'al']
jmp ['short', 'loc_92F2']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '0FFh']
jg ['short', 'loc_92BB']
mov ['al,', '1']
jmp ['short', 'loc_92F2']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '80h']
jz ['short', 'loc_92DE']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx-2]']
and ['edx,', '0FF00h']
jz ['short', 'loc_92DE']
mov ['[ebp+var_F1],', '0']
jmp ['short', 'loc_92E5']
mov ['[ebp+var_F1],', '1']
mov ['al,', '[ebp+var_F1]']
jmp ['short', 'loc_92F2']
jmp ['loc_91D7']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?combine@Normalizer2Impl@icu_56@@CAHPBGH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '3400h']
jge ['short', 'loc_93A7']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
mov ['[ebp+var_8],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['[ebp+var_14],', 'cx']
movzx ['edx,', '[ebp+var_14]']
movzx ['eax,', '[ebp+var_8]']
cmp ['eax,', 'edx']
jle ['short', 'loc_9361']
movzx ['eax,', '[ebp+var_14]']
and ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2+4]']
mov ['[ebp+arg_0],', 'edx']
jmp ['short', 'loc_9338']
movzx ['eax,', '[ebp+var_8]']
movzx ['ecx,', '[ebp+var_14]']
and ['ecx,', '7FFEh']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_93A2']
movzx ['eax,', '[ebp+var_14]']
and ['eax,', '1']
jz ['short', 'loc_9396']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[eax+2]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+4]']
or ['eax,', 'edx']
jmp ['loc_9468']
jmp ['short', 'loc_93A2']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[eax+2]']
jmp ['loc_9468']
jmp ['loc_9465']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '9']
and ['eax,', '0FFFFFFFEh']
add ['eax,', '3400h']
mov ['[ebp+var_8],', 'ax']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '6']
mov ['[ebp+var_20],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['[ebp+var_14],', 'cx']
movzx ['edx,', '[ebp+var_14]']
movzx ['eax,', '[ebp+var_8]']
cmp ['eax,', 'edx']
jle ['short', 'loc_93EC']
movzx ['eax,', '[ebp+var_14]']
and ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2+4]']
mov ['[ebp+arg_0],', 'edx']
jmp ['short', 'loc_9460']
movzx ['eax,', '[ebp+var_8]']
movzx ['ecx,', '[ebp+var_14]']
and ['ecx,', '7FFEh']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_945E']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+2]']
mov ['[ebp+var_2C],', 'cx']
movzx ['edx,', '[ebp+var_2C]']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', 'edx']
jle ['short', 'loc_942F']
movzx ['eax,', '[ebp+var_14]']
and ['eax,', '8000h']
jz ['short', 'loc_9424']
jmp ['short', 'loc_9465']
jmp ['short', 'loc_942D']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '6']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_945C']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_2C]']
and ['ecx,', '0FFC0h']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_945A']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFF003Fh']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+4]']
or ['eax,', 'edx']
jmp ['short', 'loc_9468']
jmp ['short', 'loc_945C']
jmp ['short', 'loc_9465']
jmp ['short', 'loc_9460']
jmp ['short', 'loc_9465']
jmp ['loc_93C3']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addComposites@Normalizer2Impl@icu_56@@ABEXPBGAAVUnicodeSet@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['[ebp+var_14],', 'cx']
movzx ['eax,', '[ebp+var_14]']
and ['eax,', '1']
jnz ['short', 'loc_94BB']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_94E0']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
and ['ecx,', '0FFFF003Fh']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+4]']
or ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '6']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_20]']
sar ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '1']
jz ['short', 'loc_9515']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['edx,', 'ax']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCompositionsListForComposite@Normalizer2Impl@icu_56@@ABEPBGG@Z']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?addComposites@Normalizer2Impl@icu_56@@ABEXPBGAAVUnicodeSet@2@@Z']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
movzx ['eax,', '[ebp+var_14]']
and ['eax,', '8000h']
jz ['loc_9493']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?recompose@Normalizer2Impl@icu_56@@ABEXAAVReorderingBuffer@2@HC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1A8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1A8]']
mov ['ecx,', '6Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getStart@ReorderingBuffer@icu_56@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*2]']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getLimit@ReorderingBuffer@icu_56@@QAEPA_WXZ']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_9594']
jmp ['loc_9B0B']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_A1],', '0']
mov ['[ebp+var_95],', '0']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_9601']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[ebp+var_68]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_80],', 'cx']
jmp ['loc_96F0']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jz ['short', 'loc_962B']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['edx,', '[ebp+var_B0]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jz ['short', 'loc_965F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[ebp+var_68]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+280h]']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_80],', 'cx']
jmp ['loc_96F0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_68]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_B0]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_68]']
cmp ['edx,', '[ecx+20h]']
jl ['short', 'loc_969E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_1A8],', 'edx']
jmp ['short', 'loc_96DA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[ebp+var_68]']
sar ['edx,', '0Bh']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2+1040h]']
mov ['eax,', '[ebp+var_68]']
sar ['eax,', '5']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ecx]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '1Fh']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_1A8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_1A8]']
mov ['ax,', '[ecx+edx*2]']
mov ['[ebp+var_80],', 'ax']
movzx ['eax,', '[ebp+var_80]']
push ['eax']
call ['?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z']
add ['esp,', '4']
mov ['[ebp+var_89],', 'al']
movzx ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isMaybe@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_9A87']
cmp ['[ebp+var_5C],', '0']
jz ['loc_9A87']
movzx ['eax,', '[ebp+var_95]']
movzx ['ecx,', '[ebp+var_89]']
cmp ['eax,', 'ecx']
jl ['short', 'loc_9746']
movzx ['eax,', '[ebp+var_95]']
test ['eax,', 'eax']
jnz ['loc_9A87']
movzx ['eax,', '[ebp+var_80]']
push ['eax']
call ['?isJamoVT@Normalizer2Impl@icu_56@@CACG@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_986D']
cmp ['[ebp+var_68],', '11A7h']
jge ['loc_984F']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '1100h']
mov ['[ebp+var_BC],', 'cx']
movzx ['eax,', '[ebp+var_BC]']
cmp ['eax,', '13h']
jge ['loc_984F']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
movzx ['eax,', '[ebp+var_BC]']
imul ['eax,', '15h']
mov ['ecx,', '[ebp+var_68]']
lea ['edx,', '[eax+ecx-1161h]']
imul ['edx,', '1Ch']
add ['edx,', '0AC00h']
mov ['[ebp+var_C8],', 'dx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jz ['short', 'loc_9802']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '11A7h']
mov ['[ebp+var_D4],', 'cx']
movzx ['edx,', '[ebp+var_D4]']
cmp ['edx,', '1Ch']
jge ['short', 'loc_9802']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', '[ebp+var_D4]']
movzx ['ecx,', '[ebp+var_C8]']
add ['ecx,', 'eax']
mov ['[ebp+var_C8],', 'cx']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', '[ebp+var_C8]']
mov ['[eax],', 'cx']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_9843']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '2']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_981B']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_985C']
jmp ['loc_9AFF']
mov ['[ebp+var_5C],', '0']
jmp ['loc_95B0']
jmp ['loc_9A87']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
call ['?combine@Normalizer2Impl@icu_56@@CAHPBGH@Z']
add ['esp,', '8']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jl ['loc_9A87']
mov ['eax,', '[ebp+var_74]']
sar ['eax,', '1']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_68]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', 'ecx']
mov ['[ebp+var_38],', 'edx']
movsx ['eax,', '[ebp+var_A1]']
test ['eax,', 'eax']
jz ['loc_9958']
mov ['eax,', '[ebp+var_E0]']
sub ['eax,', '10000h']
cmp ['eax,', '0FFFFFh']
ja ['short', 'loc_98FC']
mov ['eax,', '[ebp+var_E0]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_E0]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+2],', 'ax']
jmp ['short', 'loc_9953']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_E0]']
mov ['[eax],', 'cx']
mov ['[ebp+var_A1],', '0']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '2']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_994A']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '2']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_9922']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_99FE']
mov ['eax,', '[ebp+var_E0]']
sub ['eax,', '10000h']
cmp ['eax,', '0FFFFFh']
ja ['loc_99F1']
mov ['[ebp+var_A1],', '1']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '2']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_44]']
jnb ['short', 'loc_99BB']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_50]']
sub ['ecx,', '2']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ebp+var_44]']
mov ['cx,', '[eax]']
mov ['[edx],', 'cx']
jmp ['short', 'loc_9993']
mov ['eax,', '[ebp+var_E0]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'ax']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '2']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
sar ['ecx,', '0Ah']
add ['ecx,', '0D7C0h']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx],', 'cx']
jmp ['short', 'loc_99FE']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_E0]']
mov ['[eax],', 'cx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_9A46']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_9A3A']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_50]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '2']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_9A12']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_9A53']
jmp ['loc_9AFF']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '1']
jz ['short', 'loc_9A7B']
mov ['eax,', '[ebp+var_E0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['ecx,', 'ax']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCompositionsListForComposite@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_5C],', 'eax']
jmp ['short', 'loc_9A82']
mov ['[ebp+var_5C],', '0']
jmp ['loc_95B0']
mov ['al,', '[ebp+var_89]']
mov ['[ebp+var_95],', 'al']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_9A9D']
jmp ['short', 'loc_9AFF']
movzx ['eax,', '[ebp+var_89]']
test ['eax,', 'eax']
jnz ['short', 'loc_9AEB']
movzx ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getCompositionsListForDecompYes@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_9AE9']
cmp ['[ebp+var_68],', '0FFFFh']
ja ['short', 'loc_9AD9']
mov ['[ebp+var_A1],', '0']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '2']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_9AE9']
mov ['[ebp+var_A1],', '1']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '4']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_9AFA']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_9AFA']
mov ['[ebp+var_5C],', '0']
jmp ['loc_95B0']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?setReorderingLimit@ReorderingBuffer@icu_56@@QAEXPA_W@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1A8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?composePair@Normalizer2Impl@icu_56@@QBEHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
call ['?isInert@Normalizer2Impl@icu_56@@CACG@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_9B78']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_9CC8']
jmp ['loc_9CA2']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Eh]']
cmp ['eax,', 'edx']
jge ['loc_9C66']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
call ['?isJamoL@Normalizer2Impl@icu_56@@CACG@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_9BDC']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1161h']
mov ['[ebp+arg_4],', 'eax']
js ['short', 'loc_9BCF']
cmp ['[ebp+arg_4],', '15h']
jge ['short', 'loc_9BCF']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1100h']
imul ['eax,', '15h']
add ['eax,', '[ebp+arg_4]']
imul ['eax,', '1Ch']
add ['eax,', '0AC00h']
jmp ['loc_9CC8']
jmp ['short', 'loc_9BD7']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_9CC8']
jmp ['loc_9C64']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isHangul@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_9C32']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '11A7h']
mov ['[ebp+arg_4],', 'eax']
movzx ['eax,', 'word', 'ptr', '[ebp+arg_0]']
push ['eax']
call ['?isHangulWithoutJamoT@Hangul@icu_56@@SAC_W@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_9C28']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_9C28']
cmp ['[ebp+arg_4],', '1Ch']
jge ['short', 'loc_9C28']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
jmp ['loc_9CC8']
jmp ['short', 'loc_9C30']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_9CC8']
jmp ['short', 'loc_9C64']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+20h]']
lea ['eax,', '[edx+eax*2]']
mov ['[ebp+var_20],', 'eax']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
cmp ['eax,', 'edx']
jle ['short', 'loc_9C64']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+var_20]']
lea ['eax,', '[edx+ecx*2+2]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_9CA2']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
cmp ['eax,', 'edx']
jl ['short', 'loc_9C80']
movzx ['eax,', '[ebp+var_14]']
cmp ['eax,', '0FE00h']
jl ['short', 'loc_9C87']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_9CC8']
jmp ['short', 'loc_9CA2']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
lea ['eax,', '[edx+eax*2]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
shl ['edx,', '1']
sub ['eax,', 'edx']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_9CB1']
cmp ['[ebp+arg_4],', '10FFFFh']
jle ['short', 'loc_9CB6']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_9CC8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?combine@Normalizer2Impl@icu_56@@CAHPBGH@Z']
add ['esp,', '8']
sar ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compose@Normalizer2Impl@icu_56@@QBECPB_W0CCAAVReorderingBuffer@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '16Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '5Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_9D79']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
movsx ['ecx,', '[ebp+arg_C]']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?copyLowPrefixFromNulTerminated@Normalizer2Impl@icu_56@@ABEPB_WPB_WHPAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9D57']
xor ['al,', 'al']
jmp ['loc_A2CE']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_9D68']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strchr_56']
add ['esp,', '8']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_38],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_44],', 'ax']
mov ['[ebp+var_4D],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['loc_9EE2']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
cmp ['edx,', '[ebp+var_20]']
jl ['short', 'loc_9DEC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[ebp+var_38]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_44],', 'cx']
movzx ['edx,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_9DFA']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
jmp ['loc_9EDD']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_9E13']
jmp ['loc_9EE2']
jmp ['loc_9EDD']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '400h']
jnz ['short', 'loc_9E5B']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_9E59']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+2]']
mov ['[ebp+var_5C],', 'cx']
movzx ['edx,', '[ebp+var_5C]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['short', 'loc_9E59']
mov ['eax,', '[ebp+var_38]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_5C]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_9E9D']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_9E9D']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax-2]']
mov ['[ebp+var_5C],', 'cx']
movzx ['edx,', '[ebp+var_5C]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_9E9D']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
movzx ['eax,', '[ebp+var_5C]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_44],', 'ax']
movzx ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9EDB']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_38]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_9EDD']
jmp ['short', 'loc_9EE2']
jmp ['loc_9D90']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_2C]']
jz ['loc_9F74']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_9F18']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?appendZeroCC@ReorderingBuffer@icu_56@@QAECPB_W0AAW4UErrorCode@@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_9F16']
jmp ['loc_A2CC']
jmp ['short', 'loc_9F1C']
mov ['[ebp+var_4D],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_9F29']
jmp ['loc_A2CC']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_9F6C']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_9F6C']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax-2]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0D800h']
jnz ['short', 'loc_9F6C']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_9F81']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_9F81']
jmp ['loc_A2CC']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_38]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+arg_0],', 'eax']
movzx ['eax,', '[ebp+var_44]']
push ['eax']
call ['?isJamoVT@Normalizer2Impl@icu_56@@CACG@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_A0FE']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_2C]']
jz ['loc_A0FE']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', '[eax-2]']
mov ['[ebp+var_68],', 'cx']
mov ['[ebp+var_71],', '0']
cmp ['[ebp+var_38],', '11A7h']
jge ['loc_A07F']
movzx ['eax,', '[ebp+var_68]']
sub ['eax,', '1100h']
mov ['[ebp+var_68],', 'ax']
movzx ['eax,', '[ebp+var_68]']
cmp ['eax,', '13h']
jge ['loc_A07D']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_A002']
xor ['al,', 'al']
jmp ['loc_A2CE']
movzx ['eax,', '[ebp+var_68]']
imul ['eax,', '15h']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[eax+ecx-1161h]']
imul ['edx,', '1Ch']
add ['edx,', '0AC00h']
mov ['[ebp+var_80],', 'dx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_A079']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '11A7h']
mov ['[ebp+var_8C],', 'cx']
movzx ['edx,', '[ebp+var_8C]']
cmp ['edx,', '1Ch']
jge ['short', 'loc_A079']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
movzx ['eax,', '[ebp+var_8C]']
movzx ['ecx,', '[ebp+var_80]']
add ['ecx,', 'eax']
mov ['[ebp+var_80],', 'cx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?setLastChar@ReorderingBuffer@icu_56@@QAEX_W@Z']
jmp ['loc_9D8A']
mov ['[ebp+var_71],', '1']
jmp ['short', 'loc_A0C4']
movzx ['eax,', '[ebp+var_68]']
push ['eax']
call ['?isHangulWithoutJamoT@Hangul@icu_56@@SAC_W@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A0C4']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_A0A2']
xor ['al,', 'al']
jmp ['loc_A2CE']
movzx ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[eax+ecx-11A7h]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?setLastChar@ReorderingBuffer@icu_56@@QAEX_W@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_9D8A']
movsx ['eax,', '[ebp+var_71]']
test ['eax,', 'eax']
jnz ['short', 'loc_A0FE']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_A0F5']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['0']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+arg_10]']
call ['?appendBMP@ReorderingBuffer@icu_56@@QAEC_WEAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_A0F3']
jmp ['loc_A2CC']
jmp ['short', 'loc_A0F9']
mov ['[ebp+var_4D],', '0']
jmp ['loc_9D8A']
movzx ['eax,', '[ebp+var_44]']
cmp ['eax,', '0FF01h']
jl ['loc_A1DC']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ebp+var_95],', 'al']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_A181']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_A136']
mov ['ecx,', '[ebp+arg_10]']
call ['?getLastCC@ReorderingBuffer@icu_56@@QBEEXZ']
mov ['[ebp+var_169],', 'al']
jmp ['short', 'loc_A13F']
mov ['cl,', '[ebp+var_4D]']
mov ['[ebp+var_169],', 'cl']
movzx ['edx,', '[ebp+var_169]']
test ['edx,', 'edx']
jnz ['short', 'loc_A181']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_A181']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getTrailCCFromCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABEEPB_W0@Z']
movzx ['edx,', 'al']
movzx ['eax,', '[ebp+var_95]']
cmp ['edx,', 'eax']
jle ['short', 'loc_A181']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_A17F']
xor ['al,', 'al']
jmp ['loc_A2CE']
jmp ['short', 'loc_A1DA']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_A1B4']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
movzx ['ecx,', '[ebp+var_95]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?append@ReorderingBuffer@icu_56@@QAECHEAAW4UErrorCode@@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_A1AD']
jmp ['loc_A2CC']
jmp ['loc_9D8A']
jmp ['short', 'loc_A1DA']
movzx ['eax,', '[ebp+var_4D]']
movzx ['ecx,', '[ebp+var_95]']
cmp ['eax,', 'ecx']
jg ['short', 'loc_A1D3']
mov ['al,', '[ebp+var_95]']
mov ['[ebp+var_4D],', 'al']
jmp ['loc_9D8A']
jmp ['short', 'loc_A1DA']
xor ['al,', 'al']
jmp ['loc_A2CE']
jmp ['short', 'loc_A1FF']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_A1FF']
movzx ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isMaybeOrNonZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A1FF']
xor ['al,', 'al']
jmp ['loc_A2CE']
movzx ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@ABECHG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A21F']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_A238']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_A238']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_14]']
sar ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?removeSuffix@ReorderingBuffer@icu_56@@QAEXH@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?findNextCompBoundary@Normalizer2Impl@icu_56@@ABEPB_WPB_W0@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?length@ReorderingBuffer@icu_56@@QBEHXZ']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?decomposeShort@Normalizer2Impl@icu_56@@ABECPB_W0AAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A27A']
jmp ['short', 'loc_A2CC']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_A4]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?recompose@Normalizer2Impl@icu_56@@ABEXAAVReorderingBuffer@2@HC@Z']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_A2C1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+arg_10]']
call ['?equals@ReorderingBuffer@icu_56@@QBECPB_W0@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_A2B5']
xor ['al,', 'al']
jmp ['short', 'loc_A2CE']
mov ['ecx,', '[ebp+arg_10]']
call ['?remove@ReorderingBuffer@icu_56@@QAEXXZ']
mov ['[ebp+var_4D],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_9D8A']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '16Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?composeQuickCheck@Normalizer2Impl@icu_56@@QBEPB_WPB_W0CPAW4UNormalizationCheckResult@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '138h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_138]']
mov ['ecx,', '4Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_A35E']
mov ['[ebp+var_2C],', '0']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?copyLowPrefixFromNulTerminated@Normalizer2Impl@icu_56@@ABEPB_WPB_WHPAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_A34D']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strchr_56']
add ['esp,', '8']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_44],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_50],', 'ax']
mov ['[ebp+var_59],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_A385']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_A5F6']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+var_44]']
cmp ['edx,', '[ebp+var_20]']
jl ['short', 'loc_A3D5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
mov ['edx,', '[ebp+var_44]']
sar ['edx,', '5']
mov ['eax,', '[eax]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_50],', 'cx']
movzx ['edx,', '[ebp+var_50]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_A3E3']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
jmp ['loc_A4C6']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_A3FC']
jmp ['loc_A4CB']
jmp ['loc_A4C6']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '400h']
jnz ['short', 'loc_A444']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_A442']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+2]']
mov ['[ebp+var_68],', 'cx']
movzx ['edx,', '[ebp+var_68]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['short', 'loc_A442']
mov ['eax,', '[ebp+var_44]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_68]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_A486']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_A486']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax-2]']
mov ['[ebp+var_68],', 'cx']
movzx ['edx,', '[ebp+var_68]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_A486']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
movzx ['eax,', '[ebp+var_68]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_44]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_50],', 'ax']
movzx ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A4C4']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_44]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_A4C6']
jmp ['short', 'loc_A4CB']
jmp ['loc_A375']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_38]']
jz ['short', 'loc_A520']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_A516']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_A516']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax-2]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0D800h']
jnz ['short', 'loc_A516']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_59],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_44]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+arg_0],', 'eax']
movzx ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isMaybeOrNonZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_A5DD']
movzx ['eax,', '[ebp+var_50]']
push ['eax']
call ['?getCCFromYesOrMaybe@Normalizer2Impl@icu_56@@SAEG@Z']
add ['esp,', '4']
mov ['[ebp+var_71],', 'al']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_A59D']
movzx ['eax,', '[ebp+var_71]']
test ['eax,', 'eax']
jz ['short', 'loc_A59D']
movzx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jnz ['short', 'loc_A59D']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_A59D']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getTrailCCFromCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABEEPB_W0@Z']
movzx ['edx,', 'al']
movzx ['eax,', '[ebp+var_71]']
cmp ['edx,', 'eax']
jle ['short', 'loc_A59D']
jmp ['short', 'loc_A5DD']
movzx ['eax,', '[ebp+var_59]']
movzx ['ecx,', '[ebp+var_71]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_A5B1']
movzx ['eax,', '[ebp+var_71]']
test ['eax,', 'eax']
jnz ['short', 'loc_A5DD']
mov ['al,', '[ebp+var_71]']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_50]']
cmp ['eax,', '0FF01h']
jge ['short', 'loc_A5D8']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A5D3']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '2']
jmp ['short', 'loc_A5D8']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_A5F6']
jmp ['loc_A36F']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A5EC']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_A5F6']
jmp ['loc_A36F']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN34']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '138h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
dd ['offset', '$LN33']
dd ['offset', '$LN32']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?composeAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CCAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?composeAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CCAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_154]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+arg_14]']
call ['?isEmpty@ReorderingBuffer@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['loc_A7B6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?findNextCompBoundary@Normalizer2Impl@icu_56@@ABEPB_WPB_W0@Z']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_24]']
jz ['loc_A7B6']
mov ['ecx,', '[ebp+arg_14]']
call ['?getLimit@ReorderingBuffer@icu_56@@QAEPA_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
call ['?getStart@ReorderingBuffer@icu_56@@QAEPA_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?findPreviousCompBoundary@Normalizer2Impl@icu_56@@ABEPB_WPB_W0@Z']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+arg_14]']
call ['?getLimit@ReorderingBuffer@icu_56@@QAEPA_WXZ']
sub ['eax,', '[ebp+var_30]']
sar ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
lea ['ecx,', '[ebp+var_84]']
call ['??0UnicodeString@icu_56@@QAE@PB_WH@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
call ['?removeSuffix@ReorderingBuffer@icu_56@@QAEXH@Z']
lea ['eax,', '[ebp+var_84]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_84]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z']
lea ['ecx,', '[ebp+var_84]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
push ['1']
movzx ['edx,', '[ebp+arg_C]']
push ['edx']
lea ['ecx,', '[ebp+var_84]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+var_90]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
mov ['eax,', '[ebp+var_90]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?compose@Normalizer2Impl@icu_56@@QBECPB_W0CCAAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A79E']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_84]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
jmp ['short', 'loc_A80A']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+arg_0],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_84]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_A7DF']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
push ['1']
movzx ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?compose@Normalizer2Impl@icu_56@@QBECPB_W0CCAAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
jmp ['short', 'loc_A80A']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_A7F6']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strchr_56']
add ['esp,', '8']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_14]']
call ['?appendZeroCC@ReorderingBuffer@icu_56@@QAECPB_W0AAW4UErrorCode@@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '154h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
align ['4']
dd ['offset', '$LN12']
dd ['offset', '$LN10_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?composeAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CCAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z$0 proc	near
lea ['ecx,', '[ebp-84h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__ehhandler$?composeAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CCAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-158h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?composeAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CCAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?composeAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CCAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?composeAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CCAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@ABECHG@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A907']
mov ['al,', '1']
jmp ['loc_AA1A']
jmp ['loc_AA15']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isMaybeOrNonZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A927']
xor ['al,', 'al']
jmp ['loc_AA1A']
jmp ['loc_AA15']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A964']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+arg_4],', 'ax']
jmp ['loc_AA15']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_20],', 'cx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '1Fh']
jnz ['short', 'loc_A98E']
xor ['al,', 'al']
jmp ['loc_AA1A']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '80h']
jz ['short', 'loc_A9AC']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax-2]']
and ['ecx,', '0FF00h']
jz ['short', 'loc_A9AC']
xor ['al,', 'al']
jmp ['short', 'loc_AA1A']
mov ['[ebp+var_2C],', '1']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_A9FB']
mov ['eax,', '[ebp+var_38]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['ecx,', 'ax']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isCompYesAndZeroCC@Normalizer2Impl@icu_56@@ABECG@Z']
jmp ['short', 'loc_AA1A']
jmp ['loc_A8E7']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasCompBoundaryAfter@Normalizer2Impl@icu_56@@QBECHCC@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
call ['?isInert@Normalizer2Impl@icu_56@@CACG@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AA83']
mov ['al,', '1']
jmp ['loc_AB96']
jmp ['loc_AB91']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
cmp ['eax,', 'edx']
jg ['short', 'loc_AADA']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isHangul@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AAC3']
movzx ['edx,', 'word', 'ptr', '[ebp+arg_0]']
push ['edx']
call ['?isHangulWithoutJamoT@Hangul@icu_56@@SAC_W@Z']
add ['esp,', '4']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_AAC3']
mov ['[ebp+var_F1],', '1']
jmp ['short', 'loc_AACA']
mov ['[ebp+var_F1],', '0']
mov ['al,', '[ebp+var_F1]']
jmp ['loc_AB96']
jmp ['loc_AB91']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_AAF2']
mov ['ecx,', '[ebp+var_8]']
mov ['dx,', '[ecx+10h]']
mov ['[ebp-0F2h],', 'dx']
jmp ['short', 'loc_AB00']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax+14h]']
mov ['[ebp-0F2h],', 'cx']
movzx ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[ebp-0F2h]']
cmp ['edx,', 'eax']
jl ['short', 'loc_AB18']
xor ['al,', 'al']
jmp ['loc_AB96']
jmp ['short', 'loc_AB91']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AB42']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_AB91']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[eax]']
mov ['[ebp+var_2C],', 'cx']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '20h']
jnz ['short', 'loc_AB82']
movsx ['ecx,', '[ebp+arg_4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_AB79']
movzx ['edx,', '[ebp+var_2C]']
cmp ['edx,', '1FFh']
jg ['short', 'loc_AB82']
mov ['[ebp+var_F1],', '1']
jmp ['short', 'loc_AB89']
mov ['[ebp+var_F1],', '0']
mov ['al,', '[ebp+var_F1]']
jmp ['short', 'loc_AB96']
jmp ['loc_AA53']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findPreviousCompBoundary@Normalizer2Impl@icu_56@@ABEPB_WPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0BackwardUTrie2StringIterator@icu_56@@QAE@PBUUTrie2@@PB_W1@Z']
lea ['ecx,', '[ebp+var_24]']
call ['?previous16@BackwardUTrie2StringIterator@icu_56@@QAEGXZ']
mov ['[ebp+var_30],', 'ax']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@ABECHG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_ABE6']
mov ['eax,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
dd ['offset', '$LN7_0']
dd ['offset', '$LN6_2']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0BackwardUTrie2StringIterator@icu_56@@QAE@PBUUTrie2@@PB_W1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UTrie2StringIterator@icu_56@@QAE@PBUUTrie2@@PB_W@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findNextCompBoundary@Normalizer2Impl@icu_56@@ABEPB_WPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
call ['??0ForwardUTrie2StringIterator@icu_56@@QAE@PBUUTrie2@@PB_W1@Z']
lea ['ecx,', '[ebp+var_24]']
call ['?next16@ForwardUTrie2StringIterator@icu_56@@QAEGXZ']
mov ['[ebp+var_30],', 'ax']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasCompBoundaryBefore@Normalizer2Impl@icu_56@@ABECHG@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_ACE2']
mov ['eax,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
dd ['offset', '$LN7_1']
dd ['offset', '$LN6_3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
cmp ['eax,', 'edx']
jg ['short', 'loc_AD9A']
xor ['eax,', 'eax']
jmp ['loc_AE72']
jmp ['loc_AE6D']
movzx ['eax,', '[ebp+var_14]']
cmp ['eax,', '0FE00h']
jl ['short', 'loc_ADC9']
movzx ['eax,', '[ebp+var_14]']
and ['eax,', '0FFh']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
movzx ['ecx,', '[ebp+var_14]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
jmp ['loc_AE72']
jmp ['loc_AE6D']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
cmp ['eax,', 'edx']
jl ['short', 'loc_ADE4']
xor ['eax,', 'eax']
jmp ['loc_AE72']
jmp ['loc_AE6D']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?isDecompNoAlgorithmic@Normalizer2Impl@icu_56@@ABECG@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_AE0E']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_AE6D']
movzx ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[eax]']
mov ['[ebp+var_2C],', 'cx']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '1Fh']
jnz ['short', 'loc_AE3A']
mov ['eax,', '1FFh']
jmp ['short', 'loc_AE72']
jmp ['short', 'loc_AE6D']
movzx ['eax,', '[ebp+var_2C]']
sar ['eax,', '8']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '80h']
jz ['short', 'loc_AE67']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax-2]']
and ['ecx,', '0FF00h']
movzx ['edx,', '[ebp+var_14]']
or ['edx,', 'ecx']
mov ['[ebp+var_14],', 'dx']
mov ['ax,', '[ebp+var_14]']
jmp ['short', 'loc_AE72']
jmp ['loc_AD6F']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeFCD@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_AF3B']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['300h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?copyLowPrefixFromNulTerminated@Normalizer2Impl@icu_56@@ABEPB_WPB_WHPAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_AEF7']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_B285']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_AF2A']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax-2]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['edx,', 'ax']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '1']
jle ['short', 'loc_AF2A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strchr_56']
add ['esp,', '8']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_38],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_44],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['loc_B08B']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '300h']
jge ['short', 'loc_AF82']
mov ['eax,', '[ebp+var_38]']
not ['eax']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
jmp ['loc_B086']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?singleLeadMightHaveNonZeroFCD16@Normalizer2Impl@icu_56@@QBECH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_AFAA']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
jmp ['loc_B086']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['loc_B047']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '400h']
jnz ['short', 'loc_B005']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_B003']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+2]']
mov ['[ebp+var_50],', 'cx']
movzx ['edx,', '[ebp+var_50]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['short', 'loc_B003']
mov ['eax,', '[ebp+var_38]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_50]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_B047']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_B047']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax-2]']
mov ['[ebp+var_50],', 'cx']
movzx ['edx,', '[ebp+var_50]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_B047']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
movzx ['eax,', '[ebp+var_50]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_44],', 'ax']
movzx ['ecx,', '[ebp+var_44]']
cmp ['ecx,', '0FFh']
jg ['short', 'loc_B084']
movzx ['eax,', '[ebp+var_44]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_38]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_B086']
jmp ['short', 'loc_B08B']
jmp ['loc_AF4E']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_2C]']
jz ['loc_B1A5']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_B0BD']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?appendZeroCC@ReorderingBuffer@icu_56@@QAECPB_W0AAW4UErrorCode@@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_B0BD']
jmp ['loc_B282']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_B0CA']
jmp ['loc_B282']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_B128']
mov ['eax,', '[ebp+var_20]']
not ['eax']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_5C],', '180h']
jge ['short', 'loc_B0F9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_5C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+28h]']
mov ['[ebp+var_130],', 'ecx']
jmp ['short', 'loc_B10E']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['eax,', 'ax']
mov ['[ebp+var_130],', 'eax']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '1']
jle ['short', 'loc_B126']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_B19D']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '2']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_B191']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_68]']
jnb ['short', 'loc_B191']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax-2]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0D800h']
jnz ['short', 'loc_B191']
mov ['eax,', '[ebp+var_68]']
sub ['eax,', '2']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
shl ['ecx,', '0Ah']
mov ['edx,', '[ebp+var_68]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
lea ['ecx,', '[ecx+eax-35FDC00h]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getFCD16FromNormData@Normalizer2Impl@icu_56@@QBEGH@Z']
movzx ['edx,', 'ax']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '1']
jle ['short', 'loc_B19D']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_B1B2']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_B1B2']
jmp ['loc_B282']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_38]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFh']
movzx ['ecx,', '[ebp+var_44]']
sar ['ecx,', '8']
cmp ['eax,', 'ecx']
jg ['short', 'loc_B21E']
movzx ['eax,', '[ebp+var_44]']
and ['eax,', '0FFh']
cmp ['eax,', '1']
jg ['short', 'loc_B1F1']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_B210']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?appendZeroCC@ReorderingBuffer@icu_56@@QAECHAAW4UErrorCode@@@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_B210']
jmp ['short', 'loc_B282']
movzx ['eax,', '[ebp+var_44]']
mov ['[ebp+var_20],', 'eax']
jmp ['loc_AF48']
jmp ['short', 'loc_B27D']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_B22B']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_B285']
jmp ['short', 'loc_B27D']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_14]']
sar ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?removeSuffix@ReorderingBuffer@icu_56@@QAEXH@Z']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?findNextFCDBoundary@Normalizer2Impl@icu_56@@ABEPB_WPB_W0@Z']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?decomposeShort@Normalizer2Impl@icu_56@@ABECPB_W0AAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_B270']
jmp ['short', 'loc_B282']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['loc_AF48']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeFCDAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?makeFCDAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_154]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+arg_10]']
call ['?isEmpty@ReorderingBuffer@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['loc_B40B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?findNextFCDBoundary@Normalizer2Impl@icu_56@@ABEPB_WPB_W0@Z']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+var_24]']
jz ['loc_B40B']
mov ['ecx,', '[ebp+arg_10]']
call ['?getLimit@ReorderingBuffer@icu_56@@QAEPA_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?getStart@ReorderingBuffer@icu_56@@QAEPA_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?findPreviousFCDBoundary@Normalizer2Impl@icu_56@@ABEPB_WPB_W0@Z']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?getLimit@ReorderingBuffer@icu_56@@QAEPA_WXZ']
sub ['eax,', '[ebp+var_30]']
sar ['eax,', '1']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
lea ['ecx,', '[ebp+var_84]']
call ['??0UnicodeString@icu_56@@QAE@PB_WH@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
call ['?removeSuffix@ReorderingBuffer@icu_56@@QAEXH@Z']
lea ['eax,', '[ebp+var_84]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
call ['??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_84]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z']
lea ['ecx,', '[ebp+var_84]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
lea ['ecx,', '[ebp+var_84]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['edx,', '[ebp+var_90]']
lea ['eax,', '[edx+eax*2]']
push ['eax']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?makeFCD@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_B3F3']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_84]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
jmp ['short', 'loc_B458']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+arg_0],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_84]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_B42D']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?makeFCD@Normalizer2Impl@icu_56@@QBEPB_WPB_W0PAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
jmp ['short', 'loc_B458']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_B444']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strchr_56']
add ['esp,', '8']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_10]']
call ['?appendZeroCC@ReorderingBuffer@icu_56@@QAECPB_W0AAW4UErrorCode@@@Z']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '154h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
dd ['offset', '$LN12_0']
dd ['offset', '$LN10_1']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?makeFCDAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z$0 proc near
lea ['ecx,', '[ebp-84h]']
jmp ['??1UnicodeString@icu_56@@UAE@XZ']
endp
__ehhandler$?makeFCDAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-158h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?makeFCDAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?makeFCDAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?makeFCDAndAppend@Normalizer2Impl@icu_56@@QBEXPB_W0CAAVUnicodeString@2@AAVReorderingBuffer@2@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findPreviousFCDBoundary@Normalizer2Impl@icu_56@@ABEPB_WPB_W0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_B558']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?previousFCD16@Normalizer2Impl@icu_56@@QBEGPB_WAAPB_W@Z']
movzx ['edx,', 'ax']
cmp ['edx,', '0FFh']
jle ['short', 'loc_B558']
jmp ['short', 'loc_B533']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findNextFCDBoundary@Normalizer2Impl@icu_56@@ABEPB_WPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_B5C7']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?nextFCD16@Normalizer2Impl@icu_56@@QBEGAAPB_WPB_W@Z']
movzx ['edx,', 'ax']
cmp ['edx,', '0FFh']
jg ['short', 'loc_B5C5']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_B5CA']
jmp ['short', 'loc_B597']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0CanonIterData@icu_56@@QAE@AAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
push ['0']
call ['_utrie2_open_56']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
push ['offset', '_uprv_deleteUObject_56']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1CanonIterData@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_utrie2_close_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??1UVector@icu_56@@UAE@XZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?addToStartSet@CanonIterData@icu_56@@QAEXHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?addToStartSet@CanonIterData@icu_56@@QAEXHHAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_utrie2_get32_56']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '3FFFFFh']
jnz ['short', 'loc_B721']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_B721']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
or ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_utrie2_set32_56']
add ['esp,', '10h']
jmp ['loc_B82A']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '200000h']
jnz ['loc_B807']
push ['34h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_B762']
mov ['ecx,', '[ebp+var_104]']
call ['??0UnicodeSet@icu_56@@QAE@XZ']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_B76C']
mov ['[ebp+var_118],', '0']
mov ['eax,', '[ebp+var_118]']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_B79C']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_B82A']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '1FFFFFh']
mov ['[ebp+var_38],', 'eax']
mov ['esi,', '[ebp+var_20]']
and ['esi,', '0FFE00000h']
or ['esi,', '200000h']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
call ['?size@UVector@icu_56@@QBEHXZ']
or ['esi,', 'eax']
mov ['[ebp+var_20],', 'esi']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_utrie2_set32_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
call ['?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_B805']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
jmp ['short', 'loc_B81E']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '1FFFFFh']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
call ['??AUVector@icu_56@@QBEPAXH@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?addToStartSet@CanonIterData@icu_56@@QAEXHHAAW4UErrorCode@@@Z$0	proc near
mov ['eax,', '[ebp-104h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?addToStartSet@CanonIterData@icu_56@@QAEXHHAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-11Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?addToStartSet@CanonIterData@icu_56@@QAEXHHAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?addToStartSet@CanonIterData@icu_56@@QAEXHHAAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?addToStartSet@CanonIterData@icu_56@@QAEXHHAAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeCanonIterDataFromNorm16@Normalizer2Impl@icu_56@@QBEXHHGAAUCanonIterData@2@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '144h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '51h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_B8ED']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ch]']
movzx ['edx,', '[ebp+arg_8]']
cmp ['ecx,', 'edx']
jg ['short', 'loc_B8F2']
movzx ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+10h]']
cmp ['eax,', 'edx']
jge ['short', 'loc_B8F2']
jmp ['loc_BBA5']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_B903']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jg ['loc_BBA5']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_utrie2_get32_56']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
movzx ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
cmp ['eax,', 'edx']
jl ['short', 'loc_B95F']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '80000000h']
mov ['[ebp+var_2C],', 'eax']
movzx ['eax,', '[ebp+arg_8]']
cmp ['eax,', '0FE00h']
jge ['short', 'loc_B95A']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '40000000h']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_BB7E']
movzx ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
cmp ['eax,', 'edx']
jge ['short', 'loc_B97E']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '40000000h']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_BB7E']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_38],', 'eax']
mov ['ax,', '[ebp+arg_8]']
mov ['[ebp+var_44],', 'ax']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+12h]']
movzx ['edx,', '[ebp+var_44]']
cmp ['ecx,', 'edx']
jg ['short', 'loc_B9D0']
movzx ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+14h]']
cmp ['eax,', 'edx']
jge ['short', 'loc_B9D0']
movzx ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?mapAlgorithmic@Normalizer2Impl@icu_56@@ABEHHG@Z']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_44],', 'ax']
jmp ['short', 'loc_B98C']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ch]']
movzx ['edx,', '[ebp+var_44]']
cmp ['ecx,', 'edx']
jg ['loc_BB6A']
movzx ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+12h]']
cmp ['eax,', 'edx']
jge ['loc_BB6A']
movzx ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getMapping@Normalizer2Impl@icu_56@@ABEPBGG@Z']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['cx,', '[eax]']
mov ['[ebp+var_5C],', 'cx']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '1Fh']
mov ['[ebp+var_68],', 'eax']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '80h']
jz ['short', 'loc_BA47']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_38]']
jnz ['short', 'loc_BA47']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[eax-2]']
and ['ecx,', '0FFh']
jz ['short', 'loc_BA47']
mov ['eax,', '[ebp+var_2C]']
or ['eax,', '80000000h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_68],', '0']
jz ['loc_BB68']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '2']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_74],', '0']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_BAA9']
mov ['eax,', '[ebp+var_38]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['?addToStartSet@CanonIterData@icu_56@@QAEXHHAAW4UErrorCode@@@Z']
movzx ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+10h]']
cmp ['eax,', 'edx']
jl ['loc_BB68']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_68]']
jge ['loc_BB68']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_BB24']
mov ['eax,', '[ebp+var_38]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_50]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_utrie2_get32_56']
add ['esp,', '8']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '80000000h']
jnz ['short', 'loc_BB63']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
or ['ecx,', '80000000h']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_utrie2_set32_56']
add ['esp,', '10h']
jmp ['loc_BAD0']
jmp ['short', 'loc_BB7E']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['?addToStartSet@CanonIterData@icu_56@@QAEXHHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_20]']
jz ['short', 'loc_BBA0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_utrie2_set32_56']
add ['esp,', '10h']
jmp ['loc_B8FA']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ensureCanonIterData@Normalizer2Impl@icu_56@@QBECAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '_initCanonIterData']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1A8h']
push ['edx']
call ['??$umtx_initOnce@PAVNormalizer2Impl@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPAVNormalizer2Impl@0@AAW4UErrorCode@@@Z12@Z']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_initCanonIterData proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1B0h],', '0']
jz ['short', 'loc_BCA4']
mov ['ecx,', 'ds:?__LINE__Var@?1??initCanonIterData@@9@4JA@1f283af5']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GM@KKIEGOOE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1DE@GKOLFFAH@?$AAi?$AAm?$AAp?$AAl?$AA?9?$AA?$DO?$AAf?$AAC?$AAa?$AAn?$AAo?$AAn?$AAI?$AAt?$AAe?$AAr?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['1Ch']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_BCD4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0CanonIterData@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_BCDE']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_EC]']
mov ['[edx+1B0h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+1B0h],', '0']
jnz ['short', 'loc_BD0E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_BD59']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '_enumCIDRangeHandler']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?getNormTrie@Normalizer2Impl@icu_56@@QBEPBUUTrie2@@XZ']
push ['eax']
call ['_utrie2_enum_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1B0h]']
mov ['eax,', '[edx]']
push ['eax']
call ['_utrie2_freeze_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_BDBE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1B0h]']
mov ['[ebp+var_C8],', 'ecx']
mov ['edx,', '[ebp+var_C8]']
mov ['[ebp+var_D4],', 'edx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_BDA7']
push ['1']
mov ['ecx,', '[ebp+var_D4]']
call ['??_GCanonIterData@icu_56@@QAEPAXI@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_BDB1']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1B0h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_1DE@GKOLFFAH@?$AAi?$AAm?$AAp?$AAl?$AA?9?$AA?$DO?$AAf?$AAC?$AAa?$AAn?$AAo?$AAn?$AAI?$AAt?$AAe?$AAr?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<impl->']
dw ['3Eh']
unicode ['0,', '<fCanonIterData', '==', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1GM@KKIEGOOE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\normalizer2impl.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??initCanonIterData@@9@4JA@1f283af5']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_enumCIDRangeHandler proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_BECC']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+1B0h]']
push ['edx']
movzx ['eax,', 'word', 'ptr', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?makeCanonIterDataFromNorm16@Normalizer2Impl@icu_56@@QBEXHHGAAUCanonIterData@2@AAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_4']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN5_1']
dd ['offset', '$LN4_0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCanonValue@Normalizer2Impl@icu_56@@ABEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1B0h]']
mov ['eax,', '[edx]']
push ['eax']
call ['_utrie2_get32_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCanonStartSet@Normalizer2Impl@icu_56@@ABEABVUnicodeSet@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+1B0h]']
add ['ecx,', '4']
call ['??AUVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isCanonSegmentStarter@Normalizer2Impl@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getCanonValue@Normalizer2Impl@icu_56@@ABEHH@Z']
test ['eax,', 'eax']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCanonStartSet@Normalizer2Impl@icu_56@@QBECHAAVUnicodeSet@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getCanonValue@Normalizer2Impl@icu_56@@ABEHH@Z']
and ['eax,', '7FFFFFFFh']
mov ['[ebp+var_14],', 'eax']
jnz ['short', 'loc_C050']
xor ['al,', 'al']
jmp ['loc_C12C']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+58h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '1FFFFFh']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '200000h']
jz ['short', 'loc_C0A0']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getCanonStartSet@Normalizer2Impl@icu_56@@ABEABVUnicodeSet@2@H@Z']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_C0B2']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_C0B2']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '40000000h']
jz ['short', 'loc_C12A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getNorm16@Normalizer2Impl@icu_56@@QBEGH@Z']
mov ['[ebp+var_2C],', 'ax']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '1']
jnz ['short', 'loc_C110']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1100h']
imul ['eax,', '24Ch']
add ['eax,', '0AC00h']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '24Bh']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+34h]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_C12A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?getCompositionsList@Normalizer2Impl@icu_56@@ABEPBGG@Z']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?addComposites@Normalizer2Impl@icu_56@@ABEXPBGAAVUnicodeSet@2@@Z']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_unorm2_swap_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '170h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_170]']
mov ['ecx,', '5Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_swapDataHeader_56']
add ['esp,', '14h']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_C1A6']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C1AD']
xor ['eax,', 'eax']
jmp ['loc_C48C']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '4Eh']
jnz ['short', 'loc_C1FE']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '72h']
jnz ['short', 'loc_C1FE']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '6Dh']
jnz ['short', 'loc_C1FE']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
cmp ['ecx,', '32h']
jnz ['short', 'loc_C1FE']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '1']
jz ['short', 'loc_C247']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '2']
jz ['short', 'loc_C247']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Bh]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ah]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
push ['eax']
push ['offset', '??_C@_0GM@OPEIABAL@unorm2_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_C48C']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+Src]']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_C299']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '38h']
jge ['short', 'loc_C299']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0EF@DIMENAMC@unorm2_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_C48C']
mov ['[ebp+var_88],', '0']
jmp ['short', 'loc_C2B4']
mov ['eax,', '[ebp+var_88]']
add ['eax,', '1']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0Dh']
jg ['short', 'loc_C2E2']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_readInt32_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_88]']
mov ['[ebp+ecx*4+var_7C],', 'eax']
jmp ['short', 'loc_C2A5']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+arg_8],', '0']
jl ['loc_C483']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Size]']
jge ['short', 'loc_C325']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_0EM@MBCDIOFJ@unorm2_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_C48C']
mov ['eax,', '[ebp+Src]']
cmp ['eax,', '[ebp+Dst]']
jz ['short', 'loc_C352']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_94],', '0']
mov ['eax,', '[ebp+var_7C]']
mov ['[ebp+var_A0],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+var_A0]']
sub ['edx,', '[ebp+var_94]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_A0]']
mov ['[ebp+var_94],', 'eax']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_A0],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_94]']
push ['ecx']
mov ['edx,', '[ebp+var_A0]']
sub ['edx,', '[ebp+var_94]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_94]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_utrie2_swap_56']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_A0]']
mov ['[ebp+var_94],', 'eax']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_A0],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_94]']
push ['ecx']
mov ['edx,', '[ebp+var_A0]']
sub ['edx,', '[ebp+var_94]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_94]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_A0]']
mov ['[ebp+var_94],', 'eax']
mov ['eax,', '[ebp+var_70]']
mov ['[ebp+var_A0],', 'eax']
mov ['eax,', '[ebp+var_A0]']
mov ['[ebp+var_94],', 'eax']
mov ['eax,', '[ebp+var_94]']
cmp ['eax,', '[ebp+Size]']
jz ['short', 'loc_C483']
mov ['ecx,', 'ds:?__LINE__Var@?1??unorm2_swap_56@@9@4JA']
add ['ecx,', '5Ch']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1GM@KKIEGOOE@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BK@EENNJCJN@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$DN?$AA?$DN?$AAs?$AAi?$AAz?$AAe?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+Size]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '170h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN17']
dd ['offset', '$LN16']
assume ['cs:_rdata']
public ['??_C@_1BK@EENNJCJN@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$DN?$AA?$DN?$AAs?$AAi?$AAz?$AAe?$AA?$AA@']
unicode ['0,', '<offset==size>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??unorm2_swap_56@@9@4JA']
assume ['cs:_rdata']
public ['??_C@_0EM@MBCDIOFJ@unorm2_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd@']
db ["'zer2", "data',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0EF@DIMENAMC@unorm2_swap?$CI?$CJ?3?5too?5few?5bytes?5?$CI?$CFd@']
db ["'ta',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0GM@OPEIABAL@unorm2_swap?$CI?$CJ?3?5data?5format?5?$CF02x?4@']
db ["'2x)", 'is', 'not', 'recognized', 'as', 'Normalizer2', "data',0Ah,0"]
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_C6E2']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_C6EE']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??$umtx_initOnce@PAVNormalizer2Impl@icu_56@@@icu_56@@YAXAAUUInitOnce@0@P6AXPAVNormalizer2Impl@0@AAW4UErrorCode@@@Z12@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C731']
jmp ['short', 'loc_C7A6']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_loadAcquire@icu_56@@YAHACJ@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_C785']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C785']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['[ebp+arg_4]']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z']
add ['esp,', '4']
jmp ['short', 'loc_C7A6']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C7A6']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+Destination]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InterlockedCompareExchange@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z proc near
sub ['ecx,', '4']
jmp ['??_EUnicodeFilter@icu_56@@UAEPAXI@Z']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1UObject@icu_56@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__purecall:near']
extrn ['?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:near']
extrn ['??1UnicodeFunctor@icu_56@@UAE@XZ:near']
extrn ['??1UnicodeMatcher@icu_56@@UAE@XZ:near']
extrn ['?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:near']
extrn ['?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:near']
extrn ['??1UnicodeFilter@icu_56@@UAE@XZ:near']
extrn ['?hasMetaData@Replaceable@icu_56@@UBECXZ:near']
extrn ['?clone@Replaceable@icu_56@@UBEPAV12@XZ:near']
extrn ['??1Replaceable@icu_56@@UAE@XZ:near']
extrn ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z:near']
extrn ['?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:near']
extrn ['?Flush@ByteSink@icu_56@@UAEXXZ:near']
extrn ['??1ByteSink@icu_56@@UAE@XZ:near']
extrn ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:near']
extrn ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:near']
extrn ['??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:near']
extrn ['?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:near']
extrn ['?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:near']
extrn ['?copy@UnicodeString@icu_56@@UAEXHHH@Z:near']
extrn ['?hasMetaData@UnicodeString@icu_56@@UBECXZ:near']
extrn ['?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:near']
extrn ['?getLength@UnicodeString@icu_56@@MBEHXZ:near']
extrn ['?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:near']
extrn ['?getChar32At@UnicodeString@icu_56@@MBEHH@Z:near']
extrn ['?doHashCode@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?refCount@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:near']
extrn ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:near']
extrn ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['_u_strlen_56:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:near']
extrn ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:near']
extrn ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:near']
extrn ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:near']
extrn ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:near']
extrn ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:near']
extrn ['?unBogus@UnicodeString@icu_56@@AAEXXZ:near']
extrn ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:near']
extrn ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z:near']
extrn ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:near']
extrn ['?containsNone@UnicodeSet@icu_56@@QBECHH@Z:near']
extrn ['?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z:near']
extrn ['?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z:near']
extrn ['?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:near']
extrn ['?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:near']
extrn ['??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['?getRawDecomposition@Normalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:near']
extrn ['?composePair@Normalizer2@icu_56@@UBEHHH@Z:near']
extrn ['?getCombiningClass@Normalizer2@icu_56@@UBEEH@Z:near']
extrn ['??1Normalizer2@icu_56@@UAE@XZ:near']
extrn ['?normalize@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@ABV32@AAV32@AAW4UErrorCode@@@Z:near']
extrn ['?normalizeSecondAndAppend@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z:near']
extrn ['?append@FilteredNormalizer2@icu_56@@UBEAAVUnicodeString@2@AAV32@ABV32@AAW4UErrorCode@@@Z:near']
extrn ['?getDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:near']
extrn ['?getRawDecomposition@FilteredNormalizer2@icu_56@@UBECHAAVUnicodeString@2@@Z:near']
extrn ['?composePair@FilteredNormalizer2@icu_56@@UBEHHH@Z:near']
extrn ['?getCombiningClass@FilteredNormalizer2@icu_56@@UBEEH@Z:near']
extrn ['?isNormalized@FilteredNormalizer2@icu_56@@UBECABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['?quickCheck@FilteredNormalizer2@icu_56@@UBE?AW4UNormalizationCheckResult@@ABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['?spanQuickCheckYes@FilteredNormalizer2@icu_56@@UBEHABVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['?hasBoundaryBefore@FilteredNormalizer2@icu_56@@UBECH@Z:near']
extrn ['?hasBoundaryAfter@FilteredNormalizer2@icu_56@@UBECH@Z:near']
extrn ['?isInert@FilteredNormalizer2@icu_56@@UBECH@Z:near']
extrn ['??1FilteredNormalizer2@icu_56@@UAE@XZ:near']
extrn ['_umtx_lock_56:near']
extrn ['_umtx_unlock_56:near']
extrn ['?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z:near']
extrn ['?indexOf@UVector@icu_56@@QBEHPAXH@Z:near']
extrn ['?indexOf@UVector@icu_56@@QBEHHH@Z:near']
extrn ['?elementAt@UVector@icu_56@@QBEPAXH@Z:near']
extrn ['?elementAti@UVector@icu_56@@QBEHH@Z:near']
extrn ['??8UVector@icu_56@@QAECABV01@@Z:near']
extrn ['?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:near']
extrn ['?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:near']
extrn ['?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z:near']
extrn ['_u_memcmp_56:near']
extrn ['_u_memcpy_56:near']
extrn ['_memset:near']
extrn ['_utrie2_enum_56:near']
extrn ['?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:near']
extrn ['?setToBogus@UnicodeString@icu_56@@QAEXXZ:near']
extrn ['_u_strchr_56:near']
extrn ['?next16@ForwardUTrie2StringIterator@icu_56@@QAEGXZ:near']
extrn ['??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['??0UnicodeString@icu_56@@QAE@PB_WH@Z:near']
extrn ['?previous16@BackwardUTrie2StringIterator@icu_56@@QAEGXZ:near']
extrn ['??0UVector@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z:near']
extrn ['_uprv_deleteUObject_56:near']
extrn ['_utrie2_open_56:near']
extrn ['??1UVector@icu_56@@UAE@XZ:near']
extrn ['_utrie2_close_56:near']
extrn ['??0UnicodeSet@icu_56@@QAE@XZ:near']
extrn ['??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['_utrie2_set32_56:near']
extrn ['_utrie2_get32_56:near']
extrn ['_utrie2_freeze_56:near']
extrn ['__imp___wassert:near']
extrn ['_utrie2_swap_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_udata_readInt32_56:near']
extrn ['_udata_printError_56:near']
extrn ['_udata_swapDataHeader_56:near']
extrn ['?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near']
extrn ['?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near']
extrn ['__imp__InterlockedCompareExchange@12:near']
end

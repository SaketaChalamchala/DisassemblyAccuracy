endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??2UMemory@icu_56@@SAPAXIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3UMemory@icu_56@@SAXPAX0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UObject@icu_56@@6B@']
public ['??_7UObject@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4UObject@icu_56@@6B@']
dd ['offset', '??_R0?AVUObject@icu_56@@@8']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
align ['8']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
align ['10h']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_617']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_621']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UObject@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUObject@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6A7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUObject@icu_56@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_721']
push ['offset', '??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_719']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_740']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_73D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4Replaceable@icu_56@@6B@']
public ['??_7Replaceable@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?hasMetaData@Replaceable@icu_56@@UBECXZ']
dd ['offset', '?clone@Replaceable@icu_56@@UBEPAV12@XZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4Replaceable@icu_56@@6B@']
dd ['offset', '??_R0?AVReplaceable@icu_56@@@8']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVReplaceable@icu_56@@@8']
dd ['0']
dd ['56413F2Eh,', '6C706552h,', '61656361h']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3Replaceable@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Replaceable@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_8D3']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_94D']
push ['offset', '??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_945']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_96C']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_969']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@IAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@Replaceable@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@Replaceable@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?char32At@Replaceable@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@PBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@StringPiece@icu_56@@QBEPBDXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@StringPiece@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@StringPiece@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@StringPiece@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clear@StringPiece@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@StringPiece@icu_56@@QAEXPBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_prefix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_D3D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_D21']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_suffix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_D97']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jg ['short', 'loc_D8D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_D97']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ByteSink@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ByteSink@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4ByteSink@icu_56@@6B@']
public ['??_7ByteSink@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z']
dd ['offset', '?Flush@ByteSink@icu_56@@UAEXXZ']
assume ['cs:_rdata$r']
public ['??_R4ByteSink@icu_56@@6B@']
dd ['offset', '??_R0?AVByteSink@icu_56@@@8']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVByteSink@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3ByteSink@icu_56@@8']
dd ['2']
dd ['offset', '??_R2ByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_F27']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_FA1']
push ['offset', '??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_F99']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_FC0']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_FBD']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_112F']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_11A9']
push ['offset', '??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['40h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_11A1']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_11C8']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_11C5']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_1216']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1232']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx],', 'eax']
jle ['short', 'loc_1232']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_1289']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_129B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_14]']
jle ['short', 'loc_129B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_12AE']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_12CA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['[edx],', 'ecx']
jle ['short', 'loc_12CA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_131D']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_1329']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1375']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_1381']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeString@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0Replaceable@icu_56@@IAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeString@icu_56@@6B@']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeString@icu_56@@6B@']
public ['??_7UnicodeString@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ']
dd ['offset', '?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z']
dd ['offset', '?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z']
dd ['offset', '?copy@UnicodeString@icu_56@@UAEXHHH@Z']
dd ['offset', '?hasMetaData@UnicodeString@icu_56@@UBECXZ']
dd ['offset', '?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ']
dd ['offset', '?getLength@UnicodeString@icu_56@@MBEHXZ']
dd ['offset', '?getCharAt@UnicodeString@icu_56@@MBE_WH@Z']
dd ['offset', '?getChar32At@UnicodeString@icu_56@@MBEHH@Z']
assume ['cs:_rdata$r']
public ['??_R4UnicodeString@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeString@icu_56@@@8']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeString@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeString@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UnicodeString@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeString@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeString@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasShortLength@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getShortLength@UnicodeString@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
sar ['eax,', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasShortLength@UnicodeString@icu_56@@ABECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_153A']
mov ['ecx,', '[ebp+var_8]']
call ['?getShortLength@UnicodeString@icu_56@@ABEHXZ']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_1546']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_159B']
mov ['[ebp+var_D0],', '1Dh']
jmp ['short', 'loc_15A7']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hashCode@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doHashCode@UnicodeString@icu_56@@ABEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBufferWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '19h']
jnz ['short', 'loc_16B1']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+4]']
and ['eax,', '4']
jz ['short', 'loc_16A8']
mov ['ecx,', '[ebp+var_8]']
call ['?refCount@UnicodeString@icu_56@@ABEHXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_16B1']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_16B8']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
jz ['short', 'loc_1709']
xor ['eax,', 'eax']
jmp ['short', 'loc_1725']
jmp ['short', 'loc_1725']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_171F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '6']
jmp ['short', 'loc_1725']
jmp ['short', 'loc_1725']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1772']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_17A3']
jmp ['short', 'loc_17A3']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_17FA']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
jmp ['short', 'loc_1854']
jmp ['short', 'loc_1854']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1847']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_1847']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1847']
mov ['[ebp+var_E5],', '1']
jmp ['short', 'loc_184E']
mov ['[ebp+var_E5],', '0']
mov ['al,', '[ebp+var_E5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UnicodeString@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??OUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??MUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??PUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??NUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECPB_WH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1CFE']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_1D2F']
jmp ['short', 'loc_1D2F']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1FFA']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_202F']
jmp ['short', 'loc_202F']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_233B']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_233B']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_233E']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_W@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_2863']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_2863']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_2866']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2CA0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_2D10']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['esi,', 'eax']
push ['esi']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2E70']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_2EEE']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
neg ['ecx']
sbb ['ecx,', 'ecx']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_D4],', '0']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_34DF']
mov ['ecx,', '[ebp+var_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['ax,', '[eax+ecx*2]']
jmp ['short', 'loc_34E4']
jmp ['short', 'loc_34E4']
mov ['eax,', '0FFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@UnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AUnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
sar ['ecx,', '5']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setZeroLength@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setShortLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+arg_0]']
shl ['edx,', '5']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '3FFh']
jg ['short', 'loc_3686']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setShortLength@UnicodeString@icu_56@@AAEXH@Z']
jmp ['short', 'loc_36A3']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
or ['ecx,', '0FFE0h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToEmpty@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3EB8']
mov ['ecx,', '[ebp+var_8]']
call ['?setToEmpty@UnicodeString@icu_56@@AAEXXZ']
jmp ['short', 'loc_3EC0']
mov ['ecx,', '[ebp+var_8]']
call ['?setZeroLength@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jg ['short', 'loc_3F14']
cmp ['[ebp+arg_4],', '7FFFFFFFh']
jnz ['short', 'loc_3F14']
mov ['ecx,', '[ebp+var_8]']
call ['?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
jmp ['short', 'loc_3F2A']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?truncate@UnicodeString@icu_56@@QAECH@Z']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?truncate@UnicodeString@icu_56@@QAECH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4036']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_4036']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
xor ['al,', 'al']
jmp ['short', 'loc_4057']
jmp ['short', 'loc_4057']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_4055']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['al,', '1']
jmp ['short', 'loc_4057']
jmp ['short', 'loc_4057']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringEnumeration@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StringEnumeration@icu_56@@6B@']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
call ['??0UnicodeString@icu_56@@QAE@ABV01@@Z']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '44h']
mov ['edi,', '[ebp+var_14]']
add ['edi,', '44h']
mov ['ecx,', '8']
rep ['movsd']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[eax+64h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+68h]']
mov ['[eax+68h],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UObject@icu_56@@UAE@XZ']
endp
__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4StringEnumeration@icu_56@@6B@']
public ['??_7StringEnumeration@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@StringEnumeration@icu_56@@UBEPAV12@XZ']
dd ['offset', '__purecall']
dd ['offset', '?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z']
dd ['offset', '?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z']
dd ['offset', '?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '__purecall']
dd ['offset', '??8StringEnumeration@icu_56@@UBECABV01@@Z']
dd ['offset', '??9StringEnumeration@icu_56@@UBECABV01@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4StringEnumeration@icu_56@@6B@']
dd ['offset', '??_R0?AVStringEnumeration@icu_56@@@8']
dd ['offset', '??_R3StringEnumeration@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVStringEnumeration@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3StringEnumeration@icu_56@@8']
dd ['3']
dd ['offset', '??_R2StringEnumeration@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2StringEnumeration@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@StringEnumeration@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3StringEnumeration@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_431B']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '20h']
jnb ['short', 'loc_4335']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx+44h]']
mov ['[eax+44h],', 'dl']
jmp ['short', 'loc_4312']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[eax+64h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+68h]']
mov ['[eax+68h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GStringEnumeration@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1StringEnumeration@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_43A7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EStringEnumeration@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_4421']
push ['offset', '??1StringEnumeration@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['6Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4419']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_4440']
mov ['ecx,', '[ebp+var_8]']
call ['??1StringEnumeration@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_443D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucnv_MBCSGetFilteredUnicodeSetForUnicode_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '19Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_19C]']
mov ['ecx,', '67h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ADh]']
and ['ecx,', '1']
jz ['short', 'loc_44A2']
mov ['eax,', '440h']
mov ['[ebp+var_38],', 'ax']
jmp ['short', 'loc_44AB']
mov ['eax,', '40h']
mov ['[ebp+var_38],', 'ax']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
test ['ecx,', 'ecx']
jnz ['loc_4607']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0A0h]']
mov ['[ebp+var_74],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_44E1']
mov ['eax,', '0F00h']
mov ['[ebp+var_80],', 'ax']
jmp ['short', 'loc_44EA']
mov ['eax,', '800h']
mov ['[ebp+var_80],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_2C],', 'ax']
jmp ['short', 'loc_44FE']
mov ['ax,', '[ebp+var_2C]']
add ['ax,', '1']
mov ['[ebp+var_2C],', 'ax']
movzx ['eax,', '[ebp+var_2C]']
movzx ['ecx,', '[ebp+var_38]']
cmp ['eax,', 'ecx']
jge ['loc_4602']
movzx ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_44],', 'dx']
movzx ['eax,', '[ebp+var_44]']
movzx ['ecx,', '[ebp+var_38]']
cmp ['eax,', 'ecx']
jle ['loc_45F2']
movzx ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_5C],', 'edx']
xor ['eax,', 'eax']
mov ['[ebp+var_44],', 'ax']
jmp ['short', 'loc_454E']
mov ['ax,', '[ebp+var_44]']
add ['ax,', '1']
mov ['[ebp+var_44],', 'ax']
movzx ['eax,', '[ebp+var_44]']
cmp ['eax,', '40h']
jge ['loc_45F0']
movzx ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_5C]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_45E2']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_74]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_68],', 'edx']
movzx ['eax,', '[ebp+var_80]']
mov ['ecx,', '[ebp+var_68]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['ecx,', '[ebp+var_68]']
add ['ecx,', '2']
mov ['[ebp+var_68],', 'ecx']
cmp ['edx,', 'eax']
jl ['short', 'loc_459E']
mov ['[ebp+var_19C],', '1']
jmp ['short', 'loc_45A8']
mov ['[ebp+var_19C],', '0']
cmp ['[ebp+var_19C],', '0']
jz ['short', 'loc_45CF']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
and ['ecx,', '0Fh']
jnz ['short', 'loc_457B']
jmp ['short', 'loc_45EB']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '10h']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_4542']
jmp ['short', 'loc_45FD']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '400h']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_44F2']
jmp ['loc_4B6B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0A0h]']
mov ['[ebp+var_A4],', 'ecx']
cmp ['[ebp+arg_8],', '1']
setz ['al']
mov ['[ebp+var_C5],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+0ACh]']
mov ['byte', 'ptr', '[ebp+var_19C],', 'cl']
cmp ['byte', 'ptr', '[ebp+var_19C],', '2']
jz ['short', 'loc_464F']
cmp ['byte', 'ptr', '[ebp+var_19C],', '3']
jz ['short', 'loc_465B']
cmp ['byte', 'ptr', '[ebp+var_19C],', '9']
jz ['short', 'loc_464F']
jmp ['short', 'loc_4667']
mov ['[ebp+var_B0],', '3']
jmp ['short', 'loc_4671']
mov ['[ebp+var_B0],', '4']
jmp ['short', 'loc_4671']
mov ['[ebp+var_B0],', '2']
xor ['eax,', 'eax']
mov ['[ebp+var_2C],', 'ax']
jmp ['short', 'loc_4685']
mov ['ax,', '[ebp+var_2C]']
add ['ax,', '1']
mov ['[ebp+var_2C],', 'ax']
movzx ['eax,', '[ebp+var_2C]']
movzx ['ecx,', '[ebp+var_38]']
cmp ['eax,', 'ecx']
jge ['loc_4B6B']
movzx ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_44],', 'dx']
movzx ['eax,', '[ebp+var_44]']
movzx ['ecx,', '[ebp+var_38]']
sar ['ecx,', '1']
cmp ['eax,', 'ecx']
jle ['loc_4B5B']
movzx ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_8C],', 'edx']
xor ['eax,', 'eax']
mov ['[ebp+var_44],', 'ax']
jmp ['short', 'loc_46DA']
mov ['ax,', '[ebp+var_44]']
add ['ax,', '1']
mov ['[ebp+var_44],', 'ax']
movzx ['eax,', '[ebp+var_44]']
cmp ['eax,', '40h']
jge ['loc_4B59']
movzx ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_8C]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jz ['loc_4B4B']
mov ['eax,', '[ebp+var_B0]']
shl ['eax,', '4']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_20]']
imul ['eax,', 'ecx']
add ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '10h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_19C],', 'eax']
cmp ['[ebp+var_19C],', '5']
ja ['loc_4B3E']
mov ['ecx,', '[ebp+var_19C]']
jmp ['ds:$LN88[ecx*4]']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '1']
jz ['short', 'loc_4786']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_98],', 'eax']
jmp ['loc_4872']
movsx ['eax,', '[ebp+var_C5]']
test ['eax,', 'eax']
jz ['loc_4872']
mov ['[ebp+var_D1],', '0']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_19C],', 'eax']
cmp ['[ebp+var_19C],', '2']
jz ['short', 'loc_4816']
cmp ['[ebp+var_19C],', '3']
jz ['short', 'loc_47EF']
cmp ['[ebp+var_19C],', '4']
jz ['short', 'loc_47C8']
jmp ['loc_4849']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_D1]']
or ['edx,', 'ecx']
mov ['[ebp+var_D1],', 'dl']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_D1]']
or ['edx,', 'ecx']
mov ['[ebp+var_D1],', 'dl']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_98]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
or ['ecx,', 'eax']
movzx ['edx,', '[ebp+var_D1]']
or ['edx,', 'ecx']
mov ['[ebp+var_D1],', 'dl']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '2']
mov ['[ebp+var_98],', 'eax']
movzx ['eax,', '[ebp+var_D1]']
test ['eax,', 'eax']
jz ['short', 'loc_4872']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
and ['ecx,', '0Fh']
jnz ['$LN47']
jmp ['loc_4B49']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '1']
jnz ['short', 'loc_48A7']
movsx ['eax,', '[ebp+var_C5]']
test ['eax,', 'eax']
jz ['short', 'loc_48D6']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '100h']
jl ['short', 'loc_48D6']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '2']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
and ['ecx,', '0Fh']
jnz ['short', '$LN33']
jmp ['loc_4B49']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '1']
jnz ['short', 'loc_4916']
movsx ['eax,', '[ebp+var_C5]']
test ['eax,', 'eax']
jz ['short', 'loc_495B']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_BC],', 'ecx']
cmp ['[ebp+var_BC],', '81h']
jz ['short', 'loc_493D']
cmp ['[ebp+var_BC],', '82h']
jnz ['short', 'loc_495B']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '3']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
and ['ecx,', '0Fh']
jnz ['short', '$LN27']
jmp ['loc_4B49']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '1']
jnz ['short', 'loc_499B']
movsx ['eax,', '[ebp+var_C5]']
test ['eax,', 'eax']
jz ['short', 'loc_49E0']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_BC],', 'ecx']
cmp ['[ebp+var_BC],', '8140h']
jb ['short', 'loc_49E0']
cmp ['[ebp+var_BC],', '0EFFCh']
ja ['short', 'loc_49E0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '2']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
and ['ecx,', '0Fh']
jnz ['short', '$LN20']
jmp ['loc_4B49']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '1']
jnz ['short', 'loc_4A20']
movsx ['eax,', '[ebp+var_C5]']
test ['eax,', 'eax']
jz ['short', 'loc_4A76']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_BC],', 'ecx']
mov ['edx,', '[ebp+var_BC]']
sub ['edx,', '0A1A1h']
movzx ['eax,', 'dx']
cmp ['eax,', '5D5Dh']
jg ['short', 'loc_4A76']
mov ['eax,', '[ebp+var_BC]']
sub ['eax,', '0A1h']
movzx ['ecx,', 'al']
cmp ['ecx,', '5Dh']
jg ['short', 'loc_4A76']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '2']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
and ['ecx,', '0Fh']
jnz ['$LN14']
jmp ['loc_4B49']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '1']
jnz ['short', 'loc_4ABA']
movsx ['eax,', '[ebp+var_C5]']
test ['eax,', 'eax']
jz ['short', 'loc_4B10']
mov ['eax,', '[ebp+var_98]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_BC],', 'ecx']
mov ['edx,', '[ebp+var_BC]']
sub ['edx,', '0A1A1h']
movzx ['eax,', 'dx']
cmp ['eax,', '5C5Dh']
jg ['short', 'loc_4B10']
mov ['eax,', '[ebp+var_BC]']
sub ['eax,', '0A1h']
movzx ['ecx,', 'al']
cmp ['ecx,', '5Dh']
jg ['short', 'loc_4B10']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '2']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
and ['ecx,', '0Fh']
jnz ['$LN8']
jmp ['short', 'loc_4B49']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '5']
jmp ['short', 'loc_4B87']
jmp ['short', 'loc_4B54']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '10h']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_46CE']
jmp ['short', 'loc_4B66']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '400h']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_4679']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucnv_extGetUnicodeSet_56']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '19Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN33']
dd ['offset', '$LN27']
dd ['offset', '$LN20']
dd ['offset', '$LN14']
dd ['offset', '$LN8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucnv_MBCSGetUnicodeSetForUnicode_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C8h]']
xor ['eax,', 'eax']
cmp ['edx,', '0DBh']
setz ['al']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ucnv_MBCSGetFilteredUnicodeSetForUnicode_56']
add ['esp,', '14h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSGetUnicodeSet@@YAXPBUUConverter@@PBUUSetAdder@@W4UConverterUnicodeSet@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '8000h']
jz ['short', 'loc_4C87']
mov ['esi,', 'esp']
push ['0D7FFh']
push ['0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['10FFFFh']
push ['0E000h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_4CA2']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_ucnv_MBCSGetUnicodeSetForUnicode_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSLoad@@YAXPAUUConverterSharedData@@PAUUConverterLoadArgs@@PBEPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1E0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1E0]']
mov ['ecx,', '78h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1Ch']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_55],', '0']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '4']
jnz ['short', 'loc_4D07']
mov ['[ebp+var_4C],', '8']
jmp ['short', 'loc_4D57']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5']
jnz ['short', 'loc_4D49']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '3']
jl ['short', 'loc_4D49']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+20h]']
and ['ecx,', '0FF80h']
jnz ['short', 'loc_4D49']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+20h]']
and ['ecx,', '3Fh']
mov ['[ebp+var_4C],', 'ecx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+20h]']
and ['ecx,', '40h']
setnz ['dl']
mov ['[ebp+var_55],', 'dl']
jmp ['short', 'loc_4D57']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_55B8']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_34]']
mov ['dl,', '[ecx+18h]']
mov ['[eax+0ACh],', 'dl']
movsx ['eax,', '[ebp+var_55]']
test ['eax,', 'eax']
jz ['short', 'loc_4D8A']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4D8A']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_55B8']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '8']
mov ['[ebp+var_40],', 'ecx']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_4DAB']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+var_40]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+0C4h],', 'eax']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
cmp ['ecx,', '0Eh']
jnz ['loc_5203']
mov ['[ebp+var_7C],', '1Ch']
mov ['[ebp+var_78],', '0']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_73],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_72],', 'ax']
mov ['[ebp+var_70],', '0']
mov ['[ebp+var_6C],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_64],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+0C4h]']
mov ['[ebp+var_94],', 'ecx']
cmp ['[ebp+var_94],', '0']
jnz ['short', 'loc_4E1C']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_55B8']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+4],', '1']
jz ['short', 'loc_4E33']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Eh']
jmp ['loc_55B8']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[ebp+var_34]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+Str1],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_4E6D']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_55B8']
mov ['[ebp+var_7C],', '1Ch']
mov ['[ebp+var_78],', '2']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax+8]']
mov ['[ebp+var_74],', 'cl']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax+0Ah]']
mov ['[ebp+var_72],', 'cx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_70],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_6C],', 'ecx']
mov ['eax,', '[ebp+Str1]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
call ['_ucnv_load_56']
add ['esp,', '8']
mov ['[ebp+var_88],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4EDA']
jmp ['loc_55B8']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx+45h]']
cmp ['edx,', '2']
jnz ['short', 'loc_4EFB']
mov ['eax,', '[ebp+var_88]']
cmp ['dword', 'ptr', '[eax+0DCh],', '0']
jz ['short', 'loc_4F18']
mov ['eax,', '[ebp+var_88]']
push ['eax']
call ['_ucnv_unload_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_55B8']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4F37']
mov ['eax,', '[ebp+var_88]']
push ['eax']
call ['_ucnv_unload_56']
add ['esp,', '4']
jmp ['loc_55B8']
push ['1']
mov ['eax,', '[ebp+var_88]']
add ['eax,', '1Ch']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['0C8h']
mov ['ecx,', '[ebp+var_88]']
add ['ecx,', '1Ch']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_88]']
mov ['[eax+0C0h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_94]']
mov ['[eax+0C4h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+0A4h],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+0BCh],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+0B8h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx+45h]']
cmp ['edx,', '1']
jz ['short', 'loc_4FEA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx+45h]']
cmp ['edx,', '2']
jnz ['loc_51FE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx+46h]']
cmp ['edx,', '2']
jl ['loc_51FE']
mov ['eax,', '[ebp+var_88]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C8h]']
cmp ['ecx,', '0Ch']
jnz ['short', 'loc_5054']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ecx+38h]']
mov ['[ebp+var_AC],', 'edx']
cmp ['[ebp+var_AC],', '0']
jge ['short', 'loc_504F']
mov ['eax,', '[ebp+var_AC]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '8']
jnz ['short', 'loc_504F']
mov ['eax,', '[ebp+var_AC]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
jz ['short', 'loc_504F']
mov ['eax,', '[ebp+var_AC]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+1],', 'al']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+0ACh],', '0DBh']
jmp ['loc_51FE']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx+45h]']
cmp ['edx,', '2']
jnz ['loc_51FE']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx+46h]']
cmp ['edx,', '1']
jnz ['loc_51FE']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx+47h]']
cmp ['edx,', '2']
jnz ['loc_51FE']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '7Fh']
jg ['loc_51FE']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_DC],', 'ecx']
mov ['eax,', '[ebp+var_DC]']
add ['eax,', '1']
shl ['eax,', '0Ah']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_B8],', 'eax']
cmp ['[ebp+var_B8],', '0']
jnz ['short', 'loc_50F2']
mov ['eax,', '[ebp+var_88]']
push ['eax']
call ['_ucnv_unload_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_55B8']
push ['1']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+var_DC]']
shl ['edx,', '0Ah']
push ['edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_B8]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_B8]']
mov ['[ebp+var_C4],', 'eax']
mov ['[ebp+var_D0],', '0']
jmp ['short', 'loc_514A']
mov ['eax,', '[ebp+var_D0]']
add ['eax,', '1']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '100h']
jge ['short', 'loc_5182']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+var_C4]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
jge ['short', 'loc_5180']
mov ['eax,', '[ebp+var_DC]']
shl ['eax,', '18h']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+var_C4]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_513B']
mov ['eax,', '[ebp+var_DC]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+var_B8]']
mov ['[ebp+var_C4],', 'eax']
mov ['[ebp+var_D0],', '0']
jmp ['short', 'loc_51B2']
mov ['eax,', '[ebp+var_D0]']
add ['eax,', '1']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '100h']
jge ['short', 'loc_51D3']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+var_C4]']
mov ['dword', 'ptr', '[ecx+eax*4],', '80700000h']
jmp ['short', 'loc_51A3']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_B8]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_DC]']
add ['eax,', '1']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+2],', '1']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+0ACh],', '0DBh']
jmp ['loc_554C']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
mov ['[ebp+var_1E0],', 'ecx']
cmp ['[ebp+var_1E0],', '0Ch']
ja ['short', '$LN22']
mov ['edx,', '[ebp+var_1E0]']
movzx ['eax,', 'ds:$LN61[edx]']
jmp ['ds:$LN66[eax*4]']
jmp ['short', 'loc_5240']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0Dh']
jmp ['loc_55B8']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5250']
jmp ['loc_55B8']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_34]']
mov ['dl,', '[ecx+4]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+8]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '0Ah']
mov ['edx,', '[ebp+Dst]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[eax+14h]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+0A0h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+0A8h],', 'edx']
mov ['eax,', '14h']
mov ['[ebp+var_1C],', 'ax']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_udata_getInfo_56']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_10]']
cmp ['eax,', '6']
jg ['short', 'loc_5301']
movzx ['eax,', '[ebp+var_10]']
cmp ['eax,', '6']
jnz ['short', 'loc_5319']
movzx ['eax,', '[ebp+var_F]']
cmp ['eax,', '1']
jl ['short', 'loc_5319']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4Fh]']
and ['edx,', '3']
mov ['eax,', '[ebp+Dst]']
mov ['[eax+0ADh],', 'dl']
jmp ['short', 'loc_5323']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+0ADh],', '3']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '3']
jl ['loc_5463']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ADh]']
and ['ecx,', '2']
jnz ['loc_5463']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1']
jnz ['short', 'loc_5368']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0Fh']
setnl ['cl']
mov ['[ebp+var_1E0],', 'ecx']
jmp ['short', 'loc_537F']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0D7h']
setnl ['cl']
mov ['[ebp+var_1E0],', 'ecx']
cmp ['[ebp+var_1E0],', '0']
jz ['loc_5463']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+0AEh],', '1']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1']
jnz ['short', 'loc_5411']
mov ['[ebp+var_E8],', '0']
jmp ['short', 'loc_53BC']
mov ['eax,', '[ebp+var_E8]']
add ['eax,', '1']
mov ['[ebp+var_E8],', 'eax']
cmp ['[ebp+var_E8],', '40h']
jge ['short', 'loc_5400']
mov ['eax,', '[ebp+var_E8]']
sar ['eax,', '4']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+18h]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['ecx,', '[ebp+var_E8]']
shl ['ecx,', '2']
and ['ecx,', '3Ch']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['ecx,', '[edx+18h]']
mov ['edx,', '[ebp+var_E8]']
mov ['esi,', '[ebp+Dst]']
mov ['ax,', '[ecx+eax*2]']
mov ['[esi+edx*2+20h],', 'ax']
jmp ['short', 'loc_53AD']
mov ['eax,', '0FFFh']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+0B0h],', 'ax']
jmp ['short', 'loc_5463']
movsx ['eax,', '[ebp+var_55]']
test ['eax,', 'eax']
jz ['short', 'loc_5425']
mov ['[ebp+var_1E0],', '0']
jmp ['short', 'loc_5434']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+0A8h]']
mov ['[ebp+var_1E0],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+0A0h]']
add ['ecx,', '[ebp+var_1E0]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
shl ['ecx,', '8']
or ['ecx,', '0FFh']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+0B0h],', 'cx']
mov ['[ebp+var_F4],', '0FFFFFFFFh']
mov ['[ebp+var_100],', '0']
jmp ['short', 'loc_5488']
mov ['eax,', '[ebp+var_100]']
add ['eax,', '1']
mov ['[ebp+var_100],', 'eax']
cmp ['[ebp+var_100],', '80h']
jge ['short', 'loc_54D1']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_100]']
or ['edx,', '80000000h']
mov ['eax,', '[ebp+var_100]']
cmp ['[ecx+eax*4],', 'edx']
jz ['short', 'loc_54CF']
mov ['ecx,', '[ebp+var_100]']
sar ['ecx,', '2']
mov ['eax,', '1']
shl ['eax,', 'cl']
not ['eax']
and ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_5479']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_F4]']
mov ['[eax+0B4h],', 'ecx']
movsx ['eax,', '[ebp+var_55]']
test ['eax,', 'eax']
jz ['short', 'loc_554C']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ADh]']
and ['ecx,', '1']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', '400h']
add ['ecx,', '40h']
mov ['[ebp+var_10C],', 'ecx']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
shr ['edx,', '2']
mov ['eax,', '[ebp+var_10C]']
shr ['eax,', '1']
sub ['edx,', 'eax']
mov ['[ebp+var_118],', 'edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+24h]']
push ['edx']
mov ['eax,', '[ebp+var_118]']
push ['eax']
mov ['ecx,', '[ebp+var_10C]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?reconstituteData@@YAXPAUUConverterMBCSTable@@IIIPAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+Dst]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0AEh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_558A']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1']
jnz ['short', 'loc_5571']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', 'offset', '__SBCSUTF8Impl']
jmp ['short', 'loc_558A']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
cmp ['ecx,', '1']
jnz ['short', 'loc_558A']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', 'offset', '__DBCSUTF8Impl']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
cmp ['ecx,', '0DBh']
jz ['short', 'loc_55AB']
mov ['eax,', '[ebp+Dst]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
cmp ['ecx,', '0Ch']
jnz ['short', 'loc_55B8']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+0B4h],', '0']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN65']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1E0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN64']
dd ['offset', '$LN62']
dd ['0FFFFFF84h,', '1Ch']
dd ['offset', '$LN63']
align ['4']
dd ['offset', '$LN22']
db ['1,', '1,', '1,', '1']
db ['0,', '0,', '1,', '1']
db ['0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reconstituteData@@YAXPAUUConverterMBCSTable@@IIIPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '12Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '4Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
shl ['eax,', '2']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+0A8h]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+Size]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0B8h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0B8h],', '0']
jnz ['short', 'loc_56BD']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_58BA']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B8h]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0B8h]']
mov ['[ebp+Dst],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+Dst]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_14],', 'edx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[ecx+edx*2]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax*4]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+0A0h],', 'edx']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax+0B0h]']
add ['ecx,', '1']
sar ['ecx,', '6']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_57A4']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_2C]']
jge ['loc_58A1']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+Dst]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
cmp ['[ebp+var_50],', 'eax']
jz ['loc_5893']
mov ['[ebp+var_68],', '0']
jmp ['short', 'loc_57E0']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '10h']
jge ['loc_5891']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['edx,', '[ebp+var_38]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_5883']
mov ['eax,', '[ebp+var_5C]']
sar ['eax,', '4']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_5C]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '1']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_5C]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '1']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_5C]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '1']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_5C]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_588C']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '4']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_57D7']
jmp ['short', 'loc_589C']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '10h']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_579B']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '?writeStage3Roundtrip@@YACPBXIQAH@Z']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?ucnv_MBCSEnumToUnicode@@YAXPAUUConverterMBCSTable@@P6ACPBXIQAH@Z1PAW4UErrorCode@@@Z']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSEnumToUnicode@@YAXPAUUConverterMBCSTable@@P6ACPBXIQAH@Z1PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '158h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_158]']
mov ['ecx,', '56h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['80h']
push ['0FFFFFFFFh']
lea ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['0']
lea ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['?getStateProp@@YACPAY0BAA@$$CBHQACH@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_94],', '0']
jmp ['short', 'loc_5941']
mov ['eax,', '[ebp+var_94]']
add ['eax,', '1']
mov ['[ebp+var_94],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['[ebp+var_94],', 'ecx']
jge ['short', 'loc_598E']
mov ['eax,', '[ebp+var_94]']
movsx ['ecx,', '[ebp+eax+Dst]']
cmp ['ecx,', '40h']
jl ['short', 'loc_598C']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_94]']
push ['eax']
lea ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?enumToU@@YACPAUUConverterMBCSTable@@QACHIIP6ACPBXIQAH@Z2PAW4UErrorCode@@@Z']
add ['esp,', '20h']
jmp ['short', 'loc_5932']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '158h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN8_0']
dd ['offset', '$LN7']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?enumToU@@YACPAUUConverterMBCSTable@@QACHIIP6ACPBXIQAH@Z2PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1D0]']
mov ['ecx,', '74h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+8]']
mov ['[ebp+var_94],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_A0],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
shl ['eax,', '8']
mov ['[ebp+arg_10],', 'eax']
mov ['[ebp+var_AC],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '38h']
shl ['ecx,', '2']
mov ['[ebp+var_B8],', 'ecx']
cmp ['[ebp+var_B8],', '0']
jnz ['short', 'loc_5A79']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '40h']
jl ['short', 'loc_5A79']
mov ['[ebp+var_88],', '0FFFFFFFFh']
mov ['[ebp+var_B8],', '1']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '7']
add ['ecx,', '1']
shl ['ecx,', '5']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_B8]']
cmp ['eax,', '[ebp+var_C4]']
jge ['loc_5D2A']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+var_94]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_D0],', 'edx']
cmp ['[ebp+var_D0],', '0']
jl ['loc_5B48']
mov ['eax,', '[ebp+var_D0]']
shr ['eax,', '18h']
mov ['[ebp+var_DC],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_DC]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jl ['short', 'loc_5B2F']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
or ['eax,', '[ebp+var_B8]']
push ['eax']
mov ['ecx,', '[ebp+var_D0]']
and ['ecx,', '0FFFFFFh']
add ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_DC]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?enumToU@@YACPAUUConverterMBCSTable@@QACHIIP6ACPBXIQAH@Z2PAW4UErrorCode@@@Z']
add ['esp,', '20h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_5B2F']
xor ['al,', 'al']
jmp ['loc_5D2C']
mov ['eax,', '[ebp+var_B8]']
and ['eax,', '1Fh']
mov ['[ebp+eax*4+var_88],', '0FFFFFFFFh']
jmp ['loc_5CC6']
mov ['eax,', '[ebp+var_D0]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
mov ['[ebp+var_F4],', 'eax']
jnz ['short', 'loc_5B6E']
movzx ['eax,', 'word', 'ptr', '[ebp+var_D0]']
mov ['[ebp+var_E8],', 'eax']
jmp ['loc_5C9E']
cmp ['[ebp+var_F4],', '4']
jnz ['short', 'loc_5BBA']
movzx ['eax,', 'word', 'ptr', '[ebp+var_D0]']
add ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_100],', 'eax']
mov ['eax,', '[ebp+var_100]']
mov ['ecx,', '[ebp+var_A0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_E8],', 'edx']
cmp ['[ebp+var_E8],', '0FFFEh']
jge ['short', 'loc_5BAB']
jmp ['short', 'loc_5BB5']
mov ['[ebp+var_E8],', '0FFFFFFFFh']
jmp ['loc_5C9E']
cmp ['[ebp+var_F4],', '5']
jnz ['loc_5C73']
movzx ['eax,', 'word', 'ptr', '[ebp+var_D0]']
add ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_10C],', 'eax']
mov ['eax,', '[ebp+var_10C]']
mov ['ecx,', '[ebp+var_A0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+var_10C]']
add ['eax,', '1']
mov ['[ebp+var_10C],', 'eax']
cmp ['[ebp+var_E8],', '0D800h']
jge ['short', 'loc_5C0A']
jmp ['short', 'loc_5C71']
cmp ['[ebp+var_E8],', '0DBFFh']
jg ['short', 'loc_5C43']
mov ['eax,', '[ebp+var_E8]']
and ['eax,', '3FFh']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_10C]']
mov ['edx,', '[ebp+var_A0]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
lea ['edx,', '[eax+ecx+2400h]']
mov ['[ebp+var_E8],', 'edx']
jmp ['short', 'loc_5C71']
cmp ['[ebp+var_E8],', '0E000h']
jnz ['short', 'loc_5C67']
mov ['eax,', '[ebp+var_10C]']
mov ['ecx,', '[ebp+var_A0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_E8],', 'edx']
jmp ['short', 'loc_5C71']
mov ['[ebp+var_E8],', '0FFFFFFFFh']
jmp ['short', 'loc_5C9E']
cmp ['[ebp+var_F4],', '1']
jnz ['short', 'loc_5C94']
mov ['eax,', '[ebp+var_D0]']
and ['eax,', '0FFFFFh']
add ['eax,', '10000h']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_5C9E']
mov ['[ebp+var_E8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_B8]']
and ['eax,', '1Fh']
mov ['ecx,', '[ebp+var_E8]']
mov ['[ebp+eax*4+var_88],', 'ecx']
mov ['eax,', '[ebp+var_AC]']
and ['eax,', '[ebp+var_E8]']
mov ['[ebp+var_AC],', 'eax']
mov ['eax,', '[ebp+var_B8]']
add ['eax,', '1']
mov ['[ebp+var_B8],', 'eax']
mov ['ecx,', '[ebp+var_B8]']
and ['ecx,', '1Fh']
jnz ['short', 'loc_5D25']
cmp ['[ebp+var_AC],', '0']
jl ['short', 'loc_5D25']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+var_B8]']
sub ['ecx,', '20h']
or ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
call ['[ebp+arg_14]']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_5D1B']
xor ['al,', 'al']
jmp ['short', 'loc_5D2C']
mov ['[ebp+var_AC],', '0FFFFFFFFh']
jmp ['loc_5A91']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN30']
dd ['offset', '$LN29']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStateProp@@YACPAY0BAA@$$CBHQACH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_5DC1']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0FFFFFFFFh']
jnz ['short', 'loc_5DFB']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?getStateProp@@YACPAY0BAA@$$CBHQACH@Z']
add ['esp,', '0Ch']
cmp ['[ebp+var_2C],', '0']
jl ['short', 'loc_5E12']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jl ['short', 'loc_5E10']
jmp ['short', 'loc_5E46']
jmp ['short', 'loc_5E22']
mov ['eax,', '[ebp+var_2C]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '6']
jnb ['short', 'loc_5E22']
jmp ['short', 'loc_5E46']
cmp ['[ebp+var_14],', '0FFh']
jnz ['short', 'loc_5E41']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '0C0h']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['al,', '[eax]']
jmp ['loc_5F96']
jmp ['loc_5DB8']
mov ['eax,', '[ebp+var_14]']
sar ['eax,', '5']
shl ['eax,', '3']
movsx ['ecx,', 'al']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+arg_8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
or ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'al']
mov ['[ebp+var_20],', '0FFh']
jmp ['short', 'loc_5E77']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_5EE2']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0FFFFFFFFh']
jnz ['short', 'loc_5EB9']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?getStateProp@@YACPAY0BAA@$$CBHQACH@Z']
add ['esp,', '0Ch']
cmp ['[ebp+var_2C],', '0']
jl ['short', 'loc_5ED0']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jl ['short', 'loc_5ECE']
jmp ['short', 'loc_5EE2']
jmp ['short', 'loc_5EE0']
mov ['eax,', '[ebp+var_2C]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '6']
jnb ['short', 'loc_5EE0']
jmp ['short', 'loc_5EE2']
jmp ['short', 'loc_5E6E']
mov ['eax,', '[ebp+var_20]']
sar ['eax,', '5']
movsx ['ecx,', 'al']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+arg_8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
or ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jg ['loc_5F8E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0FFFFFFFFh']
jnz ['short', 'loc_5F44']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?getStateProp@@YACPAY0BAA@$$CBHQACH@Z']
add ['esp,', '0Ch']
cmp ['[ebp+var_2C],', '0']
jge ['short', 'loc_5F80']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
or ['ecx,', '40h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_38]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_2C]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '3']
ja ['short', 'loc_5F80']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
or ['ecx,', '40h']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+arg_8]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_5EFE']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['al,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?writeStage3Roundtrip@@YACPBXIQAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0A0h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+0ACh]']
mov ['[ebp+var_124],', 'cl']
cmp ['[ebp+var_124],', '8']
jz ['short', 'loc_6008']
cmp ['[ebp+var_124],', '9']
jz ['short', 'loc_6036']
jmp ['short', 'loc_6062']
cmp ['[ebp+arg_4],', '0FFFFh']
ja ['short', 'loc_6013']
jmp ['short', 'loc_6034']
cmp ['[ebp+arg_4],', '8EFFFFh']
ja ['short', 'loc_6029']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '7FFFh']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_6034']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FF7Fh']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_6062']
cmp ['[ebp+arg_4],', '0FFFFFFh']
ja ['short', 'loc_6041']
jmp ['short', 'loc_6062']
cmp ['[ebp+arg_4],', '8EFFFFFFh']
ja ['short', 'loc_6057']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '7FFFFFh']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_6062']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FF7FFFh']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_607D']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '1']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_50],', '1Fh']
jg ['loc_616C']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_44],', 'edx']
cmp ['[ebp+var_44],', '0']
jge ['short', 'loc_609B']
jmp ['short', 'loc_606B']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[eax+edx*4]']
mov ['edx,', '[ebp+var_44]']
sar ['edx,', '4']
and ['edx,', '3Fh']
lea ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_44]']
and ['edx,', '0Fh']
add ['ecx,', 'edx']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+0ACh]']
mov ['[ebp+var_124],', 'cl']
cmp ['[ebp+var_124],', '2']
jz ['short', 'loc_6103']
cmp ['[ebp+var_124],', '3']
jz ['short', 'loc_6131']
cmp ['[ebp+var_124],', '9']
jz ['short', 'loc_6103']
jmp ['short', 'loc_613F']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '3']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx+1],', 'al']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+arg_4]']
mov ['[eax+2],', 'cl']
jmp ['short', 'loc_614D']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_614D']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_38]']
mov ['dx,', 'word', 'ptr', '[ebp+arg_4]']
mov ['[ecx+eax*2],', 'dx']
mov ['ecx,', '[ebp+var_44]']
and ['ecx,', '0Fh']
add ['ecx,', '10h']
mov ['eax,', '1']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_20]']
or ['eax,', '[ecx]']
mov ['edx,', '[ebp+var_20]']
mov ['[edx],', 'eax']
jmp ['loc_606B']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSUnload@@YAXPAUUConverterSharedData@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_61B7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_61D1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0C0h],', '0']
jz ['short', 'loc_61EF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0C0h]']
push ['ecx']
call ['_ucnv_unload_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0B8h],', '0']
jz ['short', 'loc_620D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0B8h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSOpen@@YAXPAUUConverter@@PAUUConverterLoadArgs@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6252']
jmp ['loc_650F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+0ACh]']
mov ['[ebp+var_1D],', 'cl']
movzx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '0DBh']
jnz ['short', 'loc_629C']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0FFFFFFEFh']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_100]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_100]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '10h']
jz ['loc_632F']
push ['0']
call ['_umtx_lock_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
setnz ['cl']
mov ['[ebp+var_35],', 'cl']
push ['0']
call ['_umtx_unlock_56']
add ['esp,', '4']
movsx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jnz ['short', 'loc_632F']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['?_EBCDICSwapLFNL@@YACPAUUConverterSharedData@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_632F']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6308']
jmp ['loc_650F']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0FFFFFFEFh']
mov ['[ebp+var_100],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_100]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_100]']
mov ['[ecx+1Ch],', 'edx']
mov ['esi,', 'esp']
push ['offset', '??_C@_05BJAKOMII@18030?$AA@']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_63AC']
mov ['esi,', 'esp']
push ['offset', '??_C@_07LONGGCM@gb18030?$AA@']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6395']
mov ['esi,', 'esp']
push ['offset', '??_C@_07DNCGDNOG@GB18030?$AA@']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_63A7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
or ['ecx,', '8000h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1Ch],', 'ecx']
jmp ['loc_64B5']
mov ['esi,', 'esp']
push ['offset', '??_C@_04FEOJHBGN@KEIS?$AA@']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_63F0']
mov ['esi,', 'esp']
push ['offset', '??_C@_04JINDJDBF@keis?$AA@']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_6407']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
or ['ecx,', '1000h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1Ch],', 'ecx']
jmp ['loc_64B5']
mov ['esi,', 'esp']
push ['offset', '??_C@_03PKGADPBC@JEF?$AA@']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_644B']
mov ['esi,', 'esp']
push ['offset', '??_C@_03PHJLPCGO@jef?$AA@']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_645F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
or ['ecx,', '2000h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1Ch],', 'ecx']
jmp ['short', 'loc_64B5']
mov ['esi,', 'esp']
push ['offset', '??_C@_04DAKIHPJK@JIPS?$AA@']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_64A3']
mov ['esi,', 'esp']
push ['offset', '??_C@_04PMJCJNOC@jips?$AA@']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_64B5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
or ['ecx,', '4000h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1Ch],', 'ecx']
movzx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '0Ch']
jnz ['short', 'loc_64C5']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+3Ch],', '3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0C4h]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_650F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+44h]']
and ['ecx,', '0FFh']
mov ['[ebp+var_29],', 'cl']
movzx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '0Ch']
jnz ['short', 'loc_64F7']
mov ['al,', '[ebp+var_29]']
add ['al,', '1']
mov ['[ebp+var_29],', 'al']
movsx ['eax,', '[ebp+var_29]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+3Ch]']
cmp ['eax,', 'edx']
jle ['short', 'loc_650F']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_29]']
mov ['[eax+3Ch],', 'cl']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_04PMJCJNOC@jips?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04DAKIHPJK@JIPS?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03PHJLPCGO@jef?$AA@']
assume ['cs:_rdata']
public ['??_C@_03PKGADPBC@JEF?$AA@']
assume ['cs:_rdata']
public ['??_C@_04JINDJDBF@keis?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_04FEOJHBGN@KEIS?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_07DNCGDNOG@GB18030?$AA@']
assume ['cs:_rdata']
public ['??_C@_07LONGGCM@gb18030?$AA@']
assume ['cs:_rdata']
public ['??_C@_05BJAKOMII@18030?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_EBCDICSwapLFNL@@YACPAUUConverterSharedData@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '144h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '51h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0A0h]']
mov ['[ebp+Src],', 'ecx']
mov ['eax,', '[ebp+Src]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_65C3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
cmp ['ecx,', '0Ch']
jnz ['short', 'loc_65E4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
cmp ['dword', 'ptr', '[ecx+94h],', '8000000Ah']
jnz ['short', 'loc_65E4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
cmp ['dword', 'ptr', '[ecx+54h],', '80000085h']
jz ['short', 'loc_65EB']
xor ['al,', 'al']
jmp ['loc_68A5']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_663D']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+14h]']
cmp ['edx,', '0F25h']
jnz ['short', 'loc_6634']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+10h]']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+0Ah]']
cmp ['edx,', '0F15h']
jz ['short', 'loc_663B']
xor ['al,', 'al']
jmp ['loc_68A5']
jmp ['short', 'loc_66B2']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '4000000h']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
jz ['short', 'loc_6670']
movzx ['eax,', 'word', 'ptr', '[ebp+var_68]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+14h]']
cmp ['edx,', '25h']
jz ['short', 'loc_6677']
xor ['al,', 'al']
jmp ['loc_68A5']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx*4+20h]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '200000h']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
jz ['short', 'loc_66AB']
movzx ['eax,', 'word', 'ptr', '[ebp+var_68]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+0Ah]']
cmp ['edx,', '15h']
jz ['short', 'loc_66B2']
xor ['al,', 'al']
jmp ['loc_68A5']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0A8h],', '0']
jbe ['short', 'loc_66CC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0A8h]']
mov ['[ebp+Size],', 'ecx']
jmp ['short', 'loc_66DC']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '3']
xor ['al,', 'al']
jmp ['loc_68A5']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '0Ah']
mov ['edx,', '[ebp+Size]']
lea ['eax,', '[ecx+edx+50h]']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_6714']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['al,', 'al']
jmp ['loc_68A5']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+Dst],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
shl ['eax,', '0Ah']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+94h],', '80000085h']
mov ['eax,', '[ebp+Dst]']
mov ['dword', 'ptr', '[eax+54h],', '8000000Ah']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '0Ah']
add ['ecx,', '[ebp+Dst]']
mov ['[ebp+var_44],', 'ecx']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0ACh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_67D5']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['ecx,', '0F15h']
mov ['edx,', '[ebp+var_44]']
mov ['[edx+eax*2+14h],', 'cx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2+10h]']
mov ['ecx,', '0F25h']
mov ['edx,', '[ebp+var_44]']
mov ['[edx+eax*2+0Ah],', 'cx']
jmp ['short', 'loc_681C']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_68],', 'eax']
movzx ['eax,', 'word', 'ptr', '[ebp+var_68]']
shl ['eax,', '4']
mov ['ecx,', '15h']
mov ['edx,', '[ebp+var_44]']
mov ['[edx+eax*2+14h],', 'cx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx*4+20h]']
mov ['[ebp+var_68],', 'eax']
movzx ['eax,', 'word', 'ptr', '[ebp+var_68]']
shl ['eax,', '4']
mov ['ecx,', '25h']
mov ['edx,', '[ebp+var_44]']
mov ['[edx+eax*2+0Ah],', 'cx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+Dest],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+Dest]']
push ['edx']
call ['_strcpy']
add ['esp,', '8']
push ['offset', '??_C@_09MJMCKJMM@?0swaplfnl?$AA@']
mov ['eax,', '[ebp+Dest]']
push ['eax']
call ['_strcat']
add ['esp,', '8']
push ['0']
call ['_umtx_lock_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_6887']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+0A4h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+Dest]']
mov ['[eax+0BCh],', 'ecx']
mov ['[ebp+Dst],', '0']
push ['0']
call ['_umtx_unlock_56']
add ['esp,', '4']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_68A3']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_09MJMCKJMM@?0swaplfnl?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSGetName@@YAPBDPBUUConverter@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_6910']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
cmp ['dword', 'ptr', '[ecx+0D8h],', '0']
jz ['short', 'loc_6910']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['eax,', '[ecx+0D8h]']
jmp ['short', 'loc_691C']
jmp ['short', 'loc_691C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['eax,', '[ecx+0Ch]']
add ['eax,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucnv_MBCSToUnicodeWithOffsets_56 proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1C0]']
mov ['ecx,', '70h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0FEh]']
test ['ecx,', 'ecx']
jle ['short', 'loc_6997']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ucnv_extContinueMatchToU_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_6992']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0FEh]']
test ['ecx,', 'ecx']
jge ['short', 'loc_6997']
jmp ['loc_7617']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Ch]']
cmp ['edx,', '1']
jnz ['short', 'loc_69DF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C9h]']
and ['edx,', '1']
jnz ['short', 'loc_69CA']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ucnv_MBCSSingleToBMPWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
jmp ['short', 'loc_69DA']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ucnv_MBCSSingleToUnicodeWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
jmp ['loc_7617']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_6A25']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+28h]']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_6A31']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+2Ch]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+24h]']
mov ['[ebp+var_7D],', 'cl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '25h']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+30h]']
mov ['[ebp+var_71],', 'cl']
movzx ['edx,', '[ebp+var_71]']
test ['edx,', 'edx']
jnz ['short', 'loc_6A78']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['dl,', '[ecx+1Dh]']
mov ['[ebp+var_71],', 'dl']
movsx ['eax,', '[ebp+var_7D]']
neg ['eax']
sbb ['eax,', 'eax']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_A4],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_75E0']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jb ['short', 'loc_6AB2']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_75E0']
movsx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jnz ['loc_6E42']
cmp ['[ebp+var_44],', '0']
jnz ['loc_6C1A']
movzx ['eax,', '[ebp+var_71]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0']
jl ['loc_6BC3']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '18h']
mov ['[ebp+var_71],', 'al']
mov ['eax,', '[ebp+var_B0]']
and ['eax,', '0FFFFFFh']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_6BAD']
movzx ['eax,', '[ebp+var_71]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0']
jge ['short', 'loc_6BAD']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '4']
jnz ['short', 'loc_6BAD']
movzx ['eax,', 'word', 'ptr', '[ebp+var_B0]']
add ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_5C]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_BC],', 'dx']
movzx ['eax,', '[ebp+var_BC]']
cmp ['eax,', '0FFFEh']
jge ['short', 'loc_6BAD']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', '[ebp+var_BC]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['[ebp+var_71],', 'al']
mov ['[ebp+var_68],', '0']
jmp ['short', 'loc_6BC1']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx-1]']
mov ['[eax],', 'dl']
mov ['[ebp+var_7D],', '1']
jmp ['short', 'loc_6C15']
jmp ['short', 'loc_6C01']
cmp ['[ebp+var_B0],', '80100000h']
jge ['short', 'loc_6BFF']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['[ebp+var_71],', 'al']
jmp ['short', 'loc_6C01']
jmp ['short', 'loc_6C15']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_6C15']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jb ['loc_6AC8']
jmp ['loc_6DEB']
movzx ['eax,', '[ebp+var_71]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0']
jl ['loc_6D64']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '18h']
mov ['[ebp+var_71],', 'al']
mov ['eax,', '[ebp+var_B0]']
and ['eax,', '0FFFFFFh']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_6D3C']
movzx ['eax,', '[ebp+var_71]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0']
jge ['loc_6D3C']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '4']
jnz ['loc_6D3C']
movzx ['eax,', 'word', 'ptr', '[ebp+var_B0]']
add ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_5C]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_BC],', 'dx']
movzx ['eax,', '[ebp+var_BC]']
cmp ['eax,', '0FFFEh']
jge ['short', 'loc_6D3C']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', '[ebp+var_BC]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_6D24']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '2']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'ecx']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['[ebp+var_71],', 'al']
mov ['[ebp+var_68],', '0']
jmp ['short', 'loc_6D62']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx-1]']
mov ['[eax],', 'dl']
mov ['[ebp+var_7D],', '1']
jmp ['loc_6DEB']
jmp ['short', 'loc_6DD7']
cmp ['[ebp+var_B0],', '80100000h']
jge ['short', 'loc_6DD5']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_6DC4']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'ecx']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['[ebp+var_71],', 'al']
jmp ['short', 'loc_6DD7']
jmp ['short', 'loc_6DEB']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_6DEB']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jb ['loc_6C1A']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jb ['short', 'loc_6DF8']
jmp ['loc_75E0']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jb ['short', 'loc_6E0E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_75E0']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
movsx ['eax,', '[ebp+var_7D]']
mov ['ecx,', '[ebp+var_8C]']
mov ['edx,', '[ebp+var_14]']
mov ['dl,', '[edx]']
mov ['[ecx+eax],', 'dl']
mov ['al,', '[ebp+var_7D]']
add ['al,', '1']
mov ['[ebp+var_7D],', 'al']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_6E96']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
movsx ['eax,', '[ebp+var_7D]']
mov ['ecx,', '[ebp+var_8C]']
mov ['edx,', '[ebp+var_14]']
mov ['dl,', '[edx]']
mov ['[ecx+eax],', 'dl']
movsx ['eax,', '[ebp+var_7D]']
mov ['ecx,', '[ebp+var_8C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
movzx ['eax,', '[ebp+var_71]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_B0],', 'ecx']
mov ['dl,', '[ebp+var_7D]']
add ['dl,', '1']
mov ['[ebp+var_7D],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_B0],', '0']
jl ['short', 'loc_6EC1']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '18h']
mov ['[ebp+var_71],', 'al']
mov ['eax,', '[ebp+var_B0]']
and ['eax,', '0FFFFFFh']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_68],', 'eax']
jmp ['loc_6A90']
movzx ['eax,', '[ebp+var_71]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['[ebp+var_71],', 'al']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
mov ['[ebp+var_C5],', 'al']
movzx ['eax,', '[ebp+var_C5]']
cmp ['eax,', '4']
jnz ['loc_6FE1']
movzx ['eax,', 'word', 'ptr', '[ebp+var_B0]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_5C]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_BC],', 'dx']
movzx ['eax,', '[ebp+var_BC]']
cmp ['eax,', '0FFFEh']
jge ['short', 'loc_6F5E']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', '[ebp+var_BC]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_6F58']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_7D],', '0']
jmp ['short', 'loc_6FDC']
movzx ['eax,', '[ebp+var_BC]']
cmp ['eax,', '0FFFEh']
jnz ['short', 'loc_6FD3']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_6FD1']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '1Ch']
push ['edx']
call ['?ucnv_MBCSGetFallback@@YAHPAUUConverterMBCSTable@@I@Z']
add ['esp,', '8']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0FFFEh']
jz ['short', 'loc_6FD1']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_6FCD']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_7D],', '0']
jmp ['short', 'loc_6FDC']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_73D5']
movzx ['eax,', '[ebp+var_C5]']
test ['eax,', 'eax']
jnz ['short', 'loc_7025']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_701C']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_7D],', '0']
jmp ['loc_73D5']
movzx ['eax,', '[ebp+var_C5]']
cmp ['eax,', '5']
jnz ['loc_7230']
movzx ['eax,', 'word', 'ptr', '[ebp+var_B0]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_5C]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_BC],', 'dx']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
movzx ['eax,', '[ebp+var_BC]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_70A3']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', '[ebp+var_BC]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_709A']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_7D],', '0']
jmp ['loc_722B']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_70C6']
movzx ['ecx,', '[ebp+var_BC]']
xor ['edx,', 'edx']
cmp ['ecx,', '0DFFFh']
setle ['dl']
mov ['[ebp+var_1C0],', 'edx']
jmp ['short', 'loc_70DD']
movzx ['eax,', '[ebp+var_BC]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0DBFFh']
setle ['cl']
mov ['[ebp+var_1C0],', 'ecx']
cmp ['[ebp+var_1C0],', '0']
jz ['loc_7192']
movzx ['eax,', '[ebp+var_BC]']
and ['eax,', '0DBFFh']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_711F']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_7D],', '0']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_7160']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_5C]']
mov ['cx,', '[edx+ecx*2]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_715E']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_718D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_5C]']
mov ['cx,', '[edx+ecx*2]']
mov ['[eax+74h],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['[ebp+var_68],', '0']
jmp ['loc_75E0']
jmp ['loc_722B']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_71BB']
movzx ['ecx,', '[ebp+var_BC]']
and ['ecx,', '0FFFEh']
xor ['edx,', 'edx']
cmp ['ecx,', '0E000h']
setz ['dl']
mov ['[ebp+var_1C0],', 'edx']
jmp ['short', 'loc_71D2']
movzx ['eax,', '[ebp+var_BC]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0E000h']
setz ['cl']
mov ['[ebp+var_1C0],', 'ecx']
cmp ['[ebp+var_1C0],', '0']
jz ['short', 'loc_7214']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+var_5C]']
mov ['cx,', '[edx+ecx*2]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_720E']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_7D],', '0']
jmp ['short', 'loc_722B']
movzx ['eax,', '[ebp+var_BC]']
cmp ['eax,', '0FFFFh']
jnz ['short', 'loc_722B']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_73D5']
movzx ['eax,', '[ebp+var_C5]']
cmp ['eax,', '1']
jz ['short', 'loc_7259']
movzx ['eax,', '[ebp+var_C5]']
cmp ['eax,', '3']
jnz ['loc_732D']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['loc_732D']
mov ['eax,', '[ebp+var_B0]']
and ['eax,', '0FFFFFh']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_B0]']
sar ['eax,', '0Ah']
movzx ['ecx,', 'ax']
or ['ecx,', '0D800h']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '2']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_72A5']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_7D],', '0']
mov ['eax,', '[ebp+var_B0]']
and ['eax,', '3FFh']
movzx ['ecx,', 'ax']
or ['ecx,', '0DC00h']
mov ['[ebp+var_BC],', 'cx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_72FE']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', '[ebp+var_BC]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_72FC']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_7328']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[ebp+var_BC]']
mov ['[eax+74h],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['[ebp+var_68],', '0']
jmp ['loc_75E0']
jmp ['loc_73D5']
movzx ['eax,', '[ebp+var_C5]']
cmp ['eax,', '8']
jnz ['short', 'loc_7361']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Dh]']
test ['edx,', 'edx']
jnz ['short', 'loc_734D']
mov ['[ebp+var_7D],', '0']
jmp ['short', 'loc_735F']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+30h]']
mov ['[ebp+var_71],', 'cl']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_73D5']
movzx ['eax,', '[ebp+var_C5]']
cmp ['eax,', '2']
jnz ['short', 'loc_73AC']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_73AA']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_73A6']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_7D],', '0']
jmp ['short', 'loc_73D5']
movzx ['eax,', '[ebp+var_C5]']
cmp ['eax,', '6']
jnz ['short', 'loc_73BA']
jmp ['short', 'loc_73D5']
movzx ['eax,', '[ebp+var_C5]']
cmp ['eax,', '7']
jnz ['short', 'loc_73D1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_73D5']
mov ['[ebp+var_7D],', '0']
mov ['[ebp+var_68],', '0']
movsx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jnz ['short', 'loc_73F5']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
jmp ['loc_75DB']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_7558']
movsx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '1']
jle ['loc_754E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Dh]']
test ['edx,', 'edx']
setnz ['al']
mov ['[ebp+var_D1],', 'al']
mov ['[ebp+var_DD],', '1']
jmp ['short', 'loc_7447']
mov ['al,', '[ebp+var_DD]']
add ['al,', '1']
mov ['[ebp+var_DD],', 'al']
movsx ['eax,', '[ebp+var_DD]']
movsx ['ecx,', '[ebp+var_7D]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_748A']
movsx ['eax,', '[ebp+var_DD]']
mov ['ecx,', '[ebp+var_8C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
push ['edx']
movzx ['eax,', '[ebp+var_D1]']
push ['eax']
movzx ['ecx,', '[ebp+var_71]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
call ['?isSingleOrLead@@YACPAY0BAA@$$CBHECE@Z']
add ['esp,', '10h']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_748A']
jmp ['short', 'loc_7439']
movsx ['eax,', '[ebp+var_DD]']
movsx ['ecx,', '[ebp+var_7D]']
cmp ['eax,', 'ecx']
jge ['loc_754E']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_DD]']
sub ['eax,', 'ecx']
mov ['[ebp+var_E9],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax+8]']
mov ['[ebp+var_F8],', 'ecx']
mov ['al,', '[ebp+var_DD]']
mov ['[ebp+var_7D],', 'al']
movsx ['eax,', '[ebp+var_E9]']
cmp ['eax,', '[ebp+var_F8]']
jg ['short', 'loc_74E8']
movsx ['eax,', '[ebp+var_E9]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', 'eax']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_754E']
movsx ['eax,', '[ebp+var_E9]']
mov ['ecx,', '[ebp+var_F8]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0FEh],', 'cl']
push ['1']
movsx ['eax,', '[ebp+var_DD]']
add ['eax,', '[ebp+var_8C]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+0FEh]']
neg ['edx']
push ['edx']
movsx ['eax,', '[ebp+var_DD]']
add ['eax,', '[ebp+var_8C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '0DEh']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_75E0']
jmp ['loc_75DB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
push ['edx']
mov ['eax,', '[ebp+var_98]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
movzx ['eax,', '[ebp+var_7D]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?_extToU@@YACPAUUConverter@@PBUUConverterSharedData@@CPAPBEPBEPAPA_WPB_WPAPAHHCPAW4UErrorCode@@@Z']
add ['esp,', '2Ch']
mov ['[ebp+var_7D],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+var_A4]']
mov ['[ebp+var_A4],', 'ecx']
mov ['edx,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_75DB']
jmp ['short', 'loc_75E0']
jmp ['loc_6A90']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_68]']
mov ['[eax+2Ch],', 'ecx']
movzx ['eax,', '[ebp+var_71]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_7D]']
mov ['[eax+24h],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+18h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN111']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN110']
dd ['offset', '$LN107']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN108']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN109']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_extToU@@YACPAUUConverter@@PBUUConverterSharedData@@CPAPBEPBEPAPA_WPB_WPAPAHHCPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_76F4']
mov ['eax,', '[ebp+arg_28]']
push ['eax']
movzx ['ecx,', '[ebp+arg_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_20]']
push ['edx']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
movsx ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucnv_extInitialMatchToU_56']
add ['esp,', '2Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_76F4']
xor ['al,', 'al']
jmp ['loc_77CF']
movsx ['eax,', '[ebp+arg_8]']
cmp ['eax,', '4']
jnz ['loc_77C3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '8000h']
jz ['loc_77C3']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+25h]']
imul ['ecx,', '0Ah']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+26h]']
add ['ecx,', 'eax']
imul ['ecx,', '7Eh']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+27h]']
add ['ecx,', 'eax']
imul ['ecx,', '0Ah']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+28h]']
add ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_14],', 'offset', '_gb18030Ranges']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_7763']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0Eh']
jge ['short', 'loc_77C3']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+var_20]']
ja ['short', 'loc_77C1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+0Ch]']
ja ['short', 'loc_77C1']
mov ['eax,', '[ebp+arg_28]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ucnv_toUWriteCodePoint_56']
add ['esp,', '1Ch']
xor ['al,', 'al']
jmp ['short', 'loc_77CF']
jmp ['short', 'loc_7751']
mov ['eax,', '[ebp+arg_28]']
mov ['dword', 'ptr', '[eax],', '0Ah']
mov ['al,', '[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSGetFallback@@YAHPAUUConverterMBCSTable@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jbe ['short', 'loc_786F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
cmp ['[ebp+var_20],', 'eax']
jnb ['short', 'loc_7855']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_2C]']
shr ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+eax*8]']
jnb ['short', 'loc_784D']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_7853']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_7821']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+eax*8]']
jnz ['short', 'loc_786F']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ecx+eax*8+4]']
jmp ['short', 'loc_7874']
mov ['eax,', '0FFFEh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSSingleToUnicodeWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '144h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '51h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_78E9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+28h]']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_78F5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_50],', 'edx']
mov ['[ebp+var_5C],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_7B74']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jb ['short', 'loc_791E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_7B74']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_68],', '80100000h']
jge ['short', 'loc_7974']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_7969']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
jmp ['short', 'loc_78FC']
mov ['eax,', '[ebp+var_68]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
mov ['[ebp+var_7D],', 'al']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '1']
jz ['short', 'loc_79A3']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '3']
jnz ['loc_7A5C']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['loc_7A5C']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFFh']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
sar ['eax,', '0Ah']
movzx ['ecx,', 'ax']
or ['ecx,', '0D800h']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '2']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_79E3']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '3FFh']
movzx ['ecx,', 'ax']
or ['ecx,', '0DC00h']
mov ['[ebp+var_74],', 'cx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_7A2C']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_7A2A']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_7A4C']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[ebp+var_74]']
mov ['[eax+74h],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_7B74']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
jmp ['loc_78FC']
jmp ['short', 'loc_7AD5']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '2']
jnz ['short', 'loc_7AA8']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_7AA6']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', 'word', 'ptr', '[ebp+var_68]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_7A98']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
jmp ['loc_78FC']
jmp ['short', 'loc_7AD5']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '6']
jnz ['short', 'loc_7AB3']
jmp ['short', 'loc_7AD5']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '7']
jnz ['short', 'loc_7AC7']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_7AD5']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
jmp ['loc_78FC']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7AF1']
jmp ['loc_7B74']
jmp ['short', 'loc_7B6F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx-1]']
mov ['[eax+25h],', 'dl']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['?_extToU@@YACPAUUConverter@@PBUUConverterSharedData@@CPAPBEPBEPAPA_WPB_WPAPAHHCPAW4UErrorCode@@@Z']
add ['esp,', '2Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+24h],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_5C]']
lea ['eax,', '[edx+ecx+1]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7B6F']
jmp ['short', 'loc_7B74']
jmp ['loc_78FC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+18h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN36']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN35']
dd ['offset', '$LN32']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN33_0']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN34']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSSingleToBMPWithOffsets@@YAXPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_18C]']
mov ['ecx,', '63h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
sar ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_7C6D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+28h]']
mov ['[ebp+var_68],', 'edx']
jmp ['short', 'loc_7C79']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_68],', 'edx']
mov ['[ebp+var_74],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_14]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', '$unrolled$71117']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '10h']
jl ['loc_8292']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '4']
mov ['[ebp+var_98],', 'eax']
mov ['ecx,', '[ebp+var_98]']
mov ['[ebp+var_A4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_B0]']
or ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_B0],', '80100000h']
jl ['short', 'loc_8079']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '20h']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_8095']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
cmp ['[ebp+var_98],', '0']
jg ['loc_7CBF']
mov ['eax,', '[ebp+var_A4]']
sub ['eax,', '[ebp+var_98]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_44]']
sub ['ecx,', 'eax']
mov ['[ebp+var_44],', 'ecx']
cmp ['[ebp+var_5C],', '0']
jz ['loc_8292']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '4']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_98],', '0']
jle ['loc_8292']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
jmp ['loc_80D1']
cmp ['[ebp+var_44],', '0']
jle ['loc_8467']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_8467']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_80],', '80100000h']
jge ['short', 'loc_82E7']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_8292']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
mov ['[ebp+var_89],', 'al']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '2']
jnz ['short', 'loc_832E']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_832C']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_8292']
jmp ['short', 'loc_8358']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '6']
jnz ['short', 'loc_833C']
jmp ['short', 'loc_8358']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '7']
jnz ['short', 'loc_8353']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_8358']
jmp ['loc_8292']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_839E']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_BC]']
sub ['eax,', '1']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jle ['short', 'loc_839E']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_836A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_83BD']
jmp ['loc_8467']
jmp ['loc_845D']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx-1]']
mov ['[eax+25h],', 'dl']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
push ['edx']
mov ['eax,', '[ebp+var_74]']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?_extToU@@YACPAUUConverter@@PBUUConverterSharedData@@CPAPBEPBEPAPA_WPB_WPAPAHHCPAW4UErrorCode@@@Z']
add ['esp,', '2Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+24h],', 'al']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_74]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8438']
jmp ['short', 'loc_8467']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_38]']
sar ['ecx,', '1']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_14]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_845D']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'eax']
jmp ['$unrolled$71117']
jmp ['loc_8292']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8498']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_8498']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[eax+14h]']
jb ['short', 'loc_8498']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_84DE']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_C8],', 'eax']
cmp ['[ebp+var_C8],', '0']
jbe ['short', 'loc_84DE']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_C8]']
sub ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
jmp ['short', 'loc_84AA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+18h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN41']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '18Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN40']
dd ['offset', '$LN37']
dd ['0FFFFFFC8h,', '4']
dd ['offset', '$LN38']
dd ['0FFFFFFA4h,', '4']
dd ['offset', '$LN39']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSingleOrLead@@YACPAY0BAA@$$CBHECE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
movzx ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jl ['short', 'loc_85E5']
mov ['eax,', '[ebp+var_14]']
shr ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?hasValidTrailBytes@@YACPAY0BAA@$$CBHE@Z']
add ['esp,', '8']
jmp ['short', 'loc_8612']
jmp ['short', 'loc_8612']
mov ['eax,', '[ebp+var_14]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
mov ['[ebp+var_1D],', 'al']
movzx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '8']
jnz ['short', 'loc_8608']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_8608']
xor ['al,', 'al']
jmp ['short', 'loc_8612']
jmp ['short', 'loc_8612']
movzx ['eax,', '[ebp+var_1D]']
cmp ['eax,', '7']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasValidTrailBytes@@YACPAY0BAA@$$CBHE@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_4]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+284h]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_867A']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '7']
jz ['short', 'loc_867A']
mov ['al,', '1']
jmp ['loc_8731']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+104h]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_86A1']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '7']
jz ['short', 'loc_86A1']
mov ['al,', '1']
jmp ['loc_8731']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_86B3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0FFh']
jg ['short', 'loc_86E2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_86E0']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '7']
jz ['short', 'loc_86E0']
mov ['al,', '1']
jmp ['short', 'loc_8731']
jmp ['short', 'loc_86AA']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_86F4']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0FFh']
jg ['short', 'loc_872F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_872D']
mov ['eax,', '[ebp+var_20]']
shr ['eax,', '18h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?hasValidTrailBytes@@YACPAY0BAA@$$CBHE@Z']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_872D']
mov ['al,', '1']
jmp ['short', 'loc_8731']
jmp ['short', 'loc_86EB']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '178h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_178]']
mov ['ecx,', '5Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0FEh]']
test ['ecx,', 'ecx']
jle ['short', 'loc_8787']
mov ['eax,', '0FFFFFFF7h']
jmp ['loc_8D4D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C9h]']
and ['edx,', '2']
jz ['short', 'loc_87A5']
mov ['eax,', '0FFFFFFF7h']
jmp ['loc_8D4D']
jmp ['short', 'loc_87C9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Ch]']
cmp ['edx,', '1']
jnz ['short', 'loc_87C9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ucnv_MBCSSingleGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
jmp ['loc_8D4D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_87FA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+28h]']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_8806']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+2Ch]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+30h]']
mov ['[ebp+var_59],', 'cl']
movzx ['edx,', '[ebp+var_59]']
test ['edx,', 'edx']
jnz ['short', 'loc_8838']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['dl,', '[ecx+1Dh]']
mov ['[ebp+var_59],', 'dl']
mov ['[ebp+var_74],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_8BAA']
movzx ['eax,', '[ebp+var_59]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_68],', '0']
jl ['loc_88F6']
mov ['eax,', '[ebp+var_68]']
shr ['eax,', '18h']
mov ['[ebp+var_59],', 'al']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFFFh']
add ['eax,', '[ebp+var_50]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_88F1']
movzx ['eax,', '[ebp+var_59]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jge ['short', 'loc_88F1']
mov ['eax,', '[ebp+var_68]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
cmp ['eax,', '4']
jnz ['short', 'loc_88F1']
movzx ['eax,', 'word', 'ptr', '[ebp+var_68]']
add ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_44]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_74],', 'edx']
cmp ['[ebp+var_74],', '0FFFEh']
jge ['short', 'loc_88F1']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_68]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['[ebp+var_59],', 'al']
jmp ['loc_8BAA']
jmp ['loc_8BA5']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+var_68]']
shr ['eax,', '18h']
and ['eax,', '7Fh']
mov ['[ebp+var_59],', 'al']
mov ['eax,', '[ebp+var_68]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
mov ['[ebp+var_7D],', 'al']
movzx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jnz ['short', 'loc_8931']
movzx ['eax,', 'word', 'ptr', '[ebp+var_68]']
mov ['[ebp+var_74],', 'eax']
jmp ['loc_8BAA']
jmp ['loc_8B5E']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '4']
jnz ['short', 'loc_89AA']
movzx ['eax,', 'word', 'ptr', '[ebp+var_68]']
add ['eax,', '[ebp+var_50]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_44]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_74],', 'edx']
cmp ['[ebp+var_74],', '0FFFEh']
jge ['short', 'loc_8961']
jmp ['loc_8BAA']
jmp ['short', 'loc_89A5']
cmp ['[ebp+var_74],', '0FFFEh']
jnz ['short', 'loc_899C']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_899A']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
add ['edx,', '1Ch']
push ['edx']
call ['?ucnv_MBCSGetFallback@@YAHPAUUConverterMBCSTable@@I@Z']
add ['esp,', '8']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0FFFEh']
jz ['short', 'loc_899A']
jmp ['loc_8BAA']
jmp ['short', 'loc_89A5']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_8B5E']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '5']
jnz ['loc_8AB3']
movzx ['eax,', 'word', 'ptr', '[ebp+var_68]']
add ['eax,', '[ebp+var_50]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_44]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_74],', '0D800h']
jge ['short', 'loc_89EA']
jmp ['loc_8BAA']
jmp ['loc_8AAE']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_8A07']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_74],', '0DFFFh']
setle ['cl']
mov ['[ebp+var_178],', 'ecx']
jmp ['short', 'loc_8A19']
xor ['edx,', 'edx']
cmp ['[ebp+var_74],', '0DBFFh']
setle ['dl']
mov ['[ebp+var_178],', 'edx']
cmp ['[ebp+var_178],', '0']
jz ['short', 'loc_8A48']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '3FFh']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_44]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
lea ['edx,', '[eax+ecx+2400h]']
mov ['[ebp+var_74],', 'edx']
jmp ['loc_8BAA']
jmp ['short', 'loc_8AAE']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_8A6D']
mov ['ecx,', '[ebp+var_74]']
and ['ecx,', '0FFFEh']
xor ['edx,', 'edx']
cmp ['ecx,', '0E000h']
setz ['dl']
mov ['[ebp+var_178],', 'edx']
jmp ['short', 'loc_8A7F']
xor ['eax,', 'eax']
cmp ['[ebp+var_74],', '0E000h']
setz ['al']
mov ['[ebp+var_178],', 'eax']
cmp ['[ebp+var_178],', '0']
jz ['short', 'loc_8A9C']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_44]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_74],', 'edx']
jmp ['loc_8BAA']
jmp ['short', 'loc_8AAE']
cmp ['[ebp+var_74],', '0FFFFh']
jnz ['short', 'loc_8AAE']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_8B5E']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '1']
jz ['short', 'loc_8ACE']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '3']
jnz ['short', 'loc_8AE5']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_8AE5']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFFh']
add ['eax,', '10000h']
mov ['[ebp+var_74],', 'eax']
jmp ['loc_8BAA']
jmp ['short', 'loc_8B5E']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '8']
jnz ['short', 'loc_8B10']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Dh]']
test ['edx,', 'edx']
jz ['short', 'loc_8B0E']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+30h]']
mov ['[ebp+var_59],', 'cl']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_8B5E']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '2']
jnz ['short', 'loc_8B2D']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_8B2B']
movzx ['eax,', 'word', 'ptr', '[ebp+var_68]']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_8BAA']
jmp ['short', 'loc_8B5E']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '6']
jnz ['short', 'loc_8B38']
jmp ['short', 'loc_8B5E']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '7']
jnz ['short', 'loc_8B4C']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_8B5E']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_883F']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8B7E']
jmp ['short', 'loc_8BAA']
jmp ['short', 'loc_8BA5']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '0FFFFFFF7h']
jmp ['loc_8D4D']
jmp ['loc_883F']
cmp ['[ebp+var_74],', '0']
jge ['loc_8D2D']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8C2C']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_8C2C']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_8C2C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '25h']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+24h],', 'al']
mov ['eax,', '[ebp+var_8C]']
mov ['ecx,', '[ebp+var_2C]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jb ['short', 'loc_8BF1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Bh']
jmp ['loc_8D26']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_8D1D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Dh]']
test ['edx,', 'edx']
setnz ['al']
mov ['[ebp+var_95],', 'al']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '25h']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_2C]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_8C9C']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
jmp ['short', 'loc_8D1B']
mov ['[ebp+var_AD],', '1']
jmp ['short', 'loc_8CB3']
mov ['al,', '[ebp+var_AD]']
add ['al,', '1']
mov ['[ebp+var_AD],', 'al']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_8D09']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
movzx ['edx,', '[ebp+var_95]']
push ['edx']
movzx ['eax,', '[ebp+var_59]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['?isSingleOrLead@@YACPAY0BAA@$$CBHECE@Z']
add ['esp,', '10h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_8D09']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_2C]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_8CA5']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+24h],', 'cl']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_8D26']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '8']
mov ['[ebp+var_74],', '0FFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_74]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '178h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSSingleGetNextUChar@@YAHPAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_8DB6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+28h]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_8DC2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_8EA8']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
cmp ['[ebp+var_38],', '80100000h']
jge ['short', 'loc_8E01']
movzx ['eax,', 'word', 'ptr', '[ebp+var_38]']
jmp ['loc_8EB6']
mov ['eax,', '[ebp+var_38]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
mov ['[ebp+var_41],', 'al']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '1']
jz ['short', 'loc_8E28']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '3']
jnz ['short', 'loc_8E39']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_8E39']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFh']
add ['eax,', '10000h']
jmp ['short', 'loc_8EB6']
jmp ['short', 'loc_8E77']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '2']
jnz ['short', 'loc_8E53']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_8E51']
movzx ['eax,', 'word', 'ptr', '[ebp+var_38]']
jmp ['short', 'loc_8EB6']
jmp ['short', 'loc_8E77']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '6']
jnz ['short', 'loc_8E5E']
jmp ['short', 'loc_8E77']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '7']
jnz ['short', 'loc_8E72']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['short', 'loc_8E77']
jmp ['loc_8DC2']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8E90']
jmp ['short', 'loc_8EA8']
jmp ['short', 'loc_8EA3']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '0FFFFFFF7h']
jmp ['short', 'loc_8EB6']
jmp ['loc_8DC2']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '8']
mov ['eax,', '0FFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucnv_MBCSSimpleGetNextUChar_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_8],', '0']
jg ['short', 'loc_8EFA']
mov ['eax,', '0FFFFh']
jmp ['loc_91C6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+1Dh]']
mov ['[ebp+var_29],', 'cl']
mov ['[ebp+var_50],', '0']
movzx ['eax,', '[ebp+var_29]']
shl ['eax,', '0Ah']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[eax+edx*4]']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '1']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_5C],', '0']
jl ['short', 'loc_8F79']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '18h']
mov ['[ebp+var_29],', 'al']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '0FFFFFFh']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+arg_8]']
jnz ['short', 'loc_8F74']
mov ['eax,', '0FFFFh']
jmp ['loc_91C6']
jmp ['loc_9179']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '14h']
and ['eax,', '0Fh']
mov ['[ebp+var_35],', 'al']
movzx ['eax,', '[ebp+var_35]']
cmp ['eax,', '4']
jnz ['short', 'loc_8FD9']
movzx ['eax,', 'word', 'ptr', '[ebp+var_5C]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_44],', 'edx']
cmp ['[ebp+var_44],', '0FFFEh']
jz ['short', 'loc_8FB0']
jmp ['short', 'loc_8FCF']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_8FCF']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1Ch']
push ['ecx']
call ['?ucnv_MBCSGetFallback@@YAHPAUUConverterMBCSTable@@I@Z']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_917E']
jmp ['loc_9172']
movzx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jnz ['short', 'loc_8FF2']
movzx ['eax,', 'word', 'ptr', '[ebp+var_5C]']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_917E']
jmp ['loc_9172']
movzx ['eax,', '[ebp+var_35]']
cmp ['eax,', '5']
jnz ['loc_90F8']
movzx ['eax,', 'word', 'ptr', '[ebp+var_5C]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_44],', '0D800h']
jge ['short', 'loc_902D']
jmp ['loc_90F1']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_904A']
xor ['ecx,', 'ecx']
cmp ['[ebp+var_44],', '0DFFFh']
setle ['cl']
mov ['[ebp+var_130],', 'ecx']
jmp ['short', 'loc_905C']
xor ['edx,', 'edx']
cmp ['[ebp+var_44],', '0DBFFh']
setle ['dl']
mov ['[ebp+var_130],', 'edx']
cmp ['[ebp+var_130],', '0']
jz ['short', 'loc_9086']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '3FFh']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
lea ['edx,', '[eax+ecx+2400h]']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_90F1']
mov ['eax,', '1']
test ['eax,', 'eax']
jz ['short', 'loc_90AB']
mov ['ecx,', '[ebp+var_44]']
and ['ecx,', '0FFFEh']
xor ['edx,', 'edx']
cmp ['ecx,', '0E000h']
setz ['dl']
mov ['[ebp+var_130],', 'edx']
jmp ['short', 'loc_90BD']
xor ['eax,', 'eax']
cmp ['[ebp+var_44],', '0E000h']
setz ['al']
mov ['[ebp+var_130],', 'eax']
cmp ['[ebp+var_130],', '0']
jz ['short', 'loc_90D5']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_90F1']
cmp ['[ebp+var_44],', '0FFFFh']
jnz ['short', 'loc_90EA']
mov ['eax,', '0FFFFh']
jmp ['loc_91C6']
jmp ['short', 'loc_90F1']
mov ['[ebp+var_44],', '0FFFEh']
jmp ['loc_917E']
jmp ['short', 'loc_9172']
movzx ['eax,', '[ebp+var_35]']
cmp ['eax,', '1']
jnz ['short', 'loc_9115']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '0FFFFFh']
add ['eax,', '10000h']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_917E']
jmp ['short', 'loc_9172']
movzx ['eax,', '[ebp+var_35]']
cmp ['eax,', '2']
jnz ['short', 'loc_9136']
xor ['eax,', 'eax']
jz ['short', 'loc_912B']
mov ['[ebp+var_44],', '0FFFEh']
jmp ['short', 'loc_917E']
movzx ['eax,', 'word', 'ptr', '[ebp+var_5C]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_917E']
jmp ['short', 'loc_9172']
movzx ['eax,', '[ebp+var_35]']
cmp ['eax,', '3']
jnz ['short', 'loc_9160']
xor ['eax,', 'eax']
jz ['short', 'loc_914C']
mov ['[ebp+var_44],', '0FFFEh']
jmp ['short', 'loc_917E']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '0FFFFFh']
add ['eax,', '10000h']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_917E']
jmp ['short', 'loc_9172']
movzx ['eax,', '[ebp+var_35]']
cmp ['eax,', '6']
jnz ['short', 'loc_9172']
mov ['[ebp+var_44],', '0FFFEh']
jmp ['short', 'loc_917E']
mov ['eax,', '0FFFFh']
jmp ['short', 'loc_91C6']
jmp ['loc_8F23']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+arg_8]']
jz ['short', 'loc_918D']
mov ['eax,', '0FFFFh']
jmp ['short', 'loc_91C6']
cmp ['[ebp+var_44],', '0FFFEh']
jnz ['short', 'loc_91C3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_68],', 'ecx']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_91C3']
movzx ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_ucnv_extSimpleMatchToU_56']
add ['esp,', '10h']
jmp ['short', 'loc_91C6']
mov ['eax,', '[ebp+var_44]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucnv_MBCSFromUnicodeWithOffsets_56 proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '208h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_208]']
mov ['ecx,', '82h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_E0],', '0']
mov ['[ebp+var_DF],', '0']
mov ['[ebp+var_EC],', '0']
mov ['[ebp+var_EB],', '0']
mov ['[ebp+var_110],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0B4h],', '0']
jl ['short', 'loc_9273']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ucnv_extContinueMatchFromU_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_926E']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+0FDh]']
test ['ecx,', 'ecx']
jge ['short', 'loc_9273']
jmp ['loc_A641']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['dl,', '[ecx+0C8h]']
mov ['[ebp+var_7D],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['dl,', '[ecx+0C9h]']
mov ['[ebp+var_125],', 'dl']
movzx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jnz ['short', 'loc_92DD']
movzx ['eax,', '[ebp+var_125]']
and ['eax,', '2']
jnz ['short', 'loc_92DD']
movzx ['eax,', '[ebp+var_125]']
and ['eax,', '1']
jnz ['short', 'loc_92C6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ucnv_MBCSSingleFromBMPWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
jmp ['short', 'loc_92D6']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ucnv_MBCSSingleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
jmp ['loc_A641']
jmp ['short', 'loc_930C']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '1']
jnz ['short', 'loc_930C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movsx ['edx,', 'byte', 'ptr', '[ecx+0CAh]']
test ['edx,', 'edx']
jz ['short', 'loc_930C']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ucnv_MBCSDoubleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z']
add ['esp,', '8']
jmp ['loc_A641']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movsx ['edx,', 'byte', 'ptr', '[ecx+0CAh]']
test ['edx,', 'edx']
jz ['short', 'loc_936A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+38h]']
mov ['[ebp+var_5C],', 'edx']
jmp ['short', 'loc_9371']
mov ['[ebp+var_5C],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_938D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0C0h]']
mov ['[ebp+var_74],', 'edx']
jmp ['short', 'loc_939C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0BCh]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0D0h]']
mov ['[ebp+var_C8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_8C],', 'ecx']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '0Ch']
jnz ['short', 'loc_93E4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_11C],', 'ecx']
cmp ['[ebp+var_11C],', '0']
jnz ['short', 'loc_93E2']
mov ['[ebp+var_11C],', '1']
jmp ['short', 'loc_93EE']
mov ['[ebp+var_11C],', '0']
mov ['[ebp+var_98],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8C]']
neg ['eax']
sbb ['eax,', 'eax']
mov ['[ebp+var_A4],', 'eax']
mov ['[ebp+var_B0],', '0']
lea ['eax,', '[ebp+var_E0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
push ['0']
call ['?getSISOBytes@@YAHW4SISO_Option@@IPAE@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_F5],', 'al']
lea ['eax,', '[ebp+var_EC]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
push ['1']
call ['?getSISOBytes@@YAHW4SISO_Option@@IPAE@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_101],', 'al']
cmp ['[ebp+var_8C],', '0']
jz ['short', 'loc_9467']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_9467']
jmp ['$getTrail$71890']
jmp ['$getTrail$71890']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_A4F6']
cmp ['[ebp+var_38],', '0']
jle ['loc_A4E6']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_8C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_8C],', '7Fh']
jg ['short', 'loc_9520']
mov ['ecx,', '[ebp+var_8C]']
sar ['ecx,', '2']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '[ebp+var_C8]']
jz ['short', 'loc_9520']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8C]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_9508']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_8C],', '0']
jmp ['loc_9467']
cmp ['[ebp+var_8C],', '0D7FFh']
jg ['loc_9A5D']
cmp ['[ebp+var_5C],', '0']
jz ['loc_9A5D']
mov ['eax,', '[ebp+var_8C]']
sar ['eax,', '6']
mov ['ecx,', '[ebp+var_5C]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_D4],', 'edx']
movzx ['eax,', '[ebp+var_7D]']
mov ['[ebp+var_208],', 'eax']
mov ['ecx,', '[ebp+var_208]']
sub ['ecx,', '1']
mov ['[ebp+var_208],', 'ecx']
cmp ['[ebp+var_208],', '0DAh']
ja ['$LN113']
mov ['edx,', '[ebp+var_208]']
movzx ['eax,', 'ds:$LN207[edx]']
jmp ['ds:$LN216[eax*4]']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '3Fh']
add ['eax,', '[ebp+var_D4]']
mov ['ecx,', '[ebp+var_74]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_D4],', 'edx']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_95D6']
cmp ['[ebp+var_D4],', '0']
jnz ['short', 'loc_95CA']
jmp ['$unassigned$71908']
jmp ['$unassigned$71908']
jmp ['short', 'loc_95D4']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_95E0']
mov ['[ebp+var_110],', '2']
jmp ['loc_9A58']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_11C]']
mov ['[eax+34h],', 'ecx']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '3Fh']
add ['eax,', '[ebp+var_D4]']
mov ['ecx,', '[ebp+var_74]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_D4],', 'edx']
cmp ['[ebp+var_D4],', '0FFh']
ja ['loc_96C9']
cmp ['[ebp+var_D4],', '0']
jnz ['short', 'loc_9635']
jmp ['$unassigned$71908']
jmp ['$unassigned$71908']
jmp ['loc_96C4']
cmp ['[ebp+var_11C],', '1']
jg ['short', 'loc_964A']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_96C4']
movzx ['eax,', '[ebp+var_F5]']
cmp ['eax,', '1']
jnz ['short', 'loc_9678']
movzx ['eax,', '[ebp+var_E0]']
shl ['eax,', '8']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '2']
jmp ['short', 'loc_96BA']
movzx ['eax,', '[ebp+var_F5]']
cmp ['eax,', '2']
jnz ['short', 'loc_96BA']
movzx ['eax,', '[ebp+var_DF]']
shl ['eax,', '8']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
movzx ['eax,', '[ebp+var_E0]']
shl ['eax,', '10h']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '3']
mov ['[ebp+var_11C],', '1']
jmp ['loc_9758']
cmp ['[ebp+var_11C],', '2']
jnz ['short', 'loc_96DE']
mov ['[ebp+var_110],', '2']
jmp ['short', 'loc_9758']
movzx ['eax,', '[ebp+var_101]']
cmp ['eax,', '1']
jnz ['short', 'loc_970C']
movzx ['eax,', '[ebp+var_EC]']
shl ['eax,', '10h']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '3']
jmp ['short', 'loc_974E']
movzx ['eax,', '[ebp+var_101]']
cmp ['eax,', '2']
jnz ['short', 'loc_974E']
movzx ['eax,', '[ebp+var_EB]']
shl ['eax,', '10h']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
movzx ['eax,', '[ebp+var_EC]']
shl ['eax,', '18h']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '4']
mov ['[ebp+var_11C],', '2']
jmp ['loc_9A58']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '3Fh']
add ['eax,', '[ebp+var_D4]']
mov ['ecx,', '[ebp+var_74]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_D4],', 'edx']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_9791']
jmp ['$unassigned$71908']
jmp ['$unassigned$71908']
jmp ['short', 'loc_979B']
mov ['[ebp+var_110],', '2']
jmp ['loc_9A58']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '3Fh']
add ['eax,', '[ebp+var_D4]']
imul ['eax,', '3']
add ['eax,', '[ebp+var_74]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+var_68]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_68]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
or ['ecx,', 'eax']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_9809']
cmp ['[ebp+var_D4],', '0']
jnz ['short', 'loc_97FD']
jmp ['$unassigned$71908']
jmp ['$unassigned$71908']
jmp ['short', 'loc_9807']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_982B']
cmp ['[ebp+var_D4],', '0FFFFh']
ja ['short', 'loc_9821']
mov ['[ebp+var_110],', '2']
jmp ['short', 'loc_982B']
mov ['[ebp+var_110],', '3']
jmp ['loc_9A58']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '3Fh']
add ['eax,', '[ebp+var_D4]']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_D4],', 'edx']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_9878']
cmp ['[ebp+var_D4],', '0']
jnz ['short', 'loc_986C']
jmp ['$unassigned$71908']
jmp ['$unassigned$71908']
jmp ['short', 'loc_9876']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_98B2']
cmp ['[ebp+var_D4],', '0FFFFh']
ja ['short', 'loc_9890']
mov ['[ebp+var_110],', '2']
jmp ['short', 'loc_98B2']
cmp ['[ebp+var_D4],', '0FFFFFFh']
ja ['short', 'loc_98A8']
mov ['[ebp+var_110],', '3']
jmp ['short', 'loc_98B2']
mov ['[ebp+var_110],', '4']
jmp ['loc_9A58']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '3Fh']
add ['eax,', '[ebp+var_D4]']
mov ['ecx,', '[ebp+var_74]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_D4],', 'edx']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_9900']
cmp ['[ebp+var_D4],', '0']
jnz ['short', 'loc_98F4']
jmp ['$unassigned$71908']
jmp ['$unassigned$71908']
jmp ['short', 'loc_98FE']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_995E']
mov ['eax,', '[ebp+var_D4]']
and ['eax,', '8000h']
jnz ['short', 'loc_992A']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '8E8000h']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '3']
jmp ['short', 'loc_995E']
mov ['eax,', '[ebp+var_D4]']
and ['eax,', '80h']
jnz ['short', 'loc_9954']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '8F0080h']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '3']
jmp ['short', 'loc_995E']
mov ['[ebp+var_110],', '2']
jmp ['loc_9A58']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '3Fh']
add ['eax,', '[ebp+var_D4]']
imul ['eax,', '3']
add ['eax,', '[ebp+var_74]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+var_68]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_68]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
or ['ecx,', 'eax']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_99CC']
cmp ['[ebp+var_D4],', '0']
jnz ['short', 'loc_99C0']
jmp ['$unassigned$71908']
jmp ['$unassigned$71908']
jmp ['short', 'loc_99CA']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_9A42']
cmp ['[ebp+var_D4],', '0FFFFh']
ja ['short', 'loc_99E4']
mov ['[ebp+var_110],', '2']
jmp ['short', 'loc_9A42']
mov ['eax,', '[ebp+var_D4]']
and ['eax,', '800000h']
jnz ['short', 'loc_9A0E']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '8E800000h']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '4']
jmp ['short', 'loc_9A42']
mov ['eax,', '[ebp+var_D4]']
and ['eax,', '8000h']
jnz ['short', 'loc_9A38']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '8F008000h']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '4']
jmp ['short', 'loc_9A42']
mov ['[ebp+var_110],', '3']
jmp ['short', 'loc_9A58']
mov ['[ebp+var_D4],', '0']
mov ['[ebp+var_110],', '0']
jmp ['loc_A196']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['loc_9B3E']
movzx ['eax,', '[ebp+var_125]']
and ['eax,', '2']
jnz ['loc_9B3E']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '400h']
jnz ['loc_9B30']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_9B29']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_134],', 'cx']
movzx ['eax,', '[ebp+var_134]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_9B19']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_8C]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_134]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_8C],', 'edx']
movzx ['eax,', '[ebp+var_125]']
and ['eax,', '1']
jnz ['short', 'loc_9B17']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_11C]']
mov ['[eax+34h],', 'ecx']
jmp ['$unassigned$71908']
jmp ['$unassigned$71908']
jmp ['short', 'loc_9B27']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_A4F6']
jmp ['short', 'loc_9B2E']
jmp ['loc_A4F6']
jmp ['short', 'loc_9B3E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_A4F6']
mov ['eax,', '[ebp+var_8C]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_8C]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+edx*4]']
mov ['[ebp+var_BC],', 'edx']
movzx ['eax,', '[ebp+var_7D]']
mov ['[ebp+var_208],', 'eax']
mov ['ecx,', '[ebp+var_208]']
sub ['ecx,', '1']
mov ['[ebp+var_208],', 'ecx']
cmp ['[ebp+var_208],', '0DAh']
ja ['$LN51']
mov ['edx,', '[ebp+var_208]']
movzx ['eax,', 'ds:$LN208[edx]']
jmp ['ds:$LN217[eax*4]']
movzx ['eax,', 'word', 'ptr', '[ebp+var_BC]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8C]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_9BDF']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_9BE9']
mov ['[ebp+var_110],', '2']
jmp ['loc_A074']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_11C]']
mov ['[eax+34h],', 'ecx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_BC]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8C]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0FFh']
ja ['loc_9CF9']
cmp ['[ebp+var_D4],', '0']
jnz ['short', 'loc_9C65']
mov ['ecx,', '[ebp+var_8C]']
and ['ecx,', '0Fh']
add ['ecx,', '10h']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '[ebp+var_BC]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
jnz ['short', 'loc_9C65']
mov ['[ebp+var_110],', '0']
jmp ['loc_9CF4']
cmp ['[ebp+var_11C],', '1']
jg ['short', 'loc_9C7A']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_9CF4']
movzx ['eax,', '[ebp+var_F5]']
cmp ['eax,', '1']
jnz ['short', 'loc_9CA8']
movzx ['eax,', '[ebp+var_E0]']
shl ['eax,', '8']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '2']
jmp ['short', 'loc_9CEA']
movzx ['eax,', '[ebp+var_F5]']
cmp ['eax,', '2']
jnz ['short', 'loc_9CEA']
movzx ['eax,', '[ebp+var_DF]']
shl ['eax,', '8']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
movzx ['eax,', '[ebp+var_E0]']
shl ['eax,', '10h']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '3']
mov ['[ebp+var_11C],', '1']
jmp ['loc_9D88']
cmp ['[ebp+var_11C],', '2']
jnz ['short', 'loc_9D0E']
mov ['[ebp+var_110],', '2']
jmp ['short', 'loc_9D88']
movzx ['eax,', '[ebp+var_101]']
cmp ['eax,', '1']
jnz ['short', 'loc_9D3C']
movzx ['eax,', '[ebp+var_EC]']
shl ['eax,', '10h']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '3']
jmp ['short', 'loc_9D7E']
movzx ['eax,', '[ebp+var_101]']
cmp ['eax,', '2']
jnz ['short', 'loc_9D7E']
movzx ['eax,', '[ebp+var_EB]']
shl ['eax,', '10h']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
movzx ['eax,', '[ebp+var_EC]']
shl ['eax,', '18h']
or ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '4']
mov ['[ebp+var_11C],', '2']
jmp ['loc_A074']
movzx ['eax,', 'word', 'ptr', '[ebp+var_BC]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8C]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_9DDD']
mov ['[ebp+var_BC],', '0']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '0']
jmp ['short', 'loc_9DE7']
mov ['[ebp+var_110],', '2']
jmp ['loc_A074']
movzx ['eax,', 'word', 'ptr', '[ebp+var_BC]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8C]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
imul ['eax,', '3']
add ['eax,', '[ebp+var_74]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+var_68]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_68]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
or ['ecx,', 'eax']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_9E46']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_9E68']
cmp ['[ebp+var_D4],', '0FFFFh']
ja ['short', 'loc_9E5E']
mov ['[ebp+var_110],', '2']
jmp ['short', 'loc_9E68']
mov ['[ebp+var_110],', '3']
jmp ['loc_A074']
movzx ['eax,', 'word', 'ptr', '[ebp+var_BC]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8C]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx+eax*4]']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_9EA6']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_9EE0']
cmp ['[ebp+var_D4],', '0FFFFh']
ja ['short', 'loc_9EBE']
mov ['[ebp+var_110],', '2']
jmp ['short', 'loc_9EE0']
cmp ['[ebp+var_D4],', '0FFFFFFh']
ja ['short', 'loc_9ED6']
mov ['[ebp+var_110],', '3']
jmp ['short', 'loc_9EE0']
mov ['[ebp+var_110],', '4']
jmp ['loc_A074']
movzx ['eax,', 'word', 'ptr', '[ebp+var_BC]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8C]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_9F1F']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_9F7D']
mov ['eax,', '[ebp+var_D4]']
and ['eax,', '8000h']
jnz ['short', 'loc_9F49']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '8E8000h']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '3']
jmp ['short', 'loc_9F7D']
mov ['eax,', '[ebp+var_D4]']
and ['eax,', '80h']
jnz ['short', 'loc_9F73']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '8F0080h']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '3']
jmp ['short', 'loc_9F7D']
mov ['[ebp+var_110],', '2']
jmp ['loc_A074']
movzx ['eax,', 'word', 'ptr', '[ebp+var_BC]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_8C]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
imul ['eax,', '3']
add ['eax,', '[ebp+var_74]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+var_68]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '[ebp+var_68]']
movzx ['eax,', 'byte', 'ptr', '[edx+2]']
or ['ecx,', 'eax']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0FFh']
ja ['short', 'loc_9FDC']
mov ['[ebp+var_110],', '1']
jmp ['short', 'loc_A052']
cmp ['[ebp+var_D4],', '0FFFFh']
ja ['short', 'loc_9FF4']
mov ['[ebp+var_110],', '2']
jmp ['short', 'loc_A052']
mov ['eax,', '[ebp+var_D4]']
and ['eax,', '800000h']
jnz ['short', 'loc_A01E']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '8E800000h']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '4']
jmp ['short', 'loc_A052']
mov ['eax,', '[ebp+var_D4]']
and ['eax,', '8000h']
jnz ['short', 'loc_A048']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '8F008000h']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '4']
jmp ['short', 'loc_A052']
mov ['[ebp+var_110],', '3']
jmp ['short', 'loc_A074']
mov ['[ebp+var_BC],', '0']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_110],', '0']
mov ['ecx,', '[ebp+var_8C]']
and ['ecx,', '0Fh']
add ['ecx,', '10h']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '[ebp+var_BC]']
neg ['eax']
sbb ['eax,', 'eax']
neg ['eax']
jnz ['loc_A196']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+23h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A0C8']
mov ['eax,', '[ebp+var_8C]']
sub ['eax,', '0E000h']
cmp ['eax,', '1900h']
jb ['short', 'loc_A0C8']
mov ['eax,', '[ebp+var_8C]']
sub ['eax,', '0F0000h']
cmp ['eax,', '20000h']
jnb ['short', '$unassigned$71908']
cmp ['[ebp+var_D4],', '0']
jnz ['loc_A196']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
push ['edx']
mov ['eax,', '[ebp+var_A4]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '[ebp+var_38]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_8C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z']
add ['esp,', '2Ch']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax+8]']
sar ['ecx,', '1']
add ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_B0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_11C],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A167']
jmp ['loc_A4F6']
jmp ['short', 'loc_A196']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_A191']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_A4],', 'eax']
jmp ['loc_9467']
mov ['eax,', '[ebp+var_110]']
cmp ['eax,', '[ebp+var_38]']
jg ['loc_A32D']
cmp ['[ebp+var_44],', '0']
jnz ['loc_A23E']
mov ['eax,', '[ebp+var_110]']
mov ['[ebp+var_208],', 'eax']
mov ['ecx,', '[ebp+var_208]']
sub ['ecx,', '1']
mov ['[ebp+var_208],', 'ecx']
cmp ['[ebp+var_208],', '3']
ja ['short', 'loc_A239']
mov ['edx,', '[ebp+var_208]']
jmp ['ds:$LN218[edx*4]']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_D4]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
jmp ['loc_A31C']
mov ['eax,', '[ebp+var_110]']
mov ['[ebp+var_208],', 'eax']
mov ['ecx,', '[ebp+var_208]']
sub ['ecx,', '1']
mov ['[ebp+var_208],', 'ecx']
cmp ['[ebp+var_208],', '3']
ja ['loc_A31C']
mov ['edx,', '[ebp+var_208]']
jmp ['ds:$LN219[edx*4]']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_D4]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_110]']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_A4B7']
mov ['eax,', '[ebp+var_110]']
sub ['eax,', '[ebp+var_38]']
mov ['[ebp+var_110],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4Ch']
mov ['[ebp+var_140],', 'eax']
mov ['eax,', '[ebp+var_110]']
mov ['[ebp+var_208],', 'eax']
cmp ['[ebp+var_208],', '1']
jz ['short', 'loc_A3B1']
cmp ['[ebp+var_208],', '2']
jz ['short', 'loc_A391']
cmp ['[ebp+var_208],', '3']
jz ['short', 'loc_A371']
jmp ['short', 'loc_A3BF']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_140]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_140]']
add ['edx,', '1']
mov ['[ebp+var_140],', 'edx']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_140]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_140]']
add ['edx,', '1']
mov ['[ebp+var_140],', 'edx']
mov ['eax,', '[ebp+var_140]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_D4]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_110]']
mov ['[eax+3Fh],', 'cl']
mov ['ecx,', '[ebp+var_110]']
shl ['ecx,', '3']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', 'cl']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_208],', 'eax']
cmp ['[ebp+var_208],', '1']
jz ['short', 'loc_A46D']
cmp ['[ebp+var_208],', '2']
jz ['short', 'loc_A43C']
cmp ['[ebp+var_208],', '3']
jz ['short', 'loc_A40B']
jmp ['loc_A49B']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_A43C']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_D4]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_A46D']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_D4]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_A49B']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['[ebp+var_8C],', '0']
jmp ['short', 'loc_A4F6']
mov ['[ebp+var_8C],', '0']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_A4DF']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_A4],', 'eax']
jmp ['loc_9467']
jmp ['short', 'loc_A4F1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_A4F6']
jmp ['loc_9467']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_A60E']
movzx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '0Ch']
jnz ['loc_A60E']
cmp ['[ebp+var_11C],', '2']
jnz ['loc_A60E']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['loc_A60E']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jb ['loc_A60E']
cmp ['[ebp+var_8C],', '0']
jnz ['loc_A60E']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_A5CB']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', '[ebp+var_E0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
movzx ['eax,', '[ebp+var_F5]']
cmp ['eax,', '2']
jnz ['short', 'loc_A5AF']
cmp ['[ebp+var_38],', '2']
jge ['short', 'loc_A59B']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_DF]']
mov ['[eax+4Ch],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+3Fh],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_A5AF']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', '[ebp+var_DF]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_A5C9']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_A604']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_E0]']
mov ['[eax+4Ch],', 'cl']
movzx ['eax,', '[ebp+var_F5]']
cmp ['eax,', '2']
jnz ['short', 'loc_A5EF']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_DF]']
mov ['[eax+4Dh],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_F5]']
mov ['[eax+3Fh],', 'cl']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['[ebp+var_11C],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax+38h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_11C]']
mov ['[eax+34h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+18h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN215']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '208h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN214']
dd ['offset', '$LN209']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN210']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN211']
dd ['0FFFFFF20h,', '2']
dd ['offset', '$LN212']
dd ['0FFFFFF14h,', '2']
dd ['offset', '$LN213']
align ['4']
dd ['offset', '$LN125,', 'offset', '$LN173,', 'offset', '$LN157,', 'offset', '$LN113']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '6']
align ['10h']
dd ['offset', '$LN60,', 'offset', '$LN97,', 'offset', '$LN82,', 'offset', '$LN51']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7,', '7']
db ['7,', '7,', '6']
align ['4']
dd ['offset', '$LN37_0']
dd ['offset', '$LN38_0']
dd ['offset', '$LN39_0']
dd ['offset', '$LN29_0']
dd ['offset', '$LN30_0']
dd ['offset', '$LN31_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getSISOBytes@@YAHW4SISO_Option@@IPAE@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '0']
jz ['short', 'loc_A931']
cmp ['[ebp+var_D0],', '1']
jz ['short', 'loc_A999']
jmp ['loc_A9FF']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1000h']
jz ['short', 'loc_A951']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '0Ah']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+1],', '41h']
mov ['[ebp+var_8],', '2']
jmp ['short', 'loc_A997']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '2000h']
jz ['short', 'loc_A96A']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '29h']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_A997']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '4000h']
jz ['short', 'loc_A98A']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '1Ah']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+1],', '71h']
mov ['[ebp+var_8],', '2']
jmp ['short', 'loc_A997']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '0Fh']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_A9FF']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1000h']
jz ['short', 'loc_A9B9']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '0Ah']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+1],', '42h']
mov ['[ebp+var_8],', '2']
jmp ['short', 'loc_A9FF']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '2000h']
jz ['short', 'loc_A9D2']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '28h']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_A9FF']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '4000h']
jz ['short', 'loc_A9F2']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '1Ah']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax+1],', '70h']
mov ['[ebp+var_8],', '2']
jmp ['short', 'loc_A9FF']
mov ['eax,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[eax],', '0Eh']
mov ['[ebp+var_8],', '1']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+43h],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AA86']
mov ['eax,', '[ebp+arg_28]']
push ['eax']
movzx ['ecx,', '[ebp+arg_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_20]']
push ['edx']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucnv_extInitialMatchFromU_56']
add ['esp,', '2Ch']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_AA86']
xor ['eax,', 'eax']
jmp ['loc_ABAA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '8000h']
jz ['loc_AB9E']
mov ['[ebp+var_14],', 'offset', '_gb18030Ranges']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_AABA']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0Eh']
jge ['loc_AB9E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_8]']
ja ['loc_AB99']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
cmp ['ecx,', '[eax+4]']
ja ['loc_AB99']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '19BEB2h']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[eax]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['ecx,', '0Ah']
div ['ecx']
add ['edx,', '30h']
mov ['[ebp+var_35],', 'dl']
mov ['eax,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['ecx,', '0Ah']
div ['ecx']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['ecx,', '7Eh']
div ['ecx']
add ['edx,', '81h']
mov ['[ebp+var_36],', 'dl']
mov ['eax,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['ecx,', '7Eh']
div ['ecx']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['ecx,', '0Ah']
div ['ecx']
add ['edx,', '30h']
mov ['[ebp+var_37],', 'dl']
mov ['eax,', '[ebp+var_2C]']
xor ['edx,', 'edx']
mov ['ecx,', '0Ah']
div ['ecx']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '81h']
mov ['[ebp+var_38],', 'al']
mov ['eax,', '[ebp+arg_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
push ['4']
lea ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ucnv_fromUWriteBytes_56']
add ['esp,', '20h']
xor ['eax,', 'eax']
jmp ['short', 'loc_ABAA']
jmp ['loc_AAA8']
mov ['eax,', '[ebp+arg_28]']
mov ['dword', 'ptr', '[eax],', '0Ah']
mov ['eax,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN10']
dd ['offset', '$LN9_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSDoubleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_18C]']
mov ['ecx,', '63h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['dl,', '[ecx+0C9h]']
mov ['[ebp+var_B9],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+38h]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_AC8C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0C0h]']
mov ['[ebp+var_68],', 'edx']
jmp ['short', 'loc_AC9B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0BCh]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0D0h]']
mov ['[ebp+var_A4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+var_74]']
neg ['eax']
sbb ['eax,', 'eax']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_8C],', '0']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_ACE0']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_ACE0']
jmp ['$getTrail$71653']
jmp ['$getTrail$71653']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_B0BF']
cmp ['[ebp+var_38],', '0']
jle ['loc_B0AF']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_74],', '7Fh']
jg ['short', 'loc_AD78']
mov ['ecx,', '[ebp+var_74]']
sar ['ecx,', '2']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '[ebp+var_A4]']
jz ['short', 'loc_AD78']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_AD63']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_80]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_74],', '0']
jmp ['loc_ACE0']
cmp ['[ebp+var_74],', '0D7FFh']
jg ['short', 'loc_ADBB']
mov ['eax,', '[ebp+var_74]']
sar ['eax,', '6']
mov ['ecx,', '[ebp+var_5C]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_68]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['[ebp+var_B0],', 'edx']
cmp ['[ebp+var_B0],', '0']
jnz ['short', 'loc_ADB6']
jmp ['$unassigned$71665']
jmp ['$unassigned$71665']
jmp ['loc_AFAC']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['loc_AE80']
movzx ['eax,', '[ebp+var_B9]']
and ['eax,', '2']
jnz ['loc_AE80']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '400h']
jnz ['loc_AE72']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_AE6B']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_C8],', 'cx']
movzx ['eax,', '[ebp+var_C8]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_AE5B']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_74]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_C8]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_74],', 'edx']
movzx ['eax,', '[ebp+var_B9]']
and ['eax,', '1']
jnz ['short', 'loc_AE59']
jmp ['$unassigned$71665']
jmp ['$unassigned$71665']
jmp ['short', 'loc_AE69']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_B0BF']
jmp ['short', 'loc_AE70']
jmp ['loc_B0BF']
jmp ['short', 'loc_AE80']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_B0BF']
mov ['eax,', '[ebp+var_74]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_74]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+edx*4]']
mov ['[ebp+var_98],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_98]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_74]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_68]']
movzx ['eax,', 'word', 'ptr', '[edx+eax*2]']
mov ['[ebp+var_B0],', 'eax']
mov ['ecx,', '[ebp+var_74]']
and ['ecx,', '0Fh']
add ['ecx,', '10h']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '[ebp+var_98]']
jnz ['loc_AFAC']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+23h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_AF08']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '0E000h']
cmp ['eax,', '1900h']
jb ['short', 'loc_AF08']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '0F0000h']
cmp ['eax,', '20000h']
jnb ['short', '$unassigned$71665']
cmp ['[ebp+var_B0],', '0']
jnz ['loc_AFAC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
push ['edx']
mov ['eax,', '[ebp+var_80]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '[ebp+var_38]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z']
add ['esp,', '2Ch']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax+8]']
sar ['ecx,', '1']
add ['ecx,', '[ebp+var_8C]']
mov ['[ebp+var_8C],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_AF92']
jmp ['loc_B0BF']
jmp ['short', 'loc_AFAC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_80],', 'eax']
jmp ['loc_ACE0']
cmp ['[ebp+var_B0],', '0FFh']
ja ['short', 'loc_AFF1']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_AFE3']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_80]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_B098']
mov ['eax,', '[ebp+var_B0]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_38],', '2']
jl ['short', 'loc_B055']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_B04A']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_80]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_80]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_B098']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_B06C']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_80]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax+4Ch],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+3Fh],', '1']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_B0BF']
mov ['[ebp+var_74],', '0']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_80],', 'eax']
jmp ['loc_ACE0']
jmp ['short', 'loc_B0BA']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_B0BF']
jmp ['loc_ACE0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax+38h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+18h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN43']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '18Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN42']
dd ['offset', '$LN39_1']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN40_0']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN41_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSSingleFromUnicodeWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '174h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_174]']
mov ['ecx,', '5Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_B1CE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0C0h]']
mov ['[ebp+var_5C],', 'edx']
jmp ['short', 'loc_B1DD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0BCh]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+23h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_B1F6']
mov ['eax,', '800h']
mov ['[ebp+var_98],', 'ax']
jmp ['short', 'loc_B202']
mov ['eax,', '0C00h']
mov ['[ebp+var_98],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C9h]']
and ['edx,', '1']
mov ['[ebp+var_A1],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+var_68]']
neg ['eax']
sbb ['eax,', 'eax']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_80],', '0']
cmp ['[ebp+var_68],', '0']
jz ['short', 'loc_B242']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_B242']
jmp ['short', '$getTrail$71737']
jmp ['short', '$getTrail$71737']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['loc_B442']
cmp ['[ebp+var_38],', '0']
jle ['loc_B432']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_68],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['loc_B31D']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '400h']
jnz ['short', 'loc_B30F']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_B308']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['eax,', '[ebp+var_B0]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_B2F8']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_80]']
add ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_68]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_B0]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_68],', 'edx']
movsx ['eax,', '[ebp+var_A1]']
test ['eax,', 'eax']
jnz ['short', 'loc_B2F6']
jmp ['$unassigned$71751']
jmp ['$unassigned$71751']
jmp ['short', 'loc_B306']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_B442']
jmp ['short', 'loc_B30D']
jmp ['loc_B442']
jmp ['short', 'loc_B31D']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_B442']
mov ['eax,', '[ebp+var_68]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_68]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '0Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_5C]']
mov ['dx,', '[ecx+edx*2]']
mov ['[ebp+var_8C],', 'dx']
movzx ['eax,', '[ebp+var_8C]']
movzx ['ecx,', '[ebp+var_98]']
cmp ['eax,', 'ecx']
jl ['short', '$unassigned$71751']
mov ['eax,', '[ebp+var_2C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8C]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_B38F']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_68],', '0']
mov ['eax,', '[ebp+var_80]']
mov ['[ebp+var_74],', 'eax']
jmp ['loc_B430']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
push ['edx']
mov ['eax,', '[ebp+var_74]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '[ebp+var_38]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z']
add ['esp,', '2Ch']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax+8]']
sar ['ecx,', '1']
add ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_80],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_B41E']
jmp ['short', 'loc_B442']
jmp ['short', 'loc_B430']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_80]']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_B43D']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_B442']
jmp ['loc_B242']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_68]']
mov ['[eax+38h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+18h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '174h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN30_1']
dd ['offset', '$LN27_0']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN28_0']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN29_1']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSSingleFromBMPWithOffsets@@YAXPAUUConverterFromUnicodeArgs@@PAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '198h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_198]']
mov ['ecx,', '66h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_B552']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0C0h]']
mov ['[ebp+var_74],', 'edx']
jmp ['short', 'loc_B561']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0BCh]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0D0h]']
mov ['[ebp+var_98],', 'edx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+23h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_B58C']
mov ['eax,', '800h']
mov ['[ebp+var_B0],', 'ax']
jmp ['short', 'loc_B598']
mov ['eax,', '0C00h']
mov ['[ebp+var_B0],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_80],', 'ecx']
mov ['eax,', '[ebp+var_80]']
neg ['eax']
sbb ['eax,', 'eax']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_14]']
sar ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_B5CD']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_B5E3']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_B5E3']
jmp ['$getTrail$71797']
jmp ['$getTrail$71797']
cmp ['[ebp+var_44],', '0']
jle ['loc_B86F']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '2']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_80],', '7Fh']
jg ['short', 'loc_B63D']
mov ['ecx,', '[ebp+var_80]']
sar ['ecx,', '2']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '[ebp+var_98]']
jz ['short', 'loc_B63D']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_80],', '0']
jmp ['short', 'loc_B5E3']
mov ['eax,', '[ebp+var_80]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_68]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_80]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_68]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '0Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['dx,', '[ecx+edx*2]']
mov ['[ebp+var_A4],', 'dx']
movzx ['eax,', '[ebp+var_A4]']
movzx ['ecx,', '[ebp+var_B0]']
cmp ['eax,', 'ecx']
jl ['short', 'loc_B6B2']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_A4]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_80],', '0']
jmp ['loc_B5E3']
jmp ['loc_B753']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jz ['short', 'loc_B6C6']
jmp ['loc_B753']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '400h']
jnz ['short', 'loc_B745']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_B72A']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[eax]']
mov ['[ebp+var_BC],', 'cx']
movzx ['eax,', '[ebp+var_BC]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_B71A']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_80]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_BC]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_80],', 'edx']
jmp ['short', 'loc_B728']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_B86F']
jmp ['short', 'loc_B743']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_B73E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Bh']
jmp ['loc_B86F']
jmp ['short', 'loc_B753']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_B86F']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_80]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_B7C5']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_2C]']
sar ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_C8]']
sub ['eax,', '[ebp+var_50]']
mov ['[ebp+var_C8],', 'eax']
cmp ['[ebp+var_C8],', '0']
jle ['short', 'loc_B7C5']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_C8]']
sub ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
jmp ['short', 'loc_B788']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
push ['edx']
mov ['eax,', '[ebp+var_8C]']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z']
add ['esp,', '2Ch']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_2C]']
sar ['eax,', '1']
add ['eax,', '[ebp+var_50]']
add ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_B845']
jmp ['short', 'loc_B86F']
jmp ['short', 'loc_B86A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '[ebp+var_14]']
sar ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_B86A']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_B5E3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_B8A0']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jnb ['short', 'loc_B8A0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[eax+14h]']
jb ['short', 'loc_B8A0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_B90A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_2C]']
sar ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
jz ['short', 'loc_B8CD']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0Bh']
jnz ['short', 'loc_B8CD']
mov ['eax,', '[ebp+var_D4]']
sub ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0']
jbe ['short', 'loc_B90A']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_8C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '4']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_D4]']
sub ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
jmp ['short', 'loc_B8CD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_80]']
mov ['[eax+38h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+18h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN40_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '198h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN39_2']
dd ['offset', '$LN36_1']
dd ['0FFFFFFC8h,', '4']
dd ['offset', '$LN37_1']
dd ['0FFFFFFA4h,', '4']
dd ['offset', '$LN38_1']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucnv_MBCSFromUChar32_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0FFFFh']
jle ['short', 'loc_B9D2']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C9h]']
and ['ecx,', '1']
jz ['loc_BB42']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0C8h]']
test ['ecx,', 'ecx']
jnz ['loc_BA77']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+0BCh]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*2]']
mov ['[ebp+var_2C],', 'ecx']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_BA40']
cmp ['[ebp+var_2C],', '800h']
sbb ['ecx,', 'ecx']
add ['ecx,', '1']
mov ['[ebp+var_100],', 'ecx']
jmp ['short', 'loc_BA52']
cmp ['[ebp+var_2C],', '0C00h']
sbb ['edx,', 'edx']
add ['edx,', '1']
mov ['[ebp+var_100],', 'edx']
cmp ['[ebp+var_100],', '0']
jz ['short', 'loc_BA72']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFh']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
mov ['eax,', '1']
jmp ['loc_BB96']
jmp ['loc_BB42']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+edx*4]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+0C8h]']
mov ['byte', 'ptr', '[ebp+var_100],', 'cl']
cmp ['byte', 'ptr', '[ebp+var_100],', '1']
jz ['short', 'loc_BAB2']
jmp ['short', 'loc_BAEC']
movzx ['eax,', 'word', 'ptr', '[ebp+var_20]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+0BCh]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_2C],', '0FFh']
ja ['short', 'loc_BAE3']
mov ['[ebp+var_38],', '1']
jmp ['short', 'loc_BAEA']
mov ['[ebp+var_38],', '2']
jmp ['short', 'loc_BAF4']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_BB96']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '0Fh']
add ['ecx,', '10h']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_BB35']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_BB2F']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '0E000h']
cmp ['eax,', '1900h']
jb ['short', 'loc_BB2F']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '0F0000h']
cmp ['eax,', '20000h']
jnb ['short', 'loc_BB42']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_BB42']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_38]']
jmp ['short', 'loc_BB96']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BB94']
movzx ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ucnv_extSimpleMatchFromU_56']
add ['esp,', '10h']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jl ['short', 'loc_BB81']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_BB8C']
mov ['ecx,', '[ebp+var_38]']
neg ['ecx']
mov ['[ebp+var_100],', 'ecx']
mov ['eax,', '[ebp+var_100]']
jmp ['short', 'loc_BB96']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_SBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1E8]']
mov ['ecx,', '7Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_1D9],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '3Ch']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_BC41']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0C0h]']
mov ['[ebp+var_68],', 'edx']
jmp ['short', 'loc_BC50']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0BCh]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0D0h]']
mov ['[ebp+var_C8],', 'edx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+23h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_BC7B']
mov ['eax,', '800h']
mov ['[ebp+var_E0],', 'ax']
jmp ['short', 'loc_BC87']
mov ['eax,', '0C00h']
mov ['[ebp+var_E0],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C9h]']
and ['edx,', '1']
mov ['[ebp+var_E9],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_98],', 'ecx']
cmp ['[ebp+var_98],', '0']
jz ['short', 'loc_BCCF']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+24h]']
mov ['[ebp+var_71],', 'cl']
mov ['dl,', '[ebp+var_71]']
mov ['[ebp+var_7D],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+30h]']
mov ['[ebp+var_89],', 'cl']
jmp ['short', 'loc_BCE5']
mov ['[ebp+var_89],', '0']
mov ['al,', '[ebp+var_89]']
mov ['[ebp+var_71],', 'al']
mov ['cl,', '[ebp+var_71]']
mov ['[ebp+var_7D],', 'cl']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_20]']
movsx ['ecx,', '[ebp+var_89]']
movsx ['edx,', '[ebp+var_71]']
sub ['ecx,', 'edx']
sub ['eax,', 'ecx']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_F8],', '0']
cmp ['[ebp+var_F8],', '3']
jge ['loc_BE17']
mov ['eax,', '[ebp+var_F8]']
cmp ['eax,', '[ebp+var_104]']
jge ['loc_BE17']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_F8]']
mov ['cl,', '[eax-1]']
mov ['[ebp+var_A1],', 'cl']
movzx ['eax,', '[ebp+var_A1]']
and ['eax,', '0C0h']
cmp ['eax,', '80h']
jnz ['short', 'loc_BD62']
mov ['eax,', '[ebp+var_F8]']
add ['eax,', '1']
mov ['[ebp+var_F8],', 'eax']
jmp ['loc_BE12']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0F0h']
jge ['short', 'loc_BD9D']
movzx ['ecx,', '[ebp+var_A1]']
xor ['edx,', 'edx']
cmp ['ecx,', '0C0h']
setnl ['dl']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0E0h']
setnl ['cl']
add ['edx,', 'ecx']
mov ['[ebp+var_1E4],', 'edx']
jmp ['short', 'loc_BDF1']
movzx ['edx,', '[ebp+var_A1]']
cmp ['edx,', '0FEh']
jge ['short', 'loc_BDDB']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0F8h']
setnl ['cl']
movzx ['edx,', '[ebp+var_A1]']
xor ['eax,', 'eax']
cmp ['edx,', '0FCh']
setnl ['al']
lea ['ecx,', '[ecx+eax+3]']
mov ['[ebp+var_1E8],', 'ecx']
jmp ['short', 'loc_BDE5']
mov ['[ebp+var_1E8],', '0']
mov ['edx,', '[ebp+var_1E8]']
mov ['[ebp+var_1E4],', 'edx']
mov ['eax,', '[ebp+var_F8]']
cmp ['eax,', '[ebp+var_1E4]']
jge ['short', 'loc_BE10']
mov ['eax,', '[ebp+var_F8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', 'eax']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_BE17']
jmp ['loc_BD0A']
cmp ['[ebp+var_98],', '0']
jz ['short', 'loc_BE41']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_BE41']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '0']
jmp ['$moreBytes$72267']
jmp ['$moreBytes$72267']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_C579']
cmp ['[ebp+var_44],', '0']
jle ['loc_C569']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_A1],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
movsx ['eax,', '[ebp+var_A1]']
test ['eax,', 'eax']
jl ['short', 'loc_BEE3']
movzx ['ecx,', '[ebp+var_A1]']
sar ['ecx,', '2']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '[ebp+var_C8]']
jz ['short', 'loc_BEB0']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', '[ebp+var_A1]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_BE41']
jmp ['short', 'loc_BEDE']
movzx ['eax,', '[ebp+var_A1]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_5C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
add ['ecx,', '[ebp+var_98]']
mov ['[ebp+var_1D9],', '1']
mov ['edx,', '[ebp+var_68]']
mov ['ax,', '[edx+ecx*2]']
mov ['[ebp+var_D4],', 'ax']
jmp ['loc_C480']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0E0h']
jge ['loc_BFE2']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0C2h']
jl ['loc_BFD3']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_AD],', 'cl']
movzx ['edx,', '[ebp+var_AD]']
cmp ['edx,', '3Fh']
jg ['loc_BFD3']
movzx ['eax,', '[ebp+var_A1]']
and ['eax,', '1Fh']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
mov ['ecx,', '[ebp+var_5C]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
movzx ['eax,', '[ebp+var_AD]']
add ['edx,', 'eax']
mov ['[ebp+var_1D9],', '1']
mov ['ecx,', '[ebp+var_68]']
mov ['dx,', '[ecx+edx*2]']
mov ['[ebp+var_D4],', 'dx']
movzx ['eax,', '[ebp+var_D4]']
movzx ['ecx,', '[ebp+var_E0]']
cmp ['eax,', 'ecx']
jl ['short', 'loc_BFB9']
cmp ['[ebp+var_1D9],', '0']
jnz ['short', 'loc_BF95']
push ['offset', '$LN79_0']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_D4]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_BE41']
jmp ['short', 'loc_BFD1']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_AD]']
or ['eax,', 'ecx']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_BFDD']
mov ['[ebp+var_98],', '0FFFFFFFFh']
jmp ['loc_C106']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0E0h']
jnz ['loc_C0FC']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_AD],', 'cl']
movzx ['edx,', '[ebp+var_AD]']
cmp ['edx,', '3Fh']
jg ['loc_C0F0']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '20h']
jl ['loc_C0F0']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
sub ['ecx,', '80h']
mov ['[ebp+var_B9],', 'cl']
movzx ['edx,', '[ebp+var_B9]']
cmp ['edx,', '3Fh']
jg ['loc_C0F0']
movzx ['eax,', '[ebp+var_AD]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
mov ['ecx,', '[ebp+var_5C]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
movzx ['eax,', '[ebp+var_B9]']
add ['edx,', 'eax']
mov ['[ebp+var_1D9],', '1']
mov ['ecx,', '[ebp+var_68]']
mov ['dx,', '[ecx+edx*2]']
mov ['[ebp+var_D4],', 'dx']
movzx ['eax,', '[ebp+var_D4]']
movzx ['ecx,', '[ebp+var_E0]']
cmp ['eax,', 'ecx']
jl ['short', 'loc_C0D6']
cmp ['[ebp+var_1D9],', '0']
jnz ['short', 'loc_C0B2']
push ['offset', '$LN79_0']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_D4]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_BE41']
jmp ['short', 'loc_C0EE']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_B9]']
or ['eax,', 'ecx']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_C0FA']
mov ['[ebp+var_98],', '0FFFFFFFFh']
jmp ['short', 'loc_C106']
mov ['[ebp+var_98],', '0FFFFFFFFh']
cmp ['[ebp+var_98],', '0']
jge ['loc_C480']
mov ['[ebp+var_71],', '0']
mov ['[ebp+var_7D],', '1']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0F0h']
jge ['short', 'loc_C156']
movzx ['ecx,', '[ebp+var_A1]']
xor ['edx,', 'edx']
cmp ['ecx,', '0C0h']
setnl ['dl']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0E0h']
setnl ['cl']
add ['edx,', 'ecx']
mov ['[ebp+var_1E4],', 'edx']
jmp ['short', 'loc_C1AA']
movzx ['edx,', '[ebp+var_A1]']
cmp ['edx,', '0FEh']
jge ['short', 'loc_C194']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0F8h']
setnl ['cl']
movzx ['edx,', '[ebp+var_A1]']
xor ['eax,', 'eax']
cmp ['edx,', '0FCh']
setnl ['al']
lea ['ecx,', '[ecx+eax+3]']
mov ['[ebp+var_1E8],', 'ecx']
jmp ['short', 'loc_C19E']
mov ['[ebp+var_1E8],', '0']
mov ['edx,', '[ebp+var_1E8]']
mov ['[ebp+var_1E4],', 'edx']
mov ['eax,', '[ebp+var_1E4]']
add ['eax,', '1']
mov ['[ebp+var_89],', 'al']
movzx ['eax,', '[ebp+var_A1]']
mov ['[ebp+var_98],', 'eax']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_89]']
cmp ['eax,', 'ecx']
jge ['loc_C2B3']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_C234']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_A1],', 'cl']
movzx ['eax,', '[ebp+var_A1]']
and ['eax,', '0C0h']
cmp ['eax,', '80h']
jnz ['short', 'loc_C22D']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['al,', '[ebp+var_7D]']
add ['al,', '1']
mov ['[ebp+var_7D],', 'al']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_A1]']
add ['eax,', 'ecx']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_C232']
jmp ['loc_C2B3']
jmp ['short', 'loc_C2AE']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_71]']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', 'eax']
mov ['[ebp+var_20],', 'edx']
movsx ['eax,', '[ebp+var_71]']
movsx ['ecx,', '[ebp+var_7D]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_C275']
movsx ['eax,', '[ebp+var_71]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_20]']
mov ['dl,', '[edx]']
mov ['[ecx+eax+25h],', 'dl']
mov ['al,', '[ebp+var_71]']
add ['al,', '1']
mov ['[ebp+var_71],', 'al']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_C246']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_7D]']
mov ['[eax+24h],', 'cl']
movsx ['eax,', '[ebp+var_89]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
jmp ['loc_C70A']
jmp ['$moreBytes$72267']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_89]']
cmp ['eax,', 'ecx']
jnz ['loc_C368']
movsx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '3']
jz ['short', 'loc_C2DC']
movsx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '2']
jnz ['loc_C368']
movsx ['eax,', '[ebp+var_7D]']
mov ['ecx,', '[ebp+var_98]']
sub ['ecx,', 'ds:_utf8_offsets[eax*4]']
mov ['[ebp+var_98],', 'ecx']
movsx ['edx,', '[ebp+var_7D]']
mov ['eax,', '[ebp+var_98]']
cmp ['eax,', 'ds:_utf8_minLegal[edx*4]']
jl ['short', 'loc_C368']
cmp ['[ebp+var_98],', '0D7FFh']
jle ['short', 'loc_C31E']
cmp ['[ebp+var_98],', '0E000h']
jl ['short', 'loc_C368']
mov ['eax,', '[ebp+var_98]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_98]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '0Fh']
add ['edx,', 'eax']
mov ['[ebp+var_1D9],', '1']
mov ['ecx,', '[ebp+var_68]']
mov ['dx,', '[ecx+edx*2]']
mov ['[ebp+var_D4],', 'dx']
jmp ['loc_C480']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_89]']
cmp ['eax,', 'ecx']
jnz ['loc_C416']
movsx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '4']
jnz ['loc_C416']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', 'ds:dword_3B8']
mov ['[ebp+var_98],', 'eax']
cmp ['[ebp+var_98],', '10000h']
jl ['short', 'loc_C416']
cmp ['[ebp+var_98],', '10FFFFh']
jg ['short', 'loc_C416']
movsx ['eax,', '[ebp+var_E9]']
test ['eax,', 'eax']
jnz ['short', 'loc_C3CF']
mov ['[ebp+var_1D9],', '1']
xor ['eax,', 'eax']
mov ['[ebp+var_D4],', 'ax']
jmp ['short', 'loc_C414']
mov ['eax,', '[ebp+var_98]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_98]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+edx*2]']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '0Fh']
add ['edx,', 'eax']
mov ['[ebp+var_1D9],', '1']
mov ['ecx,', '[ebp+var_68]']
mov ['dx,', '[ecx+edx*2]']
mov ['[ebp+var_D4],', 'dx']
jmp ['short', 'loc_C480']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_71]']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', 'eax']
mov ['[ebp+var_20],', 'edx']
movsx ['eax,', '[ebp+var_71]']
movsx ['ecx,', '[ebp+var_7D]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_C457']
movsx ['eax,', '[ebp+var_71]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_20]']
mov ['dl,', '[edx]']
mov ['[ecx+eax+25h],', 'dl']
mov ['al,', '[ebp+var_71]']
add ['al,', '1']
mov ['[ebp+var_71],', 'al']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_C428']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_7D]']
mov ['[eax+24h],', 'cl']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_C70A']
movzx ['eax,', '[ebp+var_D4]']
movzx ['ecx,', '[ebp+var_E0]']
cmp ['eax,', 'ecx']
jl ['short', 'loc_C4CA']
cmp ['[ebp+var_1D9],', '0']
jnz ['short', 'loc_C4A8']
push ['offset', '$LN79_0']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_D4]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_C567']
mov ['[ebp+var_110],', 'offset', '?nul@?HB@??ucnv_SBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z@4_WB']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
push ['edx']
push ['0FFFFFFFFh']
push ['0']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_44]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_110]']
push ['edx']
lea ['eax,', '[ebp+var_110]']
push ['eax']
mov ['ecx,', '[ebp+var_98]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z']
add ['esp,', '2Ch']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C542']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax+38h],', 'ecx']
jmp ['short', 'loc_C579']
jmp ['short', 'loc_C567']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+0B4h],', '0']
jl ['short', 'loc_C55B']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0FFFFFF81h']
jmp ['short', 'loc_C579']
jmp ['short', 'loc_C567']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'ecx']
jmp ['short', 'loc_C574']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_C579']
jmp ['loc_BE41']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_C6F8']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+0B4h],', '0']
jge ['loc_C6F8']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_2C]']
jnb ['loc_C6F8']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_A1],', 'cl']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[ebp+var_A1]']
mov ['[edx+25h],', 'al']
movzx ['ecx,', '[ebp+var_A1]']
mov ['[ebp+var_98],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_7D],', '1']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0F0h']
jge ['short', 'loc_C623']
movzx ['ecx,', '[ebp+var_A1]']
xor ['edx,', 'edx']
cmp ['ecx,', '0C0h']
setnl ['dl']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0E0h']
setnl ['cl']
add ['edx,', 'ecx']
mov ['[ebp+var_1E4],', 'edx']
jmp ['short', 'loc_C677']
movzx ['edx,', '[ebp+var_A1]']
cmp ['edx,', '0FEh']
jge ['short', 'loc_C661']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0F8h']
setnl ['cl']
movzx ['edx,', '[ebp+var_A1]']
xor ['eax,', 'eax']
cmp ['edx,', '0FCh']
setnl ['al']
lea ['ecx,', '[ecx+eax+3]']
mov ['[ebp+var_1E8],', 'ecx']
jmp ['short', 'loc_C66B']
mov ['[ebp+var_1E8],', '0']
mov ['edx,', '[ebp+var_1E8]']
mov ['[ebp+var_1E4],', 'edx']
mov ['eax,', '[ebp+var_1E4]']
add ['eax,', '1']
mov ['[ebp+var_89],', 'al']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_C6D6']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_A1],', 'cl']
movsx ['edx,', '[ebp+var_7D]']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_A1]']
mov ['[eax+edx+25h],', 'cl']
mov ['dl,', '[ebp+var_7D]']
add ['dl,', '1']
mov ['[ebp+var_7D],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_A1]']
add ['eax,', 'ecx']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_C686']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_7D]']
mov ['[eax+24h],', 'cl']
movsx ['eax,', '[ebp+var_89]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN85']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN84']
dd ['offset', '$LN82_0']
dd ['0FFFFFEF0h,', '4']
dd ['offset', '$LN83']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_DBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1E8]']
mov ['ecx,', '7Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_1D9],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+34h]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+38h]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '10h']
jz ['short', 'loc_C7FD']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0C0h]']
mov ['[ebp+var_68],', 'edx']
jmp ['short', 'loc_C80C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0BCh]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0D0h]']
mov ['[ebp+var_D4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C9h]']
and ['edx,', '1']
mov ['[ebp+var_E9],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_98],', 'ecx']
cmp ['[ebp+var_98],', '0']
jz ['short', 'loc_C866']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+24h]']
mov ['[ebp+var_71],', 'cl']
mov ['dl,', '[ebp+var_71]']
mov ['[ebp+var_7D],', 'dl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+30h]']
mov ['[ebp+var_89],', 'cl']
jmp ['short', 'loc_C87C']
mov ['[ebp+var_89],', '0']
mov ['al,', '[ebp+var_89]']
mov ['[ebp+var_71],', 'al']
mov ['cl,', '[ebp+var_71]']
mov ['[ebp+var_7D],', 'cl']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_20]']
movsx ['ecx,', '[ebp+var_89]']
movsx ['edx,', '[ebp+var_71]']
sub ['ecx,', 'edx']
sub ['eax,', 'ecx']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_F8],', '0']
cmp ['[ebp+var_F8],', '3']
jge ['loc_C9AE']
mov ['eax,', '[ebp+var_F8]']
cmp ['eax,', '[ebp+var_104]']
jge ['loc_C9AE']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_F8]']
mov ['cl,', '[eax-1]']
mov ['[ebp+var_A1],', 'cl']
movzx ['eax,', '[ebp+var_A1]']
and ['eax,', '0C0h']
cmp ['eax,', '80h']
jnz ['short', 'loc_C8F9']
mov ['eax,', '[ebp+var_F8]']
add ['eax,', '1']
mov ['[ebp+var_F8],', 'eax']
jmp ['loc_C9A9']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0F0h']
jge ['short', 'loc_C934']
movzx ['ecx,', '[ebp+var_A1]']
xor ['edx,', 'edx']
cmp ['ecx,', '0C0h']
setnl ['dl']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0E0h']
setnl ['cl']
add ['edx,', 'ecx']
mov ['[ebp+var_1E4],', 'edx']
jmp ['short', 'loc_C988']
movzx ['edx,', '[ebp+var_A1]']
cmp ['edx,', '0FEh']
jge ['short', 'loc_C972']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0F8h']
setnl ['cl']
movzx ['edx,', '[ebp+var_A1]']
xor ['eax,', 'eax']
cmp ['edx,', '0FCh']
setnl ['al']
lea ['ecx,', '[ecx+eax+3]']
mov ['[ebp+var_1E8],', 'ecx']
jmp ['short', 'loc_C97C']
mov ['[ebp+var_1E8],', '0']
mov ['edx,', '[ebp+var_1E8]']
mov ['[ebp+var_1E4],', 'edx']
mov ['eax,', '[ebp+var_F8]']
cmp ['eax,', '[ebp+var_1E4]']
jge ['short', 'loc_C9A7']
mov ['eax,', '[ebp+var_F8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', 'eax']
mov ['[ebp+var_2C],', 'ecx']
jmp ['short', 'loc_C9AE']
jmp ['loc_C8A1']
cmp ['[ebp+var_98],', '0']
jz ['short', 'loc_C9D8']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_C9D8']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '0']
jmp ['$moreBytes$72409']
jmp ['$moreBytes$72409']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_D1B3']
cmp ['[ebp+var_44],', '0']
jle ['loc_D1A3']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_A1],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
movsx ['eax,', '[ebp+var_A1]']
test ['eax,', 'eax']
jl ['loc_CA96']
movzx ['ecx,', '[ebp+var_A1]']
sar ['ecx,', '2']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '[ebp+var_D4]']
jz ['short', 'loc_CA4B']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', '[ebp+var_A1]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_C9D8']
jmp ['short', 'loc_CA91']
mov ['eax,', '[ebp+var_5C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_A1]']
add ['ecx,', 'edx']
mov ['[ebp+var_1D9],', '1']
mov ['eax,', '[ebp+var_68]']
mov ['cx,', '[eax+ecx*2]']
mov ['[ebp+var_E0],', 'cx']
movzx ['eax,', '[ebp+var_E0]']
test ['eax,', 'eax']
jnz ['short', 'loc_CA91']
movzx ['eax,', '[ebp+var_A1]']
mov ['[ebp+var_98],', 'eax']
jmp ['$unassigned$72420']
jmp ['$unassigned$72420']
jmp ['loc_D02A']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0E0h']
jle ['loc_CBA4']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_AD],', 'cl']
movzx ['edx,', '[ebp+var_A1]']
cmp ['edx,', '0EDh']
jge ['short', 'loc_CAD5']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '3Fh']
jle ['short', 'loc_CAF7']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0EDh']
jnz ['loc_CB95']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '1Fh']
jg ['loc_CB95']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
sub ['ecx,', '80h']
mov ['[ebp+var_B9],', 'cl']
movzx ['edx,', '[ebp+var_B9]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_CB95']
movzx ['eax,', '[ebp+var_A1]']
and ['eax,', '0Fh']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_AD]']
or ['eax,', 'ecx']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
mov ['ecx,', '[ebp+var_5C]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
movzx ['eax,', '[ebp+var_B9]']
add ['edx,', 'eax']
mov ['[ebp+var_1D9],', '1']
mov ['ecx,', '[ebp+var_68]']
mov ['dx,', '[ecx+edx*2]']
mov ['[ebp+var_E0],', 'dx']
movzx ['eax,', '[ebp+var_E0]']
test ['eax,', 'eax']
jnz ['short', 'loc_CB93']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_B9]']
or ['eax,', 'ecx']
mov ['[ebp+var_98],', 'eax']
jmp ['$unassigned$72420']
jmp ['$unassigned$72420']
jmp ['short', 'loc_CB9F']
mov ['[ebp+var_98],', '0FFFFFFFFh']
jmp ['loc_CC6F']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0E0h']
jge ['loc_CC65']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0C2h']
jl ['loc_CC59']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_AD],', 'cl']
movzx ['edx,', '[ebp+var_AD]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_CC59']
movzx ['eax,', '[ebp+var_A1]']
and ['eax,', '1Fh']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
mov ['ecx,', '[ebp+var_5C]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
movzx ['eax,', '[ebp+var_AD]']
add ['edx,', 'eax']
mov ['[ebp+var_1D9],', '1']
mov ['ecx,', '[ebp+var_68]']
mov ['dx,', '[ecx+edx*2]']
mov ['[ebp+var_E0],', 'dx']
movzx ['eax,', '[ebp+var_E0]']
test ['eax,', 'eax']
jnz ['short', 'loc_CC57']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_AD]']
or ['eax,', 'ecx']
mov ['[ebp+var_98],', 'eax']
jmp ['$unassigned$72420']
jmp ['$unassigned$72420']
jmp ['short', 'loc_CC63']
mov ['[ebp+var_98],', '0FFFFFFFFh']
jmp ['short', 'loc_CC6F']
mov ['[ebp+var_98],', '0FFFFFFFFh']
cmp ['[ebp+var_98],', '0']
jge ['loc_D02A']
mov ['[ebp+var_71],', '0']
mov ['[ebp+var_7D],', '1']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0F0h']
jge ['short', 'loc_CCBF']
movzx ['ecx,', '[ebp+var_A1]']
xor ['edx,', 'edx']
cmp ['ecx,', '0C0h']
setnl ['dl']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0E0h']
setnl ['cl']
add ['edx,', 'ecx']
mov ['[ebp+var_1E4],', 'edx']
jmp ['short', 'loc_CD13']
movzx ['edx,', '[ebp+var_A1]']
cmp ['edx,', '0FEh']
jge ['short', 'loc_CCFD']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0F8h']
setnl ['cl']
movzx ['edx,', '[ebp+var_A1]']
xor ['eax,', 'eax']
cmp ['edx,', '0FCh']
setnl ['al']
lea ['ecx,', '[ecx+eax+3]']
mov ['[ebp+var_1E8],', 'ecx']
jmp ['short', 'loc_CD07']
mov ['[ebp+var_1E8],', '0']
mov ['edx,', '[ebp+var_1E8]']
mov ['[ebp+var_1E4],', 'edx']
mov ['eax,', '[ebp+var_1E4]']
add ['eax,', '1']
mov ['[ebp+var_89],', 'al']
movzx ['eax,', '[ebp+var_A1]']
mov ['[ebp+var_98],', 'eax']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_89]']
cmp ['eax,', 'ecx']
jge ['loc_CE1C']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_CD9D']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_A1],', 'cl']
movzx ['eax,', '[ebp+var_A1]']
and ['eax,', '0C0h']
cmp ['eax,', '80h']
jnz ['short', 'loc_CD96']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['al,', '[ebp+var_7D]']
add ['al,', '1']
mov ['[ebp+var_7D],', 'al']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_A1]']
add ['eax,', 'ecx']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_CD9B']
jmp ['loc_CE1C']
jmp ['short', 'loc_CE17']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_71]']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', 'eax']
mov ['[ebp+var_20],', 'edx']
movsx ['eax,', '[ebp+var_71]']
movsx ['ecx,', '[ebp+var_7D]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_CDDE']
movsx ['eax,', '[ebp+var_71]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_20]']
mov ['dl,', '[edx]']
mov ['[ecx+eax+25h],', 'dl']
mov ['al,', '[ebp+var_71]']
add ['al,', '1']
mov ['[ebp+var_71],', 'al']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_CDAF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_7D]']
mov ['[eax+24h],', 'cl']
movsx ['eax,', '[ebp+var_89]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
jmp ['loc_D344']
jmp ['$moreBytes$72409']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_89]']
cmp ['eax,', 'ecx']
jnz ['loc_CEB2']
movsx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '3']
jz ['short', 'loc_CE41']
movsx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '2']
jnz ['short', 'loc_CEB2']
movsx ['eax,', '[ebp+var_7D]']
mov ['ecx,', '[ebp+var_98]']
sub ['ecx,', 'ds:_utf8_offsets[eax*4]']
mov ['[ebp+var_98],', 'ecx']
movsx ['edx,', '[ebp+var_7D]']
mov ['eax,', '[ebp+var_98]']
cmp ['eax,', 'ds:_utf8_minLegal[edx*4]']
jl ['short', 'loc_CEB2']
cmp ['[ebp+var_98],', '0D7FFh']
jle ['short', 'loc_CE83']
cmp ['[ebp+var_98],', '0E000h']
jl ['short', 'loc_CEB2']
mov ['eax,', '[ebp+var_98]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_98]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+edx*4]']
mov ['[ebp+var_C8],', 'edx']
jmp ['loc_CFA1']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_89]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_CF37']
movsx ['eax,', '[ebp+var_7D]']
cmp ['eax,', '4']
jnz ['short', 'loc_CF37']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', 'ds:dword_3B8']
mov ['[ebp+var_98],', 'eax']
cmp ['[ebp+var_98],', '10000h']
jl ['short', 'loc_CF37']
cmp ['[ebp+var_98],', '10FFFFh']
jg ['short', 'loc_CF37']
movsx ['eax,', '[ebp+var_E9]']
test ['eax,', 'eax']
jnz ['short', 'loc_CF0B']
mov ['[ebp+var_C8],', '0']
jmp ['short', 'loc_CF35']
mov ['eax,', '[ebp+var_98]']
sar ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_50]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_98]']
sar ['eax,', '4']
and ['eax,', '3Fh']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+edx*4]']
mov ['[ebp+var_C8],', 'edx']
jmp ['short', 'loc_CFA1']
movsx ['eax,', '[ebp+var_7D]']
movsx ['ecx,', '[ebp+var_71]']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', 'eax']
mov ['[ebp+var_20],', 'edx']
movsx ['eax,', '[ebp+var_71]']
movsx ['ecx,', '[ebp+var_7D]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_CF78']
movsx ['eax,', '[ebp+var_71]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_20]']
mov ['dl,', '[edx]']
mov ['[ecx+eax+25h],', 'dl']
mov ['al,', '[ebp+var_71]']
add ['al,', '1']
mov ['[ebp+var_71],', 'al']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_CF49']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_7D]']
mov ['[eax+24h],', 'cl']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['loc_D344']
movzx ['eax,', 'word', 'ptr', '[ebp+var_C8]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_98]']
and ['ecx,', '0Fh']
add ['eax,', 'ecx']
mov ['[ebp+var_1D9],', '1']
mov ['edx,', '[ebp+var_68]']
mov ['ax,', '[edx+eax*2]']
mov ['[ebp+var_E0],', 'ax']
mov ['ecx,', '[ebp+var_98]']
and ['ecx,', '0Fh']
add ['ecx,', '10h']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '[ebp+var_C8]']
jnz ['short', 'loc_D02A']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+23h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_D015']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '0E000h']
cmp ['eax,', '1900h']
jb ['short', 'loc_D015']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '0F0000h']
cmp ['eax,', '20000h']
jnb ['short', 'loc_D020']
movzx ['eax,', '[ebp+var_E0]']
test ['eax,', 'eax']
jnz ['short', 'loc_D02A']
jmp ['$unassigned$72420']
jmp ['$unassigned$72420']
movzx ['eax,', '[ebp+var_E0]']
cmp ['eax,', '0FFh']
jg ['short', 'loc_D070']
cmp ['[ebp+var_1D9],', '0']
jnz ['short', 'loc_D04E']
push ['offset', '$LN86']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_E0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_D0FA']
movzx ['eax,', '[ebp+var_E0]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_44],', '2']
jl ['short', 'loc_D0C3']
cmp ['[ebp+var_1D9],', '0']
jnz ['short', 'loc_D0A4']
push ['offset', '$LN86']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_E0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_D0FA']
cmp ['[ebp+var_1D9],', '0']
jnz ['short', 'loc_D0D9']
push ['offset', '$LN86']
call ['__RTC_UninitUse']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_E0]']
mov ['[eax+4Ch],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+3Fh],', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_D1B3']
jmp ['loc_C9D8']
mov ['[ebp+var_110],', 'offset', '?nul@?HE@??ucnv_DBCSFromUTF8@@YAXPAUUConverterFromUnicodeArgs@@PAUUConverterToUnicodeArgs@@PAW4UErrorCode@@@Z@4_WB']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2]']
push ['edx']
push ['0FFFFFFFFh']
push ['0']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_44]']
push ['eax']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_110]']
push ['edx']
lea ['eax,', '[ebp+var_110]']
push ['eax']
mov ['ecx,', '[ebp+var_98]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['?_extFromU@@YAHPAUUConverter@@PBUUConverterSharedData@@HPAPB_WPB_WPAPAEPBEPAPAHHCPAW4UErrorCode@@@Z']
add ['esp,', '2Ch']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_D177']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax+38h],', 'ecx']
jmp ['short', 'loc_D1B3']
jmp ['short', 'loc_D1A1']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+0B4h],', '0']
jl ['short', 'loc_D190']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0FFFFFF81h']
jmp ['short', 'loc_D1B3']
jmp ['short', 'loc_D1A1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'ecx']
jmp ['loc_C9D8']
jmp ['short', 'loc_D1AE']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['short', 'loc_D1B3']
jmp ['loc_C9D8']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_D332']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+0B4h],', '0']
jge ['loc_D332']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_2C]']
jnb ['loc_D332']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_A1],', 'cl']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[ebp+var_A1]']
mov ['[edx+25h],', 'al']
movzx ['ecx,', '[ebp+var_A1]']
mov ['[ebp+var_98],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_7D],', '1']
movzx ['eax,', '[ebp+var_A1]']
cmp ['eax,', '0F0h']
jge ['short', 'loc_D25D']
movzx ['ecx,', '[ebp+var_A1]']
xor ['edx,', 'edx']
cmp ['ecx,', '0C0h']
setnl ['dl']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0E0h']
setnl ['cl']
add ['edx,', 'ecx']
mov ['[ebp+var_1E4],', 'edx']
jmp ['short', 'loc_D2B1']
movzx ['edx,', '[ebp+var_A1]']
cmp ['edx,', '0FEh']
jge ['short', 'loc_D29B']
movzx ['eax,', '[ebp+var_A1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '0F8h']
setnl ['cl']
movzx ['edx,', '[ebp+var_A1]']
xor ['eax,', 'eax']
cmp ['edx,', '0FCh']
setnl ['al']
lea ['ecx,', '[ecx+eax+3]']
mov ['[ebp+var_1E8],', 'ecx']
jmp ['short', 'loc_D2A5']
mov ['[ebp+var_1E8],', '0']
mov ['edx,', '[ebp+var_1E8]']
mov ['[ebp+var_1E4],', 'edx']
mov ['eax,', '[ebp+var_1E4]']
add ['eax,', '1']
mov ['[ebp+var_89],', 'al']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_D310']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_A1],', 'cl']
movsx ['edx,', '[ebp+var_7D]']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_A1]']
mov ['[eax+edx+25h],', 'cl']
mov ['dl,', '[ebp+var_7D]']
add ['dl,', '1']
mov ['[ebp+var_7D],', 'dl']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_98]']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_A1]']
add ['eax,', 'ecx']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_D2C0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_7D]']
mov ['[eax+24h],', 'cl']
movsx ['eax,', '[ebp+var_89]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN92']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN91']
dd ['offset', '$LN89']
dd ['0FFFFFEF0h,', '4']
dd ['offset', '$LN90']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSGetStarters@@YAXPBUUConverter@@QACPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
movzx ['edx,', 'byte', 'ptr', '[eax+1Dh]']
shl ['edx,', '0Ah']
add ['edx,', '[ecx+24h]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_D3ED']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '100h']
jge ['short', 'loc_D40D']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+eax*4],', '0']
setnl ['dl']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_14]']
mov ['[eax],', 'dl']
jmp ['short', 'loc_D3E4']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucnv_MBCSIsLeadByte_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
cmp ['dword', 'ptr', '[edx+eax*4],', '0']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?ucnv_MBCSWriteSub@@YAXPAUUConverterFromUnicodeArgs@@HPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+42h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D4CF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
cmp ['dword', 'ptr', '[ecx+0E0h],', '0']
jz ['short', 'loc_D49C']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx+43h]']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_D4B4']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+70h]']
xor ['eax,', 'eax']
cmp ['edx,', '0FFh']
setle ['al']
mov ['[ebp+var_100],', 'eax']
cmp ['[ebp+var_100],', '0']
jz ['short', 'loc_D4CF']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '42h']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_38],', '1']
jmp ['short', 'loc_D4E2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+3Dh]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+43h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C8h]']
cmp ['edx,', '0Ch']
jnz ['loc_D5C3']
lea ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_100],', 'eax']
cmp ['[ebp+var_100],', '1']
jz ['short', 'loc_D525']
cmp ['[ebp+var_100],', '2']
jz ['short', 'loc_D55C']
jmp ['loc_D5A7']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+34h],', '2']
jnz ['short', 'loc_D547']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '0Fh']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D5B2']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+34h],', '1']
ja ['short', 'loc_D57E']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+34h],', '2']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '0Eh']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
mov ['dl,', '[ecx+1]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D5B2']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['short', 'loc_D5DF']
lea ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[ebp+var_2C]']
sub ['eax,', 'ecx']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ucnv_cbFromUWriteBytes_56']
add ['esp,', '14h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN16']
dd ['offset', '$LN15']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucnv_MBCSGetType_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1Ch]']
cmp ['edx,', '1']
jnz ['short', 'loc_D653']
xor ['eax,', 'eax']
jmp ['short', 'loc_D6A4']
jmp ['short', 'loc_D69F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C8h]']
and ['edx,', '0FFh']
cmp ['edx,', '0Ch']
jnz ['short', 'loc_D674']
mov ['eax,', '9']
jmp ['short', 'loc_D6A4']
jmp ['short', 'loc_D69F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0Ch]']
movsx ['eax,', 'byte', 'ptr', '[edx+46h]']
cmp ['eax,', '2']
jnz ['short', 'loc_D69F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0Ch]']
movsx ['eax,', 'byte', 'ptr', '[edx+47h]']
cmp ['eax,', '2']
jnz ['short', 'loc_D69F']
mov ['eax,', '1']
jmp ['short', 'loc_D6A4']
mov ['eax,', '2']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_D796']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_D7A2']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1UObject@icu_56@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__purecall:near']
extrn ['?hasMetaData@Replaceable@icu_56@@UBECXZ:near']
extrn ['?clone@Replaceable@icu_56@@UBEPAV12@XZ:near']
extrn ['??1Replaceable@icu_56@@UAE@XZ:near']
extrn ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z:near']
extrn ['?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:near']
extrn ['?Flush@ByteSink@icu_56@@UAEXXZ:near']
extrn ['??1ByteSink@icu_56@@UAE@XZ:near']
extrn ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:near']
extrn ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:near']
extrn ['??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:near']
extrn ['?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:near']
extrn ['?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:near']
extrn ['?copy@UnicodeString@icu_56@@UAEXHHH@Z:near']
extrn ['?hasMetaData@UnicodeString@icu_56@@UBECXZ:near']
extrn ['?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:near']
extrn ['?getLength@UnicodeString@icu_56@@MBEHXZ:near']
extrn ['?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:near']
extrn ['?getChar32At@UnicodeString@icu_56@@MBEHH@Z:near']
extrn ['?doHashCode@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?refCount@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:near']
extrn ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:near']
extrn ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['_u_strlen_56:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:near']
extrn ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:near']
extrn ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:near']
extrn ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:near']
extrn ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:near']
extrn ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:near']
extrn ['?unBogus@UnicodeString@icu_56@@AAEXXZ:near']
extrn ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:near']
extrn ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z:near']
extrn ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:near']
extrn ['??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:near']
extrn ['?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:near']
extrn ['?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:near']
extrn ['?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['??8StringEnumeration@icu_56@@UBECABV01@@Z:near']
extrn ['??9StringEnumeration@icu_56@@UBECABV01@@Z:near']
extrn ['??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['??1StringEnumeration@icu_56@@UAE@XZ:near']
extrn ['_ucnv_extGetUnicodeSet_56:near']
extrn ['_udata_getInfo_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_ucnv_unload_56:near']
extrn ['_ucnv_load_56:near']
extrn ['_strcmp:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_memset:near']
extrn ['_uprv_free_56:near']
extrn ['__imp__strstr:near']
extrn ['_umtx_unlock_56:near']
extrn ['_umtx_lock_56:near']
extrn ['_strcat:near']
extrn ['_strcpy:near']
extrn ['_ucnv_extContinueMatchToU_56:near']
extrn ['_ucnv_toUWriteCodePoint_56:near']
extrn ['_ucnv_extInitialMatchToU_56:near']
extrn ['_ucnv_extSimpleMatchToU_56:near']
extrn ['_ucnv_extContinueMatchFromU_56:near']
extrn ['_ucnv_fromUWriteBytes_56:near']
extrn ['_ucnv_extInitialMatchFromU_56:near']
extrn ['_ucnv_extSimpleMatchFromU_56:near']
extrn ['__RTC_UninitUse:near']
extrn ['_ucnv_cbFromUWriteBytes_56:near']
end

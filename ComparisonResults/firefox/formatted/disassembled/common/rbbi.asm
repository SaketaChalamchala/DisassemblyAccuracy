endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??2UMemory@icu_56@@SAPAXIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3UMemory@icu_56@@SAXPAX0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UObject@icu_56@@6B@']
public ['??_7UObject@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4UObject@icu_56@@6B@']
dd ['offset', '??_R0?AVUObject@icu_56@@@8']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['8']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_35B']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_365']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UObject@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUObject@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3EB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUObject@icu_56@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_465']
push ['offset', '??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_45D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_484']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_481']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4Replaceable@icu_56@@6B@']
public ['??_7Replaceable@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?hasMetaData@Replaceable@icu_56@@UBECXZ']
dd ['offset', '?clone@Replaceable@icu_56@@UBEPAV12@XZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4Replaceable@icu_56@@6B@']
dd ['offset', '??_R0?AVReplaceable@icu_56@@@8']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVReplaceable@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3Replaceable@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Replaceable@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_617']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_691']
push ['offset', '??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_689']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_6B0']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_6AD']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@IAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@Replaceable@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@Replaceable@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?char32At@Replaceable@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@PBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@StringPiece@icu_56@@QBEPBDXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@StringPiece@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@StringPiece@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@StringPiece@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clear@StringPiece@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@StringPiece@icu_56@@QAEXPBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_prefix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_A81']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_A65']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_suffix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_ADB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jg ['short', 'loc_AD1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_ADB']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ByteSink@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ByteSink@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4ByteSink@icu_56@@6B@']
public ['??_7ByteSink@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z']
dd ['offset', '?Flush@ByteSink@icu_56@@UAEXXZ']
assume ['cs:_rdata$r']
public ['??_R4ByteSink@icu_56@@6B@']
dd ['offset', '??_R0?AVByteSink@icu_56@@@8']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVByteSink@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3ByteSink@icu_56@@8']
dd ['2']
dd ['offset', '??_R2ByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_C6B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_CE5']
push ['offset', '??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_CDD']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_D04']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_D01']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_E73']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_EED']
push ['offset', '??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['40h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_EE5']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_F0C']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_F09']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_F5A']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_F76']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx],', 'eax']
jle ['short', 'loc_F76']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_FCD']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_FDF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_14]']
jle ['short', 'loc_FDF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_FF2']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_100E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['[edx],', 'ecx']
jle ['short', 'loc_100E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1061']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_106D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_10B9']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_10C5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeString@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0Replaceable@icu_56@@IAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeString@icu_56@@6B@']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeString@icu_56@@6B@']
public ['??_7UnicodeString@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ']
dd ['offset', '?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z']
dd ['offset', '?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z']
dd ['offset', '?copy@UnicodeString@icu_56@@UAEXHHH@Z']
dd ['offset', '?hasMetaData@UnicodeString@icu_56@@UBECXZ']
dd ['offset', '?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ']
dd ['offset', '?getLength@UnicodeString@icu_56@@MBEHXZ']
dd ['offset', '?getCharAt@UnicodeString@icu_56@@MBE_WH@Z']
dd ['offset', '?getChar32At@UnicodeString@icu_56@@MBEHH@Z']
assume ['cs:_rdata$r']
public ['??_R4UnicodeString@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeString@icu_56@@@8']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeString@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeString@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UnicodeString@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeString@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeString@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasShortLength@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getShortLength@UnicodeString@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
sar ['eax,', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasShortLength@UnicodeString@icu_56@@ABECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_127E']
mov ['ecx,', '[ebp+var_8]']
call ['?getShortLength@UnicodeString@icu_56@@ABEHXZ']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_128A']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_12DF']
mov ['[ebp+var_D0],', '1Dh']
jmp ['short', 'loc_12EB']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hashCode@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doHashCode@UnicodeString@icu_56@@ABEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBufferWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '19h']
jnz ['short', 'loc_13F5']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+4]']
and ['eax,', '4']
jz ['short', 'loc_13EC']
mov ['ecx,', '[ebp+var_8]']
call ['?refCount@UnicodeString@icu_56@@ABEHXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_13F5']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_13FC']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
jz ['short', 'loc_144D']
xor ['eax,', 'eax']
jmp ['short', 'loc_1469']
jmp ['short', 'loc_1469']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1463']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '6']
jmp ['short', 'loc_1469']
jmp ['short', 'loc_1469']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_14B6']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_14E7']
jmp ['short', 'loc_14E7']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_153E']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
jmp ['short', 'loc_1598']
jmp ['short', 'loc_1598']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_158B']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_158B']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_158B']
mov ['[ebp+var_E5],', '1']
jmp ['short', 'loc_1592']
mov ['[ebp+var_E5],', '0']
mov ['al,', '[ebp+var_E5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UnicodeString@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??OUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??MUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??PUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??NUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECPB_WH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1A42']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_1A73']
jmp ['short', 'loc_1A73']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1D3E']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_1D73']
jmp ['short', 'loc_1D73']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_207F']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_207F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_2082']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_W@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_25A7']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_25A7']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_25AA']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_29E4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_2A54']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['esi,', 'eax']
push ['esi']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2BB4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_2C32']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
neg ['ecx']
sbb ['ecx,', 'ecx']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_D4],', '0']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_3223']
mov ['ecx,', '[ebp+var_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['ax,', '[eax+ecx*2]']
jmp ['short', 'loc_3228']
jmp ['short', 'loc_3228']
mov ['eax,', '0FFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@UnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AUnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
sar ['ecx,', '5']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setZeroLength@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setShortLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+arg_0]']
shl ['edx,', '5']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '3FFh']
jg ['short', 'loc_33CA']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setShortLength@UnicodeString@icu_56@@AAEXH@Z']
jmp ['short', 'loc_33E7']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
or ['ecx,', '0FFE0h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToEmpty@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3BFC']
mov ['ecx,', '[ebp+var_8]']
call ['?setToEmpty@UnicodeString@icu_56@@AAEXXZ']
jmp ['short', 'loc_3C04']
mov ['ecx,', '[ebp+var_8]']
call ['?setZeroLength@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jg ['short', 'loc_3C58']
cmp ['[ebp+arg_4],', '7FFFFFFFh']
jnz ['short', 'loc_3C58']
mov ['ecx,', '[ebp+var_8]']
call ['?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
jmp ['short', 'loc_3C6E']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?truncate@UnicodeString@icu_56@@QAECH@Z']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?truncate@UnicodeString@icu_56@@QAECH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3D7A']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_3D7A']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
xor ['al,', 'al']
jmp ['short', 'loc_3D9B']
jmp ['short', 'loc_3D9B']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_3D99']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['al,', '1']
jmp ['short', 'loc_3D9B']
jmp ['short', 'loc_3D9B']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToStart@CharacterIterator@icu_56@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+5Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToEnd@CharacterIterator@icu_56@@QAEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['2']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+5Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startIndex@CharacterIterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endIndex@CharacterIterator@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getIndex@CharacterIterator@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLength@CharacterIterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringEnumeration@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StringEnumeration@icu_56@@6B@']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
call ['??0UnicodeString@icu_56@@QAE@ABV01@@Z']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '44h']
mov ['edi,', '[ebp+var_14]']
add ['edi,', '44h']
mov ['ecx,', '8']
rep ['movsd']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[eax+64h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+68h]']
mov ['[eax+68h],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1UObject@icu_56@@UAE@XZ']
endp
__ehhandler$??0StringEnumeration@icu_56@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0StringEnumeration@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4StringEnumeration@icu_56@@6B@']
public ['??_7StringEnumeration@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '?clone@StringEnumeration@icu_56@@UBEPAV12@XZ']
dd ['offset', '__purecall']
dd ['offset', '?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z']
dd ['offset', '?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z']
dd ['offset', '?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z']
dd ['offset', '__purecall']
dd ['offset', '??8StringEnumeration@icu_56@@UBECABV01@@Z']
dd ['offset', '??9StringEnumeration@icu_56@@UBECABV01@@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0StringEnumeration@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0StringEnumeration@icu_56@@QAE@ABV01@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4StringEnumeration@icu_56@@6B@']
dd ['offset', '??_R0?AVStringEnumeration@icu_56@@@8']
dd ['offset', '??_R3StringEnumeration@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVStringEnumeration@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3StringEnumeration@icu_56@@8']
dd ['3']
dd ['offset', '??_R2StringEnumeration@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2StringEnumeration@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@StringEnumeration@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3StringEnumeration@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4StringEnumeration@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_4253']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '20h']
jnb ['short', 'loc_426D']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx+44h]']
mov ['[eax+44h],', 'dl']
jmp ['short', 'loc_424A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[eax+64h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+68h]']
mov ['[eax+68h],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GStringEnumeration@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1StringEnumeration@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_42DF']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EStringEnumeration@icu_56@@UAEPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_4359']
push ['offset', '??1StringEnumeration@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['6Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4351']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_4378']
mov ['ecx,', '[ebp+var_8]']
call ['??1StringEnumeration@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4375']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9Locale@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8Locale@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCountry@Locale@icu_56@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '16h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLanguage@Locale@icu_56@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getScript@Locale@icu_56@@QBEPBDXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getVariant@Locale@icu_56@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0C4h]']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+1Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getName@Locale@icu_56@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+20h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@Locale@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+0C8h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9BreakIterator@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0BreakIterator@icu_56@@IAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7BreakIterator@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4BreakIterator@icu_56@@6B@']
public ['??_7BreakIterator@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?getRuleStatus@BreakIterator@icu_56@@UBEHXZ']
dd ['offset', '?getRuleStatusVec@BreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4BreakIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVBreakIterator@icu_56@@@8']
dd ['offset', '??_R3BreakIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVBreakIterator@icu_56@@@8']
align ['8']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3BreakIterator@icu_56@@8']
dd ['3']
dd ['offset', '??_R2BreakIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2BreakIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@BreakIterator@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3BreakIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GBreakIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1BreakIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_46CF']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EBreakIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_474C']
push ['offset', '??1BreakIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['140h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4744']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_476B']
mov ['ecx,', '[ebp+var_8]']
call ['??1BreakIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4768']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBufferClone@BreakIterator@icu_56@@QAECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GRuleBasedBreakIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1RuleBasedBreakIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_47EF']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ERuleBasedBreakIterator@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_486C']
push ['offset', '??1RuleBasedBreakIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['178h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4864']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_488B']
mov ['ecx,', '[ebp+var_8]']
call ['??1RuleBasedBreakIterator@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4888']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9RuleBasedBreakIterator@icu_56@@QBECABVBreakIterator@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFunctor@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFunctor@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFunctor@icu_56@@6B@']
public ['??_7UnicodeFunctor@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFunctor@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeFunctor@icu_56@@@8']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFunctor@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFunctor@icu_56@@8']
dd ['3']
dd ['offset', '??_R2UnicodeFunctor@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFunctor@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFunctor@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeFunctor@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4AB7']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFunctor@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_4B31']
push ['offset', '??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4B29']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_4B50']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFunctor@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4B4D']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeMatcher@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeMatcher@icu_56@@6B@']
public ['??_7UnicodeMatcher@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeMatcher@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeMatcher@icu_56@@@8']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeMatcher@icu_56@@@8']
dd ['0']
assume ['cs:_rdata$r']
public ['??_R3UnicodeMatcher@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeMatcher@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeMatcher@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4CCB']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeMatcher@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_4D45']
push ['offset', '??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4D3D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_4D64']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeMatcher@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_4D61']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_V@YAXPAX@Z	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFilter@icu_56@@QAE@XZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UnicodeFunctor@icu_56@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??0UnicodeMatcher@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
public ['??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
dd ['offset', '?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
public ['??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ']
dd ['offset', '?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ']
dd ['offset', '?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
dd ['offset', '??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3UnicodeFilter@icu_56@@8']
dd ['1,', '5']
dd ['offset', '??_R2UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeFilter@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UnicodeFunctor@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeFilter@icu_56@@8']
dd ['4,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UnicodeMatcher@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeMatcher@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R4UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
dd ['4,', '0']
dd ['offset', '??_R0?AVUnicodeFilter@icu_56@@@8']
dd ['offset', '??_R3UnicodeFilter@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeFilter@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UnicodeFunctor@icu_56@@QAE@ABV01@@Z']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_4F37']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_4F41']
mov ['[ebp+var_D0],', '0']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??0UnicodeMatcher@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeFunctor@1@@']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', 'offset', '??_7UnicodeFilter@icu_56@@6BUnicodeMatcher@1@@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeFilter@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UnicodeFunctor@icu_56@@QAEAAV01@ABV01@@Z']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_4FC3']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_4FCD']
mov ['[ebp+var_D0],', '0']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
call ['??4UnicodeMatcher@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeFilter@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5037']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFilter@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_50B1']
push ['offset', '??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_50A9']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_50D0']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeFilter@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_50CD']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UnicodeSet@icu_56@@QBECABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isFrozen@UnicodeSet@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_5182']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+2Ch],', '0']
jnz ['short', 'loc_5182']
mov ['[ebp+var_CD],', '0']
jmp ['short', 'loc_5189']
mov ['[ebp+var_CD],', '1']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECHH@Z']
movsx ['edx,', 'al']
test ['edx,', 'edx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?containsSome@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@UnicodeSet@icu_56@@QBECXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[eax+30h]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUSet@UnicodeSet@icu_56@@SAPAV12@PAUUSet@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?fromUSet@UnicodeSet@icu_56@@SAPBV12@PBUUSet@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUSet@UnicodeSet@icu_56@@QAEPAUUSet@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?toUSet@UnicodeSet@icu_56@@QBEPBUUSet@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?span@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_53AD']
mov ['[ebp+arg_4],', '0']
jmp ['short', 'loc_53BB']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_53BB']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
add ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?spanBack@UnicodeSet@icu_56@@QBEHABVUnicodeString@2@HW4USetSpanCondition@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_5435']
mov ['[ebp+arg_4],', '0']
jmp ['short', 'loc_5443']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
jle ['short', 'loc_5443']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@UVector@icu_56@@QBEHXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UVector@icu_56@@QBECXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UVector@icu_56@@QBECPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UVector@icu_56@@QBEHPAXH@Z']
test ['eax,', 'eax']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?contains@UVector@icu_56@@QBECH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UVector@icu_56@@QBEHHH@Z']
test ['eax,', 'eax']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?firstElement@UVector@icu_56@@QBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastElement@UVector@icu_56@@QBEPAXXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastElementi@UVector@icu_56@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '1']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAti@UVector@icu_56@@QBEHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AUVector@icu_56@@QBEPAXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UVector@icu_56@@QAECABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UVector@icu_56@@QAECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@UStack@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isEmpty@UVector@icu_56@@QBECXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?peek@UStack@icu_56@@QBEPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastElement@UVector@icu_56@@QBEPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?peeki@UStack@icu_56@@QBEHXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastElementi@UVector@icu_56@@QBEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?push@UStack@icu_56@@QAEHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SymbolTable@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SymbolTable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4SymbolTable@icu_56@@6B@']
public ['??_7SymbolTable@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4SymbolTable@icu_56@@6B@']
dd ['offset', '??_R0?AVSymbolTable@icu_56@@@8']
dd ['offset', '??_R3SymbolTable@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVSymbolTable@icu_56@@@8']
dd ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R3SymbolTable@icu_56@@8']
dd ['1']
dd ['offset', '??_R2SymbolTable@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2SymbolTable@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@SymbolTable@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3SymbolTable@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0SymbolTable@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7SymbolTable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4SymbolTable@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GSymbolTable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1SymbolTable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_599B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_ESymbolTable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_5A15']
push ['offset', '??1SymbolTable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5A0D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_5A34']
mov ['ecx,', '[ebp+var_8]']
call ['??1SymbolTable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5A31']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getStaticClassID@RuleBasedBreakIterator@icu_56@@SAPAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'offset', '?classID@?1??getStaticClassID@RuleBasedBreakIterator@icu_56@@SAPAXXZ@4DA']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getDynamicClassID@RuleBasedBreakIterator@icu_56@@UBEPAXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
call ['?getStaticClassID@RuleBasedBreakIterator@icu_56@@SAPAXXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0BreakIterator@icu_56@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedBreakIterator@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
call ['?init@RuleBasedBreakIterator@icu_56@@IAEXXZ']
push ['88h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_5B51']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_E0]']
call ['??0RBBIDataWrapper@icu_56@@QAE@PBURBBIDataHeader@1@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_5B5B']
mov ['[ebp+var_F4],', '0']
mov ['edx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_EC]']
mov ['[eax+150h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5B91']
jmp ['short', 'loc_5BA6']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jnz ['short', 'loc_5BA6']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1BreakIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z$1 proc near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_rdata']
dd ['offset', '??_R4RuleBasedBreakIterator@icu_56@@6B@']
public ['??_7RuleBasedBreakIterator@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@RuleBasedBreakIterator@icu_56@@UBEPAXXZ']
dd ['offset', '??8RuleBasedBreakIterator@icu_56@@UBECABVBreakIterator@1@@Z']
dd ['offset', '?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ']
dd ['offset', '?getText@RuleBasedBreakIterator@icu_56@@UBEAAVCharacterIterator@2@XZ']
dd ['offset', '?getUText@RuleBasedBreakIterator@icu_56@@UBEPAUUText@@PAU3@AAW4UErrorCode@@@Z']
dd ['offset', '?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z']
dd ['offset', '?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z']
dd ['offset', '?adoptText@RuleBasedBreakIterator@icu_56@@UAEXPAVCharacterIterator@2@@Z']
dd ['offset', '?first@RuleBasedBreakIterator@icu_56@@UAEHXZ']
dd ['offset', '?last@RuleBasedBreakIterator@icu_56@@UAEHXZ']
dd ['offset', '?previous@RuleBasedBreakIterator@icu_56@@UAEHXZ']
dd ['offset', '?next@RuleBasedBreakIterator@icu_56@@UAEHH@Z']
dd ['offset', '?next@RuleBasedBreakIterator@icu_56@@UAEHXZ']
dd ['offset', '?current@RuleBasedBreakIterator@icu_56@@UBEHXZ']
dd ['offset', '?following@RuleBasedBreakIterator@icu_56@@UAEHH@Z']
dd ['offset', '?preceding@RuleBasedBreakIterator@icu_56@@UAEHH@Z']
dd ['offset', '?isBoundary@RuleBasedBreakIterator@icu_56@@UAECH@Z']
dd ['offset', '?getRuleStatus@RuleBasedBreakIterator@icu_56@@UBEHXZ']
dd ['offset', '?getRuleStatusVec@RuleBasedBreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z']
dd ['offset', '?createBufferClone@RuleBasedBreakIterator@icu_56@@UAEPAVBreakIterator@2@PAXAAHAAW4UErrorCode@@@Z']
dd ['offset', '?refreshInputText@RuleBasedBreakIterator@icu_56@@UAEAAV12@PAUUText@@AAW4UErrorCode@@@Z']
dd ['offset', '?hashCode@RuleBasedBreakIterator@icu_56@@UBEHXZ']
dd ['offset', '?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ']
dd ['offset', '?getBinaryRules@RuleBasedBreakIterator@icu_56@@UAEPBEAAI@Z']
dd ['offset', '?reset@RuleBasedBreakIterator@icu_56@@MAEXXZ']
dd ['offset', '?setBreakType@RuleBasedBreakIterator@icu_56@@MAEXH@Z']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0RuleBasedBreakIterator@icu_56@@IAE@PAURBBIDataHeader@1@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_rdata$r']
public ['??_R4RuleBasedBreakIterator@icu_56@@6B@']
dd ['offset', '??_R0?AVRuleBasedBreakIterator@icu_56@@@8']
dd ['offset', '??_R3RuleBasedBreakIterator@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVRuleBasedBreakIterator@icu_56@@@8']
align ['8']
assume ['cs:_rdata$r']
public ['??_R3RuleBasedBreakIterator@icu_56@@8']
dd ['4']
dd ['offset', '??_R2RuleBasedBreakIterator@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2RuleBasedBreakIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@BreakIterator@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@RuleBasedBreakIterator@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3RuleBasedBreakIterator@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0BreakIterator@icu_56@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedBreakIterator@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
call ['?init@RuleBasedBreakIterator@icu_56@@IAEXXZ']
push ['88h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_5DF7']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_E0]']
call ['??0RBBIDataWrapper@icu_56@@QAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_5E01']
mov ['[ebp+var_F4],', '0']
mov ['edx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_EC]']
mov ['[eax+150h],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5E37']
jmp ['short', 'loc_5E4C']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jnz ['short', 'loc_5E4C']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1BreakIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z$1 proc near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z$0']
align ['8']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0RuleBasedBreakIterator@icu_56@@IAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0BreakIterator@icu_56@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedBreakIterator@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
call ['?init@RuleBasedBreakIterator@icu_56@@IAEXXZ']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5F5C']
jmp ['loc_6027']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5F68']
cmp ['[ebp+arg_4],', '60h']
jnb ['short', 'loc_5F76']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_6027']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+8]']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['short', 'loc_5F95']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_6027']
push ['88h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_EC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_5FD2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_EC]']
call ['??0RBBIDataWrapper@icu_56@@QAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_5FDC']
mov ['[ebp+var_100],', '0']
mov ['edx,', '[ebp+var_100]']
mov ['[ebp+var_F8],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_F8]']
mov ['[eax+150h],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6012']
jmp ['short', 'loc_6027']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jnz ['short', 'loc_6027']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1BreakIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z$1 proc near
mov ['eax,', '[ebp-0ECh]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-104h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@PBEIAAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0BreakIterator@icu_56@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedBreakIterator@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
call ['?init@RuleBasedBreakIterator@icu_56@@IAEXXZ']
push ['88h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_6159']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_E0]']
call ['??0RBBIDataWrapper@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_6163']
mov ['[ebp+var_F4],', '0']
mov ['edx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_EC]']
mov ['[eax+150h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6199']
jmp ['short', 'loc_61AE']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jnz ['short', 'loc_61AE']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z$0 proc	near
mov ['ecx,', '[ebp-14h]']
jmp ['??1BreakIterator@icu_56@@UAE@XZ']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z$1 proc	near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z$0']
dd ['0']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z$1']
dd ['offset', '__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0BreakIterator@icu_56@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedBreakIterator@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
call ['?init@RuleBasedBreakIterator@icu_56@@IAEXXZ']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_62C0']
jmp ['loc_6345']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?createRuleBasedBreakIterator@RBBIRuleBuilder@icu_56@@SAPAVBreakIterator@2@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6345']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??4RuleBasedBreakIterator@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'ecx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_633B']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_F8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_F8]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_100],', 'eax']
jmp ['short', 'loc_6345']
mov ['[ebp+var_100],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1BreakIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z	proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-104h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@ABVUnicodeString@1@AAUUParseError@@AAW4UErrorCode@@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RuleBasedBreakIterator@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0BreakIterator@icu_56@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedBreakIterator@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
call ['?init@RuleBasedBreakIterator@icu_56@@IAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@XZ$0 proc	near
mov ['ecx,', '[ebp-14h]']
jmp ['??1BreakIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@XZ']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@XZ$0']
dd ['offset', '__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0BreakIterator@icu_56@@IAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedBreakIterator@icu_56@@6B@']
mov ['ecx,', '[ebp+var_14]']
call ['?init@RuleBasedBreakIterator@icu_56@@IAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??4RuleBasedBreakIterator@icu_56@@QAEAAV01@ABV01@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1BreakIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z$0']
dd ['offset', '__unwindtable$??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z']
align ['20h']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??1RuleBasedBreakIterator@icu_56@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1RuleBasedBreakIterator@icu_56@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_154]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7RuleBasedBreakIterator@icu_56@@6B@']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+144h]']
cmp ['edx,', '[ecx+148h]']
jz ['short', 'loc_6691']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+144h]']
cmp ['edx,', '[ecx+14Ch]']
jz ['short', 'loc_6691']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+144h]']
mov ['[ebp+var_140],', 'ecx']
mov ['edx,', '[ebp+var_140]']
mov ['[ebp+var_14C],', 'edx']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_6687']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_14C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_14C]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_6691']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+144h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+148h]']
mov ['[ebp+var_128],', 'ecx']
mov ['edx,', '[ebp+var_128]']
mov ['[ebp+var_134],', 'edx']
cmp ['[ebp+var_134],', '0']
jz ['short', 'loc_66E7']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_134]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_134]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_66F1']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+144h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+14Ch]']
mov ['[ebp+var_110],', 'ecx']
mov ['edx,', '[ebp+var_110]']
mov ['[ebp+var_11C],', 'edx']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_6747']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_11C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_11C]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_6751']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+14Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_close_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jz ['short', 'loc_6797']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
call ['?removeReference@RBBIDataWrapper@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+150h],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jz ['short', 'loc_67C2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+160h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+160h],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_682E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
mov ['[ebp+var_F8],', 'ecx']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'edx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_6817']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_104]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_6821']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+16Ch],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+170h],', '0']
jz ['short', 'loc_689A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+170h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_6883']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_154],', 'eax']
jmp ['short', 'loc_688D']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+170h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1BreakIterator@icu_56@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '154h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$??1RuleBasedBreakIterator@icu_56@@UAE@XZ$0 proc	near
mov ['ecx,', '[ebp-14h]']
jmp ['??1BreakIterator@icu_56@@UAE@XZ']
endp
__ehhandler$??1RuleBasedBreakIterator@icu_56@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-158h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1RuleBasedBreakIterator@icu_56@@UAE@XZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$??1RuleBasedBreakIterator@icu_56@@UAE@XZ$0']
dd ['offset', '__unwindtable$??1RuleBasedBreakIterator@icu_56@@UAE@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4RuleBasedBreakIterator@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_694F']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_6B25']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+174h]']
mov ['[eax+174h],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_69E3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+16Ch]']
mov ['[ebp+var_F8],', 'ecx']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_104],', 'edx']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_69CC']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_104]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_104]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_69D6']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+16Ch],', '0']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
push ['1']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_clone_56']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+140h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+144h]']
cmp ['edx,', '[ecx+148h]']
jz ['short', 'loc_6A92']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+144h]']
cmp ['edx,', '[ecx+14Ch]']
jz ['short', 'loc_6A92']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+144h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_6A88']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_6A92']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+144h],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+144h],', '0']
jz ['short', 'loc_6AD8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+144h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+144h]']
mov ['edx,', '[ecx]']
mov ['esi,', 'esp']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+144h],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jz ['short', 'loc_6AFF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
call ['?removeReference@RBBIDataWrapper@icu_56@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+150h],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jz ['short', 'loc_6B22']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+150h]']
call ['?addReference@RBBIDataWrapper@icu_56@@QAEPAV12@XZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+150h],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
dd ['offset', '$LN14']
dd ['offset', '$LN13']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?init@RuleBasedBreakIterator@icu_56@@IAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
push ['0']
push ['0']
push ['0']
push ['0']
call ['_utext_openUChars_56']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+140h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+144h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+148h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+14Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+150h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+154h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+158h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+15Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+174h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+160h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+16Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+170h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+164h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+168h],', '0']
movsx ['eax,', 'ds:?debugInitDone@?1??init@RuleBasedBreakIterator@icu_56@@IAEXXZ@4CA']
test ['eax,', 'eax']
jnz ['short', 'loc_6CA3']
mov ['esi,', 'esp']
push ['offset', '??_C@_0M@NMJCIPMM@U_RBBIDEBUG?$AA@']
call ['dword', 'ptr', 'ds:__imp__getenv']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+Str],', 'eax']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_6C9C']
push ['offset', '??_C@_05IMBNNINJ@trace?$AA@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?strstr@@YAPADPADPBD@Z']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_6C9C']
mov ['ds:_fTrace,', '1']
mov ['ds:?debugInitDone@?1??init@RuleBasedBreakIterator@icu_56@@IAEXXZ@4CA,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN6']
dd ['offset', '$LN5']
align ['4']
assume ['cs:_rdata']
public ['??_C@_05IMBNNINJ@trace?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0M@NMJCIPMM@U_RBBIDEBUG?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?strstr@@YAPADPADPBD@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+SubStr]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strstr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['178h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_6DC0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
call ['??0RuleBasedBreakIterator@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_6DCA']
mov ['[ebp+var_F4],', '0']
mov ['ecx,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_EC]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ$0 proc near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ$0']
dd ['offset', '__unwindtable$?clone@RuleBasedBreakIterator@icu_56@@UBEPAVBreakIterator@2@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8RuleBasedBreakIterator@icu_56@@UBECABVBreakIterator@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['___RTtypeid']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['___RTtypeid']
add ['esp,', '4']
mov ['ecx,', 'eax']
call ['dword', 'ptr', 'ds:__imp_??9type_info@@QBE_NABV0@@Z']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6EB4']
xor ['al,', 'al']
jmp ['short', 'loc_6F32']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_equals_56']
add ['esp,', '8']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_6EE1']
xor ['al,', 'al']
jmp ['short', 'loc_6F32']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+150h]']
cmp ['edx,', '[ecx+150h]']
jz ['short', 'loc_6F2C']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jz ['short', 'loc_6F30']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jz ['short', 'loc_6F30']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+150h]']
call ['??8RBBIDataWrapper@icu_56@@QBECABV01@@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6F30']
mov ['al,', '1']
jmp ['short', 'loc_6F32']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hashCode@RuleBasedBreakIterator@icu_56@@UBEHXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jz ['short', 'loc_6F8F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
call ['?hashCode@RBBIDataWrapper@icu_56@@QAEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7004']
jmp ['loc_7174']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['1']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_clone_56']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+140h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14Ch],', '0']
jnz ['loc_70D1']
push ['18h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_708B']
push ['0']
push ['offset', '?c@?7??setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z@4_WB']
mov ['ecx,', '[ebp+var_F8]']
call ['??0UCharCharacterIterator@icu_56@@QAE@PB_WH@Z']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_7095']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_10C]']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_104]']
mov ['[ecx+14Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+14Ch],', '0']
jnz ['short', 'loc_70D1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_7174']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+144h]']
cmp ['edx,', '[ecx+148h]']
jz ['short', 'loc_714C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+144h]']
cmp ['edx,', '[ecx+14Ch]']
jz ['short', 'loc_714C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+144h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_7142']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10C],', 'eax']
jmp ['short', 'loc_714C']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+14Ch]']
mov ['[eax+144h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z$0 proc	near
mov ['eax,', '[ebp-0F8h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-110h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z$0']
dd ['offset', '__unwindtable$?setText@RuleBasedBreakIterator@icu_56@@UAEXPAUUText@@AAW4UErrorCode@@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getUText@RuleBasedBreakIterator@icu_56@@UBEPAUUText@@PAU3@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['1']
push ['0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_clone_56']
add ['esp,', '14h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jz ['short', 'loc_72B0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
call ['?getRuleSourceString@RBBIDataWrapper@icu_56@@QBEABVUnicodeString@2@XZ']
jmp ['short', 'loc_731A']
jmp ['short', 'loc_731A']
cmp ['ds:?s@?6??getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@3@XZ@4PBV43@B,', '0']
jnz ['short', 'loc_7315']
push ['40h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_72EC']
mov ['ecx,', '[ebp+var_E0]']
call ['??0UnicodeString@icu_56@@QAE@XZ']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_72F6']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_EC]']
mov ['ds:?s@?6??getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@3@XZ@4PBV43@B,', 'ecx']
mov ['eax,', 'ds:?s@?6??getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@3@XZ@4PBV43@B']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ$0 proc near
mov ['eax,', '[ebp-0E0h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ$0']
dd ['offset', '__unwindtable$?getRules@RuleBasedBreakIterator@icu_56@@UBEABVUnicodeString@2@XZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getText@RuleBasedBreakIterator@icu_56@@UBEAAVCharacterIterator@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+144h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?adoptText@RuleBasedBreakIterator@icu_56@@UAEXPAVCharacterIterator@2@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+144h]']
cmp ['edx,', '[ecx+148h]']
jz ['short', 'loc_7466']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+144h]']
cmp ['edx,', '[ecx+14Ch]']
jz ['short', 'loc_7466']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+144h]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'edx']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_745C']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_EC]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_EC]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_7466']
mov ['[ebp+var_F4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+144h],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_74A1']
mov ['ecx,', '[ebp+arg_0]']
call ['?startIndex@CharacterIterator@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jz ['short', 'loc_74C8']
lea ['eax,', '[ebp+var_14]']
push ['eax']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
call ['_utext_openUChars_56']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+140h],', 'eax']
jmp ['short', 'loc_74EB']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_openCharacterIterator_56']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+140h],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
dd ['offset', '$LN10']
dd ['offset', '$LN9']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_openConstUnicodeString_56']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+140h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+148h],', '0']
jnz ['short', 'loc_7637']
push ['58h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_7609']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_104]']
call ['??0StringCharacterIterator@icu_56@@QAE@ABVUnicodeString@1@@Z']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_7613']
mov ['[ebp+var_118],', '0']
mov ['ecx,', '[ebp+var_118]']
mov ['[ebp+var_110],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_110]']
mov ['[edx+148h],', 'eax']
jmp ['short', 'loc_7649']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+148h]']
call ['?setText@StringCharacterIterator@icu_56@@QAEXABVUnicodeString@2@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+144h]']
cmp ['edx,', '[ecx+148h]']
jz ['short', 'loc_76C4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+144h]']
cmp ['edx,', '[ecx+14Ch]']
jz ['short', 'loc_76C4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+144h]']
mov ['[ebp+var_EC],', 'ecx']
mov ['edx,', '[ebp+var_EC]']
mov ['[ebp+var_F8],', 'edx']
cmp ['[ebp+var_F8],', '0']
jz ['short', 'loc_76BA']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_F8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_F8]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_76C4']
mov ['[ebp+var_118],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+148h]']
mov ['[eax+144h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
dd ['offset', '$LN13_0']
dd ['offset', '$LN11_0']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z$0 proc near
mov ['eax,', '[ebp-104h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-11Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z']
jmp ['___CxxFrameHandler3']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z$0']
dd ['offset', '__unwindtable$?setText@RuleBasedBreakIterator@icu_56@@UAEXABVUnicodeString@2@@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?refreshInputText@RuleBasedBreakIterator@icu_56@@UAEAAV12@PAUUText@@AAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_77D4']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_789E']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_77EB']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_789E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['1']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_clone_56']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+140h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7844']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_789E']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_E4],', 'eax']
mov ['[ebp+var_E0],', 'edx']
mov ['edx,', '[ebp+var_E4]']
cmp ['edx,', '[ebp+var_18]']
jnz ['short', 'loc_7892']
mov ['eax,', '[ebp+var_E0]']
cmp ['eax,', '[ebp+var_14]']
jz ['short', 'loc_789B']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?first@RuleBasedBreakIterator@icu_56@@UAEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+154h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+158h],', '1']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?last@RuleBasedBreakIterator@icu_56@@UAEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+140h],', '0']
jnz ['short', 'loc_7991']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+154h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+158h],', '1']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_79CB']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+158h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?next@RuleBasedBreakIterator@icu_56@@UAEHH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_0],', '0']
jle ['short', 'loc_7A46']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_7A1C']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_7A70']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_7A46']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?next@RuleBasedBreakIterator@icu_56@@UAEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jz ['short', 'loc_7B34']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+164h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
cmp ['[edx+168h],', 'ecx']
jge ['short', 'loc_7B1E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+168h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+160h]']
mov ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
jmp ['short', 'loc_7B96']
jmp ['short', 'loc_7B34']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+15Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+15Ch],', '0']
jbe ['short', 'loc_7B93']
push ['0']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?previous@RuleBasedBreakIterator@icu_56@@UAEHXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '128h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_128]']
mov ['ecx,', '4Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jz ['loc_7C66']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+168h],', '0']
jle ['short', 'loc_7C50']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+168h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+168h],', '0']
jg ['short', 'loc_7C16']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+158h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+160h]']
mov ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_2C]']
jmp ['loc_7E78']
jmp ['short', 'loc_7C66']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+140h],', '0']
jz ['short', 'loc_7C91']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_7CB0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+154h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+158h],', '1']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_7E78']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jnz ['short', 'loc_7CCE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_7D0F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+15Ch],', '0']
jbe ['short', 'loc_7D07']
push ['1']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_7E78']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_7DA0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_7DA0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_124]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_124]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_128],', 'edx']
jmp ['short', 'loc_7DB8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_128],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0FFFFFFFFh']
jnz ['short', 'loc_7DF3']
mov ['[ebp+var_44],', '0']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_50],', '0']
mov ['[ebp+var_59],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0FFFFFFFFh']
jz ['short', 'loc_7E2B']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_38]']
jl ['short', 'loc_7E2D']
jmp ['short', 'loc_7E45']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+154h]']
mov ['[ebp+var_50],', 'ecx']
mov ['[ebp+var_59],', '1']
jmp ['short', 'loc_7E04']
mov ['eax,', '[ebp+var_44]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax+154h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_59]']
mov ['[eax+158h],', 'cl']
mov ['eax,', '[ebp+var_44]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '128h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?following@RuleBasedBreakIterator@icu_56@@UAEHH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+140h],', '0']
jz ['short', 'loc_7F0B']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['esi,', 'eax']
mov ['edi,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_11C],', 'esi']
mov ['[ebp+var_118],', 'edi']
mov ['[ebp+var_124],', 'eax']
mov ['[ebp+var_120],', 'edx']
mov ['edx,', '[ebp+var_118]']
cmp ['edx,', '[ebp+var_120]']
jl ['short', 'loc_7F3E']
jg ['short', 'loc_7F0B']
mov ['eax,', '[ebp+var_11C]']
cmp ['eax,', '[ebp+var_124]']
jb ['short', 'loc_7F3E']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_838B']
jmp ['short', 'loc_7F5F']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_7F5F']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_838B']
mov ['eax,', '[ebp+arg_0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jz ['loc_8059']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+160h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx]']
jl ['loc_8043']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+164h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+160h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[eax+ecx*4-4]']
jge ['short', 'loc_8043']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+168h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+160h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[eax+ecx*4]']
jl ['short', 'loc_8009']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+168h],', 'ecx']
jmp ['short', 'loc_7FD8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+160h]']
mov ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_838B']
jmp ['short', 'loc_8059']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jz ['loc_8178']
mov ['eax,', '[ebp+arg_0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+2Ch]']
jge ['short', 'loc_8107']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_8107']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+28h]']
mov ['ecx,', '[edx+30h]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_118],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['[ecx+28h],', 'edx']
jmp ['short', 'loc_811F']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_118],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_0]']
jg ['short', 'loc_8170']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_814D']
mov ['eax,', '[ebp+var_2C]']
jmp ['loc_838B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['loc_82DE']
mov ['eax,', '[ebp+arg_0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_821B']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_821B']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_118],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_118]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_118]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_11C],', 'edx']
jmp ['short', 'loc_8233']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+arg_0]']
jle ['short', 'loc_829A']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+arg_0]']
jg ['short', 'loc_8292']
mov ['eax,', '[ebp+var_38]']
jmp ['loc_838B']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_8261']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+arg_0]']
jg ['short', 'loc_82D6']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_838B']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_838B']
mov ['eax,', '[ebp+arg_0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_832E']
cmp ['[ebp+arg_0],', '1']
jnz ['short', 'loc_8346']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_118],', 'edx']
mov ['edx,', '[ebp+var_11C]']
or ['edx,', '[ebp+var_118]']
jnz ['short', 'loc_8346']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_838B']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0FFFFFFFFh']
jz ['short', 'loc_8388']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_0]']
jg ['short', 'loc_8388']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_835F']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?preceding@RuleBasedBreakIterator@icu_56@@UAEHH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '118h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '46h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+140h],', '0']
jz ['short', 'loc_8423']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['esi,', 'eax']
mov ['edi,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_110],', 'esi']
mov ['[ebp+var_10C],', 'edi']
mov ['[ebp+var_118],', 'eax']
mov ['[ebp+var_114],', 'edx']
mov ['edx,', '[ebp+var_10C]']
cmp ['edx,', '[ebp+var_114]']
jl ['short', 'loc_8440']
jg ['short', 'loc_8423']
mov ['eax,', '[ebp+var_110]']
cmp ['eax,', '[ebp+var_118]']
jbe ['short', 'loc_8440']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_8A54']
jmp ['short', 'loc_8461']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_8461']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_8A54']
mov ['eax,', '[ebp+arg_0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jz ['loc_85AA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+160h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx]']
jle ['loc_8594']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+164h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+160h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[eax+ecx*4-4]']
jg ['loc_8594']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+168h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+168h]']
cmp ['edx,', '[ecx+164h]']
jge ['short', 'loc_8523']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+160h]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[eax+ecx*4]']
jle ['short', 'loc_8523']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+168h],', 'ecx']
jmp ['short', 'loc_84DE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+168h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+168h],', '0']
jg ['short', 'loc_854E']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+158h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+160h]']
mov ['eax,', '[eax+ecx*4]']
cdq
push ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+168h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+160h]']
mov ['eax,', '[eax+ecx*4]']
jmp ['loc_8A54']
jmp ['short', 'loc_85AA']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['loc_88C5']
mov ['eax,', '[ebp+arg_0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_8619']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_10C],', 'edx']
jmp ['short', 'loc_864C']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_10C],', 'edx']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jz ['loc_8775']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+2Ch]']
jge ['short', 'loc_86DD']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_86DD']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+28h]']
mov ['ecx,', '[edx+30h]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_10C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['[ecx+28h],', 'edx']
jmp ['short', 'loc_86F5']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_10C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_8739']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_10C],', 'edx']
jmp ['short', 'loc_876C']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_10C],', 'edx']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_87ED']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_87ED']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_10C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_10C]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_10C]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_110],', 'edx']
jmp ['short', 'loc_8805']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_110],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_885E']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_10C],', 'edx']
jmp ['short', 'loc_8891']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_10C],', 'edx']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_0]']
jl ['short', 'loc_88BD']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_889A']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_8A54']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
cmp ['dword', 'ptr', '[ecx+10h],', '0']
jz ['loc_8A26']
mov ['eax,', '[ebp+arg_0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+2Ch]']
jge ['short', 'loc_896C']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_896C']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+28h]']
mov ['ecx,', '[edx+30h]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_10C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['[ecx+28h],', 'edx']
jmp ['short', 'loc_8984']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_10C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_0]']
jge ['short', 'loc_89E8']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+arg_0]']
jl ['short', 'loc_89E0']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_8A54']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_89B2']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+arg_0]']
jl ['short', 'loc_8A21']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_8A54']
mov ['eax,', '[ebp+var_44]']
jmp ['short', 'loc_8A54']
mov ['eax,', '[ebp+arg_0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBoundary@RuleBasedBreakIterator@icu_56@@UAECH@Z proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_8AB2']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '1']
jmp ['loc_8C34']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_nativeLength_56']
add ['esp,', '4']
cmp ['[ebp+arg_0],', 'eax']
jnz ['short', 'loc_8AE6']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['al,', '1']
jmp ['loc_8C34']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_8B09']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_8C34']
mov ['eax,', '[ebp+arg_0]']
cdq
mov ['esi,', 'eax']
mov ['edi,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_EC],', 'esi']
mov ['[ebp+var_E8],', 'edi']
mov ['[ebp+var_F4],', 'eax']
mov ['[ebp+var_F0],', 'edx']
mov ['edx,', '[ebp+var_E8]']
cmp ['edx,', '[ebp+var_F0]']
jl ['short', 'loc_8B76']
jg ['short', 'loc_8B59']
mov ['eax,', '[ebp+var_EC]']
cmp ['eax,', '[ebp+var_F4]']
jbe ['short', 'loc_8B76']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+28h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_8C34']
mov ['eax,', '[ebp+arg_0]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32From_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_8BD2']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_E8],', 'edx']
jmp ['short', 'loc_8C05']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_E8],', 'edx']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+3Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['eax,', '[ebp+arg_0]']
setz ['cl']
mov ['[ebp+var_1D],', 'cl']
mov ['al,', '[ebp+var_1D]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?current@RuleBasedBreakIterator@icu_56@@UBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E0]']
mov ['ecx,', '38h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_8CB3']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_DC],', 'edx']
jmp ['short', 'loc_8CE6']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_DC],', 'edx']
mov ['ecx,', '[ebp+var_E0]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1C4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1C4]']
mov ['ecx,', '71h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
mov ['[ebp+var_50],', '0']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_80],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '1']
setnz ['dl']
mov ['[ebp+var_89],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_A4],', 'ecx']
movsx ['eax,', 'ds:_fTrace']
test ['eax,', 'eax']
jz ['short', 'loc_8DA0']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CJ@PLMEEDH@Handle?5Next?5?5?5pos?5?5?5char?5?5state?5@']
call ['dword', 'ptr', 'ds:__imp__puts']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+158h],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+154h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_8DFB']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
jmp ['short', 'loc_8E2E']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
mov ['ecx,', '[ebp+var_1C4]']
mov ['[ebp+var_74],', 'ecx']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+2Ch]']
jge ['short', 'loc_8EB9']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_8EB9']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+28h]']
mov ['ecx,', '[edx+30h]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_1C0],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['[ecx+28h],', 'edx']
jmp ['short', 'loc_8ED1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_1C0],', 'eax']
mov ['ecx,', '[ebp+var_1C0]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jz ['short', 'loc_8EEC']
cmp ['[ebp+var_44],', '0FFFFFFFFh']
jnz ['short', 'loc_8EF4']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_9795']
mov ['[ebp+var_14],', '1']
mov ['eax,', '[ebp+var_A4]']
imul ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_98]']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_2C],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '2']
jz ['short', 'loc_8F30']
mov ['eax,', '2']
mov ['[ebp+var_20],', 'ax']
mov ['[ebp+var_2C],', '0']
cmp ['[ebp+var_44],', '0FFFFFFFFh']
jnz ['short', 'loc_8F72']
cmp ['[ebp+var_2C],', '2']
jnz ['short', 'loc_8F62']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+var_68]']
jle ['short', 'loc_8F5D']
mov ['eax,', '[ebp+var_80]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+154h],', 'ecx']
mov ['[ebp+var_50],', '0']
jmp ['loc_9520']
mov ['[ebp+var_2C],', '2']
mov ['eax,', '1']
mov ['[ebp+var_20],', 'ax']
cmp ['[ebp+var_2C],', '1']
jnz ['loc_910A']
cmp ['[ebp+var_44],', '0FFFFh']
ja ['short', 'loc_8FEB']
cmp ['[ebp+var_44],', '0D800h']
jl ['short', 'loc_8FA3']
cmp ['[ebp+var_44],', '0DBFFh']
jg ['short', 'loc_8FA3']
mov ['[ebp+var_1C0],', '140h']
jmp ['short', 'loc_8FAD']
mov ['[ebp+var_1C0],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_44]']
sar ['edx,', '5']
add ['edx,', '[ebp+var_1C0]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_20],', 'cx']
jmp ['loc_90DD']
cmp ['[ebp+var_44],', '10FFFFh']
ja ['loc_90CC']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['[ebp+var_B0],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+150h]']
movzx ['edx,', '[ebp+var_B0]']
sar ['edx,', '5']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
movzx ['eax,', '[ebp+var_B0]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_20],', 'cx']
movzx ['eax,', '[ebp+var_20]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+150h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jle ['short', 'loc_90B9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_44]']
and ['edx,', '3FFh']
sar ['edx,', '5']
add ['edx,', '[ebp+var_BC]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '3FFh']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_20],', 'cx']
jmp ['short', 'loc_90CA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_20],', 'dx']
jmp ['short', 'loc_90DD']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '4000h']
jz ['short', 'loc_910A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+15Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+15Ch],', 'ecx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFBFFFh']
mov ['[ebp+var_20],', 'ax']
movsx ['eax,', 'ds:_fTrace']
test ['eax,', 'eax']
jz ['loc_91A8']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['edx']
push ['eax']
push ['offset', '??_C@_0BF@CHIKCOEI@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4ld?5?5?5?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_44],', '20h']
jl ['short', 'loc_916D']
cmp ['[ebp+var_44],', '7Fh']
jge ['short', 'loc_916D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_44]']
push ['eax']
push ['offset', '??_C@_06BELAJENL@?$CC?$CFc?$CC?5?5?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_9188']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_44]']
push ['eax']
push ['offset', '??_C@_05HDNPBHBO@?$CF5x?5?5?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_20]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '??_C@_09GAIDENKM@?$CF3d?5?5?$CF3d?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+150h]']
mov ['ecx,', '[edx]']
cmp ['eax,', '[ecx+0Ch]']
jb ['short', 'loc_91E2']
mov ['edx,', 'ds:?__LINE__Var@?1??handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA']
add ['edx,', '73h']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1EG@BPJGGIHK@?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAy?$AA?$DM?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAf?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?9?$AA?$DO?$AAf?$AAC?$AAa?$AAt?$AAC?$AAo?$AAu@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_A4]']
imul ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_98]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0FFFFFFFFh']
jnz ['loc_92AD']
cmp ['[ebp+var_2C],', '0']
jz ['loc_929D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_9261']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
jmp ['short', 'loc_9294']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
mov ['ecx,', '[ebp+var_1C4]']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+154h],', 'ecx']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['loc_9449']
cmp ['[ebp+var_50],', '0']
jz ['loc_93A5']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '[ebp+var_50]']
jnz ['loc_93A5']
mov ['eax,', '[ebp+var_80]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+154h],', 'ecx']
mov ['[ebp+var_50],', '0']
movsx ['eax,', '[ebp+var_89]']
test ['eax,', 'eax']
jz ['loc_939B']
mov ['eax,', '[ebp+var_68]']
cdq
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+140h]']
sub ['eax,', '[ecx+20h]']
sbb ['edx,', '[ecx+24h]']
mov ['[ebp+var_CC],', 'eax']
mov ['[ebp+var_C8],', 'edx']
cmp ['[ebp+var_C8],', '0']
jl ['short', 'loc_937B']
jg ['short', 'loc_9330']
cmp ['[ebp+var_CC],', '0']
jb ['short', 'loc_937B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+1Ch]']
cdq
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
mov ['edx,', '[ebp+var_C8]']
cmp ['edx,', '[ebp+var_1C0]']
jg ['short', 'loc_937B']
jl ['short', 'loc_9367']
mov ['eax,', '[ebp+var_CC]']
cmp ['eax,', '[ebp+var_1C4]']
ja ['short', 'loc_937B']
mov ['eax,', '[ebp+var_CC]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['[edx+28h],', 'eax']
jmp ['short', 'loc_9393']
mov ['eax,', '[ebp+var_68]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_68]']
jmp ['loc_9795']
jmp ['$continueOn$73002']
jmp ['$continueOn$73002']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_93E9']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
jmp ['short', 'loc_941C']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
mov ['ecx,', '[ebp+var_1C4]']
mov ['[ebp+var_D8],', 'ecx']
mov ['eax,', '[ebp+var_D8]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
mov ['[ebp+var_5C],', 'ecx']
jmp ['short', '$continueOn$73002']
jmp ['short', '$continueOn$73002']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', '$continueOn$73002']
mov ['[ebp+var_50],', '0']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_9465']
jmp ['loc_9520']
cmp ['[ebp+var_2C],', '1']
jnz ['loc_950E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+2Ch]']
jge ['short', 'loc_94EB']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_94EB']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+28h]']
mov ['ecx,', '[edx+30h]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_1C0],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['[ecx+28h],', 'edx']
jmp ['short', 'loc_9503']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_1C0],', 'eax']
mov ['ecx,', '[ebp+var_1C0]']
mov ['[ebp+var_44],', 'ecx']
jmp ['short', 'loc_951B']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_951B']
mov ['[ebp+var_2C],', '1']
jmp ['loc_8F30']
mov ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+var_74]']
jnz ['loc_96D6']
mov ['eax,', '[ebp+var_74]']
cdq
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+140h]']
sub ['eax,', '[ecx+20h]']
sbb ['edx,', '[ecx+24h]']
mov ['[ebp+var_E8],', 'eax']
mov ['[ebp+var_E4],', 'edx']
cmp ['[ebp+var_E4],', '0']
jl ['short', 'loc_95AA']
jg ['short', 'loc_955F']
cmp ['[ebp+var_E8],', '0']
jb ['short', 'loc_95AA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+1Ch]']
cdq
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
mov ['edx,', '[ebp+var_E4]']
cmp ['edx,', '[ebp+var_1C0]']
jg ['short', 'loc_95AA']
jl ['short', 'loc_9596']
mov ['eax,', '[ebp+var_E8]']
cmp ['eax,', '[ebp+var_1C4]']
ja ['short', 'loc_95AA']
mov ['eax,', '[ebp+var_E8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['[edx+28h],', 'eax']
jmp ['short', 'loc_95C2']
mov ['eax,', '[ebp+var_74]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+2Ch]']
jge ['short', 'loc_963E']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_963E']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+28h]']
mov ['ecx,', '[edx+30h]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_1C0],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+28h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['[ecx+28h],', 'edx']
jmp ['short', 'loc_9656']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_1C0],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_969A']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
jmp ['short', 'loc_96CD']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
mov ['ecx,', '[ebp+var_1C4]']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+var_68]']
cdq
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+140h]']
sub ['eax,', '[ecx+20h]']
sbb ['edx,', '[ecx+24h]']
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_F4],', 'edx']
cmp ['[ebp+var_F4],', '0']
jl ['short', 'loc_9754']
jg ['short', 'loc_9709']
cmp ['[ebp+var_F8],', '0']
jb ['short', 'loc_9754']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+1Ch]']
cdq
mov ['[ebp+var_1C4],', 'eax']
mov ['[ebp+var_1C0],', 'edx']
mov ['edx,', '[ebp+var_F4]']
cmp ['edx,', '[ebp+var_1C0]']
jg ['short', 'loc_9754']
jl ['short', 'loc_9740']
mov ['eax,', '[ebp+var_F8]']
cmp ['eax,', '[ebp+var_1C4]']
ja ['short', 'loc_9754']
mov ['eax,', '[ebp+var_F8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['[edx+28h],', 'eax']
jmp ['short', 'loc_976C']
mov ['eax,', '[ebp+var_68]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
movsx ['eax,', 'ds:_fTrace']
test ['eax,', 'eax']
jz ['short', 'loc_9792']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_68]']
push ['eax']
push ['offset', '??_C@_0O@PBNPENIB@result?5?$DN?5?$CFd?6?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_68]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0O@PBNPENIB@result?5?$DN?5?$CFd?6?6?$AA@']
db ['0Ah,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1EG@BPJGGIHK@?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAy?$AA?$DM?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAf?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?9?$AA?$DO?$AAf?$AAC?$AAa?$AAt?$AAC?$AAo?$AAu@']
unicode ['0,', '<category>']
dw ['3Ch']
unicode ['0,', '<fData->']
dw ['3Eh']
unicode ['0,', '<fHeader->']
dw ['3Eh']
unicode ['0,', '<fCatCount>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\rbbi.cpp>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??handleNext@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA']
assume ['cs:_rdata']
public ['??_C@_09GAIDENKM@?$CF3d?5?5?$CF3d?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_05HDNPBHBO@?$CF5x?5?5?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_06BELAJENL@?$CC?$CFc?$CC?5?5?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BF@CHIKCOEI@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4ld?5?5?5?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CJ@PLMEEDH@Handle?5Next?5?5?5pos?5?5?5char?5?5state?5@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1B0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_1B0]']
mov ['ecx,', '6Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
mov ['[ebp+var_50],', '0']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_74],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '1']
setnz ['dl']
mov ['[ebp+var_7D],', 'dl']
movsx ['eax,', 'ds:_fTrace']
test ['eax,', 'eax']
jz ['short', 'loc_9936']
mov ['esi,', 'esp']
push ['offset', '??_C@_0CN@HJKPBAFK@Handle?5Previous?5?5?5pos?5?5?5char?5?5st@']
call ['dword', 'ptr', 'ds:__imp__puts']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+158h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+154h],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+140h],', '0']
jz ['loc_99F2']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jz ['loc_99F2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_99B1']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
jmp ['short', 'loc_99E4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['ecx,', '[ebp+var_1B0]']
or ['ecx,', '[ebp+var_1AC]']
jnz ['short', 'loc_99FA']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_A4BC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_9A3E']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
jmp ['short', 'loc_9A71']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['ecx,', '[ebp+var_1B0]']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+var_68]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_9AF8']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_9AF8']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_1AC],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_1AC]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_1AC]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_1B0],', 'edx']
jmp ['short', 'loc_9B10']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_1B0],', 'eax']
mov ['edx,', '[ebp+var_1B0]']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_14],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+10h]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '3']
mov ['[ebp+var_20],', 'ax']
mov ['[ebp+var_2C],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '2']
jz ['short', 'loc_9B5F']
mov ['eax,', '2']
mov ['[ebp+var_20],', 'ax']
mov ['[ebp+var_2C],', '0']
cmp ['[ebp+var_44],', '0FFFFFFFFh']
jnz ['loc_9CD4']
cmp ['[ebp+var_2C],', '2']
jnz ['loc_9CC4']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_5C]']
jge ['short', 'loc_9B8D']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_5C],', 'eax']
mov ['[ebp+var_50],', '0']
jmp ['loc_9CBF']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_68]']
jnz ['loc_9CBF']
mov ['eax,', '[ebp+var_68]']
cdq
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+140h]']
sub ['eax,', '[ecx+20h]']
sbb ['edx,', '[ecx+24h]']
mov ['[ebp+var_90],', 'eax']
mov ['[ebp+var_8C],', 'edx']
cmp ['[ebp+var_8C],', '0']
jl ['short', 'loc_9C17']
jg ['short', 'loc_9BCC']
cmp ['[ebp+var_90],', '0']
jb ['short', 'loc_9C17']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+1Ch]']
cdq
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['edx,', '[ebp+var_8C]']
cmp ['edx,', '[ebp+var_1AC]']
jg ['short', 'loc_9C17']
jl ['short', 'loc_9C03']
mov ['eax,', '[ebp+var_90]']
cmp ['eax,', '[ebp+var_1B0]']
ja ['short', 'loc_9C17']
mov ['eax,', '[ebp+var_90]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['[edx+28h],', 'eax']
jmp ['short', 'loc_9C2F']
mov ['eax,', '[ebp+var_68]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_9CA7']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_9CA7']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_1AC],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_1AC]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_1AC]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_1B0],', 'edx']
jmp ['short', 'loc_9CBF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_1B0],', 'eax']
jmp ['loc_A24B']
mov ['[ebp+var_2C],', '2']
mov ['eax,', '1']
mov ['[ebp+var_20],', 'ax']
cmp ['[ebp+var_2C],', '1']
jnz ['loc_9E6C']
cmp ['[ebp+var_44],', '0FFFFh']
ja ['short', 'loc_9D4D']
cmp ['[ebp+var_44],', '0D800h']
jl ['short', 'loc_9D05']
cmp ['[ebp+var_44],', '0DBFFh']
jg ['short', 'loc_9D05']
mov ['[ebp+var_1AC],', '140h']
jmp ['short', 'loc_9D0F']
mov ['[ebp+var_1AC],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_44]']
sar ['edx,', '5']
add ['edx,', '[ebp+var_1AC]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_20],', 'cx']
jmp ['loc_9E3F']
cmp ['[ebp+var_44],', '10FFFFh']
ja ['loc_9E2E']
mov ['eax,', '[ebp+var_44]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['[ebp+var_9C],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+150h]']
movzx ['edx,', '[ebp+var_9C]']
sar ['edx,', '5']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
movzx ['eax,', '[ebp+var_9C]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_20],', 'cx']
movzx ['eax,', '[ebp+var_20]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+150h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A8],', 'eax']
cmp ['[ebp+var_A8],', '0']
jle ['short', 'loc_9E1B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_44]']
and ['edx,', '3FFh']
sar ['edx,', '5']
add ['edx,', '[ebp+var_A8]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '3FFh']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_20],', 'cx']
jmp ['short', 'loc_9E2C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_20],', 'dx']
jmp ['short', 'loc_9E3F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '4000h']
jz ['short', 'loc_9E6C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+15Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+15Ch],', 'ecx']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFBFFFh']
mov ['[ebp+var_20],', 'ax']
movsx ['eax,', 'ds:_fTrace']
test ['eax,', 'eax']
jz ['loc_9F09']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0BE@JHAHEGBC@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4d?5?5?5?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_44],', '20h']
jl ['short', 'loc_9ECE']
cmp ['[ebp+var_44],', '7Fh']
jge ['short', 'loc_9ECE']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_44]']
push ['eax']
push ['offset', '??_C@_06BELAJENL@?$CC?$CFc?$CC?5?5?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_9EE9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_44]']
push ['eax']
push ['offset', '??_C@_05HDNPBHBO@?$CF5x?5?5?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_20]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '??_C@_09GAIDENKM@?$CF3d?5?5?$CF3d?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+150h]']
mov ['ecx,', '[edx]']
cmp ['eax,', '[ecx+0Ch]']
jb ['short', 'loc_9F43']
mov ['edx,', 'ds:?__LINE__Var@?1??handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA']
add ['edx,', '76h']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1EG@BPJGGIHK@?$AAc?$AAa?$AAt?$AAe?$AAg?$AAo?$AAr?$AAy?$AA?$DM?$AAf?$AAD?$AAa?$AAt?$AAa?$AA?9?$AA?$DO?$AAf?$AAH?$AAe?$AAa?$AAd?$AAe?$AAr?$AA?9?$AA?$DO?$AAf?$AAC?$AAa?$AAt?$AAC?$AAo?$AAu@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
imul ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+10h]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '0FFFFFFFFh']
jnz ['loc_9FF5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_9FB9']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
jmp ['short', 'loc_9FEC']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['ecx,', '[ebp+var_1B0]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['loc_A178']
cmp ['[ebp+var_50],', '0']
jz ['loc_A0DE']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '[ebp+var_50]']
jnz ['loc_A0DE']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_5C],', 'eax']
mov ['[ebp+var_50],', '0']
movsx ['eax,', '[ebp+var_7D]']
test ['eax,', 'eax']
jz ['loc_A0D4']
mov ['eax,', '[ebp+var_5C]']
cdq
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+140h]']
sub ['eax,', '[ecx+20h]']
sbb ['edx,', '[ecx+24h]']
mov ['[ebp+var_B8],', 'eax']
mov ['[ebp+var_B4],', 'edx']
cmp ['[ebp+var_B4],', '0']
jl ['short', 'loc_A0B4']
jg ['short', 'loc_A069']
cmp ['[ebp+var_B8],', '0']
jb ['short', 'loc_A0B4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+1Ch]']
cdq
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['edx,', '[ebp+var_B4]']
cmp ['edx,', '[ebp+var_1AC]']
jg ['short', 'loc_A0B4']
jl ['short', 'loc_A0A0']
mov ['eax,', '[ebp+var_B8]']
cmp ['eax,', '[ebp+var_1B0]']
ja ['short', 'loc_A0B4']
mov ['eax,', '[ebp+var_B8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['[edx+28h],', 'eax']
jmp ['short', 'loc_A0CC']
mov ['eax,', '[ebp+var_5C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_5C]']
jmp ['loc_A4BC']
jmp ['$continueOn$73097']
jmp ['$continueOn$73097']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_A122']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
jmp ['short', 'loc_A155']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['ecx,', '[ebp+var_1B0]']
mov ['[ebp+var_C4],', 'ecx']
mov ['eax,', '[ebp+var_C4]']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', '$continueOn$73097']
jmp ['short', '$continueOn$73097']
mov ['eax,', '[ebp+var_38]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', '$continueOn$73097']
mov ['[ebp+var_50],', '0']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_A194']
jmp ['loc_A24B']
cmp ['[ebp+var_2C],', '1']
jnz ['loc_A239']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_A216']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_A216']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_1AC],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_1AC]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_1AC]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_1B0],', 'edx']
jmp ['short', 'loc_A22E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_1B0],', 'eax']
mov ['edx,', '[ebp+var_1B0]']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_A246']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_A246']
mov ['[ebp+var_2C],', '1']
jmp ['loc_9B5F']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_68]']
jnz ['loc_A3FD']
mov ['eax,', '[ebp+var_68]']
cdq
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+140h]']
sub ['eax,', '[ecx+20h]']
sbb ['edx,', '[ecx+24h]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_D0],', 'edx']
cmp ['[ebp+var_D0],', '0']
jl ['short', 'loc_A2D5']
jg ['short', 'loc_A28A']
cmp ['[ebp+var_D4],', '0']
jb ['short', 'loc_A2D5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+1Ch]']
cdq
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['edx,', '[ebp+var_D0]']
cmp ['edx,', '[ebp+var_1AC]']
jg ['short', 'loc_A2D5']
jl ['short', 'loc_A2C1']
mov ['eax,', '[ebp+var_D4]']
cmp ['eax,', '[ebp+var_1B0]']
ja ['short', 'loc_A2D5']
mov ['eax,', '[ebp+var_D4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['[edx+28h],', 'eax']
jmp ['short', 'loc_A2ED']
mov ['eax,', '[ebp+var_68]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_A365']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_A365']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_1AC],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_1AC]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_1AC]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_1B0],', 'edx']
jmp ['short', 'loc_A37D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_1B0],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_A3C1']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
jmp ['short', 'loc_A3F4']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['ecx,', '[ebp+var_1B0]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
cdq
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+140h]']
sub ['eax,', '[ecx+20h]']
sbb ['edx,', '[ecx+24h]']
mov ['[ebp+var_E4],', 'eax']
mov ['[ebp+var_E0],', 'edx']
cmp ['[ebp+var_E0],', '0']
jl ['short', 'loc_A47B']
jg ['short', 'loc_A430']
cmp ['[ebp+var_E4],', '0']
jb ['short', 'loc_A47B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
mov ['eax,', '[ecx+1Ch]']
cdq
mov ['[ebp+var_1B0],', 'eax']
mov ['[ebp+var_1AC],', 'edx']
mov ['edx,', '[ebp+var_E0]']
cmp ['edx,', '[ebp+var_1AC]']
jg ['short', 'loc_A47B']
jl ['short', 'loc_A467']
mov ['eax,', '[ebp+var_E4]']
cmp ['eax,', '[ebp+var_1B0]']
ja ['short', 'loc_A47B']
mov ['eax,', '[ebp+var_E4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+140h]']
mov ['[edx+28h],', 'eax']
jmp ['short', 'loc_A493']
mov ['eax,', '[ebp+var_5C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
movsx ['eax,', 'ds:_fTrace']
test ['eax,', 'eax']
jz ['short', 'loc_A4B9']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
push ['offset', '??_C@_0O@PBNPENIB@result?5?$DN?5?$CFd?6?6?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_5C]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1B0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??handlePrevious@RuleBasedBreakIterator@icu_56@@AAEHPBURBBIStateTable@3@@Z@4JA']
assume ['cs:_rdata']
public ['??_C@_0BE@JHAHEGBC@?5?5?5?5?5?5?5?5?5?5?5?5?5?$CF4d?5?5?5?$AA@']
assume ['cs:_rdata']
public ['??_C@_0CN@HJKPBAFK@Handle?5Previous?5?5?5pos?5?5?5char?5?5st@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reset@RuleBasedBreakIterator@icu_56@@MAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jz ['short', 'loc_A55D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+160h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+160h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+164h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+15Ch],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+168h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+158h]']
test ['ecx,', 'ecx']
jnz ['loc_A6BF']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+140h],', '0']
jz ['short', 'loc_A603']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_A61F']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+154h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+158h],', '1']
jmp ['loc_A6BF']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+164h],', '0']
jle ['short', 'loc_A670']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+34h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jz ['short', 'loc_A6BF']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jz ['short', 'loc_A6BF']
mov ['ecx,', 'ds:?__LINE__Var@?1??makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ@4JA']
add ['ecx,', '12h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BC@HPDBKOEJ@?$AAp?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAp?$AAb?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+154h],', '0']
jl ['short', 'loc_A6E2']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+150h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+154h]']
cmp ['ecx,', '[edx+1Ch]']
jl ['short', 'loc_A708']
mov ['edx,', 'ds:?__LINE__Var@?1??makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ@4JA']
add ['edx,', '16h']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1JC@FMHHAABE@?$AAf?$AAL?$AAa?$AAs?$AAt?$AAR?$AAu?$AAl?$AAe?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAL?$AAa@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_1JC@FMHHAABE@?$AAf?$AAL?$AAa?$AAs?$AAt?$AAR?$AAu?$AAl?$AAe?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAf?$AAL?$AAa@']
unicode ['0,', '<fLastRuleStatusIndex', '>']
dw ['3Eh']
unicode ['0,', '<=', '0', '&&', 'fLastRuleStatusIndex', '>']
dw ['3Ch']
unicode ['0,', '<', 'fData->']
dw ['3Eh']
unicode ['0,', '<fStatusMaxIdx>,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1BC@HPDBKOEJ@?$AAp?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAp?$AAb?$AA?$AA@']
unicode ['0,', '<pa', '==', 'pb>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRuleStatus@RuleBasedBreakIterator@icu_56@@UBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+154h]']
mov ['ecx,', '[ecx+18h]']
mov ['edx,', '[ebp+var_8]']
mov ['edx,', '[edx+154h]']
add ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getRuleStatusVec@RuleBasedBreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A88B']
xor ['eax,', 'eax']
jmp ['loc_A915']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
call ['?makeRuleStatusValid@RuleBasedBreakIterator@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+154h]']
mov ['ecx,', '[ecx+18h]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jle ['short', 'loc_A8D1']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_A8E3']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_A912']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+154h]']
add ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ecx+18h]']
mov ['edx,', '[ebp+var_38]']
mov ['esi,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax*4+4]']
mov ['[esi+edx*4],', 'eax']
jmp ['short', 'loc_A8DA']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBinaryRules@RuleBasedBreakIterator@icu_56@@UAEPBEAAI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jz ['short', 'loc_A98C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?createBufferClone@RuleBasedBreakIterator@icu_56@@UAEPAVBreakIterator@2@PAXAAHAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A9D4']
xor ['eax,', 'eax']
jmp ['short', 'loc_AA1F']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_A9E9']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_AA1F']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_AA13']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_AA1C']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0FFFFFF82h']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '244h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_250]']
mov ['ecx,', '91h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '1']
jg ['short', 'loc_AAC2']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_AAAE']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_24C],', 'ecx']
jmp ['short', 'loc_AAB7']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_24C],', 'edx']
mov ['eax,', '[ebp+var_24C]']
jmp ['loc_BDFE']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_AAD5']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_24C],', 'ecx']
jmp ['short', 'loc_AADE']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_24C],', 'edx']
mov ['eax,', '[ebp+var_24C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_AB95']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_AB7D']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_AB7D']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_24C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_24C]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_24C]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_250],', 'edx']
jmp ['short', 'loc_AB95']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_250],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_50],', '0']
lea ['eax,', '[ebp+var_50]']
push ['eax']
lea ['ecx,', '[ebp+var_70]']
call ['??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_7C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0FFFFh']
ja ['short', 'loc_AC58']
cmp ['[ebp+var_88],', '0D800h']
jl ['short', 'loc_AC0A']
cmp ['[ebp+var_88],', '0DBFFh']
jg ['short', 'loc_AC0A']
mov ['[ebp+var_24C],', '140h']
jmp ['short', 'loc_AC14']
mov ['[ebp+var_24C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
sar ['edx,', '5']
add ['edx,', '[ebp+var_24C]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['loc_AD56']
cmp ['[ebp+var_88],', '10FFFFh']
ja ['loc_AD45']
mov ['eax,', '[ebp+var_88]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['[ebp+var_94],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
movzx ['edx,', '[ebp+var_94]']
sar ['edx,', '5']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
movzx ['eax,', '[ebp+var_94]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
movzx ['eax,', '[ebp+var_38]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+150h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0']
jle ['short', 'loc_AD32']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
and ['edx,', '3FFh']
sar ['edx,', '5']
add ['edx,', '[ebp+var_A0]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '3FFh']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['short', 'loc_AD43']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
jmp ['short', 'loc_AD56']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
movzx ['eax,', '[ebp+var_38]']
and ['eax,', '4000h']
jz ['loc_B577']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_B0FE']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0FFFFh']
ja ['short', 'loc_AE19']
cmp ['[ebp+var_88],', '0D800h']
jl ['short', 'loc_ADCB']
cmp ['[ebp+var_88],', '0DBFFh']
jg ['short', 'loc_ADCB']
mov ['[ebp+var_24C],', '140h']
jmp ['short', 'loc_ADD5']
mov ['[ebp+var_24C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
sar ['edx,', '5']
add ['edx,', '[ebp+var_24C]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['loc_AF17']
cmp ['[ebp+var_88],', '10FFFFh']
ja ['loc_AF06']
mov ['eax,', '[ebp+var_88]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['[ebp+var_AC],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
movzx ['edx,', '[ebp+var_AC]']
sar ['edx,', '5']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
movzx ['eax,', '[ebp+var_AC]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
movzx ['eax,', '[ebp+var_38]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+150h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_B8],', 'eax']
cmp ['[ebp+var_B8],', '0']
jle ['short', 'loc_AEF3']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
and ['edx,', '3FFh']
sar ['edx,', '5']
add ['edx,', '[ebp+var_B8]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '3FFh']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['short', 'loc_AF04']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
jmp ['short', 'loc_AF17']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
cmp ['[ebp+var_88],', '0FFFFFFFFh']
jz ['short', 'loc_AF2F']
movzx ['eax,', '[ebp+var_38]']
and ['eax,', '4000h']
jnz ['loc_AD71']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_AF73']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_250],', 'eax']
mov ['[ebp+var_24C],', 'edx']
jmp ['short', 'loc_AFA6']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_250],', 'eax']
mov ['[ebp+var_24C],', 'edx']
mov ['ecx,', '[ebp+var_250]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_88],', '0FFFFFFFFh']
jnz ['loc_B05D']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_B034']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_B034']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_24C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_24C]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_24C]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_250],', 'edx']
jmp ['short', 'loc_B04C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_250],', 'eax']
mov ['edx,', '[ebp+var_250]']
mov ['[ebp+var_88],', 'edx']
jmp ['loc_B0F9']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_B0D5']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_B0D5']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_24C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_24C]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_24C]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_250],', 'edx']
jmp ['short', 'loc_B0ED']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_250],', 'eax']
mov ['edx,', '[ebp+var_250]']
mov ['[ebp+var_88],', 'edx']
jmp ['loc_B3FB']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jle ['short', 'loc_B176']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['ecx,', '[edx+28h]']
mov ['edx,', '[eax+30h]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
cmp ['eax,', '0D800h']
jge ['short', 'loc_B176']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+28h]']
sub ['eax,', '1']
mov ['[ebp+var_24C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ebp+var_24C]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ebp+var_24C]']
movzx ['edx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_250],', 'edx']
jmp ['short', 'loc_B18E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_250],', 'eax']
mov ['edx,', '[ebp+var_250]']
mov ['[ebp+var_88],', 'edx']
cmp ['[ebp+var_88],', '0FFFFh']
ja ['short', 'loc_B218']
cmp ['[ebp+var_88],', '0D800h']
jl ['short', 'loc_B1CA']
cmp ['[ebp+var_88],', '0DBFFh']
jg ['short', 'loc_B1CA']
mov ['[ebp+var_24C],', '140h']
jmp ['short', 'loc_B1D4']
mov ['[ebp+var_24C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
sar ['edx,', '5']
add ['edx,', '[ebp+var_24C]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['loc_B316']
cmp ['[ebp+var_88],', '10FFFFh']
ja ['loc_B305']
mov ['eax,', '[ebp+var_88]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['[ebp+var_C4],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
movzx ['edx,', '[ebp+var_C4]']
sar ['edx,', '5']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
movzx ['eax,', '[ebp+var_C4]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
movzx ['eax,', '[ebp+var_38]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+150h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_D0],', 'eax']
cmp ['[ebp+var_D0],', '0']
jle ['short', 'loc_B2F2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
and ['edx,', '3FFh']
sar ['edx,', '5']
add ['edx,', '[ebp+var_D0]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '3FFh']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['short', 'loc_B303']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
jmp ['short', 'loc_B316']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
cmp ['[ebp+var_88],', '0FFFFFFFFh']
jz ['short', 'loc_B32E']
movzx ['eax,', '[ebp+var_38]']
and ['eax,', '4000h']
jnz ['loc_B0FE']
cmp ['[ebp+var_88],', '0FFFFFFFFh']
jnz ['short', 'loc_B351']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_88],', 'eax']
jmp ['short', 'loc_B37B']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_88],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_B3BF']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_250],', 'eax']
mov ['[ebp+var_24C],', 'edx']
jmp ['short', 'loc_B3F2']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_250],', 'eax']
mov ['[ebp+var_24C],', 'edx']
mov ['ecx,', '[ebp+var_250]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_88],', '0FFFFh']
ja ['short', 'loc_B479']
cmp ['[ebp+var_88],', '0D800h']
jl ['short', 'loc_B42B']
cmp ['[ebp+var_88],', '0DBFFh']
jg ['short', 'loc_B42B']
mov ['[ebp+var_24C],', '140h']
jmp ['short', 'loc_B435']
mov ['[ebp+var_24C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
sar ['edx,', '5']
add ['edx,', '[ebp+var_24C]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['loc_B577']
cmp ['[ebp+var_88],', '10FFFFh']
ja ['loc_B566']
mov ['eax,', '[ebp+var_88]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['[ebp+var_DC],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
movzx ['edx,', '[ebp+var_DC]']
sar ['edx,', '5']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
movzx ['eax,', '[ebp+var_DC]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
movzx ['eax,', '[ebp+var_38]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+150h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
cmp ['[ebp+var_E8],', '0']
jle ['short', 'loc_B553']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
and ['edx,', '3FFh']
sar ['edx,', '5']
add ['edx,', '[ebp+var_E8]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '3FFh']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['short', 'loc_B564']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
jmp ['short', 'loc_B577']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_B72F']
mov ['eax,', '[ebp+var_20]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0FFFFh']
ja ['short', 'loc_B631']
cmp ['[ebp+var_88],', '0D800h']
jl ['short', 'loc_B5E3']
cmp ['[ebp+var_88],', '0DBFFh']
jg ['short', 'loc_B5E3']
mov ['[ebp+var_24C],', '140h']
jmp ['short', 'loc_B5ED']
mov ['[ebp+var_24C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
sar ['edx,', '5']
add ['edx,', '[ebp+var_24C]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['loc_B72F']
cmp ['[ebp+var_88],', '10FFFFh']
ja ['loc_B71E']
mov ['eax,', '[ebp+var_88]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['[ebp+var_F4],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
movzx ['edx,', '[ebp+var_F4]']
sar ['edx,', '5']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
movzx ['eax,', '[ebp+var_F4]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
movzx ['eax,', '[ebp+var_38]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+150h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_100],', 'eax']
cmp ['[ebp+var_100],', '0']
jle ['short', 'loc_B70B']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
and ['edx,', '3FFh']
sar ['edx,', '5']
add ['edx,', '[ebp+var_100]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '3FFh']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['short', 'loc_B71C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
jmp ['short', 'loc_B72F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_BB94']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
mov ['ecx,', '[ecx+28h]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_B78A']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+140h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
mov ['eax,', '[eax+28h]']
cdq
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_250],', 'eax']
mov ['[ebp+var_24C],', 'edx']
jmp ['short', 'loc_B7BD']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+140h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_250],', 'eax']
mov ['[ebp+var_24C],', 'edx']
mov ['ecx,', '[ebp+var_250]']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+var_44]']
cmp ['edx,', '[ebp+var_2C]']
jge ['loc_B98C']
movzx ['eax,', '[ebp+var_38]']
and ['eax,', '4000h']
jnz ['loc_B98C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0FFFFh']
ja ['short', 'loc_B889']
cmp ['[ebp+var_88],', '0D800h']
jl ['short', 'loc_B83B']
cmp ['[ebp+var_88],', '0DBFFh']
jg ['short', 'loc_B83B']
mov ['[ebp+var_24C],', '140h']
jmp ['short', 'loc_B845']
mov ['[ebp+var_24C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
sar ['edx,', '5']
add ['edx,', '[ebp+var_24C]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['loc_B987']
cmp ['[ebp+var_88],', '10FFFFh']
ja ['loc_B976']
mov ['eax,', '[ebp+var_88]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['[ebp+var_10C],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
movzx ['edx,', '[ebp+var_10C]']
sar ['edx,', '5']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
movzx ['eax,', '[ebp+var_10C]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
movzx ['eax,', '[ebp+var_38]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+150h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_118],', 'eax']
cmp ['[ebp+var_118],', '0']
jle ['short', 'loc_B963']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
and ['edx,', '3FFh']
sar ['edx,', '5']
add ['edx,', '[ebp+var_118]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '3FFh']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['short', 'loc_B974']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
jmp ['short', 'loc_B987']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
jmp ['loc_B746']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_2C]']
jl ['short', 'loc_B999']
jmp ['loc_BB94']
mov ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z']
mov ['[ebp+var_124],', 'eax']
cmp ['[ebp+var_124],', '0']
jz ['short', 'loc_B9FB']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+174h]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+140h]']
push ['eax']
mov ['ecx,', '[ebp+var_124]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_124]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '[ebp+var_7C]']
mov ['[ebp+var_7C],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0FFFFh']
ja ['short', 'loc_BA91']
cmp ['[ebp+var_88],', '0D800h']
jl ['short', 'loc_BA43']
cmp ['[ebp+var_88],', '0DBFFh']
jg ['short', 'loc_BA43']
mov ['[ebp+var_24C],', '140h']
jmp ['short', 'loc_BA4D']
mov ['[ebp+var_24C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
sar ['edx,', '5']
add ['edx,', '[ebp+var_24C]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['loc_BB8F']
cmp ['[ebp+var_88],', '10FFFFh']
ja ['loc_BB7E']
mov ['eax,', '[ebp+var_88]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['[ebp+var_130],', 'ax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
movzx ['edx,', '[ebp+var_130]']
sar ['edx,', '5']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
movzx ['eax,', '[ebp+var_130]']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
movzx ['eax,', '[ebp+var_38]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+150h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_13C],', 'eax']
cmp ['[ebp+var_13C],', '0']
jle ['short', 'loc_BB6B']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+150h]']
mov ['edx,', '[ebp+var_88]']
and ['edx,', '3FFh']
sar ['edx,', '5']
add ['edx,', '[ebp+var_13C]']
mov ['eax,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+edx*2]']
mov ['eax,', '[ebp+var_88]']
and ['eax,', '3FFh']
and ['eax,', '1Fh']
lea ['edx,', '[eax+edx*4]']
mov ['eax,', '[ecx+20h]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
jmp ['short', 'loc_BB7C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
jmp ['short', 'loc_BB8F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+150h]']
mov ['dx,', '[ecx+34h]']
mov ['[ebp+var_38],', 'dx']
jmp ['loc_B72F']
cmp ['[ebp+var_7C],', '0']
jle ['loc_BD8A']
lea ['ecx,', '[ebp+var_70]']
call ['?size@UVector@icu_56@@QBEHXZ']
cmp ['[ebp+var_7C],', 'eax']
jz ['short', 'loc_BBD0']
mov ['eax,', 'ds:?__LINE__Var@?1??checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z@4JA']
add ['eax,', '70h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1EC@PLHCKIME@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAb?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_7C]']
mov ['[ebp+var_148],', 'eax']
push ['0']
lea ['ecx,', '[ebp+var_70]']
call ['?elementAti@UVector@icu_56@@QBEHH@Z']
cmp ['[ebp+arg_0],', 'eax']
jge ['short', 'loc_BBF7']
mov ['eax,', '[ebp+var_148]']
add ['eax,', '1']
mov ['[ebp+var_148],', 'eax']
lea ['ecx,', '[ebp+var_70]']
call ['?peeki@UStack@icu_56@@QBEHXZ']
cmp ['[ebp+arg_4],', 'eax']
jle ['short', 'loc_BC13']
mov ['eax,', '[ebp+var_148]']
add ['eax,', '1']
mov ['[ebp+var_148],', 'eax']
mov ['eax,', '[ebp+var_148]']
shl ['eax,', '2']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+160h],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jz ['loc_BD8A']
mov ['[ebp+var_154],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_148]']
mov ['[eax+164h],', 'ecx']
push ['0']
lea ['ecx,', '[ebp+var_70]']
call ['?elementAti@UVector@icu_56@@QBEHH@Z']
cmp ['[ebp+arg_0],', 'eax']
jge ['short', 'loc_BC8A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+160h]']
mov ['edx,', '[ebp+var_154]']
mov ['eax,', '[ebp+arg_0]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_154]']
add ['ecx,', '1']
mov ['[ebp+var_154],', 'ecx']
mov ['[ebp+var_160],', '0']
jmp ['short', 'loc_BCA5']
mov ['eax,', '[ebp+var_160]']
add ['eax,', '1']
mov ['[ebp+var_160],', 'eax']
mov ['eax,', '[ebp+var_160]']
cmp ['eax,', '[ebp+var_7C]']
jge ['short', 'loc_BCE2']
mov ['eax,', '[ebp+var_160]']
push ['eax']
lea ['ecx,', '[ebp+var_70]']
call ['?elementAti@UVector@icu_56@@QBEHH@Z']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+160h]']
mov ['ecx,', '[ebp+var_154]']
mov ['[edx+ecx*4],', 'eax']
mov ['edx,', '[ebp+var_154]']
add ['edx,', '1']
mov ['[ebp+var_154],', 'edx']
jmp ['short', 'loc_BC96']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+160h]']
mov ['edx,', '[ebp+var_154]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+edx*4-4]']
jle ['short', 'loc_BD0F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+160h]']
mov ['edx,', '[ebp+var_154]']
mov ['eax,', '[ebp+arg_4]']
mov ['[ecx+edx*4],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_BD53']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+40h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_244],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_70]']
call ['??1UStack@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_244]']
jmp ['loc_BDFE']
jmp ['short', 'loc_BD8A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+3Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_238],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_70]']
call ['??1UStack@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_238]']
jmp ['short', 'loc_BDFE']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_BD9D']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_24C],', 'ecx']
jmp ['short', 'loc_BDA6']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_24C],', 'edx']
mov ['eax,', '[ebp+var_24C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+140h]']
push ['ecx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_BDD4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_24C],', 'ecx']
jmp ['short', 'loc_BDDD']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_24C],', 'edx']
mov ['eax,', '[ebp+var_24C]']
mov ['[ebp+var_22C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_70]']
call ['??1UStack@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_22C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN122']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '250h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
dd ['offset', '$LN121']
dd ['offset', '$LN118']
db ['90h']
db ['3', 'dup(0FFh)']
dd ['18h']
dd ['offset', '$LN119']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z$0 proc near
lea ['ecx,', '[ebp-70h]']
jmp ['??1UStack@icu_56@@UAE@XZ']
endp
__ehhandler$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-254h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1EC@PLHCKIME@?$AAf?$AAo?$AAu?$AAn?$AAd?$AAB?$AAr?$AAe?$AAa?$AAk?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAb?$AAr?$AAe?$AAa?$AAk?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ@']
unicode ['0,', '<foundBreakCount', '==', 'breaks.size()>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z@4JA']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z$0']
dd ['offset', '__unwindtable$?checkDictionary@RuleBasedBreakIterator@icu_56@@IAEHHHC@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '154h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_160]']
mov ['ecx,', '55h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jnz ['loc_C045']
push ['18h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_BF93']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_14C]']
call ['??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['[ebp+var_160],', 'eax']
jmp ['short', 'loc_BF9D']
mov ['[ebp+var_160],', '0']
mov ['ecx,', '[ebp+var_160]']
mov ['[ebp+var_158],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_158]']
mov ['[edx+16Ch],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_BFDE']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C045']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
mov ['[ebp+var_134],', 'ecx']
mov ['edx,', '[ebp+var_134]']
mov ['[ebp+var_140],', 'edx']
cmp ['[ebp+var_140],', '0']
jz ['short', 'loc_C027']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_140]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_140]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_160],', 'eax']
jmp ['short', 'loc_C031']
mov ['[ebp+var_160],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+16Ch],', '0']
xor ['eax,', 'eax']
jmp ['loc_C251']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?size@UVector@icu_56@@QBEHXZ']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
js ['short', 'loc_C0AB']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['ecx,', '[ecx+16Ch]']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+174h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_20]']
mov ['eax,', '[edx+4]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C0A9']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_C251']
jmp ['short', 'loc_C056']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+174h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?getLanguageBreakEngineFromFactory@icu_56@@YAPBVLanguageBreakEngine@1@HH@Z']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_C0E8']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[edx+16Ch]']
call ['?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_20]']
jmp ['loc_C251']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+170h],', '0']
jnz ['loc_C216']
push ['14h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_11C],', '0']
jz ['short', 'loc_C12F']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_11C]']
call ['??0UnhandledEngine@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['[ebp+var_160],', 'eax']
jmp ['short', 'loc_C139']
mov ['[ebp+var_160],', '0']
mov ['ecx,', '[ebp+var_160]']
mov ['[ebp+var_128],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_128]']
mov ['[edx+170h],', 'eax']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C181']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+170h],', '0']
jnz ['short', 'loc_C181']
mov ['[ebp+var_2C],', '7']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+170h]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+16Ch]']
call ['?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C216']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+170h]']
mov ['[ebp+var_104],', 'ecx']
mov ['edx,', '[ebp+var_104]']
mov ['[ebp+var_110],', 'edx']
cmp ['[ebp+var_110],', '0']
jz ['short', 'loc_C1FB']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_110]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_110]']
mov ['eax,', '[edx]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_160],', 'eax']
jmp ['short', 'loc_C205']
mov ['[ebp+var_160],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+170h],', '0']
xor ['eax,', 'eax']
jmp ['short', 'loc_C251']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+174h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+170h]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+170h]']
mov ['edx,', '[ecx]']
mov ['ecx,', 'eax']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+170h]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '160h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
dd ['offset', '$LN25']
dd ['offset', '$LN23']
align ['10h']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z$0 proc near
mov ['eax,', '[ebp-14Ch]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z$1 proc near
mov ['eax,', '[ebp-11Ch]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z proc	near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-164h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z']
jmp ['___CxxFrameHandler3']
align ['4']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z$1']
dd ['offset', '__unwindtable$?getLanguageBreakEngine@RuleBasedBreakIterator@icu_56@@AAEPBVLanguageBreakEngine@2@H@Z']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLanguageBreakEngineFromFactory@icu_56@@YAPBVLanguageBreakEngine@1@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['offset', '?initLanguageFactories@icu_56@@YAXXZ']
push ['offset', '_gLanguageBreakFactoriesInitOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z']
add ['esp,', '8']
cmp ['ds:_gLanguageBreakFactories,', '0']
jnz ['short', 'loc_C34D']
xor ['eax,', 'eax']
jmp ['short', 'loc_C3AD']
mov ['ecx,', 'ds:_gLanguageBreakFactories']
call ['?size@UVector@icu_56@@QBEHXZ']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
js ['short', 'loc_C3AA']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', 'ds:_gLanguageBreakFactories']
call ['?elementAt@UVector@icu_56@@QBEPAXH@Z']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax+4]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_C3A8']
jmp ['short', 'loc_C3AA']
jmp ['short', 'loc_C362']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXXZ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_loadAcquire@icu_56@@YAHACJ@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jnz ['short', 'loc_C3F5']
jmp ['short', 'loc_C420']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C420']
mov ['esi,', 'esp']
call ['[ebp+arg_4]']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InterlockedCompareExchange@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?initLanguageFactories@icu_56@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?initLanguageFactories@icu_56@@YAXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_118]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', '0']
cmp ['ds:_gLanguageBreakFactories,', '0']
jz ['short', 'loc_C4F2']
mov ['eax,', 'ds:?__LINE__Var@?1??initLanguageFactories@icu_56@@YAXXZ@4JA@9c7d53cf']
add ['eax,', '2']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FG@CBBHOA@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1DK@NEHJOPFH@?$AAg?$AAL?$AAa?$AAn?$AAg?$AAu?$AAa?$AAg?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['18h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_104],', '0']
jz ['short', 'loc_C530']
lea ['eax,', '[ebp+var_14]']
push ['eax']
push ['0']
push ['offset', '__deleteFactory']
mov ['ecx,', '[ebp+var_104]']
call ['??0UStack@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_C53A']
mov ['[ebp+var_118],', '0']
mov ['ecx,', '[ebp+var_118]']
mov ['[ebp+var_110],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_110]']
mov ['ds:_gLanguageBreakFactories,', 'edx']
cmp ['ds:_gLanguageBreakFactories,', '0']
jz ['loc_C5E9']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C5E9']
push ['8']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_EC],', '0']
jz ['short', 'loc_C5B0']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_EC]']
call ['??0ICULanguageBreakFactory@icu_56@@QAE@AAW4UErrorCode@@@Z']
mov ['[ebp+var_118],', 'eax']
jmp ['short', 'loc_C5BA']
mov ['[ebp+var_118],', '0']
mov ['ecx,', '[ebp+var_118]']
mov ['[ebp+var_F8],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_F8]']
mov ['[ebp+var_20],', 'edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', 'ds:_gLanguageBreakFactories']
call ['?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z']
push ['offset', '_breakiterator_cleanup_dict']
push ['2']
call ['_ucln_common_registerCleanup_56']
add ['esp,', '8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '118h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN13_1']
dd ['offset', '$LN11_1']
align ['4']
assume ['cs:_text$x']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__unwindfunclet$?initLanguageFactories@icu_56@@YAXXZ$0 proc near
mov ['eax,', '[ebp-104h]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?initLanguageFactories@icu_56@@YAXXZ$1 proc near
mov ['eax,', '[ebp-0ECh]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?initLanguageFactories@icu_56@@YAXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-11Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?initLanguageFactories@icu_56@@YAXXZ']
jmp ['___CxxFrameHandler3']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1DK@NEHJOPFH@?$AAg?$AAL?$AAa?$AAn?$AAg?$AAu?$AAa?$AAg?$AAe?$AAB?$AAr?$AAe?$AAa?$AAk?$AAF?$AAa?$AAc?$AAt?$AAo?$AAr?$AAi?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<gLanguageBreakFactories', '==', '0>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??initLanguageFactories@icu_56@@YAXXZ@4JA@9c7d53cf']
assume ['cs:_xdata$x']
dd ['offset', '__unwindfunclet$?initLanguageFactories@icu_56@@YAXXZ$0']
dd ['0FFFFFFFFh']
dd ['offset', '__unwindfunclet$?initLanguageFactories@icu_56@@YAXXZ$1']
dd ['offset', '__unwindtable$?initLanguageFactories@icu_56@@YAXXZ']
dd ['5', 'dup(0)']
dd ['1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_breakiterator_cleanup_dict proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_gLanguageBreakFactories,', '0']
jz ['short', 'loc_C774']
mov ['eax,', 'ds:_gLanguageBreakFactories']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_C760']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_D4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_D4]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_C76A']
mov ['[ebp+var_DC],', '0']
mov ['ds:_gLanguageBreakFactories,', '0']
mov ['ecx,', 'offset', '_gLanguageBreakFactoriesInitOnce']
call ['?reset@UInitOnce@icu_56@@QAEXXZ']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reset@UInitOnce@icu_56@@QAEXXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__deleteFactory	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_D4],', 'ecx']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_C829']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_D4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_D4]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_DC],', 'eax']
jmp ['short', 'loc_C833']
mov ['[ebp+var_DC],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setBreakType@RuleBasedBreakIterator@icu_56@@MAEXH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+174h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_C98E']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_C99A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeFilter@icu_56@@W3AEPAXI@Z proc near
sub ['ecx,', '4']
jmp ['??_EUnicodeFilter@icu_56@@UAEPAXI@Z']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1UObject@icu_56@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__purecall:near']
extrn ['?hasMetaData@Replaceable@icu_56@@UBECXZ:near']
extrn ['?clone@Replaceable@icu_56@@UBEPAV12@XZ:near']
extrn ['??1Replaceable@icu_56@@UAE@XZ:near']
extrn ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z:near']
extrn ['?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:near']
extrn ['?Flush@ByteSink@icu_56@@UAEXXZ:near']
extrn ['??1ByteSink@icu_56@@UAE@XZ:near']
extrn ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:near']
extrn ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:near']
extrn ['??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:near']
extrn ['?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:near']
extrn ['?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:near']
extrn ['?copy@UnicodeString@icu_56@@UAEXHHH@Z:near']
extrn ['?hasMetaData@UnicodeString@icu_56@@UBECXZ:near']
extrn ['?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:near']
extrn ['?getLength@UnicodeString@icu_56@@MBEHXZ:near']
extrn ['?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:near']
extrn ['?getChar32At@UnicodeString@icu_56@@MBEHH@Z:near']
extrn ['?doHashCode@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?refCount@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:near']
extrn ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:near']
extrn ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['_u_strlen_56:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:near']
extrn ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:near']
extrn ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:near']
extrn ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:near']
extrn ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:near']
extrn ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:near']
extrn ['?unBogus@UnicodeString@icu_56@@AAEXXZ:near']
extrn ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:near']
extrn ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z:near']
extrn ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:near']
extrn ['??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['___security_cookie:near']
extrn ['___CxxFrameHandler3:near']
extrn ['@__security_check_cookie@4:near']
extrn ['?clone@StringEnumeration@icu_56@@UBEPAV12@XZ:near']
extrn ['?next@StringEnumeration@icu_56@@UAEPBDPAHAAW4UErrorCode@@@Z:near']
extrn ['?unext@StringEnumeration@icu_56@@UAEPB_WPAHAAW4UErrorCode@@@Z:near']
extrn ['?snext@StringEnumeration@icu_56@@UAEPBVUnicodeString@2@AAW4UErrorCode@@@Z:near']
extrn ['??8StringEnumeration@icu_56@@UBECABV01@@Z:near']
extrn ['??9StringEnumeration@icu_56@@UBECABV01@@Z:near']
extrn ['??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:near']
extrn ['??1StringEnumeration@icu_56@@UAE@XZ:near']
extrn ['??8Locale@icu_56@@QBECABV01@@Z:near']
extrn ['?getRuleStatus@BreakIterator@icu_56@@UBEHXZ:near']
extrn ['?getRuleStatusVec@BreakIterator@icu_56@@UAEHPAHHAAW4UErrorCode@@@Z:near']
extrn ['??1BreakIterator@icu_56@@UAE@XZ:near']
extrn ['?toMatcher@UnicodeFunctor@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?toReplacer@UnicodeFunctor@icu_56@@UBEPAVUnicodeReplacer@2@XZ:near']
extrn ['??1UnicodeFunctor@icu_56@@UAE@XZ:near']
extrn ['??1UnicodeMatcher@icu_56@@UAE@XZ:near']
extrn ['?toMatcher@UnicodeFilter@icu_56@@UBEPAVUnicodeMatcher@2@XZ:near']
extrn ['?setData@UnicodeFilter@icu_56@@UAEXPBVTransliterationRuleData@2@@Z:near']
extrn ['?matches@UnicodeFilter@icu_56@@UAE?AW4UMatchDegree@2@ABVReplaceable@2@AAHHC@Z:near']
extrn ['??1UnicodeFilter@icu_56@@UAE@XZ:near']
extrn ['?containsNone@UnicodeSet@icu_56@@QBECHH@Z:near']
extrn ['?containsNone@UnicodeSet@icu_56@@QBECABV12@@Z:near']
extrn ['?containsNone@UnicodeSet@icu_56@@QBECABVUnicodeString@2@@Z:near']
extrn ['?span@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:near']
extrn ['?spanBack@UnicodeSet@icu_56@@QBEHPB_WHW4USetSpanCondition@@@Z:near']
extrn ['?indexOf@UVector@icu_56@@QBEHPAXH@Z:near']
extrn ['?indexOf@UVector@icu_56@@QBEHHH@Z:near']
extrn ['?elementAt@UVector@icu_56@@QBEPAXH@Z:near']
extrn ['?elementAti@UVector@icu_56@@QBEHH@Z:near']
extrn ['??8UVector@icu_56@@QAECABV01@@Z:near']
extrn ['?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:near']
extrn ['?addElement@UVector@icu_56@@QAEXHAAW4UErrorCode@@@Z:near']
extrn ['??1SymbolTable@icu_56@@UAE@XZ:near']
extrn ['??0RBBIDataWrapper@icu_56@@QAE@PBURBBIDataHeader@1@AAW4UErrorCode@@@Z:near']
extrn ['??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['??0BreakIterator@icu_56@@IAE@XZ:near']
extrn ['??0RBBIDataWrapper@icu_56@@QAE@PBURBBIDataHeader@1@W4EDontAdopt@01@AAW4UErrorCode@@@Z:near']
extrn ['??0RBBIDataWrapper@icu_56@@QAE@PAUUDataMemory@@AAW4UErrorCode@@@Z:near']
extrn ['?createRuleBasedBreakIterator@RBBIRuleBuilder@icu_56@@SAPAVBreakIterator@2@ABVUnicodeString@2@PAUUParseError@@AAW4UErrorCode@@@Z:near']
extrn ['_uprv_free_56:near']
extrn ['?removeReference@RBBIDataWrapper@icu_56@@QAEXXZ:near']
extrn ['_utext_close_56:near']
extrn ['?addReference@RBBIDataWrapper@icu_56@@QAEPAV12@XZ:near']
extrn ['_utext_clone_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp__getenv:near']
extrn ['_utext_openUChars_56:near']
extrn ['__imp__strstr:near']
extrn ['??8RBBIDataWrapper@icu_56@@QBECABV01@@Z:near']
extrn ['_utext_equals_56:near']
extrn ['__imp_??9type_info@@QBE_NABV0@@Z:near']
extrn ['___RTtypeid:near']
extrn ['?hashCode@RBBIDataWrapper@icu_56@@QAEHXZ:near']
extrn ['??0UCharCharacterIterator@icu_56@@QAE@PB_WH@Z:near']
extrn ['?getRuleSourceString@RBBIDataWrapper@icu_56@@QBEABVUnicodeString@2@XZ:near']
extrn ['_utext_openCharacterIterator_56:near']
extrn ['?setText@StringCharacterIterator@icu_56@@QAEXABVUnicodeString@2@@Z:near']
extrn ['??0StringCharacterIterator@icu_56@@QAE@ABVUnicodeString@1@@Z:near']
extrn ['_utext_openConstUnicodeString_56:near']
extrn ['_utext_setNativeIndex_56:near']
extrn ['_utext_getNativeIndex_56:near']
extrn ['_utext_nativeLength_56:near']
extrn ['_utext_previous32_56:near']
extrn ['_utext_next32_56:near']
extrn ['_utext_previous32From_56:near']
extrn ['__imp___wassert:near']
extrn ['__imp__printf:near']
extrn ['__imp__puts:near']
extrn ['??1UStack@icu_56@@UAE@XZ:near']
extrn ['_uprv_malloc_56:near']
extrn ['_utext_current32_56:near']
extrn ['??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['?insertElementAt@UVector@icu_56@@QAEXPAXHAAW4UErrorCode@@@Z:near']
extrn ['??0UnhandledEngine@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near']
extrn ['?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near']
extrn ['__imp__InterlockedCompareExchange@12:near']
extrn ['_ucln_common_registerCleanup_56:near']
extrn ['??0ICULanguageBreakFactory@icu_56@@QAE@AAW4UErrorCode@@@Z:near']
extrn ['??0UStack@icu_56@@QAE@P6AXPAX@ZP6ACTUElement@@2@ZAAW4UErrorCode@@@Z:near']
end

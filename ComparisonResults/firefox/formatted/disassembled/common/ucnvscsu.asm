endp
__SCSUReset	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+Dst],', 'ecx']
cmp ['[ebp+arg_4],', '1']
jg ['short', 'loc_27D']
push ['1']
push ['offset', '_initialDynamicOffsets']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['20h']
push ['offset', '_initialDynamicOffsets']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+40h],', '1']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+41h],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+43h],', '0']
mov ['ecx,', '[ebp+Dst]']
mov ['byte', 'ptr', '[ecx+42h],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+44h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+24h],', '0']
cmp ['[ebp+arg_4],', '1']
jz ['loc_32E']
push ['1']
push ['offset', '_initialDynamicOffsets']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['20h']
push ['offset', '_initialDynamicOffsets']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '20h']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+48h],', '1']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+49h],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['byte', 'ptr', '[eax+4Bh],', '0']
mov ['eax,', '[ebp+Dst]']
mov ['cl,', '[eax+4Ah]']
mov ['[ebp+var_D0],', 'cl']
cmp ['[ebp+var_D0],', '1']
jz ['short', 'loc_2D8']
jmp ['short', 'loc_2FF']
push ['1']
push ['offset', '_initialWindowUse_ja']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['8']
push ['offset', '_initialWindowUse_ja']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '4Ch']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_324']
push ['1']
push ['offset', '_initialWindowUse']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['8']
push ['offset', '_initialWindowUse']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '4Ch']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+38h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__SCSUOpen	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_383']
jmp ['loc_412']
push ['54h']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_3F6']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3DC']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '6Ah']
jnz ['short', 'loc_3DC']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '61h']
jnz ['short', 'loc_3DC']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3D0']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+2]']
cmp ['ecx,', '5Fh']
jnz ['short', 'loc_3DC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['byte', 'ptr', '[ecx+4Ah],', '1']
jmp ['short', 'loc_3E6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['byte', 'ptr', '[ecx+4Ah],', '0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['__SCSUReset']
add ['esp,', '8']
jmp ['short', 'loc_3FF']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '0FFFDh']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+6Ch],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+3Dh],', '0FFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__SCSUClose	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_473']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+22h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_469']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__SCSUToUnicodeWithOffsets proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '190h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_190]']
mov ['ecx,', '64h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+40h]']
mov ['[ebp+var_59],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+41h]']
mov ['[ebp+var_65],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+42h]']
mov ['[ebp+var_7D],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+43h]']
mov ['[ebp+var_89],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+44h]']
mov ['[ebp+var_71],', 'cl']
movzx ['eax,', '[ebp+var_65]']
neg ['eax']
sbb ['eax,', 'eax']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_A4],', '0']
movsx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jz ['loc_BF3']
movzx ['eax,', '[ebp+var_65]']
test ['eax,', 'eax']
jnz ['$singleByteMode$8732']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['$singleByteMode$8732']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnb ['$singleByteMode$8732']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_AD],', 'cl']
movzx ['edx,', '[ebp+var_AD]']
cmp ['edx,', '20h']
jl ['$singleByteMode$8732']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '7Fh']
jg ['short', 'loc_5D2']
movzx ['ax,', '[ebp+var_AD]']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_5CD']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
jmp ['loc_6EA']
movsx ['eax,', '[ebp+var_89]']
movzx ['ecx,', '[ebp+var_AD]']
and ['ecx,', '7Fh']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_BC],', 'ecx']
cmp ['[ebp+var_BC],', '0FFFFh']
ja ['short', 'loc_630']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_BC]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_62B']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
jmp ['loc_6EA']
mov ['eax,', '[ebp+var_BC]']
shr ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnb ['short', 'loc_6A4']
mov ['eax,', '[ebp+var_BC]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_6A2']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_6EA']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_6BE']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_BC]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+74h],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$endloop$8731']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
jmp ['$fastSingle$8707']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_BEE']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jb ['short', 'loc_71D']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_BEE']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_AD],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
movzx ['eax,', '[ebp+var_65]']
mov ['[ebp+var_190],', 'eax']
cmp ['[ebp+var_190],', '6']
ja ['loc_BE9']
mov ['ecx,', '[ebp+var_190]']
jmp ['ds:$LN90[ecx*4]']
movzx ['ecx,', '[ebp+var_AD]']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '2601h']
jz ['short', 'loc_7C0']
movzx ['ax,', '[ebp+var_AD]']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_7AA']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
jmp ['$fastSingle$8707']
jmp ['loc_89B']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '10h']
jl ['short', 'loc_814']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '17h']
jg ['short', 'loc_7FB']
movzx ['eax,', '[ebp+var_AD]']
sub ['eax,', '10h']
mov ['[ebp+var_89],', 'al']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
jmp ['$fastSingle$8707']
jmp ['short', 'loc_80F']
movzx ['eax,', '[ebp+var_AD]']
sub ['eax,', '18h']
mov ['[ebp+var_89],', 'al']
mov ['[ebp+var_65],', '6']
jmp ['loc_89B']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '8']
jg ['short', 'loc_833']
movzx ['eax,', '[ebp+var_AD]']
sub ['eax,', '1']
mov ['[ebp+var_7D],', 'al']
mov ['[ebp+var_65],', '3']
jmp ['short', 'loc_89B']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '0Bh']
jnz ['short', 'loc_845']
mov ['[ebp+var_65],', '4']
jmp ['short', 'loc_89B']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '0Eh']
jnz ['short', 'loc_857']
mov ['[ebp+var_65],', '1']
jmp ['short', 'loc_89B']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '0Fh']
jnz ['short', 'loc_87A']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_59],', '0']
jmp ['$fastUnicode$8761']
jmp ['short', 'loc_89B']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
jmp ['$endloop$8731']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
jmp ['loc_BE9']
mov ['al,', '[ebp+var_AD]']
mov ['[ebp+var_71],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
mov ['[ebp+var_65],', '2']
jmp ['loc_BE9']
movzx ['eax,', '[ebp+var_71]']
shl ['eax,', '8']
movzx ['ecx,', '[ebp+var_AD]']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['[edx],', 'ax']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_911']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_65],', '0']
jmp ['$fastSingle$8707']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '80h']
jge ['short', 'loc_974']
movsx ['eax,', '[ebp+var_7D]']
movzx ['ecx,', '[ebp+var_AD]']
add ['ecx,', '_staticOffsets[eax*4]']
mov ['edx,', '[ebp+var_38]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_96F']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
jmp ['loc_A89']
movsx ['eax,', '[ebp+var_7D]']
movzx ['ecx,', '[ebp+var_AD]']
and ['ecx,', '7Fh']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_C8],', 'ecx']
cmp ['[ebp+var_C8],', '0FFFFh']
ja ['short', 'loc_9CF']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_C8]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_9CA']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
jmp ['loc_A89']
mov ['eax,', '[ebp+var_C8]']
shr ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnb ['short', 'loc_A43']
mov ['eax,', '[ebp+var_C8]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_A41']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
jmp ['short', 'loc_A89']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_A5D']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_C8]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+74h],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$endloop$8731']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_65],', '0']
jmp ['$fastSingle$8707']
movzx ['eax,', '[ebp+var_AD]']
sar ['eax,', '5']
and ['eax,', '7']
mov ['[ebp+var_89],', 'al']
movzx ['eax,', '[ebp+var_AD]']
and ['eax,', '1Fh']
mov ['[ebp+var_71],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
mov ['[ebp+var_65],', '5']
jmp ['loc_BE9']
movzx ['eax,', '[ebp+var_71]']
shl ['eax,', '0Fh']
movzx ['ecx,', '[ebp+var_AD]']
shl ['ecx,', '7']
or ['eax,', 'ecx']
add ['eax,', '10000h']
movsx ['edx,', '[ebp+var_89]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+edx*4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_65],', '0']
jmp ['$fastSingle$8707']
movzx ['eax,', '[ebp+var_AD]']
test ['eax,', 'eax']
jnz ['short', 'loc_B3C']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
jmp ['$endloop$8731']
jmp ['loc_BD4']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '68h']
jge ['short', 'loc_B61']
movzx ['eax,', '[ebp+var_AD]']
shl ['eax,', '7']
movsx ['ecx,', '[ebp+var_89]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_BD4']
movzx ['eax,', '[ebp+var_AD]']
sub ['eax,', '68h']
movzx ['ecx,', 'al']
cmp ['ecx,', '40h']
jge ['short', 'loc_B91']
movzx ['eax,', '[ebp+var_AD]']
shl ['eax,', '7']
add ['eax,', '0AC00h']
movsx ['ecx,', '[ebp+var_89]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_BD4']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '0F9h']
jl ['short', 'loc_BBC']
movzx ['eax,', '[ebp+var_AD]']
movsx ['ecx,', '[ebp+var_89]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', 'dword', 'ptr', '(byte_203-5A7h)[eax*4]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_BD4']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
jmp ['$endloop$8731']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_65],', '0']
jmp ['$fastSingle$8707']
jmp ['$singleByteMode$8732']
jmp ['$endloop$8731']
movzx ['eax,', '[ebp+var_65]']
test ['eax,', 'eax']
jnz ['loc_C9F']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_C9F']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnb ['loc_C9F']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_AD],', 'cl']
movzx ['edx,', '[ebp+var_AD]']
sub ['edx,', '0E0h']
movzx ['eax,', 'dl']
cmp ['eax,', '12h']
jle ['short', 'loc_C9F']
movzx ['eax,', '[ebp+var_AD]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_C76']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '2']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
jmp ['$fastUnicode$8761']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['$endloop$8731']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jb ['short', 'loc_CC1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$endloop$8731']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_AD],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['al,', '[ebp+var_65]']
mov ['byte', 'ptr', '[ebp+var_190],', 'al']
cmp ['byte', 'ptr', '[ebp+var_190],', '0']
jz ['short', 'loc_D15']
cmp ['byte', 'ptr', '[ebp+var_190],', '1']
jz ['loc_E41']
cmp ['byte', 'ptr', '[ebp+var_190],', '2']
jz ['loc_E63']
jmp ['loc_EB1']
movzx ['eax,', '[ebp+var_AD]']
sub ['eax,', '0E0h']
movzx ['ecx,', 'al']
cmp ['ecx,', '12h']
jle ['short', 'loc_D4E']
mov ['al,', '[ebp+var_AD]']
mov ['[ebp+var_71],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['[ebp+var_65],', '2']
jmp ['loc_E3F']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '0E7h']
jg ['short', 'loc_D88']
movzx ['eax,', '[ebp+var_AD]']
sub ['eax,', '0E0h']
mov ['[ebp+var_89],', 'al']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_59],', '1']
jmp ['$fastSingle$8707']
jmp ['loc_E3F']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '0EFh']
jg ['short', 'loc_DCA']
movzx ['eax,', '[ebp+var_AD]']
sub ['eax,', '0E8h']
mov ['[ebp+var_89],', 'al']
mov ['[ebp+var_59],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['[ebp+var_65],', '6']
jmp ['$singleByteMode$8732']
jmp ['short', 'loc_E3F']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '0F1h']
jnz ['short', 'loc_DFA']
mov ['[ebp+var_59],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['[ebp+var_65],', '4']
jmp ['$singleByteMode$8732']
jmp ['short', 'loc_E3F']
movzx ['eax,', '[ebp+var_AD]']
cmp ['eax,', '0F0h']
jnz ['short', 'loc_E21']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['[ebp+var_65],', '1']
jmp ['short', 'loc_E3F']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
jmp ['short', '$endloop$8731']
jmp ['short', 'loc_EB1']
mov ['al,', '[ebp+var_AD]']
mov ['[ebp+var_71],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_AD]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
mov ['[ebp+var_65],', '2']
jmp ['short', 'loc_EB1']
movzx ['eax,', '[ebp+var_71]']
shl ['eax,', '8']
movzx ['ecx,', '[ebp+var_AD]']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['[edx],', 'ax']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_E9C']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_65],', '0']
jmp ['$fastUnicode$8761']
jmp ['loc_C9F']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_ECC']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jz ['short', 'loc_ECC']
mov ['[ebp+var_65],', '0']
jmp ['short', 'loc_EDB']
movzx ['eax,', '[ebp+var_65]']
test ['eax,', 'eax']
jnz ['short', 'loc_EDB']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_59]']
mov ['[eax+40h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_65]']
mov ['[eax+41h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_7D]']
mov ['[eax+42h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+43h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_71]']
mov ['[eax+44h],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax+18h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN52']
dd ['offset', '$LN51']
dd ['offset', '$LN49']
dd ['offset', '$LN38']
dd ['offset', '$LN37']
dd ['offset', '$LN36']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__SCSUToUnicode	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '16Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_16C]']
mov ['ecx,', '5Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+40h]']
mov ['[ebp+var_4D],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+41h]']
mov ['[ebp+var_59],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+42h]']
mov ['[ebp+var_71],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+43h]']
mov ['[ebp+var_7D],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+44h]']
mov ['[ebp+var_65],', 'cl']
movsx ['eax,', '[ebp+var_4D]']
test ['eax,', 'eax']
jz ['loc_14C8']
movzx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jnz ['$singleByteMode$8883']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['$singleByteMode$8883']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnb ['$singleByteMode$8883']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_89],', 'cl']
movzx ['edx,', '[ebp+var_89]']
cmp ['edx,', '20h']
jl ['$singleByteMode$8883']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '7Fh']
jg ['short', 'loc_1049']
movzx ['ax,', '[ebp+var_89]']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
jmp ['loc_10F9']
movsx ['eax,', '[ebp+var_7D]']
movzx ['ecx,', '[ebp+var_89]']
and ['ecx,', '7Fh']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_98],', 'ecx']
cmp ['[ebp+var_98],', '0FFFFh']
ja ['short', 'loc_1087']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_98]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_10F9']
mov ['eax,', '[ebp+var_98]']
shr ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnb ['short', 'loc_10CD']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_10F9']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+74h],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$endloop$8882']
jmp ['$fastSingle$8866']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_14C3']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jb ['short', 'loc_1120']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_14C3']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_89],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
movzx ['eax,', '[ebp+var_59]']
mov ['[ebp+var_16C],', 'eax']
cmp ['[ebp+var_16C],', '6']
ja ['loc_14BE']
mov ['ecx,', '[ebp+var_16C]']
jmp ['ds:$LN78[ecx*4]']
movzx ['ecx,', '[ebp+var_89]']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['eax,', '2601h']
jz ['short', 'loc_118E']
movzx ['ax,', '[ebp+var_89]']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
jmp ['$fastSingle$8866']
jmp ['loc_1248']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '10h']
jl ['short', 'loc_11CD']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '17h']
jg ['short', 'loc_11BA']
movzx ['eax,', '[ebp+var_89]']
sub ['eax,', '10h']
mov ['[ebp+var_7D],', 'al']
jmp ['$fastSingle$8866']
jmp ['short', 'loc_11CB']
movzx ['eax,', '[ebp+var_89]']
sub ['eax,', '18h']
mov ['[ebp+var_7D],', 'al']
mov ['[ebp+var_59],', '6']
jmp ['short', 'loc_1248']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '8']
jg ['short', 'loc_11EC']
movzx ['eax,', '[ebp+var_89]']
sub ['eax,', '1']
mov ['[ebp+var_71],', 'al']
mov ['[ebp+var_59],', '3']
jmp ['short', 'loc_1248']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '0Bh']
jnz ['short', 'loc_11FE']
mov ['[ebp+var_59],', '4']
jmp ['short', 'loc_1248']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '0Eh']
jnz ['short', 'loc_1210']
mov ['[ebp+var_59],', '1']
jmp ['short', 'loc_1248']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '0Fh']
jnz ['short', 'loc_1227']
mov ['[ebp+var_4D],', '0']
jmp ['$fastUnicode$8910']
jmp ['short', 'loc_1248']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
jmp ['$endloop$8882']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
jmp ['loc_14BE']
mov ['al,', '[ebp+var_89]']
mov ['[ebp+var_65],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
mov ['[ebp+var_59],', '2']
jmp ['loc_14BE']
movzx ['eax,', '[ebp+var_65]']
shl ['eax,', '8']
movzx ['ecx,', '[ebp+var_89]']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['[edx],', 'ax']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_59],', '0']
jmp ['$fastSingle$8866']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '80h']
jge ['short', 'loc_12E1']
movsx ['eax,', '[ebp+var_71]']
movzx ['ecx,', '[ebp+var_89]']
add ['ecx,', '_staticOffsets[eax*4]']
mov ['edx,', '[ebp+var_38]']
mov ['[edx],', 'cx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_1391']
movsx ['eax,', '[ebp+var_71]']
movzx ['ecx,', '[ebp+var_89]']
and ['ecx,', '7Fh']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_A4],', 'ecx']
cmp ['[ebp+var_A4],', '0FFFFh']
ja ['short', 'loc_131F']
mov ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '[ebp+var_A4]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_1391']
mov ['eax,', '[ebp+var_A4]']
shr ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnb ['short', 'loc_1365']
mov ['eax,', '[ebp+var_A4]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_1391']
mov ['eax,', '[ebp+var_A4]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+74h],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+41h],', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$endloop$8882']
mov ['[ebp+var_59],', '0']
jmp ['$fastSingle$8866']
movzx ['eax,', '[ebp+var_89]']
sar ['eax,', '5']
and ['eax,', '7']
mov ['[ebp+var_7D],', 'al']
movzx ['eax,', '[ebp+var_89]']
and ['eax,', '1Fh']
mov ['[ebp+var_65],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
mov ['[ebp+var_59],', '5']
jmp ['loc_14BE']
movzx ['eax,', '[ebp+var_65]']
shl ['eax,', '0Fh']
movzx ['ecx,', '[ebp+var_89]']
shl ['ecx,', '7']
or ['eax,', 'ecx']
add ['eax,', '10000h']
movsx ['edx,', '[ebp+var_7D]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+edx*4],', 'eax']
mov ['[ebp+var_59],', '0']
jmp ['$fastSingle$8866']
movzx ['eax,', '[ebp+var_89]']
test ['eax,', 'eax']
jnz ['short', 'loc_1426']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
jmp ['$endloop$8882']
jmp ['loc_14B5']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '68h']
jge ['short', 'loc_1448']
movzx ['eax,', '[ebp+var_89]']
shl ['eax,', '7']
movsx ['ecx,', '[ebp+var_7D]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_14B5']
movzx ['eax,', '[ebp+var_89]']
sub ['eax,', '68h']
movzx ['ecx,', 'al']
cmp ['ecx,', '40h']
jge ['short', 'loc_1475']
movzx ['eax,', '[ebp+var_89]']
shl ['eax,', '7']
add ['eax,', '0AC00h']
movsx ['ecx,', '[ebp+var_7D]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_14B5']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '0F9h']
jl ['short', 'loc_149D']
movzx ['eax,', '[ebp+var_89]']
movsx ['ecx,', '[ebp+var_7D]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', 'dword', 'ptr', '(byte_203-5A7h)[eax*4]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_14B5']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
jmp ['$endloop$8882']
mov ['[ebp+var_59],', '0']
jmp ['$fastSingle$8866']
jmp ['$singleByteMode$8883']
jmp ['$endloop$8882']
movzx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jnz ['short', 'loc_1530']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_1530']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jnb ['short', 'loc_1530']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_89],', 'cl']
movzx ['edx,', '[ebp+var_89]']
sub ['edx,', '0E0h']
movzx ['eax,', 'dl']
cmp ['eax,', '12h']
jle ['short', 'loc_1530']
movzx ['eax,', '[ebp+var_89]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx+1]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '2']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
jmp ['short', '$fastUnicode$8910']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['$endloop$8882']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jb ['short', 'loc_1552']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$endloop$8882']
mov ['eax,', '[ebp+var_20]']
mov ['cl,', '[eax]']
mov ['[ebp+var_89],', 'cl']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['al,', '[ebp+var_59]']
mov ['byte', 'ptr', '[ebp+var_16C],', 'al']
cmp ['byte', 'ptr', '[ebp+var_16C],', '0']
jz ['short', 'loc_1597']
cmp ['byte', 'ptr', '[ebp+var_16C],', '1']
jz ['loc_16B1']
cmp ['byte', 'ptr', '[ebp+var_16C],', '2']
jz ['loc_16D3']
jmp ['loc_16FB']
movzx ['eax,', '[ebp+var_89]']
sub ['eax,', '0E0h']
movzx ['ecx,', 'al']
cmp ['ecx,', '12h']
jle ['short', 'loc_15D0']
mov ['al,', '[ebp+var_89]']
mov ['[ebp+var_65],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['[ebp+var_59],', '2']
jmp ['loc_16AF']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '0E7h']
jg ['short', 'loc_15FB']
movzx ['eax,', '[ebp+var_89]']
sub ['eax,', '0E0h']
mov ['[ebp+var_7D],', 'al']
mov ['[ebp+var_4D],', '1']
jmp ['$fastSingle$8866']
jmp ['loc_16AF']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '0EFh']
jg ['short', 'loc_163A']
movzx ['eax,', '[ebp+var_89]']
sub ['eax,', '0E8h']
mov ['[ebp+var_7D],', 'al']
mov ['[ebp+var_4D],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['[ebp+var_59],', '6']
jmp ['$singleByteMode$8883']
jmp ['short', 'loc_16AF']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '0F1h']
jnz ['short', 'loc_166A']
mov ['[ebp+var_4D],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['[ebp+var_59],', '4']
jmp ['$singleByteMode$8883']
jmp ['short', 'loc_16AF']
movzx ['eax,', '[ebp+var_89]']
cmp ['eax,', '0F0h']
jnz ['short', 'loc_1691']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
mov ['[ebp+var_59],', '1']
jmp ['short', 'loc_16AF']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+25h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '1']
jmp ['short', '$endloop$8882']
jmp ['short', 'loc_16FB']
mov ['al,', '[ebp+var_89]']
mov ['[ebp+var_65],', 'al']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+var_89]']
mov ['[eax+26h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '2']
mov ['[ebp+var_59],', '2']
jmp ['short', 'loc_16FB']
movzx ['eax,', '[ebp+var_65]']
shl ['eax,', '8']
movzx ['ecx,', '[ebp+var_89]']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['[edx],', 'ax']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '2']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_59],', '0']
jmp ['$fastUnicode$8910']
jmp ['loc_1530']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1716']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0Fh']
jz ['short', 'loc_1716']
mov ['[ebp+var_59],', '0']
jmp ['short', 'loc_1725']
movzx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jnz ['short', 'loc_1725']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_4D]']
mov ['[eax+40h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_59]']
mov ['[eax+41h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_71]']
mov ['[eax+42h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_7D]']
mov ['[eax+43h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_65]']
mov ['[eax+44h],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN45']
dd ['offset', '$LN44']
dd ['offset', '$LN43']
dd ['offset', '$LN36_0']
dd ['offset', '$LN35']
dd ['offset', '$LN34']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__SCSUFromUnicodeWithOffsets proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1C0]']
mov ['ecx,', '70h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+48h]']
mov ['[ebp+var_59],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+49h]']
mov ['[ebp+var_65],', 'cl']
movzx ['eax,', '[ebp+var_65]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_80],', 'ecx']
mov ['eax,', '[ebp+var_80]']
neg ['eax']
sbb ['eax,', 'eax']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_A4],', '0']
movsx ['eax,', '[ebp+var_59]']
test ['eax,', 'eax']
jz ['loc_1EBB']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_1848']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_1848']
jmp ['$getTrailSingle$9076']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_1EB6']
cmp ['[ebp+var_44],', '0']
jg ['short', 'loc_1868']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_1EB6']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '20h']
cmp ['eax,', '5Fh']
ja ['short', 'loc_18CD']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_18BF']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_1E9E']
cmp ['[ebp+var_80],', '20h']
jnb ['short', 'loc_1939']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_80]']
shl ['eax,', 'cl']
and ['eax,', '2601h']
jz ['short', 'loc_191A']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_190F']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_1934']
mov ['eax,', '[ebp+var_80]']
or ['eax,', '100h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['loc_1E9E']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '[ebp+var_74]']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_8C],', '7Fh']
ja ['short', 'loc_198F']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '80h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_1981']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_1E9E']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['loc_1C0E']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '400h']
jnz ['short', 'loc_1A27']
mov ['ax,', 'word', 'ptr', '[ebp+var_80]']
mov ['[ebp+var_C8],', 'ax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_1A20']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[eax]']
mov ['[ebp+var_D4],', 'cx']
movzx ['eax,', '[ebp+var_D4]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_1A10']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_80]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_D4]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_80],', 'edx']
jmp ['short', 'loc_1A1E']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['$endloop$9107']
jmp ['short', 'loc_1A25']
jmp ['loc_1EB6']
jmp ['short', 'loc_1A35']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['$endloop$9107']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '[ebp+var_74]']
mov ['[ebp+var_8C],', 'eax']
cmp ['[ebp+var_8C],', '7Fh']
ja ['short', 'loc_1A8B']
mov ['eax,', '[ebp+var_8C]']
or ['eax,', '80h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_1A7D']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_1C09']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
push ['ecx']
call ['_getWindow']
add ['esp,', '8']
mov ['[ebp+var_E9],', 'al']
movsx ['edx,', '[ebp+var_E9]']
test ['edx,', 'edx']
jl ['short', 'loc_1B05']
mov ['al,', '[ebp+var_E9]']
mov ['[ebp+var_65],', 'al']
movzx ['eax,', '[ebp+var_65]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_74],', 'edx']
movzx ['eax,', '[ebp+var_65]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_65]']
add ['eax,', '10h']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_80]']
sub ['ecx,', '[ebp+var_74]']
or ['eax,', 'ecx']
or ['eax,', '80h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['loc_1C09']
lea ['eax,', '[ebp+var_BC]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['_getDynamicOffset']
add ['esp,', '8']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jl ['loc_1BAE']
mov ['eax,', '[ebp+var_E0]']
sub ['eax,', '200h']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_getNextDynamicWindow']
add ['esp,', '4']
mov ['[ebp+var_65],', 'al']
movzx ['eax,', '[ebp+var_65]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_BC]']
mov ['[ecx+eax*4+20h],', 'edx']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_74],', 'eax']
movzx ['eax,', '[ebp+var_65]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_65]']
shl ['eax,', '15h']
or ['eax,', '0B000000h']
mov ['ecx,', '[ebp+var_E0]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_80]']
sub ['edx,', '[ebp+var_74]']
or ['eax,', 'edx']
or ['eax,', '80h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '4']
jmp ['$outputBytes$9092']
jmp ['short', 'loc_1C09']
mov ['[ebp+var_59],', '0']
mov ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '0Fh']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_1BDB']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
movzx ['eax,', '[ebp+var_C8]']
shl ['eax,', '10h']
movzx ['ecx,', '[ebp+var_D4]']
or ['eax,', 'ecx']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '4']
jmp ['$outputBytes$9092']
jmp ['loc_1E9E']
cmp ['[ebp+var_80],', '0A0h']
jnb ['short', 'loc_1C39']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '7Fh']
or ['eax,', '200h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['loc_1E9E']
cmp ['[ebp+var_80],', '0FEFFh']
jz ['short', 'loc_1C4B']
cmp ['[ebp+var_80],', '0FFF0h']
jb ['short', 'loc_1C6A']
mov ['eax,', '[ebp+var_80]']
or ['eax,', '0E0000h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '3']
jmp ['$outputBytes$9092']
jmp ['loc_1E9E']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
push ['ecx']
call ['_getWindow']
add ['esp,', '8']
mov ['[ebp+var_E9],', 'al']
movsx ['edx,', '[ebp+var_E9]']
test ['edx,', 'edx']
jl ['loc_1D4E']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_1CBF']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
movsx ['edx,', '[ebp+var_E9]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+edx*4+20h]']
push ['ecx']
call ['_isInOffsetWindowOrDirect']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1D12']
mov ['al,', '[ebp+var_E9]']
mov ['[ebp+var_65],', 'al']
movzx ['eax,', '[ebp+var_65]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_74],', 'edx']
movzx ['eax,', '[ebp+var_65]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_65]']
add ['eax,', '10h']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_80]']
sub ['ecx,', '[ebp+var_74]']
or ['eax,', 'ecx']
or ['eax,', '80h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['short', 'loc_1D49']
movsx ['eax,', '[ebp+var_E9]']
add ['eax,', '1']
shl ['eax,', '8']
movsx ['ecx,', '[ebp+var_E9]']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', '[ebp+var_80]']
sub ['esi,', '[edx+ecx*4+20h]']
or ['eax,', 'esi']
or ['eax,', '80h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['loc_1E9E']
mov ['eax,', '[ebp+var_80]']
push ['eax']
push ['offset', '_staticOffsets']
call ['_getWindow']
add ['esp,', '8']
mov ['[ebp+var_E9],', 'al']
movsx ['ecx,', '[ebp+var_E9]']
test ['ecx,', 'ecx']
jl ['short', 'loc_1DA7']
movsx ['eax,', '[ebp+var_E9]']
add ['eax,', '1']
shl ['eax,', '8']
movsx ['ecx,', '[ebp+var_E9]']
mov ['edx,', '[ebp+var_80]']
sub ['edx,', '_staticOffsets[ecx*4]']
or ['eax,', 'edx']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['loc_1E9E']
lea ['eax,', '[ebp+var_BC]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['_getDynamicOffset']
add ['esp,', '8']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jl ['short', 'loc_1E39']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_getNextDynamicWindow']
add ['esp,', '4']
mov ['[ebp+var_65],', 'al']
movzx ['eax,', '[ebp+var_65]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_BC]']
mov ['[ecx+eax*4+20h],', 'edx']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_74],', 'eax']
movzx ['eax,', '[ebp+var_65]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_65]']
add ['eax,', '18h']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+var_E0]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_80]']
sub ['edx,', '[ebp+var_74]']
or ['eax,', 'edx']
or ['eax,', '80h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '3']
jmp ['$outputBytes$9092']
jmp ['short', 'loc_1E9E']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '3400h']
cmp ['eax,', '0A400h']
jnb ['short', 'loc_1E84']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_1E64']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '3400h']
cmp ['ecx,', '0A400h']
jnb ['short', 'loc_1E84']
mov ['[ebp+var_59],', '0']
mov ['eax,', '[ebp+var_80]']
or ['eax,', '0F0000h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '3']
jmp ['$outputBytes$9092']
jmp ['short', 'loc_1E9E']
mov ['eax,', '[ebp+var_80]']
or ['eax,', '0E0000h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '3']
jmp ['$outputBytes$9092']
mov ['[ebp+var_80],', '0']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
jmp ['loc_1848']
jmp ['$endloop$9107']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_1ECC']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_1ECC']
jmp ['$getTrailUnicode$9154']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['$endloop$9107']
cmp ['[ebp+var_44],', '0']
jg ['short', 'loc_1EEC']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$endloop$9107']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '3400h']
cmp ['eax,', '0A400h']
jnb ['short', 'loc_1F94']
cmp ['[ebp+var_44],', '2']
jl ['short', 'loc_1F80']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_1F75']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_1F8F']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['loc_2384']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '3400h']
cmp ['eax,', '0BF00h']
jb ['loc_213F']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_1FC7']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '3400h']
cmp ['ecx,', '0A400h']
jb ['loc_212B']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '30h']
cmp ['eax,', '0Ah']
jb ['short', 'loc_1FE8']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '61h']
cmp ['eax,', '1Ah']
jb ['short', 'loc_1FE8']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '41h']
cmp ['eax,', '1Ah']
jnb ['short', 'loc_2015']
mov ['[ebp+var_59],', '1']
movzx ['eax,', '[ebp+var_65]']
add ['eax,', '0E0h']
shl ['eax,', '8']
or ['eax,', '[ebp+var_80]']
or ['eax,', '[ebp+var_80]']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['loc_212B']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
push ['ecx']
call ['_getWindow']
add ['esp,', '8']
mov ['[ebp+var_E9],', 'al']
movsx ['edx,', '[ebp+var_E9]']
test ['edx,', 'edx']
jl ['short', 'loc_2095']
mov ['[ebp+var_59],', '1']
mov ['al,', '[ebp+var_E9]']
mov ['[ebp+var_65],', 'al']
movzx ['eax,', '[ebp+var_65]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_74],', 'edx']
movzx ['eax,', '[ebp+var_65]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_65]']
add ['eax,', '0E0h']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_80]']
sub ['ecx,', '[ebp+var_74]']
or ['eax,', 'ecx']
or ['eax,', '80h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['loc_212B']
lea ['eax,', '[ebp+var_BC]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['_getDynamicOffset']
add ['esp,', '8']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jl ['short', 'loc_212B']
mov ['[ebp+var_59],', '1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_getNextDynamicWindow']
add ['esp,', '4']
mov ['[ebp+var_65],', 'al']
movzx ['eax,', '[ebp+var_65]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_BC]']
mov ['[ecx+eax*4+20h],', 'edx']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_74],', 'eax']
movzx ['eax,', '[ebp+var_65]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_65]']
add ['eax,', '0E8h']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+var_E0]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_80]']
sub ['edx,', '[ebp+var_74]']
or ['eax,', 'edx']
or ['eax,', '80h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '3']
jmp ['$outputBytes$9092']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['loc_2384']
cmp ['[ebp+var_80],', '0E000h']
jnb ['loc_236D']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '400h']
jnz ['short', 'loc_21D1']
mov ['ax,', 'word', 'ptr', '[ebp+var_80]']
mov ['[ebp+var_C8],', 'ax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_21CA']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[eax]']
mov ['[ebp+var_D4],', 'cx']
movzx ['eax,', '[ebp+var_D4]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_21BA']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_80]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_D4]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_80],', 'edx']
jmp ['short', 'loc_21C8']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['$endloop$9107']
jmp ['short', 'loc_21CF']
jmp ['$endloop$9107']
jmp ['short', 'loc_21DF']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['$endloop$9107']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
push ['ecx']
call ['_getWindow']
add ['esp,', '8']
mov ['[ebp+var_E9],', 'al']
movsx ['edx,', '[ebp+var_E9]']
test ['edx,', 'edx']
jl ['short', 'loc_227B']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_221F']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '3400h']
cmp ['ecx,', '0A400h']
jb ['short', 'loc_227B']
mov ['[ebp+var_59],', '1']
mov ['al,', '[ebp+var_E9]']
mov ['[ebp+var_65],', 'al']
movzx ['eax,', '[ebp+var_65]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_74],', 'edx']
movzx ['eax,', '[ebp+var_65]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_65]']
add ['eax,', '0E0h']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_80]']
sub ['ecx,', '[ebp+var_74]']
or ['eax,', 'ecx']
or ['eax,', '80h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '2']
jmp ['$outputBytes$9092']
jmp ['loc_236B']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_2349']
movzx ['eax,', '[ebp+var_C8]']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jnz ['loc_2349']
lea ['eax,', '[ebp+var_BC]']
push ['eax']
mov ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['_getDynamicOffset']
add ['esp,', '8']
mov ['[ebp+var_E0],', 'eax']
cmp ['[ebp+var_E0],', '0']
jl ['loc_2349']
mov ['[ebp+var_59],', '1']
mov ['eax,', '[ebp+var_E0]']
sub ['eax,', '200h']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_getNextDynamicWindow']
add ['esp,', '4']
mov ['[ebp+var_65],', 'al']
movzx ['eax,', '[ebp+var_65]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_BC]']
mov ['[ecx+eax*4+20h],', 'edx']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_74],', 'eax']
movzx ['eax,', '[ebp+var_65]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_65]']
shl ['eax,', '15h']
or ['eax,', '0F1000000h']
mov ['ecx,', '[ebp+var_E0]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_80]']
sub ['edx,', '[ebp+var_74]']
or ['eax,', 'edx']
or ['eax,', '80h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '4']
jmp ['$outputBytes$9092']
jmp ['short', 'loc_236B']
movzx ['eax,', '[ebp+var_C8]']
shl ['eax,', '10h']
movzx ['ecx,', '[ebp+var_D4]']
or ['eax,', 'ecx']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '4']
jmp ['short', '$outputBytes$9092']
jmp ['short', 'loc_2384']
mov ['eax,', '[ebp+var_80]']
or ['eax,', '0F00000h']
mov ['[ebp+var_80],', 'eax']
mov ['[ebp+var_B0],', '3']
jmp ['short', '$outputBytes$9092']
mov ['[ebp+var_80],', '0']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
jmp ['loc_1ECC']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_59]']
mov ['[eax+48h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_65]']
mov ['[eax+49h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_80]']
mov ['[eax+38h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax+18h],', 'ecx']
jmp ['loc_2705']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_44]']
jg ['loc_256E']
cmp ['[ebp+var_50],', '0']
jnz ['loc_2473']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_1C0],', 'eax']
mov ['ecx,', '[ebp+var_1C0]']
sub ['ecx,', '1']
mov ['[ebp+var_1C0],', 'ecx']
cmp ['[ebp+var_1C0],', '3']
ja ['short', 'loc_246E']
mov ['edx,', '[ebp+var_1C0]']
jmp ['ds:$LN122[edx*4]']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
jmp ['loc_2545']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_1C0],', 'eax']
mov ['ecx,', '[ebp+var_1C0]']
sub ['ecx,', '1']
mov ['[ebp+var_1C0],', 'ecx']
cmp ['[ebp+var_1C0],', '3']
ja ['loc_2545']
mov ['edx,', '[ebp+var_1C0]']
jmp ['ds:$LN123[edx*4]']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_80],', '0']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
jmp ['$loop$9073']
jmp ['loc_2705']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '[ebp+var_44]']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4Ch']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_1C0],', 'eax']
mov ['ecx,', '[ebp+var_1C0]']
sub ['ecx,', '1']
mov ['[ebp+var_1C0],', 'ecx']
cmp ['[ebp+var_1C0],', '3']
ja ['short', 'loc_261C']
mov ['edx,', '[ebp+var_1C0]']
jmp ['ds:$LN124[edx*4]']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_F8]']
add ['edx,', '1']
mov ['[ebp+var_F8],', 'edx']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_F8]']
add ['edx,', '1']
mov ['[ebp+var_F8],', 'edx']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_F8]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_F8]']
add ['edx,', '1']
mov ['[ebp+var_F8],', 'edx']
mov ['eax,', '[ebp+var_F8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax+3Fh],', 'cl']
mov ['ecx,', '[ebp+var_B0]']
shl ['ecx,', '3']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', 'cl']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_1C0],', 'eax']
cmp ['[ebp+var_1C0],', '1']
jz ['short', 'loc_26BE']
cmp ['[ebp+var_1C0],', '2']
jz ['short', 'loc_2690']
cmp ['[ebp+var_1C0],', '3']
jz ['short', 'loc_2662']
jmp ['loc_26E9']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_2690']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_80]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_26BE']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_80]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_26E9']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_98]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '4']
mov ['[ebp+var_50],', 'edx']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['[ebp+var_80],', '0']
jmp ['$endloop$9107']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN121']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN120']
dd ['offset', '$LN119']
align ['4']
dd ['offset', '$LN28']
dd ['offset', '$LN29']
dd ['offset', '$LN30']
dd ['offset', '$LN20']
dd ['offset', '$LN21']
dd ['offset', '$LN22']
dd ['offset', '$LN12']
dd ['offset', '$LN13']
dd ['offset', '$LN14']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_getWindow	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_27A8']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '8']
jge ['short', 'loc_27C6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ecx+eax*4]']
cmp ['edx,', '7Fh']
ja ['short', 'loc_27C4']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
jmp ['short', 'loc_27C8']
jmp ['short', 'loc_279F']
or ['al,', '0FFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_isInOffsetWindowOrDirect proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '7Fh']
cmp ['[ebp+arg_4],', 'eax']
ja ['short', 'loc_2828']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_281F']
cmp ['[ebp+arg_4],', '7Fh']
ja ['short', 'loc_2828']
cmp ['[ebp+arg_4],', '20h']
jnb ['short', 'loc_281F']
mov ['edx,', '1']
mov ['ecx,', '[ebp+arg_4]']
shl ['edx,', 'cl']
and ['edx,', '2601h']
jz ['short', 'loc_2828']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_282F']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_getNextDynamicWindow proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4Bh]']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[edx+ecx+4Ch]']
mov ['[ebp+var_5],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+4Bh]']
add ['cl,', '1']
mov ['[ebp+var_CD],', 'cl']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[ebp+var_CD]']
mov ['[edx+4Bh],', 'al']
movsx ['ecx,', '[ebp+var_CD]']
cmp ['ecx,', '8']
jnz ['short', 'loc_2899']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+4Bh],', '0']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_useDynamicWindow proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4Bh]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jns ['short', 'loc_28DE']
mov ['[ebp+var_8],', '7']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4Ch]']
movsx ['edx,', '[ebp+arg_4]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_28CC']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '8']
jnz ['short', 'loc_2906']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4Bh]']
cmp ['[ebp+var_14],', 'ecx']
jz ['short', 'loc_2942']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_14]']
mov ['dl,', '[ecx+4Ch]']
mov ['[eax+4Ch],', 'dl']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '8']
jnz ['short', 'loc_2940']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2906']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax+4Ch],', 'cl']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_getDynamicOffset proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2988']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '7']
jge ['short', 'loc_29BE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '_fixedOffsets[eax*4]']
cmp ['ecx,', '7Fh']
ja ['short', 'loc_29BC']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '_fixedOffsets[ecx*4]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0F9h']
jmp ['loc_2A46']
jmp ['short', 'loc_297F']
cmp ['[ebp+arg_0],', '80h']
jnb ['short', 'loc_29CE']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_2A46']
jmp ['short', 'loc_2A46']
cmp ['[ebp+arg_0],', '3400h']
jb ['short', 'loc_29F5']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '10000h']
cmp ['eax,', '4000h']
jb ['short', 'loc_29F5']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '1D000h']
cmp ['eax,', '2FFFh']
ja ['short', 'loc_2A0C']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '7FFFFF80h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
shr ['eax,', '7']
jmp ['short', 'loc_2A46']
jmp ['short', 'loc_2A46']
cmp ['[ebp+arg_0],', '0E000h']
jb ['short', 'loc_2A43']
cmp ['[ebp+arg_0],', '0FEFFh']
jz ['short', 'loc_2A43']
cmp ['[ebp+arg_0],', '0FFF0h']
jnb ['short', 'loc_2A43']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '7FFFFF80h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', '0AC00h']
shr ['eax,', '7']
jmp ['short', 'loc_2A46']
jmp ['short', 'loc_2A46']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__SCSUFromUnicode proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '19Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_19C]']
mov ['ecx,', '67h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+10h]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+48h]']
mov ['[ebp+var_4D],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[eax+49h]']
mov ['[ebp+var_59],', 'cl']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_74],', 'ecx']
movsx ['eax,', '[ebp+var_4D]']
test ['eax,', 'eax']
jz ['loc_30A5']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_2AF0']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_2AF0']
jmp ['$getTrailSingle$9303']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_30A0']
cmp ['[ebp+var_44],', '0']
jg ['short', 'loc_2B10']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['loc_30A0']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '20h']
cmp ['eax,', '5Fh']
ja ['short', 'loc_2B4C']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_3094']
cmp ['[ebp+var_74],', '20h']
jnb ['short', 'loc_2B9E']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_74]']
shl ['eax,', 'cl']
and ['eax,', '2601h']
jz ['short', 'loc_2B7F']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_2B99']
mov ['eax,', '[ebp+var_74]']
or ['eax,', '100h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['loc_3094']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '[ebp+var_68]']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '7Fh']
ja ['short', 'loc_2BD1']
mov ['eax,', '[ebp+var_80]']
or ['eax,', '80h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_3094']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['loc_2E04']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '400h']
jnz ['short', 'loc_2C5A']
mov ['ax,', 'word', 'ptr', '[ebp+var_74]']
mov ['[ebp+var_A4],', 'ax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_2C53']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['eax,', '[ebp+var_B0]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_2C43']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_74]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_B0]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_74],', 'edx']
jmp ['short', 'loc_2C51']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['$endloop$9328']
jmp ['short', 'loc_2C58']
jmp ['loc_30A0']
jmp ['short', 'loc_2C68']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['$endloop$9328']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '[ebp+var_68]']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '7Fh']
ja ['short', 'loc_2C9B']
mov ['eax,', '[ebp+var_80]']
or ['eax,', '80h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['loc_2DFF']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
push ['ecx']
call ['_getWindow']
add ['esp,', '8']
mov ['[ebp+var_C5],', 'al']
movsx ['edx,', '[ebp+var_C5]']
test ['edx,', 'edx']
jl ['short', 'loc_2D15']
mov ['al,', '[ebp+var_C5]']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_68],', 'edx']
movzx ['eax,', '[ebp+var_59]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_59]']
add ['eax,', '10h']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_74]']
sub ['ecx,', '[ebp+var_68]']
or ['eax,', 'ecx']
or ['eax,', '80h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['loc_2DFF']
lea ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['_getDynamicOffset']
add ['esp,', '8']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jl ['loc_2DBE']
mov ['eax,', '[ebp+var_BC]']
sub ['eax,', '200h']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_getNextDynamicWindow']
add ['esp,', '4']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_98]']
mov ['[ecx+eax*4+20h],', 'edx']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_68],', 'eax']
movzx ['eax,', '[ebp+var_59]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_59]']
shl ['eax,', '15h']
or ['eax,', '0B000000h']
mov ['ecx,', '[ebp+var_BC]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
sub ['edx,', '[ebp+var_68]']
or ['eax,', 'edx']
or ['eax,', '80h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '4']
jmp ['$outputBytes$9315']
jmp ['short', 'loc_2DFF']
mov ['[ebp+var_4D],', '0']
mov ['eax,', '[ebp+var_38]']
mov ['byte', 'ptr', '[eax],', '0Fh']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
movzx ['eax,', '[ebp+var_A4]']
shl ['eax,', '10h']
movzx ['ecx,', '[ebp+var_B0]']
or ['eax,', 'ecx']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '4']
jmp ['$outputBytes$9315']
jmp ['loc_3094']
cmp ['[ebp+var_74],', '0A0h']
jnb ['short', 'loc_2E2F']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '7Fh']
or ['eax,', '200h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['loc_3094']
cmp ['[ebp+var_74],', '0FEFFh']
jz ['short', 'loc_2E41']
cmp ['[ebp+var_74],', '0FFF0h']
jb ['short', 'loc_2E60']
mov ['eax,', '[ebp+var_74]']
or ['eax,', '0E0000h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '3']
jmp ['$outputBytes$9315']
jmp ['loc_3094']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
push ['ecx']
call ['_getWindow']
add ['esp,', '8']
mov ['[ebp+var_C5],', 'al']
movsx ['edx,', '[ebp+var_C5]']
test ['edx,', 'edx']
jl ['loc_2F44']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_2EB5']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
movsx ['edx,', '[ebp+var_C5]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+edx*4+20h]']
push ['ecx']
call ['_isInOffsetWindowOrDirect']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2F08']
mov ['al,', '[ebp+var_C5]']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_68],', 'edx']
movzx ['eax,', '[ebp+var_59]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_59]']
add ['eax,', '10h']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_74]']
sub ['ecx,', '[ebp+var_68]']
or ['eax,', 'ecx']
or ['eax,', '80h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['short', 'loc_2F3F']
movsx ['eax,', '[ebp+var_C5]']
add ['eax,', '1']
shl ['eax,', '8']
movsx ['ecx,', '[ebp+var_C5]']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', '[ebp+var_74]']
sub ['esi,', '[edx+ecx*4+20h]']
or ['eax,', 'esi']
or ['eax,', '80h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['loc_3094']
mov ['eax,', '[ebp+var_74]']
push ['eax']
push ['offset', '_staticOffsets']
call ['_getWindow']
add ['esp,', '8']
mov ['[ebp+var_C5],', 'al']
movsx ['ecx,', '[ebp+var_C5]']
test ['ecx,', 'ecx']
jl ['short', 'loc_2F9D']
movsx ['eax,', '[ebp+var_C5]']
add ['eax,', '1']
shl ['eax,', '8']
movsx ['ecx,', '[ebp+var_C5]']
mov ['edx,', '[ebp+var_74]']
sub ['edx,', '_staticOffsets[ecx*4]']
or ['eax,', 'edx']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['loc_3094']
lea ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['_getDynamicOffset']
add ['esp,', '8']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jl ['short', 'loc_302F']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_getNextDynamicWindow']
add ['esp,', '4']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_98]']
mov ['[ecx+eax*4+20h],', 'edx']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_68],', 'eax']
movzx ['eax,', '[ebp+var_59]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_59]']
add ['eax,', '18h']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+var_BC]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
sub ['edx,', '[ebp+var_68]']
or ['eax,', 'edx']
or ['eax,', '80h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '3']
jmp ['$outputBytes$9315']
jmp ['short', 'loc_3094']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '3400h']
cmp ['eax,', '0A400h']
jnb ['short', 'loc_307A']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_305A']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '3400h']
cmp ['ecx,', '0A400h']
jnb ['short', 'loc_307A']
mov ['[ebp+var_4D],', '0']
mov ['eax,', '[ebp+var_74]']
or ['eax,', '0F0000h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '3']
jmp ['$outputBytes$9315']
jmp ['short', 'loc_3094']
mov ['eax,', '[ebp+var_74]']
or ['eax,', '0E0000h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '3']
jmp ['$outputBytes$9315']
mov ['[ebp+var_74],', '0']
jmp ['loc_2AF0']
jmp ['$endloop$9328']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_30B6']
cmp ['[ebp+var_44],', '0']
jle ['short', 'loc_30B6']
jmp ['$getTrailUnicode$9371']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['$endloop$9328']
cmp ['[ebp+var_44],', '0']
jg ['short', 'loc_30D6']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
jmp ['$endloop$9328']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '2']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '3400h']
cmp ['eax,', '0A400h']
jnb ['short', 'loc_3141']
cmp ['[ebp+var_44],', '2']
jl ['short', 'loc_312D']
mov ['eax,', '[ebp+var_74]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '2']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_313C']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['loc_351F']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '3400h']
cmp ['eax,', '0BF00h']
jb ['loc_32EC']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_3174']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '3400h']
cmp ['ecx,', '0A400h']
jb ['loc_32D8']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '30h']
cmp ['eax,', '0Ah']
jb ['short', 'loc_3195']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '61h']
cmp ['eax,', '1Ah']
jb ['short', 'loc_3195']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '41h']
cmp ['eax,', '1Ah']
jnb ['short', 'loc_31C2']
mov ['[ebp+var_4D],', '1']
movzx ['eax,', '[ebp+var_59]']
add ['eax,', '0E0h']
shl ['eax,', '8']
or ['eax,', '[ebp+var_74]']
or ['eax,', '[ebp+var_74]']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['loc_32D8']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
push ['ecx']
call ['_getWindow']
add ['esp,', '8']
mov ['[ebp+var_C5],', 'al']
movsx ['edx,', '[ebp+var_C5]']
test ['edx,', 'edx']
jl ['short', 'loc_3242']
mov ['[ebp+var_4D],', '1']
mov ['al,', '[ebp+var_C5]']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_68],', 'edx']
movzx ['eax,', '[ebp+var_59]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_59]']
add ['eax,', '0E0h']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_74]']
sub ['ecx,', '[ebp+var_68]']
or ['eax,', 'ecx']
or ['eax,', '80h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['loc_32D8']
lea ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['_getDynamicOffset']
add ['esp,', '8']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jl ['short', 'loc_32D8']
mov ['[ebp+var_4D],', '1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_getNextDynamicWindow']
add ['esp,', '4']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_98]']
mov ['[ecx+eax*4+20h],', 'edx']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_68],', 'eax']
movzx ['eax,', '[ebp+var_59]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_59]']
add ['eax,', '0E8h']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+var_BC]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
sub ['edx,', '[ebp+var_68]']
or ['eax,', 'edx']
or ['eax,', '80h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '3']
jmp ['$outputBytes$9315']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['loc_351F']
cmp ['[ebp+var_74],', '0E000h']
jnb ['loc_3508']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '400h']
jnz ['short', 'loc_336F']
mov ['ax,', 'word', 'ptr', '[ebp+var_74]']
mov ['[ebp+var_A4],', 'ax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_3368']
mov ['eax,', '[ebp+var_20]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
movzx ['eax,', '[ebp+var_B0]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_3358']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_74]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_B0]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_74],', 'edx']
jmp ['short', 'loc_3366']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['$endloop$9328']
jmp ['short', 'loc_336D']
jmp ['$endloop$9328']
jmp ['short', 'loc_337D']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Ch']
jmp ['$endloop$9328']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
push ['ecx']
call ['_getWindow']
add ['esp,', '8']
mov ['[ebp+var_C5],', 'al']
movsx ['edx,', '[ebp+var_C5]']
test ['edx,', 'edx']
jl ['short', 'loc_3419']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['short', 'loc_33BD']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '3400h']
cmp ['ecx,', '0A400h']
jb ['short', 'loc_3419']
mov ['[ebp+var_4D],', '1']
mov ['al,', '[ebp+var_C5]']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax*4+20h]']
mov ['[ebp+var_68],', 'edx']
movzx ['eax,', '[ebp+var_59]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_59]']
add ['eax,', '0E0h']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_74]']
sub ['ecx,', '[ebp+var_68]']
or ['eax,', 'ecx']
or ['eax,', '80h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '2']
jmp ['$outputBytes$9315']
jmp ['loc_3506']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jnb ['loc_34E4']
movzx ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jnz ['loc_34E4']
lea ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
push ['ecx']
call ['_getDynamicOffset']
add ['esp,', '8']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jl ['loc_34E4']
mov ['[ebp+var_4D],', '1']
mov ['eax,', '[ebp+var_BC]']
sub ['eax,', '200h']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_getNextDynamicWindow']
add ['esp,', '4']
mov ['[ebp+var_59],', 'al']
movzx ['eax,', '[ebp+var_59]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_98]']
mov ['[ecx+eax*4+20h],', 'edx']
mov ['eax,', '[ebp+var_98]']
mov ['[ebp+var_68],', 'eax']
movzx ['eax,', '[ebp+var_59]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_useDynamicWindow']
add ['esp,', '8']
movzx ['eax,', '[ebp+var_59]']
shl ['eax,', '15h']
or ['eax,', '0F1000000h']
mov ['ecx,', '[ebp+var_BC]']
shl ['ecx,', '8']
or ['eax,', 'ecx']
mov ['edx,', '[ebp+var_74]']
sub ['edx,', '[ebp+var_68]']
or ['eax,', 'edx']
or ['eax,', '80h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '4']
jmp ['short', '$outputBytes$9315']
jmp ['short', 'loc_3506']
movzx ['eax,', '[ebp+var_A4]']
shl ['eax,', '10h']
movzx ['ecx,', '[ebp+var_B0]']
or ['eax,', 'ecx']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '4']
jmp ['short', '$outputBytes$9315']
jmp ['short', 'loc_351F']
mov ['eax,', '[ebp+var_74]']
or ['eax,', '0F00000h']
mov ['[ebp+var_74],', 'eax']
mov ['[ebp+var_8C],', '3']
jmp ['short', '$outputBytes$9315']
mov ['[ebp+var_74],', '0']
jmp ['loc_30B6']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_4D]']
mov ['[eax+48h],', 'cl']
mov ['eax,', '[ebp+var_14]']
mov ['cl,', '[ebp+var_59]']
mov ['[eax+49h],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_74]']
mov ['[eax+38h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+10h],', 'ecx']
jmp ['loc_374D']
mov ['eax,', '[ebp+var_8C]']
cmp ['eax,', '[ebp+var_44]']
jg ['loc_3607']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_19C],', 'eax']
mov ['ecx,', '[ebp+var_19C]']
sub ['ecx,', '1']
mov ['[ebp+var_19C],', 'ecx']
cmp ['[ebp+var_19C],', '3']
ja ['short', 'loc_35EA']
mov ['edx,', '[ebp+var_19C]']
jmp ['ds:$LN104[edx*4]']
mov ['eax,', '[ebp+var_74]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_74]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_74]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_74],', '0']
jmp ['$loop$9300']
jmp ['loc_374D']
mov ['eax,', '[ebp+var_8C]']
sub ['eax,', '[ebp+var_44]']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4Ch']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_19C],', 'eax']
mov ['ecx,', '[ebp+var_19C]']
sub ['ecx,', '1']
mov ['[ebp+var_19C],', 'ecx']
cmp ['[ebp+var_19C],', '3']
ja ['short', 'loc_36B5']
mov ['edx,', '[ebp+var_19C]']
jmp ['ds:$LN105[edx*4]']
mov ['eax,', '[ebp+var_74]']
shr ['eax,', '18h']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_D4]']
add ['edx,', '1']
mov ['[ebp+var_D4],', 'edx']
mov ['eax,', '[ebp+var_74]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_D4]']
add ['edx,', '1']
mov ['[ebp+var_D4],', 'edx']
mov ['eax,', '[ebp+var_74]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_D4]']
add ['edx,', '1']
mov ['[ebp+var_D4],', 'edx']
mov ['eax,', '[ebp+var_D4]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8C]']
mov ['[eax+3Fh],', 'cl']
mov ['ecx,', '[ebp+var_8C]']
shl ['ecx,', '3']
mov ['eax,', '[ebp+var_74]']
shr ['eax,', 'cl']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_19C],', 'eax']
cmp ['[ebp+var_19C],', '1']
jz ['short', 'loc_3720']
cmp ['[ebp+var_19C],', '2']
jz ['short', 'loc_370C']
cmp ['[ebp+var_19C],', '3']
jz ['short', 'loc_36F8']
jmp ['short', 'loc_3731']
mov ['eax,', '[ebp+var_74]']
shr ['eax,', '10h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_74]']
shr ['eax,', '8']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_74]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['[ebp+var_74],', '0']
jmp ['$endloop$9328']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN103']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '19Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN102']
dd ['offset', '$LN101']
align ['10h']
dd ['offset', '$LN17']
dd ['offset', '$LN18']
dd ['offset', '$LN19_0']
dd ['offset', '$LN9']
dd ['offset', '$LN10']
dd ['offset', '$LN11_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__SCSUGetName	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+4Ah]']
mov ['[ebp+var_D0],', 'cl']
cmp ['[ebp+var_D0],', '1']
jz ['short', 'loc_37EE']
jmp ['short', 'loc_37F5']
mov ['eax,', 'offset', '??_C@_0P@DIKJICDI@SCSU?0locale?$DNja?$AA@']
jmp ['short', 'loc_37FA']
mov ['eax,', 'offset', '??_C@_04GGPJHDNC@SCSU?$AA@']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_04GGPJHDNC@SCSU?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0P@DIKJICDI@SCSU?0locale?$DNja?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
__SCSUSafeClone	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '158h']
mov ['eax,', '[ebp+arg_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_384D']
xor ['eax,', 'eax']
jmp ['short', 'loc_38AB']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_3861']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
xor ['eax,', 'eax']
jmp ['short', 'loc_38AB']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
push ['54h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '104h']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '104h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax+22h],', '1']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_ucnv_getCompleteUnicodeSet_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_uprv_malloc_56:near']
extrn ['_uprv_free_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
end

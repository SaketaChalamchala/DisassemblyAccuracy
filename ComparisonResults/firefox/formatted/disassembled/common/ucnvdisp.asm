endp
_ucnv_getDisplayName_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_2C],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_33']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_3A']
xor ['eax,', 'eax']
jmp ['loc_14B']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_52']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_52']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_62']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_62']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_14B']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
call ['_ures_open_56']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_86']
xor ['eax,', 'eax']
jmp ['loc_14B']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ures_getStringByKey_56']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ures_close_56']
add ['esp,', '4']
cmp ['[ebp+var_2C],', '0']
jg ['short', 'loc_F1']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_CC']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_uprv_min_56']
add ['esp,', '8']
shl ['eax,', '1']
push ['eax']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_memcpy_56']
add ['esp,', '0Ch']
jmp ['short', 'loc_133']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '4']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_uprv_min_56']
add ['esp,', '8']
push ['eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '4']
push ['edx']
call ['_u_charsToUChars_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN13']
dd ['offset', '$LN11']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN12']
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
extrn ['_u_terminateUChars_56:near']
extrn ['_u_charsToUChars_56:near']
extrn ['_strlen:near']
extrn ['_u_memcpy_56:near']
extrn ['_uprv_min_56:near']
extrn ['_ures_close_56:near']
extrn ['_ures_getStringByKey_56:near']
extrn ['_ures_open_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
end

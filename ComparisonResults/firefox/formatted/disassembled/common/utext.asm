endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??2UMemory@icu_56@@SAPAXIPAX@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3UMemory@icu_56@@SAXPAX0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UMemory@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UObject@icu_56@@6B@']
public ['??_7UObject@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
assume ['cs:_rdata$r']
public ['??_R4UObject@icu_56@@6B@']
dd ['offset', '??_R0?AVUObject@icu_56@@@8']
assume ['cs:_data']
public ['??_R0?AVUObject@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UObject@icu_56@@8']
dd ['2']
dd ['offset', '??_R2UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UObject@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R13?0A@EA@UMemory@icu_56@@8']
dd ['0']
dd ['4,', '0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUMemory@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UMemory@icu_56@@8']
dd ['1']
dd ['offset', '??_R2UMemory@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UMemory@icu_56@@8']
db ['0']
align ['10h']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UMemory@icu_56@@8']
dd ['2', 'dup(0)']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UMemory@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UObject@icu_56@@QAE@ABV01@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_503']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_50D']
mov ['[ebp+var_D0],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UObject@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UObject@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUObject@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_593']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUObject@icu_56@@UAEPAXI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_60D']
push ['offset', '??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_605']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_62C']
mov ['ecx,', '[ebp+var_8]']
call ['??1UObject@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_629']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4Replaceable@icu_56@@6B@']
public ['??_7Replaceable@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UObject@icu_56@@UBEPAXXZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
dd ['offset', '?hasMetaData@Replaceable@icu_56@@UBECXZ']
dd ['offset', '?clone@Replaceable@icu_56@@UBEPAV12@XZ']
dd ['offset', '__purecall']
dd ['offset', '__purecall']
assume ['cs:_rdata$r']
public ['??_R4Replaceable@icu_56@@6B@']
dd ['offset', '??_R0?AVReplaceable@icu_56@@@8']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVReplaceable@icu_56@@@8']
align ['10h']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3Replaceable@icu_56@@8']
dd ['3']
dd ['offset', '??_R2Replaceable@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['2,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3Replaceable@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4Replaceable@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??4UObject@icu_56@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7BF']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EReplaceable@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_839']
push ['offset', '??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_831']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_858']
mov ['ecx,', '[ebp+var_8]']
call ['??1Replaceable@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_855']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0Replaceable@icu_56@@IAE@XZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0UObject@icu_56@@QAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Replaceable@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@Replaceable@icu_56@@QBEHXZ proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@Replaceable@icu_56@@QBE_WH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+20h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?char32At@Replaceable@icu_56@@QBEHH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0StringPiece@icu_56@@QAE@PBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@StringPiece@icu_56@@QBEPBDXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@StringPiece@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@StringPiece@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?empty@StringPiece@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?clear@StringPiece@icu_56@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?set@StringPiece@icu_56@@QAEXPBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_prefix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_C29']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_C0D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove_suffix@StringPiece@icu_56@@QAEXH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_C83']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
jg ['short', 'loc_C79']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
sub ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_C83']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?substr@StringPiece@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4StringPiece@icu_56@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0ByteSink@icu_56@@QAE@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ByteSink@icu_56@@6B@']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4ByteSink@icu_56@@6B@']
public ['??_7ByteSink@icu_56@@6B@']
dd ['offset', '__purecall']
dd ['offset', '?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z']
dd ['offset', '?Flush@ByteSink@icu_56@@UAEXXZ']
assume ['cs:_rdata$r']
public ['??_R4ByteSink@icu_56@@6B@']
dd ['offset', '??_R0?AVByteSink@icu_56@@@8']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVByteSink@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3ByteSink@icu_56@@8']
dd ['2']
dd ['offset', '??_R2ByteSink@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2ByteSink@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@ByteSink@icu_56@@8']
dd ['1,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3ByteSink@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_E13']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EByteSink@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_E8D']
push ['offset', '??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_E85']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_EAC']
mov ['ecx,', '[ebp+var_8]']
call ['??1ByteSink@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_EA9']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesWritten@CheckedArrayByteSink@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?Overflowed@CheckedArrayByteSink@icu_56@@QBECXZ	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['al,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?NumberOfBytesAppended@CheckedArrayByteSink@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?swap@icu_56@@YAXAAVUnicodeString@1@0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_GUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_101B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??_EUnicodeString@icu_56@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '2']
jz ['short', 'loc_1095']
push ['offset', '??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax-4]']
push ['ecx']
push ['40h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_M@YGXPAXIHP6EX0@Z@Z']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_108D']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
push ['eax']
call ['??_VUMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
jmp ['short', 'loc_10B4']
mov ['ecx,', '[ebp+var_8]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_10B1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??3UMemory@icu_56@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_1102']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_111E']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx],', 'eax']
jle ['short', 'loc_111E']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_1175']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1187']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_14]']
jle ['short', 'loc_1187']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jge ['short', 'loc_119A']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_11B6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
cmp ['[edx],', 'ecx']
jle ['short', 'loc_11B6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@AAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1209']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_1215']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1261']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_126D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_D0],', 'ecx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??0UnicodeString@icu_56@@QAE@XZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['??0Replaceable@icu_56@@IAE@XZ']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7UnicodeString@icu_56@@6B@']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '??_R4UnicodeString@icu_56@@6B@']
public ['??_7UnicodeString@icu_56@@6B@']
dd ['offset', '?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ']
dd ['offset', '?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z']
dd ['offset', '?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z']
dd ['offset', '?copy@UnicodeString@icu_56@@UAEXHHH@Z']
dd ['offset', '?hasMetaData@UnicodeString@icu_56@@UBECXZ']
dd ['offset', '?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ']
dd ['offset', '?getLength@UnicodeString@icu_56@@MBEHXZ']
dd ['offset', '?getCharAt@UnicodeString@icu_56@@MBE_WH@Z']
dd ['offset', '?getChar32At@UnicodeString@icu_56@@MBEHH@Z']
assume ['cs:_rdata$r']
public ['??_R4UnicodeString@icu_56@@6B@']
dd ['offset', '??_R0?AVUnicodeString@icu_56@@@8']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_data']
public ['??_R0?AVUnicodeString@icu_56@@@8']
dd ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R3UnicodeString@icu_56@@8']
dd ['4']
dd ['offset', '??_R2UnicodeString@icu_56@@8']
assume ['cs:_rdata$r']
public ['??_R2UnicodeString@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@Replaceable@icu_56@@8']
dd ['offset', '??_R1A@?0A@EA@UObject@icu_56@@8']
dd ['offset', '??_R13?0A@EA@UMemory@icu_56@@8']
db ['0']
align ['4']
assume ['cs:_rdata$r']
public ['??_R1A@?0A@EA@UnicodeString@icu_56@@8']
dd ['3,', '0']
dd ['0FFFFFFFFh,', '0']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '??_R3UnicodeString@icu_56@@8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hasShortLength@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
setnl ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getShortLength@UnicodeString@icu_56@@ABEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
sar ['eax,', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?length@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?hasShortLength@UnicodeString@icu_56@@ABECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1426']
mov ['ecx,', '[ebp+var_8]']
call ['?getShortLength@UnicodeString@icu_56@@ABEHXZ']
mov ['[ebp+var_D0],', 'eax']
jmp ['short', 'loc_1432']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_D0],', 'edx']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCapacity@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_1487']
mov ['[ebp+var_D0],', '1Dh']
jmp ['short', 'loc_1493']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?hashCode@UnicodeString@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doHashCode@UnicodeString@icu_56@@ABEHXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBogus@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[eax+4]']
and ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isBufferWritable@UnicodeString@icu_56@@ABECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '19h']
jnz ['short', 'loc_159D']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx+4]']
and ['eax,', '4']
jz ['short', 'loc_1594']
mov ['ecx,', '[ebp+var_8]']
call ['?refCount@UnicodeString@icu_56@@ABEHXZ']
cmp ['eax,', '1']
jnz ['short', 'loc_159D']
mov ['[ebp+var_CD],', '1']
jmp ['short', 'loc_15A4']
mov ['[ebp+var_CD],', '0']
mov ['al,', '[ebp+var_CD]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '11h']
jz ['short', 'loc_15F5']
xor ['eax,', 'eax']
jmp ['short', 'loc_1611']
jmp ['short', 'loc_1611']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_160B']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '6']
jmp ['short', 'loc_1611']
jmp ['short', 'loc_1611']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_165E']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_168F']
jmp ['short', 'loc_168F']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??8UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_16E6']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
jmp ['short', 'loc_1740']
jmp ['short', 'loc_1740']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_1733']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_1733']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1733']
mov ['[ebp+var_E5],', '1']
jmp ['short', 'loc_173A']
mov ['[ebp+var_E5],', '0']
mov ['al,', '[ebp+var_E5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9UnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8UnicodeString@icu_56@@QBECABV01@@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??OUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??MUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??PUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '0FFFFFFFFh']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??NUnicodeString@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
cmp ['ecx,', '1']
setnz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECPB_WH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compare@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1BEA']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_1C1B']
jmp ['short', 'loc_1C1B']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrder@UnicodeString@icu_56@@QBECHHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareCodePointOrderBetween@UnicodeString@icu_56@@QBECHHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1EE6']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
jmp ['short', 'loc_1F1B']
jmp ['short', 'loc_1F1B']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECABV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@I@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECPB_WHI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompare@UnicodeString@icu_56@@QBECHHPB_WHHI@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?caseCompareBetween@UnicodeString@icu_56@@QBECHHABV12@HHI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doCaseCompare@UnicodeString@icu_56@@ABECHHABV12@HHI@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_2227']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_2227']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_222A']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_W@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?indexOf@UnicodeString@icu_56@@QBEHHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?indexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_274F']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_274F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z']
jmp ['short', 'loc_2752']
or ['eax,', '0FFFFFFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHABV12@HHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
movzx ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEH_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?lastIndexOf@UnicodeString@icu_56@@QBEHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?lastIndexOf@UnicodeString@icu_56@@QBEHHHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?compare@UnicodeString@icu_56@@QBECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2B8C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_2BFC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['esi,', 'eax']
push ['esi']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndices@UnicodeString@icu_56@@ABEXAAH0@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHABV12@HH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_2D5C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['eax,', 'al']
test ['eax,', 'eax']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endsWith@UnicodeString@icu_56@@QBECPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_2DDA']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WHH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replace@UnicodeString@icu_56@@QAEAAV12@HH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?replaceBetween@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@ABV12@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@0@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_C]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEXHHAAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHAAV12@@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extract@UnicodeString@icu_56@@QBEHHHPADPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
neg ['ecx']
sbb ['ecx,', 'ecx']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?extractBetween@UnicodeString@icu_56@@QBEXHHPA_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?tempSubStringBetween@UnicodeString@icu_56@@QBE?AV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_D4],', '0']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z']
mov ['eax,', '[ebp+var_D4]']
or ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?doCharAt@UnicodeString@icu_56@@ABE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_33CB']
mov ['ecx,', '[ebp+var_8]']
call ['?getArrayStart@UnicodeString@icu_56@@ABEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['ax,', '[eax+ecx*2]']
jmp ['short', 'loc_33D0']
jmp ['short', 'loc_33D0']
mov ['eax,', '0FFFFh']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charAt@UnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??AUnicodeString@icu_56@@QBE_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doCharAt@UnicodeString@icu_56@@ABE_WH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isEmpty@UnicodeString@icu_56@@QBECXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
sar ['ecx,', '5']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setZeroLength@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setShortLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
and ['ecx,', '1Fh']
mov ['edx,', '[ebp+arg_0]']
shl ['edx,', '5']
or ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+4],', 'cx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setLength@UnicodeString@icu_56@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '3FFh']
jg ['short', 'loc_3572']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setShortLength@UnicodeString@icu_56@@AAEXH@Z']
jmp ['short', 'loc_358F']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
or ['ecx,', '0FFE0h']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToEmpty@UnicodeString@icu_56@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+4],', 'ax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setArray@UnicodeString@icu_56@@AAEXPA_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+0Ch],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4UnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@H@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?pinIndex@UnicodeString@icu_56@@ABEXAAH@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WHH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?append@UnicodeString@icu_56@@QAEAAV12@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HPB_WH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['1']
push ['0']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?insert@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3DA4']
mov ['ecx,', '[ebp+var_8]']
call ['?setToEmpty@UnicodeString@icu_56@@AAEXXZ']
jmp ['short', 'loc_3DAC']
mov ['ecx,', '[ebp+var_8]']
call ['?setZeroLength@UnicodeString@icu_56@@AAEXXZ']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jg ['short', 'loc_3E00']
cmp ['[ebp+arg_4],', '7FFFFFFFh']
jnz ['short', 'loc_3E00']
mov ['ecx,', '[ebp+var_8]']
call ['?remove@UnicodeString@icu_56@@QAEAAV12@XZ']
jmp ['short', 'loc_3E16']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?removeBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?retainBetween@UnicodeString@icu_56@@QAEAAV12@HH@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?truncate@UnicodeString@icu_56@@QAECH@Z']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?truncate@UnicodeString@icu_56@@QAECH@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3F22']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_3F22']
mov ['ecx,', '[ebp+var_8]']
call ['?unBogus@UnicodeString@icu_56@@AAEXXZ']
xor ['al,', 'al']
jmp ['short', 'loc_3F43']
jmp ['short', 'loc_3F43']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cmp ['[ebp+arg_0],', 'eax']
jnb ['short', 'loc_3F41']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?setLength@UnicodeString@icu_56@@AAEXH@Z']
mov ['al,', '1']
jmp ['short', 'loc_3F43']
jmp ['short', 'loc_3F43']
xor ['al,', 'al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@XZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reverse@UnicodeString@icu_56@@QAEAAV12@HH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??4ForwardCharacterIterator@icu_56@@IAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??9ForwardCharacterIterator@icu_56@@QBECABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToStart@CharacterIterator@icu_56@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+5Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?setToEnd@CharacterIterator@icu_56@@QAEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['esi,', 'esp']
push ['2']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+5Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?startIndex@CharacterIterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?endIndex@CharacterIterator@icu_56@@QBEHXZ proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+10h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getIndex@CharacterIterator@icu_56@@QBEHXZ proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLength@CharacterIterator@icu_56@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_moveIndex32_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jle ['loc_42AC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+2Ch]']
jl ['short', 'loc_4245']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?utext_access@@YACPAUUText@@_JC@Z']
add ['esp,', '10h']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4245']
xor ['al,', 'al']
jmp ['loc_4341']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_4285']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jnz ['short', 'loc_4283']
xor ['al,', 'al']
jmp ['loc_4341']
jmp ['short', 'loc_4294']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jg ['loc_4210']
jmp ['loc_433F']
cmp ['[ebp+arg_4],', '0']
jge ['loc_433F']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jg ['short', 'loc_42E3']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[eax+20h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?utext_access@@YACPAUUText@@_JC@Z']
add ['esp,', '10h']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_42E3']
xor ['al,', 'al']
jmp ['short', 'loc_4341']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2-2]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_4321']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0FFFFFFFFh']
jnz ['short', 'loc_431F']
xor ['al,', 'al']
jmp ['short', 'loc_4341']
jmp ['short', 'loc_4330']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
js ['loc_42B6']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?utext_access@@YACPAUUText@@_JC@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
movzx ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_nativeLength_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+14h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_isLengthExpensive_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '2']
setnz ['dl']
mov ['[ebp+var_5],', 'dl']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_getNativeIndex_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+1Ch]']
jg ['short', 'loc_447C']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+28h]']
cdq
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
jmp ['short', 'loc_4497']
jmp ['short', 'loc_4497']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_setNativeIndex_56 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+var_DC]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+24h]']
jl ['short', 'loc_4518']
jg ['short', 'loc_44F1']
mov ['eax,', '[ebp+var_DC]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+20h]']
jb ['short', 'loc_4518']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_DC],', 'eax']
mov ['ecx,', '[ebp+var_DC]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+14h]']
jl ['short', 'loc_453F']
jg ['short', 'loc_4518']
mov ['eax,', '[ebp+var_DC]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+10h]']
jb ['short', 'loc_453F']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_4596']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+arg_8]']
sbb ['edx,', '[eax+24h]']
mov ['eax,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_456D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+arg_8]']
sbb ['edx,', '[eax+24h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
jmp ['short', 'loc_4596']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+2Ch]']
jge ['loc_463A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
mov ['cx,', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'cx']
movzx ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_463A']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jnz ['short', 'loc_45FD']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[eax+20h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jle ['short', 'loc_463A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
mov ['cx,', '[eax+ecx*2-2]']
mov ['[ebp+var_14],', 'cx']
movzx ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_463A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_getPreviousNativeIndex_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
js ['loc_470C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ebp+var_8]']
mov ['ax,', '[ecx+edx*2]']
mov ['[ebp+var_24],', 'ax']
movzx ['eax,', '[ebp+var_24]']
and ['eax,', '0FFFFFC00h']
xor ['ecx,', 'ecx']
cmp ['eax,', '0DC00h']
setz ['cl']
test ['ecx,', 'ecx']
jnz ['short', 'loc_470C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_46C8']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_4701']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+28h],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
jmp ['loc_47BE']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jnz ['short', 'loc_473B']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_EC],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['edx,', '[ebp+var_EC]']
mov ['eax,', '[ecx+20h]']
or ['eax,', '[edx+24h]']
jnz ['short', 'loc_473B']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
jmp ['loc_47BE']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+1Ch]']
jg ['short', 'loc_4773']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+28h]']
cdq
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_F0],', 'eax']
mov ['[ebp+var_EC],', 'edx']
jmp ['short', 'loc_479A']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+28h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F0],', 'eax']
mov ['[ebp+var_EC],', 'edx']
mov ['eax,', '[ebp+var_F0]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_current32_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+2Ch]']
jnz ['short', 'loc_4837']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4837']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_4988']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFFC00h']
xor ['ecx,', 'ecx']
cmp ['eax,', '0D800h']
setz ['cl']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4868']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_4988']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
cmp ['ecx,', '[edx+2Ch]']
jge ['short', 'loc_489F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2+2]']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_4963']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[eax+14h]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_3C],', 'ecx']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_48F6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_14],', 'ecx']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_45],', 'al']
movsx ['eax,', '[ebp+var_45]']
cmp ['eax,', '1']
jz ['short', 'loc_494D']
mov ['ecx,', 'ds:?__LINE__Var@?1??utext_current32_56@@9@4JA']
add ['ecx,', '26h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_19HCAPDH@?$AAr?$AA?$DN?$AA?$DN?$AA1?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_3C]']
mov ['[eax+28h],', 'ecx']
movsx ['eax,', '[ebp+var_45]']
test ['eax,', 'eax']
jnz ['short', 'loc_4963']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_4988']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_4985']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_19HCAPDH@?$AAr?$AA?$DN?$AA?$DN?$AA1?$AA?$AA@']
unicode ['0,', '<r==1>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\utext.cpp>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??utext_current32_56@@9@4JA']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_char32At_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D4]']
mov ['ecx,', '35h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+24h]']
jl ['loc_4ACB']
jg ['short', 'loc_4A54']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+20h]']
jb ['short', 'loc_4ACB']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+1Ch]']
cdq
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+20h]']
adc ['edx,', '[ecx+24h]']
mov ['[ebp+var_D4],', 'eax']
mov ['[ebp+var_D0],', 'edx']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ebp+var_D0]']
jg ['short', 'loc_4ACB']
jl ['short', 'loc_4A88']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_D4]']
jnb ['short', 'loc_4ACB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+arg_8]']
sbb ['edx,', '[eax+24h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFF800h']
xor ['ecx,', 'ecx']
cmp ['eax,', '0D800h']
setz ['cl']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4ACB']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_4B48']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+24h]']
jl ['short', 'loc_4B45']
jg ['short', 'loc_4B06']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+20h]']
jb ['short', 'loc_4B45']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+2Ch]']
jge ['short', 'loc_4B45']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_4B45']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_current32_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_next32_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+2Ch]']
jl ['short', 'loc_4BBF']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4BBF']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_4C94']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFFC00h']
xor ['ecx,', 'ecx']
cmp ['eax,', '0D800h']
setz ['cl']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4BFF']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_4C94']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+2Ch]']
jl ['short', 'loc_4C41']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4C41']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_4C94']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
xor ['ecx,', 'ecx']
cmp ['eax,', '0DC00h']
setz ['cl']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4C6F']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_4C94']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_previous32_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jg ['short', 'loc_4D06']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[eax+20h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4D06']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_4DD7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFFC00h']
xor ['ecx,', 'ecx']
cmp ['eax,', '0DC00h']
setz ['cl']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4D46']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_4DD7']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jg ['short', 'loc_4D83']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[eax+20h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4D83']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_4DD7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2-2]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFC00h']
xor ['ecx,', 'ecx']
cmp ['eax,', '0D800h']
setz ['cl']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4DB2']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_4DD7']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_next32From_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+24h]']
jl ['short', 'loc_4E5F']
jg ['short', 'loc_4E38']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+20h]']
jb ['short', 'loc_4E5F']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+14h]']
jl ['short', 'loc_4E98']
jg ['short', 'loc_4E5F']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+10h]']
jb ['short', 'loc_4E98']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_4E93']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_4F7B']
jmp ['loc_4F24']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+20h]']
mov ['esi,', '[ebp+arg_8]']
sbb ['esi,', '[eax+24h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
cdq
mov ['[ebp+var_D4],', 'ecx']
mov ['[ebp+var_D0],', 'esi']
mov ['[ebp+var_DC],', 'eax']
mov ['[ebp+var_D8],', 'edx']
mov ['eax,', '[ebp+var_D0]']
cmp ['eax,', '[ebp+var_D8]']
jg ['short', 'loc_4EFB']
jl ['short', 'loc_4EE4']
mov ['ecx,', '[ebp+var_D4]']
cmp ['ecx,', '[ebp+var_DC]']
ja ['short', 'loc_4EFB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+arg_8]']
sbb ['edx,', '[eax+24h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
jmp ['short', 'loc_4F24']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_4F78']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_next32_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_previous32From_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+24h]']
jl ['short', 'loc_4FFC']
jg ['short', 'loc_4FD5']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+20h]']
jbe ['short', 'loc_4FFC']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+14h]']
jl ['short', 'loc_5035']
jg ['short', 'loc_4FFC']
mov ['eax,', '[ebp+var_D0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+10h]']
jbe ['short', 'loc_5035']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_5030']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_5152']
jmp ['loc_50FB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+20h]']
mov ['esi,', '[ebp+arg_8]']
sbb ['esi,', '[eax+24h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
cdq
mov ['[ebp+var_D4],', 'ecx']
mov ['[ebp+var_D0],', 'esi']
mov ['[ebp+var_DC],', 'eax']
mov ['[ebp+var_D8],', 'edx']
mov ['eax,', '[ebp+var_D0]']
cmp ['eax,', '[ebp+var_D8]']
jg ['short', 'loc_5098']
jl ['short', 'loc_5081']
mov ['ecx,', '[ebp+var_D4]']
cmp ['ecx,', '[ebp+var_DC]']
ja ['short', 'loc_5098']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+arg_8]']
sbb ['edx,', '[eax+24h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
jmp ['short', 'loc_50FB']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jnz ['short', 'loc_50FB']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_50FB']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_5152']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFF800h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_514F']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_previous32_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_extract_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '20h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_equals_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5214']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_5214']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '345AD82Ch']
jnz ['short', 'loc_5214']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '345AD82Ch']
jz ['short', 'loc_5218']
xor ['al,', 'al']
jmp ['short', 'loc_5292']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+34h]']
cmp ['edx,', '[ecx+34h]']
jz ['short', 'loc_522A']
xor ['al,', 'al']
jmp ['short', 'loc_5292']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+3Ch]']
cmp ['edx,', '[ecx+3Ch]']
jz ['short', 'loc_523C']
xor ['al,', 'al']
jmp ['short', 'loc_5292']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['edi,', 'edx']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_C8],', 'esi']
mov ['[ebp+var_C4],', 'edi']
mov ['[ebp+var_D0],', 'eax']
mov ['[ebp+var_CC],', 'edx']
mov ['edx,', '[ebp+var_C8]']
cmp ['edx,', '[ebp+var_D0]']
jnz ['short', 'loc_528C']
mov ['eax,', '[ebp+var_C4]']
cmp ['eax,', '[ebp+var_CC]']
jz ['short', 'loc_5290']
xor ['al,', 'al']
jmp ['short', 'loc_5292']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_isWritable_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '8']
setnz ['dl']
mov ['[ebp+var_5],', 'dl']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_freeze_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFF7h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_hasMetaData_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '10h']
setnz ['dl']
mov ['[ebp+var_5],', 'dl']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_replace_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5383']
xor ['eax,', 'eax']
jmp ['short', 'loc_53D8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '8']
jnz ['short', 'loc_539B']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '1Eh']
xor ['eax,', 'eax']
jmp ['short', 'loc_53D8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '20h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_copy_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_20]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_544D']
jmp ['short', 'loc_549F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '8']
jnz ['short', 'loc_5463']
mov ['eax,', '[ebp+arg_20]']
mov ['dword', 'ptr', '[eax],', '1Eh']
jmp ['short', 'loc_549F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_20]']
push ['eax']
movzx ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '24h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_clone_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_54EC']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_555C']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+10h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_5531']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_555C']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_5545']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_555C']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_5559']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_utext_freeze_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_setup_56	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_55AB']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_581B']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_562C']
mov ['[ebp+var_8],', '70h']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_55C7']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '70h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_55EE']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_581B']
jmp ['short', 'loc_5627']
mov ['ecx,', '1Ch']
mov ['esi,', 'offset', '_emptyText']
mov ['edi,', '[ebp+arg_0]']
rep ['movsd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
or ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_5627']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '70h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+38h],', 'eax']
jmp ['loc_56F6']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '345AD82Ch']
jz ['short', 'loc_5648']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_581B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '4']
jz ['short', 'loc_567A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
cmp ['dword', 'ptr', '[ecx+30h],', '0']
jz ['short', 'loc_567A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+30h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '0FFFFFFFBh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+18h]']
jle ['short', 'loc_56F6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_56B8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+38h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jnz ['short', 'loc_56DE']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_56F6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
or ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_5818']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
or ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+40h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+44h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+48h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['dword', 'ptr', '[eax+54h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+58h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+5Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+60h],', '0']
mov ['dword', 'ptr', '[eax+64h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+68h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+6Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jz ['short', 'loc_5818']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jle ['short', 'loc_5818']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_close_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_5896']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '345AD82Ch']
jnz ['short', 'loc_5896']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '4']
jnz ['short', 'loc_589E']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_5945']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
cmp ['dword', 'ptr', '[ecx+30h],', '0']
jz ['short', 'loc_58C5']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+34h]']
mov ['eax,', '[edx+30h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '0FFFFFFFBh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '2']
jz ['short', 'loc_5911']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '0FFFFFFFDh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '1']
jz ['short', 'loc_5942']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['[ebp+arg_0],', '0']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utf8TextLength	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+58h],', '0']
jge ['short', 'loc_59E2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+5Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_59A7']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_5992']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+3Ch]']
cmp ['ecx,', '7FFFFFFFh']
jge ['short', 'loc_59C9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+3Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+58h],', 'ecx']
jmp ['short', 'loc_59D3']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+58h],', '7FFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFFDh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+58h]']
cdq
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utf8TextAccess	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_24C]']
mov ['ecx,', '93h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_38],', '0']
cmp ['[ebp+arg_8],', '0']
jg ['short', 'loc_5A4B']
jl ['short', 'loc_5A42']
cmp ['[ebp+arg_4],', '0']
jnb ['short', 'loc_5A4B']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_5A63']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_5A63']
jg ['short', 'loc_5A5C']
cmp ['[ebp+arg_4],', '7FFFFFFFh']
jbe ['short', 'loc_5A63']
mov ['[ebp+var_2C],', '7FFFFFFFh']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_20]']
jle ['loc_5AF3']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_5A7D']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_5AF3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+5Ch]']
jl ['short', 'loc_5AF3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
cmp ['ecx,', '[ebp+var_2C]']
jge ['short', 'loc_5AB5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['short', 'loc_5AB5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+5Ch],', 'ecx']
jmp ['short', 'loc_5A88']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jnz ['short', 'loc_5AF3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+5Ch]']
mov ['[eax+58h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFFDh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['loc_5CD5']
mov ['eax,', '[ebp+var_2C]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_248],', 'eax']
mov ['[ebp+var_244],', 'edx']
mov ['[ebp+var_24C],', 'ecx']
mov ['edx,', '[ebp+var_24C]']
mov ['eax,', '[ebp+var_248]']
cmp ['eax,', '[edx+10h]']
jnz ['short', 'loc_5B7F']
mov ['ecx,', '[ebp+var_24C]']
mov ['edx,', '[ebp+var_244]']
cmp ['edx,', '[ecx+14h]']
jnz ['short', 'loc_5B7F']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_5B57']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+28h],', 'edx']
xor ['al,', 'al']
jmp ['loc_69DD']
jmp ['short', 'loc_5B7F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_5B7F']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_5B7F']
jmp ['$swapBuffers$36886']
jmp ['$swapBuffers$36886']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_5BA7']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_5BA7']
jmp ['$swapBuffers$36886']
jmp ['$swapBuffers$36886']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_5C1C']
mov ['eax,', '[ebp+var_2C]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_248],', 'eax']
mov ['[ebp+var_244],', 'edx']
mov ['[ebp+var_24C],', 'ecx']
mov ['edx,', '[ebp+var_24C]']
mov ['eax,', '[ebp+var_248]']
cmp ['eax,', '[edx+10h]']
jnz ['short', 'loc_5BFD']
mov ['ecx,', '[ebp+var_24C]']
mov ['edx,', '[ebp+var_244]']
cmp ['edx,', '[ecx+14h]']
jnz ['short', 'loc_5BFD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+28h],', 'edx']
xor ['al,', 'al']
jmp ['loc_69DD']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+4]']
jnz ['short', 'loc_5C12']
jmp ['$swapBuffersAndFail$36894']
jmp ['$swapBuffersAndFail$36894']
jmp ['$makeStubBuffer$36896']
jmp ['$makeStubBuffer$36896']
mov ['eax,', '[ebp+var_2C]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_248],', 'eax']
mov ['[ebp+var_244],', 'edx']
mov ['[ebp+var_24C],', 'ecx']
mov ['edx,', '[ebp+var_24C]']
mov ['eax,', '[ebp+var_244]']
cmp ['eax,', '[edx+24h]']
jl ['short', 'loc_5C96']
jg ['short', 'loc_5C59']
mov ['ecx,', '[ebp+var_24C]']
mov ['edx,', '[ebp+var_248]']
cmp ['edx,', '[ecx+20h]']
jb ['short', 'loc_5C96']
mov ['eax,', '[ebp+var_2C]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_248],', 'eax']
mov ['[ebp+var_244],', 'edx']
mov ['[ebp+var_24C],', 'ecx']
mov ['edx,', '[ebp+var_24C]']
mov ['eax,', '[ebp+var_244]']
cmp ['eax,', '[edx+14h]']
jl ['short', 'loc_5CA0']
jg ['short', 'loc_5C96']
mov ['ecx,', '[ebp+var_24C]']
mov ['edx,', '[ebp+var_248]']
cmp ['edx,', '[ecx+10h]']
jb ['short', 'loc_5CA0']
jmp ['$fillForward$36900']
jmp ['$fillForward$36900']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+40h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[eax+14h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax+84h]']
mov ['edx,', '[ebp+var_14]']
sub ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
mov ['al,', '1']
jmp ['loc_69DD']
mov ['eax,', '[ebp+var_2C]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_248],', 'eax']
mov ['[ebp+var_244],', 'edx']
mov ['[ebp+var_24C],', 'ecx']
mov ['edx,', '[ebp+var_24C]']
mov ['eax,', '[ebp+var_248]']
cmp ['eax,', '[edx+20h]']
jnz ['short', 'loc_5D51']
mov ['ecx,', '[ebp+var_24C]']
mov ['edx,', '[ebp+var_244]']
cmp ['edx,', '[ecx+24h]']
jnz ['short', 'loc_5D51']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_5D29']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', '0']
xor ['al,', 'al']
jmp ['loc_69DD']
jmp ['short', 'loc_5D51']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax]']
jle ['short', 'loc_5D51']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+4]']
jg ['short', 'loc_5D51']
jmp ['$swapBuffers$36886']
jmp ['$swapBuffers$36886']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax]']
jle ['short', 'loc_5D79']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+4]']
jg ['short', 'loc_5D79']
jmp ['$swapBuffers$36886']
jmp ['$swapBuffers$36886']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_5D9D']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_5D93']
jmp ['$swapBuffersAndFail$36894']
jmp ['$swapBuffersAndFail$36894']
jmp ['short', 'loc_5D9D']
jmp ['$makeStubBuffer$36896']
jmp ['$makeStubBuffer$36896']
mov ['eax,', '[ebp+var_2C]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_248],', 'eax']
mov ['[ebp+var_244],', 'edx']
mov ['[ebp+var_24C],', 'ecx']
mov ['edx,', '[ebp+var_24C]']
mov ['eax,', '[ebp+var_244]']
cmp ['eax,', '[edx+24h]']
jl ['short', 'loc_5E17']
jg ['short', 'loc_5DDA']
mov ['ecx,', '[ebp+var_24C]']
mov ['edx,', '[ebp+var_248]']
cmp ['edx,', '[ecx+20h]']
jbe ['short', 'loc_5E17']
mov ['eax,', '[ebp+var_2C]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_248],', 'eax']
mov ['[ebp+var_244],', 'edx']
mov ['[ebp+var_24C],', 'ecx']
mov ['edx,', '[ebp+var_24C]']
mov ['eax,', '[ebp+var_244]']
cmp ['eax,', '[edx+14h]']
jl ['short', 'loc_5E21']
jg ['short', 'loc_5E17']
mov ['ecx,', '[ebp+var_24C]']
mov ['edx,', '[ebp+var_248]']
cmp ['edx,', '[ecx+10h]']
jbe ['short', 'loc_5E21']
jmp ['$fillReverse$36920']
jmp ['$fillReverse$36920']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+40h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[eax+14h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax+84h]']
mov ['edx,', '[ebp+var_14]']
sub ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jnz ['short', 'loc_5E61']
xor ['al,', 'al']
jmp ['loc_69DD']
jmp ['short', '$swapBuffers$36886']
mov ['al,', '1']
jmp ['loc_69DD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+40h]']
mov ['[eax+44h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+40h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[edx+ecx*2+18h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+4]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_5F09']
mov ['edx,', 'ds:?__LINE__Var@?1??utf8TextAccess@@9@4JA@8d672338']
add ['edx,', '0C6h']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1DA@LIDIDCGI@?$AAi?$AAx?$AA?$DO?$AA?$DN?$AAu?$AA8?$AAb?$AA?9?$AA?$DO?$AAb?$AAu?$AAf?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_5F3D']
mov ['edx,', 'ds:?__LINE__Var@?1??utf8TextAccess@@9@4JA@8d672338']
add ['edx,', '0C7h']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1DA@HOAKNNGO@?$AAi?$AAx?$AA?$DM?$AA?$DN?$AAu?$AA8?$AAb?$AA?9?$AA?$DO?$AAb?$AAu?$AAf?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[eax+14h]']
mov ['[ebp+var_38],', 'ecx']
jns ['short', 'loc_5F72']
mov ['eax,', 'ds:?__LINE__Var@?1??utf8TextAccess@@9@4JA@8d672338']
add ['eax,', '0C9h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BI@GHPKBIFA@?$AAm?$AAa?$AAp?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_38],', '66h']
jl ['short', 'loc_5F9F']
mov ['eax,', 'ds:?__LINE__Var@?1??utf8TextAccess@@9@4JA@8d672338']
add ['eax,', '0CAh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1FG@FGNNNOCG@?$AAm?$AAa?$AAp?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$DM?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAu?$AA8?$AAb?$AA?9?$AA?$DO?$AAm?$AAa@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'byte', 'ptr', '[eax+84h]']
mov ['edx,', '[ebp+var_14]']
sub ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
mov ['al,', '1']
jmp ['loc_69DD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+40h]']
mov ['[eax+44h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+40h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[edx+ecx*2+18h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['eax,', '[eax+4]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+4]']
jnz ['short', 'loc_6046']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+28h],', 'edx']
jmp ['short', 'loc_6083']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax]']
jz ['short', 'loc_6083']
mov ['edx,', 'ds:?__LINE__Var@?1??utf8TextAccess@@9@4JA@8d672338']
add ['edx,', '0EAh']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1DE@OCIKOEBK@?$AAi?$AAx?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAu?$AA8?$AAb?$AA?9?$AA?$DO?$AAb?$AAu?$AAf?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['al,', 'al']
jmp ['loc_69DD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+60h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+84h],', '0']
jmp ['$swapBuffersAndFail$36894']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '0C0h']
cmp ['ecx,', '80h']
jnz ['short', 'loc_610D']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_utf8_back1SafeBody_56']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+40h]']
mov ['[eax+44h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_5C]']
mov ['[eax+40h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
mov ['[ebp+var_68],', 'ecx']
mov ['[ebp+var_71],', '0']
cmp ['[ebp+var_68],', '0']
jge ['short', 'loc_6149']
mov ['[ebp+var_68],', '7FFFFFFFh']
mov ['[ebp+var_71],', '1']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '18h']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '60h']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '84h']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_A4],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_B0],', 'eax']
mov ['[ebp+var_B9],', '0']
mov ['[ebp+var_C8],', '0']
cmp ['[ebp+var_A4],', '20h']
jge ['loc_6519']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_C8],', 'ecx']
cmp ['[ebp+var_C8],', '0']
jle ['short', 'loc_622A']
cmp ['[ebp+var_C8],', '80h']
jge ['short', 'loc_622A']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_80]']
mov ['dx,', 'word', 'ptr', '[ebp+var_C8]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8C]']
add ['ecx,', '[ebp+var_A4]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_98]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_A4]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
jmp ['loc_6507']
movsx ['eax,', '[ebp+var_B9]']
test ['eax,', 'eax']
jnz ['short', 'loc_6248']
mov ['[ebp+var_B9],', '1']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_EC],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_C8],', 'ecx']
mov ['edx,', '[ebp+var_B0]']
add ['edx,', '1']
mov ['[ebp+var_B0],', 'edx']
cmp ['[ebp+var_C8],', '80h']
jl ['loc_63F2']
cmp ['[ebp+var_C8],', '0E0h']
jle ['loc_6359']
cmp ['[ebp+var_C8],', '0ECh']
jg ['loc_6359']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_68]']
jl ['short', 'loc_62D5']
cmp ['[ebp+var_68],', '0']
jge ['loc_6359']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_F5],', 'cl']
movzx ['edx,', '[ebp+var_F5]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_6359']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
sub ['ecx,', '80h']
mov ['[ebp+var_101],', 'cl']
movzx ['edx,', '[ebp+var_101]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_6359']
mov ['eax,', '[ebp+var_C8]']
shl ['eax,', '0Ch']
movzx ['ecx,', '[ebp+var_F5]']
shl ['ecx,', '6']
or ['eax,', 'ecx']
movzx ['edx,', '[ebp+var_101]']
or ['eax,', 'edx']
movzx ['eax,', 'ax']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '2']
mov ['[ebp+var_B0],', 'eax']
jmp ['loc_63F2']
cmp ['[ebp+var_C8],', '0E0h']
jge ['short', 'loc_63CC']
cmp ['[ebp+var_C8],', '0C2h']
jl ['short', 'loc_63CC']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_68]']
jz ['short', 'loc_63CC']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_B0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '80h']
mov ['[ebp+var_F5],', 'cl']
movzx ['edx,', '[ebp+var_F5]']
cmp ['edx,', '3Fh']
jg ['short', 'loc_63CC']
mov ['eax,', '[ebp+var_C8]']
and ['eax,', '1Fh']
shl ['eax,', '6']
movzx ['ecx,', '[ebp+var_F5]']
or ['eax,', 'ecx']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
jmp ['short', 'loc_63F2']
push ['0FFFFFFFDh']
mov ['eax,', '[ebp+var_C8]']
push ['eax']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
lea ['edx,', '[ebp+var_B0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_utf8_nextCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+var_C8],', 'eax']
cmp ['[ebp+var_C8],', '0']
jnz ['short', 'loc_6417']
movsx ['eax,', '[ebp+var_71]']
test ['eax,', 'eax']
jz ['short', 'loc_6417']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
jmp ['loc_6519']
cmp ['[ebp+var_C8],', '0FFFFh']
ja ['short', 'loc_6448']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[ebp+var_80]']
mov ['dx,', 'word', 'ptr', '[ebp+var_C8]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_649E']
mov ['eax,', '[ebp+var_C8]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_80]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_C8]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ebp+var_80]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_D4]']
sub ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8C]']
add ['ecx,', '[ebp+var_E0]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_E0]']
add ['edx,', '1']
mov ['[ebp+var_E0],', 'edx']
mov ['eax,', '[ebp+var_E0]']
cmp ['eax,', '[ebp+var_A4]']
jl ['short', 'loc_649E']
mov ['eax,', '[ebp+var_D4]']
sub ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_98]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_EC]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_D4]']
add ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_D4]']
cmp ['eax,', '[ebp+var_B0]']
jl ['short', 'loc_64D2']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_68]']
jl ['short', 'loc_6514']
jmp ['short', 'loc_6519']
jmp ['loc_6190']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_8C]']
add ['ecx,', '[ebp+var_A4]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_B0]']
sub ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_98]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_A4]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_B0]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax+0Ch],', 'ecx']
movsx ['eax,', '[ebp+var_B9]']
test ['eax,', 'eax']
jnz ['short', 'loc_6589']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_A4]']
mov ['[eax+10h],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_80]']
mov ['[eax+30h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['eax,', '[eax]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['eax,', '[eax+4]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+1Ch],', 'edx']
movsx ['eax,', '[ebp+var_71]']
test ['eax,', 'eax']
jz ['short', 'loc_6624']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_B0]']
cmp ['ecx,', '[eax+5Ch]']
jle ['short', 'loc_6624']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_B0]']
mov ['[eax+5Ch],', 'ecx']
cmp ['[ebp+var_C8],', '0']
jnz ['short', 'loc_6624']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_B0]']
mov ['[eax+58h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFFDh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['al,', '1']
jmp ['loc_69DD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+58h]']
jz ['short', 'loc_6662']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '0C0h']
cmp ['ecx,', '80h']
jnz ['short', 'loc_6662']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_utf8_back1SafeBody_56']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_110],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+40h]']
mov ['[eax+44h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_110]']
mov ['[eax+40h],', 'ecx']
mov ['eax,', '[ebp+var_110]']
add ['eax,', '18h']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_110]']
add ['eax,', '60h']
mov ['[ebp+var_128],', 'eax']
mov ['eax,', '[ebp+var_110]']
add ['eax,', '84h']
mov ['[ebp+var_134],', 'eax']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '61h']
mov ['[ebp+var_140],', 'eax']
mov ['[ebp+var_14C],', '22h']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_158],', 'eax']
mov ['eax,', '[ebp+var_14C]']
mov ['[ebp+var_164],', 'eax']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_128]']
add ['ecx,', '[ebp+var_14C]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_134]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_14C]']
mov ['[ecx+eax],', 'dl']
cmp ['[ebp+var_14C],', '2']
jle ['loc_690E']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '[ebp+var_140]']
cmp ['eax,', '5']
jle ['loc_690E']
cmp ['[ebp+var_158],', '0']
jle ['loc_690E']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '1']
mov ['[ebp+var_158],', 'eax']
mov ['eax,', '[ebp+var_14C]']
sub ['eax,', '1']
mov ['[ebp+var_14C],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_158]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_170],', 'ecx']
cmp ['[ebp+var_170],', '80h']
jge ['short', 'loc_67D1']
mov ['eax,', '[ebp+var_14C]']
mov ['ecx,', '[ebp+var_11C]']
mov ['dx,', 'word', 'ptr', '[ebp+var_170]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_134]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_14C]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_128]']
add ['ecx,', '[ebp+var_14C]']
mov ['[ecx],', 'al']
jmp ['loc_6909']
mov ['eax,', '[ebp+var_158]']
mov ['[ebp+var_17C],', 'eax']
push ['0FFFFFFFDh']
mov ['eax,', '[ebp+var_170]']
push ['eax']
lea ['ecx,', '[ebp+var_158]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_utf8_prevCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+var_170],', 'eax']
cmp ['[ebp+var_170],', '10000h']
jge ['short', 'loc_6843']
mov ['eax,', '[ebp+var_14C]']
mov ['ecx,', '[ebp+var_11C]']
mov ['dx,', 'word', 'ptr', '[ebp+var_170]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_128]']
add ['ecx,', '[ebp+var_14C]']
mov ['[ecx],', 'al']
jmp ['loc_68C5']
mov ['eax,', '[ebp+var_170]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_14C]']
mov ['edx,', '[ebp+var_11C]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_128]']
add ['ecx,', '[ebp+var_14C]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_14C]']
sub ['eax,', '1']
mov ['[ebp+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_170]']
sar ['ecx,', '0Ah']
add ['ecx,', '0D7C0h']
mov ['edx,', '[ebp+var_14C]']
mov ['eax,', '[ebp+var_11C]']
mov ['[eax+edx*2],', 'cx']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_128]']
add ['ecx,', '[ebp+var_14C]']
mov ['[ecx],', 'al']
mov ['eax,', '[ebp+var_17C]']
sub ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_134]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_14C]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_17C]']
sub ['eax,', '1']
mov ['[ebp+var_17C],', 'eax']
mov ['eax,', '[ebp+var_17C]']
cmp ['eax,', '[ebp+var_158]']
jge ['short', 'loc_68C5']
mov ['eax,', '[ebp+var_14C]']
mov ['[ebp+var_164],', 'eax']
jmp ['loc_6715']
mov ['eax,', '[ebp+var_110]']
mov ['ecx,', '[ebp+var_158]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_110]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_110]']
mov ['ecx,', '[ebp+var_14C]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_110]']
mov ['dword', 'ptr', '[eax+0Ch],', '22h']
mov ['eax,', '[ebp+var_110]']
mov ['ecx,', '[ebp+var_164]']
sub ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_110]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_110]']
mov ['ecx,', '[ebp+var_140]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+var_110]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_11C]']
lea ['eax,', '[edx+ecx*2]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+var_110]']
mov ['ecx,', '[ebp+var_110]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+2Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+28h],', 'edx']
mov ['eax,', '[ebp+var_110]']
mov ['eax,', '[eax]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '[ebp+var_110]']
mov ['eax,', '[eax+4]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_110]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+1Ch],', 'edx']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN99']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '24Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN98']
dd ['offset', '$LN96']
dd ['0FFFFFEA8h,', '4']
dd ['offset', '$LN97']
assume ['cs:_rdata']
public ['??_C@_1DE@OCIKOEBK@?$AAi?$AAx?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAu?$AA8?$AAb?$AA?9?$AA?$DO?$AAb?$AAu?$AAf?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
unicode ['0,', '<ix', '==', 'u8b->']
dw ['3Eh']
unicode ['0,', '<bufNativeStart>,0']
assume ['cs:_rdata']
public ['??_C@_1FG@FGNNNOCG@?$AAm?$AAa?$AAp?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$DM?$AA?$CI?$AAi?$AAn?$AAt?$AA3?$AA2?$AA_?$AAt?$AA?$CJ?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAu?$AA8?$AAb?$AA?9?$AA?$DO?$AAm?$AAa@']
unicode ['0,', '<mapIndex>']
dw ['3Ch']
unicode ['0,', '<(int32_t)sizeof(u8b->']
dw ['3Eh']
unicode ['0,', '<mapToUChars)>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1BI@GHPKBIFA@?$AAm?$AAa?$AAp?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@']
unicode ['0,', '<mapIndex>']
dw ['3Eh']
unicode ['0,', '<=0>,0']
assume ['cs:_rdata']
public ['??_C@_1DA@HOAKNNGO@?$AAi?$AAx?$AA?$DM?$AA?$DN?$AAu?$AA8?$AAb?$AA?9?$AA?$DO?$AAb?$AAu?$AAf?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?$AA@']
unicode ['0,', '<ix>']
dw ['3Ch']
unicode ['0,', '<=u8b->']
dw ['3Eh']
unicode ['0,', '<bufNativeLimit>,0']
assume ['cs:_rdata']
public ['??_C@_1DA@LIDIDCGI@?$AAi?$AAx?$AA?$DO?$AA?$DN?$AAu?$AA8?$AAb?$AA?9?$AA?$DO?$AAb?$AAu?$AAf?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
unicode ['0,', '<ix>']
dw ['3Eh']
unicode ['0,', '<=u8b->']
dw ['3Eh']
unicode ['0,', '<bufNativeStart>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??utf8TextAccess@@9@4JA@8d672338']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utf8TextExtract proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6B72']
xor ['eax,', 'eax']
jmp ['loc_6D4F']
cmp ['[ebp+arg_18],', '0']
jl ['short', 'loc_6B84']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_6B94']
cmp ['[ebp+arg_18],', '0']
jle ['short', 'loc_6B94']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_6D4F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jle ['short', 'loc_6BDF']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_6D4F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_10C],', 'edx']
mov ['[ebp+var_114],', 'ecx']
mov ['edx,', '[ebp+var_114]']
mov ['eax,', '[ebp+var_10C]']
cmp ['eax,', '[edx+14h]']
jg ['short', 'loc_6C78']
jl ['short', 'loc_6C25']
mov ['ecx,', '[ebp+var_114]']
mov ['edx,', '[ebp+var_110]']
cmp ['edx,', '[ecx+10h]']
jnb ['short', 'loc_6C78']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_6C37']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '3']
jge ['short', 'loc_6C78']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '80h']
jz ['short', 'loc_6C6B']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '0C0h']
movzx ['edx,', 'cl']
cmp ['edx,', '3Eh']
jl ['short', 'loc_6C6B']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_6C6D']
jmp ['short', 'loc_6C78']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_6C2E']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_110],', 'eax']
mov ['[ebp+var_10C],', 'edx']
mov ['[ebp+var_114],', 'ecx']
mov ['edx,', '[ebp+var_114]']
mov ['eax,', '[ebp+var_10C]']
cmp ['eax,', '[edx+14h]']
jg ['short', 'loc_6D08']
jl ['short', 'loc_6CB5']
mov ['ecx,', '[ebp+var_114]']
mov ['edx,', '[ebp+var_110]']
cmp ['edx,', '[ecx+10h]']
jnb ['short', 'loc_6D08']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_6CC7']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '3']
jge ['short', 'loc_6D08']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '80h']
jz ['short', 'loc_6CFB']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '0C0h']
movzx ['edx,', 'cl']
cmp ['edx,', '3Eh']
jl ['short', 'loc_6CFB']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_6CFD']
jmp ['short', 'loc_6D08']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_6CBE']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3Ch]']
add ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['_utext_strFromUTF8']
add ['esp,', '18h']
push ['1']
mov ['eax,', '[ebp+var_20]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_utf8TextAccess']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN22']
dd ['offset', '$LN21']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?pinIndex@@YAHAA_J_J@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'eax']
mov ['ecx,', '[ebp+var_C4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jg ['short', 'loc_6DE6']
jl ['short', 'loc_6DD4']
mov ['edx,', '[ebp+var_C4]']
cmp ['dword', 'ptr', '[edx],', '0']
jnb ['short', 'loc_6DE6']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['dword', 'ptr', '[eax+4],', '0']
jmp ['short', 'loc_6E1A']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'eax']
mov ['ecx,', '[ebp+var_C4]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+arg_8]']
jl ['short', 'loc_6E1A']
jg ['short', 'loc_6E0C']
mov ['eax,', '[ebp+var_C4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_4]']
jbe ['short', 'loc_6E1A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_strFromUTF8 proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6E63']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_10C],', 'edx']
jmp ['short', 'loc_6E6D']
mov ['[ebp+var_10C],', '0']
mov ['eax,', '[ebp+var_10C]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_10]']
jge ['loc_6F67']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jnb ['loc_6F67']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_20],', '7Fh']
jg ['short', 'loc_6EDC']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', 'word', 'ptr', '[ebp+var_20]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
jmp ['loc_6F62']
push ['0FFFFFFFDh']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_utf8_nextCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0FFFFh']
ja ['short', 'loc_6F17']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', 'word', 'ptr', '[ebp+var_20]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_6F62']
mov ['eax,', '[ebp+var_20]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_6F57']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_6F62']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_6F67']
jmp ['loc_6E91']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_10]']
jge ['short', 'loc_6FC9']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_20],', '7Fh']
jg ['short', 'loc_6F95']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_6FC7']
push ['0FFFFFFFDh']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_utf8_nextCharSafeBody_56']
add ['esp,', '14h']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_20]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
add ['ecx,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_6F67']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+arg_0]']
sar ['eax,', '1']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_6FE5']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN19']
dd ['offset', '$LN18']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utf8TextMapOffsetToNative proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+40h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+1Ch]']
jle ['short', 'loc_7087']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+2Ch]']
jle ['short', 'loc_70AC']
mov ['eax,', 'ds:?__LINE__Var@?1??utf8TextMapOffsetToNative@@9@4JA@8d672338']
add ['eax,', '3']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1JI@ICBDKHPO@?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$DO?$AAu?$AAt?$AA?9?$AA?$DO?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AAi@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx+60h]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+14h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_DC],', 'edx']
mov ['[ebp+var_E4],', 'ecx']
mov ['edx,', '[ebp+var_E4]']
mov ['eax,', '[ebp+var_DC]']
cmp ['eax,', '[edx+24h]']
jl ['short', 'loc_7143']
jg ['short', 'loc_7106']
mov ['ecx,', '[ebp+var_E4]']
mov ['edx,', '[ebp+var_E0]']
cmp ['edx,', '[ecx+20h]']
jb ['short', 'loc_7143']
mov ['eax,', '[ebp+var_14]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_EC],', 'eax']
mov ['[ebp+var_E8],', 'edx']
mov ['[ebp+var_F0],', 'ecx']
mov ['edx,', '[ebp+var_F0]']
mov ['eax,', '[ebp+var_E8]']
cmp ['eax,', '[edx+14h]']
jl ['short', 'loc_7168']
jg ['short', 'loc_7143']
mov ['ecx,', '[ebp+var_F0]']
mov ['edx,', '[ebp+var_EC]']
cmp ['edx,', '[ecx+10h]']
jbe ['short', 'loc_7168']
mov ['eax,', 'ds:?__LINE__Var@?1??utf8TextMapOffsetToNative@@9@4JA@8d672338']
add ['eax,', '5']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1JK@MEHKDALN@?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAS@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
cdq
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_1JK@MEHKDALN@?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAS@']
unicode ['0,', '<nativeOffset', '>']
dw ['3Eh']
unicode ['0,', '<=', 'ut->']
dw ['3Eh']
unicode ['0,', '<chunkNativeStart', '&&', 'nativeOffset', '>']
dw ['3Ch']
unicode ['0,', '<=', 'ut->']
dw ['3Eh']
unicode ['0,', '<chunkNativeLimit>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1JI@ICBDKHPO@?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$DO?$AAu?$AAt?$AA?9?$AA?$DO?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AAi@']
unicode ['0,', '<ut->']
dw ['3Eh']
unicode ['0,', '<chunkOffset>']
dw ['3Eh']
unicode ['0,', '<ut->']
dw ['3Eh']
unicode ['0,', '<nativeIndexingLimit', '&&', 'ut->']
dw ['3Eh']
unicode ['0,', '<chunkOffset>']
dw ['3Ch']
unicode ['0,', '<=ut->']
dw ['3Eh']
unicode ['0,', '<chunkLength>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??utf8TextMapOffsetToNative@@9@4JA@8d672338']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utf8TextMapIndexToUTF16 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_730C']
jg ['short', 'loc_72E7']
cmp ['[ebp+arg_4],', '7FFFFFFFh']
jbe ['short', 'loc_730C']
mov ['eax,', 'ds:?__LINE__Var@?1??utf8TextMapIndexToUTF16@@9@4JA@8d672338']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1CM@LECLFDGF@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA6?$AA4?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AA7?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+40h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['ecx,', 'eax']
mov ['esi,', 'edx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
cdq
mov ['edi,', '[ebp+arg_0]']
add ['eax,', '[edi+20h]']
adc ['edx,', '[edi+24h]']
mov ['[ebp+var_F8],', 'ecx']
mov ['[ebp+var_F4],', 'esi']
mov ['[ebp+var_100],', 'eax']
mov ['[ebp+var_FC],', 'edx']
mov ['eax,', '[ebp+var_F4]']
cmp ['eax,', '[ebp+var_FC]']
jg ['short', 'loc_738F']
jl ['short', 'loc_7369']
mov ['ecx,', '[ebp+var_F8]']
cmp ['ecx,', '[ebp+var_100]']
jnb ['short', 'loc_738F']
mov ['edx,', 'ds:?__LINE__Var@?1??utf8TextMapIndexToUTF16@@9@4JA@8d672338']
add ['edx,', '4']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1GI@PMDKFDFH@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?$DO?$AA?$DN?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CL?$AAu?$AAt?$AA?9?$AA?$DO@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_F4],', 'edx']
mov ['[ebp+var_FC],', 'ecx']
mov ['edx,', '[ebp+var_FC]']
mov ['eax,', '[ebp+var_F4]']
cmp ['eax,', '[edx+14h]']
jl ['short', 'loc_73F1']
jg ['short', 'loc_73CC']
mov ['ecx,', '[ebp+var_FC]']
mov ['edx,', '[ebp+var_F8]']
cmp ['edx,', '[ecx+10h]']
jbe ['short', 'loc_73F1']
mov ['eax,', 'ds:?__LINE__Var@?1??utf8TextMapIndexToUTF16@@9@4JA@8d672338']
add ['eax,', '5']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1DI@NEMBKDBO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?$DM?$AA?$DN?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+14h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax+84h]']
mov ['edx,', '[ebp+var_14]']
sub ['ecx,', '[edx+8]']
mov ['[ebp+var_2C],', 'ecx']
js ['short', 'loc_7420']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+2Ch]']
jle ['short', 'loc_7446']
mov ['edx,', 'ds:?__LINE__Var@?1??utf8TextMapIndexToUTF16@@9@4JA@8d672338']
add ['edx,', '8']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1EK@OJNDMMAI@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$DM?$AA?$DN?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAL?$AAe@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1EK@OJNDMMAI@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$DM?$AA?$DN?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAL?$AAe@']
unicode ['0,', '<offset>']
dw ['3Eh']
unicode ['0,', '<=0', '&&', 'offset>']
dw ['3Ch']
unicode ['0,', '<=ut->']
dw ['3Eh']
unicode ['0,', '<chunkLength>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1DI@NEMBKDBO@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?$DM?$AA?$DN?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?$AA@']
unicode ['0,', '<index>']
dw ['3Ch']
unicode ['0,', '<=ut->']
dw ['3Eh']
unicode ['0,', '<chunkNativeLimit>,0']
assume ['cs:_rdata']
public ['??_C@_1GI@PMDKFDFH@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?$DO?$AA?$DN?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAN?$AAa?$AAt?$AAi?$AAv?$AAe?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$CL?$AAu?$AAt?$AA?9?$AA?$DO@']
unicode ['0,', '<index>']
dw ['3Eh']
unicode ['0,', '<=ut->']
dw ['3Eh']
unicode ['0,', '<chunkNativeStart+ut->']
dw ['3Eh']
unicode ['0,', '<nativeIndexingLimit>,0']
assume ['cs:_rdata']
public ['??_C@_1CM@LECLFDGF@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA6?$AA4?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA0?$AAx?$AA7?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?$AA@']
unicode ['0,', '<index64', '>']
dw ['3Ch']
unicode ['0,', '<=', '0x7fffffff>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??utf8TextMapIndexToUTF16@@9@4JA@8d672338']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utf8TextClone	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_shallowTextClone']
add ['esp,', '0Ch']
mov ['[ebp+arg_0],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_7647']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7647']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_7604']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['short', 'loc_7647']
push ['1']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+3Ch]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+3Ch]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax+3Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '20h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_shallowTextClone proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_769A']
xor ['eax,', 'eax']
jmp ['loc_77F0']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_utext_setup_56']
add ['esp,', '0Ch']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_76D7']
mov ['eax,', '[ebp+Dst]']
jmp ['loc_77F0']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+Size],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+Size]']
cmp ['ecx,', '[eax+0Ch]']
jle ['short', 'loc_7706']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+Size],', 'ecx']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+38h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+4],', 'ecx']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_776B']
push ['1']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[edx+38h]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '3Ch']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_adjustPointer']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '40h']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_adjustPointer']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '44h']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_adjustPointer']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '48h']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_adjustPointer']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '30h']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_adjustPointer']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFDFh']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_adjustPointer	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+38h]']
jb ['short', 'loc_7868']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+38h]']
mov ['edx,', '[ebp+arg_8]']
add ['ecx,', '[edx+18h]']
cmp ['[ebp+var_8],', 'ecx']
jnb ['short', 'loc_7868']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[eax+38h]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+38h]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_788C']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jb ['short', 'loc_788C']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '[eax+0Ch]']
cmp ['[ebp+var_8],', 'ecx']
jnb ['short', 'loc_788C']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utf8TextClose	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '20h']
jz ['short', 'loc_78DC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_openUTF8_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_792A']
xor ['eax,', 'eax']
jmp ['loc_7A0E']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_793F']
mov ['eax,', '[ebp+arg_8]']
or ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_793F']
mov ['[ebp+arg_4],', 'offset', '_gEmptyString']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_7964']
cmp ['[ebp+arg_C],', '0FFFFFFFFh']
jl ['short', 'loc_7964']
jg ['short', 'loc_7953']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jb ['short', 'loc_7964']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_7974']
jg ['short', 'loc_7964']
cmp ['[ebp+arg_8],', '7FFFFFFFh']
jbe ['short', 'loc_7974']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_7A0E']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['1E0h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_utext_setup_56']
add ['esp,', '0Ch']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_79A6']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_7A0E']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', 'offset', '_utf8Funcs']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+3Ch],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+58h],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+5Ch],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+5Ch],', '0']
jge ['short', 'loc_79ED']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+5Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+40h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+38h]']
add ['ecx,', '0F0h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+44h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_repTextClone	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_shallowTextClone']
add ['esp,', '0Ch']
mov ['[ebp+Dst],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_7AB9']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7AB9']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+3Ch],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '20h']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '8']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_repTextClose	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '20h']
jz ['short', 'loc_7B59']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'ecx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_7B45']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_7B4F']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_repTextLength	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@Replaceable@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cdq
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_repTextAccess	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '154h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_154]']
mov ['ecx,', '55h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
call ['?length@Replaceable@icu_56@@QBEHXZ']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_7C43']
jg ['short', 'loc_7C1E']
cmp ['[ebp+arg_4],', '7FFFFFFFh']
jbe ['short', 'loc_7C43']
mov ['eax,', 'ds:?__LINE__Var@?1??repTextAccess@@9@4JA@8d672338']
add ['eax,', '6']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1CE@DHOOMOBN@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?$DM?$AA?$DN?$AA0?$AAx?$AA7?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['loc_7DF6']
mov ['eax,', '[ebp+var_24]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_150],', 'eax']
mov ['[ebp+var_14C],', 'edx']
mov ['[ebp+var_154],', 'ecx']
mov ['edx,', '[ebp+var_154]']
mov ['eax,', '[ebp+var_14C]']
cmp ['eax,', '[edx+24h]']
jl ['short', 'loc_7CE5']
jg ['short', 'loc_7C8C']
mov ['ecx,', '[ebp+var_154]']
mov ['edx,', '[ebp+var_150]']
cmp ['edx,', '[ecx+20h]']
jb ['short', 'loc_7CE5']
mov ['eax,', '[ebp+var_24]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_150],', 'eax']
mov ['[ebp+var_14C],', 'edx']
mov ['[ebp+var_154],', 'ecx']
mov ['edx,', '[ebp+var_154]']
mov ['eax,', '[ebp+var_14C]']
cmp ['eax,', '[edx+14h]']
jg ['short', 'loc_7CE5']
jl ['short', 'loc_7CC9']
mov ['ecx,', '[ebp+var_154]']
mov ['edx,', '[ebp+var_150]']
cmp ['edx,', '[ecx+10h]']
jnb ['short', 'loc_7CE5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+arg_8]']
sbb ['edx,', '[eax+24h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
mov ['al,', '1']
jmp ['loc_8159']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_18]']
jl ['short', 'loc_7D40']
mov ['eax,', '[ebp+var_18]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_14C],', 'ecx']
mov ['[ebp+var_154],', 'eax']
mov ['[ebp+var_150],', 'edx']
mov ['edx,', '[ebp+var_14C]']
mov ['eax,', '[edx+10h]']
cmp ['eax,', '[ebp+var_154]']
jnz ['short', 'loc_7D40']
mov ['ecx,', '[ebp+var_14C]']
mov ['edx,', '[ecx+14h]']
cmp ['edx,', '[ebp+var_150]']
jnz ['short', 'loc_7D40']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'edx']
xor ['al,', 'al']
jmp ['loc_8159']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '0Ah']
mov ['ecx,', '[ebp+arg_8]']
adc ['ecx,', '0']
sub ['eax,', '1']
sbb ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+10h],', 'eax']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+var_18]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_14C],', 'ecx']
mov ['[ebp+var_154],', 'eax']
mov ['[ebp+var_150],', 'edx']
mov ['edx,', '[ebp+var_14C]']
mov ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+var_150]']
jl ['short', 'loc_7DA5']
jg ['short', 'loc_7D98']
mov ['ecx,', '[ebp+var_14C]']
mov ['edx,', '[ecx+10h]']
cmp ['edx,', '[ebp+var_154]']
jbe ['short', 'loc_7DA5']
mov ['eax,', '[ebp+var_18]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '0Ah']
mov ['edx,', '[eax+14h]']
sbb ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'ecx']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_14C]']
cmp ['dword', 'ptr', '[ecx+24h],', '0']
jg ['short', 'loc_7DF1']
jl ['short', 'loc_7DE0']
mov ['edx,', '[ebp+var_14C]']
cmp ['dword', 'ptr', '[edx+20h],', '0']
jnb ['short', 'loc_7DF1']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
jmp ['loc_7F5A']
mov ['eax,', '[ebp+var_24]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_150],', 'eax']
mov ['[ebp+var_14C],', 'edx']
mov ['[ebp+var_154],', 'ecx']
mov ['edx,', '[ebp+var_154]']
mov ['eax,', '[ebp+var_14C]']
cmp ['eax,', '[edx+24h]']
jl ['short', 'loc_7E88']
jg ['short', 'loc_7E33']
mov ['ecx,', '[ebp+var_154]']
mov ['edx,', '[ebp+var_150]']
cmp ['edx,', '[ecx+20h]']
jbe ['short', 'loc_7E88']
mov ['eax,', '[ebp+var_24]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_150],', 'eax']
mov ['[ebp+var_14C],', 'edx']
mov ['[ebp+var_154],', 'ecx']
mov ['edx,', '[ebp+var_154]']
mov ['eax,', '[ebp+var_14C]']
cmp ['eax,', '[edx+14h]']
jg ['short', 'loc_7E88']
jl ['short', 'loc_7E70']
mov ['ecx,', '[ebp+var_154]']
mov ['edx,', '[ebp+var_150]']
cmp ['edx,', '[ecx+10h]']
ja ['short', 'loc_7E88']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'edx']
mov ['al,', '1']
jmp ['loc_8159']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_7EBC']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_14C]']
mov ['edx,', '[ebp+var_14C]']
mov ['eax,', '[ecx+20h]']
or ['eax,', '[edx+24h]']
jnz ['short', 'loc_7EBC']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', '0']
xor ['al,', 'al']
jmp ['loc_8159']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '9']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_14C]']
cmp ['dword', 'ptr', '[ecx+24h],', '0']
jg ['short', 'loc_7F00']
jl ['short', 'loc_7EEF']
mov ['edx,', '[ebp+var_14C]']
cmp ['dword', 'ptr', '[edx+20h],', '0']
jnb ['short', 'loc_7F00']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_18]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_14C],', 'ecx']
mov ['[ebp+var_154],', 'eax']
mov ['[ebp+var_150],', 'edx']
mov ['edx,', '[ebp+var_14C]']
mov ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+var_150]']
jl ['short', 'loc_7F5A']
jg ['short', 'loc_7F4D']
mov ['ecx,', '[ebp+var_14C]']
mov ['edx,', '[ecx+10h]']
cmp ['edx,', '[ebp+var_154]']
jbe ['short', 'loc_7F5A']
mov ['eax,', '[ebp+var_18]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_30],', 'ecx']
push ['0Ah']
push ['0']
mov ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_78]']
call ['??0UnicodeString@icu_56@@QAE@PA_WHH@Z']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax+8]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax+30h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+10h]']
sub ['edx,', '[ecx+20h]']
mov ['eax,', '[eax+14h]']
sbb ['eax,', '[ecx+24h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+2Ch],', 'edx']
mov ['eax,', '[ebp+var_24]']
cdq
mov ['ecx,', '[ebp+arg_0]']
sub ['eax,', '[ecx+20h]']
sbb ['edx,', '[ecx+24h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'eax']
mov ['eax,', '[ebp+var_18]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_14C],', 'ecx']
mov ['[ebp+var_154],', 'eax']
mov ['[ebp+var_150],', 'edx']
mov ['edx,', '[ebp+var_14C]']
mov ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+var_150]']
jg ['short', 'loc_8067']
jl ['short', 'loc_800C']
mov ['ecx,', '[ebp+var_14C]']
mov ['edx,', '[ecx+10h]']
cmp ['edx,', '[ebp+var_154]']
jnb ['short', 'loc_8067']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2-2]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_8067']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '1']
mov ['edx,', '[eax+14h]']
sbb ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+28h]']
cmp ['edx,', '[ecx+2Ch]']
jle ['short', 'loc_8067']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+28h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14C],', 'eax']
mov ['ecx,', '[ebp+var_14C]']
cmp ['dword', 'ptr', '[ecx+24h],', '0']
jl ['short', 'loc_80E3']
jg ['short', 'loc_808A']
mov ['edx,', '[ebp+var_14C]']
cmp ['dword', 'ptr', '[edx+20h],', '0']
jbe ['short', 'loc_80E3']
mov ['eax,', '[ebp+var_30]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_80E3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
add ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+30h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
add ['ecx,', '1']
mov ['edx,', '[eax+24h]']
adc ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'ecx']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_8138']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jle ['short', 'loc_8138']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+30h]']
movzx ['ecx,', 'word', 'ptr', '[eax+ecx*2-2]']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0D800h']
jnz ['short', 'loc_8138']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['[ebp+var_141],', '1']
lea ['ecx,', '[ebp+var_78]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['al,', '[ebp+var_141]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '154h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN30']
dw ['0FFFFh']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '$LN29']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1CE@DHOOMOBN@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?$DM?$AA?$DN?$AA0?$AAx?$AA7?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?$AA@']
unicode ['0,', '<index>']
dw ['3Ch']
unicode ['0,', '<=0x7fffffff>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??repTextAccess@@9@4JA@8d672338']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_repTextExtract	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
call ['?length@Replaceable@icu_56@@QBEHXZ']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8224']
xor ['eax,', 'eax']
jmp ['loc_83A5']
cmp ['[ebp+arg_18],', '0']
jl ['short', 'loc_8236']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_823F']
cmp ['[ebp+arg_18],', '0']
jle ['short', 'loc_823F']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_10]']
jl ['short', 'loc_8261']
jg ['short', 'loc_8251']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jbe ['short', 'loc_8261']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_83A5']
mov ['eax,', '[ebp+var_18]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_18]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_18]']
jge ['short', 'loc_82D1']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?charAt@Replaceable@icu_56@@QBE_WH@Z']
movzx ['ecx,', 'ax']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_82D1']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?char32At@Replaceable@icu_56@@QBEHH@Z']
sub ['eax,', '10000h']
cmp ['eax,', '0FFFFFh']
ja ['short', 'loc_82D1']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_18]']
jge ['short', 'loc_8317']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?charAt@Replaceable@icu_56@@QBE_WH@Z']
movzx ['ecx,', 'ax']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_8317']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?char32At@Replaceable@icu_56@@QBEHH@Z']
sub ['eax,', '10000h']
cmp ['eax,', '0FFFFFh']
ja ['short', 'loc_8317']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '[ebp+var_24]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+arg_18]']
jle ['short', 'loc_8331']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '[ebp+arg_18]']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
lea ['ecx,', '[ebp+var_78]']
call ['??0UnicodeString@icu_56@@QAE@PA_WHH@Z']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_C]']
mov ['eax,', '[edx+8]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
push ['1']
mov ['eax,', '[ebp+var_30]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_repTextAccess']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
mov ['[ebp+var_144],', 'eax']
lea ['ecx,', '[ebp+var_78]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_144]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN12']
dw ['0FFFFh']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '$LN11']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_repTextReplace	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '178h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_178]']
mov ['ecx,', '5Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_843D']
xor ['eax,', 'eax']
jmp ['loc_8635']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_8459']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_8459']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_8635']
mov ['ecx,', '[ebp+var_C]']
call ['?length@Replaceable@icu_56@@QBEHXZ']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_10]']
jl ['short', 'loc_8486']
jg ['short', 'loc_8476']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jbe ['short', 'loc_8486']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_8635']
mov ['eax,', '[ebp+var_18]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_18]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_18]']
jge ['short', 'loc_8504']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?charAt@Replaceable@icu_56@@QBE_WH@Z']
movzx ['ecx,', 'ax']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_8504']
cmp ['[ebp+var_24],', '0']
jle ['short', 'loc_8504']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?charAt@Replaceable@icu_56@@QBE_WH@Z']
movzx ['ecx,', 'ax']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0D800h']
jnz ['short', 'loc_8504']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_18]']
jge ['short', 'loc_8552']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?charAt@Replaceable@icu_56@@QBE_WH@Z']
movzx ['ecx,', 'ax']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0D800h']
jnz ['short', 'loc_8552']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?charAt@Replaceable@icu_56@@QBE_WH@Z']
movzx ['ecx,', 'ax']
and ['ecx,', '0FFFFFC00h']
cmp ['ecx,', '0DC00h']
jnz ['short', 'loc_8552']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
cmp ['[ebp+arg_18],', '0']
setl ['dl']
movzx ['eax,', 'dl']
push ['eax']
lea ['ecx,', '[ebp+var_78]']
call ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_C]']
call ['?length@Replaceable@icu_56@@QBEHXZ']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_84]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+var_24]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_170],', 'ecx']
mov ['[ebp+var_178],', 'eax']
mov ['[ebp+var_174],', 'edx']
mov ['edx,', '[ebp+var_170]']
mov ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+var_174]']
jl ['short', 'loc_85F5']
jg ['short', 'loc_85E9']
mov ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ecx+10h]']
cmp ['edx,', '[ebp+var_178]']
jbe ['short', 'loc_85F5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?invalidateChunk@@YAXPAUUText@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '[ebp+var_90]']
mov ['[ebp+var_9C],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_9C]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_repTextAccess']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_90]']
mov ['[ebp+var_168],', 'eax']
lea ['ecx,', '[ebp+var_78]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
mov ['eax,', '[ebp+var_168]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '178h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN12_0']
dw ['0FFFFh']
dd ['offset', '?_Rank@?$_Arithmetic_traits@N@std@@2HB']
dd ['offset', '$LN11_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?invalidateChunk@@YAXPAUUText@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_repTextCopy	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '178h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_178]']
mov ['ecx,', '5Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+var_C]']
call ['?length@Replaceable@icu_56@@QBEHXZ']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_20]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_873E']
jmp ['loc_8902']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_10]']
jg ['short', 'loc_8774']
jl ['short', 'loc_8750']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
ja ['short', 'loc_8774']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_18]']
jg ['short', 'loc_8782']
jl ['short', 'loc_8762']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_14]']
jnb ['short', 'loc_8782']
mov ['eax,', '[ebp+arg_18]']
cmp ['eax,', '[ebp+arg_10]']
jg ['short', 'loc_8782']
jl ['short', 'loc_8774']
mov ['ecx,', '[ebp+arg_14]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_8782']
mov ['eax,', '[ebp+arg_20]']
mov ['dword', 'ptr', '[eax],', '8']
jmp ['loc_8902']
mov ['eax,', '[ebp+var_18]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_18]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_18]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_14]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_3C],', 'eax']
movsx ['eax,', '[ebp+arg_1C]']
test ['eax,', 'eax']
jz ['short', 'loc_8845']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '[ebp+var_24]']
mov ['[ebp+var_48],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_C]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+var_24]']
jge ['short', 'loc_880E']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '[ebp+var_48]']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '[ebp+var_48]']
mov ['[ebp+var_30],', 'eax']
lea ['ecx,', '[ebp+var_168]']
call ['??0UnicodeString@icu_56@@QAE@XZ']
mov ['esi,', 'esp']
push ['eax']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax+0Ch]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
lea ['ecx,', '[ebp+var_168]']
call ['??1UnicodeString@icu_56@@UAE@XZ']
jmp ['short', 'loc_8867']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_C]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_54],', 'eax']
movsx ['eax,', '[ebp+arg_1C]']
test ['eax,', 'eax']
jz ['short', 'loc_8883']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_54]']
jge ['short', 'loc_8883']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_54]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_174],', 'eax']
mov ['[ebp+var_170],', 'edx']
mov ['[ebp+var_178],', 'ecx']
mov ['edx,', '[ebp+var_178]']
mov ['eax,', '[ebp+var_170]']
cmp ['eax,', '[edx+14h]']
jg ['short', 'loc_88CC']
jl ['short', 'loc_88C0']
mov ['ecx,', '[ebp+var_178]']
mov ['edx,', '[ebp+var_174]']
cmp ['edx,', '[ecx+10h]']
jnb ['short', 'loc_88CC']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?invalidateChunk@@YAXPAUUText@@@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_30]']
sub ['eax,', '[ebp+var_24]']
mov ['[ebp+var_60],', 'eax']
movsx ['eax,', '[ebp+arg_1C]']
test ['eax,', 'eax']
jz ['short', 'loc_88EE']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+var_24]']
jle ['short', 'loc_88EE']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_60],', 'eax']
push ['1']
mov ['eax,', '[ebp+var_60]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_repTextAccess']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '178h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_openReplaceable_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_895A']
xor ['eax,', 'eax']
jmp ['loc_89E8']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_896D']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_89E8']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['16h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_utext_setup_56']
add ['esp,', '0Ch']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_899C']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_89E8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_89D2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', 'offset', '_repFuncs']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+3Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_unistrTextClone proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_shallowTextClone']
add ['esp,', '0Ch']
mov ['[ebp+Dst],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_8ACB']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8ACB']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
push ['40h']
call ['??2UMemory@icu_56@@SAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_8A8B']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_D4]']
call ['??0UnicodeString@icu_56@@QAE@ABV01@@Z']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_8A95']
mov ['[ebp+var_E8],', '0']
mov ['ecx,', '[ebp+var_E8]']
mov ['[ebp+var_E0],', 'ecx']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_E0]']
mov ['[edx+3Ch],', 'eax']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '20h']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '8']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_unistrTextClose proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '20h']
jz ['short', 'loc_8B6D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'ecx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_8B59']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_8B63']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_unistrTextLength proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
cdq
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_unistrTextAccess proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_8C33']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_DC],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
cmp ['ecx,', '[ebp+var_DC]']
jl ['short', 'loc_8C52']
jg ['short', 'loc_8C33']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_E0]']
jb ['short', 'loc_8C52']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_8C49']
cmp ['[ebp+arg_8],', '0']
jg ['short', 'loc_8C52']
jl ['short', 'loc_8C49']
cmp ['[ebp+arg_4],', '0']
ja ['short', 'loc_8C52']
mov ['[ebp+var_E1],', '0']
jmp ['short', 'loc_8C59']
mov ['[ebp+var_E1],', '1']
mov ['cl,', '[ebp+var_E1]']
mov ['[ebp+var_11],', 'cl']
mov ['al,', '[ebp+var_11]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_unistrTextExtract proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8CCA']
xor ['eax,', 'eax']
jmp ['loc_8E22']
cmp ['[ebp+arg_18],', '0']
jl ['short', 'loc_8CDC']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_8CE5']
cmp ['[ebp+arg_18],', '0']
jle ['short', 'loc_8CE5']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '1']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_8D05']
jg ['short', 'loc_8CF3']
cmp ['[ebp+arg_4],', '0']
jb ['short', 'loc_8D05']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_10]']
jl ['short', 'loc_8D15']
jg ['short', 'loc_8D05']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jbe ['short', 'loc_8D15']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_8E22']
mov ['eax,', '[ebp+var_14]']
cdq
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_100],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_100]']
jg ['short', 'loc_8D51']
jl ['short', 'loc_8D3D']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_104]']
jnb ['short', 'loc_8D51']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?getChar32Start@UnicodeString@icu_56@@QBEHH@Z']
mov ['[ebp+var_108],', 'eax']
jmp ['short', 'loc_8D5A']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_108],', 'eax']
mov ['ecx,', '[ebp+var_108]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cdq
mov ['[ebp+var_104],', 'eax']
mov ['[ebp+var_100],', 'edx']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_100]']
jg ['short', 'loc_8D9F']
jl ['short', 'loc_8D8B']
mov ['ecx,', '[ebp+arg_C]']
cmp ['ecx,', '[ebp+var_104]']
jnb ['short', 'loc_8D9F']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?getChar32Start@UnicodeString@icu_56@@QBEHH@Z']
mov ['[ebp+var_108],', 'eax']
jmp ['short', 'loc_8DA8']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_108],', 'eax']
mov ['ecx,', '[ebp+var_108]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+arg_18],', '0']
jle ['short', 'loc_8DFE']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_8DFE']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+arg_18]']
jle ['short', 'loc_8DDA']
mov ['eax,', '[ebp+arg_18]']
mov ['[ebp+var_38],', 'eax']
push ['0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?extract@UnicodeString@icu_56@@QBEXHHPA_WH@Z']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
jmp ['short', 'loc_8E07']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+28h],', 'ecx']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_unistrTextReplace proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8E7B']
xor ['eax,', 'eax']
jmp ['loc_8F80']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_8E90']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_8E90']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_10]']
jl ['short', 'loc_8EB2']
jg ['short', 'loc_8EA2']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jbe ['short', 'loc_8EB2']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_8F80']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_8EFE']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getChar32Start@UnicodeString@icu_56@@QBEHH@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_8F15']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getChar32Start@UnicodeString@icu_56@@QBEHH@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+30h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_38]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_14]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
mov ['eax,', '[ebp+var_44]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_unistrTextCopy	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_20]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8FE0']
jmp ['loc_912D']
mov ['eax,', '[ebp+var_14]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_14]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_14]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_2C]']
jg ['short', 'loc_9037']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_9045']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_9045']
mov ['eax,', '[ebp+arg_20]']
mov ['dword', 'ptr', '[eax],', '8']
jmp ['loc_912D']
movsx ['eax,', '[ebp+arg_1C]']
test ['eax,', 'eax']
jz ['short', 'loc_909F']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_44],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_9089']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_44]']
mov ['[ebp+var_20],', 'eax']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?replace@UnicodeString@icu_56@@QAEAAV12@HHPB_WH@Z']
jmp ['short', 'loc_90C1']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+30h],', 'eax']
movsx ['eax,', '[ebp+arg_1C]']
test ['eax,', 'eax']
jnz ['short', 'loc_9105']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+2Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+2Ch],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+2Ch]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
movsx ['eax,', '[ebp+arg_1C]']
test ['eax,', 'eax']
jz ['short', 'loc_912D']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_20]']
jle ['short', 'loc_912D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+28h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_openUnicodeString_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_utext_openConstUnicodeString_56']
add ['esp,', '0Ch']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_919D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_openConstUnicodeString_56 proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_921D']
mov ['ecx,', '[ebp+arg_4]']
call ['?isBogus@UnicodeString@icu_56@@QBECXZ']
movsx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_921D']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_utext_openUChars_56']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_92B0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_utext_setup_56']
add ['esp,', '0Ch']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_92AD']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', 'offset', '_unistrFuncs']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+3Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '4']
mov ['ecx,', '[ebp+arg_4]']
call ['?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+30h],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@UnicodeString@icu_56@@QBEHXZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+2Ch],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+2Ch]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucstrTextClone	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_shallowTextClone']
add ['esp,', '0Ch']
mov ['[ebp+Dst],', 'eax']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['loc_9454']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_9454']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_FC],', 'eax']
mov ['[ebp+var_F8],', 'edx']
cmp ['[ebp+var_F8],', '0']
jl ['short', 'loc_9373']
jg ['short', 'loc_934D']
cmp ['[ebp+var_FC],', '7FFFFFFFh']
jb ['short', 'loc_9373']
mov ['ecx,', 'ds:?__LINE__Var@?1??ucstrTextClone@@9@4JA@8d672338']
add ['ecx,', '0Ah']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1FC@DHKAKMO@?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA_?$AA5?$AA6?$AA?$CI?$AAd?$AAe?$AAs?$AAt?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_utext_nativeLength_56']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_93B2']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
jmp ['loc_9454']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_93D4']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_2C]']
adc ['ecx,', '0']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['[ebp+var_FC],', 'eax']
mov ['[ebp+var_F8],', 'edx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_F8]']
jg ['short', 'loc_9430']
jl ['short', 'loc_93FC']
mov ['ecx,', '[ebp+var_30]']
cmp ['ecx,', '[ebp+var_FC]']
jnb ['short', 'loc_9430']
push ['0']
push ['2']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['__allmul']
mov ['esi,', 'eax']
push ['0']
push ['2']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
call ['__allmul']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_14]']
mov ['dx,', '[edx+esi]']
mov ['[ecx+eax],', 'dx']
jmp ['short', 'loc_93C2']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+3Ch],', 'ecx']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '20h']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FC@DHKAKMO@?$AAu?$AAt?$AAe?$AAx?$AAt?$AA_?$AAn?$AAa?$AAt?$AAi?$AAv?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA_?$AA5?$AA6?$AA?$CI?$AAd?$AAe?$AAs?$AAt?$AA?$CJ?$AA?5?$AA?$DM?$AA?5?$AA0?$AAx@']
unicode ['0,', '<utext_nativeLength_56(dest)', '>']
dw ['3Ch']
unicode ['0,', '<', '0x7fffffff>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??ucstrTextClone@@9@4JA@8d672338']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucstrTextClose	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '20h']
jz ['short', 'loc_950C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+3Ch],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucstrTextLength proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_D0],', 'eax']
mov ['ecx,', '[ebp+var_D0]']
cmp ['dword', 'ptr', '[ecx+54h],', '0']
jg ['loc_95E2']
jl ['short', 'loc_9565']
mov ['edx,', '[ebp+var_D0]']
cmp ['dword', 'ptr', '[edx+50h],', '0']
jnb ['short', 'loc_95E2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['0']
push ['2']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[eax+10h]']
push ['edx']
call ['__allmul']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jnz ['short', 'loc_958F']
jmp ['short', 'loc_95A9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1']
mov ['edx,', '[eax+14h]']
adc ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+10h],', 'ecx']
mov ['[eax+14h],', 'edx']
jmp ['short', 'loc_956E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+50h],', 'edx']
mov ['ecx,', '[ecx+14h]']
mov ['[eax+54h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFFDh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+50h]']
mov ['edx,', '[ecx+54h]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucstrTextAccess proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F8]']
mov ['ecx,', '3Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jg ['short', 'loc_9648']
jl ['short', 'loc_9635']
cmp ['[ebp+arg_4],', '0']
jnb ['short', 'loc_9648']
mov ['[ebp+arg_4],', '0']
mov ['[ebp+arg_8],', '0']
jmp ['$breakout$37535']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_F4],', 'eax']
mov ['ecx,', '[ebp+var_F4]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+14h]']
jg ['loc_96E6']
jl ['short', 'loc_9673']
mov ['eax,', '[ebp+var_F4]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+10h]']
jnb ['short', 'loc_96E6']
push ['0']
push ['2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['__allmul']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+eax]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_96E1']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_96E1']
jg ['short', 'loc_96A5']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_96E1']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
sbb ['ecx,', '0']
push ['0']
push ['2']
push ['ecx']
push ['eax']
call ['__allmul']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+eax]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_96E1']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
sbb ['ecx,', '0']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'ecx']
jmp ['$breakout$37535']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_F4],', 'eax']
mov ['ecx,', '[ebp+var_F4]']
cmp ['dword', 'ptr', '[ecx+54h],', '0']
jl ['short', 'loc_971D']
jg ['short', 'loc_9709']
mov ['edx,', '[ebp+var_F4]']
cmp ['dword', 'ptr', '[edx+50h],', '0']
jb ['short', 'loc_971D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[eax+54h]']
mov ['[ebp+arg_8],', 'edx']
jmp ['$breakout$37535']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '20h']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '20h']
mov ['ecx,', '[ebp+arg_8]']
adc ['ecx,', '0']
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_F4],', 'ecx']
cmp ['[ebp+var_F4],', '0']
jg ['short', 'loc_9781']
jl ['short', 'loc_9755']
cmp ['[ebp+var_F8],', '7FFFFFFFh']
ja ['short', 'loc_9781']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '20h']
mov ['ecx,', '[ebp+arg_8]']
adc ['ecx,', '0']
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_F4],', 'ecx']
cmp ['[ebp+var_F4],', '0']
jg ['short', 'loc_9788']
jl ['short', 'loc_9781']
cmp ['[ebp+var_F8],', '0']
jnb ['short', 'loc_9788']
mov ['[ebp+var_14],', '7FFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_979C']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jge ['loc_98A6']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
test ['edx,', 'edx']
jnz ['loc_98A1']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+50h],', 'eax']
mov ['[ecx+54h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_F4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_F4]']
jl ['short', 'loc_980D']
jg ['short', 'loc_9801']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_F8]']
jb ['short', 'loc_980D']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
jmp ['short', 'loc_987B']
push ['0']
push ['2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['__allmul']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+eax]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_987B']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_987B']
jg ['short', 'loc_983F']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_987B']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
sbb ['ecx,', '0']
push ['0']
push ['2']
push ['ecx']
push ['eax']
call ['__allmul']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+eax]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_987B']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
sbb ['ecx,', '0']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFFDh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
jmp ['$breakout$37535']
jmp ['$breakout$37535']
jmp ['loc_9793']
push ['0']
push ['2']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['__allmul']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+eax]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_9914']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_9914']
jg ['short', 'loc_98D8']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_9914']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
sbb ['ecx,', '0']
push ['0']
push ['2']
push ['ecx']
push ['eax']
call ['__allmul']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+eax]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_9914']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
sbb ['ecx,', '0']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+var_20],', '7FFFFFFFh']
jnz ['short', 'loc_998C']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+50h],', 'eax']
mov ['[ecx+54h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['[ebp+var_F8],', 'eax']
mov ['[ebp+var_F4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_F4]']
jl ['short', 'loc_996E']
jg ['short', 'loc_9964']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_F8]']
jbe ['short', 'loc_996E']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '0FFFFFFFDh']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
jmp ['short', '$breakout$37535']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_99AE']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+2Ch],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_9A03']
jg ['short', 'loc_99DE']
cmp ['[ebp+arg_4],', '7FFFFFFFh']
jbe ['short', 'loc_9A03']
mov ['eax,', 'ds:?__LINE__Var@?1??ucstrTextAccess@@9@4JA@8d672338']
add ['eax,', '4Eh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1CE@DHOOMOBN@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?$DM?$AA?$DN?$AA0?$AAx?$AA7?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AAf?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_9A3B']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_F4],', 'ecx']
mov ['edx,', '[ebp+var_F4]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+14h]']
jl ['short', 'loc_9A5A']
jg ['short', 'loc_9A3B']
mov ['ecx,', '[ebp+var_F4]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+10h]']
jb ['short', 'loc_9A5A']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_9A51']
cmp ['[ebp+arg_8],', '0']
jg ['short', 'loc_9A5A']
jl ['short', 'loc_9A51']
cmp ['[ebp+arg_4],', '0']
ja ['short', 'loc_9A5A']
mov ['byte', 'ptr', '[ebp+var_F8+3],', '0']
jmp ['short', 'loc_9A61']
mov ['byte', 'ptr', '[ebp+var_F8+3],', '1']
mov ['cl,', 'byte', 'ptr', '[ebp+var_F8+3]']
mov ['[ebp+var_29],', 'cl']
mov ['al,', '[ebp+var_29]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??ucstrTextAccess@@9@4JA@8d672338']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_ucstrTextExtract proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9AC2']
xor ['eax,', 'eax']
jmp ['loc_9CDB']
cmp ['[ebp+arg_18],', '0']
jl ['short', 'loc_9AE6']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_9AD4']
cmp ['[ebp+arg_18],', '0']
jg ['short', 'loc_9AE6']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_10]']
jl ['short', 'loc_9AF6']
jg ['short', 'loc_9AE6']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jbe ['short', 'loc_9AF6']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_9CDB']
push ['1']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ucstrTextAccess']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+30h]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+var_44],', 'ecx']
cmp ['[ebp+var_44],', '0']
jl ['short', 'loc_9B44']
mov ['eax,', '[ebp+var_44]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_9B5A']
push ['0']
push ['7FFFFFFFh']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_9B72']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_2C]']
jge ['loc_9C34']
cmp ['[ebp+var_44],', '0']
jge ['short', 'loc_9BC6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
test ['edx,', 'edx']
jnz ['short', 'loc_9BC6']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+50h],', 'eax']
mov ['[ecx+54h],', 'edx']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+2Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_9C34']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_9BF1']
mov ['eax,', 'ds:?__LINE__Var@?1??ucstrTextExtract@@9@4JA@8d672338']
add ['eax,', '27h']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1M@FKAEOMMA@?$AAd?$AAi?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_18]']
jge ['short', 'loc_9C0F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_38]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_9C26']
cmp ['[ebp+var_44],', '0']
jl ['short', 'loc_9C26']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_9C34']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_9B69']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_9CA7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_9CA7']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_44]']
jl ['short', 'loc_9C61']
cmp ['[ebp+var_44],', '0']
jge ['short', 'loc_9CA7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0DC00h']
jnz ['short', 'loc_9CA7']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_18]']
jge ['short', 'loc_9CA7']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_38]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+arg_18]']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_uprv_min_56']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1M@FKAEOMMA@?$AAd?$AAi?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@']
unicode ['0,', '<di>']
dw ['3Eh']
unicode ['0,', '<=0>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??ucstrTextExtract@@9@4JA@8d672338']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_openUChars_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C8]']
mov ['ecx,', '32h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_9D3A']
xor ['eax,', 'eax']
jmp ['loc_9E82']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_9D4F']
mov ['eax,', '[ebp+arg_8]']
or ['eax,', '[ebp+arg_C]']
jnz ['short', 'loc_9D4F']
mov ['[ebp+arg_4],', 'offset', '_gEmptyUString']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_9D74']
cmp ['[ebp+arg_C],', '0FFFFFFFFh']
jl ['short', 'loc_9D74']
jg ['short', 'loc_9D63']
cmp ['[ebp+arg_8],', '0FFFFFFFFh']
jb ['short', 'loc_9D74']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_9D84']
jg ['short', 'loc_9D74']
cmp ['[ebp+arg_8],', '7FFFFFFFh']
jbe ['short', 'loc_9D84']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_9E82']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_utext_setup_56']
add ['esp,', '0Ch']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_9E7F']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', 'offset', '_ucstrFuncs']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+3Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '4']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '[ebp+arg_C]']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_9DE9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+50h],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[eax+54h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+30h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['dword', 'ptr', '[eax+24h],', '0']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_9E34']
jg ['short', 'loc_9E20']
cmp ['[ebp+arg_8],', '0']
jb ['short', 'loc_9E34']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+var_C4],', 'ecx']
jmp ['short', 'loc_9E48']
mov ['[ebp+var_C8],', '0']
mov ['[ebp+var_C4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C8]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_C4]']
mov ['[edx+14h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_charIterTextClose proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+48h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_D4],', 'eax']
mov ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_E0],', 'ecx']
cmp ['[ebp+var_E0],', '0']
jz ['short', 'loc_9F02']
mov ['esi,', 'esp']
push ['1']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[eax]']
call ['edx']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_E8],', 'eax']
jmp ['short', 'loc_9F0C']
mov ['[ebp+var_E8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+48h],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_charIterTextLength proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+50h]']
cdq
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_charIterTextAccess proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_9F94']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_9FDA']
mov ['eax,', '[ebp+var_14]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_118],', 'edx']
mov ['[ebp+var_120],', 'ecx']
mov ['edx,', '[ebp+var_120]']
mov ['eax,', '[ebp+var_118]']
cmp ['eax,', '[edx+54h]']
jl ['short', 'loc_9FDA']
jg ['short', 'loc_9FD1']
mov ['ecx,', '[ebp+var_120]']
mov ['edx,', '[ebp+var_11C]']
cmp ['edx,', '[ecx+50h]']
jb ['short', 'loc_9FDA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jnz ['short', 'loc_9FF9']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_9FF9']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_A04B']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_A04B']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_118],', 'edx']
mov ['[ebp+var_120],', 'ecx']
mov ['edx,', '[ebp+var_120]']
mov ['eax,', '[ebp+var_11C]']
cmp ['eax,', '[edx+50h]']
jnz ['short', 'loc_A04B']
mov ['ecx,', '[ebp+var_120]']
mov ['edx,', '[ebp+var_118]']
cmp ['edx,', '[ecx+54h]']
jnz ['short', 'loc_A04B']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_A04B']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '8000000Fh']
jns ['short', 'loc_A05A']
dec ['eax']
or ['eax,', '0FFFFFFF0h']
inc ['eax']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_35],', '1']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_118],', 'ecx']
mov ['[ebp+var_120],', 'eax']
mov ['[ebp+var_11C],', 'edx']
mov ['edx,', '[ebp+var_118]']
mov ['eax,', '[edx+20h]']
cmp ['eax,', '[ebp+var_120]']
jnz ['short', 'loc_A0B1']
mov ['ecx,', '[ebp+var_118]']
mov ['edx,', '[ecx+24h]']
cmp ['edx,', '[ebp+var_11C]']
jnz ['short', 'loc_A0B1']
mov ['[ebp+var_35],', '0']
jmp ['loc_A199']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_A0CA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+40h]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['loc_A199']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_A0E3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_2C],', 'ecx']
jmp ['loc_A199']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+40h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+40h]']
cmp ['edx,', '[ecx+30h]']
jnz ['short', 'loc_A103']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+38h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', '0']
jmp ['short', 'loc_A12F']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '10h']
jge ['short', 'loc_A199']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_11C],', 'eax']
mov ['[ebp+var_118],', 'edx']
mov ['[ebp+var_120],', 'ecx']
mov ['edx,', '[ebp+var_120]']
mov ['eax,', '[ebp+var_118]']
cmp ['eax,', '[edx+54h]']
jl ['short', 'loc_A197']
jg ['short', 'loc_A195']
mov ['ecx,', '[ebp+var_120]']
mov ['edx,', '[ebp+var_11C]']
cmp ['edx,', '[ecx+50h]']
jbe ['short', 'loc_A197']
jmp ['short', 'loc_A199']
jmp ['short', 'loc_A126']
movsx ['eax,', '[ebp+var_35]']
test ['eax,', 'eax']
jz ['loc_A27B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+30h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2Ch],', '10h']
mov ['eax,', '[ebp+var_20]']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '10h']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_118],', 'eax']
mov ['[ebp+var_11C],', 'ecx']
mov ['edx,', '[ebp+var_118]']
mov ['eax,', '[ebp+var_11C]']
mov ['ecx,', '[edx+14h]']
cmp ['ecx,', '[eax+54h]']
jl ['short', 'loc_A237']
jg ['short', 'loc_A211']
mov ['edx,', '[ebp+var_118]']
mov ['eax,', '[ebp+var_11C]']
mov ['ecx,', '[edx+10h]']
cmp ['ecx,', '[eax+50h]']
jbe ['short', 'loc_A237']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ecx+54h]']
mov ['[eax+14h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+2Ch]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jl ['short', 'loc_A255']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+28h],', '10h']
jle ['short', 'loc_A27B']
mov ['edx,', 'ds:?__LINE__Var@?1??charIterTextAccess@@9@4JA@8d672338']
add ['edx,', '3Eh']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1FE@MMBHBCHK@?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAO@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'edx']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['short', 'loc_A2AD']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+28h]']
xor ['ecx,', 'ecx']
cmp ['eax,', '[edx+2Ch]']
setl ['cl']
mov ['[ebp+var_118],', 'ecx']
jmp ['short', 'loc_A2BF']
mov ['edx,', '[ebp+arg_0]']
xor ['eax,', 'eax']
cmp ['dword', 'ptr', '[edx+28h],', '0']
setnle ['al']
mov ['[ebp+var_118],', 'eax']
mov ['cl,', 'byte', 'ptr', '[ebp+var_118]']
mov ['[ebp+var_4D],', 'cl']
mov ['al,', '[ebp+var_4D]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1FE@MMBHBCHK@?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?$DO?$AA?$DN?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAu?$AAt?$AA?9?$AA?$DO?$AAc?$AAh?$AAu?$AAn?$AAk?$AAO@']
unicode ['0,', '<ut->']
dw ['3Eh']
unicode ['0,', '<chunkOffset>']
dw ['3Eh']
unicode ['0,', '<=0', '&&', 'ut->']
dw ['3Eh']
unicode ['0,', '<chunkOffset>']
dw ['3Ch']
unicode ['0,', '<=16>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??charIterTextAccess@@9@4JA@8d672338']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_charIterTextClone proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A372']
xor ['eax,', 'eax']
jmp ['loc_A414']
movsx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_A38F']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_A414']
jmp ['loc_A411']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_utext_openCharacterIterator_56']
add ['esp,', '0Ch']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A3E2']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_A414']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_utext_getNativeIndex_56']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_utext_setNativeIndex_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+48h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_charIterTextExtract proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '12Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_12C]']
mov ['ecx,', '4Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_1C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A462']
xor ['eax,', 'eax']
jmp ['loc_A630']
cmp ['[ebp+arg_18],', '0']
jl ['short', 'loc_A486']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_A474']
cmp ['[ebp+arg_18],', '0']
jg ['short', 'loc_A486']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_10]']
jl ['short', 'loc_A496']
jg ['short', 'loc_A486']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jbe ['short', 'loc_A496']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_A630']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
cdq
push ['edx']
push ['eax']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['?pinIndex@@YAHAA_J_J@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_50],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_50]']
mov ['eax,', '[edx+3Ch]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_50]']
call ['?getIndex@CharacterIterator@icu_56@@QBEHXZ']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_20]']
jge ['loc_A601']
mov ['eax,', '[ebp+var_50]']
mov ['edx,', '[eax]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_50]']
mov ['eax,', '[edx+14h]']
call ['eax']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '0FFFFh']
cmp ['eax,', '[ebp+var_5C]']
sbb ['ecx,', 'ecx']
neg ['ecx']
add ['ecx,', '1']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_68]']
test ['eax,', 'eax']
jg ['short', 'loc_A56B']
mov ['ecx,', 'ds:?__LINE__Var@?1??charIterTextExtract@@9@4JA@8d672338']
add ['ecx,', '16h']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FI@DOHBLNEC@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1BI@DBALLOBD@?$AAd?$AAe?$AAs?$AAt?$AAi?$AA?$CL?$AAl?$AAe?$AAn?$AA?$DO?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+arg_18]']
jg ['short', 'loc_A5E1']
cmp ['[ebp+var_5C],', '0FFFFh']
ja ['short', 'loc_A598']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_14]']
mov ['dx,', 'word', 'ptr', '[ebp+var_5C]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_A5D6']
mov ['eax,', '[ebp+var_5C]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+arg_14]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_A5F3']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_1C]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_A504']
push ['1']
mov ['eax,', '[ebp+var_44]']
cdq
push ['edx']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_charIterTextAccess']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_2C]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '12Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_1BI@DBALLOBD@?$AAd?$AAe?$AAs?$AAt?$AAi?$AA?$CL?$AAl?$AAe?$AAn?$AA?$DO?$AA0?$AA?$AA@']
unicode ['0,', '<desti+len>']
dw ['3Eh']
unicode ['0,', '<0>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??charIterTextExtract@@9@4JA@8d672338']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_utext_openCharacterIterator_56	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_A69A']
xor ['eax,', 'eax']
jmp ['loc_A79C']
mov ['ecx,', '[ebp+arg_4]']
call ['?startIndex@CharacterIterator@icu_56@@QBEHXZ']
test ['eax,', 'eax']
jle ['short', 'loc_A6B6']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_A79C']
mov ['[ebp+var_8],', '40h']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_utext_setup_56']
add ['esp,', '0Ch']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_A799']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+34h],', 'offset', '_charIterFuncs']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+3Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_4]']
call ['?endIndex@CharacterIterator@icu_56@@QBEHXZ']
cdq
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+50h],', 'eax']
mov ['[ecx+54h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+40h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+58h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+38h]']
add ['ecx,', '20h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+44h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+5Ch],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+40h]']
mov ['[eax+30h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0FFFFFFFFh']
mov ['dword', 'ptr', '[eax+24h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+28h],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+2Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+14h]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_A89A']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_D0],', 'edx']
jmp ['short', 'loc_A8A6']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['??_7type_info@@6B@:near']
extrn ['?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:near']
extrn ['??3UMemory@icu_56@@SAXPAX@Z:near']
extrn ['??1UObject@icu_56@@UAE@XZ:near']
extrn ['__RTC_CheckEsp:near']
extrn ['??_VUMemory@icu_56@@SAXPAX@Z:near']
extrn ['??_M@YGXPAXIHP6EX0@Z@Z:near']
extrn ['__purecall:near']
extrn ['?hasMetaData@Replaceable@icu_56@@UBECXZ:near']
extrn ['?clone@Replaceable@icu_56@@UBEPAV12@XZ:near']
extrn ['??1Replaceable@icu_56@@UAE@XZ:near']
extrn ['??0StringPiece@icu_56@@QAE@ABV01@HH@Z:near']
extrn ['?GetAppendBuffer@ByteSink@icu_56@@UAEPADHHPADHPAH@Z:near']
extrn ['?Flush@ByteSink@icu_56@@UAEXXZ:near']
extrn ['??1ByteSink@icu_56@@UAE@XZ:near']
extrn ['?moveFrom@UnicodeString@icu_56@@QAEAAV12@AAV12@@Z:near']
extrn ['?swap@UnicodeString@icu_56@@QAEXAAV12@@Z:near']
extrn ['??1UnicodeString@icu_56@@UAE@XZ:near']
extrn ['?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:near']
extrn ['?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:near']
extrn ['?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:near']
extrn ['?copy@UnicodeString@icu_56@@UAEXHHH@Z:near']
extrn ['?hasMetaData@UnicodeString@icu_56@@UBECXZ:near']
extrn ['?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:near']
extrn ['?getLength@UnicodeString@icu_56@@MBEHXZ:near']
extrn ['?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:near']
extrn ['?getChar32At@UnicodeString@icu_56@@MBEHH@Z:near']
extrn ['?doHashCode@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?refCount@UnicodeString@icu_56@@ABEHXZ:near']
extrn ['?doCompare@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doEquals@UnicodeString@icu_56@@ABECABV12@H@Z:near']
extrn ['?doCompareCodePointOrder@UnicodeString@icu_56@@ABECHHPB_WHH@Z:near']
extrn ['?doCaseCompare@UnicodeString@icu_56@@ABECHHPB_WHHI@Z:near']
extrn ['?indexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['?lastIndexOf@UnicodeString@icu_56@@QBEHPB_WHHHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEH_WHH@Z:near']
extrn ['?doLastIndexOf@UnicodeString@icu_56@@ABEHHHH@Z:near']
extrn ['_u_strlen_56:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHABV12@HH@Z:near']
extrn ['?doReplace@UnicodeString@icu_56@@AAEAAV12@HHPB_WHH@Z:near']
extrn ['?findAndReplace@UnicodeString@icu_56@@QAEAAV12@HHABV12@HH0HH@Z:near']
extrn ['?doExtract@UnicodeString@icu_56@@ABEXHHPA_WH@Z:near']
extrn ['?extract@UnicodeString@icu_56@@QBEHHHPADIPBD@Z:near']
extrn ['?tempSubString@UnicodeString@icu_56@@QBE?AV12@HH@Z:near']
extrn ['?replace@UnicodeString@icu_56@@QAEAAV12@HHH@Z:near']
extrn ['?unBogus@UnicodeString@icu_56@@AAEXXZ:near']
extrn ['?copyFrom@UnicodeString@icu_56@@AAEAAV12@ABV12@C@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@ABV12@HH@Z:near']
extrn ['?doAppend@UnicodeString@icu_56@@AAEAAV12@PB_WHH@Z:near']
extrn ['?append@UnicodeString@icu_56@@QAEAAV12@H@Z:near']
extrn ['?doReverse@UnicodeString@icu_56@@AAEAAV12@HH@Z:near']
extrn ['__imp___wassert:near']
extrn ['_memset:near']
extrn ['_uprv_free_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_utf8_prevCharSafeBody_56:near']
extrn ['_utf8_nextCharSafeBody_56:near']
extrn ['_utf8_back1SafeBody_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_u_terminateUChars_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['??0UnicodeString@icu_56@@QAE@PA_WHH@Z:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['??0UnicodeString@icu_56@@QAE@CPB_WH@Z:near']
extrn ['??0UnicodeString@icu_56@@QAE@ABV01@@Z:near']
extrn ['??2UMemory@icu_56@@SAPAXI@Z:near']
extrn ['?getChar32Start@UnicodeString@icu_56@@QBEHH@Z:near']
extrn ['__allmul:near']
extrn ['_uprv_min_56:near']
end

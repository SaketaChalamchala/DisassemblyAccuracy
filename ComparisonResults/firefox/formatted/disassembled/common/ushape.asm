endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_shapeArabic_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '42Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_42C]']
mov ['ecx,', '10Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '200Bh']
mov ['word', 'ptr', '[ebp+var_2C],', 'ax']
mov ['[ebp+var_28],', '3']
mov ['[ebp+var_24],', '2']
mov ['[ebp+var_20],', '40000h']
mov ['[ebp+var_1C],', '60000h']
mov ['[ebp+var_18],', '0']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_6F3']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6FA']
xor ['eax,', 'eax']
jmp ['loc_125F']
cmp ['[ebp+Src],', '0']
jz ['loc_788']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jl ['short', 'loc_788']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_716']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_788']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_788']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
jbe ['short', 'loc_731']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '18h']
cmp ['eax,', '18h']
jz ['short', 'loc_788']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
jbe ['short', 'loc_746']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '18h']
cmp ['eax,', '10h']
jz ['short', 'loc_788']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '200h']
jnz ['short', 'loc_788']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0h']
cmp ['eax,', '0A0h']
jz ['short', 'loc_788']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '10003h']
jz ['short', 'loc_773']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4000h']
jnz ['short', 'loc_788']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4000h']
jz ['short', 'loc_798']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '18h']
cmp ['eax,', '18h']
jz ['short', 'loc_798']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_125F']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '10003h']
jbe ['short', 'loc_7F2']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '10003h']
cmp ['eax,', '3']
jz ['short', 'loc_7F2']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '10003h']
cmp ['eax,', '2']
jz ['short', 'loc_7F2']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '10003h']
jz ['short', 'loc_7F2']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '10003h']
cmp ['eax,', '10000h']
jz ['short', 'loc_7F2']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '10003h']
cmp ['eax,', '1']
jz ['short', 'loc_7F2']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_125F']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
jbe ['short', 'loc_848']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
cmp ['eax,', '40000h']
jz ['short', 'loc_848']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
cmp ['eax,', '60000h']
jz ['short', 'loc_848']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
cmp ['eax,', '80000h']
jz ['short', 'loc_848']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
cmp ['eax,', '0C0000h']
jz ['short', 'loc_848']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_125F']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jnz ['short', 'loc_85D']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jg ['short', 'loc_87E']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
jmp ['loc_125F']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_8C0']
mov ['eax,', '[ebp+Src]']
cmp ['eax,', '[ebp+arg_8]']
ja ['short', 'loc_89A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+Src]']
lea ['edx,', '[ecx+eax*2]']
cmp ['[ebp+arg_8],', 'edx']
jb ['short', 'loc_8B0']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Src]']
ja ['short', 'loc_8C0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*2]']
cmp ['[ebp+Src],', 'edx']
jnb ['short', 'loc_8C0']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_125F']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '8000000h']
jz ['short', 'loc_8D5']
mov ['eax,', '0FE73h']
mov ['word', 'ptr', '[ebp+var_2C],', 'ax']
jmp ['short', 'loc_8DE']
mov ['eax,', '200Bh']
mov ['word', 'ptr', '[ebp+var_2C],', 'ax']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '18h']
jz ['loc_1044']
mov ['[ebp+var_2A4],', '0']
mov ['[ebp+var_2BC],', '0']
mov ['[ebp+var_2C8],', '0']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4000h']
jbe ['loc_BD6']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4']
neg ['eax']
sbb ['eax,', 'eax']
add ['eax,', '1']
mov ['[ebp+var_2D4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4018h']
xor ['ecx,', 'ecx']
cmp ['eax,', '4018h']
setz ['cl']
mov ['[ebp+var_2E0],', 'ecx']
xor ['eax,', 'eax']
cmp ['[ebp+var_2D4],', '0']
setnz ['al']
lea ['eax,', '[eax+eax-1]']
mov ['[ebp+var_2EC],', 'eax']
cmp ['[ebp+var_2D4],', '0']
jz ['short', 'loc_96C']
mov ['[ebp+var_42C],', '0FFFFFFFFh']
jmp ['short', 'loc_977']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
mov ['[ebp+var_42C],', 'eax']
mov ['ecx,', '[ebp+var_42C]']
mov ['[ebp+var_2F8],', 'ecx']
cmp ['[ebp+var_2D4],', '0']
jz ['short', 'loc_998']
mov ['[ebp+var_42C],', '0FFFFFFFFh']
jmp ['short', 'loc_9A1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_42C],', 'eax']
mov ['ecx,', '[ebp+var_42C]']
mov ['[ebp+var_304],', 'ecx']
cmp ['[ebp+var_2D4],', '0']
jz ['short', 'loc_9C1']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_42C],', 'eax']
jmp ['short', 'loc_9CB']
mov ['[ebp+var_42C],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_42C]']
mov ['[ebp+var_310],', 'ecx']
mov ['[ebp+var_31C],', '1']
xor ['eax,', 'eax']
mov ['[ebp+var_328],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_340],', 'ax']
mov ['[ebp+var_34C],', '0']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_2A4],', 'eax']
cmp ['[ebp+var_2A4],', '0']
jnz ['short', 'loc_A2C']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_125F']
mov ['eax,', '[ebp+var_304]']
add ['eax,', '[ebp+var_2EC]']
mov ['[ebp+var_304],', 'eax']
mov ['ecx,', '[ebp+var_304]']
cmp ['ecx,', '[ebp+var_310]']
jz ['loc_B9A']
mov ['ax,', '[ebp+var_340]']
mov ['[ebp+var_334],', 'ax']
mov ['eax,', '[ebp+var_304]']
mov ['ecx,', '[ebp+Src]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?getLink@@YA_W_W@Z']
add ['esp,', '4']
mov ['[ebp+var_340],', 'ax']
cmp ['[ebp+var_2E0],', '0']
jz ['loc_B39']
movzx ['eax,', '[ebp+var_334]']
movzx ['ecx,', '[ebp+var_340]']
or ['eax,', 'ecx']
and ['eax,', '0C0h']
cmp ['eax,', '0C0h']
jnz ['loc_B39']
cmp ['[ebp+var_31C],', '0']
jz ['loc_B39']
mov ['[ebp+var_31C],', '0']
movzx ['eax,', '[ebp+var_328]']
mov ['ecx,', '[ebp+var_304]']
mov ['edx,', '[ebp+Src]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_AE7']
mov ['dx,', '[ebp+var_328]']
mov ['word', 'ptr', '[ebp+var_42C+2],', 'dx']
jmp ['short', 'loc_AFB']
mov ['eax,', '[ebp+var_304]']
mov ['ecx,', '[ebp+Src]']
mov ['dx,', '[ecx+eax*2]']
mov ['word', 'ptr', '[ebp+var_42C+2],', 'dx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_42C+2]']
add ['eax,', '0F612h']
mov ['ecx,', '[ebp+var_2F8]']
mov ['edx,', '[ebp+var_2A4]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_2F8]']
mov ['ecx,', '[ebp+var_2A4]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?getLink@@YA_W_W@Z']
add ['esp,', '4']
mov ['[ebp+var_340],', 'ax']
jmp ['short', 'loc_B95']
mov ['[ebp+var_31C],', '1']
mov ['eax,', '[ebp+var_2F8]']
add ['eax,', '[ebp+var_2EC]']
mov ['[ebp+var_2F8],', 'eax']
mov ['ecx,', '[ebp+var_2F8]']
mov ['edx,', '[ebp+var_2A4]']
mov ['eax,', '[ebp+var_304]']
mov ['esi,', '[ebp+Src]']
mov ['ax,', '[esi+eax*2]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_304]']
mov ['ecx,', '[ebp+Src]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_328],', 'dx']
mov ['eax,', '[ebp+var_34C]']
add ['eax,', '1']
mov ['[ebp+var_34C],', 'eax']
jmp ['loc_A2C']
cmp ['[ebp+var_2D4],', '0']
jz ['short', 'loc_BAF']
mov ['[ebp+var_42C],', '0']
jmp ['short', 'loc_BBB']
mov ['eax,', '[ebp+var_2F8]']
mov ['[ebp+var_42C],', 'eax']
mov ['ecx,', '[ebp+var_42C]']
mov ['edx,', '[ebp+var_2A4]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+var_34C]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '10003h']
jz ['short', 'loc_BEF']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
cmp ['eax,', '80000h']
jnz ['short', 'loc_C0F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['?calculateSize@@YAHPB_WHHI@Z']
add ['esp,', '10h']
mov ['[ebp+var_2B0],', 'eax']
jmp ['short', 'loc_C18']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_2B0],', 'eax']
mov ['eax,', '[ebp+var_2B0]']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_C4F']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
cmp ['[ebp+var_2A4],', '0']
jz ['short', 'loc_C44']
mov ['eax,', '[ebp+var_2A4]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_2B0]']
jmp ['loc_125F']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_2B0]']
jle ['short', 'loc_C63']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_2B0],', 'eax']
cmp ['[ebp+var_2B0],', '12Ch']
jg ['short', 'loc_C87']
mov ['[ebp+var_2B0],', '12Ch']
lea ['eax,', '[ebp+var_28C]']
mov ['[ebp+Dst],', 'eax']
jmp ['short', 'loc_CCF']
mov ['eax,', '[ebp+var_2B0]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_CCF']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '7']
cmp ['[ebp+var_2A4],', '0']
jz ['short', 'loc_CC8']
mov ['eax,', '[ebp+var_2A4]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
xor ['eax,', 'eax']
jmp ['loc_125F']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
cmp ['[ebp+var_2A4],', '0']
jz ['short', 'loc_D0E']
mov ['eax,', '[ebp+var_2A4]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_2B0]']
jge ['short', 'loc_D3C']
mov ['eax,', '[ebp+var_2B0]']
sub ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+Dst]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4']
jnz ['short', 'loc_D8E']
lea ['eax,', '[ebp+var_2C8]']
push ['eax']
lea ['ecx,', '[ebp+var_2BC]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?countSpaces@@YAXPA_WHIPAH1@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_2C8]']
push ['eax']
mov ['ecx,', '[ebp+var_2BC]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?invertBuffer@@YAXPA_WHIHH@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4']
jz ['short', 'loc_DC3']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4000000h']
jz ['short', 'loc_DC3']
mov ['[ebp+var_18],', '1']
mov ['[ebp+var_28],', '2']
mov ['[ebp+var_24],', '3']
mov ['[ebp+var_20],', '60000h']
mov ['[ebp+var_1C],', '40000h']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '18h']
mov ['[ebp+var_42C],', 'eax']
cmp ['[ebp+var_42C],', '8']
jz ['short', 'loc_DF7']
cmp ['[ebp+var_42C],', '10h']
jz ['loc_F2E']
cmp ['[ebp+var_42C],', '18h']
jz ['loc_EE0']
jmp ['loc_F7A']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
jbe ['short', 'loc_E5E']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
cmp ['eax,', '0C0000h']
jz ['short', 'loc_E5E']
sub ['esp,', '18h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+14h],', 'edx']
push ['2']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?shapeUnicode@@YAHPA_WHHIPAW4UErrorCode@@HUuShapeVariables@@@Z']
add ['esp,', '30h']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_EDB']
sub ['esp,', '18h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+14h],', 'edx']
push ['1']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?shapeUnicode@@YAHPA_WHHIPAW4UErrorCode@@HUuShapeVariables@@@Z']
add ['esp,', '30h']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0000h']
cmp ['eax,', '0C0000h']
jnz ['short', 'loc_EDB']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?handleTashkeelWithTatweel@@YAHPA_WHHIPAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_F81']
sub ['esp,', '18h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+14h],', 'edx']
push ['0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?shapeUnicode@@YAHPA_WHHIPAW4UErrorCode@@HUuShapeVariables@@@Z']
add ['esp,', '30h']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_F81']
sub ['esp,', '18h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?deShapeUnicode@@YAHPA_WHHIPAW4UErrorCode@@UuShapeVariables@@@Z']
add ['esp,', '2Ch']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_F81']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4']
jnz ['short', 'loc_FD3']
lea ['eax,', '[ebp+var_2C8]']
push ['eax']
lea ['ecx,', '[ebp+var_2BC]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?countSpaces@@YAXPA_WHIPAH1@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_2C8]']
push ['eax']
mov ['ecx,', '[ebp+var_2BC]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?invertBuffer@@YAXPA_WHIHH@Z']
add ['esp,', '14h']
push ['1']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_uprv_min_56']
add ['esp,', '8']
shl ['eax,', '1']
push ['eax']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
lea ['ecx,', '[ebp+var_28C]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_1029']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+arg_C]']
jle ['short', 'loc_1042']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_125F']
jmp ['short', 'loc_1087']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_105D']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_125F']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0h']
jz ['$LN21']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '300h']
mov ['[ebp+var_42C],', 'eax']
jz ['short', 'loc_10B3']
cmp ['[ebp+var_42C],', '100h']
jz ['short', 'loc_10C1']
jmp ['short', 'loc_10CF']
mov ['eax,', '660h']
mov ['[ebp+var_358],', 'ax']
jmp ['short', 'loc_10D8']
mov ['eax,', '6F0h']
mov ['[ebp+var_358],', 'ax']
jmp ['short', 'loc_10D8']
xor ['eax,', 'eax']
mov ['[ebp+var_358],', 'ax']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '0E0h']
mov ['[ebp+var_42C],', 'eax']
mov ['ecx,', '[ebp+var_42C]']
sub ['ecx,', '20h']
mov ['[ebp+var_42C],', 'ecx']
cmp ['[ebp+var_42C],', '60h']
ja ['$LN21']
mov ['edx,', '[ebp+var_42C]']
movzx ['eax,', 'ds:$LN87[edx]']
jmp ['ds:$LN94[eax*4]']
movzx ['eax,', '[ebp+var_358]']
sub ['eax,', '30h']
mov ['[ebp+var_358],', 'ax']
mov ['[ebp+var_364],', '0']
jmp ['short', 'loc_1142']
mov ['eax,', '[ebp+var_364]']
add ['eax,', '1']
mov ['[ebp+var_364],', 'eax']
mov ['eax,', '[ebp+var_364]']
cmp ['eax,', '[ebp+var_C]']
jge ['short', 'loc_1187']
mov ['eax,', '[ebp+var_364]']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
sub ['edx,', '30h']
cmp ['edx,', '0Ah']
jnb ['short', 'loc_1185']
movzx ['eax,', '[ebp+var_358]']
mov ['ecx,', '[ebp+var_364]']
mov ['edx,', '[ebp+arg_8]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_364]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+edx*2],', 'cx']
jmp ['short', 'loc_1133']
jmp ['$LN21']
mov ['[ebp+var_364],', '0']
jmp ['short', 'loc_11A7']
mov ['eax,', '[ebp+var_364]']
add ['eax,', '1']
mov ['[ebp+var_364],', 'eax']
mov ['eax,', '[ebp+var_364]']
cmp ['eax,', '[ebp+var_C]']
jge ['short', 'loc_11F5']
mov ['eax,', '[ebp+var_364]']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
movzx ['eax,', '[ebp+var_358]']
sub ['edx,', 'eax']
cmp ['edx,', '0Ah']
jnb ['short', 'loc_11F3']
movzx ['eax,', '[ebp+var_358]']
sub ['eax,', '30h']
mov ['ecx,', '[ebp+var_364]']
mov ['edx,', '[ebp+arg_8]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_364]']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+edx*2],', 'cx']
jmp ['short', 'loc_1198']
jmp ['short', '$LN21']
push ['0']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4']
setz ['cl']
movzx ['edx,', 'cl']
push ['edx']
movzx ['eax,', '[ebp+var_358]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['?_shapeToArabicDigitsWithContext@@YAXPA_WH_WCC@Z']
add ['esp,', '14h']
jmp ['short', '$LN21']
push ['1']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '4']
setz ['cl']
movzx ['edx,', 'cl']
push ['edx']
movzx ['eax,', '[ebp+var_358]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['?_shapeToArabicDigitsWithContext@@YAXPA_WH_WCC@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN93']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '42Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN92']
dd ['offset', '$LN88']
dd ['0FFFFFD74h,', '258h']
dd ['offset', '$LN89']
dd ['0FFFFFD44h,', '4']
dd ['offset', '$LN90']
dd ['0FFFFFD38h,', '4']
dd ['offset', '$LN91']
align ['4']
dd ['offset', '$LN21']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['1,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['2,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['4,', '4,', '4,', '4']
db ['3']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?_shapeToArabicDigitsWithContext@@YAXPA_WH_WCC@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E8]']
mov ['ecx,', '3Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
call ['_ubidi_getSingleton_56']
mov ['[ebp+var_8],', 'eax']
movzx ['eax,', '[ebp+arg_8]']
sub ['eax,', '30h']
mov ['[ebp+arg_8],', 'ax']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['loc_146F']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_13E7']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_146A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ubidi_getClass_56']
add ['esp,', '8']
mov ['[ebp+var_E8],', 'eax']
cmp ['[ebp+var_E8],', '0Dh']
ja ['short', '$LN16']
mov ['edx,', '[ebp+var_E8]']
movzx ['eax,', 'ds:$LN24[edx]']
jmp ['ds:$LN26[eax*4]']
mov ['[ebp+arg_10],', '0']
jmp ['short', '$LN16']
mov ['[ebp+arg_10],', '1']
jmp ['short', '$LN16']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', '$LN16']
movzx ['eax,', '[ebp+var_20]']
sub ['eax,', '30h']
cmp ['eax,', '0Ah']
jnb ['short', '$LN16']
movzx ['eax,', '[ebp+arg_8]']
movzx ['ecx,', '[ebp+var_20]']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+edx*2],', 'ax']
jmp ['loc_13DE']
jmp ['loc_1503']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jle ['loc_1503']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', '[edx+ecx*2]']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ubidi_getClass_56']
add ['esp,', '8']
mov ['[ebp+var_E8],', 'eax']
cmp ['[ebp+var_E8],', '0Dh']
ja ['short', '$LN6']
mov ['edx,', '[ebp+var_E8]']
movzx ['eax,', 'ds:$LN25[edx]']
jmp ['ds:$LN27[eax*4]']
mov ['[ebp+arg_10],', '0']
jmp ['short', '$LN6']
mov ['[ebp+arg_10],', '1']
jmp ['short', '$LN6']
movsx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', '$LN6']
movzx ['eax,', '[ebp+var_20]']
sub ['eax,', '30h']
cmp ['eax,', '0Ah']
jnb ['short', '$LN6']
movzx ['eax,', '[ebp+arg_8]']
movzx ['ecx,', '[ebp+var_20]']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+edx*2],', 'ax']
jmp ['loc_1475']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN13_0']
dd ['offset', '$LN14']
dd ['offset', '$LN16']
db ['3,', '3,', '3,', '3']
db ['3,', '3,', '3,', '3']
db ['3,', '2']
align ['4']
dd ['offset', '$LN3_0']
dd ['offset', '$LN4']
dd ['offset', '$LN6']
db ['3,', '3,', '3,', '3']
db ['3,', '3,', '3,', '3']
db ['3,', '2']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?invertBuffer@@YAXPA_WHIHH@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_15AA']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_20]']
sub ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_15E4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_8],', 'dx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+var_8]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_1598']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getLink@@YA_W_W@Z proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '622h']
jl ['short', 'loc_1636']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '6D3h']
jg ['short', 'loc_1636']
movzx ['eax,', '[ebp+arg_0]']
mov ['ax,', 'word', 'ptr', '(byte_60F-1213h)[eax*2]']
jmp ['loc_16B7']
jmp ['loc_16B7']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '200Dh']
jnz ['short', 'loc_164A']
mov ['eax,', '3']
jmp ['short', 'loc_16B7']
jmp ['short', 'loc_16B7']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '206Dh']
jl ['short', 'loc_1669']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '206Fh']
jg ['short', 'loc_1669']
mov ['eax,', '4']
jmp ['short', 'loc_16B7']
jmp ['short', 'loc_16B7']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FB50h']
jl ['short', 'loc_168F']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FC62h']
jg ['short', 'loc_168F']
movzx ['eax,', '[ebp+arg_0]']
movzx ['ax,', '(byte_60F-0FFB7h)[eax]']
jmp ['short', 'loc_16B7']
jmp ['short', 'loc_16B7']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE70h']
jl ['short', 'loc_16B5']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FEFCh']
jg ['short', 'loc_16B5']
movzx ['eax,', '[ebp+arg_0]']
movzx ['ax,', '(byte_60F-101BFh)[eax]']
jmp ['short', 'loc_16B7']
jmp ['short', 'loc_16B7']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?countSpaces@@YAXPA_WHIPAH1@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '20h']
jnz ['short', 'loc_171E']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_171E']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_16F3']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_174A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
cmp ['edx,', '20h']
jnz ['short', 'loc_174A']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_1726']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calculateSize@@YAHPB_WHHI@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '18h']
cmp ['eax,', '8']
jz ['short', 'loc_17B3']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '18h']
cmp ['eax,', '18h']
jnz ['short', 'loc_17C4']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
jnz ['short', 'loc_17C4']
mov ['[ebp+var_14],', '1']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '18h']
cmp ['eax,', '8']
jnz ['short', 'loc_17E5']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '0E0000h']
cmp ['eax,', '80000h']
jnz ['short', 'loc_17E5']
mov ['[ebp+var_20],', '1']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_17F5']
cmp ['[ebp+var_20],', '0']
jz ['loc_18E9']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '4']
jz ['short', 'loc_1870']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_180F']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_186E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isAlefChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_184C']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_184C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+2]']
cmp ['edx,', '644h']
jz ['short', 'loc_1863']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isTashkeelCharFE@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_186C']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_1806']
jmp ['short', 'loc_18E9']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '4']
jnz ['short', 'loc_18E9']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_188A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_18E9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '644h']
jnz ['short', 'loc_18C7']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_18C7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+2]']
push ['edx']
call ['?isAlefChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_18DE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isTashkeelCharFE@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_18E7']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_1881']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '18h']
cmp ['eax,', '10h']
jnz ['short', 'loc_193A']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
jnz ['short', 'loc_193A']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1910']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_193A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isLamAlefChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_1938']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_1907']
mov ['eax,', '[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isTashkeelCharFE@@YAH_W@Z proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE70h']
jl ['short', 'loc_1995']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '0FE7Fh']
jg ['short', 'loc_1995']
mov ['[ebp+var_C4],', '1']
jmp ['short', 'loc_199F']
mov ['[ebp+var_C4],', '0']
mov ['eax,', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isAlefChar@@YAH_W@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '622h']
jz ['short', 'loc_1A04']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '623h']
jz ['short', 'loc_1A04']
movzx ['edx,', '[ebp+arg_0]']
cmp ['edx,', '625h']
jz ['short', 'loc_1A04']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '627h']
jz ['short', 'loc_1A04']
mov ['[ebp+var_C4],', '0']
jmp ['short', 'loc_1A0E']
mov ['[ebp+var_C4],', '1']
mov ['eax,', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isLamAlefChar@@YAH_W@Z	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FEF5h']
jl ['short', 'loc_1A5D']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '0FEFCh']
jg ['short', 'loc_1A5D']
mov ['[ebp+var_C4],', '1']
jmp ['short', 'loc_1A67']
mov ['[ebp+var_C4],', '0']
mov ['eax,', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleTashkeelWithTatweel@@YAHPA_WHHIPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1AA4']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['loc_1B3F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isTashkeelOnTatweelChar@@YAH_W@Z']
add ['esp,', '4']
cmp ['eax,', '1']
jnz ['short', 'loc_1AD9']
mov ['eax,', '640h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_1B3A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isTashkeelOnTatweelChar@@YAH_W@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jnz ['short', 'loc_1B02']
mov ['eax,', '0FE7Dh']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_1B3A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isIsolatedTashkeelChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_1B3A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '0FE7Ch']
jz ['short', 'loc_1B3A']
mov ['eax,', '20h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
jmp ['loc_1A9B']
mov ['eax,', '[ebp+arg_4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isTashkeelOnTatweelChar@@YAH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE70h']
jl ['short', 'loc_1BBC']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE7Fh']
jg ['short', 'loc_1BBC']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE73h']
jz ['short', 'loc_1BBC']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE75h']
jz ['short', 'loc_1BBC']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE7Dh']
jz ['short', 'loc_1BBC']
movzx ['eax,', '[ebp+arg_0]']
movzx ['eax,', '(byte_60F-1046Fh)[eax]']
jmp ['short', 'loc_1BE8']
jmp ['short', 'loc_1BE8']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FCF2h']
jl ['short', 'loc_1BD2']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FCF4h']
jle ['short', 'loc_1BDD']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE7Dh']
jnz ['short', 'loc_1BE6']
mov ['eax,', '2']
jmp ['short', 'loc_1BE8']
jmp ['short', 'loc_1BE8']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isIsolatedTashkeelChar@@YAH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE70h']
jl ['short', 'loc_1C50']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE7Fh']
jg ['short', 'loc_1C50']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE73h']
jz ['short', 'loc_1C50']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE75h']
jz ['short', 'loc_1C50']
movzx ['eax,', '[ebp+arg_0]']
movzx ['ecx,', '(byte_60F-1046Fh)[eax]']
mov ['eax,', '1']
sub ['eax,', 'ecx']
jmp ['short', 'loc_1C71']
jmp ['short', 'loc_1C71']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FC5Eh']
jl ['short', 'loc_1C6F']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FC63h']
jg ['short', 'loc_1C6F']
mov ['eax,', '1']
jmp ['short', 'loc_1C71']
jmp ['short', 'loc_1C71']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?shapeUnicode@@YAHPA_WHHIPAW4UErrorCode@@HUuShapeVariables@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1A4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1A4]']
mov ['ecx,', '69h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_80],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_8C],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_98],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_B0],', 'ax']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '8000h']
jnz ['loc_1DA7']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1CED']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['loc_1DA7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_C8],', 'dx']
movzx ['eax,', '[ebp+var_C8]']
cmp ['eax,', '0FB50h']
jl ['short', 'loc_1D5A']
movzx ['eax,', '[ebp+var_C8]']
cmp ['eax,', '0FBFFh']
jg ['short', 'loc_1D5A']
movzx ['eax,', '[ebp+var_C8]']
mov ['cx,', 'word', 'ptr', '(byte_60F-1F95Fh)[eax*2]']
mov ['[ebp+var_D4],', 'cx']
movzx ['eax,', '[ebp+var_D4]']
test ['eax,', 'eax']
jz ['short', 'loc_1D58']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+var_D4]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_1DA2']
movzx ['eax,', '[ebp+var_C8]']
cmp ['eax,', '0FE70h']
jl ['short', 'loc_1D91']
movzx ['eax,', '[ebp+var_C8]']
cmp ['eax,', '0FEFCh']
jg ['short', 'loc_1D91']
movzx ['eax,', '[ebp+var_C8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', 'word', 'ptr', '(byte_60F-1FE3Fh)[eax*2]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_1DA2']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+var_C8]']
mov ['[ecx+eax*2],', 'dx']
jmp ['loc_1CE4']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_14],', '0FFFFFFFFh']
mov ['[ebp+var_20],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?getLink@@YA_W_W@Z']
add ['esp,', '4']
mov ['[ebp+var_A4],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_38],', '0FFFFFFFEh']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jz ['loc_225E']
movzx ['eax,', '[ebp+var_A4]']
and ['eax,', '0FF00h']
jg ['short', 'loc_1E25']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?getLink@@YA_W_W@Z']
add ['esp,', '4']
movzx ['eax,', 'ax']
and ['eax,', '4']
jz ['loc_21E1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_38],', '0']
jge ['short', 'loc_1E87']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', 'loc_1E4E']
xor ['eax,', 'eax']
mov ['[ebp+var_B0],', 'ax']
mov ['[ebp+var_38],', '0BB8h']
jmp ['short', 'loc_1E85']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?getLink@@YA_W_W@Z']
add ['esp,', '4']
mov ['[ebp+var_B0],', 'ax']
movzx ['eax,', '[ebp+var_B0]']
and ['eax,', '4']
jnz ['short', 'loc_1E7C']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_1E85']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_1E2E']
movzx ['eax,', '[ebp+var_A4]']
and ['eax,', '20h']
jle ['loc_1F1A']
movzx ['eax,', '[ebp+var_98]']
and ['eax,', '10h']
jle ['short', 'loc_1F1A']
mov ['[ebp+var_5C],', '1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?changeLamAlef@@YA_W_W@Z']
add ['esp,', '4']
mov ['[ebp+var_BC],', 'ax']
movzx ['eax,', '[ebp+var_BC]']
test ['eax,', 'eax']
jz ['short', 'loc_1EF5']
mov ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+var_BC]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_8],', 'eax']
mov ['ax,', '[ebp+var_8C]']
mov ['[ebp+var_98],', 'ax']
movzx ['eax,', '[ebp+var_BC]']
push ['eax']
call ['?getLink@@YA_W_W@Z']
add ['esp,', '4']
mov ['[ebp+var_A4],', 'ax']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_1F6B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
cmp ['edx,', '20h']
jnz ['short', 'loc_1F6B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isSeenFamilyChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_1F50']
mov ['[ebp+var_68],', '1']
jmp ['short', 'loc_1F69']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '626h']
jnz ['short', 'loc_1F69']
mov ['[ebp+var_74],', '1']
jmp ['short', 'loc_1FAA']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1FAA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isSeenFamilyChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_1F91']
mov ['[ebp+var_68],', '1']
jmp ['short', 'loc_1FAA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '626h']
jnz ['short', 'loc_1FAA']
mov ['[ebp+var_74],', '1']
movzx ['eax,', '[ebp+var_B0]']
and ['eax,', '3']
shl ['eax,', '4']
movzx ['ecx,', '[ebp+var_98]']
and ['ecx,', '3']
lea ['edx,', '_shapeTable[eax+ecx*4]']
movzx ['eax,', '[ebp+var_A4]']
and ['eax,', '3']
movzx ['ecx,', 'byte', 'ptr', '[edx+eax]']
mov ['[ebp+var_50],', 'ecx']
movzx ['eax,', '[ebp+var_A4]']
and ['eax,', '3']
cmp ['eax,', '1']
jnz ['short', 'loc_1FF6']
mov ['eax,', '[ebp+var_50]']
and ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_20A3']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isTashkeelChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['loc_20A3']
movzx ['eax,', '[ebp+var_98]']
and ['eax,', '2']
jz ['short', 'loc_207B']
movzx ['eax,', '[ebp+var_B0]']
and ['eax,', '1']
jz ['short', 'loc_207B']
cmp ['[ebp+arg_14],', '1']
jnz ['short', 'loc_207B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '64Ch']
jz ['short', 'loc_207B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '64Dh']
jz ['short', 'loc_207B']
mov ['[ebp+var_50],', '1']
movzx ['eax,', '[ebp+var_B0]']
and ['eax,', '20h']
jz ['short', 'loc_2079']
movzx ['eax,', '[ebp+var_98]']
and ['eax,', '10h']
jz ['short', 'loc_2079']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_20A3']
cmp ['[ebp+arg_14],', '2']
jnz ['short', 'loc_209C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '651h']
jnz ['short', 'loc_209C']
mov ['[ebp+var_50],', '1']
jmp ['short', 'loc_20A3']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
xor ['edx,', '600h']
cmp ['edx,', '100h']
jge ['loc_21E1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isTashkeelChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['loc_217D']
cmp ['[ebp+arg_14],', '2']
jnz ['short', 'loc_210A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '651h']
jz ['short', 'loc_210A']
mov ['eax,', '0FFFEh']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['[ebp+var_80],', '1']
jmp ['short', 'loc_217B']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '64Bh']
jb ['short', 'loc_2131']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
sub ['edx,', '64Bh']
cmp ['edx,', '8']
jb ['short', 'loc_2156']
mov ['eax,', 'ds:?__LINE__Var@?1??shapeUnicode@@YAHPA_WHHIPAW4UErrorCode@@HUuShapeVariables@@@Z@4JA@b604b903']
add ['eax,', '7Eh']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@PEDOADFO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1KO@NAEFDFNP@?$AAd?$AAe?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AAx?$AA0?$AA6?$AA4?$AAB?$AAu?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAe?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?9?$AA0?$AAx@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
movzx ['eax,', '(byte_60F-0C36h)[edx]']
mov ['ecx,', '[ebp+var_50]']
lea ['edx,', '[eax+ecx+0FE70h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_21E1']
movzx ['eax,', '[ebp+var_A4]']
and ['eax,', '8']
jle ['short', 'loc_21A9']
movzx ['eax,', '[ebp+var_A4]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_50]']
lea ['edx,', '[eax+ecx+0FB50h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_21E1']
movzx ['eax,', '[ebp+var_A4]']
sar ['eax,', '8']
test ['eax,', 'eax']
jle ['short', 'loc_21E1']
movzx ['eax,', '[ebp+var_A4]']
and ['eax,', '4']
jnz ['short', 'loc_21E1']
movzx ['eax,', '[ebp+var_A4]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+var_50]']
lea ['edx,', '[eax+ecx+0FE70h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*2],', 'dx']
movzx ['eax,', '[ebp+var_A4]']
and ['eax,', '4']
jnz ['short', 'loc_220F']
mov ['ax,', '[ebp+var_98]']
mov ['[ebp+var_8C],', 'ax']
mov ['ax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_38]']
jnz ['short', 'loc_2237']
mov ['ax,', '[ebp+var_B0]']
mov ['[ebp+var_A4],', 'ax']
mov ['[ebp+var_38],', '0FFFFFFFEh']
jmp ['short', 'loc_2259']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jz ['short', 'loc_2259']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?getLink@@YA_W_W@Z']
add ['esp,', '4']
mov ['[ebp+var_A4],', 'ax']
jmp ['loc_1DEC']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_2270']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_22B7']
sub ['esp,', '18h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+arg_18]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_1C]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_20]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_24]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_28]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_2C]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?handleGeneratedSpaces@@YAHPA_WHHIPAW4UErrorCode@@UuShapeVariables@@@Z']
add ['esp,', '2Ch']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+var_68],', '0']
jnz ['short', 'loc_22C3']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_230C']
sub ['esp,', '18h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+arg_18]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_1C]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_20]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_24]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_28]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_2C]']
mov ['[eax+14h],', 'edx']
push ['0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?expandCompositChar@@YAHPA_WHHIPAW4UErrorCode@@HUuShapeVariables@@@Z']
add ['esp,', '30h']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN61']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1A4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN60']
dd ['offset', '$LN59']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1KO@NAEFDFNP@?$AAd?$AAe?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AAx?$AA0?$AA6?$AA4?$AAB?$AAu?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAe?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?9?$AA0?$AAx@']
unicode ['0,', '<dest[i]', '>']
dw ['3Eh']
unicode ['0,', '<=', '0x064Bu', '&&', 'dest[i]-0x064Bu', '>']
dw ['3Ch']
unicode ['0,', '<', 'sizeof(IrrelevantPos)/sizeof(IrrelevantPos[0])>,0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_1FK@PEDOADFO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\ushape.cpp>,0']
align ['10h']
assume ['cs:_data']
public ['?__LINE__Var@?1??shapeUnicode@@YAHPA_WHHIPAW4UErrorCode@@HUuShapeVariables@@@Z@4JA@b604b903']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?changeLamAlef@@YA_W_W@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C4],', 'eax']
mov ['ecx,', '[ebp+var_C4]']
sub ['ecx,', '622h']
mov ['[ebp+var_C4],', 'ecx']
cmp ['[ebp+var_C4],', '5']
ja ['short', '$LN5_0']
mov ['edx,', '[ebp+var_C4]']
jmp ['ds:$LN9[edx*4]']
mov ['eax,', '65Ch']
jmp ['short', 'loc_24D2']
mov ['eax,', '65Dh']
jmp ['short', 'loc_24D2']
mov ['eax,', '65Eh']
jmp ['short', 'loc_24D2']
mov ['eax,', '65Fh']
jmp ['short', 'loc_24D2']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN3_1']
dd ['offset', '$LN5_0']
dd ['offset', '$LN2_0']
dd ['offset', '$LN5_0']
dd ['offset', '$LN1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isTashkeelChar@@YAH_W@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '64Bh']
jl ['short', 'loc_2535']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '652h']
jg ['short', 'loc_2535']
mov ['[ebp+var_C4],', '1']
jmp ['short', 'loc_253F']
mov ['[ebp+var_C4],', '0']
mov ['eax,', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSeenFamilyChar@@YAH_W@Z proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '633h']
jl ['short', 'loc_2589']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '636h']
jg ['short', 'loc_2589']
mov ['eax,', '1']
jmp ['short', 'loc_258B']
jmp ['short', 'loc_258B']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?handleGeneratedSpaces@@YAHPA_WHHIPAW4UErrorCode@@UuShapeVariables@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+Dst],', '0']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_44],', '0']
mov ['[ebp+var_50],', '0']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_2610']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
jnz ['short', 'loc_25FA']
mov ['[ebp+var_38],', '1']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '0E0000h']
cmp ['eax,', '80000h']
jnz ['short', 'loc_2610']
mov ['[ebp+var_44],', '1']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_2639']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_2A66']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_2649']
cmp ['[ebp+var_44],', '0']
jz ['loc_2740']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_26E7']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_2693']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '0FFFFh']
jz ['short', 'loc_26AB']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_26BF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '0FFFEh']
jnz ['short', 'loc_26BF']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_26D3']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_2673']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_270D']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_26E7']
push ['1']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_8],', 'eax']
mov ['[ebp+var_38],', '0']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_2761']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
cmp ['eax,', '1']
jnz ['short', 'loc_2761']
mov ['[ebp+var_38],', '1']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_27AE']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_27A8']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_279D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '0FFFFh']
jnz ['short', 'loc_279D']
mov ['eax,', '20h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_276E']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'eax']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_44],', '0']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_27FF']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
cmp ['eax,', '[ebp+arg_18]']
jz ['short', 'loc_27E4']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
cmp ['eax,', '10000h']
jnz ['short', 'loc_27EB']
cmp ['[ebp+arg_28],', '1']
jnz ['short', 'loc_27EB']
mov ['[ebp+var_38],', '1']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '0E0000h']
cmp ['eax,', '[ebp+arg_20]']
jnz ['short', 'loc_27FF']
mov ['[ebp+var_44],', '1']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_280F']
cmp ['[ebp+var_44],', '0']
jz ['loc_28FF']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_28AA']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_2856']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '0FFFFh']
jz ['short', 'loc_286E']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_2882']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '0FFFEh']
jnz ['short', 'loc_2882']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_2896']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_2838']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_28BC']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_20]']
jge ['short', 'loc_28D5']
mov ['eax,', '20h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_28B3']
push ['1']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'eax']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_44],', '0']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_2950']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
cmp ['eax,', '[ebp+arg_1C]']
jz ['short', 'loc_2935']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
cmp ['eax,', '10000h']
jnz ['short', 'loc_293C']
cmp ['[ebp+arg_28],', '0']
jnz ['short', 'loc_293C']
mov ['[ebp+var_38],', '1']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '0E0000h']
cmp ['eax,', '[ebp+arg_24]']
jnz ['short', 'loc_2950']
mov ['[ebp+var_44],', '1']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_2960']
cmp ['[ebp+var_44],', '0']
jz ['loc_2A51']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_29FE']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_29AA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '0FFFFh']
jz ['short', 'loc_29C2']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_29D6']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '0FFFEh']
jnz ['short', 'loc_29D6']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_29EA']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_298A']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_2A27']
mov ['eax,', '20h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_29FE']
push ['1']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_2A63']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN55']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN54']
dd ['offset', '$LN53']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?expandCompositChar@@YAHPA_WHHIPAW4UErrorCode@@HUuShapeVariables@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+Dst],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_44],', '0']
cmp ['[ebp+arg_14],', '1']
jnz ['loc_2C05']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
cmp ['eax,', '10000h']
jnz ['loc_2C05']
cmp ['[ebp+arg_2C],', '0']
jnz ['short', 'loc_2B60']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?expandCompositCharAtEnd@@YAHPA_WHHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '14h']
jnz ['short', 'loc_2B5E']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?expandCompositCharAtBegin@@YAHPA_WHHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_2BA7']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?expandCompositCharAtBegin@@YAHPA_WHHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '14h']
jnz ['short', 'loc_2BA7']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?expandCompositCharAtEnd@@YAHPA_WHHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '14h']
jnz ['short', 'loc_2C05']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0']
sub ['esp,', '18h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+arg_18]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_1C]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_20]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_24]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_28]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_2C]']
mov ['[eax+14h],', 'edx']
push ['1']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?expandCompositCharAtNear@@YAHPA_WHHPAW4UErrorCode@@HHHUuShapeVariables@@@Z']
add ['esp,', '34h']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_14],', '1']
jnz ['short', 'loc_2C33']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
cmp ['eax,', '[ebp+arg_20]']
jnz ['short', 'loc_2C33']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?expandCompositCharAtEnd@@YAHPA_WHHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_14],', '1']
jnz ['short', 'loc_2C61']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
cmp ['eax,', '[ebp+arg_1C]']
jnz ['short', 'loc_2C61']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?expandCompositCharAtBegin@@YAHPA_WHHPAW4UErrorCode@@@Z']
add ['esp,', '10h']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_14],', '0']
jnz ['short', 'loc_2C93']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '3800000h']
cmp ['eax,', '1000000h']
jnz ['short', 'loc_2C7D']
mov ['[ebp+var_2C],', '1']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '700000h']
cmp ['eax,', '200000h']
jnz ['short', 'loc_2C93']
mov ['[ebp+var_38],', '1']
cmp ['[ebp+arg_14],', '1']
jnz ['short', 'loc_2CAD']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
cmp ['eax,', '1']
jnz ['short', 'loc_2CAD']
mov ['[ebp+var_44],', '1']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_2CBF']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_2CBF']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_2D0E']
sub ['esp,', '18h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+arg_18]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_1C]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_20]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_24]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_28]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_2C]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?expandCompositCharAtNear@@YAHPA_WHHPAW4UErrorCode@@HHHUuShapeVariables@@@Z']
add ['esp,', '34h']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_14],', '1']
jnz ['loc_2E3E']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10003h']
jnz ['loc_2E3E']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?calculateSize@@YAHPB_WHHI@Z']
add ['esp,', '10h']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_2D6A']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_2E53']
mov ['eax,', '[ebp+arg_8]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_8]']
jge ['loc_2E1A']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_2E1A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isLamAlefChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_2DEF']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dst]']
mov ['dx,', 'word', 'ptr', '(byte_60F-203CDh)[edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '644h']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+ecx*2+2],', 'ax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_2E03']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_2D8D']
push ['1']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_2E50']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN30']
dd ['offset', '$LN29']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?expandCompositCharAtBegin@@YAHPA_WHHPAW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+Dst],', '0']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_2EFB']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_3099']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '20h']
jnz ['short', 'loc_2F3B']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2F18']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jl ['loc_3060']
cmp ['[ebp+var_14],', '0']
jl ['loc_3060']
cmp ['[ebp+var_20],', '0']
jle ['loc_300F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isLamAlefChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['loc_300F']
mov ['eax,', '644h']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '0FEF5h']
jb ['short', 'loc_2FB9']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
sub ['edx,', '0FEF5h']
cmp ['edx,', '8']
jb ['short', 'loc_2FDE']
mov ['eax,', 'ds:?__LINE__Var@?1??expandCompositCharAtBegin@@YAHPA_WHHPAW4UErrorCode@@@Z@4JA@b604b903']
add ['eax,', '1Ch']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@PEDOADFO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1LC@CBAJJOIB@?$AAd?$AAe?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AAx?$AAF?$AAE?$AAF?$AA5?$AAu?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAe?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?9?$AA0?$AAx@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dst]']
mov ['dx,', 'word', 'ptr', '(byte_60F-203CDh)[edx*2]']
mov ['[ecx+eax*2-2],', 'dx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_3049']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_3035']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isLamAlefChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_3035']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '14h']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_2F4A']
push ['1']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1LC@CBAJJOIB@?$AAd?$AAe?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AAx?$AAF?$AAE?$AAF?$AA5?$AAu?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAd?$AAe?$AAs?$AAt?$AA?$FL?$AAi?$AA?$FN?$AA?9?$AA0?$AAx@']
unicode ['0,', '<dest[i]', '>']
dw ['3Eh']
unicode ['0,', '<=', '0xFEF5u', '&&', 'dest[i]-0xFEF5u', '>']
dw ['3Ch']
unicode ['0,', '<', 'sizeof(convertLamAlef)/sizeof(convertLamAlef[0])>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??expandCompositCharAtBegin@@YAHPA_WHHPAW4UErrorCode@@@Z@4JA@b604b903']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?expandCompositCharAtEnd@@YAHPA_WHHPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+Dst],', '0']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_31D1']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_339C']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+eax+2]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
cmp ['edx,', '20h']
jnz ['short', 'loc_320B']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_31E7']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jl ['loc_32E2']
cmp ['[ebp+var_14],', '0']
jl ['loc_32E2']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_3291']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isLamAlefChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_3291']
mov ['eax,', '644h']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dst]']
mov ['dx,', 'word', 'ptr', '(byte_60F-203CDh)[edx*2]']
mov ['[ecx+eax*2-2],', 'dx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_32CB']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_32B7']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isLamAlefChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_32B7']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '14h']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_3220']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_3363']
push ['1']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+Dst]']
lea ['edx,', '[ecx+eax*2]']
push ['edx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+Dst]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_3363']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_3347']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_20]']
cmp ['[ebp+var_8],', 'eax']
jl ['short', 'loc_3363']
mov ['eax,', '20h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+Dst]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_333E']
push ['1']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?expandCompositCharAtNear@@YAHPA_WHHPAW4UErrorCode@@HHHUuShapeVariables@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_33E7']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
cmp ['[ebp+var_8],', 'eax']
jg ['loc_352E']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_3448']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isSeenTailFamilyChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_3448']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_343A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
cmp ['edx,', '20h']
jnz ['short', 'loc_343A']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+arg_1C]']
mov ['[ecx+eax*2-2],', 'dx']
jmp ['short', 'loc_3443']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '14h']
jmp ['loc_3529']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_34BC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isYehHamzaChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_34BC']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_34B1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
cmp ['edx,', '20h']
jnz ['short', 'loc_34B1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_20],', 'dx']
movzx ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', 'word', 'ptr', '(byte_60F-20301h)[eax*2]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '0FE80h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2-2],', 'ax']
jmp ['short', 'loc_34BA']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '14h']
jmp ['short', 'loc_3529']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_3529']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+2]']
push ['edx']
call ['?isLamAlefChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_3529']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '20h']
jnz ['short', 'loc_3520']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2+2]']
mov ['[ebp+var_14],', 'dx']
mov ['eax,', '644h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2+2],', 'ax']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', 'word', 'ptr', '(byte_60F-203CDh)[eax*2]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_3529']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '14h']
jmp ['loc_33DE']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN18']
dd ['offset', '$LN17']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isSeenTailFamilyChar@@YAH_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FEB1h']
jl ['short', 'loc_35BF']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FEBFh']
jge ['short', 'loc_35BF']
movzx ['eax,', '[ebp+arg_0]']
movzx ['eax,', '(byte_60F-104C0h)[eax]']
jmp ['short', 'loc_35C1']
jmp ['short', 'loc_35C1']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isYehHamzaChar@@YAH_W@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE89h']
jz ['short', 'loc_35FC']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE8Ah']
jnz ['short', 'loc_3605']
mov ['eax,', '1']
jmp ['short', 'loc_3607']
jmp ['short', 'loc_3607']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?deShapeUnicode@@YAHPA_WHHIPAW4UErrorCode@@UuShapeVariables@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '3800000h']
xor ['ecx,', 'ecx']
cmp ['eax,', '1000000h']
setz ['cl']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '700000h']
xor ['ecx,', 'ecx']
cmp ['eax,', '200000h']
setz ['cl']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3686']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['loc_37EE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'dx']
movzx ['eax,', '[ebp+var_38]']
cmp ['eax,', '0FB50h']
jl ['short', 'loc_36E1']
movzx ['eax,', '[ebp+var_38]']
cmp ['eax,', '0FBFFh']
jg ['short', 'loc_36E1']
movzx ['eax,', '[ebp+var_38]']
mov ['cx,', 'word', 'ptr', '(byte_60F-1F95Fh)[eax*2]']
mov ['[ebp+var_44],', 'cx']
movzx ['eax,', '[ebp+var_44]']
test ['eax,', 'eax']
jz ['short', 'loc_36DC']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+var_44]']
mov ['[ecx+eax*2],', 'dx']
jmp ['loc_37CB']
cmp ['[ebp+var_20],', '1']
jnz ['short', 'loc_3744']
movzx ['eax,', '[ebp+var_38]']
cmp ['eax,', '621h']
jz ['short', 'loc_36FD']
movzx ['eax,', '[ebp+var_38]']
cmp ['eax,', '0FE80h']
jnz ['short', 'loc_3744']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_3744']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+2]']
push ['edx']
call ['?isAlefMaksouraChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_3744']
mov ['eax,', '20h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '626h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2+2],', 'ax']
jmp ['loc_37CB']
cmp ['[ebp+var_2C],', '1']
jnz ['short', 'loc_378F']
movzx ['eax,', '[ebp+var_38]']
push ['eax']
call ['?isTailChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_378F']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
cmp ['[ebp+var_8],', 'eax']
jge ['short', 'loc_378F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2+2]']
push ['edx']
call ['?isSeenTailFamilyChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_378F']
mov ['eax,', '20h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_37CB']
movzx ['eax,', '[ebp+var_38]']
cmp ['eax,', '0FE70h']
jl ['short', 'loc_37BD']
movzx ['eax,', '[ebp+var_38]']
cmp ['eax,', '0FEF4h']
jg ['short', 'loc_37BD']
movzx ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['ax,', 'word', 'ptr', '(byte_60F-1FE3Fh)[eax*2]']
mov ['[edx+ecx*2],', 'ax']
jmp ['short', 'loc_37CB']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+var_38]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
call ['?isLamAlefChar@@YAH_W@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_37E9']
mov ['[ebp+var_14],', '1']
jmp ['loc_367D']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3843']
sub ['esp,', '18h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+arg_14]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_18]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_1C]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_20]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_24]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+arg_28]']
mov ['[eax+14h],', 'edx']
push ['1']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?expandCompositChar@@YAHPA_WHHIPAW4UErrorCode@@HUuShapeVariables@@@Z']
add ['esp,', '30h']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN20']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN19_0']
dd ['offset', '$LN18_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isTailChar@@YAH_W@Z proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '200Bh']
jz ['short', 'loc_38C0']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FE73h']
jnz ['short', 'loc_38C9']
mov ['eax,', '1']
jmp ['short', 'loc_38CB']
jmp ['short', 'loc_38CB']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isAlefMaksouraChar@@YAH_W@Z proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '0FEEFh']
jz ['short', 'loc_3921']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '0FEF0h']
jz ['short', 'loc_3921']
movzx ['edx,', '[ebp+arg_0]']
cmp ['edx,', '649h']
jz ['short', 'loc_3921']
mov ['[ebp+var_C4],', '0']
jmp ['short', 'loc_392B']
mov ['[ebp+var_C4],', '1']
mov ['eax,', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_uprv_min_56:near']
extrn ['_memset:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_uprv_free_56:near']
extrn ['_uprv_malloc_56:near']
extrn ['_u_terminateUChars_56:near']
extrn ['_u_strlen_56:near']
extrn ['___security_cookie:near']
extrn ['__RTC_CheckEsp:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_ubidi_getClass_56:near']
extrn ['_ubidi_getSingleton_56:near']
extrn ['__imp___wassert:near']
extrn ['__imp__memmove:near']
end

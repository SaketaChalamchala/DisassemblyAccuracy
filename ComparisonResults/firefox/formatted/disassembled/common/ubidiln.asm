endp
_ubidi_setLine_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_2C']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_31']
jmp ['loc_41E']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_41']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jz ['short', 'loc_4F']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1Bh']
jmp ['loc_41E']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_5D']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_8]']
jl ['short', 'loc_6B']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_41E']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_7F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '1']
cmp ['[ebp+arg_8],', 'ecx']
jl ['short', 'loc_8D']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_41E']
cmp ['[ebp+arg_C],', '0']
jnz ['short', 'loc_A1']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_41E']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ubidi_getParagraph_56']
add ['esp,', '18h']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ubidi_getParagraph_56']
add ['esp,', '18h']
cmp ['esi,', 'eax']
jz ['short', 'loc_EC']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_41E']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[ecx+edx*2]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_10C],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_10C]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+var_10C]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+62h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_170']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8Ch]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_170']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ubidi_getParaLevelAtIndex_56']
add ['esp,', '8']
movzx ['ecx,', 'al']
mov ['[ebp+var_10C],', 'ecx']
jmp ['short', 'loc_17D']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+61h]']
mov ['[ebp+var_10C],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_10C]']
mov ['[ecx+61h],', 'dl']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+88h]']
mov ['[eax+88h],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax+0E4h],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax+7Ch],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
mov ['[eax+58h],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+5Ch]']
mov ['[eax+5Ch],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax+160h],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jle ['loc_271']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1F8']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_8]']
jge ['short', 'loc_25C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['short', 'loc_245']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['short', 'loc_245']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jnb ['short', 'loc_25A']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+160h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx+160h],', 'ecx']
jmp ['short', 'loc_1EF']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[eax+14h]']
sub ['edx,', '[ecx+160h]']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
add ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx+4Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
add ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx+50h],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax+0E0h],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+78h],', '2']
jz ['short', 'loc_304']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+78h]']
mov ['[eax+78h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+84h]']
cmp ['ecx,', '[ebp+arg_4]']
jg ['short', 'loc_2CE']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax+84h],', '0']
jmp ['short', 'loc_2FF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+84h]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['short', 'loc_2F3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+84h]']
sub ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx+84h],', 'ecx']
jmp ['short', 'loc_2FF']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+84h],', 'ecx']
jmp ['loc_416']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_setTrailingWSStart']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+84h]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_33D']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+61h]']
and ['ecx,', '1']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx+78h],', 'ecx']
jmp ['short', 'loc_3B7']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '1']
mov ['[ebp+var_41],', 'cl']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_36F']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+61h]']
and ['ecx,', '1']
movzx ['edx,', '[ebp+var_41]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_36F']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax+78h],', '2']
jmp ['short', 'loc_3B7']
mov ['[ebp+var_2C],', '1']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jnz ['short', 'loc_38C']
movzx ['eax,', '[ebp+var_41]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx+78h],', 'eax']
jmp ['short', 'loc_3B7']
jmp ['short', 'loc_3AC']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '1']
movzx ['edx,', '[ebp+var_41]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_3AC']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax+78h],', '2']
jmp ['short', 'loc_3B7']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_376']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+78h]']
mov ['[ebp+var_10C],', 'ecx']
cmp ['[ebp+var_10C],', '0']
jz ['short', 'loc_3D7']
cmp ['[ebp+var_10C],', '1']
jz ['short', 'loc_3F9']
jmp ['short', 'loc_416']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+61h]']
add ['ecx,', '1']
and ['ecx,', '0FFFFFFFEh']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx+61h],', 'cl']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax+84h],', '0']
jmp ['short', 'loc_416']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+61h]']
or ['ecx,', '1']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx+61h],', 'cl']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax+84h],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_setTrailingWSStart proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+61h]']
mov ['[ebp+var_29],', 'cl']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '7']
jnz ['short', 'loc_49B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+84h],', 'ecx']
jmp ['short', 'loc_4F4']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_4C5']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax-1]']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['edx,', '7DDB80h']
jz ['short', 'loc_4C5']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_49B']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_4E8']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax-1]']
movzx ['edx,', '[ebp+var_29]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_4E8']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_4C5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+84h],', 'ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_getLevelAt_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_551']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jz ['short', 'loc_540']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_551']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_551']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_551']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
cmp ['ecx,', '[ebp+arg_4]']
jg ['short', 'loc_557']
xor ['al,', 'al']
jmp ['short', 'loc_5C7']
jmp ['short', 'loc_5C7']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+78h],', '2']
jnz ['short', 'loc_56E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+84h]']
jl ['short', 'loc_5BB']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+62h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5A4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8Ch]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_5A4']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ubidi_getParaLevelAtIndex_56']
add ['esp,', '8']
movzx ['ecx,', 'al']
mov ['[ebp+var_C4],', 'ecx']
jmp ['short', 'loc_5B1']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+61h]']
mov ['[ebp+var_C4],', 'eax']
mov ['al,', 'byte', 'ptr', '[ebp+var_C4]']
jmp ['short', 'loc_5C7']
jmp ['short', 'loc_5C7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', '[ecx+edx]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_getLevels_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_608']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_60F']
xor ['eax,', 'eax']
jmp ['loc_733']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_635']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jz ['short', 'loc_645']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_635']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx]']
jz ['short', 'loc_645']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1Bh']
xor ['eax,', 'eax']
jmp ['loc_733']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jg ['short', 'loc_664']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_733']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+84h]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
cmp ['edx,', '[ebp+var_14]']
jnz ['short', 'loc_683']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+50h]']
jmp ['loc_733']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+48h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '34h']
push ['ecx']
call ['_ubidi_getMemory_56']
add ['esp,', '10h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_728']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
mov ['[ebp+Dst],', 'ecx']
cmp ['[ebp+Size],', '0']
jle ['short', 'loc_6EE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+Dst]']
cmp ['ecx,', '[eax+50h]']
jz ['short', 'loc_6EE']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+61h]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+Size]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+84h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax+50h],', 'ecx']
mov ['eax,', '[ebp+Dst]']
jmp ['short', 'loc_733']
jmp ['short', 'loc_733']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_getLogicalRun_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_788']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+10h]']
jl ['short', 'loc_794']
mov ['[ebp+var_C],', '1']
jmp ['loc_8EC']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ubidi_countRuns_56']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_C],', '0']
jle ['short', 'loc_7B2']
jmp ['loc_8EC']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ecx+4]']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ecx+8]']
mov ['[ebp+var_54],', 'ecx']
mov ['[ebp+var_48],', '0']
jmp ['short', 'loc_7EB']
mov ['eax,', '[ebp+var_48]']
add ['eax,', '1']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_18]']
jge ['short', 'loc_846']
mov ['eax,', '[ebp+var_48]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0E4h]']
add ['edx,', 'eax']
mov ['eax,', '[edx]']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[edx+4]']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[edx+8]']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_5C]']
and ['eax,', '7FFFFFFFh']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '[ebp+var_58]']
sub ['eax,', '[ebp+var_24]']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_3C]']
jl ['short', 'loc_83E']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_30]']
jge ['short', 'loc_83E']
jmp ['short', 'loc_846']
mov ['eax,', '[ebp+var_58]']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_7E2']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_854']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['loc_8EC']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+58h],', '3']
jnz ['short', 'loc_874']
mov ['eax,', '[ebp+var_5C]']
shr ['eax,', '1Fh']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_8EC']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+78h],', '2']
jnz ['short', 'loc_88B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+84h]']
jl ['short', 'loc_8DB']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+62h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8C1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8Ch]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_8C1']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ubidi_getParaLevelAtIndex_56']
add ['esp,', '8']
movzx ['ecx,', 'al']
mov ['[ebp+var_124],', 'ecx']
jmp ['short', 'loc_8CE']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+61h]']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_124]']
mov ['[ecx],', 'dl']
jmp ['short', 'loc_8EC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[ecx+eax]']
mov ['[edx],', 'cl']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '124h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN21']
dd ['offset', '$LN19']
dd ['0FFFFFFA4h,', '0Ch']
dd ['offset', '$LN20']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_countRuns_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_978']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_97D']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_9D7']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_9A3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jz ['short', 'loc_9B1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_9A3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx]']
jz ['short', 'loc_9B1']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1Bh']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_9D7']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ubidi_getRuns_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_9CE']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_9D7']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+0E0h]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_getVisualRun_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_A37']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jz ['short', 'loc_A45']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_A37']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx]']
jz ['short', 'loc_A45']
mov ['[ebp+var_14],', '1Bh']
xor ['eax,', 'eax']
jmp ['loc_AFC']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ubidi_getRuns_56']
add ['esp,', '8']
cmp ['[ebp+var_14],', '0']
jle ['short', 'loc_A62']
xor ['eax,', 'eax']
jmp ['loc_AFC']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_A76']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+0E0h]']
jl ['short', 'loc_A81']
mov ['[ebp+var_14],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_AFC']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0E4h]']
mov ['eax,', '[eax+edx]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_AA9']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '7FFFFFFFh']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_AF6']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_AE5']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0E4h]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
imul ['ecx,', '0Ch']
mov ['esi,', '[ebp+arg_0]']
mov ['esi,', '[esi+0E4h]']
mov ['edx,', '[edx+eax+4]']
sub ['edx,', '[esi+ecx+4]']
mov ['eax,', '[ebp+arg_C]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_AF6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ecx+4]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_8]']
shr ['eax,', '1Fh']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN14']
dd ['offset', '$LN13']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_getRuns_56 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1B4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1B4]']
mov ['ecx,', '6Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0E0h],', '0']
jl ['short', 'loc_B75']
mov ['al,', '1']
jmp ['loc_101D']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+78h],', '2']
jz ['short', 'loc_B97']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+61h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_getSingleRun']
add ['esp,', '8']
jmp ['loc_E6E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_41],', '0FEh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+84h]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_BD2']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_C01']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_41]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_BFF']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_2C]']
mov ['cl,', '[eax]']
mov ['[ebp+var_41],', 'cl']
jmp ['short', 'loc_BC9']
cmp ['[ebp+var_38],', '1']
jnz ['short', 'loc_C27']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_C27']
mov ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_getSingleRun']
add ['esp,', '8']
jmp ['loc_E6E']
mov ['[ebp+var_71],', '7Eh']
mov ['[ebp+var_7D],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_C40']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+49h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '28h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '40h']
push ['ecx']
call ['_ubidi_getMemory_56']
add ['esp,', '10h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_C77']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+40h]']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_C7E']
xor ['al,', 'al']
jmp ['loc_101D']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_2C]']
mov ['cl,', '[eax]']
mov ['[ebp+var_41],', 'cl']
movzx ['eax,', '[ebp+var_41]']
movzx ['ecx,', '[ebp+var_71]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_CAF']
mov ['al,', '[ebp+var_41]']
mov ['[ebp+var_71],', 'al']
movzx ['eax,', '[ebp+var_41]']
movzx ['ecx,', '[ebp+var_7D]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_CC1']
mov ['al,', '[ebp+var_41]']
mov ['[ebp+var_7D],', 'al']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[ebp+var_14]']
jge ['short', 'loc_CE5']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_41]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_CE5']
jmp ['short', 'loc_CC1']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_68]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_5C]']
imul ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_50]']
mov ['[edx+ecx+4],', 'eax']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_50]']
mov ['dword', 'ptr', '[ecx+eax+8],', '0']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jl ['loc_C8C']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_D6F']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_5C]']
imul ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_50]']
mov ['[edx+ecx+4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+61h]']
movzx ['edx,', '[ebp+var_71]']
cmp ['ecx,', 'edx']
jge ['short', 'loc_D6F']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+61h]']
mov ['[ebp+var_71],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_50]']
mov ['[eax+0E4h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_38]']
mov ['[eax+0E0h],', 'ecx']
movzx ['eax,', '[ebp+var_7D]']
push ['eax']
movzx ['ecx,', '[ebp+var_71]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_reorderLine']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_DB6']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_E11']
mov ['eax,', '[ebp+var_2C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_2C]']
imul ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_50]']
mov ['ecx,', '[edx+ecx]']
mov ['edx,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx]']
shl ['ecx,', '1Fh']
mov ['edx,', '[ebp+var_50]']
or ['ecx,', '[edx+eax]']
mov ['eax,', '[ebp+var_2C]']
imul ['eax,', '0Ch']
mov ['edx,', '[ebp+var_50]']
mov ['[edx+eax],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_2C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+eax+4],', 'edx']
jmp ['short', 'loc_DAD']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_E6E']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+61h]']
and ['ecx,', '1']
jz ['short', 'loc_E31']
mov ['[ebp+var_1B4],', '0']
jmp ['short', 'loc_E3A']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_1B4],', 'edx']
mov ['eax,', '[ebp+var_1B4]']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_8C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+61h]']
shl ['edx,', '1Fh']
mov ['ecx,', '[ebp+var_50]']
or ['edx,', '[ecx+eax]']
mov ['eax,', '[ebp+var_8C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_50]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jle ['loc_F26']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+15Ch]']
mov ['[ebp+var_A4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+150h]']
mov ['edx,', '[ebp+var_A4]']
lea ['eax,', '[edx+ecx*8]']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_A4]']
mov ['[ebp+var_98],', 'eax']
jmp ['short', 'loc_EC2']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '8']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
cmp ['eax,', '[ebp+var_B0]']
jnb ['short', 'loc_F26']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_getRunFromLogicalIndex']
add ['esp,', '0Ch']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_BC]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0E4h]']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[edx+eax+8]']
or ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_BC]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['ecx,', '[ecx+0E4h]']
mov ['[ecx+eax+8],', 'edx']
jmp ['short', 'loc_EB3']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jle ['loc_101B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_D4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+var_D4]']
lea ['eax,', '[edx+ecx*2]']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+var_D4]']
mov ['[ebp+var_EC],', 'eax']
jmp ['short', 'loc_F74']
mov ['eax,', '[ebp+var_EC]']
add ['eax,', '2']
mov ['[ebp+var_EC],', 'eax']
mov ['eax,', '[ebp+var_EC]']
cmp ['eax,', '[ebp+var_E0]']
jnb ['loc_101B']
mov ['eax,', '[ebp+var_EC]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
and ['ecx,', '0FFFFFFFCh']
cmp ['ecx,', '200Ch']
jz ['short', 'loc_FC2']
mov ['eax,', '[ebp+var_EC]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '202Ah']
cmp ['ecx,', '5']
jb ['short', 'loc_FC2']
mov ['eax,', '[ebp+var_EC]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
sub ['ecx,', '2066h']
cmp ['ecx,', '4']
jnb ['short', 'loc_1016']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_EC]']
sub ['ecx,', '[ebp+var_D4]']
sar ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_getRunFromLogicalIndex']
add ['esp,', '0Ch']
mov ['[ebp+var_C8],', 'eax']
mov ['eax,', '[ebp+var_C8]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0E4h]']
mov ['eax,', '[edx+eax+8]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_C8]']
imul ['ecx,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['edx,', '[edx+0E4h]']
mov ['[edx+ecx+8],', 'eax']
jmp ['loc_F65']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1B4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_getSingleRun	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0E8h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0E4h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0E0h],', '1']
movzx ['eax,', '[ebp+arg_4]']
shl ['eax,', '1Fh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0E4h]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['dword', 'ptr', '[ecx+8],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_reorderLine	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
movzx ['eax,', '[ebp+arg_8]']
movzx ['ecx,', '[ebp+arg_4]']
or ['ecx,', '1']
cmp ['eax,', 'ecx']
jg ['short', 'loc_10E8']
jmp ['loc_12F3']
mov ['al,', '[ebp+arg_4]']
add ['al,', '1']
mov ['[ebp+arg_4],', 'al']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+84h]']
cmp ['edx,', '[ecx+10h]']
jge ['short', 'loc_112B']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['al,', '[ebp+arg_8]']
sub ['al,', '1']
mov ['[ebp+arg_8],', 'al']
movzx ['ecx,', '[ebp+arg_8]']
movzx ['edx,', '[ebp+arg_4]']
cmp ['ecx,', 'edx']
jl ['loc_1253']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_5C]']
jge ['short', 'loc_1178']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+eax]']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
movzx ['edx,', '[ebp+arg_8]']
cmp ['ecx,', 'edx']
jge ['short', 'loc_1178']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['short', 'loc_114A']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_5C]']
jl ['short', 'loc_1185']
jmp ['loc_124E']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
cmp ['ecx,', '[ebp+var_5C]']
jge ['short', 'loc_11B9']
mov ['eax,', '[ebp+var_50]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+eax]']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
movzx ['edx,', '[ebp+arg_8]']
cmp ['ecx,', 'edx']
jl ['short', 'loc_11B9']
jmp ['short', 'loc_118B']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_1234']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '0Ch']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[eax+8]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_44]']
imul ['eax,', '0Ch']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_38]']
imul ['ecx,', '0Ch']
add ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[eax+8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_44]']
imul ['eax,', '0Ch']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_11C2']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jnz ['short', 'loc_1240']
jmp ['short', 'loc_124E']
jmp ['short', 'loc_1249']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_114A']
jmp ['loc_112B']
movzx ['eax,', '[ebp+arg_4]']
and ['eax,', '1']
jnz ['loc_12F3']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+84h]']
cmp ['edx,', '[ecx+10h]']
jnz ['short', 'loc_1281']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_5C]']
jge ['short', 'loc_12F3']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '0Ch']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[eax+8]']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '0Ch']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_38]']
imul ['ecx,', '0Ch']
add ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[eax+8]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '0Ch']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
jmp ['short', 'loc_1281']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN23']
dd ['offset', '$LN22_0']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_getRunFromLogicalIndex	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_1383']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_13D6']
mov ['eax,', '[ebp+var_2C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_2C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax]']
and ['edx,', '7FFFFFFFh']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_44]']
jl ['short', 'loc_13CB']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_38]']
cmp ['[ebp+arg_4],', 'eax']
jge ['short', 'loc_13CB']
mov ['eax,', '[ebp+var_2C]']
jmp ['short', 'loc_140B']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_137A']
xor ['eax,', 'eax']
jnz ['short', 'loc_1400']
mov ['ecx,', 'ds:?__LINE__Var@?1??getRunFromLogicalIndex@@9@9@8534d2d2']
add ['ecx,', '0Dh']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '??_C@_1FI@BCBOJMPO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_13COJANIEC@?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1Bh']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_13COJANIEC@?$AA0?$AA?$AA@']
assume ['cs:_rdata']
public ['??_C@_1FI@BCBOJMPO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\ubidiln.c>,0']
assume ['cs:_data']
public ['?__LINE__Var@?1??getRunFromLogicalIndex@@9@9@8534d2d2']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_reorderLogical_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_29],', '0']
mov ['[ebp+var_35],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_14CF']
lea ['eax,', '[ebp+var_35]']
push ['eax']
lea ['ecx,', '[ebp+var_29]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_prepareReorder']
add ['esp,', '14h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_14D4']
jmp ['loc_15BC']
movzx ['eax,', '[ebp+var_29]']
movzx ['ecx,', '[ebp+var_35]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_14EE']
movzx ['eax,', '[ebp+var_29]']
and ['eax,', '1']
jnz ['short', 'loc_14EE']
jmp ['loc_15BC']
movzx ['eax,', '[ebp+var_29]']
or ['eax,', '1']
mov ['[ebp+var_29],', 'al']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_1523']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_35]']
cmp ['ecx,', 'edx']
jge ['short', 'loc_1523']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_14FF']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jl ['short', 'loc_152D']
jmp ['short', 'loc_15A4']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+arg_4]']
jge ['short', 'loc_1557']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_35]']
cmp ['ecx,', 'edx']
jl ['short', 'loc_1557']
jmp ['short', 'loc_1533']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_14]']
jl ['short', 'loc_1564']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_1596']
jmp ['short', 'loc_15A4']
jmp ['short', 'loc_159F']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_14FF']
mov ['al,', '[ebp+var_35]']
sub ['al,', '1']
mov ['[ebp+var_35],', 'al']
movzx ['ecx,', '[ebp+var_35]']
movzx ['edx,', '[ebp+var_29]']
cmp ['ecx,', 'edx']
jge ['loc_14F8']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN23_0']
dd ['offset', '$LN21_0']
retf
db ['3', 'dup(0FFh)']
dd ['1']
dd ['offset', '$LN22_1']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_prepareReorder	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1642']
cmp ['[ebp+arg_4],', '0']
jg ['short', 'loc_1649']
xor ['al,', 'al']
jmp ['loc_16D9']
mov ['[ebp+var_1D],', '7Eh']
mov ['[ebp+var_29],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_16A4']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_11],', 'dl']
movzx ['eax,', '[ebp+var_11]']
cmp ['eax,', '7Eh']
jle ['short', 'loc_167E']
xor ['al,', 'al']
jmp ['short', 'loc_16D9']
movzx ['eax,', '[ebp+var_11]']
movzx ['ecx,', '[ebp+var_1D]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_1690']
mov ['al,', '[ebp+var_11]']
mov ['[ebp+var_1D],', 'al']
movzx ['eax,', '[ebp+var_11]']
movzx ['ecx,', '[ebp+var_29]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_16A2']
mov ['al,', '[ebp+var_11]']
mov ['[ebp+var_29],', 'al']
jmp ['short', 'loc_1657']
mov ['eax,', '[ebp+arg_C]']
mov ['cl,', '[ebp+var_1D]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_10]']
mov ['cl,', '[ebp+var_29]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_16D7']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_16BA']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_reorderVisual_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '108h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_108]']
mov ['ecx,', '42h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_35],', '0']
mov ['[ebp+var_41],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_172F']
lea ['eax,', '[ebp+var_41]']
push ['eax']
lea ['ecx,', '[ebp+var_35]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_prepareReorder']
add ['esp,', '14h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1734']
jmp ['loc_183B']
movzx ['eax,', '[ebp+var_35]']
movzx ['ecx,', '[ebp+var_41]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_174E']
movzx ['eax,', '[ebp+var_35]']
and ['eax,', '1']
jnz ['short', 'loc_174E']
jmp ['loc_183B']
movzx ['eax,', '[ebp+var_35]']
or ['eax,', '1']
mov ['[ebp+var_35],', 'al']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_1783']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_41]']
cmp ['ecx,', 'edx']
jge ['short', 'loc_1783']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_175F']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jl ['short', 'loc_1790']
jmp ['loc_1823']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+arg_4]']
jge ['short', 'loc_17BA']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_20]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_41]']
cmp ['ecx,', 'edx']
jl ['short', 'loc_17BA']
jmp ['short', 'loc_1796']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_1809']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', '[ebp+arg_8]']
mov ['edx,', '[esi+edx*4]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_2C]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_17C3']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_1815']
jmp ['short', 'loc_1823']
jmp ['short', 'loc_181E']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_175F']
mov ['al,', '[ebp+var_41]']
sub ['al,', '1']
mov ['[ebp+var_41],', 'al']
movzx ['ecx,', '[ebp+var_41]']
movzx ['edx,', '[ebp+var_35]']
cmp ['ecx,', 'edx']
jge ['loc_1758']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '108h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN22_2']
endp
endp
_ubidi_getVisualIndex_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1CC]']
mov ['ecx,', '73h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0FFFFFFFFh']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_18C7']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_18CF']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_1D58']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_18F5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jz ['short', 'loc_1906']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_18F5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx]']
jz ['short', 'loc_1906']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1Bh']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_1D58']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_1917']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+10h]']
jl ['short', 'loc_1928']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_1D58']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+78h]']
mov ['[ebp+var_1CC],', 'ecx']
cmp ['[ebp+var_1CC],', '0']
jz ['short', 'loc_1948']
cmp ['[ebp+var_1CC],', '1']
jz ['short', 'loc_1953']
jmp ['short', 'loc_1967']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_1A5A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
sub ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['loc_1A5A']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ubidi_getRuns_56']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1994']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_1D58']
jmp ['loc_1A5A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_19B9']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+0E0h]']
jge ['short', 'loc_1A44']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax]']
and ['edx,', '7FFFFFFFh']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', 'edx']
mov ['[ebp+var_38],', 'eax']
js ['short', 'loc_1A36']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jge ['short', 'loc_1A36']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+eax]']
and ['edx,', '80000000h']
setz ['al']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1A25']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1A34']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1A44']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_44]']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_19B0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[eax+0E0h]']
jl ['short', 'loc_1A5A']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_1D58']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jle ['loc_1B1D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_50],', 'ecx']
mov ['[ebp+var_80],', '0']
mov ['[ebp+var_8C],', '0']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_1AA2']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_80]']
add ['ecx,', '[ebp+var_68]']
mov ['[ebp+var_80],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '[ebp+var_80]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '5']
jz ['short', 'loc_1ADC']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+eax+4]']
jge ['short', 'loc_1AFC']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_8C]']
jmp ['loc_1D58']
mov ['eax,', '[ebp+var_74]']
and ['eax,', '0Ah']
jz ['short', 'loc_1B13']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
jmp ['loc_1A90']
jmp ['loc_1D55']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jle ['loc_1D55']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_98],', 'ecx']
mov ['[ebp+var_EC],', '0']
mov ['[ebp+var_F8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', '[ecx+edx*2]']
mov ['[ebp+var_104],', 'ax']
movzx ['eax,', '[ebp+var_104]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['short', 'loc_1B97']
movzx ['eax,', '[ebp+var_104]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['short', 'loc_1B97']
movzx ['eax,', '[ebp+var_104]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jnb ['short', 'loc_1B9F']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_1D58']
mov ['[ebp+var_A4],', '0']
jmp ['short', 'loc_1BCC']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '1']
mov ['[ebp+var_A4],', 'eax']
mov ['ecx,', '[ebp+var_EC]']
add ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_EC],', 'ecx']
mov ['eax,', '[ebp+var_A4]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '[ebp+var_EC]']
mov ['[ebp+var_D4],', 'edx']
mov ['eax,', '[ebp+var_A4]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_E0],', 'edx']
mov ['eax,', '[ebp+var_A4]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+eax+4]']
jl ['short', 'loc_1C33']
mov ['eax,', '[ebp+var_F8]']
sub ['eax,', '[ebp+var_E0]']
mov ['[ebp+var_F8],', 'eax']
jmp ['loc_1BAB']
cmp ['[ebp+var_E0],', '0']
jnz ['short', 'loc_1C4A']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_F8]']
jmp ['loc_1D58']
mov ['eax,', '[ebp+var_A4]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+eax]']
and ['edx,', '80000000h']
setz ['al']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1C8F']
mov ['eax,', '[ebp+var_A4]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+eax]']
mov ['[ebp+var_BC],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C8],', 'eax']
jmp ['short', 'loc_1CBF']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_A4]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+eax]']
and ['edx,', '7FFFFFFFh']
add ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_C8],', 'edx']
mov ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_B0],', 'eax']
jmp ['short', 'loc_1CDC']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_C8]']
jge ['short', 'loc_1D45']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_B0]']
mov ['ax,', '[ecx+edx*2]']
mov ['[ebp+var_104],', 'ax']
movzx ['eax,', '[ebp+var_104]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['short', 'loc_1D34']
movzx ['eax,', '[ebp+var_104]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['short', 'loc_1D34']
movzx ['eax,', '[ebp+var_104]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jnb ['short', 'loc_1D43']
mov ['eax,', '[ebp+var_F8]']
add ['eax,', '1']
mov ['[ebp+var_F8],', 'eax']
jmp ['short', 'loc_1CCD']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+var_F8]']
jmp ['short', 'loc_1D58']
jmp ['loc_1BAB']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_getLogicalIndex_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1B4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1B4]']
mov ['ecx,', '6Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_1D98']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_1DA0']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_222C']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1DC6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jz ['short', 'loc_1DD7']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_1DC6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx]']
jz ['short', 'loc_1DD7']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1Bh']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_222C']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_1DE8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+14h]']
jl ['short', 'loc_1DF9']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_222C']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jnz ['short', 'loc_1E3E']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jnz ['short', 'loc_1E3E']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+78h],', '0']
jnz ['short', 'loc_1E24']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_222C']
jmp ['short', 'loc_1E3E']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+78h],', '1']
jnz ['short', 'loc_1E3E']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+10h]']
sub ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
jmp ['loc_222C']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ubidi_getRuns_56']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_1E66']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '7']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_222C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jle ['loc_1F5B']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1EC3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_50]']
add ['ecx,', '[ebp+var_5C]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '[ebp+var_50]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '5']
jz ['short', 'loc_1F0A']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '[ebp+var_38]']
cmp ['[ebp+arg_4],', 'eax']
jg ['short', 'loc_1F01']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_222C']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+4]']
add ['edx,', '[ebp+var_38]']
cmp ['[ebp+arg_4],', 'edx']
jge ['short', 'loc_1F2A']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_38]']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_1F56']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '0Ah']
jz ['short', 'loc_1F51']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '[ebp+var_5C]']
add ['eax,', '[ebp+var_38]']
cmp ['[ebp+arg_4],', 'eax']
jnz ['short', 'loc_1F48']
or ['eax,', '0FFFFFFFFh']
jmp ['loc_222C']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
jmp ['loc_1EB1']
jmp ['loc_212B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jle ['loc_212B']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_A4],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1F9D']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_A4]']
add ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_A4],', 'ecx']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '[ebp+var_A4]']
mov ['[ebp+var_80],', 'edx']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '[ebp+var_68]']
add ['edx,', '[ebp+var_74]']
cmp ['[ebp+arg_4],', 'edx']
jl ['short', 'loc_1FE6']
mov ['eax,', '[ebp+var_68]']
sub ['eax,', '[ebp+var_74]']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_1F85']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_1FFA']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+arg_4],', 'eax']
jmp ['loc_212B']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax]']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '80000000h']
setz ['cl']
mov ['[ebp+var_D1],', 'cl']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '7FFFFFFFh']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[ebp+var_8C]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_98],', 'edx']
mov ['[ebp+var_B0],', '0']
jmp ['short', 'loc_205F']
mov ['eax,', '[ebp+var_B0]']
add ['eax,', '1']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_B0]']
cmp ['eax,', '[ebp+var_80]']
jge ['loc_211B']
movsx ['eax,', '[ebp+var_D1]']
test ['eax,', 'eax']
jz ['short', 'loc_208D']
mov ['ecx,', '[ebp+var_8C]']
add ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_1B4],', 'ecx']
jmp ['short', 'loc_209F']
mov ['edx,', '[ebp+var_98]']
sub ['edx,', '[ebp+var_B0]']
mov ['[ebp+var_1B4],', 'edx']
mov ['eax,', '[ebp+var_1B4]']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_BC]']
mov ['ax,', '[ecx+edx*2]']
mov ['[ebp+var_C8],', 'ax']
movzx ['eax,', '[ebp+var_C8]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['short', 'loc_20F5']
movzx ['eax,', '[ebp+var_C8]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['short', 'loc_20F5']
movzx ['eax,', '[ebp+var_C8]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jnb ['short', 'loc_20FE']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+var_A4]']
add ['ecx,', '[ebp+var_B0]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_2116']
jmp ['short', 'loc_211B']
jmp ['loc_2050']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_212B']
jmp ['loc_1F85']
cmp ['[ebp+var_20],', '0Ah']
jg ['short', 'loc_2159']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_2143']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+eax+4]']
jl ['short', 'loc_2157']
jmp ['short', 'loc_213A']
jmp ['short', 'loc_21CA']
mov ['[ebp+var_E0],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_EC],', 'eax']
mov ['eax,', '[ebp+var_E0]']
add ['eax,', '[ebp+var_EC]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+eax+4]']
jl ['short', 'loc_21A0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_E0],', 'eax']
jmp ['short', 'loc_21C8']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_21BB']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+eax+4]']
jl ['short', 'loc_21BF']
jmp ['short', 'loc_21CA']
jmp ['short', 'loc_21C8']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_EC],', 'eax']
jmp ['short', 'loc_216C']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '80000000h']
setz ['cl']
movsx ['edx,', 'cl']
test ['edx,', 'edx']
jz ['short', 'loc_2211']
cmp ['[ebp+var_14],', '0']
jle ['short', 'loc_2207']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ecx+eax+4]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+arg_4]']
jmp ['short', 'loc_222C']
jmp ['short', 'loc_222C']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '7FFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
imul ['ecx,', '0Ch']
mov ['edx,', '[ebp+var_8]']
add ['eax,', '[edx+ecx+4]']
sub ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1B4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_getLogicalMap_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '19Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_19C]']
mov ['ecx,', '67h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_226C']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_2271']
jmp ['loc_2697']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ubidi_countRuns_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_228E']
jmp ['loc_2697']
cmp ['[ebp+Dst],', '0']
jnz ['short', 'loc_22A2']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_2697']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jg ['short', 'loc_22BC']
jmp ['loc_2697']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+10h]']
cmp ['edx,', '[ecx+14h]']
jle ['short', 'loc_22E5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
shl ['ecx,', '2']
push ['ecx']
push ['0FFh']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_22FE']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[eax+0E0h]']
jge ['loc_23B0']
mov ['eax,', '[ebp+var_2C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+eax]']
and ['edx,', '7FFFFFFFh']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_2C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_2C]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+eax]']
and ['edx,', '80000000h']
setz ['al']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2379']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jl ['short', 'loc_2351']
jmp ['short', 'loc_23AB']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_44]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ebp+Dst]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+ecx*4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jl ['short', 'loc_2385']
jmp ['loc_22F5']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jle ['loc_24AD']
mov ['[ebp+var_68],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_74],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_23F5']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_74]']
jge ['loc_24A8']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+var_80],', 'edx']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '5']
jz ['short', 'loc_243B']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jle ['short', 'loc_248F']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+eax]']
and ['edx,', '7FFFFFFFh']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_80]']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_2470']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_248F']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+eax*4]']
add ['edx,', '[ebp+var_68]']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_2467']
mov ['eax,', '[ebp+var_8C]']
and ['eax,', '0Ah']
jz ['short', 'loc_24A3']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
jmp ['loc_23E3']
jmp ['loc_2697']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jle ['loc_2697']
mov ['[ebp+var_98],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_A4],', 'ecx']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_24FB']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_B0]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_A4]']
jge ['loc_2697']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+var_B0],', 'edx']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_BC],', 'edx']
mov ['eax,', '[ebp+var_98]']
sub ['eax,', '[ebp+var_BC]']
jnz ['short', 'loc_2543']
jmp ['short', 'loc_24E6']
mov ['eax,', '[ebp+var_20]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+eax]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '80000000h']
setz ['cl']
mov ['[ebp+var_C5],', 'cl']
mov ['eax,', '[ebp+var_44]']
and ['eax,', '7FFFFFFFh']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '[ebp+var_B0]']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_BC],', '0']
jnz ['short', 'loc_25BB']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_2594']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_50]']
jge ['short', 'loc_25B6']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+eax*4]']
sub ['edx,', '[ebp+var_98]']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_258B']
jmp ['loc_24E6']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_25CD']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_B0]']
jge ['loc_2692']
movsx ['eax,', '[ebp+var_C5]']
test ['eax,', 'eax']
jz ['short', 'loc_25F5']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_19C],', 'ecx']
jmp ['short', 'loc_2604']
mov ['edx,', '[ebp+var_50]']
sub ['edx,', '[ebp+var_2C]']
sub ['edx,', '1']
mov ['[ebp+var_19C],', 'edx']
mov ['eax,', '[ebp+var_19C]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_38]']
mov ['ax,', '[ecx+edx*2]']
mov ['[ebp+var_D4],', 'ax']
movzx ['eax,', '[ebp+var_D4]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['short', 'loc_2654']
movzx ['eax,', '[ebp+var_D4]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['short', 'loc_2654']
movzx ['eax,', '[ebp+var_D4]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jnb ['short', 'loc_2675']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+Dst]']
mov ['dword', 'ptr', '[ecx+eax*4],', '0FFFFFFFFh']
jmp ['loc_25C4']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+Dst]']
mov ['edx,', '[ecx+eax*4]']
sub ['edx,', '[ebp+var_98]']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+Dst]']
mov ['[ecx+eax*4],', 'edx']
jmp ['loc_25C4']
jmp ['loc_24E6']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '19Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_getVisualMap_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1CC]']
mov ['ecx,', '73h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_26D8']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_26DD']
jmp ['loc_2BFD']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_26F1']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_2BFD']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ubidi_countRuns_56']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jg ['loc_2BFD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
imul ['ecx,', '0Ch']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jg ['short', 'loc_273F']
jmp ['loc_2BFD']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_2751']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_14]']
jnb ['loc_27F4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '80000000h']
setz ['cl']
movsx ['edx,', 'cl']
test ['edx,', 'edx']
jz ['short', 'loc_27AD']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '4']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[ebp+var_38]']
jl ['short', 'loc_2780']
jmp ['short', 'loc_27EF']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '7FFFFFFFh']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_44]']
add ['eax,', '4']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[ebp+var_38]']
jl ['short', 'loc_27C4']
jmp ['loc_2748']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+150h],', '0']
jle ['loc_29A2']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_2835']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_5C]']
jge ['short', 'loc_2871']
mov ['eax,', '[ebp+var_74]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '5']
jz ['short', 'loc_285E']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '0Ah']
jz ['short', 'loc_286F']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_282C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_8C],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_2891']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jl ['loc_299D']
cmp ['[ebp+var_50],', '0']
jle ['loc_299D']
mov ['eax,', '[ebp+var_74]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '0Ah']
jz ['short', 'loc_28E5']
mov ['eax,', '[ebp+var_8C]']
sub ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_74],', '0']
jle ['short', 'loc_2903']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '1']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_1CC],', 'edx']
jmp ['short', 'loc_290D']
mov ['[ebp+var_1CC],', '0']
mov ['eax,', '[ebp+var_1CC]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_74]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '1']
mov ['[ebp+var_80],', 'edx']
jmp ['short', 'loc_2934']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '1']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+var_2C]']
jl ['short', 'loc_2968']
cmp ['[ebp+var_50],', '0']
jle ['short', 'loc_2968']
mov ['eax,', '[ebp+var_8C]']
sub ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_80]']
mov ['esi,', '[ebp+arg_4]']
mov ['eax,', '[esi+eax*4]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_292B']
mov ['eax,', '[ebp+var_68]']
and ['eax,', '5']
jz ['short', 'loc_2998']
mov ['eax,', '[ebp+var_8C]']
sub ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
jmp ['loc_2888']
jmp ['loc_2BFD']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+160h],', '0']
jle ['loc_2BFD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E0h]']
mov ['[ebp+var_98],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0E4h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_E0],', '0']
mov ['[ebp+var_C8],', '0']
jmp ['short', 'loc_2A05']
mov ['eax,', '[ebp+var_C8]']
add ['eax,', '1']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '[ebp+var_BC]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+var_C8]']
cmp ['eax,', '[ebp+var_98]']
jge ['loc_2BFD']
mov ['eax,', '[ebp+var_C8]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+4]']
sub ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_BC],', 'edx']
mov ['eax,', '[ebp+var_C8]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_B0],', 'edx']
cmp ['[ebp+var_B0],', '0']
jnz ['short', 'loc_2A71']
mov ['eax,', '[ebp+var_E0]']
cmp ['eax,', '[ebp+var_2C]']
jnz ['short', 'loc_2A71']
mov ['eax,', '[ebp+var_E0]']
add ['eax,', '[ebp+var_BC]']
mov ['[ebp+var_E0],', 'eax']
jmp ['loc_29EA']
cmp ['[ebp+var_B0],', '0']
jnz ['short', 'loc_2AE0']
mov ['eax,', '[ebp+var_C8]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_D4],', 'eax']
jmp ['short', 'loc_2AA7']
mov ['eax,', '[ebp+var_D4]']
add ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_D4]']
cmp ['eax,', '[ebp+var_38]']
jge ['short', 'loc_2ADB']
mov ['eax,', '[ebp+var_E0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_D4]']
mov ['esi,', '[ebp+arg_4]']
mov ['edx,', '[esi+edx*4]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_E0]']
add ['eax,', '1']
mov ['[ebp+var_E0],', 'eax']
jmp ['short', 'loc_2A98']
jmp ['loc_29EA']
mov ['eax,', '[ebp+var_C8]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '80000000h']
setz ['cl']
mov ['[ebp+var_101],', 'cl']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '7FFFFFFFh']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_BC]']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[ecx+eax-1]']
mov ['[ebp+var_A4],', 'edx']
mov ['[ebp+var_D4],', '0']
jmp ['short', 'loc_2B3C']
mov ['eax,', '[ebp+var_D4]']
add ['eax,', '1']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_D4]']
cmp ['eax,', '[ebp+var_BC]']
jge ['loc_2BF8']
movsx ['eax,', '[ebp+var_101]']
test ['eax,', 'eax']
jz ['short', 'loc_2B6A']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '[ebp+var_D4]']
mov ['[ebp+var_1CC],', 'ecx']
jmp ['short', 'loc_2B7C']
mov ['edx,', '[ebp+var_A4]']
sub ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_1CC],', 'edx']
mov ['eax,', '[ebp+var_1CC]']
mov ['[ebp+var_EC],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_EC]']
mov ['ax,', '[ecx+edx*2]']
mov ['[ebp+var_F8],', 'ax']
movzx ['eax,', '[ebp+var_F8]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['short', 'loc_2BF3']
movzx ['eax,', '[ebp+var_F8]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['short', 'loc_2BF3']
movzx ['eax,', '[ebp+var_F8]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jb ['short', 'loc_2BF3']
mov ['eax,', '[ebp+var_E0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_EC]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_E0]']
add ['eax,', '1']
mov ['[ebp+var_E0],', 'eax']
jmp ['loc_2B2D']
jmp ['loc_29EA']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '1CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_invertMap_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
jz ['loc_2D10']
cmp ['[ebp+Dst],', '0']
jz ['loc_2D10']
cmp ['[ebp+arg_8],', '0']
jle ['loc_2D10']
mov ['[ebp+var_14],', '0FFFFFFFFh']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jbe ['short', 'loc_2CA0']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_14]']
jle ['short', 'loc_2C8D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jl ['short', 'loc_2C9E']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_2C6A']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jge ['short', 'loc_2CC9']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '2']
push ['eax']
push ['0FFh']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_2D10']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx],', '0']
jl ['short', 'loc_2D05']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_2D0E']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_2CD5']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_ubidi_getParaLevelAtIndex_56:near']
extrn ['_ubidi_getParagraph_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_memset:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_ubidi_getMemory_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__imp___wassert:near']
end

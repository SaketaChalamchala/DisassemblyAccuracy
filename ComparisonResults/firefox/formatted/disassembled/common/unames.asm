endp
??2@YAPAXI@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
??3@YAXPAX@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '5']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_charName_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_3C1']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3CA']
xor ['eax,', 'eax']
jmp ['loc_53A']
jmp ['short', 'loc_3F2']
cmp ['[ebp+arg_4],', '4']
jge ['short', 'loc_3E2']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_3E2']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_3F2']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_3F2']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_53A']
cmp ['[ebp+arg_0],', '10FFFFh']
ja ['short', 'loc_40E']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
call ['?isDataLoaded@icu_56@@YACPAW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_429']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_u_terminateChars_56']
add ['esp,', '10h']
jmp ['loc_53A']
mov ['[ebp+var_2C],', '0']
mov ['eax,', 'ds:_uCharNames']
mov ['ecx,', 'ds:_uCharNames']
add ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_20],', '0']
jbe ['short', 'loc_4AA']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
ja ['short', 'loc_492']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
ja ['short', 'loc_492']
movzx ['eax,', 'word', 'ptr', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['?getAlgName@icu_56@@YAGPAUAlgorithmicRange@1@IW4UCharNameChoice@@PADG@Z']
add ['esp,', '14h']
movzx ['edx,', 'ax']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_4AA']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ah]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_452']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_522']
cmp ['[ebp+arg_4],', '2']
jnz ['short', 'loc_4FC']
movzx ['eax,', 'word', 'ptr', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['2']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', 'ds:_uCharNames']
push ['eax']
call ['?getName@icu_56@@YAGPAUUCharNames@1@IW4UCharNameChoice@@PADG@Z']
add ['esp,', '14h']
movzx ['ecx,', 'ax']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_4FA']
movzx ['eax,', 'word', 'ptr', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?getExtName@icu_56@@YAGIPADG@Z']
add ['esp,', '0Ch']
movzx ['eax,', 'ax']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_522']
movzx ['eax,', 'word', 'ptr', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', 'ds:_uCharNames']
push ['ecx']
call ['?getName@icu_56@@YAGPAUUCharNames@1@IW4UCharNameChoice@@PADG@Z']
add ['esp,', '14h']
movzx ['edx,', 'ax']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_terminateChars_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_FAILURE@@YACW4UErrorCode@@@Z	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setnle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isDataLoaded@icu_56@@YACPAW4UErrorCode@@@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '?loadCharNames@icu_56@@YAXAAW4UErrorCode@@@Z']
push ['offset', '_gCharNamesInitOnce']
call ['?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_SUCCESS@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?U_SUCCESS@@YACW4UErrorCode@@@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0']
setle ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_initOnce@icu_56@@YAXAAUUInitOnce@1@P6AXAAW4UErrorCode@@@Z1@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_635']
jmp ['short', 'loc_6A6']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_loadAcquire@icu_56@@YAHACJ@Z']
add ['esp,', '4']
cmp ['eax,', '2']
jz ['short', 'loc_685']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_685']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['[ebp+arg_4]']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z']
add ['esp,', '4']
jmp ['short', 'loc_6A6']
mov ['eax,', '[ebp+Destination]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6A6']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+Destination]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?umtx_loadAcquire@icu_56@@YAHACJ@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['eax,', '[ebp+Destination]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InterlockedCompareExchange@12']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?loadCharNames@icu_56@@YAXAAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_uCharNamesData,', '0']
jz ['short', 'loc_754']
mov ['eax,', 'ds:?__LINE__Var@?1??loadCharNames@icu_56@@YAXAAW4UErrorCode@@@Z@4JA@8fdf9c70']
add ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@PMLMHPOO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1CI@DCKLDHII@?$AAu?$AAC?$AAh?$AAa?$AAr?$AAN?$AAa?$AAm?$AAe?$AAs?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['ds:_uCharNames,', '0']
jz ['short', 'loc_782']
mov ['eax,', 'ds:?__LINE__Var@?1??loadCharNames@icu_56@@YAXAAW4UErrorCode@@@Z@4JA@8fdf9c70']
add ['eax,', '2']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_1FK@PMLMHPOO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
push ['offset', '??_C@_1CA@KPGJIAP@?$AAu?$AAC?$AAh?$AAa?$AAr?$AAN?$AAa?$AAm?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
call ['dword', 'ptr', 'ds:__imp___wassert']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['0']
push ['offset', '?isAcceptable@icu_56@@YACPAXPBD1PBUUDataInfo@@@Z']
push ['offset', '_DATA_NAME']
push ['offset', '_DATA_TYPE']
push ['0']
call ['_udata_openChoice_56']
add ['esp,', '18h']
mov ['ds:_uCharNamesData,', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7C7']
mov ['ds:_uCharNamesData,', '0']
jmp ['short', 'loc_7DA']
mov ['eax,', 'ds:_uCharNamesData']
push ['eax']
call ['_udata_getMemory_56']
add ['esp,', '4']
mov ['ds:_uCharNames,', 'eax']
push ['offset', '?unames_cleanup@icu_56@@YACXZ']
push ['0Bh']
call ['_ucln_common_registerCleanup_56']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_1CA@KPGJIAP@?$AAu?$AAC?$AAh?$AAa?$AAr?$AAN?$AAa?$AAm?$AAe?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<uCharNames', '==', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1CI@DCKLDHII@?$AAu?$AAC?$AAh?$AAa?$AAr?$AAN?$AAa?$AAm?$AAe?$AAs?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@']
unicode ['0,', '<uCharNamesData', '==', '0>,0']
assume ['cs:_rdata']
public ['??_C@_1FK@PMLMHPOO@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAc?$AAo?$AAm?$AAm?$AAo@']
unicode ['0,', '<d:\\mozilla\\intl\\icu\\source\\common\\unames.cpp>,0']
align ['4']
assume ['cs:_data']
public ['?__LINE__Var@?1??loadCharNames@icu_56@@YAXAAW4UErrorCode@@@Z@4JA@8fdf9c70']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?unames_cleanup@icu_56@@YACXZ proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_uCharNamesData,', '0']
jz ['short', 'loc_8E7']
mov ['eax,', 'ds:_uCharNamesData']
push ['eax']
call ['_udata_close_56']
add ['esp,', '4']
mov ['ds:_uCharNamesData,', '0']
cmp ['ds:_uCharNames,', '0']
jz ['short', 'loc_8FA']
mov ['ds:_uCharNames,', '0']
mov ['ecx,', 'offset', '_gCharNamesInitOnce']
call ['?reset@UInitOnce@icu_56@@QAEXXZ']
mov ['ds:_gMaxNameLength,', '0']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?reset@UInitOnce@icu_56@@QAEXXZ	proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
push ['ecx']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
pop ['ecx']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?isAcceptable@icu_56@@YACPAXPBD1PBUUDataInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['ecx,', '14h']
jl ['short', 'loc_9DC']
mov ['edx,', '[ebp+arg_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
test ['eax,', 'eax']
jnz ['short', 'loc_9DC']
mov ['ecx,', '[ebp+arg_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5]']
test ['edx,', 'edx']
jnz ['short', 'loc_9DC']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '75h']
jnz ['short', 'loc_9DC']
mov ['edx,', '[ebp+arg_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+9]']
cmp ['eax,', '6Eh']
jnz ['short', 'loc_9DC']
mov ['ecx,', '[ebp+arg_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ah]']
cmp ['edx,', '61h']
jnz ['short', 'loc_9DC']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
cmp ['ecx,', '6Dh']
jnz ['short', 'loc_9DC']
mov ['edx,', '[ebp+arg_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Ch]']
cmp ['eax,', '1']
jnz ['short', 'loc_9DC']
mov ['[ebp+var_C1],', '1']
jmp ['short', 'loc_9E3']
mov ['[ebp+var_C1],', '0']
mov ['al,', '[ebp+var_C1]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getExtName@icu_56@@YAGIPADG@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_10C]']
mov ['ecx,', '43h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?getCharCatName@icu_56@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jle ['short', 'loc_A46']
mov ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax],', '3Ch']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['ax,', '[ebp+arg_8]']
sub ['ax,', '1']
mov ['[ebp+arg_8],', 'ax']
mov ['ax,', '[ebp+var_14]']
add ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
test ['edx,', 'edx']
jz ['short', 'loc_A9D']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jle ['short', 'loc_A8F']
movzx ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_8]']
mov ['al,', '[edx+eax-1]']
mov ['[ecx],', 'al']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['ax,', '[ebp+arg_8]']
sub ['ax,', '1']
mov ['[ebp+arg_8],', 'ax']
mov ['ax,', '[ebp+var_14]']
add ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
jmp ['short', 'loc_A52']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jle ['short', 'loc_AC0']
mov ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax],', '2Dh']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['ax,', '[ebp+arg_8]']
sub ['ax,', '1']
mov ['[ebp+arg_8],', 'ax']
mov ['ax,', '[ebp+var_14]']
add ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_AED']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
sar ['ecx,', '4']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_AF5']
jmp ['short', 'loc_ADB']
cmp ['[ebp+var_2C],', '4']
jge ['short', 'loc_B02']
mov ['[ebp+var_2C],', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_38],', 'ecx']
jmp ['short', 'loc_B25']
mov ['eax,', '[ebp+var_20]']
sar ['eax,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['cx,', '[ebp+arg_8]']
sub ['cx,', '1']
mov ['[ebp+arg_8],', 'cx']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_B31']
cmp ['[ebp+var_38],', '0']
jle ['short', 'loc_B80']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_B80']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0Fh']
mov ['[ebp+var_41],', 'al']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '0Ah']
jge ['short', 'loc_B5A']
movzx ['ecx,', '[ebp+var_41]']
add ['ecx,', '30h']
mov ['[ebp+var_10C],', 'ecx']
jmp ['short', 'loc_B67']
movzx ['edx,', '[ebp+var_41]']
add ['edx,', '37h']
mov ['[ebp+var_10C],', 'edx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '[ebp+var_38]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_10C]']
mov ['[ecx],', 'dl']
jmp ['short', 'loc_B10']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+arg_4],', 'eax']
movzx ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jle ['short', 'loc_BB7']
mov ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax],', '3Eh']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['ax,', '[ebp+arg_8]']
sub ['ax,', '1']
mov ['[ebp+arg_8],', 'ax']
mov ['ax,', '[ebp+var_14]']
add ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
mov ['ax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '10Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCharCatName@icu_56@@YAPBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?getCharCat@icu_56@@YAEH@Z']
add ['esp,', '4']
mov ['[ebp+var_5],', 'al']
movzx ['eax,', '[ebp+var_5]']
cmp ['eax,', '21h']
jl ['short', 'loc_C1B']
mov ['eax,', 'offset', '??_C@_07CIFAGBMG@unknown?$AA@']
jmp ['short', 'loc_C26']
jmp ['short', 'loc_C26']
movzx ['eax,', '[ebp+var_5]']
mov ['eax,', 'ds:_charCatNames[eax*4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_07CIFAGBMG@unknown?$AA@']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getCharCat@icu_56@@YAEH@Z proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_0],', '0FDD0h']
jl ['short', 'loc_C90']
cmp ['[ebp+arg_0],', '0FDEFh']
jbe ['short', 'loc_C83']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFEh']
cmp ['eax,', '0FFFEh']
jnz ['short', 'loc_C90']
cmp ['[ebp+arg_0],', '10FFFFh']
ja ['short', 'loc_C90']
mov ['al,', '1Eh']
jmp ['short', 'loc_CC3']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_charType_56']
add ['esp,', '4']
mov ['[ebp+var_5],', 'al']
movzx ['ecx,', '[ebp+var_5]']
cmp ['ecx,', '12h']
jnz ['short', 'loc_CC0']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '0FFFFFC00h']
xor ['ecx,', 'ecx']
cmp ['eax,', '0D800h']
setnz ['cl']
add ['ecx,', '1Fh']
mov ['[ebp+var_5],', 'cl']
mov ['al,', '[ebp+var_5]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getName@icu_56@@YAGPAUUCharNames@1@IW4UCharNameChoice@@PADG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?getGroup@icu_56@@YAPBGPAUUCharNames@1@I@Z']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '5']
movzx ['ecx,', 'ax']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_D44']
movzx ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1Fh']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?expandGroupName@icu_56@@YAGPAUUCharNames@1@PBGGW4UCharNameChoice@@PADG@Z']
add ['esp,', '18h']
jmp ['short', 'loc_D54']
jmp ['short', 'loc_D54']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jle ['short', 'loc_D52']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getGroup@icu_56@@YAPBGPAUUCharNames@1@I@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '5']
mov ['[ebp+var_14],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['[ebp+var_2C],', 'cx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '1']
cmp ['eax,', 'ecx']
jge ['short', 'loc_E01']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_2C]']
add ['eax,', 'ecx']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_38],', 'ax']
movzx ['eax,', '[ebp+var_14]']
movzx ['ecx,', '[ebp+var_38]']
imul ['ecx,', '3']
mov ['edx,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_DF7']
mov ['ax,', '[ebp+var_38]']
mov ['[ebp+var_2C],', 'ax']
jmp ['short', 'loc_DFF']
mov ['ax,', '[ebp+var_38]']
mov ['[ebp+var_20],', 'ax']
jmp ['short', 'loc_DB5']
movzx ['eax,', '[ebp+var_20]']
imul ['eax,', '3']
mov ['ecx,', '[ebp+var_8]']
lea ['eax,', '[ecx+eax*2]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?expandGroupName@icu_56@@YAGPAUUCharNames@1@PBGGW4UCharNameChoice@@PADG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '168h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_168]']
mov ['ecx,', '5Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
shl ['eax,', '10h']
mov ['edx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[edx+4]']
or ['eax,', 'edx']
add ['ecx,', 'eax']
mov ['[ebp+var_A4],', 'ecx']
lea ['eax,', '[ebp+var_98]']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+var_A4]']
push ['edx']
call ['?expandGroupLengths@icu_56@@YAPBEPBEQAG1@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_A4],', 'eax']
movzx ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
movzx ['eax,', '[ebp+arg_8]']
movzx ['ecx,', '[ebp+eax*2+var_98]']
push ['ecx']
movzx ['edx,', '[ebp+arg_8]']
movzx ['eax,', '[ebp+edx*2+var_4C]']
add ['eax,', '[ebp+var_A4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?expandName@icu_56@@YAGPAUUCharNames@1@PBEGW4UCharNameChoice@@PADG@Z']
add ['esp,', '18h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '168h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5']
dd ['offset', '$LN3']
dd ['0FFFFFF68h,', '44h']
dd ['offset', '$LN4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?expandName@icu_56@@YAGPAUUCharNames@1@PBEGW4UCharNameChoice@@PADG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['[ebp+var_20],', 'cx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
xor ['eax,', 'eax']
mov ['[ebp+var_2C],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['loc_101D']
cmp ['[ebp+arg_C],', '2']
jz ['loc_101D']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '3Bh']
jle ['short', 'loc_F97']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+76h]']
cmp ['ecx,', '0FFFFh']
jnz ['loc_1017']
cmp ['[ebp+arg_C],', '4']
jnz ['short', 'loc_FA9']
mov ['[ebp+var_124],', '2']
jmp ['short', 'loc_FB2']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+var_50],', 'ecx']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jle ['short', 'loc_1006']
mov ['ax,', '[ebp+arg_8]']
sub ['ax,', '1']
mov ['[ebp+arg_8],', 'ax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
cmp ['ecx,', '3Bh']
jnz ['short', 'loc_FEF']
mov ['[ebp+var_124],', '1']
jmp ['short', 'loc_FF9']
mov ['[ebp+var_124],', '0']
cmp ['[ebp+var_124],', '0']
jz ['short', 'loc_1004']
jmp ['short', 'loc_1006']
jmp ['short', 'loc_FBB']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jg ['short', 'loc_FBB']
jmp ['short', 'loc_101D']
xor ['eax,', 'eax']
mov ['[ebp+arg_8],', 'ax']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jle ['loc_11D1']
mov ['ax,', '[ebp+arg_8]']
sub ['ax,', '1']
mov ['[ebp+arg_8],', 'ax']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['[ebp+var_41],', 'cl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', '[ebp+var_41]']
movzx ['ecx,', '[ebp+var_20]']
cmp ['eax,', 'ecx']
jl ['short', 'loc_1098']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '3Bh']
jz ['short', 'loc_108E']
movzx ['eax,', '[ebp+arg_14]']
test ['eax,', 'eax']
jle ['short', 'loc_1080']
mov ['eax,', '[ebp+arg_10]']
mov ['cl,', '[ebp+var_41]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '1']
mov ['[ebp+arg_10],', 'edx']
mov ['ax,', '[ebp+arg_14]']
sub ['ax,', '1']
mov ['[ebp+arg_14],', 'ax']
mov ['ax,', '[ebp+var_2C]']
add ['ax,', '1']
mov ['[ebp+var_2C],', 'ax']
jmp ['short', 'loc_1093']
jmp ['loc_11D1']
jmp ['loc_11CC']
movzx ['eax,', '[ebp+var_41]']
mov ['ecx,', '[ebp+var_8]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_14],', 'dx']
movzx ['eax,', '[ebp+var_14]']
cmp ['eax,', '0FFFEh']
jnz ['short', 'loc_10E1']
movzx ['eax,', '[ebp+var_41]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_14],', 'dx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ax,', '[ebp+arg_8]']
sub ['ax,', '1']
mov ['[ebp+arg_8],', 'ax']
movzx ['eax,', '[ebp+var_14]']
cmp ['eax,', '0FFFFh']
jnz ['short', 'loc_1157']
movzx ['eax,', '[ebp+var_41]']
cmp ['eax,', '3Bh']
jz ['short', 'loc_1128']
movzx ['eax,', '[ebp+arg_14]']
test ['eax,', 'eax']
jle ['short', 'loc_111A']
mov ['eax,', '[ebp+arg_10]']
mov ['cl,', '[ebp+var_41]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '1']
mov ['[ebp+arg_10],', 'edx']
mov ['ax,', '[ebp+arg_14]']
sub ['ax,', '1']
mov ['[ebp+arg_14],', 'ax']
mov ['ax,', '[ebp+var_2C]']
add ['ax,', '1']
mov ['[ebp+var_2C],', 'ax']
jmp ['short', 'loc_1155']
movzx ['eax,', '[ebp+var_2C]']
test ['eax,', 'eax']
jnz ['short', 'loc_1153']
cmp ['[ebp+arg_C],', '2']
jnz ['short', 'loc_1153']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '3Bh']
jle ['short', 'loc_114E']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+76h]']
cmp ['ecx,', '0FFFFh']
jnz ['short', 'loc_1153']
jmp ['loc_101D']
jmp ['short', 'loc_11D1']
jmp ['short', 'loc_11CC']
movzx ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_38]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['cl,', '[eax]']
mov ['[ebp+var_41],', 'cl']
movzx ['edx,', '[ebp+var_41]']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_1186']
mov ['[ebp+var_124],', '1']
jmp ['short', 'loc_1190']
mov ['[ebp+var_124],', '0']
cmp ['[ebp+var_124],', '0']
jz ['short', 'loc_11CC']
movzx ['eax,', '[ebp+arg_14]']
test ['eax,', 'eax']
jle ['short', 'loc_11BE']
mov ['eax,', '[ebp+arg_10]']
mov ['cl,', '[ebp+var_41]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+arg_10]']
add ['edx,', '1']
mov ['[ebp+arg_10],', 'edx']
mov ['ax,', '[ebp+arg_14]']
sub ['ax,', '1']
mov ['[ebp+arg_14],', 'ax']
mov ['ax,', '[ebp+var_2C]']
add ['ax,', '1']
mov ['[ebp+var_2C],', 'ax']
jmp ['short', 'loc_1161']
jmp ['loc_101D']
movzx ['eax,', '[ebp+arg_14]']
test ['eax,', 'eax']
jle ['short', 'loc_11DF']
mov ['eax,', '[ebp+arg_10]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ax,', '[ebp+var_2C]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?expandGroupLengths@icu_56@@YAPBEPBEQAG1@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
xor ['eax,', 'eax']
mov ['[ebp+var_8],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_14],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_8]']
cmp ['eax,', '20h']
jge ['loc_1343']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax]']
mov ['[ebp+var_29],', 'cl']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '0Ch']
jl ['short', 'loc_1269']
movzx ['eax,', '[ebp+var_20]']
and ['eax,', '3']
shl ['eax,', '4']
movzx ['ecx,', '[ebp+var_29]']
sar ['ecx,', '4']
or ['eax,', 'ecx']
add ['eax,', '0Ch']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_29]']
and ['eax,', '0Fh']
mov ['[ebp+var_29],', 'al']
jmp ['short', 'loc_1299']
movzx ['eax,', '[ebp+var_29]']
cmp ['eax,', '0C0h']
jl ['short', 'loc_1284']
movzx ['eax,', '[ebp+var_29]']
and ['eax,', '3Fh']
add ['eax,', '0Ch']
mov ['[ebp+var_20],', 'ax']
jmp ['short', 'loc_1299']
movzx ['eax,', '[ebp+var_29]']
sar ['eax,', '4']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_29]']
and ['eax,', '0Fh']
mov ['[ebp+var_29],', 'al']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[ebp+var_14]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['cx,', '[ebp+var_20]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '2']
mov ['[ebp+arg_8],', 'edx']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_14]']
add ['ecx,', 'eax']
mov ['[ebp+var_14],', 'cx']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
movzx ['eax,', '[ebp+var_29]']
and ['eax,', '0F0h']
jnz ['short', 'loc_1338']
movzx ['ax,', '[ebp+var_29]']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '0Ch']
jge ['short', 'loc_1336']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[ebp+var_14]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['cx,', '[ebp+var_20]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '2']
mov ['[ebp+arg_8],', 'edx']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_14]']
add ['ecx,', 'eax']
mov ['[ebp+var_14],', 'cx']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
jmp ['short', 'loc_133E']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
jmp ['loc_121C']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?getAlgName@icu_56@@YAGPAUAlgorithmicRange@1@IW4UCharNameChoice@@PADG@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_14C]']
mov ['ecx,', '53h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_C],', 'ax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_139F']
cmp ['[ebp+arg_8],', '2']
jz ['short', 'loc_139F']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jle ['short', 'loc_1398']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax],', '0']
xor ['eax,', 'eax']
jmp ['loc_15BE']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+8]']
mov ['byte', 'ptr', '[ebp+var_14C],', 'cl']
cmp ['byte', 'ptr', '[ebp+var_14C],', '0']
jz ['short', 'loc_13C6']
cmp ['byte', 'ptr', '[ebp+var_14C],', '1']
jz ['loc_14D8']
jmp ['loc_15AC']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['cl,', '[eax]']
mov ['[ebp+var_21],', 'cl']
movsx ['edx,', '[ebp+var_21]']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_13F4']
mov ['[ebp+var_14C],', '1']
jmp ['short', 'loc_13FE']
mov ['[ebp+var_14C],', '0']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_143A']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jle ['short', 'loc_142C']
mov ['eax,', '[ebp+arg_C]']
mov ['cl,', '[ebp+var_21]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '1']
mov ['[ebp+arg_C],', 'edx']
mov ['ax,', '[ebp+arg_10]']
sub ['ax,', '1']
mov ['[ebp+arg_10],', 'ax']
mov ['ax,', '[ebp+var_C]']
add ['ax,', '1']
mov ['[ebp+var_C],', 'ax']
jmp ['short', 'loc_13CF']
mov ['eax,', '[ebp+arg_0]']
movzx ['cx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_3C],', 'cx']
movzx ['eax,', '[ebp+var_3C]']
movzx ['ecx,', '[ebp+arg_10]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_145D']
movzx ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[ecx+eax],', '0']
mov ['ax,', '[ebp+var_3C]']
mov ['[ebp+var_30],', 'ax']
movzx ['eax,', '[ebp+var_30]']
test ['eax,', 'eax']
jle ['short', 'loc_14C5']
mov ['ax,', '[ebp+var_30]']
sub ['ax,', '1']
mov ['[ebp+var_30],', 'ax']
movzx ['ecx,', '[ebp+var_30]']
movzx ['edx,', '[ebp+arg_10]']
cmp ['ecx,', 'edx']
jge ['short', 'loc_14BA']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0Fh']
mov ['[ebp+var_21],', 'al']
movsx ['eax,', '[ebp+var_21]']
cmp ['eax,', '0Ah']
jge ['short', 'loc_14A3']
movsx ['eax,', '[ebp+var_21]']
add ['eax,', '30h']
mov ['[ebp+var_21],', 'al']
jmp ['short', 'loc_14AD']
movsx ['eax,', '[ebp+var_21]']
add ['eax,', '37h']
mov ['[ebp+var_21],', 'al']
movzx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+arg_C]']
mov ['dl,', '[ebp+var_21]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+arg_4]']
shr ['eax,', '4']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_1465']
movzx ['eax,', '[ebp+var_3C]']
movzx ['ecx,', '[ebp+var_C]']
add ['ecx,', 'eax']
mov ['[ebp+var_C],', 'cx']
jmp ['loc_15BA']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['cx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_6C],', 'cx']
movzx ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+var_60]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_78],', 'edx']
mov ['eax,', '[ebp+var_78]']
mov ['cl,', '[eax]']
mov ['[ebp+var_81],', 'cl']
movsx ['edx,', '[ebp+var_81]']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '1']
mov ['[ebp+var_78],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_1525']
mov ['[ebp+var_14C],', '1']
jmp ['short', 'loc_152F']
mov ['[ebp+var_14C],', '0']
cmp ['[ebp+var_14C],', '0']
jz ['short', 'loc_156E']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jle ['short', 'loc_1560']
mov ['eax,', '[ebp+arg_C]']
mov ['cl,', '[ebp+var_81]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '1']
mov ['[ebp+arg_C],', 'edx']
mov ['ax,', '[ebp+arg_10]']
sub ['ax,', '1']
mov ['[ebp+arg_10],', 'ax']
mov ['ax,', '[ebp+var_C]']
add ['ax,', '1']
mov ['[ebp+var_C],', 'ax']
jmp ['short', 'loc_14FA']
movzx ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['0']
push ['0']
lea ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_78]']
push ['edx']
movzx ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
call ['?writeFactorSuffix@icu_56@@YAGPBGGPBDIQAGQAPBD3PADG@Z']
add ['esp,', '24h']
movzx ['edx,', 'ax']
movzx ['eax,', '[ebp+var_C]']
add ['eax,', 'edx']
mov ['[ebp+var_C],', 'ax']
jmp ['short', 'loc_15BA']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jle ['short', 'loc_15BA']
mov ['eax,', '[ebp+arg_C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '14Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN28']
dd ['offset', '$LN27']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?writeFactorSuffix@icu_56@@YAGPBGGPBDIQAGQAPBD3PADG@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
mov ['ax,', '[ebp+arg_4]']
sub ['ax,', '1']
mov ['[ebp+arg_4],', 'ax']
mov ['ax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ax']
jmp ['short', 'loc_1652']
mov ['ax,', '[ebp+var_8]']
sub ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
movzx ['eax,', '[ebp+var_8]']
test ['eax,', 'eax']
jle ['short', 'loc_168F']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_14],', 'dx']
movzx ['ecx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_C]']
xor ['edx,', 'edx']
div ['ecx']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx+eax*2],', 'dx']
movzx ['ecx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_C]']
xor ['edx,', 'edx']
div ['ecx']
mov ['[ebp+arg_C],', 'eax']
jmp ['short', 'loc_1646']
mov ['eax,', '[ebp+arg_10]']
mov ['cx,', 'word', 'ptr', '[ebp+arg_C]']
mov ['[eax],', 'cx']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_16B0']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_14]']
add ['edx,', '4']
mov ['[ebp+arg_14],', 'edx']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_10]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_14],', 'dx']
movzx ['eax,', '[ebp+var_14]']
test ['eax,', 'eax']
jle ['short', 'loc_1709']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
test ['ecx,', 'ecx']
jz ['short', 'loc_16E6']
mov ['[ebp+var_F4],', '1']
jmp ['short', 'loc_16F0']
mov ['[ebp+var_F4],', '0']
cmp ['[ebp+var_F4],', '0']
jz ['short', 'loc_16FB']
jmp ['short', 'loc_16C7']
mov ['ax,', '[ebp+var_14]']
sub ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
jmp ['short', 'loc_16BF']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_1720']
mov ['eax,', '[ebp+arg_18]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_18]']
add ['edx,', '4']
mov ['[ebp+arg_18],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['cl,', '[eax]']
mov ['[ebp+var_29],', 'cl']
movsx ['edx,', '[ebp+var_29]']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_1745']
mov ['[ebp+var_F4],', '1']
jmp ['short', 'loc_174F']
mov ['[ebp+var_F4],', '0']
cmp ['[ebp+var_F4],', '0']
jz ['short', 'loc_178B']
movzx ['eax,', '[ebp+arg_20]']
test ['eax,', 'eax']
jle ['short', 'loc_177D']
mov ['eax,', '[ebp+arg_1C]']
mov ['cl,', '[ebp+var_29]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+arg_1C]']
add ['edx,', '1']
mov ['[ebp+arg_1C],', 'edx']
mov ['ax,', '[ebp+arg_20]']
sub ['ax,', '1']
mov ['[ebp+arg_20],', 'ax']
mov ['ax,', '[ebp+var_20]']
add ['ax,', '1']
mov ['[ebp+var_20],', 'ax']
jmp ['short', 'loc_1720']
movzx ['eax,', '[ebp+var_8]']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jl ['short', 'loc_1799']
jmp ['short', 'loc_1813']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_10]']
movzx ['eax,', 'word', 'ptr', '[ecx+eax*2]']
sub ['edx,', 'eax']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'dx']
movzx ['eax,', '[ebp+var_14]']
test ['eax,', 'eax']
jle ['short', 'loc_1802']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
test ['ecx,', 'ecx']
jz ['short', 'loc_17DF']
mov ['[ebp+var_F4],', '1']
jmp ['short', 'loc_17E9']
mov ['[ebp+var_F4],', '0']
cmp ['[ebp+var_F4],', '0']
jz ['short', 'loc_17F4']
jmp ['short', 'loc_17C0']
mov ['ax,', '[ebp+var_14]']
sub ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
jmp ['short', 'loc_17B8']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
jmp ['loc_1699']
movzx ['eax,', '[ebp+arg_20]']
test ['eax,', 'eax']
jle ['short', 'loc_1821']
mov ['eax,', '[ebp+arg_1C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ax,', '[ebp+var_20]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_getISOComment_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_1865']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_186B']
xor ['eax,', 'eax']
jmp ['short', 'loc_18A0']
jmp ['short', 'loc_188A']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_187D']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_188A']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_188A']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_18A0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_u_terminateChars_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_charFromName_56 proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '22Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_22C]']
mov ['ecx,', '8Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_140],', '0']
mov ['[ebp+var_158],', '0FFFFh']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_190B']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_1916']
mov ['eax,', '[ebp+var_158]']
jmp ['loc_1D65']
cmp ['[ebp+arg_0],', '4']
jge ['short', 'loc_192C']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_192C']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1940']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['eax,', '[ebp+var_158]']
jmp ['loc_1D65']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['?isDataLoaded@icu_56@@YACPAW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_195E']
mov ['eax,', '[ebp+var_158]']
jmp ['loc_1D65']
mov ['[ebp+var_134],', '0']
jmp ['short', 'loc_1979']
mov ['eax,', '[ebp+var_134]']
add ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
cmp ['[ebp+var_134],', '78h']
jnb ['loc_1A1D']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['[ebp+var_149],', 'cl']
movsx ['edx,', '[ebp+var_149]']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_19B1']
mov ['[ebp+var_22C],', '1']
jmp ['short', 'loc_19BB']
mov ['[ebp+var_22C],', '0']
cmp ['[ebp+var_22C],', '0']
jz ['short', 'loc_19FD']
movzx ['eax,', '[ebp+var_149]']
push ['eax']
call ['_uprv_toupper_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_134]']
mov ['[ebp+ecx+var_80],', 'al']
movzx ['eax,', '[ebp+var_149]']
push ['eax']
call ['_uprv_asciitolower_56']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_134]']
mov ['[ebp+ecx+var_100],', 'al']
jmp ['short', 'loc_1A18']
mov ['eax,', '[ebp+var_134]']
mov ['[ebp+eax+var_100],', '0']
mov ['ecx,', '[ebp+var_134]']
mov ['[ebp+ecx+var_80],', '0']
jmp ['short', 'loc_1A1D']
jmp ['loc_196A']
cmp ['[ebp+var_134],', '78h']
jnz ['short', 'loc_1A3A']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+var_158]']
jmp ['loc_1D65']
movsx ['eax,', '[ebp+var_100]']
cmp ['eax,', '3Ch']
jnz ['loc_1C7E']
cmp ['[ebp+arg_0],', '2']
jnz ['loc_1C6A']
mov ['eax,', '[ebp+var_134]']
sub ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
mov ['ecx,', '[ebp+var_134]']
movsx ['edx,', '[ebp+ecx+var_100]']
cmp ['edx,', '3Eh']
jnz ['loc_1C6A']
cmp ['[ebp+var_134],', '3']
jb ['loc_1C6A']
mov ['eax,', '[ebp+var_134]']
sub ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
mov ['ecx,', '[ebp+var_134]']
movsx ['edx,', '[ebp+ecx+var_100]']
cmp ['edx,', '2Dh']
jz ['loc_1C6A']
cmp ['[ebp+var_134],', '3']
jb ['short', 'loc_1ADA']
mov ['eax,', '[ebp+var_134]']
sub ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
mov ['ecx,', '[ebp+var_134]']
movsx ['edx,', '[ebp+ecx+var_100]']
cmp ['edx,', '2Dh']
jz ['short', 'loc_1ADA']
jmp ['short', 'loc_1AAD']
cmp ['[ebp+var_134],', '2']
jb ['loc_1C6A']
mov ['eax,', '[ebp+var_134]']
movsx ['ecx,', '[ebp+eax+var_100]']
cmp ['ecx,', '2Dh']
jnz ['loc_1C6A']
mov ['eax,', '[ebp+var_134]']
mov ['[ebp+eax+var_100],', '0']
mov ['eax,', '[ebp+var_134]']
add ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
jmp ['short', 'loc_1B2C']
mov ['eax,', '[ebp+var_134]']
add ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
mov ['eax,', '[ebp+var_134]']
movsx ['ecx,', '[ebp+eax+var_100]']
cmp ['ecx,', '3Eh']
jz ['loc_1BEE']
mov ['eax,', '[ebp+var_134]']
movsx ['ecx,', '[ebp+eax+var_100]']
cmp ['ecx,', '30h']
jl ['short', 'loc_1B8C']
mov ['eax,', '[ebp+var_134]']
movsx ['ecx,', '[ebp+eax+var_100]']
cmp ['ecx,', '39h']
jg ['short', 'loc_1B8C']
mov ['eax,', '[ebp+var_140]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_134]']
movsx ['edx,', '[ebp+ecx+var_100]']
lea ['eax,', '[eax+edx-30h]']
mov ['[ebp+var_140],', 'eax']
jmp ['short', 'loc_1BE9']
mov ['eax,', '[ebp+var_134]']
movsx ['ecx,', '[ebp+eax+var_100]']
cmp ['ecx,', '61h']
jl ['short', 'loc_1BD5']
mov ['eax,', '[ebp+var_134]']
movsx ['ecx,', '[ebp+eax+var_100]']
cmp ['ecx,', '66h']
jg ['short', 'loc_1BD5']
mov ['eax,', '[ebp+var_140]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_134]']
movsx ['edx,', '[ebp+ecx+var_100]']
lea ['eax,', '[eax+edx-57h]']
mov ['[ebp+var_140],', 'eax']
jmp ['short', 'loc_1BE9']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+var_158]']
jmp ['loc_1D65']
jmp ['loc_1B1D']
mov ['eax,', '[ebp+var_134]']
mov ['[ebp+eax+var_100],', '0']
mov ['[ebp+var_164],', '0']
jmp ['short', 'loc_1C17']
mov ['eax,', '[ebp+var_164]']
add ['eax,', '1']
mov ['[ebp+var_164],', 'eax']
cmp ['[ebp+var_164],', '21h']
jnb ['short', 'loc_1C6A']
mov ['eax,', '[ebp+var_164]']
mov ['ecx,', 'ds:_charCatNames[eax*4]']
push ['ecx']
lea ['edx,', '[ebp+Str1]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1C68']
mov ['eax,', '[ebp+var_140]']
push ['eax']
call ['?getCharCat@icu_56@@YAEH@Z']
add ['esp,', '4']
movzx ['ecx,', 'al']
cmp ['ecx,', '[ebp+var_164]']
jnz ['short', 'loc_1C66']
mov ['eax,', '[ebp+var_140]']
jmp ['loc_1D65']
jmp ['short', 'loc_1C6A']
jmp ['short', 'loc_1C08']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+var_158]']
jmp ['loc_1D65']
mov ['eax,', 'ds:_uCharNames']
mov ['ecx,', 'ds:_uCharNames']
add ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_128],', 'ecx']
mov ['eax,', '[ebp+var_128]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_134],', 'ecx']
mov ['eax,', '[ebp+var_128]']
add ['eax,', '4']
mov ['[ebp+var_11C],', 'eax']
cmp ['[ebp+var_134],', '0']
jbe ['short', 'loc_1D10']
lea ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_11C]']
push ['edx']
call ['?findAlgName@icu_56@@YAHPAUAlgorithmicRange@1@W4UCharNameChoice@@PBD@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_140],', 'eax']
cmp ['[ebp+var_140],', '0FFFFh']
jz ['short', 'loc_1CE9']
mov ['eax,', '[ebp+var_140]']
jmp ['short', 'loc_1D65']
mov ['eax,', '[ebp+var_11C]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ah]']
add ['ecx,', '[ebp+var_11C]']
mov ['[ebp+var_11C],', 'ecx']
mov ['eax,', '[ebp+var_134]']
sub ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
jmp ['short', 'loc_1CAF']
lea ['eax,', '[ebp+var_80]']
mov ['[ebp+var_110],', 'eax']
mov ['eax,', '[ebp+var_158]']
mov ['[ebp+var_10C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_110]']
push ['ecx']
push ['0']
push ['110000h']
push ['0']
mov ['edx,', 'ds:_uCharNames']
push ['edx']
call ['?enumNames@icu_56@@YACPAUUCharNames@1@HHP6ACPAXHW4UCharNameChoice@@PBDH@Z12@Z']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_10C]']
cmp ['eax,', '[ebp+var_158]']
jnz ['short', 'loc_1D5F']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0Ch']
mov ['eax,', '[ebp+var_10C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN42']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '22Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN41']
dd ['offset', '$LN38']
dd ['0FFFFFF00h,', '78h']
dd ['offset', '$LN39']
dd ['0FFFFFEF0h,', '8']
dd ['offset', '$LN40']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?enumNames@icu_56@@YACPAUUCharNames@1@HHP6ACPAXHW4UCharNameChoice@@PBDH@Z12@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '150h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_150]']
mov ['ecx,', '54h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
sar ['eax,', '5']
mov ['[ebp+var_8],', 'ax']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
sar ['eax,', '5']
mov ['[ebp+var_14],', 'ax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?getGroup@icu_56@@YAPBGPAUUCharNames@1@I@Z']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jge ['short', 'loc_1E7D']
cmp ['[ebp+arg_14],', '2']
jnz ['short', 'loc_1E7D']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
shl ['ecx,', '5']
mov ['[ebp+var_44],', 'ecx']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+arg_8]']
jle ['short', 'loc_1E4E']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_44]']
sub ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?enumExtNames@icu_56@@YACHHP6ACPAXHW4UCharNameChoice@@PBDH@Z0@Z']
add ['esp,', '10h']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1E77']
xor ['al,', 'al']
jmp ['loc_2164']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+arg_4],', 'eax']
movzx ['eax,', '[ebp+var_8]']
movzx ['ecx,', '[ebp+var_14]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_1EC8']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jnz ['short', 'loc_1EC3']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?enumGroupNames@icu_56@@YACPAUUCharNames@1@PBGHHP6ACPAXHW4UCharNameChoice@@PBDH@Z23@Z']
add ['esp,', '1Ch']
jmp ['loc_2164']
jmp ['loc_212F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+4]']
mov ['[ebp+var_50],', 'ecx']
mov ['eax,', '[ebp+var_50]']
mov ['cx,', '[eax]']
mov ['[ebp+var_20],', 'cx']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '2']
mov ['[ebp+var_50],', 'edx']
movzx ['eax,', '[ebp+var_20]']
imul ['eax,', '3']
mov ['ecx,', '[ebp+var_50]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'edx']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jnz ['short', 'loc_1F51']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '1Fh']
jz ['short', 'loc_1F4F']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
movzx ['eax,', '[ebp+var_8]']
shl ['eax,', '5']
add ['eax,', '1Fh']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?enumGroupNames@icu_56@@YACPAUUCharNames@1@PBGHHP6ACPAXHW4UCharNameChoice@@PBDH@Z23@Z']
add ['esp,', '1Ch']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1F46']
xor ['al,', 'al']
jmp ['loc_2164']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '6']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_1FCD']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jle ['short', 'loc_1FCD']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '6']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_1FC7']
mov ['eax,', '[ebp+var_5C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_8]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_1FC7']
cmp ['[ebp+arg_14],', '2']
jnz ['short', 'loc_1FC7']
mov ['eax,', '[ebp+var_5C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
shl ['ecx,', '5']
mov ['[ebp+var_68],', 'ecx']
mov ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+arg_8]']
jle ['short', 'loc_1F9E']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_68]']
sub ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?enumExtNames@icu_56@@YACHHP6ACPAXHW4UCharNameChoice@@PBDH@Z0@Z']
add ['esp,', '10h']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1FC7']
xor ['al,', 'al']
jmp ['loc_2164']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jnb ['loc_20AD']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_14]']
cmp ['ecx,', 'edx']
jge ['loc_20AD']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
shl ['ecx,', '5']
mov ['[ebp+arg_4],', 'ecx']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1Fh']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?enumGroupNames@icu_56@@YACPAUUCharNames@1@PBGHHP6ACPAXHW4UCharNameChoice@@PBDH@Z23@Z']
add ['esp,', '1Ch']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_202C']
xor ['al,', 'al']
jmp ['loc_2164']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '6']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_20A2']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'word', 'ptr', '[edx]']
add ['eax,', '1']
cmp ['ecx,', 'eax']
jle ['short', 'loc_20A2']
cmp ['[ebp+arg_14],', '2']
jnz ['short', 'loc_20A2']
mov ['eax,', '[ebp+var_74]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
shl ['ecx,', '5']
mov ['[ebp+var_80],', 'ecx']
mov ['eax,', '[ebp+var_80]']
cmp ['eax,', '[ebp+arg_8]']
jle ['short', 'loc_2070']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
sub ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
add ['ecx,', '1']
shl ['ecx,', '5']
push ['ecx']
call ['?enumExtNames@icu_56@@YACHHP6ACPAXHW4UCharNameChoice@@PBDH@Z0@Z']
add ['esp,', '10h']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_20A2']
xor ['al,', 'al']
jmp ['loc_2164']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_2C],', 'eax']
jmp ['loc_1FCD']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_20F4']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
movzx ['edx,', '[ebp+var_14]']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_20F4']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '1']
and ['ecx,', '0FFFFFFE0h']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?enumGroupNames@icu_56@@YACPAUUCharNames@1@PBGHHP6ACPAXHW4UCharNameChoice@@PBDH@Z23@Z']
add ['esp,', '1Ch']
jmp ['short', 'loc_2164']
jmp ['short', 'loc_212F']
cmp ['[ebp+arg_14],', '2']
jnz ['short', 'loc_212B']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_38]']
jnz ['short', 'loc_212B']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax-6]']
add ['ecx,', '1']
shl ['ecx,', '5']
mov ['[ebp+var_8C],', 'ecx']
mov ['eax,', '[ebp+var_8C]']
cmp ['eax,', '[ebp+arg_4]']
jle ['short', 'loc_2129']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_212F']
mov ['al,', '1']
jmp ['short', 'loc_2164']
cmp ['[ebp+arg_14],', '2']
jnz ['short', 'loc_2162']
cmp ['[ebp+arg_8],', '110000h']
jle ['short', 'loc_2145']
mov ['[ebp+arg_8],', '110000h']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?enumExtNames@icu_56@@YACHHP6ACPAXHW4UCharNameChoice@@PBDH@Z0@Z']
add ['esp,', '10h']
jmp ['short', 'loc_2164']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '150h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?enumGroupNames@icu_56@@YACPAUUCharNames@1@PBGHHP6ACPAXHW4UCharNameChoice@@PBDH@Z23@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '250h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_250]']
mov ['ecx,', '94h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
shl ['eax,', '10h']
mov ['edx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[edx+4]']
or ['eax,', 'edx']
add ['ecx,', 'eax']
mov ['[ebp+var_A4],', 'ecx']
lea ['eax,', '[ebp+var_98]']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+var_A4]']
push ['edx']
call ['?expandGroupLengths@icu_56@@YAPBEPBEQAG1@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_A4],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['loc_22CD']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_C]']
jg ['loc_22CB']
push ['0C8h']
lea ['eax,', '[ebp+var_174]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '1Fh']
movzx ['eax,', '[ebp+edx*2+var_98]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '1Fh']
movzx ['edx,', '[ebp+ecx*2+var_4C]']
add ['edx,', '[ebp+var_A4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?expandName@icu_56@@YAGPAUUCharNames@1@PBEGW4UCharNameChoice@@PADG@Z']
add ['esp,', '18h']
mov ['[ebp+var_180],', 'ax']
movzx ['eax,', '[ebp+var_180]']
test ['eax,', 'eax']
jnz ['short', 'loc_227D']
cmp ['[ebp+arg_18],', '2']
jnz ['short', 'loc_227D']
push ['0C8h']
lea ['eax,', '[ebp+var_174]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['?getExtName@icu_56@@YAGIPADG@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_180],', 'ax']
movzx ['edx,', '[ebp+var_180]']
mov ['[ebp+edx+var_174],', '0']
movzx ['eax,', '[ebp+var_180]']
test ['eax,', 'eax']
jle ['short', 'loc_22BD']
movzx ['eax,', '[ebp+var_180]']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_174]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
call ['[ebp+arg_10]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_22BD']
xor ['al,', 'al']
jmp ['short', 'loc_2339']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_21EE']
jmp ['short', 'loc_2337']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_18C],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_C]']
jg ['short', 'loc_2337']
mov ['eax,', '[ebp+var_18C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '1Fh']
movzx ['eax,', '[ebp+edx*2+var_98]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '1Fh']
movzx ['edx,', '[ebp+ecx*2+var_4C]']
add ['edx,', '[ebp+var_A4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?compareName@icu_56@@YACPAUUCharNames@1@PBEGW4UCharNameChoice@@PBD@Z']
add ['esp,', '14h']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_232C']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+4],', 'ecx']
xor ['al,', 'al']
jmp ['short', 'loc_2339']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['short', 'loc_22D8']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '250h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN16']
dd ['offset', '$LN13']
dd ['0FFFFFF68h,', '44h']
dd ['offset', '$LN14']
dd ['0FFFFFE8Ch,', '0C8h']
dd ['offset', '$LN15']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?compareName@icu_56@@YACPAUUCharNames@1@PBEGW4UCharNameChoice@@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '124h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_124]']
mov ['ecx,', '49h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', '[eax]']
mov ['[ebp+var_20],', 'cx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax]']
mov ['[ebp+var_2C],', 'ecx']
mov ['eax,', '[ebp+arg_10]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['loc_24AD']
cmp ['[ebp+arg_C],', '2']
jz ['loc_24AD']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '3Bh']
jle ['short', 'loc_2427']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+76h]']
cmp ['ecx,', '0FFFFh']
jnz ['loc_24A7']
cmp ['[ebp+arg_C],', '4']
jnz ['short', 'loc_2439']
mov ['[ebp+var_124],', '2']
jmp ['short', 'loc_2442']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_124],', 'eax']
mov ['ecx,', '[ebp+var_124]']
mov ['[ebp+var_50],', 'ecx']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jle ['short', 'loc_2496']
mov ['ax,', '[ebp+arg_8]']
sub ['ax,', '1']
mov ['[ebp+arg_8],', 'ax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
cmp ['ecx,', '3Bh']
jnz ['short', 'loc_247F']
mov ['[ebp+var_124],', '1']
jmp ['short', 'loc_2489']
mov ['[ebp+var_124],', '0']
cmp ['[ebp+var_124],', '0']
jz ['short', 'loc_2494']
jmp ['short', 'loc_2496']
jmp ['short', 'loc_244B']
mov ['eax,', '[ebp+var_50]']
sub ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jg ['short', 'loc_244B']
jmp ['short', 'loc_24AD']
xor ['eax,', 'eax']
mov ['[ebp+arg_8],', 'ax']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jle ['loc_2685']
mov ['ax,', '[ebp+arg_8]']
sub ['ax,', '1']
mov ['[ebp+arg_8],', 'ax']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['[ebp+var_35],', 'cl']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
movzx ['eax,', '[ebp+var_35]']
movzx ['ecx,', '[ebp+var_20]']
cmp ['eax,', 'ecx']
jl ['short', 'loc_2534']
movzx ['eax,', '[ebp+var_35]']
cmp ['eax,', '3Bh']
jz ['short', 'loc_252A']
mov ['eax,', '[ebp+arg_10]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
movsx ['edx,', '[ebp+var_35]']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '1']
mov ['[ebp+arg_10],', 'eax']
cmp ['edx,', 'ecx']
jz ['short', 'loc_250E']
mov ['[ebp+var_124],', '1']
jmp ['short', 'loc_2518']
mov ['[ebp+var_124],', '0']
cmp ['[ebp+var_124],', '0']
jz ['short', 'loc_2528']
xor ['al,', 'al']
jmp ['loc_2690']
jmp ['short', 'loc_252F']
jmp ['loc_2685']
jmp ['loc_2680']
movzx ['eax,', '[ebp+var_35]']
mov ['ecx,', '[ebp+var_8]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_14],', 'dx']
movzx ['eax,', '[ebp+var_14]']
cmp ['eax,', '0FFFEh']
jnz ['short', 'loc_257D']
movzx ['eax,', '[ebp+var_35]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_14],', 'dx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ax,', '[ebp+arg_8]']
sub ['ax,', '1']
mov ['[ebp+arg_8],', 'ax']
movzx ['eax,', '[ebp+var_14]']
cmp ['eax,', '0FFFFh']
jnz ['short', 'loc_2602']
movzx ['eax,', '[ebp+var_35]']
cmp ['eax,', '3Bh']
jz ['short', 'loc_25D0']
mov ['eax,', '[ebp+arg_10]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
movsx ['edx,', '[ebp+var_35]']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '1']
mov ['[ebp+arg_10],', 'eax']
cmp ['edx,', 'ecx']
jz ['short', 'loc_25B4']
mov ['[ebp+var_124],', '1']
jmp ['short', 'loc_25BE']
mov ['[ebp+var_124],', '0']
cmp ['[ebp+var_124],', '0']
jz ['short', 'loc_25CE']
xor ['al,', 'al']
jmp ['loc_2690']
jmp ['short', 'loc_2600']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_44]']
jnz ['short', 'loc_25FB']
cmp ['[ebp+arg_C],', '2']
jnz ['short', 'loc_25FB']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '3Bh']
jle ['short', 'loc_25F6']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+76h]']
cmp ['ecx,', '0FFFFh']
jnz ['short', 'loc_25FB']
jmp ['loc_24AD']
jmp ['loc_2685']
jmp ['short', 'loc_2680']
movzx ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+var_5C]']
mov ['cl,', '[eax]']
mov ['[ebp+var_35],', 'cl']
movzx ['edx,', '[ebp+var_35]']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_2631']
mov ['[ebp+var_124],', '1']
jmp ['short', 'loc_263B']
mov ['[ebp+var_124],', '0']
cmp ['[ebp+var_124],', '0']
jz ['short', 'loc_2680']
mov ['eax,', '[ebp+arg_10]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
movsx ['edx,', '[ebp+var_35]']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '1']
mov ['[ebp+arg_10],', 'eax']
cmp ['edx,', 'ecx']
jz ['short', 'loc_2667']
mov ['[ebp+var_124],', '1']
jmp ['short', 'loc_2671']
mov ['[ebp+var_124],', '0']
cmp ['[ebp+var_124],', '0']
jz ['short', 'loc_267E']
xor ['al,', 'al']
jmp ['short', 'loc_2690']
jmp ['short', 'loc_260C']
jmp ['loc_24AD']
mov ['eax,', '[ebp+arg_10]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
setz ['al']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?enumExtNames@icu_56@@YACHHP6ACPAXHW4UCharNameChoice@@PBDH@Z0@Z	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1A0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1A0]']
mov ['ecx,', '68h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2745']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jg ['short', 'loc_2745']
push ['0C8h']
lea ['eax,', '[ebp+var_D0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?getExtName@icu_56@@YAGIPADG@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_DC],', 'ax']
movzx ['edx,', '[ebp+var_DC]']
mov ['[ebp+edx+var_D0],', '0']
movzx ['eax,', '[ebp+var_DC]']
test ['eax,', 'eax']
jle ['short', 'loc_273A']
movzx ['eax,', '[ebp+var_DC]']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_D0]']
push ['ecx']
push ['2']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['[ebp+arg_8]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_273A']
xor ['al,', 'al']
jmp ['short', 'loc_2747']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_26C6']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1A0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN9']
dd ['offset', '$LN8']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?findAlgName@icu_56@@YAHPAUAlgorithmicRange@1@W4UCharNameChoice@@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '220h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_220]']
mov ['ecx,', '88h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_27D2']
cmp ['[ebp+arg_4],', '2']
jz ['short', 'loc_27D2']
mov ['eax,', '0FFFFh']
jmp ['loc_2CCC']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+8]']
mov ['byte', 'ptr', '[ebp+var_220],', 'cl']
cmp ['byte', 'ptr', '[ebp+var_220],', '0']
jz ['short', 'loc_27F9']
cmp ['byte', 'ptr', '[ebp+var_220],', '1']
jz ['loc_2947']
jmp ['loc_2CC7']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['cl,', '[eax]']
mov ['[ebp+var_21],', 'cl']
movsx ['edx,', '[ebp+var_21]']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_2827']
mov ['[ebp+var_220],', '1']
jmp ['short', 'loc_2831']
mov ['[ebp+var_220],', '0']
cmp ['[ebp+var_220],', '0']
jz ['short', 'loc_287C']
mov ['eax,', '[ebp+Str1]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
movsx ['edx,', '[ebp+var_21]']
mov ['eax,', '[ebp+Str1]']
add ['eax,', '1']
mov ['[ebp+Str1],', 'eax']
cmp ['edx,', 'ecx']
jz ['short', 'loc_285D']
mov ['[ebp+var_220],', '1']
jmp ['short', 'loc_2867']
mov ['[ebp+var_220],', '0']
cmp ['[ebp+var_220],', '0']
jz ['short', 'loc_287A']
mov ['eax,', '0FFFFh']
jmp ['loc_2CCC']
jmp ['short', 'loc_2802']
mov ['eax,', '[ebp+arg_0]']
movzx ['cx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_3C],', 'cx']
mov ['[ebp+var_C],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_30],', 'ax']
jmp ['short', 'loc_28A3']
mov ['ax,', '[ebp+var_30]']
add ['ax,', '1']
mov ['[ebp+var_30],', 'ax']
movzx ['eax,', '[ebp+var_30]']
movzx ['ecx,', '[ebp+var_3C]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_291B']
mov ['eax,', '[ebp+Str1]']
mov ['cl,', '[eax]']
mov ['[ebp+var_21],', 'cl']
mov ['edx,', '[ebp+Str1]']
add ['edx,', '1']
mov ['[ebp+Str1],', 'edx']
movsx ['eax,', '[ebp+var_21]']
cmp ['eax,', '30h']
jl ['short', 'loc_28E6']
movsx ['eax,', '[ebp+var_21]']
cmp ['eax,', '39h']
jg ['short', 'loc_28E6']
mov ['eax,', '[ebp+var_C]']
shl ['eax,', '4']
movsx ['ecx,', '[ebp+var_21]']
sub ['ecx,', '30h']
or ['eax,', 'ecx']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_2916']
movsx ['eax,', '[ebp+var_21]']
cmp ['eax,', '41h']
jl ['short', 'loc_290C']
movsx ['eax,', '[ebp+var_21]']
cmp ['eax,', '46h']
jg ['short', 'loc_290C']
mov ['eax,', '[ebp+var_C]']
shl ['eax,', '4']
movsx ['ecx,', '[ebp+var_21]']
sub ['ecx,', '37h']
or ['eax,', 'ecx']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_2916']
mov ['eax,', '0FFFFh']
jmp ['loc_2CCC']
jmp ['loc_2897']
mov ['eax,', '[ebp+Str1]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2942']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_C]']
ja ['short', 'loc_2942']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+4]']
ja ['short', 'loc_2942']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_2CCC']
jmp ['loc_2CC7']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['cx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_104],', 'cx']
movzx ['eax,', '[ebp+var_104]']
mov ['ecx,', '[ebp+var_F8]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_110],', 'edx']
mov ['eax,', '[ebp+var_110]']
mov ['cl,', '[eax]']
mov ['[ebp+var_155],', 'cl']
movsx ['edx,', '[ebp+var_155]']
mov ['eax,', '[ebp+var_110]']
add ['eax,', '1']
mov ['[ebp+var_110],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_29AC']
mov ['[ebp+var_220],', '1']
jmp ['short', 'loc_29B6']
mov ['[ebp+var_220],', '0']
cmp ['[ebp+var_220],', '0']
jz ['short', 'loc_2A07']
mov ['eax,', '[ebp+Str1]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
movsx ['edx,', '[ebp+var_155]']
mov ['eax,', '[ebp+Str1]']
add ['eax,', '1']
mov ['[ebp+Str1],', 'eax']
cmp ['edx,', 'ecx']
jz ['short', 'loc_29E5']
mov ['[ebp+var_220],', '1']
jmp ['short', 'loc_29EF']
mov ['[ebp+var_220],', '0']
cmp ['[ebp+var_220],', '0']
jz ['short', 'loc_2A02']
mov ['eax,', '0FFFFh']
jmp ['loc_2CCC']
jmp ['loc_2978']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_128],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+var_134],', 'ecx']
push ['40h']
lea ['eax,', '[ebp+Str2]']
push ['eax']
lea ['ecx,', '[ebp+var_EC]']
push ['ecx']
lea ['edx,', '[ebp+var_C4]']
push ['edx']
lea ['eax,', '[ebp+var_9C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_110]']
push ['ecx']
movzx ['edx,', '[ebp+var_104]']
push ['edx']
mov ['eax,', '[ebp+var_F8]']
push ['eax']
call ['?writeFactorSuffix@icu_56@@YAGPBGGPBDIQAGQAPBD3PADG@Z']
add ['esp,', '24h']
lea ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_2A81']
mov ['eax,', '[ebp+var_128]']
jmp ['loc_2CCC']
mov ['eax,', '[ebp+var_128]']
add ['eax,', '1']
mov ['[ebp+var_128],', 'eax']
mov ['ecx,', '[ebp+var_128]']
cmp ['ecx,', '[ebp+var_134]']
jge ['loc_2CC7']
mov ['ax,', '[ebp+var_104]']
mov ['[ebp+var_140],', 'ax']
mov ['ax,', '[ebp+var_140]']
sub ['ax,', '1']
mov ['[ebp+var_140],', 'ax']
movzx ['ecx,', '[ebp+var_140]']
movzx ['edx,', '[ebp+ecx*2+var_9C]']
add ['edx,', '1']
mov ['[ebp+var_14C],', 'dx']
movzx ['eax,', '[ebp+var_14C]']
movzx ['ecx,', '[ebp+var_140]']
mov ['edx,', '[ebp+var_F8]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_2B76']
movzx ['eax,', '[ebp+var_140]']
mov ['cx,', '[ebp+var_14C]']
mov ['[ebp+eax*2+var_9C],', 'cx']
movzx ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+eax*4+var_EC]']
mov ['[ebp+var_110],', 'ecx']
mov ['eax,', '[ebp+var_110]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_110]']
add ['edx,', '1']
mov ['[ebp+var_110],', 'edx']
test ['ecx,', 'ecx']
jz ['short', 'loc_2B49']
mov ['[ebp+var_220],', '1']
jmp ['short', 'loc_2B53']
mov ['[ebp+var_220],', '0']
cmp ['[ebp+var_220],', '0']
jz ['short', 'loc_2B5E']
jmp ['short', 'loc_2B21']
movzx ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+var_110]']
mov ['[ebp+eax*4+var_EC],', 'ecx']
jmp ['short', 'loc_2BA8']
jmp ['short', 'loc_2BA3']
movzx ['eax,', '[ebp+var_140]']
xor ['ecx,', 'ecx']
mov ['[ebp+eax*2+var_9C],', 'cx']
movzx ['eax,', '[ebp+var_140]']
movzx ['ecx,', '[ebp+var_140]']
mov ['edx,', '[ebp+eax*4+var_C4]']
mov ['[ebp+ecx*4+var_EC],', 'edx']
jmp ['loc_2AB0']
mov ['eax,', '[ebp+Str1]']
mov ['[ebp+var_11C],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_140],', 'ax']
jmp ['short', 'loc_2BCE']
mov ['ax,', '[ebp+var_140]']
add ['ax,', '1']
mov ['[ebp+var_140],', 'ax']
movzx ['eax,', '[ebp+var_140]']
movzx ['ecx,', '[ebp+var_104]']
cmp ['eax,', 'ecx']
jge ['loc_2CA1']
movzx ['eax,', '[ebp+var_140]']
mov ['ecx,', '[ebp+eax*4+var_EC]']
mov ['[ebp+var_110],', 'ecx']
mov ['eax,', '[ebp+var_110]']
mov ['cl,', '[eax]']
mov ['[ebp+var_155],', 'cl']
movsx ['edx,', '[ebp+var_155]']
mov ['eax,', '[ebp+var_110]']
add ['eax,', '1']
mov ['[ebp+var_110],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_2C2C']
mov ['[ebp+var_220],', '1']
jmp ['short', 'loc_2C36']
mov ['[ebp+var_220],', '0']
cmp ['[ebp+var_220],', '0']
jz ['short', 'loc_2C9C']
mov ['eax,', '[ebp+var_11C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
movsx ['edx,', '[ebp+var_155]']
mov ['eax,', '[ebp+var_11C]']
add ['eax,', '1']
mov ['[ebp+var_11C],', 'eax']
cmp ['edx,', 'ecx']
jz ['short', 'loc_2C6E']
mov ['[ebp+var_220],', '1']
jmp ['short', 'loc_2C78']
mov ['[ebp+var_220],', '0']
cmp ['[ebp+var_220],', '0']
jz ['short', 'loc_2C97']
mov ['[ebp+var_110],', 'offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['eax,', '63h']
mov ['[ebp+var_140],', 'ax']
jmp ['loc_2BF8']
jmp ['loc_2BBC']
movzx ['eax,', '[ebp+var_140]']
cmp ['eax,', '63h']
jge ['short', 'loc_2CC2']
mov ['eax,', '[ebp+var_11C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2CC2']
mov ['eax,', '[ebp+var_128]']
jmp ['short', 'loc_2CCC']
jmp ['loc_2A81']
mov ['eax,', '0FFFFh']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN58']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '220h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN57']
dd ['offset', '$LN53']
dd ['0FFFFFF64h,', '10h']
dd ['offset', '$LN54']
dd ['0FFFFFF3Ch,', '20h']
dd ['offset', '$LN55']
dd ['0FFFFFF14h,', '20h']
dd ['offset', '$LN56']
align ['4']
assume ['cs:_rdata']
public ['??_C@_00CNPNBAHC@?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_u_enumCharNames_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_2D99']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2D9E']
jmp ['loc_2F41']
cmp ['[ebp+arg_10],', '4']
jge ['short', 'loc_2DAA']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_2DB8']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
jmp ['loc_2F41']
cmp ['[ebp+arg_4],', '110000h']
jbe ['short', 'loc_2DC8']
mov ['[ebp+arg_4],', '110000h']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jb ['short', 'loc_2DD5']
jmp ['loc_2F41']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
call ['?isDataLoaded@icu_56@@YACPAW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2DED']
jmp ['loc_2F41']
mov ['eax,', 'ds:_uCharNames']
mov ['ecx,', 'ds:_uCharNames']
add ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_20],', '0']
jbe ['loc_2F1E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_2E8D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
ja ['short', 'loc_2E55']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', 'ds:_uCharNames']
push ['edx']
call ['?enumNames@icu_56@@YACPAUUCharNames@1@HHP6ACPAXHW4UCharNameChoice@@PBDH@Z12@Z']
add ['esp,', '18h']
jmp ['loc_2F41']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', 'ds:_uCharNames']
push ['eax']
call ['?enumNames@icu_56@@YACPAUUCharNames@1@HHP6ACPAXHW4UCharNameChoice@@PBDH@Z12@Z']
add ['esp,', '18h']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2E85']
jmp ['loc_2F41']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+4]']
ja ['short', 'loc_2F03']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
cmp ['[ebp+arg_4],', 'ecx']
ja ['short', 'loc_2EC8']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['?enumAlgNames@icu_56@@YACPAUAlgorithmicRange@1@HHP6ACPAXHW4UCharNameChoice@@PBDH@Z12@Z']
add ['esp,', '18h']
jmp ['short', 'loc_2F41']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?enumAlgNames@icu_56@@YACPAUAlgorithmicRange@1@HHP6ACPAXHW4UCharNameChoice@@PBDH@Z12@Z']
add ['esp,', '18h']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2EF7']
jmp ['short', 'loc_2F41']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ah]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['loc_2E0F']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', 'ds:_uCharNames']
push ['edx']
call ['?enumNames@icu_56@@YACPAUUCharNames@1@HHP6ACPAXHW4UCharNameChoice@@PBDH@Z12@Z']
add ['esp,', '18h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?enumAlgNames@icu_56@@YACPAUAlgorithmicRange@1@HHP6ACPAXHW4UCharNameChoice@@PBDH@Z12@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '29Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_29C]']
mov ['ecx,', '0A7h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_2F93']
cmp ['[ebp+arg_14],', '2']
jz ['short', 'loc_2F93']
mov ['al,', '1']
jmp ['loc_34E7']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[eax+8]']
mov ['byte', 'ptr', '[ebp+var_29C],', 'cl']
cmp ['byte', 'ptr', '[ebp+var_29C],', '0']
jz ['short', 'loc_2FBA']
cmp ['byte', 'ptr', '[ebp+var_29C],', '1']
jz ['loc_314E']
jmp ['loc_34E5']
push ['0C8h']
lea ['eax,', '[ebp+var_D0]']
push ['eax']
mov ['ecx,', '[ebp+arg_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?getAlgName@icu_56@@YAGPAUAlgorithmicRange@1@IW4UCharNameChoice@@PADG@Z']
add ['esp,', '14h']
mov ['[ebp+var_DC],', 'ax']
movzx ['eax,', '[ebp+var_DC]']
test ['eax,', 'eax']
jg ['short', 'loc_2FF3']
mov ['al,', '1']
jmp ['loc_34E7']
movzx ['eax,', '[ebp+var_DC]']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['[ebp+arg_C]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_302B']
xor ['al,', 'al']
jmp ['loc_34E7']
lea ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_F4],', 'eax']
mov ['eax,', '[ebp+var_F4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3055']
mov ['eax,', '[ebp+var_F4]']
add ['eax,', '1']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_3037']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['loc_3149']
mov ['eax,', '[ebp+var_F4]']
mov ['[ebp+var_E8],', 'eax']
mov ['eax,', '[ebp+var_E8]']
sub ['eax,', '1']
mov ['[ebp+var_E8],', 'eax']
mov ['ecx,', '[ebp+var_E8]']
mov ['dl,', '[ecx]']
mov ['[ebp+var_FD],', 'dl']
movsx ['eax,', '[ebp+var_FD]']
cmp ['eax,', '30h']
jl ['short', 'loc_30AB']
movsx ['eax,', '[ebp+var_FD]']
cmp ['eax,', '39h']
jl ['short', 'loc_30C3']
movsx ['eax,', '[ebp+var_FD]']
cmp ['eax,', '41h']
jl ['short', 'loc_30D9']
movsx ['eax,', '[ebp+var_FD]']
cmp ['eax,', '46h']
jge ['short', 'loc_30D9']
movsx ['eax,', '[ebp+var_FD]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_E8]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_310C']
jmp ['short', 'loc_3107']
movsx ['eax,', '[ebp+var_FD]']
cmp ['eax,', '39h']
jnz ['short', 'loc_30F2']
mov ['eax,', '[ebp+var_E8]']
mov ['byte', 'ptr', '[eax],', '41h']
jmp ['short', 'loc_310C']
jmp ['short', 'loc_3107']
movsx ['eax,', '[ebp+var_FD]']
cmp ['eax,', '46h']
jnz ['short', 'loc_3107']
mov ['eax,', '[ebp+var_E8]']
mov ['byte', 'ptr', '[eax],', '30h']
jmp ['loc_3076']
movzx ['eax,', '[ebp+var_DC]']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['[ebp+arg_C]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3144']
xor ['al,', 'al']
jmp ['loc_34E7']
jmp ['loc_3055']
jmp ['loc_34E5']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
mov ['[ebp+var_174],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movzx ['cx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_180],', 'cx']
movzx ['eax,', '[ebp+var_180]']
mov ['ecx,', '[ebp+var_174]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_18C],', 'edx']
lea ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_198],', 'eax']
xor ['eax,', 'eax']
mov ['[ebp+var_1B0],', 'ax']
mov ['eax,', '[ebp+var_18C]']
mov ['cl,', '[eax]']
mov ['[ebp+var_1D1],', 'cl']
movsx ['edx,', '[ebp+var_1D1]']
mov ['eax,', '[ebp+var_18C]']
add ['eax,', '1']
mov ['[ebp+var_18C],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_31C8']
mov ['[ebp+var_29C],', '1']
jmp ['short', 'loc_31D2']
mov ['[ebp+var_29C],', '0']
cmp ['[ebp+var_29C],', '0']
jz ['short', 'loc_320C']
mov ['eax,', '[ebp+var_198]']
mov ['cl,', '[ebp+var_1D1]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_198]']
add ['edx,', '1']
mov ['[ebp+var_198],', 'edx']
mov ['ax,', '[ebp+var_1B0]']
add ['ax,', '1']
mov ['[ebp+var_1B0],', 'ax']
jmp ['short', 'loc_3194']
movzx ['esi,', '[ebp+var_1B0]']
movzx ['eax,', '[ebp+var_1B0]']
mov ['ecx,', '0C8h']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_198]']
push ['edx']
lea ['eax,', '[ebp+var_168]']
push ['eax']
lea ['ecx,', '[ebp+var_140]']
push ['ecx']
lea ['edx,', '[ebp+var_118]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_18C]']
push ['edx']
movzx ['eax,', '[ebp+var_180]']
push ['eax']
mov ['ecx,', '[ebp+var_174]']
push ['ecx']
call ['?writeFactorSuffix@icu_56@@YAGPBGGPBDIQAGQAPBD3PADG@Z']
add ['esp,', '24h']
movzx ['edx,', 'ax']
add ['esi,', 'edx']
mov ['[ebp+var_DC],', 'si']
movzx ['eax,', '[ebp+var_DC]']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['[ebp+arg_C]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_32A9']
xor ['al,', 'al']
jmp ['loc_34E7']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['loc_34E5']
mov ['ax,', '[ebp+var_180]']
mov ['[ebp+var_1BC],', 'ax']
mov ['ax,', '[ebp+var_1BC]']
sub ['ax,', '1']
mov ['[ebp+var_1BC],', 'ax']
movzx ['ecx,', '[ebp+var_1BC]']
movzx ['edx,', '[ebp+ecx*2+var_118]']
add ['edx,', '1']
mov ['[ebp+var_1C8],', 'dx']
movzx ['eax,', '[ebp+var_1C8]']
movzx ['ecx,', '[ebp+var_1BC]']
mov ['edx,', '[ebp+var_174]']
movzx ['ecx,', 'word', 'ptr', '[edx+ecx*2]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_3392']
movzx ['eax,', '[ebp+var_1BC]']
mov ['cx,', '[ebp+var_1C8]']
mov ['[ebp+eax*2+var_118],', 'cx']
movzx ['eax,', '[ebp+var_1BC]']
mov ['ecx,', '[ebp+eax*4+var_168]']
mov ['[ebp+var_18C],', 'ecx']
mov ['eax,', '[ebp+var_18C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_18C]']
add ['edx,', '1']
mov ['[ebp+var_18C],', 'edx']
test ['ecx,', 'ecx']
jz ['short', 'loc_3365']
mov ['[ebp+var_29C],', '1']
jmp ['short', 'loc_336F']
mov ['[ebp+var_29C],', '0']
cmp ['[ebp+var_29C],', '0']
jz ['short', 'loc_337A']
jmp ['short', 'loc_333D']
movzx ['eax,', '[ebp+var_1BC]']
mov ['ecx,', '[ebp+var_18C]']
mov ['[ebp+eax*4+var_168],', 'ecx']
jmp ['short', 'loc_33C4']
jmp ['short', 'loc_33BF']
movzx ['eax,', '[ebp+var_1BC]']
xor ['ecx,', 'ecx']
mov ['[ebp+eax*2+var_118],', 'cx']
movzx ['eax,', '[ebp+var_1BC]']
movzx ['ecx,', '[ebp+var_1BC]']
mov ['edx,', '[ebp+eax*4+var_140]']
mov ['[ebp+ecx*4+var_168],', 'edx']
jmp ['loc_32CC']
mov ['eax,', '[ebp+var_198]']
mov ['[ebp+var_1A4],', 'eax']
mov ['ax,', '[ebp+var_1B0]']
mov ['[ebp+var_DC],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_1BC],', 'ax']
jmp ['short', 'loc_33FB']
mov ['ax,', '[ebp+var_1BC]']
add ['ax,', '1']
mov ['[ebp+var_1BC],', 'ax']
movzx ['eax,', '[ebp+var_1BC]']
movzx ['ecx,', '[ebp+var_180]']
cmp ['eax,', 'ecx']
jge ['loc_34A2']
movzx ['eax,', '[ebp+var_1BC]']
mov ['ecx,', '[ebp+eax*4+var_168]']
mov ['[ebp+var_18C],', 'ecx']
mov ['eax,', '[ebp+var_18C]']
mov ['cl,', '[eax]']
mov ['[ebp+var_1D1],', 'cl']
movsx ['edx,', '[ebp+var_1D1]']
mov ['eax,', '[ebp+var_18C]']
add ['eax,', '1']
mov ['[ebp+var_18C],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_3459']
mov ['[ebp+var_29C],', '1']
jmp ['short', 'loc_3463']
mov ['[ebp+var_29C],', '0']
cmp ['[ebp+var_29C],', '0']
jz ['short', 'loc_349D']
mov ['eax,', '[ebp+var_1A4]']
mov ['cl,', '[ebp+var_1D1]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_1A4]']
add ['edx,', '1']
mov ['[ebp+var_1A4],', 'edx']
mov ['ax,', '[ebp+var_DC]']
add ['ax,', '1']
mov ['[ebp+var_DC],', 'ax']
jmp ['short', 'loc_3425']
jmp ['loc_33E9']
mov ['eax,', '[ebp+var_1A4]']
mov ['byte', 'ptr', '[eax],', '0']
movzx ['eax,', '[ebp+var_DC]']
mov ['esi,', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_D0]']
push ['ecx']
mov ['edx,', '[ebp+arg_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['[ebp+arg_C]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_34E0']
xor ['al,', 'al']
jmp ['short', 'loc_34E7']
jmp ['loc_32A9']
mov ['al,', '1']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN53_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '29Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN52']
dd ['offset', '$LN48']
dd ['0FFFFFEE8h,', '10h']
dd ['offset', '$LN49']
sar ['dh,', '0FFh']
jmp ['dword', 'ptr', '[eax]']
align ['10h']
dd ['offset', '$LN50']
dd ['0FFFFFE98h,', '20h']
dd ['offset', '$LN51']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_getMaxCharNameLength_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
call ['?calcNameSetsLengths@icu_56@@YACPAW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_35B9']
mov ['eax,', 'ds:_gMaxNameLength']
jmp ['short', 'loc_35BB']
jmp ['short', 'loc_35BB']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN6_0']
dd ['offset', '$LN5_0']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcNameSetsLengths@icu_56@@YACPAW4UErrorCode@@@Z proc	near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['ds:_gMaxNameLength,', '0']
jz ['short', 'loc_362E']
mov ['al,', '1']
jmp ['loc_36C8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?isDataLoaded@icu_56@@YACPAW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3648']
xor ['al,', 'al']
jmp ['loc_36C8']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_365A']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '13h']
jge ['short', 'loc_369E']
mov ['eax,', '[ebp+var_8]']
movzx ['edx,', 'ds:?extChars@?1??calcNameSetsLengths@icu_56@@YACPAW4UErrorCode@@@Z@4QBDB[eax]']
sar ['edx,', '5']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'ds:?extChars@?1??calcNameSetsLengths@icu_56@@YACPAW4UErrorCode@@@Z@4QBDB[eax]']
and ['ecx,', '1Fh']
mov ['eax,', '1']
shl ['eax,', 'cl']
or ['eax,', 'ds:_gNameSet[edx*4]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'ds:?extChars@?1??calcNameSetsLengths@icu_56@@YACPAW4UErrorCode@@@Z@4QBDB[ecx]']
sar ['edx,', '5']
mov ['ds:_gNameSet[edx*4],', 'eax']
jmp ['short', 'loc_3651']
push ['0']
call ['?calcAlgNameSetsLengths@icu_56@@YAHH@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?calcExtNameSetsLengths@icu_56@@YAHH@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['?calcGroupNameSetsLengths@icu_56@@YAXH@Z']
add ['esp,', '4']
mov ['al,', '1']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcAlgNameSetsLengths@icu_56@@YAHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '148h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'ds:_uCharNames']
mov ['ecx,', 'ds:_uCharNames']
add ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_20],', '0']
jbe ['loc_3860']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[eax+8]']
mov ['[ebp+var_148],', 'cl']
cmp ['[ebp+var_148],', '0']
jz ['short', 'loc_3749']
cmp ['[ebp+var_148],', '1']
jz ['short', 'loc_377C']
jmp ['loc_3845']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
push ['eax']
push ['offset', '_gNameSet']
call ['?calcStringSetLength@icu_56@@YAHQAIPBD@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9]']
add ['eax,', 'edx']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_0]']
jle ['short', 'loc_3777']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+arg_0],', 'eax']
jmp ['loc_3845']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Ch']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_5C],', 'ecx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_38]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
push ['eax']
push ['offset', '_gNameSet']
call ['?calcStringSetLength@icu_56@@YAHQAIPBD@Z']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_44]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_37CE']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_5C]']
jge ['short', 'loc_3837']
mov ['[ebp+var_80],', '0']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_38]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_68],', 'edx']
jmp ['short', 'loc_37F5']
mov ['eax,', '[ebp+var_68]']
sub ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '0']
jle ['short', 'loc_382C']
mov ['eax,', '[ebp+var_44]']
push ['eax']
push ['offset', '_gNameSet']
call ['?calcStringSetLength@icu_56@@YAHQAIPBD@Z']
add ['esp,', '8']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_44]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_74]']
cmp ['eax,', '[ebp+var_80]']
jle ['short', 'loc_382A']
mov ['eax,', '[ebp+var_74]']
mov ['[ebp+var_80],', 'eax']
jmp ['short', 'loc_37EC']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '[ebp+var_80]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_37C5']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+arg_0]']
jle ['short', 'loc_3845']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ah]']
add ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['loc_371C']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcStringSetLength@icu_56@@YAHQAIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['cl,', '[eax]']
mov ['[ebp+var_11],', 'cl']
movsx ['edx,', '[ebp+var_11]']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
test ['edx,', 'edx']
jz ['short', 'loc_38C2']
mov ['[ebp+var_DC],', '1']
jmp ['short', 'loc_38CC']
mov ['[ebp+var_DC],', '0']
cmp ['[ebp+var_DC],', '0']
jz ['short', 'loc_3908']
movzx ['eax,', '[ebp+var_11]']
sar ['eax,', '5']
movzx ['ecx,', '[ebp+var_11]']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+arg_0]']
or ['edx,', '[ecx+eax*4]']
movzx ['eax,', '[ebp+var_11]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_389D']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcExtNameSetsLengths@icu_56@@YAHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3944']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '21h']
jge ['short', 'loc_3978']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', 'ds:_charCatNames[eax*4]']
push ['ecx']
push ['offset', '_gNameSet']
call ['?calcStringSetLength@icu_56@@YAHQAIPBD@Z']
add ['esp,', '8']
add ['eax,', '9']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jle ['short', 'loc_3976']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_393B']
mov ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcGroupNameSetsLengths@icu_56@@YAXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1E0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1E0]']
mov ['ecx,', '78h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'ds:_uCharNames']
add ['eax,', '10h']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
mov ['cx,', '[eax]']
mov ['[ebp+var_B0],', 'cx']
mov ['edx,', '[ebp+var_A4]']
add ['edx,', '2']
mov ['[ebp+var_A4],', 'edx']
mov ['eax,', 'ds:_uCharNames']
mov ['ecx,', 'ds:_uCharNames']
add ['ecx,', '[eax]']
mov ['[ebp+var_BC],', 'ecx']
movzx ['eax,', '[ebp+var_B0]']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_3A30']
movzx ['eax,', '[ebp+var_B0]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', 'ds:_uCharNames']
mov ['ecx,', 'ds:_uCharNames']
add ['ecx,', '[eax+4]']
mov ['[ebp+var_D4],', 'ecx']
mov ['eax,', '[ebp+var_D4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_104],', 'ecx']
mov ['edx,', '[ebp+var_D4]']
add ['edx,', '2']
mov ['[ebp+var_D4],', 'edx']
cmp ['[ebp+var_104],', '0']
jle ['loc_3C20']
mov ['eax,', 'ds:_uCharNames']
mov ['ecx,', 'ds:_uCharNames']
add ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_D4]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
shl ['eax,', '10h']
mov ['edx,', '[ebp+var_D4]']
movzx ['edx,', 'word', 'ptr', '[edx+4]']
or ['eax,', 'edx']
add ['ecx,', 'eax']
mov ['[ebp+var_E0],', 'ecx']
lea ['eax,', '[ebp+var_98]']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+var_E0]']
push ['edx']
call ['?expandGroupLengths@icu_56@@YAPBEPBEQAG1@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_110],', '0']
jmp ['short', 'loc_3AD9']
mov ['eax,', '[ebp+var_110]']
add ['eax,', '1']
mov ['[ebp+var_110],', 'eax']
cmp ['[ebp+var_110],', '20h']
jge ['loc_3BFD']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', '[ebp+eax*2+var_4C]']
add ['ecx,', '[ebp+var_E0]']
mov ['[ebp+var_EC],', 'ecx']
mov ['eax,', '[ebp+var_110]']
movzx ['ecx,', '[ebp+eax*2+var_98]']
mov ['[ebp+var_11C],', 'ecx']
cmp ['[ebp+var_11C],', '0']
jnz ['short', 'loc_3B1C']
jmp ['short', 'loc_3ACA']
mov ['eax,', '[ebp+var_EC]']
add ['eax,', '[ebp+var_11C]']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+var_F8]']
push ['eax']
lea ['ecx,', '[ebp+var_EC]']
push ['ecx']
push ['offset', '_gNameSet']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_BC]']
push ['eax']
movzx ['ecx,', '[ebp+var_B0]']
push ['ecx']
mov ['edx,', '[ebp+var_A4]']
push ['edx']
call ['?calcNameSetLength@icu_56@@YAHPBGGPBEPACQAIPAPBE1@Z']
add ['esp,', '1Ch']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_11C]']
cmp ['eax,', '[ebp+arg_0]']
jle ['short', 'loc_3B80']
mov ['eax,', '[ebp+var_11C]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_EC]']
cmp ['eax,', '[ebp+var_F8]']
jnz ['short', 'loc_3B93']
jmp ['loc_3ACA']
mov ['eax,', '[ebp+var_F8]']
push ['eax']
lea ['ecx,', '[ebp+var_EC]']
push ['ecx']
push ['offset', '_gNameSet']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+var_BC]']
push ['eax']
movzx ['ecx,', '[ebp+var_B0]']
push ['ecx']
mov ['edx,', '[ebp+var_A4]']
push ['edx']
call ['?calcNameSetLength@icu_56@@YAHPBGGPBEPACQAIPAPBE1@Z']
add ['esp,', '1Ch']
mov ['[ebp+var_11C],', 'eax']
mov ['eax,', '[ebp+var_11C]']
cmp ['eax,', '[ebp+arg_0]']
jle ['short', 'loc_3BE5']
mov ['eax,', '[ebp+var_11C]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_EC]']
cmp ['eax,', '[ebp+var_F8]']
jnz ['short', 'loc_3BF8']
jmp ['loc_3ACA']
jmp ['loc_3ACA']
mov ['eax,', '[ebp+var_D4]']
add ['eax,', '6']
mov ['[ebp+var_D4],', 'eax']
mov ['eax,', '[ebp+var_104]']
sub ['eax,', '1']
mov ['[ebp+var_104],', 'eax']
jmp ['loc_3A62']
cmp ['[ebp+Dst],', '0']
jz ['short', 'loc_3C38']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ds:_gMaxNameLength,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1E0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN18']
dd ['offset', '$LN15_0']
dd ['0FFFFFF68h,', '44h']
dd ['offset', '$LN16_0']
dd ['0FFFFFF14h,', '4']
dd ['offset', '$LN17_0']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?calcNameSetLength@icu_56@@YAHPBGGPBEPACQAIPAPBE1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '100h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100]']
mov ['ecx,', '40h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_18]']
jz ['loc_3E57']
mov ['eax,', '[ebp+var_8]']
movzx ['cx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_2C],', 'cx']
movzx ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['edx,', '3Bh']
jz ['short', 'loc_3D16']
mov ['[ebp+var_100],', '1']
jmp ['short', 'loc_3D20']
mov ['[ebp+var_100],', '0']
cmp ['[ebp+var_100],', '0']
jz ['loc_3E57']
movzx ['eax,', '[ebp+var_2C]']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jl ['short', 'loc_3D6F']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_2C]']
sar ['eax,', '5']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_2C]']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+arg_10]']
or ['edx,', '[ecx+eax*4]']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_2C]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_3E52']
movzx ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'dx']
movzx ['eax,', '[ebp+var_38]']
cmp ['eax,', '0FFFEh']
jnz ['short', 'loc_3DB4']
movzx ['eax,', '[ebp+var_2C]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
or ['eax,', 'edx']
mov ['[ebp+var_2C],', 'ax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
movzx ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'dx']
movzx ['eax,', '[ebp+var_38]']
cmp ['eax,', '0FFFFh']
jnz ['short', 'loc_3DF2']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_2C]']
sar ['eax,', '5']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_2C]']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+arg_10]']
or ['edx,', '[ecx+eax*4]']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_2C]']
sar ['eax,', '5']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ecx+eax*4],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_3E52']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_3E32']
movzx ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_3E30']
movzx ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['?calcStringSetLength@icu_56@@YAHQAIPBD@Z']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
movzx ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+arg_C]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_20]']
mov ['[ecx+eax],', 'dl']
jmp ['short', 'loc_3E49']
movzx ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['?calcStringSetLength@icu_56@@YAHQAIPBD@Z']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_3CE1']
mov ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_14]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '100h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uprv_getCharNameCharacters_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C0]']
mov ['ecx,', '30h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '_gNameSet']
call ['?charSetToUSet@@YAXQAIPBUUSetAdder@@@Z']
add ['esp,', '8']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?charSetToUSet@@YAXQAIPBUUSetAdder@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3F8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3F8]']
mov ['ecx,', '0FEh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_334],', '0']
lea ['eax,', '[ebp+var_334]']
push ['eax']
call ['?calcNameSetsLengths@icu_56@@YACPAW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3F09']
jmp ['loc_4016']
mov ['[ebp+var_328],', '0']
mov ['[ebp+var_31C],', '0']
jmp ['short', 'loc_3F2E']
mov ['eax,', '[ebp+var_31C]']
add ['eax,', '1']
mov ['[ebp+var_31C],', 'eax']
cmp ['[ebp+var_31C],', '100h']
jge ['short', 'loc_3F81']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_31C]']
sar ['eax,', '5']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_31C]']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+arg_0]']
and ['edx,', '[ecx+eax*4]']
jz ['short', 'loc_3F7F']
mov ['eax,', '[ebp+var_328]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_31C]']
mov ['[ebp+eax+var_310],', 'cl']
mov ['edx,', '[ebp+var_328]']
add ['edx,', '1']
mov ['[ebp+var_328],', 'edx']
jmp ['short', 'loc_3F1F']
mov ['eax,', '[ebp+var_328]']
push ['eax']
lea ['ecx,', '[ebp+var_208]']
push ['ecx']
lea ['edx,', '[ebp+var_310]']
push ['edx']
call ['_u_charsToUChars_56']
add ['esp,', '0Ch']
mov ['[ebp+var_31C],', '0']
jmp ['short', 'loc_3FB9']
mov ['eax,', '[ebp+var_31C]']
add ['eax,', '1']
mov ['[ebp+var_31C],', 'eax']
mov ['eax,', '[ebp+var_31C]']
cmp ['eax,', '[ebp+var_328]']
jge ['short', 'loc_4016']
mov ['eax,', '[ebp+var_31C]']
movzx ['ecx,', '[ebp+eax*2+var_208]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3FEB']
mov ['eax,', '[ebp+var_31C]']
movsx ['ecx,', '[ebp+eax+var_310]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4014']
mov ['eax,', '[ebp+var_31C]']
movzx ['ecx,', '[ebp+eax*2+var_208]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_3FAA']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '3F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN16_1']
dd ['offset', '$LN13_0']
dd ['0FFFFFCF0h,', '100h']
dd ['offset', '$LN14_0']
db ['0CCh']
db ['0FCh,', '2', 'dup(0FFh)']
dd ['4']
dd ['offset', '$LN15_1']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_uchar_swapNames_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '88Ch']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_88C]']
mov ['ecx,', '223h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_swapDataHeader_56']
add ['esp,', '14h']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_40E6']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_40ED']
xor ['eax,', 'eax']
jmp ['loc_4BB9']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '4']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+8]']
cmp ['ecx,', '75h']
jnz ['short', 'loc_4132']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
cmp ['ecx,', '6Eh']
jnz ['short', 'loc_4132']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
cmp ['ecx,', '61h']
jnz ['short', 'loc_4132']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Bh]']
cmp ['ecx,', '6Dh']
jnz ['short', 'loc_4132']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
cmp ['ecx,', '1']
jz ['short', 'loc_417B']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+0Bh]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ah]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
push ['eax']
push ['offset', '??_C@_0GK@HIJOEGLO@uchar_swapNames?$CI?$CJ?3?5data?5format?5?$CF@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '1Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['loc_4BB9']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+Src],', 'eax']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+Dst],', 'eax']
cmp ['[ebp+Size],', '0']
jge ['short', 'loc_41B3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_420D']
mov ['eax,', '[ebp+Size]']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+Size],', 'eax']
cmp ['[ebp+Size],', '14h']
jl ['short', 'loc_41E8']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+Size]']
cmp ['ecx,', '[ebp+var_60]']
jnb ['short', 'loc_420D']
mov ['eax,', '[ebp+Size]']
push ['eax']
push ['offset', '??_C@_0ED@JIFGADLB@uchar_swapNames?$CI?$CJ?3?5too?5few?5bytes@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_4BB9']
cmp ['[ebp+Size],', '0']
jge ['loc_42A1']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_6C]']
mov ['esi,', 'esp']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_6C]']
add ['eax,', '4']
mov ['[ebp+var_6C],', 'eax']
mov ['[ebp+var_78],', '0']
jmp ['short', 'loc_425B']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '1']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
cmp ['eax,', '[ebp+var_84]']
jnb ['short', 'loc_429C']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_9C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_9C]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ah]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'ax']
add ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_6C],', 'ecx']
jmp ['short', 'loc_4252']
jmp ['loc_4BB3']
mov ['eax,', '[ebp+Src]']
cmp ['eax,', '[ebp+Dst]']
jz ['short', 'loc_42CB']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_48],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Src]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_54],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Src]']
add ['eax,', '10h']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '10h']
mov ['[ebp+var_C0],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_B4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4E0],', 'ax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
push ['2']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_B4]']
add ['eax,', '2']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+var_C0]']
add ['eax,', '2']
mov ['[ebp+var_C0],', 'eax']
movzx ['eax,', '[ebp+var_4E0]']
cmp ['eax,', '200h']
jg ['short', 'loc_43EE']
movzx ['eax,', '[ebp+var_4E0]']
mov ['[ebp+var_84],', 'eax']
jmp ['short', 'loc_43F8']
mov ['[ebp+var_84],', '200h']
mov ['[ebp+var_78],', '0']
jmp ['short', 'loc_440A']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '1']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
cmp ['eax,', '[ebp+var_84]']
jnb ['short', 'loc_443C']
mov ['eax,', '[ebp+var_78]']
mov ['ecx,', '[ebp+var_B4]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_readInt16_56']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_78]']
mov ['word', 'ptr', '[ebp+ecx*2+var_4D4],', 'ax']
jmp ['short', 'loc_4401']
jmp ['short', 'loc_4447']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '1']
mov ['[ebp+var_78],', 'eax']
cmp ['[ebp+var_78],', '200h']
jnb ['short', 'loc_445F']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_78]']
mov ['word', 'ptr', '[ebp+ecx*2+var_4D4],', 'ax']
jmp ['short', 'loc_443E']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_5E8]']
push ['ecx']
movzx ['edx,', '[ebp+var_4E0]']
push ['edx']
lea ['eax,', '[ebp+var_4D4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?makeTokenMap@@YAXPBUUDataSwapper@@QAFGQAEPAW4UErrorCode@@@Z']
add ['esp,', '14h']
movzx ['eax,', '[ebp+var_4E0]']
cmp ['eax,', '100h']
jle ['short', 'loc_44A8']
movzx ['ecx,', '[ebp+var_4E0]']
sub ['ecx,', '100h']
mov ['[ebp+var_88C],', 'ecx']
jmp ['short', 'loc_44B2']
mov ['[ebp+var_88C],', '0']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
lea ['eax,', '[ebp+var_6F0]']
push ['eax']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_88C]']
push ['ecx']
lea ['edx,', '[ebp+var_2D4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?makeTokenMap@@YAXPBUUDataSwapper@@QAFGQAEPAW4UErrorCode@@@Z']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_44F4']
xor ['eax,', 'eax']
jmp ['loc_4BB9']
movzx ['eax,', '[ebp+var_4E0]']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_CC],', 'eax']
cmp ['[ebp+var_CC],', '0']
jnz ['short', 'loc_453E']
movzx ['eax,', '[ebp+var_4E0]']
push ['eax']
push ['offset', '??_C@_0CN@LEJEMODI@out?5of?5memory?5swapping?5?$CFu?5unames@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '7']
xor ['eax,', 'eax']
jmp ['loc_4BB9']
mov ['[ebp+var_78],', '0']
jmp ['short', 'loc_4550']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '1']
mov ['[ebp+var_78],', 'eax']
movzx ['eax,', '[ebp+var_4E0]']
cmp ['[ebp+var_78],', 'eax']
jnb ['short', 'loc_45A7']
cmp ['[ebp+var_78],', '100h']
jnb ['short', 'loc_45A7']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_78]']
movzx ['edx,', '[ebp+ecx+var_5E8]']
mov ['eax,', '[ebp+var_CC]']
lea ['ecx,', '[eax+edx*2]']
push ['ecx']
push ['2']
mov ['edx,', '[ebp+var_78]']
mov ['eax,', '[ebp+var_B4]']
lea ['ecx,', '[eax+edx*2]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_4547']
jmp ['short', 'loc_45B2']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '1']
mov ['[ebp+var_78],', 'eax']
movzx ['eax,', '[ebp+var_4E0]']
cmp ['[ebp+var_78],', 'eax']
jnb ['short', 'loc_4612']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_78]']
and ['ecx,', '0FFFFFF00h']
mov ['edx,', '[ebp+var_CC]']
lea ['eax,', '[edx+ecx*2]']
mov ['ecx,', '[ebp+var_78]']
and ['ecx,', '0FFh']
movzx ['edx,', '[ebp+ecx+var_6F0]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[ebp+var_B4]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_45A9']
push ['1']
mov ['eax,', '[ebp+var_CC]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
movzx ['ecx,', '[ebp+var_4E0]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_CC]']
push ['edx']
mov ['eax,', '[ebp+var_C0]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_CC]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
sub ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_swapInvStringBlock_56']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_46A4']
push ['offset', '??_C@_0CH@NFCKKPEM@uchar_swapNames?$CItoken?5strings?$CJ?5f@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '8']
xor ['eax,', 'eax']
jmp ['loc_4BB9']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_48]']
mov ['esi,', 'esp']
movzx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'ax']
mov ['[ebp+var_84],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+var_84]']
imul ['edx,', '3']
lea ['eax,', '[edx+edx+2]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
add ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
cmp ['ecx,', 'eax']
jz ['loc_4896']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_54]']
mov ['[ebp+var_794],', 'eax']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_54]']
mov ['[ebp+var_7AC],', 'eax']
mov ['eax,', '[ebp+var_60]']
sub ['eax,', '[ebp+var_54]']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '20h']
jbe ['loc_4896']
lea ['eax,', '[ebp+var_788]']
push ['eax']
lea ['ecx,', '[ebp+var_73C]']
push ['ecx']
mov ['edx,', '[ebp+var_794]']
push ['edx']
call ['?expandGroupLengths@icu_56@@YAPBEPBEQAG1@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_7A0],', 'eax']
mov ['eax,', '[ebp+var_7A0]']
sub ['eax,', '[ebp+var_794]']
mov ['ecx,', '[ebp+var_90]']
sub ['ecx,', 'eax']
mov ['[ebp+var_90],', 'ecx']
mov ['eax,', '[ebp+var_7A0]']
sub ['eax,', '[ebp+var_794]']
add ['eax,', '[ebp+var_7AC]']
mov ['[ebp+var_7AC],', 'eax']
mov ['eax,', '[ebp+var_7A0]']
mov ['[ebp+var_794],', 'eax']
movzx ['eax,', '[ebp+var_6FE]']
movzx ['ecx,', '[ebp+var_74A]']
add ['eax,', 'ecx']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+var_90]']
sub ['eax,', '[ebp+var_84]']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_84],', '0']
jbe ['loc_4891']
mov ['eax,', '[ebp+var_794]']
mov ['cl,', '[eax]']
mov ['[ebp+var_7B5],', 'cl']
mov ['edx,', '[ebp+var_794]']
add ['edx,', '1']
mov ['[ebp+var_794],', 'edx']
movzx ['eax,', '[ebp+var_7B5]']
mov ['ecx,', '[ebp+var_7AC]']
mov ['dl,', '[ebp+eax+var_5E8]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+var_7AC]']
add ['eax,', '1']
mov ['[ebp+var_7AC],', 'eax']
movzx ['eax,', '[ebp+var_7B5]']
movsx ['ecx,', 'word', 'ptr', '[ebp+eax*2+var_4D4]']
cmp ['ecx,', '0FFFFFFFEh']
jz ['short', 'loc_4847']
mov ['eax,', '[ebp+var_84]']
sub ['eax,', '1']
mov ['[ebp+var_84],', 'eax']
jmp ['short', 'loc_488C']
mov ['eax,', '[ebp+var_794]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_7AC]']
mov ['al,', '[ebp+ecx+var_6F0]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_7AC]']
add ['ecx,', '1']
mov ['[ebp+var_7AC],', 'ecx']
mov ['edx,', '[ebp+var_794]']
add ['edx,', '1']
mov ['[ebp+var_794],', 'edx']
mov ['eax,', '[ebp+var_84]']
sub ['eax,', '2']
mov ['[ebp+var_84],', 'eax']
jmp ['loc_47D3']
jmp ['loc_473D']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_6C]']
mov ['esi,', 'esp']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_84],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_6C]']
push ['ecx']
push ['4']
mov ['edx,', '[ebp+Src]']
add ['edx,', '[ebp+var_6C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_6C]']
add ['eax,', '4']
mov ['[ebp+var_6C],', 'eax']
mov ['[ebp+var_78],', '0']
jmp ['short', 'loc_4906']
mov ['eax,', '[ebp+var_78]']
add ['eax,', '1']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
cmp ['eax,', '[ebp+var_84]']
jnb ['loc_4BB3']
mov ['eax,', '[ebp+var_6C]']
cmp ['eax,', '[ebp+Size]']
jbe ['short', 'loc_4946']
mov ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
push ['offset', '??_C@_0FI@CFKKDCBF@uchar_swapNames?$CI?$CJ?3?5too?5few?5bytes@']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_printError_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '8']
xor ['eax,', 'eax']
jmp ['loc_4BB9']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_9C],', 'eax']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_6C]']
mov ['[ebp+var_A8],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_9C]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ah]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['ecx,', 'ax']
add ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_6C],', 'ecx']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_A8]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_9C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_A8]']
add ['ecx,', '0Ah']
push ['ecx']
push ['2']
mov ['edx,', '[ebp+var_9C]']
add ['edx,', '0Ah']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_9C]']
mov ['cl,', '[eax+8]']
mov ['byte', 'ptr', '[ebp+var_88C],', 'cl']
cmp ['byte', 'ptr', '[ebp+var_88C],', '0']
jz ['short', 'loc_4A0A']
cmp ['byte', 'ptr', '[ebp+var_88C],', '1']
jz ['short', 'loc_4A83']
jmp ['loc_4B81']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_A8]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+var_9C]']
add ['edx,', '0Ch']
push ['edx']
call ['_strlen']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+var_9C]']
add ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4A7E']
mov ['eax,', '[ebp+var_78]']
push ['eax']
push ['offset', '??_C@_0DP@IDMBALCM@uchar_swapNames?$CIprefix?5string?5of@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_printError_56']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jmp ['loc_4BB9']
jmp ['loc_4BAE']
mov ['eax,', '[ebp+var_9C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+9]']
mov ['[ebp+var_7C4],', 'ecx']
mov ['eax,', '[ebp+var_9C]']
add ['eax,', '0Ch']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+var_A8]']
add ['eax,', '0Ch']
mov ['[ebp+var_C0],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+var_7C4]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+18h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_7C4]']
mov ['ecx,', '[ebp+var_B4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_B4],', 'edx']
mov ['eax,', '[ebp+var_7C4]']
mov ['ecx,', '[ebp+var_C0]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_C0],', 'edx']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_6C]']
sub ['eax,', '[ebp+var_B4]']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '0']
jbe ['short', 'loc_4B4E']
mov ['eax,', '[ebp+var_B4]']
add ['eax,', '[ebp+var_90]']
movzx ['ecx,', 'byte', 'ptr', '[eax-1]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4B4E']
mov ['eax,', '[ebp+var_90]']
sub ['eax,', '1']
mov ['[ebp+var_90],', 'eax']
jmp ['short', 'loc_4B20']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['edx,', '[ebp+var_90]']
push ['edx']
mov ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_4BAE']
mov ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_9C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
push ['edx']
push ['offset', '??_C@_0DM@PCGHHPJO@uchar_swapNames?$CI?$CJ?3?5unknown?5type?5@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '10h']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '10h']
xor ['eax,', 'eax']
jmp ['short', 'loc_4BB9']
jmp ['loc_48FD']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_6C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN61']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '88Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN60']
dd ['offset', '$LN55_0']
dd ['0FFFFFA18h,', '100h']
dd ['offset', '$LN56_0']
dd ['0FFFFF910h,', '100h']
dd ['offset', '$LN57_0']
dd ['0FFFFF8C4h,', '42h']
dd ['offset', '$LN58_0']
dd ['0FFFFF878h,', '42h']
dd ['offset', '$LN59']
assume ['cs:_rdata']
public ['??_C@_0DM@PCGHHPJO@uchar_swapNames?$CI?$CJ?3?5unknown?5type?5@']
assume ['cs:_rdata']
public ['??_C@_0DP@IDMBALCM@uchar_swapNames?$CIprefix?5string?5of@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FI@CFKKDCBF@uchar_swapNames?$CI?$CJ?3?5too?5few?5bytes@']
db ["'", 'algorithmic', 'range', "%u',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0CH@NFCKKPEM@uchar_swapNames?$CItoken?5strings?$CJ?5f@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CN@LEJEMODI@out?5of?5memory?5swapping?5?$CFu?5unames@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0ED@JIFGADLB@uchar_swapNames?$CI?$CJ?3?5too?5few?5bytes@']
db ['0Ah,0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0GK@HIJOEGLO@uchar_swapNames?$CI?$CJ?3?5data?5format?5?$CF@']
db ["'n", '%02x)', 'is', 'not', 'recognized', 'as', "unames.icu',0Ah,0"]
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
?makeTokenMap@@YAXPBUUDataSwapper@@QAFGQAEPAW4UErrorCode@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_1FC]']
mov ['ecx,', '7Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4E6E']
jmp ['loc_5086']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+3]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_4EC5']
xor ['eax,', 'eax']
mov ['[ebp+var_114],', 'ax']
jmp ['short', 'loc_4E9D']
mov ['ax,', '[ebp+var_114]']
add ['ax,', '1']
mov ['[ebp+var_114],', 'ax']
movzx ['eax,', '[ebp+var_114]']
cmp ['eax,', '100h']
jge ['short', 'loc_4EC0']
movzx ['eax,', '[ebp+var_114]']
mov ['ecx,', '[ebp+Dst]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_114]']
mov ['[ecx+eax],', 'dl']
jmp ['short', 'loc_4E8B']
jmp ['loc_5086']
push ['100h']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['100h']
push ['0']
lea ['eax,', '[ebp+var_108]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
movzx ['eax,', '[ebp+arg_8]']
cmp ['eax,', '100h']
jle ['short', 'loc_4F02']
mov ['eax,', '100h']
mov ['[ebp+arg_8],', 'ax']
mov ['eax,', '1']
mov ['[ebp+var_114],', 'ax']
jmp ['short', 'loc_4F22']
mov ['ax,', '[ebp+var_114]']
add ['ax,', '1']
mov ['[ebp+var_114],', 'ax']
movzx ['eax,', '[ebp+var_114]']
movzx ['ecx,', '[ebp+arg_8]']
cmp ['eax,', 'ecx']
jge ['loc_4FE6']
movzx ['eax,', '[ebp+var_114]']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
cmp ['edx,', '0FFFFFFFFh']
jnz ['loc_4FE1']
mov ['al,', 'byte', 'ptr', '[ebp+var_114]']
mov ['[ebp+var_129],', 'al']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+var_135]']
push ['ecx']
push ['1']
lea ['edx,', '[ebp+var_129]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['?U_FAILURE@@YACW4UErrorCode@@@Z']
add ['esp,', '4']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4FBF']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
push ['ecx']
movzx ['edx,', '[ebp+var_114]']
push ['edx']
push ['offset', '??_C@_0FF@OBBGNFNI@unames?1makeTokenMap?$CI?$CJ?5finds?5vari@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_printError_56']
add ['esp,', '10h']
jmp ['loc_5086']
movzx ['eax,', '[ebp+var_129]']
mov ['ecx,', '[ebp+Dst]']
mov ['dl,', '[ebp+var_135]']
mov ['[ecx+eax],', 'dl']
movzx ['eax,', '[ebp+var_135]']
mov ['[ebp+eax+var_108],', '1']
jmp ['loc_4F10']
mov ['eax,', '1']
mov ['[ebp+var_120],', 'ax']
mov ['cx,', '[ebp+var_120]']
mov ['[ebp+var_114],', 'cx']
jmp ['short', 'loc_5014']
mov ['ax,', '[ebp+var_114]']
add ['ax,', '1']
mov ['[ebp+var_114],', 'ax']
movzx ['eax,', '[ebp+var_114]']
movzx ['ecx,', '[ebp+arg_8]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_5086']
movzx ['eax,', '[ebp+var_114]']
mov ['ecx,', '[ebp+Dst]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jnz ['short', 'loc_5081']
movzx ['eax,', '[ebp+var_120]']
movsx ['ecx,', '[ebp+eax+var_108]']
test ['ecx,', 'ecx']
jz ['short', 'loc_505C']
mov ['ax,', '[ebp+var_120]']
add ['ax,', '1']
mov ['[ebp+var_120],', 'ax']
jmp ['short', 'loc_5035']
movzx ['eax,', '[ebp+var_114]']
mov ['ecx,', '[ebp+Dst]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_120]']
mov ['[ecx+eax],', 'dl']
mov ['ax,', '[ebp+var_120]']
add ['ax,', '1']
mov ['[ebp+var_120],', 'ax']
jmp ['loc_5002']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '1FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN24']
dd ['offset', '$LN21']
dd ['0FFFFFED7h,', '1']
dd ['offset', '$LN22']
retf
db ['0FEh,', '2', 'dup(0FFh)']
dd ['1']
dd ['offset', '$LN23']
db ['31h,', '0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FF@OBBGNFNI@unames?1makeTokenMap?$CI?$CJ?5finds?5vari@']
db ["'charset", 'family', "%d)',0Ah,0"]
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_u_terminateChars_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['?umtx_initImplPostInit@icu_56@@YAXAAUUInitOnce@1@@Z:near']
extrn ['?umtx_initImplPreInit@icu_56@@YACAAUUInitOnce@1@@Z:near']
extrn ['__imp__InterlockedCompareExchange@12:near']
extrn ['_ucln_common_registerCleanup_56:near']
extrn ['_udata_getMemory_56:near']
extrn ['_udata_openChoice_56:near']
extrn ['__imp___wassert:near']
extrn ['_udata_close_56:near']
extrn ['_u_charType_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['_strcmp:near']
extrn ['_uprv_asciitolower_56:near']
extrn ['_uprv_toupper_56:near']
extrn ['_uprv_free_56:near']
extrn ['_memset:near']
extrn ['_uprv_malloc_56:near']
extrn ['_u_charsToUChars_56:near']
extrn ['_strlen:near']
extrn ['_udata_swapInvStringBlock_56:near']
extrn ['_udata_readInt16_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_udata_printError_56:near']
extrn ['_udata_swapDataHeader_56:near']
end

endp
_uprv_itou_56	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_8]']
xor ['edx,', 'edx']
div ['[ebp+arg_C]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '9']
jg ['short', 'loc_44']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '30h']
mov ['[ebp+var_F4],', 'eax']
jmp ['short', 'loc_50']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '37h']
mov ['[ebp+var_F4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', 'word', 'ptr', '[ebp+var_F4]']
mov ['[eax+edx*2],', 'cx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_8]']
xor ['edx,', 'edx']
div ['[ebp+arg_C]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_83']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jl ['short', 'loc_25']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_10]']
jge ['short', 'loc_A5']
mov ['eax,', '30h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_83']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_B9']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx*2],', 'ax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_CB']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
cmp ['[ebp+var_20],', 'eax']
jge ['short', 'loc_116']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
sub ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_2C],', 'dx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
sub ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
mov ['esi,', '[ebp+arg_0]']
mov ['dx,', '[esi+edx*2]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ebp+var_2C]']
mov ['[ecx+eax*2],', 'dx']
jmp ['short', 'loc_C2']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
end

endp
_ubidi_writeReverse_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_14],', '0']
jz ['short', 'loc_2C']
mov ['eax,', '[ebp+arg_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_33']
xor ['eax,', 'eax']
jmp ['loc_100']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_51']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jl ['short', 'loc_51']
cmp ['[ebp+arg_C],', '0']
jl ['short', 'loc_51']
cmp ['[ebp+arg_C],', '0']
jle ['short', 'loc_61']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_61']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_100']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_A0']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_8]']
jb ['short', 'loc_7D']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*2]']
cmp ['[ebp+arg_0],', 'edx']
jb ['short', 'loc_93']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_A0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
cmp ['[ebp+arg_8],', 'edx']
jnb ['short', 'loc_A0']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['short', 'loc_100']
cmp ['[ebp+arg_4],', '0FFFFFFFFh']
jnz ['short', 'loc_B5']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_u_strlen_56']
add ['esp,', '4']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_E1']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
movzx ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_doWriteReverse']
add ['esp,', '18h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_E8']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_doWriteReverse	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '130h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_130]']
mov ['ecx,', '4Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '0Bh']
mov ['[ebp+var_130],', 'eax']
jz ['short', 'loc_15B']
cmp ['[ebp+var_130],', '1']
jz ['loc_206']
jmp ['loc_2F9']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_174']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_5B2']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_1C7']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_1C7']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
and ['edx,', '0FFFFFC00h']
cmp ['edx,', '0D800h']
jnz ['short', 'loc_1C7']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['cx,', '[edx+ecx*2]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '2']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jl ['short', 'loc_1CD']
cmp ['[ebp+arg_4],', '0']
jg ['loc_17A']
jmp ['loc_5AF']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_21F']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_5B2']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_292']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_292']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2-2]']
mov ['[ebp+var_2C],', 'dx']
movzx ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_292']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
movzx ['eax,', '[ebp+var_2C]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_2BA']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_u_charType_56']
add ['esp,', '4']
movsx ['ecx,', 'al']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['edx,', '1C0h']
jnz ['loc_22B']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['cx,', '[edx+ecx*2]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '2']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jl ['short', 'loc_2C0']
cmp ['[ebp+arg_4],', '0']
jg ['loc_225']
jmp ['loc_5AF']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '8']
jnz ['short', 'loc_30A']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_379']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['[ebp+var_44],', 'cx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
movzx ['eax,', '[ebp+var_44]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['short', 'loc_35D']
movzx ['eax,', '[ebp+var_44]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['short', 'loc_35D']
movzx ['eax,', '[ebp+var_44]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jb ['short', 'loc_35D']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jg ['short', 'loc_317']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', 'eax']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_392']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_5B2']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+arg_C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_405']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_405']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2-2]']
mov ['[ebp+var_50],', 'dx']
movzx ['eax,', '[ebp+var_50]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_405']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
movzx ['eax,', '[ebp+var_50]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_20],', 'edx']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '1']
jz ['loc_4A6']
cmp ['[ebp+arg_4],', '0']
jle ['loc_4A6']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_u_charType_56']
add ['esp,', '4']
movsx ['ecx,', 'al']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['edx,', '1C0h']
jz ['short', 'loc_4A6']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*2]']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_4A1']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_4A1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2-2]']
mov ['[ebp+var_5C],', 'dx']
movzx ['eax,', '[ebp+var_5C]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_4A1']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
movzx ['eax,', '[ebp+var_5C]']
shl ['eax,', '0Ah']
mov ['ecx,', '[ebp+var_20]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_20],', 'edx']
jmp ['loc_412']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '8']
jz ['short', 'loc_4DB']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['short', 'loc_4D6']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['short', 'loc_4D6']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jnb ['short', 'loc_4DB']
jmp ['loc_5A5']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '2']
jz ['loc_579']
mov ['[ebp+var_68],', '0']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_u_charMirror_56']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0FFFFh']
ja ['short', 'loc_526']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+arg_8]']
mov ['dx,', 'word', 'ptr', '[ebp+var_20]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_564']
mov ['eax,', '[ebp+var_20]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_20]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_68]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_5A5']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['cx,', '[edx+ecx*2]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '2']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_579']
cmp ['[ebp+arg_4],', '0']
jg ['loc_398']
mov ['eax,', '[ebp+arg_C]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '130h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_ubidi_writeReordered_56 proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '180h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_180]']
mov ['ecx,', '60h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_5F4']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_5FB']
xor ['eax,', 'eax']
jmp ['loc_E0D']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_631']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_631']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jl ['short', 'loc_631']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_631']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_641']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_641']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_E0D']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_686']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jb ['short', 'loc_65D']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
cmp ['[ebp+var_8],', 'edx']
jb ['short', 'loc_676']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_8]']
jb ['short', 'loc_686']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx*2]']
cmp ['[ebp+arg_4],', 'eax']
jnb ['short', 'loc_686']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '1']
xor ['eax,', 'eax']
jmp ['loc_E0D']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_6A7']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
jmp ['loc_E0D']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ubidi_countRuns_56']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jle ['short', 'loc_6C9']
xor ['eax,', 'eax']
jmp ['loc_E0D']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
and ['ecx,', '1']
jz ['short', 'loc_6F6']
movzx ['eax,', '[ebp+arg_C]']
or ['eax,', '4']
mov ['[ebp+arg_C],', 'ax']
movzx ['eax,', '[ebp+arg_C]']
and ['eax,', '0FFFFFFF7h']
mov ['[ebp+arg_C],', 'ax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
and ['ecx,', '2']
jz ['short', 'loc_717']
movzx ['eax,', '[ebp+arg_C]']
or ['eax,', '8']
mov ['[ebp+arg_C],', 'ax']
movzx ['eax,', '[ebp+arg_C]']
and ['eax,', '0FFFFFFFBh']
mov ['[ebp+arg_C],', 'ax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+58h],', '4']
jz ['short', 'loc_746']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+58h],', '5']
jz ['short', 'loc_746']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+58h],', '6']
jz ['short', 'loc_746']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+58h],', '3']
jz ['short', 'loc_746']
movzx ['eax,', '[ebp+arg_C]']
and ['eax,', '0FFFFFFFBh']
mov ['[ebp+arg_C],', 'ax']
movzx ['eax,', '[ebp+arg_C]']
and ['eax,', '10h']
jnz ['loc_B5E']
movzx ['eax,', '[ebp+arg_C]']
and ['eax,', '4']
jnz ['loc_818']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_772']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jge ['loc_813']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ubidi_getVisualRun_56']
add ['esp,', '10h']
test ['eax,', 'eax']
jnz ['short', 'loc_7C9']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
and ['ecx,', '0FFFFFFFDh']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx*2]']
push ['ecx']
call ['_doWriteForward']
add ['esp,', '18h']
mov ['[ebp+var_5C],', 'eax']
jmp ['short', 'loc_7F3']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx*2]']
push ['ecx']
call ['_doWriteReverse']
add ['esp,', '18h']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_805']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_769']
jmp ['loc_B59']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['[ebp+var_68],', 'ecx']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_833']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_44]']
jge ['loc_B59']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ubidi_getVisualRun_56']
add ['esp,', '10h']
mov ['[ebp+var_8C],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_38]']
imul ['eax,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0E4h]']
mov ['eax,', '[edx+eax+8]']
mov ['[ebp+var_98],', 'eax']
cmp ['[ebp+var_98],', '0']
jge ['short', 'loc_895']
mov ['[ebp+var_98],', '0']
cmp ['[ebp+var_8C],', '0']
jnz ['loc_9F4']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+54h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8C9']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8C9']
mov ['eax,', '[ebp+var_98]']
or ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '1']
jz ['short', 'loc_8DF']
mov ['eax,', '200Eh']
mov ['[ebp+var_80],', 'ax']
jmp ['short', 'loc_8FB']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '4']
jz ['short', 'loc_8F5']
mov ['eax,', '200Fh']
mov ['[ebp+var_80],', 'ax']
jmp ['short', 'loc_8FB']
xor ['eax,', 'eax']
mov ['[ebp+var_80],', 'ax']
movzx ['eax,', '[ebp+var_80]']
test ['eax,', 'eax']
jz ['short', 'loc_925']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_91C']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
and ['ecx,', '0FFFFFFFDh']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
call ['_doWriteForward']
add ['esp,', '18h']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_95E']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+54h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_993']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_68]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
test ['edx,', 'edx']
jz ['short', 'loc_993']
mov ['eax,', '[ebp+var_98]']
or ['eax,', '2']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '2']
jz ['short', 'loc_9A9']
mov ['eax,', '200Eh']
mov ['[ebp+var_80],', 'ax']
jmp ['short', 'loc_9C5']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '8']
jz ['short', 'loc_9BF']
mov ['eax,', '200Fh']
mov ['[ebp+var_80],', 'ax']
jmp ['short', 'loc_9C5']
xor ['eax,', 'eax']
mov ['[ebp+var_80],', 'ax']
movzx ['eax,', '[ebp+var_80]']
test ['eax,', 'eax']
jz ['short', 'loc_9EF']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_9E6']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_B54']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+54h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_A2B']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_68]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+eax-1]']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['edx,', '2002h']
jnz ['short', 'loc_A2B']
mov ['eax,', '[ebp+var_98]']
or ['eax,', '4']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '1']
jz ['short', 'loc_A41']
mov ['eax,', '200Eh']
mov ['[ebp+var_80],', 'ax']
jmp ['short', 'loc_A5D']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '4']
jz ['short', 'loc_A57']
mov ['eax,', '200Fh']
mov ['[ebp+var_80],', 'ax']
jmp ['short', 'loc_A5D']
xor ['eax,', 'eax']
mov ['[ebp+var_80],', 'ax']
movzx ['eax,', '[ebp+var_80]']
test ['eax,', 'eax']
jz ['short', 'loc_A87']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_A7E']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
call ['_doWriteReverse']
add ['esp,', '18h']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_ABD']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+54h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_AF8']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['edx,', '2002h']
jnz ['short', 'loc_AF8']
mov ['eax,', '[ebp+var_98]']
or ['eax,', '8']
mov ['[ebp+var_98],', 'eax']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '2']
jz ['short', 'loc_B0E']
mov ['eax,', '200Eh']
mov ['[ebp+var_80],', 'ax']
jmp ['short', 'loc_B2A']
mov ['eax,', '[ebp+var_98]']
and ['eax,', '8']
jz ['short', 'loc_B24']
mov ['eax,', '200Fh']
mov ['[ebp+var_80],', 'ax']
jmp ['short', 'loc_B2A']
xor ['eax,', 'eax']
mov ['[ebp+var_80],', 'ax']
movzx ['eax,', '[ebp+var_80]']
test ['eax,', 'eax']
jz ['short', 'loc_B54']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_B4B']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[ebp+var_80]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_82A']
jmp ['loc_DF2']
movzx ['eax,', '[ebp+arg_C]']
and ['eax,', '4']
jnz ['loc_C1A']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
js ['loc_C15']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ubidi_getVisualRun_56']
add ['esp,', '10h']
test ['eax,', 'eax']
jnz ['short', 'loc_BCB']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
and ['ecx,', '0FFFFFFFDh']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx*2]']
push ['ecx']
call ['_doWriteReverse']
add ['esp,', '18h']
mov ['[ebp+var_5C],', 'eax']
jmp ['short', 'loc_BF5']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[ebp+var_8]']
lea ['ecx,', '[eax+edx*2]']
push ['ecx']
call ['_doWriteForward']
add ['esp,', '18h']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_C07']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_B71']
jmp ['loc_DF2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['[ebp+var_A4],', 'ecx']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
js ['loc_DF2']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ubidi_getVisualRun_56']
add ['esp,', '10h']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_8]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+var_B0],', 'edx']
cmp ['[ebp+var_BC],', '0']
jnz ['loc_D2A']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_A4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
test ['edx,', 'edx']
jz ['short', 'loc_CAD']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_CA4']
mov ['eax,', '200Eh']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
and ['ecx,', '0FFFFFFFDh']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_B0]']
push ['edx']
call ['_doWriteReverse']
add ['esp,', '18h']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_CE9']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D25']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_D1C']
mov ['eax,', '200Eh']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_DED']
mov ['eax,', '[ebp+var_A4]']
add ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['edx,', '2002h']
jnz ['short', 'loc_D68']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_D5F']
mov ['eax,', '200Fh']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
movzx ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
mov ['edx,', '[ebp+var_B0]']
push ['edx']
call ['_doWriteForward']
add ['esp,', '18h']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_DA1']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+var_5C]']
mov ['[ebp+arg_8],', 'eax']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[ebp+var_A4]']
movzx ['ecx,', 'byte', 'ptr', '[ecx+eax-1]']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['edx,', '2002h']
jnz ['short', 'loc_DED']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_DE4']
mov ['eax,', '200Fh']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '2']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
jmp ['loc_C2C']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_u_terminateUChars_56']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN85']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '180h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN84']
dd ['offset', '$LN82']
dd ['0FFFFFFA4h,', '4']
dd ['offset', '$LN83']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rtc$TMZ,', 'fs:nothing,', 'gs:nothing']
endp
_doWriteForward	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '154h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_154]']
mov ['ecx,', '55h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_10]']
and ['eax,', '0Ah']
mov ['[ebp+var_154],', 'eax']
jz ['short', 'loc_EB4']
cmp ['[ebp+var_154],', '2']
jz ['short', 'loc_F08']
cmp ['[ebp+var_154],', '8']
jz ['loc_101A']
jmp ['loc_1110']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_ED3']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_12C8']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '2']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2']
mov ['[ebp+arg_0],', 'ecx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jg ['short', 'loc_ED3']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_12C8']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_F2F']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_12C8']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_F97']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_F97']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_38],', 'dx']
movzx ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_F97']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_2C]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_38]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
call ['_u_charMirror_56']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0FFFFh']
ja ['short', 'loc_FC8']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_8]']
mov ['dx,', 'word', 'ptr', '[ebp+var_2C]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1006']
mov ['eax,', '[ebp+var_2C]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_2C]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_4]']
jl ['loc_F2F']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_12C8']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['[ebp+var_50],', 'cx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
movzx ['eax,', '[ebp+var_50]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['loc_10F2']
movzx ['eax,', '[ebp+var_50]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['loc_10F2']
movzx ['eax,', '[ebp+var_50]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jb ['loc_10F2']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jns ['short', 'loc_10DF']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_10D4']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax]']
mov ['[ebp+var_50],', 'cx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
movzx ['eax,', '[ebp+var_50]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['short', 'loc_10D2']
movzx ['eax,', '[ebp+var_50]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['short', 'loc_10D2']
movzx ['eax,', '[ebp+var_50]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jb ['short', 'loc_10D2']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '1']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_107D']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_44]']
jmp ['loc_12C8']
mov ['eax,', '[ebp+arg_8]']
mov ['cx,', '[ebp+var_50]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '2']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jg ['loc_1020']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_44]']
jmp ['loc_12C8']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_5C],', 'eax']
mov ['[ebp+var_74],', '0']
mov ['[ebp+var_68],', '0']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2]']
mov ['[ebp+var_80],', 'edx']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0D800h']
jnz ['short', 'loc_1195']
mov ['eax,', '[ebp+var_68]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_1195']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', '[ecx+eax*2]']
mov ['[ebp+var_8C],', 'dx']
movzx ['eax,', '[ebp+var_8C]']
and ['eax,', '0FFFFFC00h']
cmp ['eax,', '0DC00h']
jnz ['short', 'loc_1195']
mov ['eax,', '[ebp+var_68]']
add ['eax,', '1']
mov ['[ebp+var_68],', 'eax']
mov ['eax,', '[ebp+var_80]']
shl ['eax,', '0Ah']
movzx ['ecx,', '[ebp+var_8C]']
lea ['edx,', '[eax+ecx-35FDC00h]']
mov ['[ebp+var_80],', 'edx']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax*2]']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+var_68]']
mov ['[ebp+arg_4],', 'eax']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['loc_12BB']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['loc_12BB']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jb ['loc_12BB']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '[ebp+var_68]']
mov ['[ebp+var_5C],', 'eax']
jns ['short', 'loc_124C']
mov ['eax,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[eax],', '0Fh']
cmp ['[ebp+arg_4],', '0']
jle ['short', 'loc_1244']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '0FFFFFFFCh']
cmp ['eax,', '200Ch']
jz ['short', 'loc_1239']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '202Ah']
cmp ['eax,', '5']
jb ['short', 'loc_1239']
mov ['eax,', '[ebp+var_80]']
sub ['eax,', '2066h']
cmp ['eax,', '4']
jb ['short', 'loc_1239']
mov ['eax,', '[ebp+var_5C]']
sub ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_11F1']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '[ebp+var_5C]']
jmp ['short', 'loc_12C8']
mov ['eax,', '[ebp+var_80]']
push ['eax']
call ['_u_charMirror_56']
add ['esp,', '4']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '0FFFFh']
ja ['short', 'loc_127D']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+arg_8]']
mov ['dx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[ecx+eax*2],', 'dx']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
jmp ['short', 'loc_12BB']
mov ['eax,', '[ebp+var_80]']
sar ['eax,', '0Ah']
add ['eax,', '0D7C0h']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['eax,', '[ebp+var_80]']
and ['eax,', '3FFh']
or ['eax,', '0DC00h']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+ecx*2],', 'ax']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+arg_4],', '0']
jg ['loc_111D']
mov ['eax,', '[ebp+var_74]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '154h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_u_terminateUChars_56:near']
extrn ['_u_strlen_56:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['_u_charMirror_56:near']
extrn ['_u_charType_56:near']
extrn ['_ubidi_getVisualRun_56:near']
extrn ['_ubidi_countRuns_56:near']
extrn ['@_RTC_CheckStackVars@8:near']
end

endp
_main		proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '314h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_314]']
mov ['ecx,', '0C5h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+Code],', '0']
call ['_u_getDataDirectory_56']
mov ['ds:dword_25BFF0,', 'eax']
mov ['eax,', 'ds:dword_25BFF0']
mov ['ds:dword_25BFDC,', 'eax']
push ['offset', '_options']
push ['7']
mov ['eax,', '[ebp+argv]']
push ['eax']
mov ['ecx,', '[ebp+argc]']
push ['ecx']
call ['_u_parseArgs']
add ['esp,', '10h']
mov ['[ebp+argc],', 'eax']
cmp ['[ebp+argc],', '0']
jge ['short', 'loc_25C0B0']
mov ['eax,', '[ebp+argc]']
neg ['eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+argv]']
mov ['edx,', '[ecx+eax*4]']
push ['edx']
push ['offset', '??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+argc],', '0']
jl ['short', 'loc_25C0CC']
movsx ['eax,', 'ds:byte_25BF9A']
test ['eax,', 'eax']
jnz ['short', 'loc_25C0CC']
movsx ['eax,', 'ds:byte_25BFAE']
test ['eax,', 'eax']
jz ['short', 'loc_25C10A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+argv]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['offset', '??_C@_0BLG@MNNNABDA@usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLconvrtrs?4t@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
cmp ['[ebp+argc],', '0']
setl ['al']
jmp ['loc_25C468']
movsx ['eax,', 'ds:byte_25BFC2']
test ['eax,', 'eax']
jz ['short', 'loc_25C11C']
mov ['ds:_verbose,', '1']
movsx ['eax,', 'ds:byte_25C012']
test ['eax,', 'eax']
jz ['short', 'loc_25C12E']
mov ['ds:_quiet,', '1']
cmp ['[ebp+argc],', '2']
jl ['short', 'loc_25C145']
mov ['eax,', '[ebp+argv]']
mov ['ecx,', '[eax+4]']
mov ['dword', 'ptr', 'ds:_path,', 'ecx']
jmp ['loc_25C1F0']
mov ['eax,', 'ds:dword_25BFF0']
mov ['dword', 'ptr', 'ds:_path,', 'eax']
cmp ['dword', 'ptr', 'ds:_path,', '0']
jz ['loc_25C1E6']
mov ['eax,', 'dword', 'ptr', 'ds:_path']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_25C1E6']
mov ['eax,', 'dword', 'ptr', 'ds:_path']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_250],', 'eax']
mov ['eax,', '[ebp+var_250]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '5Ch']
jz ['short', 'loc_25C1C5']
mov ['eax,', '[ebp+var_250]']
mov ['byte', 'ptr', '[eax],', '5Ch']
mov ['ecx,', '[ebp+var_250]']
add ['ecx,', '1']
mov ['[ebp+var_250],', 'ecx']
push ['offset', '??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@']
mov ['eax,', '[ebp+var_250]']
push ['eax']
call ['_strcpy']
add ['esp,', '8']
lea ['eax,', '[ebp+Dest]']
mov ['dword', 'ptr', 'ds:_path,', 'eax']
jmp ['short', 'loc_25C1F0']
mov ['dword', 'ptr', 'ds:_path,', 'offset', '??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@']
push ['offset', 'word_1FBFE']
push ['0']
push ['offset', '_stringStore']
call ['_memset']
add ['esp,', '0Ch']
push ['400h']
push ['0']
push ['offset', '_tagStore']
call ['_memset']
add ['esp,', '0Ch']
push ['3FFCh']
push ['0']
push ['offset', '_converters']
call ['_memset']
add ['esp,', '0Ch']
push ['offset', 'dword_1F7F04']
push ['0']
push ['offset', '_tags']
call ['_memset']
add ['esp,', '0Ch']
push ['offset', 'word_1FFFE']
push ['0']
push ['offset', '_aliasLists']
call ['_memset']
add ['esp,', '0Ch']
push ['offset', 'word_1FFFE']
push ['0']
push ['offset', '_knownAliases']
call ['_memset']
add ['esp,', '0Ch']
push ['offset', '??_C@_01KDCPPGHE@r?$AA@']
mov ['eax,', 'dword', 'ptr', 'ds:_path']
push ['eax']
call ['_T_FileStream_open']
add ['esp,', '8']
mov ['[ebp+var_22C],', 'eax']
cmp ['[ebp+var_22C],', '0']
jnz ['short', 'loc_25C2CB']
mov ['esi,', 'esp']
mov ['eax,', 'dword', 'ptr', 'ds:_path']
push ['eax']
push ['offset', '??_C@_0CI@JFPBPMDK@gencnval?3?5unable?5to?5open?5input?5f@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['4']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_22C]']
push ['eax']
call ['_parseFile']
add ['esp,', '4']
mov ['eax,', '[ebp+var_22C]']
push ['eax']
call ['_T_FileStream_close']
add ['esp,', '4']
lea ['eax,', '[ebp+Code]']
push ['eax']
movsx ['ecx,', 'ds:byte_25BFD6']
neg ['ecx']
sbb ['ecx,', 'ecx']
and ['ecx,', 'offset', '??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@']
push ['ecx']
push ['offset', '_dataInfo']
push ['offset', '??_C@_08KCICHELA@cnvalias?$AA@']
push ['offset', '??_C@_03IAEMGAKA@icu?$AA@']
mov ['edx,', 'ds:dword_25BFDC']
push ['edx']
call ['_udata_create']
add ['esp,', '18h']
mov ['[ebp+var_238],', 'eax']
cmp ['[ebp+Code],', '0']
jle ['short', 'loc_25C37F']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0DB@IJDGILDA@gencnval?3?5unable?5to?5open?5output?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_238]']
push ['eax']
call ['_writeAliasTable']
add ['esp,', '4']
lea ['eax,', '[ebp+Code]']
push ['eax']
mov ['ecx,', '[ebp+var_238]']
push ['ecx']
call ['_udata_finish']
add ['esp,', '8']
cmp ['[ebp+Code],', '0']
jle ['short', 'loc_25C3FD']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['_u_errorName_56']
add ['esp,', '4']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '??_C@_0CM@EHLHEMJI@gencnval?3?5error?5finishing?5output@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Code]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_25C40F']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '3Fh']
jge ['short', 'loc_25C466']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_25C427']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0FFFh']
jge ['short', 'loc_25C464']
mov ['eax,', '[ebp+var_C]']
imul ['eax,', '7FFCh']
mov ['ecx,', '[ebp+var_18]']
cmp ['ds:dword_24440[eax+ecx*8],', '0']
jz ['short', 'loc_25C462']
mov ['eax,', '[ebp+var_C]']
imul ['eax,', '7FFCh']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', 'ds:dword_24440[eax+ecx*8]']
push ['edx']
call ['_uprv_free_56']
add ['esp,', '4']
jmp ['short', 'loc_25C41E']
jmp ['short', 'loc_25C406']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN26']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '314h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN25']
dd ['offset', '$LN23']
dd ['0FFFFFDBCh,', '4']
dd ['offset', '$LN24']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CM@EHLHEMJI@gencnval?3?5error?5finishing?5output@']
assume ['cs:_rdata']
public ['??_C@_0DB@IJDGILDA@gencnval?3?5unable?5to?5open?5output?5@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03IAEMGAKA@icu?$AA@']
assume ['cs:_rdata']
public ['??_C@_08KCICHELA@cnvalias?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@']
db ["'and", 'others.', 'All', 'Rights', 'Reserved.', "',0"]
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CI@JFPBPMDK@gencnval?3?5unable?5to?5open?5input?5f@']
assume ['cs:_rdata']
public ['??_C@_01KDCPPGHE@r?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BLG@MNNNABDA@usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLconvrtrs?4t@']
db ["9,'read", 'convrtrs.txt', 'and', 'create', "icudt56l_cnvalias.icu',0Ah"]
db ["'options:',0Ah"]
db ["9,'-h", 'or', '-?', 'or', '--help', 'this', 'usage', "text',0Ah"]
db ["9,'-v", 'or', '--verbose', 'prints', 'out', 'extra', 'information', 'about', 'the', "alias'"]
db ["'", "table',0Ah"]
db ["9,'-q", 'or', '--quiet', 'do', 'not', 'display', 'warnings', 'and', "progress',0Ah"]
db ["9,'-c", 'or', '--copyright', 'include', 'a', 'copyright', "notice',0Ah"]
db ["9,'-d", 'or', '--destdir', 'destination', 'directory,', 'followed', 'by', 'the', "path',0Ah"]
db ["9,'-s", 'or', '--sourcedir', 'source', 'directory,', 'followed', 'by', 'the', "path',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@']
align ['4']
assume ['cs:_rtc$TMZ']
assume ['cs:_rtc$IMZ']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_parseFile	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', 'dword_100F8']
call ['__chkstk']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_100F8]']
mov ['ecx,', '403Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_1001C],', '0']
mov ['[ebp+var_10028],', '0']
mov ['[ebp+var_10031],', '1']
mov ['ds:_lineNum,', '0']
push ['0']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
call ['_getTagNumber']
add ['esp,', '8']
push ['3']
push ['offset', '??_C@_03NIFPGLBG@ALL?$AA@']
call ['_getTagNumber']
add ['esp,', '8']
push ['0']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
push ['offset', '_stringBlock']
call ['_allocString']
add ['esp,', '0Ch']
movsx ['eax,', '[ebp+var_10031]']
test ['eax,', 'eax']
jz ['loc_25CADF']
mov ['[ebp+var_10031],', '0']
push ['7FFFh']
lea ['eax,', '[ebp+Source]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_T_FileStream_readLine']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['loc_25C917']
lea ['eax,', '[ebp+Source]']
push ['eax']
call ['_chomp']
add ['esp,', '4']
mov ['[ebp+var_10028],', 'eax']
cmp ['[ebp+var_1001C],', '0']
jz ['short', 'loc_25C8C2']
cmp ['[ebp+var_10028],', '0']
jle ['short', 'loc_25C8F3']
movsx ['eax,', '[ebp+Source]']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__isspace']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_25C8F3']
lea ['eax,', '[ebp+Source]']
push ['eax']
mov ['ecx,', '[ebp+var_1001C]']
lea ['edx,', '[ebp+ecx+Dest]']
push ['edx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_1001C]']
add ['eax,', '[ebp+var_10028]']
mov ['[ebp+var_1001C],', 'eax']
jmp ['short', 'loc_25C905']
cmp ['[ebp+var_1001C],', '0']
jle ['short', 'loc_25C905']
mov ['[ebp+var_10031],', '1']
jmp ['short', 'loc_25C917']
mov ['eax,', 'ds:_lineNum']
add ['eax,', '1']
mov ['ds:_lineNum,', 'eax']
jmp ['loc_25C85D']
movsx ['eax,', '[ebp+var_10031]']
test ['eax,', 'eax']
jnz ['short', 'loc_25C92F']
cmp ['[ebp+var_1001C],', '0']
jle ['loc_25CACD']
movsx ['eax,', '[ebp+Dest]']
mov ['esi,', 'esp']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__isspace']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_25C99D']
mov ['eax,', 'ds:_lineNum']
sub ['eax,', '1']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0DC@OOOGMDPK@?$CFs?3?$CFd?3?5error?3?5cannot?5start?5an?5al@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['9']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_25CA96']
movsx ['eax,', '[ebp+Dest]']
cmp ['eax,', '7Bh']
jnz ['loc_25CA32']
movsx ['eax,', 'ds:_standardTagsUsed']
test ['eax,', 'eax']
jnz ['short', 'loc_25CA13']
mov ['eax,', '[ebp+var_1001C]']
movsx ['ecx,', '[ebp+eax+var_8009]']
cmp ['ecx,', '7Dh']
jz ['short', 'loc_25CA13']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0DK@NBOJOHIA@?$CFs?3?$CFd?3?5error?3?5alias?5needs?5to?5sta@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['9']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_1001C]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_addOfficialTaggedStandards']
add ['esp,', '8']
mov ['ds:_standardTagsUsed,', '1']
jmp ['short', 'loc_25CA96']
movsx ['eax,', 'ds:_standardTagsUsed']
test ['eax,', 'eax']
jz ['short', 'loc_25CA4E']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_parseLine']
add ['esp,', '4']
jmp ['short', 'loc_25CA96']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0EC@DFFMNFMG@?$CFs?3?$CFd?3?5error?3?5alias?5table?5needs?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['9']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_10028],', '0']
jle ['short', 'loc_25CAC3']
lea ['eax,', '[ebp+Source]']
push ['eax']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_10028]']
mov ['[ebp+var_1001C],', 'eax']
jmp ['short', 'loc_25CACD']
mov ['[ebp+var_1001C],', '0']
mov ['eax,', 'ds:_lineNum']
add ['eax,', '1']
mov ['ds:_lineNum,', 'eax']
jmp ['loc_25C847']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', 'offset', 'dword_100F8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN24_0']
dd ['offset', '$LN22']
dd ['0FFFEFFF0h,', '7FFFh']
dd ['offset', '$LN23_0']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EC@DFFMNFMG@?$CFs?3?$CFd?3?5error?3?5alias?5table?5needs?5@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DK@NBOJOHIA@?$CFs?3?$CFd?3?5error?3?5alias?5needs?5to?5sta@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0DC@OOOGMDPK@?$CFs?3?$CFd?3?5error?3?5cannot?5start?5an?5al@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_03NIFPGLBG@ALL?$AA@']
assume ['cs:_rdata']
public ['??_C@_00CNPNBAHC@?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_chomp		proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0DCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_DC]']
mov ['ecx,', '37h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_25CC87']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_25CC51']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_25CC51']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '23h']
jnz ['short', 'loc_25CC59']
mov ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_25CC87']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['esi,', 'esp']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__isspace']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_25CC7C']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_25CC26']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
cmp ['eax,', 'ecx']
jbe ['short', 'loc_25CCA6']
mov ['[ebp+var_DC],', '1']
jmp ['short', 'loc_25CCB0']
mov ['[ebp+var_DC],', '0']
cmp ['[ebp+var_DC],', '0']
jz ['short', 'loc_25CCC5']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '[ebp+arg_0]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0DCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_parseLine	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
xor ['eax,', 'eax']
mov ['[ebp+var_8],', 'ax']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jnz ['short', 'loc_25CD18']
jmp ['loc_25D0DC']
mov ['ax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_25CD5F']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['esi,', 'esp']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__isspace']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_25CD5F']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
jmp ['short', 'loc_25CD20']
mov ['ax,', '[ebp+var_8]']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_14]']
sub ['eax,', 'ecx']
mov ['[ebp+var_2C],', 'ax']
movzx ['eax,', '[ebp+var_2C]']
push ['eax']
movzx ['ecx,', '[ebp+var_14]']
add ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '_stringBlock']
call ['_allocString']
add ['esp,', '0Ch']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_addConverter']
add ['esp,', '4']
mov ['[ebp+var_38],', 'ax']
mov ['ax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'ax']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_25CDE9']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['esi,', 'esp']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__isspace']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_25CDE9']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
jmp ['short', 'loc_25CDAA']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jnz ['short', 'loc_25CDFD']
jmp ['loc_25D0DC']
mov ['ax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_25CE54']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '7Bh']
jz ['short', 'loc_25CE54']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['esi,', 'esp']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__isspace']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_25CE54']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
jmp ['short', 'loc_25CE05']
mov ['ax,', '[ebp+var_8]']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_14]']
sub ['eax,', 'ecx']
mov ['[ebp+var_2C],', 'ax']
movzx ['eax,', '[ebp+var_14]']
test ['eax,', 'eax']
jnz ['short', 'loc_25CE8F']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+Str],', 'eax']
push ['1']
movzx ['eax,', '[ebp+var_38]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_addAlias']
add ['esp,', '10h']
jmp ['short', 'loc_25CEC1']
movzx ['eax,', '[ebp+var_2C]']
push ['eax']
movzx ['ecx,', '[ebp+var_14]']
add ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '_stringBlock']
call ['_allocString']
add ['esp,', '0Ch']
mov ['[ebp+Str],', 'eax']
push ['0']
movzx ['eax,', '[ebp+var_38]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_addAlias']
add ['esp,', '10h']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_addToKnownAliases']
add ['esp,', '4']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_25CF0C']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['esi,', 'esp']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__isspace']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_25CF0C']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
jmp ['short', 'loc_25CECD']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '7Bh']
jnz ['loc_25D0AF']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
mov ['ax,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_25CF83']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '7Dh']
jz ['short', 'loc_25CF83']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['esi,', 'esp']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__isspace']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_25CF83']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
jmp ['short', 'loc_25CF34']
mov ['ax,', '[ebp+var_8]']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_14]']
movzx ['ecx,', '[ebp+var_20]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_25CFE2']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_14]']
sub ['eax,', 'ecx']
push ['eax']
movzx ['edx,', '[ebp+var_14]']
add ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_getTagNumber']
add ['esp,', '8']
mov ['[ebp+var_5C],', 'ax']
movzx ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax-1]']
cmp ['edx,', '2Ah']
setz ['al']
movzx ['ecx,', 'al']
push ['ecx']
movzx ['edx,', '[ebp+var_38]']
push ['edx']
movzx ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_addAlias']
add ['esp,', '10h']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_25D021']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['esi,', 'esp']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__isspace']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_25D021']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
jmp ['short', 'loc_25CFE2']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_25D044']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '7Dh']
jnz ['loc_25CF2C']
movzx ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '7Dh']
jnz ['short', 'loc_25D062']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
jmp ['short', 'loc_25D0AD']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0BO@BMDOLGFL@?$CFs?3?$CFd?3?5Unterminated?5tag?5list?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', 'byte_10109']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_25D0D7']
movzx ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'ds:word_2443C[eax*8]']
test ['ecx,', 'ecx']
setz ['dl']
movzx ['eax,', 'dl']
push ['eax']
movzx ['ecx,', '[ebp+var_38]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_addAlias']
add ['esp,', '10h']
jmp ['loc_25CDAA']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0BO@BMDOLGFL@?$CFs?3?$CFd?3?5Unterminated?5tag?5list?6?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_getTagNumber	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F4]']
mov ['ecx,', '3Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jle ['short', 'loc_25D152']
movzx ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+Str1]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx-1]']
xor ['ecx,', 'ecx']
cmp ['eax,', '2Ah']
setz ['cl']
mov ['[ebp+var_F4],', 'ecx']
jmp ['short', 'loc_25D15C']
mov ['[ebp+var_F4],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_F4]']
mov ['[ebp+var_1D],', 'dl']
movzx ['eax,', 'ds:_tagCount']
cmp ['eax,', '3Fh']
jl ['short', 'loc_25D1B9']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0BG@JGEFIOIB@?$CFs?3?$CFd?3?5too?5many?5tags?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Fh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_25D1CD']
mov ['ax,', '[ebp+arg_4]']
sub ['ax,', '1']
mov ['[ebp+arg_4],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_14],', 'ax']
jmp ['short', 'loc_25D1E1']
mov ['ax,', '[ebp+var_14]']
add ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'ds:_tagCount']
cmp ['eax,', 'ecx']
jge ['short', 'loc_25D243']
movzx ['eax,', '[ebp+var_14]']
imul ['eax,', '7FFCh']
movzx ['ecx,', 'ds:_tags[eax]']
lea ['edx,', '_tagStore[ecx*2]']
mov ['[ebp+Str],', 'edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_25D241']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_uprv_strnicmp_56']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_25D241']
mov ['ax,', '[ebp+var_14]']
jmp ['loc_25D3A7']
jmp ['short', 'loc_25D1D5']
movzx ['eax,', 'ds:_tagCount']
cmp ['eax,', '3Fh']
jl ['short', 'loc_25D297']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0BN@LPAONBGN@?$CFs?3?$CFd?3?5error?3?5too?5many?5tags?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Fh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str1]']
push ['ecx']
push ['offset', '_tagBlock']
call ['_allocString']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
movsx ['eax,', 'ds:_standardTagsUsed']
test ['eax,', 'eax']
jz ['short', 'loc_25D30A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', 'ds:_lineNum']
push ['ecx']
mov ['edx,', 'dword', 'ptr', 'ds:_path']
push ['edx']
push ['offset', '??_C@_0EN@IJIEILCJ@?$CFs?3?$CFd?3?5error?3?5Tag?5?$CC?$CFs?$CC?5is?5not?5de@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['1']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_25D363']
movzx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jle ['short', 'loc_25D363']
push ['offset', '??_C@_03NIFPGLBG@ALL?$AA@']
mov ['eax,', '[ebp+Str1]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_25D363']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', 'ds:_lineNum']
push ['ecx']
mov ['edx,', 'dword', 'ptr', 'ds:_path']
push ['edx']
push ['offset', '??_C@_0HK@IFEFCAGL@?$CFs?3?$CFd?3?5warning?3?5Tag?5?$CC?$CFs?$CC?5was?5add@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', 'offset', '_tagStore']
sar ['eax,', '1']
movzx ['ecx,', 'ds:_tagCount']
imul ['ecx,', '7FFCh']
mov ['ds:_tags[ecx],', 'ax']
mov ['ax,', 'ds:_tagCount']
mov ['word', 'ptr', '[ebp+var_F4+2],', 'ax']
mov ['cx,', 'ds:_tagCount']
add ['cx,', '1']
mov ['ds:_tagCount,', 'cx']
mov ['ax,', 'word', 'ptr', '[ebp+var_F4+2]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0F4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0HK@IFEFCAGL@?$CFs?3?$CFd?3?5warning?3?5Tag?5?$CC?$CFs?$CC?5was?5add@']
db ["'se", 'it', 'was', 'not', 'declared', 'at', 'beginning', 'of', 'the', 'alias', "table.',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0EN@IJIEILCJ@?$CFs?3?$CFd?3?5error?3?5Tag?5?$CC?$CFs?$CC?5is?5not?5de@']
db ["'ias", "table.',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BN@LPAONBGN@?$CFs?3?$CFd?3?5error?3?5too?5many?5tags?6?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BG@JGEFIOIB@?$CFs?3?$CFd?3?5too?5many?5tags?6?$AA@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_addOfficialTaggedStandards proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', 'ds:_tagCount']
cmp ['eax,', '2']
jle ['short', 'loc_25D532']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0CL@GDJBOBOF@?$CFs?3?$CFd?3?5error?3?5official?5tags?5alre@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Fh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7Bh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_25D59B']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0CK@DOGPHJHD@?$CFs?3?$CFd?3?5error?3?5Missing?5start?5of?5t@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['9']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['esi,', 'esp']
push ['7Dh']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_25D60D']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0CI@OIJCJKO@?$CFs?3?$CFd?3?5error?3?5Missing?5end?5of?5tag@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['9']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['esi,', 'esp']
push ['offset', '?WHITESPACE@?1??addOfficialTaggedStandards@@9@9']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strtok']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_25D69B']
push ['0FFFFFFFFh']
mov ['eax,', '[ebp+var_20]']
push ['eax']
push ['offset', '_tagBlock']
call ['_allocString']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', 'offset', '_tagStore']
sar ['eax,', '1']
movzx ['ecx,', 'ds:_tagCount']
imul ['ecx,', '7FFCh']
mov ['ds:_tags[ecx],', 'ax']
mov ['dx,', 'ds:_tagCount']
add ['dx,', '1']
mov ['ds:_tagCount,', 'dx']
mov ['esi,', 'esp']
push ['offset', '?WHITESPACE@?1??addOfficialTaggedStandards@@9@9']
push ['0']
call ['dword', 'ptr', 'ds:__imp__strtok']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_25D631']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CI@OIJCJKO@?$CFs?3?$CFd?3?5error?3?5Missing?5end?5of?5tag@']
assume ['cs:_rdata']
public ['??_C@_0CK@DOGPHJHD@?$CFs?3?$CFd?3?5error?3?5Missing?5start?5of?5t@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CL@GDJBOBOF@?$CFs?3?$CFd?3?5error?3?5official?5tags?5alre@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_addToKnownAliases proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', 'ds:_knownAliasesCount']
cmp ['eax,', '0FFFFh']
jl ['short', 'loc_25D7A4']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0DN@NPGNEHFG@?$CFs?3?$CFd?3?5warning?3?5Too?5many?5aliases@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Fh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', 'offset', '_stringStore']
sar ['eax,', '1']
mov ['[ebp+var_C4],', 'eax']
movzx ['ecx,', 'ds:_knownAliasesCount']
mov ['dx,', 'word', 'ptr', '[ebp+var_C4]']
mov ['ds:_knownAliases[ecx*2],', 'dx']
mov ['ax,', 'ds:_knownAliasesCount']
add ['ax,', '1']
mov ['ds:_knownAliasesCount,', 'ax']
mov ['ax,', 'word', 'ptr', '[ebp+var_C4]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DN@NPGNEHFG@?$CFs?3?$CFd?3?5warning?3?5Too?5many?5aliases@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_addAlias	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_1D],', '0']
movzx ['eax,', '[ebp+arg_4]']
cmp ['eax,', '3Fh']
jl ['short', 'loc_25D8AB']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0CG@NAPMOKLF@?$CFs?3?$CFd?3?5error?3?5too?5many?5standard?5@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Fh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+arg_8]']
cmp ['eax,', '0FFFh']
jl ['short', 'loc_25D8FE']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0CI@GPNAFMAH@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Fh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+arg_4]']
imul ['eax,', '7FFCh']
movzx ['ecx,', '[ebp+arg_8]']
lea ['edx,', 'word_2443C[eax+ecx*8]']
mov ['[ebp+var_2C],', 'edx']
mov ['esi,', 'esp']
push ['7Dh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_25D969']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0CB@BLKOHOMF@?$CFs?3?$CFd?3?5error?3?5unmatched?5?$HN?5found?6@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
add ['ecx,', '1']
cmp ['ecx,', '1Fh']
jl ['short', 'loc_25D9D8']
movzx ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', 'ds:_lineNum']
push ['ecx']
mov ['edx,', 'dword', 'ptr', 'ds:_path']
push ['edx']
push ['offset', '??_C@_0DO@KLALHEPH@?$CFs?3?$CFd?3?5error?3?5too?5many?5aliases?5f@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '18h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Fh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+arg_4]']
cmp ['eax,', '1']
jnz ['loc_25DAA3']
movzx ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
cmp ['edx,', '[ebp+Str]']
jz ['loc_25DAA3']
mov ['esi,', 'esp']
push ['2Ch']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_25DA52']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', 'ds:_lineNum']
push ['ecx']
push ['offset', '??_C@_0HF@JCIPJLJA@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['3Dh']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_25DAA3']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', 'ds:_lineNum']
push ['ecx']
push ['offset', '??_C@_0HG@DEHPCLGO@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+arg_4]']
cmp ['eax,', '1']
jz ['loc_25DC8D']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_25DAC2']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
movzx ['eax,', 'ds:_converterCount']
cmp ['[ebp+var_8],', 'eax']
jnb ['loc_25DC8D']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_25DAE4']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', '[ebp+arg_4]']
imul ['eax,', '7FFCh']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'ds:word_2443C[eax+ecx*8]']
cmp ['[ebp+var_14],', 'edx']
jnb ['loc_25DC88']
movzx ['eax,', '[ebp+arg_4]']
imul ['eax,', '7FFCh']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', 'ds:dword_24440[eax+ecx*8]']
mov ['eax,', '[ebp+var_14]']
mov ['cx,', '[edx+eax*2]']
mov ['[ebp+var_38],', 'cx']
movzx ['eax,', '[ebp+var_38]']
test ['eax,', 'eax']
jz ['loc_25DC83']
movzx ['eax,', '[ebp+var_38]']
lea ['ecx,', '_stringStore[eax*2]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_25DC83']
movzx ['eax,', '[ebp+arg_8]']
cmp ['[ebp+var_8],', 'eax']
jnz ['loc_25DBFA']
movsx ['eax,', 'ds:_verbose']
test ['eax,', 'eax']
jnz ['short', 'loc_25DB81']
movzx ['eax,', '[ebp+var_38]']
lea ['ecx,', '_stringStore[eax*2]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_25DBF5']
movzx ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
mov ['esi,', 'esp']
push ['edx']
movzx ['eax,', '[ebp+arg_4]']
imul ['eax,', '7FFCh']
movzx ['ecx,', 'ds:_tags[eax]']
lea ['edx,', '_tagStore[ecx*2]']
push ['edx']
movzx ['eax,', '[ebp+var_38]']
lea ['ecx,', '_stringStore[eax*2]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0FE@BFCOODGC@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '20h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_25DC81']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
mov ['esi,', 'esp']
push ['edx']
movzx ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
push ['edx']
movzx ['eax,', '[ebp+arg_4]']
imul ['eax,', '7FFCh']
movzx ['ecx,', 'ds:_tags[eax]']
lea ['edx,', '_tagStore[ecx*2]']
push ['edx']
movzx ['eax,', '[ebp+var_38]']
lea ['ecx,', '_stringStore[eax*2]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0GN@KMHDEICL@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '24h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_25DC88']
jmp ['loc_25DADB']
jmp ['loc_25DAB9']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jg ['short', 'loc_25DCAB']
mov ['eax,', '[ebp+var_2C]']
mov ['cx,', '[eax]']
add ['cx,', '1']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx],', 'cx']
mov ['[ebp+var_1D],', '1']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
lea ['edx,', '[ecx+ecx+2]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_uprv_realloc_56']
add ['esp,', '8']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+4],', 'eax']
movsx ['eax,', '[ebp+var_1D]']
test ['eax,', 'eax']
jz ['short', 'loc_25DCDE']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+4]']
xor ['edx,', 'edx']
mov ['[ecx],', 'dx']
movsx ['eax,', '[ebp+arg_C]']
test ['eax,', 'eax']
jz ['loc_25DD9A']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['loc_25DD85']
movzx ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
mov ['esi,', 'esp']
push ['edx']
movzx ['eax,', '[ebp+arg_4]']
imul ['eax,', '7FFCh']
movzx ['ecx,', 'ds:_tags[eax]']
lea ['edx,', '_tagStore[ecx*2]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+4]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
lea ['eax,', '_stringStore[edx*2]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', 'ds:_lineNum']
push ['edx']
mov ['eax,', 'dword', 'ptr', 'ds:_path']
push ['eax']
push ['offset', '??_C@_0GF@BIKCGJBN@?$CFs?3?$CFd?3?5error?3?5Alias?5?$CFs?5and?5?$CFs?5ca@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '20h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['9']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+Str]']
sub ['eax,', 'offset', '_stringStore']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+4]']
mov ['[edx],', 'ax']
jmp ['short', 'loc_25DDC4']
mov ['eax,', '[ebp+Str]']
sub ['eax,', 'offset', '_stringStore']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['ecx,', '[ebp+var_2C]']
mov ['ecx,', '[ecx+4]']
mov ['[ecx+edx*2],', 'ax']
mov ['edx,', '[ebp+var_2C]']
mov ['ax,', '[edx]']
add ['ax,', '1']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'ax']
movzx ['eax,', '[ebp+arg_8]']
mov ['cx,', 'ds:word_2003A[eax*4]']
add ['cx,', '1']
movzx ['edx,', '[ebp+arg_8]']
mov ['ds:word_2003A[edx*4],', 'cx']
movzx ['eax,', '[ebp+arg_4]']
imul ['eax,', '7FFCh']
mov ['cx,', 'ds:word_2443A[eax]']
add ['cx,', '1']
movzx ['edx,', '[ebp+arg_4]']
imul ['edx,', '7FFCh']
mov ['ds:word_2443A[edx],', 'cx']
mov ['eax,', '[ebp+var_2C]']
mov ['ax,', '[eax]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_rdata']
public ['??_C@_0GF@BIKCGJBN@?$CFs?3?$CFd?3?5error?3?5Alias?5?$CFs?5and?5?$CFs?5ca@']
db ["'r", 'standard', 'tag', '%s', 'and', 'converter', "%s',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0GN@KMHDEICL@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@']
db ["'g", '%s', 'between', 'converter', '%s', 'and', 'converter', "%s',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0FE@BFCOODGC@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@']
db ["'", 'and', 'converter', "%s',0Ah,0"]
assume ['cs:_rdata']
public ['??_C@_0HG@DEHPCLGO@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@']
db ["'", 'run-time', 'and', 'do', 'not', 'need', 'to', 'be', 'in', 'the', 'alias', "table.',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0HF@JCIPJLJA@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@']
db ["'run-time", 'and', 'do', 'not', 'need', 'to', 'be', 'in', 'the', 'alias', "table.',0Ah,0"]
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DO@KLALHEPH@?$CFs?3?$CFd?3?5error?3?5too?5many?5aliases?5f@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CB@BLKOHOMF@?$CFs?3?$CFd?3?5error?3?5unmatched?5?$HN?5found?6@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CI@GPNAFMAH@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@']
assume ['cs:_rdata']
public ['??_C@_0CG@NAPMOKLF@?$CFs?3?$CFd?3?5error?3?5too?5many?5standard?5@']
align ['10h']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_addConverter	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D0h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D0]']
mov ['ecx,', '34h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
movzx ['eax,', 'ds:_converterCount']
cmp ['eax,', '0FFFh']
jl ['short', 'loc_25E164']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0CD@GMGFFHOI@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Fh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_25E176']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
movzx ['eax,', 'ds:_converterCount']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_25E1F9']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_25E1F4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', 'ds:_lineNum']
push ['ecx']
mov ['edx,', 'dword', 'ptr', 'ds:_path']
push ['edx']
push ['offset', '??_C@_0CN@HFJPBAMD@?$CFs?3?$CFd?3?5error?3?5duplicate?5converte@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['9']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_25E1F9']
jmp ['loc_25E16D']
mov ['eax,', '[ebp+arg_0]']
sub ['eax,', 'offset', '_stringStore']
sar ['eax,', '1']
movzx ['ecx,', 'ds:_converterCount']
mov ['ds:_converters[ecx*4],', 'ax']
movzx ['eax,', 'ds:_converterCount']
xor ['ecx,', 'ecx']
mov ['ds:word_2003A[eax*4],', 'cx']
mov ['ax,', 'ds:_converterCount']
mov ['[ebp+var_CE],', 'ax']
mov ['cx,', 'ds:_converterCount']
add ['cx,', '1']
mov ['ds:_converterCount,', 'cx']
mov ['ax,', '[ebp+var_CE]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CN@HFJPBAMD@?$CFs?3?$CFd?3?5error?3?5duplicate?5converte@']
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0CD@GMGFFHOI@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_writeAliasTable proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '120h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_120]']
mov ['ecx,', '48h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'ds:Size']
shr ['eax,', '1']
mov ['[ebp+var_2C],', 'ax']
movzx ['eax,', 'ds:_tagCount']
movzx ['ecx,', 'ds:_converterCount']
imul ['eax,', 'ecx']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_38],', 'eax']
movzx ['eax,', 'ds:_knownAliasesCount']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_44],', 'eax']
movzx ['eax,', 'ds:_knownAliasesCount']
shl ['eax,', '1']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
mov ['esi,', 'esp']
push ['offset', '_compareAliases']
push ['2']
movzx ['eax,', 'ds:_knownAliasesCount']
push ['eax']
push ['offset', '_knownAliases']
call ['dword', 'ptr', 'ds:__imp__qsort']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+var_44]']
push ['edx']
call ['_resolveAliases']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
xor ['eax,', 'eax']
mov ['ds:_aliasListsSize,', 'ax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_25E37E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
movzx ['eax,', 'ds:_tagCount']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_25E3C5']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_25E39C']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', 'ds:_converterCount']
cmp ['[ebp+var_14],', 'eax']
jnb ['short', 'loc_25E3C3']
movzx ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_createOneAliasList']
add ['esp,', '10h']
jmp ['short', 'loc_25E393']
jmp ['short', 'loc_25E375']
movzx ['eax,', 'ds:_tableOptions']
test ['eax,', 'eax']
jnz ['short', 'loc_25E3E0']
push ['8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_write32']
add ['esp,', '8']
jmp ['short', 'loc_25E3EE']
push ['9']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_write32']
add ['esp,', '8']
movzx ['eax,', 'ds:_converterCount']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write32']
add ['esp,', '8']
movzx ['eax,', 'ds:_tagCount']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write32']
add ['esp,', '8']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write32']
add ['esp,', '8']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write32']
add ['esp,', '8']
movzx ['eax,', 'ds:_tagCount']
movzx ['ecx,', 'ds:_converterCount']
imul ['eax,', 'ecx']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_write32']
add ['esp,', '8']
movzx ['eax,', 'ds:_aliasListsSize']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write32']
add ['esp,', '8']
push ['2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_write32']
add ['esp,', '8']
mov ['eax,', 'ds:Size']
add ['eax,', 'ds:dword_25BF6C']
shr ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write32']
add ['esp,', '8']
movzx ['eax,', 'ds:_tableOptions']
test ['eax,', 'eax']
jz ['short', 'loc_25E4B8']
mov ['eax,', 'ds:Size']
add ['eax,', 'ds:dword_25BF6C']
shr ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write32']
add ['esp,', '8']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_25E4CA']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
movzx ['eax,', 'ds:_converterCount']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_25E4F6']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'ds:_converters[eax*4]']
movzx ['edx,', '[ebp+var_2C]']
add ['ecx,', 'edx']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_write16']
add ['esp,', '8']
jmp ['short', 'loc_25E4C1']
mov ['[ebp+var_8],', '2']
jmp ['short', 'loc_25E508']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
movzx ['eax,', 'ds:_tagCount']
cmp ['[ebp+var_8],', 'eax']
jnb ['short', 'loc_25E533']
mov ['eax,', '[ebp+var_8]']
imul ['eax,', '7FFCh']
movzx ['ecx,', 'ds:_tags[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_write16']
add ['esp,', '8']
jmp ['short', 'loc_25E4FF']
movzx ['eax,', 'ds:_tags']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write16']
add ['esp,', '8']
movzx ['eax,', 'ds:word_2C434']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_write16']
add ['esp,', '8']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_20]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
movzx ['eax,', 'ds:_tagCount']
sub ['eax,', '2']
movzx ['ecx,', 'ds:_converterCount']
imul ['eax,', 'ecx']
shl ['eax,', '1']
push ['eax']
movzx ['edx,', 'ds:_converterCount']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_38]']
lea ['ecx,', '[eax+edx*2]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
movzx ['eax,', 'ds:_converterCount']
shl ['eax,', '1']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
push ['0DEADh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_write16']
add ['esp,', '8']
movzx ['eax,', 'ds:_aliasListsSize']
shl ['eax,', '1']
push ['eax']
push ['offset', '_aliasLists']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
push ['4']
push ['offset', '_tableOptions']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_udata_writeBlock']
add ['esp,', '0Ch']
mov ['eax,', 'ds:Size']
push ['eax']
mov ['ecx,', 'ds:_tagBlock']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_writeString']
add ['esp,', '0Ch']
mov ['eax,', 'ds:dword_25BF6C']
push ['eax']
mov ['ecx,', 'ds:_stringBlock']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_writeString']
add ['esp,', '0Ch']
movzx ['eax,', 'ds:_tableOptions']
test ['eax,', 'eax']
jz ['short', 'loc_25E6C9']
mov ['eax,', 'ds:Size']
add ['eax,', 'ds:dword_25BF6C']
push ['eax']
call ['_uprv_malloc_56']
add ['esp,', '4']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', 'ds:Size']
push ['eax']
mov ['ecx,', 'ds:_tagBlock']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_createNormalizedAliasStrings']
add ['esp,', '0Ch']
mov ['eax,', 'ds:dword_25BF6C']
push ['eax']
mov ['ecx,', 'ds:_stringBlock']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', 'ds:Size']
push ['edx']
call ['_createNormalizedAliasStrings']
add ['esp,', '0Ch']
mov ['eax,', 'ds:Size']
add ['eax,', 'ds:dword_25BF6C']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_udata_writeString']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_44]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_uprv_free_56']
add ['esp,', '4']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '120h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_resolveAliases	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '114h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_114]']
mov ['ecx,', '45h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
lea ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
movzx ['edx,', 'ds:_knownAliases']
push ['edx']
call ['_resolveAliasToConverter']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', '[ebp+var_38]']
mov ['[ecx+eax*2],', 'dx']
mov ['ax,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'ax']
movzx ['eax,', 'ds:_knownAliases']
movzx ['ecx,', '[ebp+arg_8]']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+edx*2],', 'ax']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
movzx ['eax,', 'ds:_knownAliases']
lea ['ecx,', '_stringStore[eax*2]']
mov ['[ebp+var_50],', 'ecx']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_25E79A']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
movzx ['eax,', 'ds:_knownAliasesCount']
cmp ['[ebp+var_14],', 'eax']
jnb ['loc_25EA22']
lea ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'ds:_knownAliases[edx*2]']
push ['eax']
call ['_resolveAliasToConverter']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'ds:_knownAliases[eax*2]']
lea ['edx,', '_stringStore[ecx*2]']
push ['edx']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_25E97E']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_2C]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_25E802']
movzx ['eax,', '[ebp+var_20]']
cmp ['eax,', '2']
jge ['short', 'loc_25E80E']
movzx ['eax,', '[ebp+var_2C]']
test ['eax,', 'eax']
jnz ['loc_25E8CD']
mov ['ax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'ax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', '[ebp+var_38]']
mov ['[ecx+eax*2-2],', 'dx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'ds:_knownAliases[eax*2]']
movzx ['edx,', '[ebp+arg_8]']
add ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+eax*2-2],', 'cx']
movsx ['eax,', 'ds:_verbose']
test ['eax,', 'eax']
jz ['short', 'loc_25E8C8']
movzx ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'ds:_knownAliases[ecx*2]']
lea ['eax,', '_stringStore[edx*2]']
push ['eax']
push ['offset', '??_C@_0BN@OFMNIJOK@using?5?$CFs?5instead?5of?5?$CFs?5?9?$DO?5?$CFs?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_44]']
movzx ['ecx,', '[ebp+var_38]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_25E8B1']
mov ['esi,', 'esp']
push ['offset', '??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
call ['dword', 'ptr', 'ds:__imp__puts']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_25E954']
movsx ['eax,', 'ds:_verbose']
test ['eax,', 'eax']
jz ['short', 'loc_25E954']
movzx ['eax,', '[ebp+var_44]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'ds:_knownAliases[ecx*2]']
lea ['eax,', '_stringStore[edx*2]']
push ['eax']
push ['offset', '??_C@_0BJ@EAAIBDN@folding?5?$CFs?5into?5?$CFs?5?9?$DO?5?$CFs?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_44]']
movzx ['ecx,', '[ebp+var_38]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_25E93D']
mov ['esi,', 'esp']
push ['offset', '??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@']
call ['dword', 'ptr', 'ds:__imp__printf']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
call ['dword', 'ptr', 'ds:__imp__puts']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', '[ebp+var_44]']
movzx ['ecx,', '[ebp+var_38]']
cmp ['eax,', 'ecx']
jz ['short', 'loc_25E97C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
or ['edx,', '8000h']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+eax*2-2],', 'dx']
jmp ['short', 'loc_25E9D5']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', '[ebp+var_38]']
mov ['[ecx+eax*2],', 'dx']
mov ['ax,', '[ebp+var_38]']
mov ['[ebp+var_44],', 'ax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'ds:_knownAliases[eax*2]']
movzx ['edx,', '[ebp+arg_8]']
add ['ecx,', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+eax*2],', 'cx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'ds:_knownAliases[eax*2]']
lea ['edx,', '_stringStore[ecx*2]']
mov ['[ebp+var_50],', 'edx']
mov ['ax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'ax']
mov ['esi,', 'esp']
push ['2Ch']
movzx ['eax,', '[ebp+var_38]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strchr']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_25EA1D']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*2-2]']
or ['edx,', '4000h']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+eax*2-2],', 'dx']
jmp ['loc_25E791']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '114h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN21']
dd ['offset', '$LN18']
dd ['0FFFFFFD4h,', '2']
dd ['offset', '$LN19']
dd ['0FFFFFFC8h,', '2']
dd ['offset', '$LN20']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BJ@EAAIBDN@folding?5?$CFs?5into?5?$CFs?5?9?$DO?5?$CFs?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BN@OFMNIJOK@using?5?$CFs?5instead?5of?5?$CFs?5?9?$DO?5?$CFs?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_resolveAliasToConverter proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0FCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_FC]']
mov ['ecx,', '3Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '2']
mov ['[ebp+var_8],', 'ax']
jmp ['short', 'loc_25EB21']
mov ['ax,', '[ebp+var_8]']
add ['ax,', '1']
mov ['[ebp+var_8],', 'ax']
movzx ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'ds:_tagCount']
cmp ['eax,', 'ecx']
jge ['loc_25EBDB']
xor ['eax,', 'eax']
mov ['[ebp+var_14],', 'ax']
jmp ['short', 'loc_25EB48']
mov ['ax,', '[ebp+var_14]']
add ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'ds:_converterCount']
cmp ['eax,', 'ecx']
jge ['short', 'loc_25EBD6']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
jmp ['short', 'loc_25EB6B']
mov ['ax,', '[ebp+var_20]']
add ['ax,', '1']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_8]']
imul ['ecx,', '7FFCh']
movzx ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'ds:word_2443C[ecx+edx*8]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_25EBD1']
movzx ['eax,', '[ebp+var_8]']
imul ['eax,', '7FFCh']
movzx ['ecx,', '[ebp+var_14]']
movzx ['edx,', '[ebp+var_20]']
mov ['eax,', 'ds:dword_24440[eax+ecx*8]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_2C],', 'cx']
movzx ['eax,', '[ebp+var_2C]']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_25EBCF']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[ebp+var_8]']
mov ['[eax],', 'cx']
mov ['eax,', '[ebp+arg_8]']
mov ['cx,', '[ebp+var_14]']
mov ['[eax],', 'cx']
jmp ['loc_25ECD3']
jmp ['short', 'loc_25EB5F']
jmp ['loc_25EB3C']
jmp ['loc_25EB15']
xor ['eax,', 'eax']
mov ['[ebp+var_8],', 'ax']
xor ['eax,', 'eax']
mov ['[ebp+var_14],', 'ax']
jmp ['short', 'loc_25EBF5']
mov ['ax,', '[ebp+var_14]']
add ['ax,', '1']
mov ['[ebp+var_14],', 'ax']
movzx ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'ds:_converterCount']
cmp ['eax,', 'ecx']
jge ['short', 'loc_25EC80']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
jmp ['short', 'loc_25EC18']
mov ['ax,', '[ebp+var_20]']
add ['ax,', '1']
mov ['[ebp+var_20],', 'ax']
movzx ['eax,', '[ebp+var_20]']
movzx ['ecx,', '[ebp+var_8]']
imul ['ecx,', '7FFCh']
movzx ['edx,', '[ebp+var_14]']
movzx ['ecx,', 'ds:word_2443C[ecx+edx*8]']
cmp ['eax,', 'ecx']
jge ['short', 'loc_25EC7B']
movzx ['eax,', '[ebp+var_8]']
imul ['eax,', '7FFCh']
movzx ['ecx,', '[ebp+var_14]']
movzx ['edx,', '[ebp+var_20]']
mov ['eax,', 'ds:dword_24440[eax+ecx*8]']
mov ['cx,', '[eax+edx*2]']
mov ['[ebp+var_38],', 'cx']
movzx ['eax,', '[ebp+var_38]']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_25EC79']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[ebp+var_8]']
mov ['[eax],', 'cx']
mov ['eax,', '[ebp+arg_8]']
mov ['cx,', '[ebp+var_14]']
mov ['[eax],', 'cx']
jmp ['short', 'loc_25ECD3']
jmp ['short', 'loc_25EC0C']
jmp ['loc_25EBE9']
mov ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'ax']
mov ['eax,', '0FFFFh']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx],', 'ax']
movzx ['eax,', '[ebp+arg_0]']
lea ['ecx,', '_stringStore[eax*2]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', 'dword', 'ptr', 'ds:_path']
push ['edx']
push ['offset', '??_C@_0CB@JJJIOJDP@?$CFs?3?5warning?3?5alias?5?$CFs?5not?5found?6@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CB@JJJIOJDP@?$CFs?3?5warning?3?5alias?5?$CFs?5not?5found?6@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_createOneAliasList proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '7FFCh']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', 'word_2443C[eax+ecx*8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_25ED66']
movzx ['eax,', 'ds:_converterCount']
imul ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+eax*2],', 'cx']
jmp ['loc_25EEDD']
movzx ['eax,', 'ds:_aliasListsSize']
mov ['ecx,', '[ebp+var_14]']
mov ['dx,', '[ecx]']
mov ['ds:_aliasLists[eax*2],', 'dx']
mov ['ax,', 'ds:_aliasListsSize']
add ['ax,', '1']
mov ['ds:_aliasListsSize,', 'ax']
movzx ['eax,', 'ds:_converterCount']
imul ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['dx,', 'ds:_aliasListsSize']
mov ['[ecx+eax*2],', 'dx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_25EDB9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['[ebp+var_8],', 'ecx']
jnb ['loc_25EEDD']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
test ['eax,', 'eax']
jz ['short', 'loc_25EDF2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
movzx ['ecx,', '[ebp+arg_C]']
add ['eax,', 'ecx']
mov ['[ebp+var_20],', 'ax']
jmp ['short', 'loc_25EE64']
xor ['eax,', 'eax']
mov ['[ebp+var_20],', 'ax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_25EE64']
movsx ['eax,', 'ds:_quiet']
test ['eax,', 'eax']
jnz ['short', 'loc_25EE64']
mov ['eax,', '[ebp+arg_8]']
movzx ['ecx,', 'ds:_converters[eax*4]']
lea ['edx,', '_stringStore[ecx*2]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '7FFCh']
movzx ['ecx,', 'ds:_tags[eax]']
lea ['edx,', '_tagStore[ecx*2]']
push ['edx']
mov ['eax,', 'dword', 'ptr', 'ds:_path']
push ['eax']
push ['offset', '??_C@_0DK@KFMHEEIA@?$CFs?3?5warning?3?5tag?5?$CFs?5does?5not?5hav@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
movzx ['eax,', 'ds:_aliasListsSize']
mov ['cx,', '[ebp+var_20]']
mov ['ds:_aliasLists[eax*2],', 'cx']
mov ['dx,', 'ds:_aliasListsSize']
add ['dx,', '1']
mov ['ds:_aliasListsSize,', 'dx']
movzx ['eax,', 'ds:_aliasListsSize']
cmp ['eax,', '0FFFFh']
jl ['short', 'loc_25EED8']
mov ['esi,', 'esp']
mov ['eax,', 'dword', 'ptr', 'ds:_path']
push ['eax']
push ['offset', '??_C@_0CB@FBNGFKLH@?$CFs?3?5error?3?5Too?5many?5alias?5lists?6@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Fh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_25EDB0']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
public ['??_C@_0CB@FBNGFKLH@?$CFs?3?5error?3?5Too?5many?5alias?5lists?6@']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0DK@KFMHEEIA@?$CFs?3?5warning?3?5tag?5?$CFs?5does?5not?5hav@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_createNormalizedAliasStrings proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0E4h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_E4]']
mov ['ecx,', '39h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['1']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+Size]']
jge ['short', 'loc_25F014']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_25EFF7']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_ucnv_io_stripASCIIForCompare_56']
add ['esp,', '8']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jle ['short', 'loc_25EFF7']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_20]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Size]']
sub ['eax,', '[ebp+var_14]']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+Src],', 'eax']
jmp ['short', 'loc_25EF94']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0E4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_allocString	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0D8h']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_D8]']
mov ['ecx,', '36h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+Size],', '0']
jge ['short', 'loc_25F05B']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+Size]']
add ['eax,', '2']
and ['eax,', '0FFFFFFFEh']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
jb ['short', 'loc_25F0C0']
mov ['esi,', 'esp']
mov ['eax,', 'ds:_lineNum']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:_path']
push ['ecx']
push ['offset', '??_C@_0BN@HBEIMHDJ@?$CFs?3?$CFd?3?5error?3?5out?5of?5memory?6?$AA@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['7']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
mov ['[ebp+Dst],', 'ecx']
push ['1']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_uprv_checkValidMemory']
add ['esp,', '8']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+Size]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+Size]']
and ['eax,', '1']
jnz ['short', 'loc_25F10B']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+Size]']
mov ['byte', 'ptr', '[eax+1],', '0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['_uprv_isInvariantString_56']
add ['esp,', '8']
movsx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_25F16F']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', 'ds:_lineNum']
push ['ecx']
mov ['edx,', 'dword', 'ptr', 'ds:_path']
push ['edx']
push ['offset', '??_C@_0EC@GIBIBDN@?$CFs?3?$CFd?3?5error?3?5the?5name?5?$CFs?5contai@']
mov ['edi,', 'esp']
call ['dword', 'ptr', 'ds:__imp____iob_func']
cmp ['edi,', 'esp']
call ['__RTC_CheckEsp']
add ['eax,', '40h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__fprintf']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0Dh']
call ['dword', 'ptr', 'ds:__imp__exit']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+Dst]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0D8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
assume ['cs:_rdata']
public ['??_C@_0EC@GIBIBDN@?$CFs?3?$CFd?3?5error?3?5the?5name?5?$CFs?5contai@']
db ['0']
align ['4']
assume ['cs:_rdata']
public ['??_C@_0BN@HBEIMHDJ@?$CFs?3?$CFd?3?5error?3?5out?5of?5memory?6?$AA@']
align ['4']
assume ['cs:_text']
assume ['es:nothing,', 'ss:nothing,', 'ds:_rdata,', 'fs:nothing,', 'gs:nothing']
endp
_compareAliases	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0CCh']
push ['ebx']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_CC]']
mov ['ecx,', '33h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
lea ['edx,', '_stringStore[ecx*2]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
lea ['edx,', '_stringStore[ecx*2]']
push ['edx']
call ['_ucnv_compareNames_56']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_25F273']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
lea ['edx,', '_stringStore[ecx*2]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
lea ['edx,', '_stringStore[ecx*2]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
sub ['esi,', 'eax']
mov ['eax,', 'esi']
jmp ['short', 'loc_25F276']
mov ['eax,', '[ebp+var_8]']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '0CCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
extrn ['_path:near']
extrn ['_uprv_free_56:near']
extrn ['_udata_finish:near']
extrn ['_u_errorName_56:near']
extrn ['_udata_create:near']
extrn ['_T_FileStream_close:near']
extrn ['__imp__exit:near']
extrn ['_T_FileStream_open:near']
extrn ['_memset:near']
extrn ['__imp__strchr:near']
extrn ['_strcpy:near']
extrn ['__imp__fprintf:near']
extrn ['__imp____iob_func:near']
extrn ['_u_parseArgs:near']
extrn ['_u_getDataDirectory_56:near']
extrn ['___security_cookie:near']
extrn ['@__security_check_cookie@4:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_Shutdown:near']
extrn ['__RTC_InitBase:near']
extrn ['__imp__isspace:near']
extrn ['_T_FileStream_readLine:near']
extrn ['__chkstk:near']
extrn ['_strcmp:near']
extrn ['_uprv_strnicmp_56:near']
extrn ['_strlen:near']
extrn ['__imp__strtok:near']
extrn ['_uprv_realloc_56:near']
extrn ['_ucnv_compareNames_56:near']
extrn ['_udata_writeString:near']
extrn ['_udata_writeBlock:near']
extrn ['_udata_write16:near']
extrn ['_udata_write32:near']
extrn ['__imp__qsort:near']
extrn ['_uprv_malloc_56:near']
extrn ['__imp__puts:near']
extrn ['__imp__printf:near']
extrn ['_ucnv_io_stripASCIIForCompare_56:near']
extrn ['_memcpy:near']
extrn ['_uprv_checkValidMemory:near']
extrn ['_uprv_isInvariantString_56:near']
end

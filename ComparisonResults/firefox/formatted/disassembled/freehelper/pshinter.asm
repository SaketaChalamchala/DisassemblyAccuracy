endp
_FT_MulFix_i386	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
imul ['edx']
mov ['ecx,', 'edx']
sar ['ecx,', '1Fh']
add ['ecx,', '8000h']
add ['eax,', 'ecx']
adc ['edx,', '0']
shr ['eax,', '10h']
shl ['edx,', '10h']
add ['eax,', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_psh_globals_funcs_init	proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', 'offset', '_psh_globals_new']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '_psh_globals_set_scale']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '_psh_globals_destroy']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_psh_globals_set_scale proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '0CCh']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+0C4h]']
jnz ['short', 'loc_44D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_C]']
cmp ['ecx,', '[eax+0C8h]']
jz ['short', 'loc_473']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+0C4h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+0C8h],', 'edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_psh_globals_scale_widths']
add ['esp,', '8']
mov ['ecx,', '0CCh']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+0C4h]']
jnz ['short', 'loc_4A1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[eax+0C8h]']
jz ['short', 'loc_4E0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+0C4h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_10]']
mov ['[ecx+0C8h],', 'edx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_psh_globals_scale_widths']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '19Ch']
push ['eax']
call ['_psh_blues_scale_zones']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_psh_blues_snap_stem proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+820h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_54F']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '20h']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_8],', '0']
jbe ['short', 'loc_5B8']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+81Ch]']
neg ['eax']
cmp ['[ebp+var_C],', 'eax']
jge ['short', 'loc_573']
jmp ['short', 'loc_5B8']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+81Ch]']
cmp ['[ebp+arg_4],', 'edx']
jg ['short', 'loc_5B6']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_59B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+818h]']
jg ['short', 'loc_5B4']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax]']
or ['ecx,', '1']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+4],', 'edx']
jmp ['short', 'loc_5B8']
jmp ['short', 'loc_53D']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '204h']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '5']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax-1Ch]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_5EF']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '20h']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_8],', '0']
jbe ['short', 'loc_658']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
sub ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+81Ch]']
neg ['edx']
cmp ['[ebp+var_C],', 'edx']
jge ['short', 'loc_613']
jmp ['short', 'loc_658']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+81Ch]']
cmp ['[ebp+arg_8],', 'edx']
jl ['short', 'loc_656']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_63B']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+818h]']
jge ['short', 'loc_654']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
or ['eax,', '2']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+10h]']
mov ['[edx+8],', 'ecx']
jmp ['short', 'loc_658']
jmp ['short', 'loc_5DD']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_ps_hints_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['58h']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_ps_hints_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '24h']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+10h]']
push ['eax']
call ['_ps_dimension_done']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '24h']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+10h]']
push ['ecx']
call ['_ps_dimension_done']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_t1_hints_funcs_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['1Ch']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '_t1_hints_open']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '_ps_hints_close']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '_t1_hints_stem']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '_ps_hints_t1stem3']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+14h],', 'offset', '_ps_hints_t1reset']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '_ps_hints_apply']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_t2_hints_funcs_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['1Ch']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', 'offset', '_t2_hints_open']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', 'offset', '_ps_hints_close']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', 'offset', '_t2_hints_stems']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+10h],', 'offset', '_ps_hints_t2mask']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+14h],', 'offset', '_ps_hints_t2counter']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '_ps_hints_apply']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_ps_hints_apply	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0BCh']
push ['edi']
lea ['edi,', '[ebp+var_BC]']
mov ['ecx,', '2Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_88]']
mov ['[ebp+var_90],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
test ['edx,', 'edx']
jz ['short', 'loc_80B']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_812']
xor ['eax,', 'eax']
jmp ['loc_B5E']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_90]']
push ['edx']
call ['_psh_glyph_init']
add ['esp,', '10h']
mov ['[ebp+var_94],', 'eax']
cmp ['[ebp+var_94],', '0']
jz ['short', 'loc_841']
jmp ['$Exit$22']
mov ['eax,', '[ebp+var_90]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '0CCh']
imul ['eax,', 'edx,', '0']
lea ['ecx,', '[ecx+eax+4]']
mov ['[ebp+var_9C],', 'ecx']
mov ['edx,', '[ebp+var_90]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '0CCh']
shl ['ecx,', '0']
lea ['edx,', '[eax+ecx+4]']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+var_9C]']
mov ['ecx,', '[eax+0C4h]']
mov ['[ebp+var_A4],', 'ecx']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+0C4h]']
mov ['[ebp+var_A8],', 'eax']
mov ['ecx,', '[ebp+var_A4]']
mov ['[ebp+var_AC],', 'ecx']
mov ['edx,', '[ebp+var_A8]']
mov ['[ebp+var_B0],', 'edx']
mov ['[ebp+var_B9],', '0']
mov ['eax,', '[ebp+var_A8]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+1A0h]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['[ebp+var_B4],', 'eax']
mov ['eax,', '[ebp+var_B4]']
add ['eax,', '20h']
and ['eax,', '0FFFFFFC0h']
mov ['[ebp+var_B8],', 'eax']
jz ['loc_977']
mov ['ecx,', '[ebp+var_B4]']
cmp ['ecx,', '[ebp+var_B8]']
jz ['short', 'loc_977']
mov ['[ebp+var_B9],', '1']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
mov ['eax,', '[ebp+var_B8]']
push ['eax']
mov ['ecx,', '[ebp+var_A8]']
push ['ecx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['[ebp+var_A8],', 'eax']
mov ['edx,', '[ebp+var_B8]']
cmp ['edx,', '[ebp+var_B4]']
jge ['short', 'loc_953']
mov ['eax,', '[ebp+var_A4]']
cdq
mov ['ecx,', '32h']
idiv ['ecx']
mov ['edx,', '[ebp+var_A4]']
sub ['edx,', 'eax']
mov ['[ebp+var_A4],', 'edx']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_A8]']
push ['eax']
mov ['ecx,', '[ebp+var_A4]']
push ['ecx']
mov ['edx,', '[ebp+var_90]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_psh_globals_set_scale']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_90]']
mov ['byte', 'ptr', '[ecx+78h],', '1']
mov ['edx,', '[ebp+var_90]']
mov ['byte', 'ptr', '[edx+79h],', '1']
cmp ['[ebp+arg_C],', '2']
jz ['short', 'loc_9A0']
cmp ['[ebp+arg_C],', '3']
jz ['short', 'loc_9A0']
mov ['[ebp+var_BA],', '0']
jmp ['short', 'loc_9A7']
mov ['[ebp+var_BA],', '1']
mov ['eax,', '[ebp+var_90]']
mov ['cl,', '[ebp+var_BA]']
mov ['[eax+7Ah],', 'cl']
cmp ['[ebp+arg_C],', '2']
jz ['short', 'loc_9CB']
cmp ['[ebp+arg_C],', '4']
jz ['short', 'loc_9CB']
mov ['[ebp+var_BB],', '0']
jmp ['short', 'loc_9D2']
mov ['[ebp+var_BB],', '1']
mov ['edx,', '[ebp+var_90]']
mov ['al,', '[ebp+var_BB]']
mov ['[edx+7Bh],', 'al']
cmp ['[ebp+arg_C],', '1']
jz ['short', 'loc_9F0']
mov ['[ebp+var_BC],', '1']
jmp ['short', 'loc_9F7']
mov ['[ebp+var_BC],', '0']
mov ['ecx,', '[ebp+var_90]']
mov ['dl,', '[ebp+var_BC]']
mov ['[ecx+7Ch],', 'dl']
mov ['[ebp+var_98],', '0']
jmp ['short', 'loc_A21']
mov ['eax,', '[ebp+var_98]']
add ['eax,', '1']
mov ['[ebp+var_98],', 'eax']
cmp ['[ebp+var_98],', '2']
jge ['$Exit$22']
mov ['ecx,', '[ebp+var_98]']
push ['ecx']
mov ['edx,', '[ebp+var_90]']
push ['edx']
call ['_psh_glyph_load_points']
add ['esp,', '8']
mov ['eax,', '[ebp+var_90]']
push ['eax']
call ['_psh_glyph_compute_extrema']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['edx,', '[ebp+var_98]']
push ['edx']
mov ['eax,', '[ebp+var_90]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
imul ['edx,', '[ebp+var_98],', '28h']
mov ['eax,', '[ebp+var_90]']
lea ['ecx,', '[eax+edx+1Ch]']
push ['ecx']
call ['_psh_hint_table_align_hints']
add ['esp,', '10h']
mov ['edx,', '[ebp+var_98]']
push ['edx']
mov ['eax,', '[ebp+var_90]']
push ['eax']
call ['_psh_glyph_find_strong_points']
add ['esp,', '8']
cmp ['[ebp+var_98],', '1']
jnz ['short', 'loc_ABD']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '19Ch']
push ['edx']
call ['_psh_glyph_find_blue_points']
add ['esp,', '8']
mov ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
call ['_psh_glyph_interpolate_strong_points']
add ['esp,', '8']
mov ['edx,', '[ebp+var_98]']
push ['edx']
mov ['eax,', '[ebp+var_90]']
push ['eax']
call ['_psh_glyph_interpolate_normal_points']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_98]']
push ['ecx']
mov ['edx,', '[ebp+var_90]']
push ['edx']
call ['_psh_glyph_interpolate_other_points']
add ['esp,', '8']
mov ['eax,', '[ebp+var_98]']
push ['eax']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
call ['_psh_glyph_save_points']
add ['esp,', '8']
movzx ['edx,', '[ebp+var_B9]']
test ['edx,', 'edx']
jz ['short', 'loc_B44']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
mov ['ecx,', '[ebp+var_AC]']
push ['ecx']
mov ['edx,', '[ebp+var_90]']
mov ['eax,', '[edx+18h]']
push ['eax']
call ['_psh_globals_set_scale']
add ['esp,', '14h']
jmp ['loc_A12']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
call ['_psh_glyph_done']
add ['esp,', '4']
mov ['eax,', '[ebp+var_94]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0BCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN20']
dd ['offset', '$LN19']
db ['0Bh', 'dup(0CCh)']
endp
_ps_hint_table_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_BB7']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_ps_hint_table_ensure proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_4]']
jbe ['short', 'loc_C6E']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '7']
and ['ecx,', '0FFFFFFF8h']
mov ['[ebp+var_8],', 'ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
push ['0Ch']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_C6E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN6']
dd ['offset', '$LN5']
db ['0Ah', 'dup(0CCh)']
endp
_ps_hint_table_alloc proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+4]']
jb ['short', 'loc_D18']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ps_hint_table_ensure']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_D18']
jmp ['short', '$Exit$5']
imul ['edx,', '[ebp+var_8],', '0Ch']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
lea ['edx,', '[ecx+edx-0Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_ps_mask_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_D77']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_ps_mask_ensure	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '7']
shr ['ecx,', '3']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '7']
shr ['edx,', '3']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_4]']
jbe ['short', 'loc_E4D']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '7']
and ['ecx,', '0FFFFFFF8h']
mov ['[ebp+var_8],', 'ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_E4D']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '3']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN6_0']
dd ['offset', '$LN5_0']
db ['0Ah', 'dup(0CCh)']
endp
_ps_mask_test_bit proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jb ['short', 'loc_EA5']
xor ['eax,', 'eax']
jmp ['short', 'loc_EC4']
mov ['edx,', '[ebp+arg_4]']
sar ['edx,', '3']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
movzx ['eax,', 'byte', 'ptr', '[ecx+edx]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '7']
mov ['edx,', '80h']
sar ['edx,', 'cl']
and ['eax,', 'edx']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_ps_mask_clear_bit proc	near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jb ['short', 'loc_EEB']
jmp ['short', 'loc_F28']
mov ['edx,', '[ebp+arg_4]']
sar ['edx,', '3']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+8]']
mov ['[ebp+var_4],', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '7']
mov ['eax,', '80h']
sar ['eax,', 'cl']
not ['eax']
and ['edx,', 'eax']
mov ['ecx,', '1']
imul ['eax,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+eax],', 'dl']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_ps_mask_set_bit proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_F57']
jmp ['short', '$Exit$6']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jb ['short', 'loc_F8E']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ps_mask_ensure']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_F83']
jmp ['short', '$Exit$6']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
sar ['ecx,', '3']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '7']
mov ['edx,', '80h']
sar ['edx,', 'cl']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+edx],', 'al']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_ps_mask_table_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_101E']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '10h']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_4],', '0']
jbe ['short', 'loc_1036']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ps_mask_done']
add ['esp,', '8']
jmp ['short', 'loc_100C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_1036']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_ps_mask_table_ensure proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_4]']
jbe ['short', 'loc_10FE']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '7']
and ['ecx,', '0FFFFFFF8h']
mov ['[ebp+var_8],', 'ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
push ['10h']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_10FE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN6_1']
dd ['offset', '$LN5_1']
db ['0Ah', 'dup(0CCh)']
endp
_ps_mask_table_alloc proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax+4]']
jbe ['short', 'loc_11A8']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ps_mask_table_ensure']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_11A8']
jmp ['short', '$Exit$5_0']
mov ['edx,', '[ebp+var_4]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
lea ['edx,', '[ecx+edx-10h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_ps_mask_table_last proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1244']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ps_mask_table_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1242']
jmp ['short', '$Exit$9']
jmp ['short', '$Exit$9']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
lea ['edx,', '[ecx+edx-10h]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN8']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN7_2']
dd ['offset', '$LN6_2']
db ['7', 'dup(0CCh)']
endp
_ps_mask_table_set_bits	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ps_mask_table_last']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_12EC']
jmp ['$Exit$14']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_ps_mask_ensure']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_130E']
jmp ['$Exit$14']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
shr ['edx,', '3']
add ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '7']
mov ['eax,', '80h']
sar ['eax,', 'cl']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_20],', '80h']
jmp ['short', 'loc_134D']
mov ['eax,', '[ebp+arg_C]']
sub ['eax,', '1']
mov ['[ebp+arg_C],', 'eax']
cmp ['[ebp+arg_C],', '0']
jbe ['$Exit$14']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
mov ['edx,', '[ebp+var_20]']
not ['edx']
and ['ecx,', 'edx']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
and ['eax,', '[ebp+var_18]']
jz ['short', 'loc_138D']
mov ['ecx,', '[ebp+var_24]']
or ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_24]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '[ebp+var_18]']
sar ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
jnz ['short', 'loc_13B8']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_18],', '80h']
mov ['edx,', '[ebp+var_20]']
sar ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
jnz ['short', 'loc_13D2']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_20],', '80h']
jmp ['loc_1344']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12']
dd ['offset', '$LN11']
db ['0Fh', 'dup(0CCh)']
endp
_ps_mask_table_test_intersect proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+8]']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+arg_8]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+8]']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_18]']
jnb ['short', 'loc_1497']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_149D']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_14AE']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '8']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '8']
jb ['short', 'loc_14F1']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
and ['edx,', 'ecx']
jz ['short', 'loc_14DD']
mov ['eax,', '1']
jmp ['short', 'loc_1529']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_14A5']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_14FB']
xor ['eax,', 'eax']
jmp ['short', 'loc_1529']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[eax+edx]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
and ['eax,', 'edx']
mov ['edx,', '0FFh']
mov ['ecx,', '[ebp+var_1C]']
sar ['edx,', 'cl']
not ['edx']
and ['eax,', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_ps_mask_table_merge proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_8]']
jle ['short', 'loc_156C']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_8]']
jge ['loc_1722']
cmp ['[ebp+arg_4],', '0']
jl ['loc_1722']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx]']
jge ['loc_1722']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+8]']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+8]']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '0']
jbe ['loc_168E']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_14]']
jbe ['short', 'loc_161D']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_ps_mask_ensure']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_15F2']
jmp ['$Exit$23']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_1603']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_18]']
jnb ['short', 'loc_161D']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_ps_mask_clear_bit']
add ['esp,', '8']
jmp ['short', 'loc_15FA']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '7']
shr ['ecx,', '3']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_1646']
mov ['edx,', '[ebp+var_20]']
sub ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jbe ['short', 'loc_168E']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_28]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_24]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+edx],', 'al']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_163D']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
sub ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jle ['short', 'loc_1713']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[edx+4]']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[edx+0Ch]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
shl ['edx,', '4']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_1C]']
shl ['edx,', '4']
add ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_3C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_34]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
jmp ['short', '$Exit$23']
mov ['edx,', '4']
imul ['eax,', 'edx,', '2Bh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '0']
jl ['short', 'loc_1748']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '$SG7954']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_1722']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN21_0']
dd ['offset', '$LN20_0']
db ['0Ah', 'dup(0CCh)']
endp
_ps_mask_table_merge_all proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_17CC']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '0']
jle ['short', '$Exit$11']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_17E6']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_182B']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ps_mask_table_test_intersect']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_1829']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ps_mask_table_merge']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1827']
jmp ['short', '$Exit$11']
jmp ['short', 'loc_182B']
jmp ['short', 'loc_17DD']
jmp ['short', 'loc_17C3']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_ps_dimension_done proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
push ['ecx']
call ['_ps_mask_table_done']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
call ['_ps_mask_table_done']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ps_hint_table_done']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_ps_dimension_init proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+18h],', '0']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_ps_dimension_end_mask proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jbe ['short', 'loc_1903']
mov ['edx,', '[ebp+var_4]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
lea ['edx,', '[ecx+edx-10h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_ps_dimension_reset_mask proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ps_dimension_end_mask']
add ['esp,', '8']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
call ['_ps_mask_table_alloc']
add ['esp,', '0Ch']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN4']
dd ['offset', '$LN3']
align ['4']
endp
_ps_dimension_set_mask_bits proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ps_dimension_reset_mask']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_19BE']
jmp ['short', '$Exit$4']
mov ['eax,', '[ebp+arg_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
call ['_ps_mask_table_set_bits']
add ['esp,', '14h']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ps_dimension_add_t1stem proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_8],', '0']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_1A46']
mov ['eax,', '[ebp+var_8]']
or ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_8],', '0FFFFFFEBh']
jnz ['short', 'loc_1A3F']
mov ['ecx,', '[ebp+var_8]']
or ['ecx,', '2']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'edx']
mov ['[ebp+arg_8],', '0']
cmp ['[ebp+arg_10],', '0']
jz ['short', 'loc_1A55']
mov ['eax,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_1A81']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '0Ch']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_1C]']
jnb ['short', 'loc_1AA2']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_1AA0']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+arg_8]']
jnz ['short', 'loc_1AA0']
jmp ['short', 'loc_1AA2']
jmp ['short', 'loc_1A6F']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_1C]']
jb ['short', 'loc_1AE3']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ps_hint_table_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1AC9']
jmp ['short', '$Exit$19']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+8],', 'eax']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0Ch']
push ['eax']
call ['_ps_mask_table_last']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1B05']
jmp ['short', '$Exit$19']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ps_mask_set_bit']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1B24']
jmp ['short', '$Exit$19']
cmp ['[ebp+arg_10],', '0']
jz ['short', '$Exit$19']
mov ['ecx,', '[ebp+arg_10]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN17']
dd ['offset', '$LN15']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN16']
align ['4']
endp
_ps_dimension_add_counter proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_1BCB']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '10h']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_8],', '0']
jbe ['short', 'loc_1C11']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ps_mask_test_bit']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1C0D']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ps_mask_test_bit']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1C0D']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ps_mask_test_bit']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_1C0F']
jmp ['short', 'loc_1C11']
jmp ['short', 'loc_1BB9']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1C39']
lea ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '18h']
push ['edx']
call ['_ps_mask_table_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1C39']
jmp ['short', '$Exit$16']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ps_mask_set_bit']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1C58']
jmp ['short', '$Exit$16']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ps_mask_set_bit']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1C77']
jmp ['short', '$Exit$16']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ps_mask_set_bit']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN14']
dd ['offset', '$LN13_0']
db ['8', 'dup(0CCh)']
endp
_ps_dimension_end proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ps_dimension_end_mask']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
push ['eax']
call ['_ps_mask_table_merge_all']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_ps_hints_open	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jle ['short', 'loc_1D68']
cmp ['[ebp+var_4],', '2']
jle ['short', 'loc_1D23']
jmp ['short', 'loc_1D68']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '24h']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+10h]']
push ['ecx']
call ['_ps_dimension_init']
add ['esp,', '4']
mov ['edx,', '24h']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+10h]']
push ['ecx']
call ['_ps_dimension_init']
add ['esp,', '4']
jmp ['short', 'loc_1DB0']
push ['offset', '$SG8105']
push ['33Ah']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '2Bh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '0']
jl ['short', 'loc_1DAC']
push ['offset', '$SG8110']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1D8E']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_ps_hints_stem	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['loc_1F26']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_1DF7']
cmp ['[ebp+arg_4],', '1']
jle ['short', 'loc_1E39']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '2Bh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_1E19']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '$SG8128']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1DF7']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1E2C']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_1E33']
mov ['[ebp+var_10],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jle ['loc_1EFD']
cmp ['[ebp+var_14],', '2']
jle ['short', 'loc_1E57']
jmp ['loc_1EFD']
imul ['edx,', '[ebp+arg_4],', '24h']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+10h]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_1E79']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '8']
mov ['[ebp+arg_C],', 'eax']
cmp ['[ebp+arg_8],', '0']
jbe ['short', 'loc_1EFB']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
push ['0']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx+ecx]']
push ['eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+edx]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ps_dimension_add_t1stem']
add ['esp,', '14h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1EF6']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx+eax]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx+ecx]']
push ['eax']
push ['offset', '$SG8144']
call ['_FT_Message']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
jmp ['short', 'loc_1F26']
jmp ['loc_1E67']
jmp ['short', 'loc_1F26']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '2Bh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '0']
jl ['short', 'loc_1F22']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
push ['offset', '$SG8150']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1EFD']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_ps_hints_t1stem3 proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['loc_20C1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_1F7C']
cmp ['[ebp+arg_4],', '1']
jle ['short', 'loc_1FBE']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '2Bh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '0']
jl ['short', 'loc_1F9E']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '$SG8171']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_1F7C']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1FB1']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_1FB8']
mov ['[ebp+var_2C],', '0']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+arg_4],', 'ecx']
imul ['edx,', '[ebp+arg_4],', '24h']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+10h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0Ch],', '1']
jnz ['loc_2098']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_1FF4']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '8']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+var_14],', '3']
jge ['short', 'loc_2055']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ebp+edx*4+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+edx]']
push ['ecx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
push ['eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax]']
push ['edx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
push ['eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_ps_dimension_add_t1stem']
add ['esp,', '14h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2053']
jmp ['short', '$Fail$22']
jmp ['short', 'loc_1FE2']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['eax,', '[ebp+edx+var_24]']
push ['eax']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+ecx+var_24]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+ecx+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_ps_dimension_add_counter']
add ['esp,', '14h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2096']
jmp ['short', '$Fail$22']
jmp ['short', 'loc_20C1']
push ['offset', '$SG8182']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8183']
push ['3ADh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Fail$22']
jmp ['short', 'loc_20D9']
push ['offset', '$SG8184']
call ['_FT_Message']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+4],', 'edx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN20_1']
dd ['offset', '$LN19_0']
endp
_ps_hints_t1reset proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['loc_21D1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+0Ch],', '1']
jnz ['short', 'loc_21B5']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '24h']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+10h]']
push ['eax']
call ['_ps_dimension_reset_mask']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2188']
jmp ['short', '$Fail$8']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '24h']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+10h]']
push ['edx']
call ['_ps_dimension_reset_mask']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_21B3']
jmp ['short', '$Fail$8']
jmp ['short', 'loc_21D1']
push ['offset', '$SG8199']
push ['3D6h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Fail$8']
jmp ['short', 'loc_21DC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+4],', 'ecx']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_ps_hints_t2mask proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['loc_22EC']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '24h']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '24h']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
cmp ['[ebp+arg_8],', 'edx']
jz ['short', 'loc_2288']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '2Bh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '0']
jl ['short', 'loc_2282']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '$SG8221']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2259']
jmp ['short', 'loc_22F7']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '24h']
imul ['edx,', 'ecx,', '0']
add ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ps_dimension_set_mask_bits']
add ['esp,', '18h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_22BB']
jmp ['short', '$Fail$11']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '24h']
shl ['ecx,', '0']
add ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ps_dimension_set_mask_bits']
add ['esp,', '18h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_22EC']
jmp ['short', '$Fail$11']
jmp ['short', 'loc_22F7']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_ps_hints_t2counter proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jnz ['loc_2408']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '24h']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '24h']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
cmp ['[ebp+arg_4],', 'edx']
jz ['short', 'loc_23A8']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '2Bh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '0']
jl ['short', 'loc_23A2']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '$SG8244']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2379']
jmp ['short', 'loc_2413']
mov ['edx,', '[ebp+var_C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '24h']
imul ['eax,', 'edx,', '0']
add ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ps_dimension_set_mask_bits']
add ['esp,', '18h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_23D7']
jmp ['short', '$Fail$11_0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '24h']
shl ['edx,', '0']
add ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ps_dimension_set_mask_bits']
add ['esp,', '18h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2408']
jmp ['short', '$Fail$11_0']
jmp ['short', 'loc_2413']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+4],', 'ecx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_ps_hints_close	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_24A3']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '10h']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '24h']
imul ['edx,', 'ecx,', '0']
add ['edx,', '[ebp+var_C]']
push ['edx']
call ['_ps_dimension_end']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_24A3']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '24h']
shl ['edx,', '0']
add ['edx,', '[ebp+var_C]']
push ['edx']
call ['_ps_dimension_end']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_t1_hints_open	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ps_hints_open']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_t1_hints_stem	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+ecx]']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['[ebp+edx+var_C],', 'eax']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+eax]']
push ['edx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['[ebp+ecx+var_C],', 'eax']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ps_hints_stem']
add ['esp,', '10h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN5_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN4_0']
dd ['offset', '$LN3_0']
db ['0Eh', 'dup(0CCh)']
endp
_t2_hints_open	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ps_hints_open']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_t2_hints_stems	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '98h']
push ['edi']
lea ['edi,', '[ebp+var_98]']
mov ['ecx,', '26h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_98],', 'eax']
mov ['[ebp+var_90],', '0']
cmp ['[ebp+var_98],', '0']
jle ['loc_26F1']
mov ['ecx,', '[ebp+var_98]']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '10h']
jle ['short', 'loc_2610']
mov ['[ebp+arg_8],', '10h']
mov ['[ebp+var_94],', '0']
jmp ['short', 'loc_262B']
mov ['edx,', '[ebp+var_94]']
add ['edx,', '1']
mov ['[ebp+var_94],', 'edx']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '1']
cmp ['[ebp+var_94],', 'eax']
jge ['short', 'loc_2671']
mov ['ecx,', '[ebp+var_94]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_90]']
add ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_90],', 'eax']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+var_94]']
mov ['[ebp+edx*4+var_88],', 'eax']
jmp ['short', 'loc_261C']
mov ['[ebp+var_94],', '0']
jmp ['short', 'loc_268C']
mov ['eax,', '[ebp+var_94]']
add ['eax,', '2']
mov ['[ebp+var_94],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '1']
cmp ['[ebp+var_94],', 'ecx']
jge ['short', 'loc_26C2']
mov ['edx,', '[ebp+var_94]']
mov ['eax,', '[ebp+var_94]']
mov ['ecx,', '[ebp+edx*4+var_84]']
sub ['ecx,', '[ebp+eax*4+var_88]']
mov ['edx,', '[ebp+var_94]']
mov ['[ebp+edx*4+var_84],', 'ecx']
jmp ['short', 'loc_267D']
lea ['eax,', '[ebp+var_88]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ps_hints_stem']
add ['esp,', '10h']
mov ['ecx,', '[ebp+var_98]']
sub ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_98],', 'ecx']
jmp ['loc_25ED']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '98h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN13_1']
dd ['offset', '$LN12_0']
db ['0Ah', 'dup(0CCh)']
endp
_psh_globals_scale_widths proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
imul ['eax,', '[ebp+arg_4],', '0CCh']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0C4h]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_C],', '0']
jbe ['loc_2858']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
add ['eax,', '20h']
and ['eax,', '0FFFFFFC0h']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '0Ch']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_27FB']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '0Ch']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_C],', '0']
jbe ['short', 'loc_2858']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
jns ['short', 'loc_282C']
mov ['edx,', '[ebp+var_20]']
neg ['edx']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '80h']
jge ['short', 'loc_283E']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '20h']
and ['ecx,', '0FFFFFFC0h']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+8],', 'ecx']
jmp ['short', 'loc_27E9']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_psh_blues_set_zones_0 proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_14]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_9],', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_28B0']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '2']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_8],', '1']
jbe ['loc_2A1B']
mov ['[ebp+var_21],', '0']
movzx ['eax,', '[ebp+var_9]']
test ['eax,', 'eax']
jnz ['short', 'loc_28CE']
movzx ['ecx,', '[ebp+arg_4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_290A']
mov ['edx,', '2']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_C]']
movsx ['ecx,', 'word', 'ptr', '[eax+edx]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_C]']
movsx ['edx,', 'word', 'ptr', '[ecx+eax]']
sub ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_14]']
add ['eax,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_9],', '0']
jmp ['short', 'loc_2944']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_C]']
movsx ['edx,', 'word', 'ptr', '[ecx+eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '2']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_C]']
movsx ['edx,', 'word', 'ptr', '[ecx+eax]']
sub ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_10]']
add ['eax,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_21],', '1']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_295E']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '20h']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_18],', '0']
jbe ['short', 'loc_29B1']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx]']
jge ['short', 'loc_2970']
jmp ['short', 'loc_29B1']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ecx]']
jnz ['short', 'loc_29AF']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_299C']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_28]']
jge ['short', 'loc_299A']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
jmp ['short', 'loc_29AD']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_28]']
jle ['short', 'loc_29AD']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
jmp ['short', '$Skip$23']
jmp ['short', 'loc_294C']
jmp ['short', 'loc_29BC']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '0']
jbe ['short', 'loc_29E0']
mov ['esi,', '[ebp+var_18]']
sub ['esi,', '1']
shl ['esi,', '5']
add ['esi,', '[ebp+var_20]']
mov ['edi,', '[ebp+var_18]']
shl ['edi,', '5']
add ['edi,', '[ebp+var_20]']
mov ['ecx,', '8']
rep ['movsd']
jmp ['short', 'loc_29B3']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
movzx ['ecx,', '[ebp+var_21]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2A04']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
jmp ['short', '$Skip$23']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '4']
mov ['[ebp+arg_C],', 'ecx']
jmp ['loc_28A7']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
pop ['edi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_psh_blues_set_zones proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '38h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_38]']
mov ['ecx,', '0Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
cmp ['[ebp+arg_18],', '0']
jz ['short', 'loc_2A6A']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '408h']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '60Ch']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2A7B']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '204h']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_psh_blues_set_zones_0']
add ['esp,', '18h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_psh_blues_set_zones_0']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_C],', '0']
jle ['loc_2B63']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_2B06']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '20h']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_2B63']
cmp ['[ebp+arg_4],', '1']
jbe ['short', 'loc_2B45']
mov ['eax,', '20h']
shl ['eax,', '0']
mov ['ecx,', '20h']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['esi,', '[ebp+var_14]']
mov ['eax,', '[ecx+eax]']
sub ['eax,', '[esi+edx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
cmp ['edx,', '[ebp+var_18]']
jle ['short', 'loc_2B45']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_14]']
add ['eax,', '[ecx]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+8],', 'eax']
jmp ['short', 'loc_2AF4']
cmp ['[ebp+var_10],', '0']
jle ['loc_2BED']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+arg_4],', 'ecx']
jmp ['short', 'loc_2B90']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '20h']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_2BED']
cmp ['[ebp+arg_4],', '1']
jbe ['short', 'loc_2BCF']
mov ['ecx,', '20h']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '20h']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['esi,', '[ebp+var_1C]']
mov ['edx,', '[ecx+edx]']
sub ['edx,', '[esi+eax]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+4]']
cmp ['ecx,', '[ebp+var_20]']
jge ['short', 'loc_2BCF']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_1C]']
add ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ecx+0Ch],', 'edx']
jmp ['short', 'loc_2B7E']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '4']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+var_24],', '1']
jmp ['short', 'loc_2C0E']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '0']
jl ['loc_2D14']
cmp ['[ebp+arg_4],', '0']
jbe ['loc_2D00']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+0Ch]']
sub ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
jmp ['short', 'loc_2C4E']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
cmp ['[ebp+arg_4],', '0']
jbe ['loc_2CF4']
mov ['eax,', '20h']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+eax+0Ch]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_28]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+arg_14]']
shl ['ecx,', '1']
cmp ['[ebp+var_30],', 'ecx']
jge ['short', 'loc_2CB3']
mov ['eax,', '[ebp+var_30]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['edx,', '[ebp+var_28]']
add ['edx,', 'eax']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '20h']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+var_38]']
mov ['[ecx+eax+0Ch],', 'edx']
mov ['eax,', '20h']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+var_38]']
mov ['[edx+ecx+8],', 'eax']
jmp ['short', 'loc_2CDD']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '[ebp+arg_14]']
mov ['edx,', '20h']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_34]']
mov ['[edx+eax+8],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+arg_14]']
mov ['ecx,', '20h']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_34]']
mov ['[edx+ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '20h']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_28],', 'edx']
jmp ['loc_2C45']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '[ebp+arg_14]']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+arg_4],', 'eax']
jmp ['loc_2C05']
pop ['edi']
pop ['esi']
add ['esp,', '38h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_psh_blues_scale_zones proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_C],', '0']
cmp ['[ebp+arg_4],', '20C49BAh']
jl ['short', 'loc_2D7B']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+810h]']
shl ['eax,', '3']
cdq
mov ['ecx,', '7Dh']
idiv ['ecx']
cmp ['[ebp+arg_4],', 'eax']
jge ['short', 'loc_2D69']
mov ['[ebp+var_31],', '1']
jmp ['short', 'loc_2D6D']
mov ['[ebp+var_31],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', '[ebp+var_31]']
mov ['[edx+820h],', 'al']
jmp ['short', 'loc_2DA5']
imul ['ecx,', '[ebp+arg_4],', '7Dh']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+810h]']
shl ['eax,', '3']
cmp ['ecx,', 'eax']
jge ['short', 'loc_2D95']
mov ['[ebp+var_32],', '1']
jmp ['short', 'loc_2D99']
mov ['[ebp+var_32],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ebp+var_32]']
mov ['[ecx+820h],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+814h]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jle ['short', 'loc_2DD7']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
cmp ['eax,', '20h']
jle ['short', 'loc_2DD7']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_2DB1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+818h],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2DF5']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '4']
jnb ['loc_2EFF']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_2E19']
cmp ['[ebp+var_38],', '1']
jz ['short', 'loc_2E21']
cmp ['[ebp+var_38],', '2']
jz ['short', 'loc_2E2F']
jmp ['short', 'loc_2E3D']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_2E48']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '204h']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_2E48']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '408h']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_2E48']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '60Ch']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2E6D']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '20h']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_4],', '0']
jbe ['loc_2EFA']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['eax,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+18h],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '20h']
and ['ecx,', '0FFFFFFC0h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+10h],', 'ecx']
jmp ['loc_2E5B']
jmp ['loc_2DEC']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2F11']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '2']
jnb ['loc_3018']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_3C],', 'ecx']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_2F29']
jmp ['short', 'loc_2F3C']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '408h']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_2F54']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '204h']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '60Ch']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_20],', 'edx']
jmp ['short', 'loc_2F79']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '20h']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_20],', '0']
jbe ['loc_3013']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '4']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_24],', 'ecx']
jmp ['short', 'loc_2FA8']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '20h']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_24],', '0']
jbe ['short', 'loc_300E']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ecx]']
sub ['eax,', '[edx]']
mov ['[ebp+var_30],', 'eax']
jns ['short', 'loc_2FC5']
mov ['ecx,', '[ebp+var_30]']
neg ['ecx']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
cmp ['eax,', '40h']
jge ['short', 'loc_300C']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+1Ch]']
mov ['[ecx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+18h]']
mov ['[ecx+18h],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+14h]']
mov ['[ecx+14h],', 'eax']
jmp ['short', 'loc_300E']
jmp ['short', 'loc_2F96']
jmp ['loc_2F67']
jmp ['loc_2F08']
pop ['edi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_psh_calc_max_height proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_305A']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_3093']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+edx*2+2]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[eax+edx*2]']
sub ['ecx,', 'edx']
mov ['word', 'ptr', '[ebp+var_8],', 'cx']
movsx ['eax,', 'word', 'ptr', '[ebp+var_8]']
movsx ['ecx,', '[ebp+arg_8]']
cmp ['eax,', 'ecx']
jle ['short', 'loc_3091']
mov ['dx,', 'word', 'ptr', '[ebp+var_8]']
mov ['[ebp+arg_8],', 'dx']
jmp ['short', 'loc_3051']
mov ['ax,', '[ebp+arg_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_psh_globals_destroy proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3132']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '0CCh']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+eax+4],', '0']
mov ['edx,', '0CCh']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+edx+4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+19Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+3A0h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+5A4h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+7A8h],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+arg_0],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3117']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_psh_globals_new proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['9C0h']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['loc_3453']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['ecx,', '0CCh']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
lea ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '4']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax+78h]']
mov ['eax,', '[ebp+var_20]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '0Ch']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '80h']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+7Ch]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_31E5']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jbe ['short', 'loc_320A']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+var_20]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '0Ch']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '2']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_31DC']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+7Ch]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ecx],', 'eax']
mov ['edx,', '0CCh']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '4']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx+7Ah]']
mov ['edx,', '[ebp+var_28]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '0Ch']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '9Ah']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+7Dh]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_3273']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jbe ['short', 'loc_3298']
mov ['edx,', '[ebp+var_18]']
movsx ['eax,', 'word', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '0Ch']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '2']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_326A']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7Dh]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_24]']
mov ['[eax],', 'edx']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+74h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '28h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+9]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '19Ch']
push ['eax']
call ['_psh_blues_set_zones']
add ['esp,', '1Ch']
push ['1']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+74h]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '58h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Bh]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '3Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Ah]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '19Ch']
push ['eax']
call ['_psh_blues_set_zones']
add ['esp,', '1Ch']
mov ['ecx,', '1']
mov ['[ebp+var_30],', 'cx']
movzx ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '0Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
push ['edx']
call ['_psh_calc_max_height']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'ax']
movzx ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '28h']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+9]']
push ['eax']
call ['_psh_calc_max_height']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'ax']
movzx ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '3Ch']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Ah]']
push ['ecx']
call ['_psh_calc_max_height']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'ax']
movzx ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '58h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0Bh]']
push ['edx']
call ['_psh_calc_max_height']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'ax']
movsx ['eax,', '[ebp+var_30]']
push ['eax']
push ['3E8h']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+6Ch]']
cmp ['edx,', '[ebp+var_2C]']
jge ['short', 'loc_33CB']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+6Ch]']
mov ['[ebp+var_34],', 'ecx']
jmp ['short', 'loc_33D1']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_34]']
mov ['[eax+9ACh],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+70h]']
mov ['[edx+9B0h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+74h]']
mov ['[edx+9B8h],', 'ecx']
mov ['edx,', '0CCh']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+eax+0C8h],', '0']
mov ['edx,', '0CCh']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+eax+0CCh],', '0']
mov ['edx,', '0CCh']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+edx+0C8h],', '0']
mov ['ecx,', '0CCh']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+ecx+0CCh],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN13_2']
dd ['offset', '$LN12_1']
db ['0Ah', 'dup(0CCh)']
endp
_psh_hint_overlap proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
mov ['eax,', '[ebp+arg_4]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_34DC']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx]']
jl ['short', 'loc_34DC']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_34E3']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_psh_hint_table_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+18h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_34F7']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_352C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_354D']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
endp
_psh_hint_table_deactivate proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_35CD']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1Ch']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_4],', '0']
jbe ['short', 'loc_35EE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
and ['ecx,', '0FFFFFFFBh']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+18h],', '0FFFFFFFFh']
jmp ['short', 'loc_35BB']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_psh_hint_table_record proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
imul ['eax,', '[ebp+arg_4],', '1Ch']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+8]']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx]']
jb ['short', 'loc_364D']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '2Dh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_3644']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '$SG8659']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3622']
jmp ['loc_3726']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
and ['eax,', '4']
jz ['short', 'loc_365D']
jmp ['loc_3726']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
or ['edx,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+14h],', '0']
jmp ['short', 'loc_369C']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_C],', '0']
jbe ['short', 'loc_36D4']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_psh_hint_overlap']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_36D2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+14h],', 'eax']
jmp ['short', 'loc_36D4']
jmp ['short', 'loc_368A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx]']
jnb ['short', 'loc_3704']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['eax,', '[ebp+var_4]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
jmp ['short', 'loc_3726']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '2Dh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_3722']
push ['offset', '$SG8674']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_3704']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_psh_hint_table_record_mask proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_377F']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_14]']
jnb ['short', 'loc_37C8']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_37A6']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_4],', '80h']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '[ebp+var_4]']
jz ['short', 'loc_37BE']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_psh_hint_table_record']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
sar ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_3776']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_psh_hint_table_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_4],', 'edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
shl ['ecx,', '1']
push ['ecx']
push ['0']
push ['4']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_388D']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_4]']
push ['eax']
push ['0']
push ['1Ch']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_388D']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
lea ['edx,', '[ecx+ecx+1]']
push ['edx']
push ['0']
push ['10h']
mov ['eax,', '[ebp+arg_10]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+18h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_3892']
jmp ['$Exit$23_0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_4]']
lea ['ecx,', '[edx+eax*4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_38F9']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1Ch']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '0Ch']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_4],', '0']
jbe ['short', 'loc_3923']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
mov ['[ecx+10h],', 'eax']
jmp ['short', 'loc_38DE']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_396F']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+20h],', 'eax']
jmp ['short', 'loc_3957']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '10h']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_4],', '0']
jbe ['short', 'loc_396F']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_psh_hint_table_record_mask']
add ['esp,', '8']
jmp ['short', 'loc_3945']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax]']
jz ['short', '$Exit$23_0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '2Dh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '0']
jl ['short', 'loc_399A']
push ['offset', '$SG8730']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_397C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_39B8']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_4]']
jnb ['short', '$Exit$23_0']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_psh_hint_table_record']
add ['esp,', '8']
jmp ['short', 'loc_39AF']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN21_2']
dd ['offset', '$LN20_2']
db ['6', 'dup(0CCh)']
endp
_psh_hint_table_activate_mask proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_psh_hint_table_deactivate']
add ['esp,', '4']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_3A6E']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_14]']
jnb ['loc_3B28']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_3A99']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_4],', '80h']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '[ebp+var_4]']
jz ['short', 'loc_3B1B']
imul ['edx,', '[ebp+var_10],', '1Ch']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+8]']
mov ['[ebp+var_1C],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+10h]']
and ['edx,', '4']
jnz ['short', 'loc_3B1B']
mov ['[ebp+var_20],', '0']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_3B1B']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+10h]']
or ['ecx,', '4']
mov ['edx,', '[ebp+var_1C]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_3AF9']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_1C]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_3B1B']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '2Dh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_3B17']
push ['offset', '$SG8761']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_3AF9']
mov ['ecx,', '[ebp+var_4]']
sar ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['loc_3A65']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_34],', 'edx']
mov ['[ebp+var_24],', '1']
jmp ['short', 'loc_3B4C']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['ecx,', '[ebp+var_18]']
jge ['short', 'loc_3BB1']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
jmp ['short', 'loc_3B74']
mov ['eax,', '[ebp+var_28]']
sub ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jl ['short', 'loc_3BAF']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ecx]']
cmp ['eax,', '[edx]']
jge ['short', 'loc_3B94']
jmp ['short', 'loc_3BAF']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+var_30]']
mov ['[edx+ecx*4+4],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_3B6B']
jmp ['short', 'loc_3B43']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_psh_dimension_quantize_len proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_4],', '40h']
jg ['short', 'loc_3BE1']
mov ['[ebp+arg_4],', '40h']
jmp ['loc_3C8A']
mov ['eax,', '0Ch']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[edx+ecx+8]']
mov ['[ebp+var_4],', 'eax']
jns ['short', 'loc_3C00']
mov ['ecx,', '[ebp+var_4]']
neg ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '28h']
jge ['short', 'loc_3C25']
mov ['edx,', '0Ch']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+arg_4],', 'edx']
cmp ['[ebp+arg_4],', '30h']
jge ['short', 'loc_3C25']
mov ['[ebp+arg_4],', '30h']
cmp ['[ebp+arg_4],', '0C0h']
jge ['short', 'loc_3C7E']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '3Fh']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '0FFFFFFC0h']
mov ['[ebp+arg_4],', 'ecx']
cmp ['[ebp+var_4],', '0Ah']
jge ['short', 'loc_3C51']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+arg_4],', 'edx']
jmp ['short', 'loc_3C7C']
cmp ['[ebp+var_4],', '20h']
jge ['short', 'loc_3C62']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '0Ah']
mov ['[ebp+arg_4],', 'eax']
jmp ['short', 'loc_3C7C']
cmp ['[ebp+var_4],', '36h']
jge ['short', 'loc_3C73']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '36h']
mov ['[ebp+arg_4],', 'ecx']
jmp ['short', 'loc_3C7C']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+arg_4],', 'edx']
jmp ['short', 'loc_3C8A']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '20h']
and ['eax,', '0FFFFFFC0h']
mov ['[ebp+arg_4],', 'eax']
movzx ['ecx,', '[ebp+arg_8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3C9E']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '20h']
and ['edx,', '0FFFFFFC0h']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_psh_hint_snap_stem_side_delta proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
and ['eax,', '0FFFFFFC0h']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+20h]']
and ['eax,', '0FFFFFFC0h']
sub ['eax,', '[ebp+arg_0]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_4],', '0']
jge ['short', 'loc_3D00']
mov ['ecx,', '[ebp+var_4]']
neg ['ecx']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_3D06']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_8],', '0']
jge ['short', 'loc_3D16']
mov ['eax,', '[ebp+var_8]']
neg ['eax']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_3D1C']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_10]']
jg ['short', 'loc_3D2B']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_3D2E']
jmp ['short', 'loc_3D2E']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_psh_hint_align	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '64h']
push ['edi']
lea ['edi,', '[ebp+var_64]']
mov ['ecx,', '19h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
imul ['eax,', '[ebp+arg_8],', '0CCh']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0C4h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0C8h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
and ['edx,', '8']
jnz ['loc_4134']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['eax,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_3DCB']
mov ['eax,', '[ebp+arg_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+78h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3DDC']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_3E02']
mov ['edx,', '[ebp+arg_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+79h]']
test ['eax,', 'eax']
jnz ['short', 'loc_3E02']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
or ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+10h],', 'eax']
jmp ['loc_4134']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_3E13']
mov ['edx,', '[ebp+arg_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+7Ah]']
test ['eax,', 'eax']
jnz ['short', 'loc_3E2D']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_3E24']
mov ['ecx,', '[ebp+arg_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7Bh]']
test ['edx,', 'edx']
jnz ['short', 'loc_3E2D']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_3E34']
mov ['[ebp+var_5C],', '1']
mov ['eax,', '[ebp+var_5C]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+0Ch],', 'eax']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_2C],', '0']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_3E8B']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+4]']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '19Ch']
push ['edx']
call ['_psh_blues_snap_stem']
add ['esp,', '10h']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '1']
jz ['short', 'loc_3EA5']
cmp ['[ebp+var_60],', '2']
jz ['short', 'loc_3EB6']
cmp ['[ebp+var_60],', '3']
jz ['short', 'loc_3EC4']
jmp ['short', 'loc_3EDE']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
jmp ['loc_4061']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_28]']
mov ['[eax+8],', 'ecx']
jmp ['loc_4061']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'ecx']
jmp ['loc_4061']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_38],', 'ecx']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_3F67']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx+10h]']
and ['eax,', '8']
jnz ['short', 'loc_3F10']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_psh_hint_align']
add ['esp,', '10h']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx+4]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_38]']
add ['eax,', '[ecx]']
mov ['[ebp+var_3C],', 'eax']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx+0Ch]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_38]']
add ['eax,', '[ecx+8]']
mov ['[ebp+var_40],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx]']
mov ['[ebp+var_44],', 'eax']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_44]']
sub ['eax,', '[ebp+var_3C]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '[ebp+var_48]']
mov ['edx,', '[ebp+var_18]']
sar ['edx,', '1']
sub ['ecx,', 'edx']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+7Ch]']
test ['edx,', 'edx']
jz ['loc_403F']
cmp ['[ebp+var_18],', '40h']
jg ['loc_402A']
cmp ['[ebp+var_18],', '20h']
jl ['short', 'loc_3FAF']
mov ['eax,', '[ebp+var_18]']
sar ['eax,', '1']
add ['eax,', '[ebp+var_14]']
and ['eax,', '0FFFFFFC0h']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_18],', '40h']
jmp ['short', 'loc_4028']
cmp ['[ebp+var_18],', '0']
jle ['short', 'loc_401C']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
and ['ecx,', '0FFFFFFC0h']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[eax+edx+20h]']
and ['ecx,', '0FFFFFFC0h']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_4C]']
sub ['edx,', '[ebp+var_14]']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_50]']
sub ['ecx,', 'eax']
mov ['[ebp+var_58],', 'ecx']
cmp ['[ebp+var_54],', '0']
jge ['short', 'loc_3FF6']
mov ['edx,', '[ebp+var_54]']
neg ['edx']
mov ['[ebp+var_54],', 'edx']
cmp ['[ebp+var_58],', '0']
jge ['short', 'loc_4004']
mov ['eax,', '[ebp+var_58]']
neg ['eax']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_54]']
cmp ['ecx,', '[ebp+var_58]']
jg ['short', 'loc_4014']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_401A']
mov ['eax,', '[ebp+var_50]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_4028']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '20h']
and ['ecx,', '0FFFFFFC0h']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_403F']
push ['0']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_psh_dimension_quantize_len']
add ['esp,', '0Ch']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_psh_hint_snap_stem_side_delta']
add ['esp,', '8']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['loc_4125']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '40h']
jge ['short', 'loc_408C']
mov ['[ebp+var_18],', '40h']
jmp ['short', 'loc_4098']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '20h']
and ['edx,', '0FFFFFFC0h']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_64],', 'eax']
cmp ['[ebp+var_64],', '1']
jz ['short', 'loc_40B2']
cmp ['[ebp+var_64],', '2']
jz ['short', 'loc_40C9']
cmp ['[ebp+var_64],', '3']
jz ['short', 'loc_40D4']
jmp ['short', 'loc_40D6']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+0Ch],', 'ecx']
jmp ['short', 'loc_4125']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+0Ch],', 'eax']
jmp ['short', 'loc_4125']
jmp ['short', 'loc_4125']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '40h']
jz ['short', 'loc_40FA']
mov ['ecx,', '[ebp+var_18]']
sar ['ecx,', '1']
add ['ecx,', '[ebp+var_14]']
and ['ecx,', '0FFFFFFC0h']
add ['ecx,', '20h']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_410C']
mov ['edx,', '[ebp+var_18]']
sar ['edx,', '1']
mov ['eax,', '[ebp+var_14]']
lea ['ecx,', '[eax+edx+20h]']
and ['ecx,', '0FFFFFFC0h']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_18]']
sar ['edx,', '1']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
or ['edx,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+10h],', 'edx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN44']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '64h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN43']
dd ['offset', '$LN42']
db ['0Ah', 'dup(0CCh)']
endp
_psh_hint_table_align_hints proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_41BD']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1Ch']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_8],', '0']
jbe ['short', 'loc_41DD']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_psh_hint_align']
add ['esp,', '10h']
jmp ['short', 'loc_41AB']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_psh_glyph_compute_inflections proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_421C']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ecx+4]']
jnb ['loc_43F0']
mov ['[ebp+var_34],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+edx*8+4],', '4']
jnb ['short', 'loc_4244']
jmp ['short', 'loc_4213']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+edx*8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_8]']
jnz ['short', 'loc_4275']
jmp ['$Skip$35']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax+1Ch]']
sub ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax+20h]']
sub ['edx,', '[ecx+20h]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_429F']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_425F']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_8]']
jnz ['short', 'loc_42C0']
jmp ['$Skip$35']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[edx+1Ch]']
sub ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[edx+20h]']
sub ['ecx,', '[eax+20h]']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_42EA']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_42A5']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_ft_corner_orientation']
add ['esp,', '10h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_42A5']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_8]']
jnz ['short', 'loc_4341']
mov ['[ebp+var_34],', '1']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[edx+1Ch]']
sub ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[edx+20h]']
sub ['ecx,', '[eax+20h]']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_436B']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_4323']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_ft_corner_orientation']
add ['esp,', '10h']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_4323']
mov ['eax,', '[ebp+var_30]']
xor ['eax,', '[ebp+var_2C]']
jge ['short', 'loc_43C3']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
or ['edx,', '4']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_4394']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
or ['edx,', '4']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_34],', '0']
jz ['loc_431D']
jmp ['loc_4213']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_psh_glyph_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '28h']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+1Ch]']
push ['edx']
call ['_psh_hint_table_done']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '28h']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+1Ch]']
push ['ecx']
call ['_psh_hint_table_done']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_4450']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_4471']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+10h],', '0']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_psh_compute_dir proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '4']
cmp ['[ebp+arg_0],', '0']
jge ['short', 'loc_44FB']
mov ['eax,', '[ebp+arg_0]']
neg ['eax']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_4501']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_4517']
mov ['eax,', '[ebp+arg_4]']
neg ['eax']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_451D']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'edx']
imul ['eax,', '[ebp+var_8],', '0Ch']
cmp ['eax,', '[ebp+var_4]']
jge ['short', 'loc_454A']
cmp ['[ebp+arg_0],', '0']
jl ['short', 'loc_453B']
mov ['[ebp+var_18],', '2']
jmp ['short', 'loc_4542']
mov ['[ebp+var_18],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_456F']
imul ['edx,', '[ebp+var_4],', '0Ch']
cmp ['edx,', '[ebp+var_8]']
jge ['short', 'loc_456F']
cmp ['[ebp+arg_4],', '0']
jl ['short', 'loc_4562']
mov ['[ebp+var_1C],', '0FFFFFFFFh']
jmp ['short', 'loc_4569']
mov ['[ebp+var_1C],', '1']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_psh_glyph_load_points proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+14h]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_45D9']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '28h']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_C],', '0']
jbe ['short', 'loc_462B']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+18h],', '0']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_4612']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+20h],', 'edx']
jmp ['short', 'loc_4629']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[eax+1Ch],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[eax+20h],', 'edx']
jmp ['short', 'loc_45BE']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_psh_glyph_save_points proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_4681']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax]']
jnb ['short', 'loc_46F5']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_46A2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+24h]']
mov ['[eax+edx*8],', 'ecx']
jmp ['short', 'loc_46B2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['ecx,', '[ecx+24h]']
mov ['[eax+edx*8+4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
and ['eax,', '10h']
jz ['short', 'loc_46EA']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_46CC']
mov ['[ebp+var_14],', '20h']
jmp ['short', 'loc_46D3']
mov ['[ebp+var_14],', '40h']
movsx ['ecx,', 'byte', 'ptr', '[ebp+var_14]']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
or ['eax,', 'ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '28h']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_4678']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_psh_glyph_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
push ['80h']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_10],', 'edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
push ['edx']
push ['0']
push ['28h']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_4795']
lea ['edx,', '[ebp+var_8]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
push ['0']
push ['8']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_479A']
jmp ['$Exit$26']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'word', 'ptr', '[edx+2]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'word', 'ptr', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4],', 'eax']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_47DD']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ecx+4]']
jnb ['loc_48B2']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_1C]']
movsx ['eax,', 'word', 'ptr', '[ecx+edx*2]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_28],', 'ecx']
imul ['edx,', '[ebp+var_14],', '28h']
add ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_24]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx+4],', 'edx']
cmp ['[ebp+var_28],', '0']
jle ['short', 'loc_489E']
imul ['eax,', '[ebp+var_14],', '28h']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_2C],', 'eax']
imul ['ecx,', '[ebp+var_18],', '28h']
mov ['edx,', '[ebp+var_20]']
lea ['eax,', '[edx+ecx-28h]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_24]']
mov ['[edx+8],', 'eax']
jmp ['short', 'loc_4851']
mov ['ecx,', '[ebp+var_28]']
sub ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_28],', '1']
jle ['short', 'loc_4891']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '28h']
mov ['eax,', '28h']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_2C]']
mov ['[eax+ecx+4],', 'edx']
mov ['ecx,', '28h']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_2C]']
mov ['[edx+ecx],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '28h']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_24]']
mov ['[edx+8],', 'eax']
jmp ['short', 'loc_4848']
imul ['ecx,', '[ebp+var_14],', '28h']
add ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '8']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
jmp ['loc_47D4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_3C],', '0']
jmp ['short', 'loc_48E5']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '1']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '28h']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '[eax]']
jnb ['loc_4A24']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+var_30]']
cdq
mov ['ecx,', '28h']
idiv ['ecx']
mov ['[ebp+var_40],', 'eax']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+4]']
sub ['eax,', '[ebp+var_30]']
cdq
mov ['ecx,', '28h']
idiv ['ecx']
mov ['[ebp+var_44],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_3C]']
movsx ['edx,', 'byte', 'ptr', '[eax+ecx]']
and ['edx,', '1']
jnz ['short', 'loc_4936']
mov ['eax,', '[ebp+var_34]']
mov ['dword', 'ptr', '[eax+0Ch],', '1']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_40]']
mov ['esi,', '[ebp+var_38]']
mov ['ecx,', '[edx+ecx*8]']
sub ['ecx,', '[esi+eax*8]']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_40]']
mov ['esi,', '[ebp+var_38]']
mov ['edx,', '[eax+edx*8+4]']
sub ['edx,', '[esi+ecx*8+4]']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['_psh_compute_dir']
add ['esp,', '8']
mov ['edx,', '[ebp+var_34]']
mov ['[edx+14h],', 'al']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+var_3C]']
mov ['esi,', '[ebp+var_38]']
mov ['eax,', '[ecx+eax*8]']
sub ['eax,', '[esi+edx*8]']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_3C]']
mov ['esi,', '[ebp+var_38]']
mov ['ecx,', '[edx+ecx*8+4]']
sub ['ecx,', '[esi+eax*8+4]']
mov ['[ebp+var_54],', 'ecx']
mov ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_psh_compute_dir']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+15h],', 'al']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+0Ch]']
and ['eax,', '1']
jz ['short', 'loc_49D6']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+0Ch]']
or ['edx,', '2']
mov ['eax,', '[ebp+var_34]']
mov ['[eax+0Ch],', 'edx']
jmp ['short', 'loc_4A1F']
mov ['ecx,', '[ebp+var_34]']
movsx ['edx,', 'byte', 'ptr', '[ecx+14h]']
mov ['eax,', '[ebp+var_34]']
movsx ['ecx,', 'byte', 'ptr', '[eax+15h]']
cmp ['edx,', 'ecx']
jnz ['short', 'loc_4A1F']
mov ['edx,', '[ebp+var_34]']
movsx ['eax,', 'byte', 'ptr', '[edx+15h]']
cmp ['eax,', '4']
jnz ['short', 'loc_4A10']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['_ft_corner_is_flat']
add ['esp,', '10h']
test ['eax,', 'eax']
jz ['short', 'loc_4A1F']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx+0Ch]']
or ['eax,', '2']
mov ['ecx,', '[ebp+var_34]']
mov ['[ecx+0Ch],', 'eax']
jmp ['loc_48D3']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+18h],', 'edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_psh_glyph_load_points']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_psh_glyph_compute_inflections']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '24h']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', '[edx+ecx+28h]']
push ['eax']
mov ['ecx,', '24h']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_8]']
lea ['ecx,', '[eax+edx+1Ch]']
push ['ecx']
mov ['edx,', '24h']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[ecx+eax+10h]']
push ['edx']
mov ['eax,', '28h']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[edx+ecx+1Ch]']
push ['eax']
call ['_psh_hint_table_init']
add ['esp,', '14h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_4AA7']
jmp ['short', '$Exit$26']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '24h']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_8]']
lea ['ecx,', '[eax+edx+28h]']
push ['ecx']
mov ['edx,', '24h']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_8]']
lea ['ecx,', '[eax+edx+1Ch]']
push ['ecx']
mov ['edx,', '24h']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_8]']
lea ['ecx,', '[eax+edx+10h]']
push ['ecx']
mov ['edx,', '28h']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
lea ['ecx,', '[eax+edx+1Ch]']
push ['ecx']
call ['_psh_hint_table_init']
add ['esp,', '14h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN25']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN24']
dd ['offset', '$LN23']
db ['0Eh', 'dup(0CCh)']
endp
_psh_glyph_compute_extrema proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_4B79']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ecx+4]']
jnb ['loc_4C74']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+edx*8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+eax*8+4],', '0']
jnz ['short', 'loc_4BA9']
jmp ['short', 'loc_4B70']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_8]']
jnz ['short', 'loc_4BCA']
jmp ['$Skip$39']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax+1Ch]']
cmp ['edx,', '[ecx+1Ch]']
jz ['short', 'loc_4BB5']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_4C00']
jmp ['short', '$Next$40']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ecx+1Ch]']
cmp ['eax,', '[edx+1Ch]']
jz ['short', 'loc_4BED']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ecx+1Ch]']
cmp ['eax,', '[edx+1Ch]']
jge ['short', 'loc_4C2E']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ecx+1Ch]']
cmp ['eax,', '[edx+1Ch]']
jge ['short', 'loc_4C2C']
jmp ['short', '$Extremum$41']
jmp ['short', 'loc_4C5C']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ecx+1Ch]']
cmp ['eax,', '[edx+1Ch]']
jle ['short', 'loc_4C5C']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+10h]']
or ['edx,', '40h']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_14]']
jnz ['short', '$Extremum$41']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_4BE7']
jmp ['loc_4B70']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_4C86']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[edx]']
jnb ['loc_4D5F']
imul ['ecx,', '[ebp+var_4],', '28h']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+8]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+10h]']
and ['eax,', '40h']
jz ['short', 'loc_4CFC']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_18]']
jnz ['short', 'loc_4CCD']
jmp ['$Skip$39']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ecx+20h]']
cmp ['eax,', '[edx+20h]']
jz ['short', 'loc_4CB8']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_18]']
jnz ['short', 'loc_4CEE']
jmp ['short', '$Skip$39']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ecx+20h]']
cmp ['eax,', '[edx+20h]']
jz ['short', 'loc_4CDB']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ecx+20h]']
cmp ['eax,', '[edx+20h]']
jge ['short', 'loc_4D2C']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ecx+20h]']
cmp ['eax,', '[edx+20h]']
jle ['short', 'loc_4D2C']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10h]']
or ['edx,', '80h']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+10h],', 'edx']
jmp ['short', '$Skip$39']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ecx+20h]']
cmp ['eax,', '[edx+20h]']
jle ['short', '$Skip$39']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ecx+20h]']
cmp ['eax,', '[edx+20h]']
jge ['short', '$Skip$39']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10h]']
or ['edx,', '100h']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+10h],', 'edx']
jmp ['loc_4C7D']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_psh_hint_table_find_strong_points proc	near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4DA0']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '1']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '28h']
mov ['[ebp+arg_4],', 'edx']
cmp ['[ebp+arg_8],', '0']
jbe ['loc_50B2']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+10h]']
and ['eax,', '10h']
jz ['short', 'loc_4DC7']
jmp ['short', 'loc_4D8E']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+14h]']
cmp ['edx,', '[ebp+arg_10]']
jz ['short', 'loc_4DE3']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+14h]']
mov ['edx,', '[ebp+arg_10]']
neg ['edx']
cmp ['ecx,', 'edx']
jnz ['short', 'loc_4DEF']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+14h]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_4E15']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+15h]']
cmp ['eax,', '[ebp+arg_10]']
jz ['short', 'loc_4E0B']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+15h]']
mov ['eax,', '[ebp+arg_10]']
neg ['eax']
cmp ['edx,', 'eax']
jnz ['short', 'loc_4E15']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+15h]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0']
jz ['loc_4F22']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+arg_10]']
jnz ['short', 'loc_4E9D']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_4E39']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_4E98']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[eax]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+arg_C]']
jge ['short', 'loc_4E96']
mov ['eax,', '[ebp+var_1C]']
neg ['eax']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_4E96']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
or ['edx,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
or ['edx,', '200h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+18h],', 'edx']
jmp ['short', 'loc_4E98']
jmp ['short', 'loc_4E30']
jmp ['loc_4F1D']
mov ['eax,', '[ebp+arg_10]']
neg ['eax']
cmp ['[ebp+var_C],', 'eax']
jnz ['short', 'loc_4F1D']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_4EB9']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_4F1D']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_24]']
sub ['ecx,', '[edx+4]']
mov ['[ebp+var_28],', 'ecx']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_4F1B']
mov ['ecx,', '[ebp+var_28]']
neg ['ecx']
cmp ['ecx,', '[ebp+arg_C]']
jge ['short', 'loc_4F1B']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+10h]']
or ['eax,', '10h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+10h]']
or ['eax,', '400h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_24]']
mov ['[edx+18h],', 'eax']
jmp ['short', 'loc_4F1D']
jmp ['short', 'loc_4EB0']
jmp ['loc_50AD']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
and ['edx,', '40h']
jz ['loc_50AD']
cmp ['[ebp+arg_10],', '2']
jnz ['short', 'loc_4F47']
mov ['[ebp+var_30],', '80h']
mov ['[ebp+var_34],', '100h']
jmp ['short', 'loc_4F55']
mov ['[ebp+var_30],', '100h']
mov ['[ebp+var_34],', '80h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+10h]']
and ['ecx,', '[ebp+var_30]']
jz ['short', 'loc_4FD5']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_4F72']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_4FD0']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_4FCE']
mov ['ecx,', '[ebp+var_3C]']
neg ['ecx']
cmp ['ecx,', '[ebp+arg_C]']
jge ['short', 'loc_4FCE']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+10h]']
or ['eax,', '200h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_38]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
or ['edx,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+10h],', 'edx']
jmp ['short', 'loc_4FD0']
jmp ['short', 'loc_4F69']
jmp ['loc_5057']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
and ['edx,', '[ebp+var_34]']
jz ['short', 'loc_5057']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_4FF2']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_5057']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_40]']
sub ['eax,', '[ecx+4]']
mov ['[ebp+var_44],', 'eax']
mov ['edx,', '[ebp+var_44]']
cmp ['edx,', '[ebp+arg_C]']
jge ['short', 'loc_5055']
mov ['eax,', '[ebp+var_44]']
neg ['eax']
cmp ['eax,', '[ebp+arg_C]']
jge ['short', 'loc_5055']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
or ['edx,', '400h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_40]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+10h]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+10h],', 'ecx']
jmp ['short', 'loc_5057']
jmp ['short', 'loc_4FE9']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jnz ['short', 'loc_50AD']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_5072']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_50AD']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax]']
jl ['short', 'loc_50AB']
mov ['edx,', '[ebp+var_48]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_48]']
add ['eax,', '[ecx+4]']
cmp ['[ebp+var_10],', 'eax']
jg ['short', 'loc_50AB']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_48]']
mov ['[edx+18h],', 'eax']
jmp ['short', 'loc_50AD']
jmp ['short', 'loc_5069']
jmp ['loc_4D8E']
pop ['edi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_psh_glyph_find_strong_points proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
imul ['eax,', '[ebp+arg_4],', '28h']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+1Ch]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_5115']
mov ['[ebp+var_40],', '1']
jmp ['short', 'loc_511C']
mov ['[ebp+var_40],', '2']
mov ['eax,', '[ebp+var_40]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
imul ['eax,', '[ebp+arg_4],', '0CCh']
lea ['ecx,', '[edx+eax+4]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0C4h]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
push ['20h']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '1Eh']
jle ['short', 'loc_5160']
mov ['[ebp+var_20],', '1Eh']
cmp ['[ebp+var_C],', '1']
jbe ['loc_5238']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx],', '0']
jbe ['loc_5238']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
cmp ['edx,', '[ecx]']
jbe ['short', 'loc_518D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_44],', 'ecx']
jmp ['short', 'loc_5196']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '10h']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_51B9']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_C],', '1']
jbe ['short', 'loc_5238']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+0Ch]']
cmp ['ecx,', '[eax]']
jbe ['short', 'loc_51D6']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_48],', 'eax']
jmp ['short', 'loc_51DF']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_48],', 'edx']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_28],', '0']
jle ['short', 'loc_522D']
imul ['edx,', '[ebp+var_10],', '28h']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+8]']
mov ['[ebp+var_2C],', 'edx']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_psh_hint_table_activate_mask']
add ['esp,', '8']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_psh_hint_table_find_strong_points']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_10],', 'edx']
jmp ['loc_51A7']
cmp ['[ebp+var_C],', '1']
jnz ['short', 'loc_5281']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_psh_hint_table_activate_mask']
add ['esp,', '8']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_psh_hint_table_find_strong_points']
add ['esp,', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_3C],', 'ecx']
jmp ['short', 'loc_52A6']
mov ['edx,', '[ebp+var_38]']
sub ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '28h']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_38],', '0']
jbe ['short', 'loc_52D1']
mov ['ecx,', '[ebp+var_3C]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jz ['short', 'loc_52CF']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[edx+10h]']
and ['eax,', '10h']
jnz ['short', 'loc_52CF']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[ecx+10h]']
or ['edx,', '10h']
mov ['eax,', '[ebp+var_3C]']
mov ['[eax+10h],', 'edx']
jmp ['short', 'loc_5294']
pop ['edi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_psh_glyph_find_blue_points proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_532C']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '28h']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_C],', '0']
jbe ['loc_54EC']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+14h]']
cmp ['ecx,', '2']
jz ['short', 'loc_5368']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+14h]']
cmp ['eax,', '0FFFFFFFEh']
jz ['short', 'loc_5368']
mov ['ecx,', '[ebp+var_14]']
movsx ['edx,', 'byte', 'ptr', '[ecx+15h]']
cmp ['edx,', '2']
jz ['short', 'loc_5368']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax+15h]']
cmp ['ecx,', '0FFFFFFFEh']
jz ['short', 'loc_5368']
jmp ['short', 'loc_531A']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
and ['eax,', '10h']
jz ['short', 'loc_5375']
jmp ['short', 'loc_531A']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_53A9']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '20h']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_542C']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+81Ch]']
neg ['eax']
cmp ['[ebp+var_1C],', 'eax']
jge ['short', 'loc_53CD']
jmp ['short', 'loc_542C']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+81Ch]']
cmp ['[ebp+var_18],', 'edx']
jg ['short', 'loc_5427']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+820h]']
test ['edx,', 'edx']
jnz ['short', 'loc_53FD']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[eax+818h]']
jg ['short', 'loc_5427']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
mov ['[edx+24h],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
or ['eax,', '10h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+10h]']
or ['eax,', '20h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+10h],', 'eax']
jmp ['loc_5397']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '204h']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
shl ['edx,', '5']
mov ['eax,', '[ebp+var_4]']
lea ['ecx,', '[eax+edx-1Ch]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_5464']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '20h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_54E7']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
sub ['edx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+81Ch]']
neg ['ecx']
cmp ['[ebp+var_20],', 'ecx']
jge ['short', 'loc_5488']
jmp ['short', 'loc_54E7']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+0Ch]']
sub ['ecx,', '[eax+81Ch]']
cmp ['[ebp+var_18],', 'ecx']
jl ['short', 'loc_54E2']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+820h]']
test ['eax,', 'eax']
jnz ['short', 'loc_54B8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ecx+818h]']
jge ['short', 'loc_54E2']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
or ['ecx,', '10h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+10h],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+10h]']
or ['ecx,', '20h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+10h],', 'ecx']
jmp ['loc_5452']
jmp ['loc_531A']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_psh_glyph_interpolate_strong_points proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
imul ['edx,', '[ebp+arg_4],', '0CCh']
lea ['eax,', '[ecx+edx+4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0C4h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_5557']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '28h']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_C],', '0']
jbe ['loc_565A']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jz ['loc_5655']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+10h]']
and ['eax,', '200h']
jz ['short', 'loc_5592']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+8]']
mov ['[ecx+24h],', 'eax']
jmp ['loc_5646']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+10h]']
and ['edx,', '400h']
jz ['short', 'loc_55B7']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+0Ch]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+24h],', 'ecx']
jmp ['loc_5646']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ecx+1Ch]']
sub ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jg ['short', 'loc_55E9']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_14]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+24h],', 'eax']
jmp ['short', 'loc_5646']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[eax+4]']
jl ['short', 'loc_5620']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', '[edx+8]']
mov ['eax,', '[ebp+var_14]']
add ['esi,', '[eax+0Ch]']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[edx+4]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['esi,', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+24h],', 'esi']
jmp ['short', 'loc_5646']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+24h],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+10h]']
or ['ecx,', '20h']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+10h],', 'ecx']
jmp ['loc_5545']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_psh_glyph_interpolate_normal_points proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_8C]']
mov ['ecx,', '23h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
imul ['edx,', '[ebp+arg_4],', '0CCh']
lea ['eax,', '[ecx+edx+4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0C4h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_60],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
imul ['edx,', '[ecx],', '28h']
add ['edx,', '[ebp+var_64]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_64]']
mov ['[ebp+var_6C],', 'eax']
jmp ['short', 'loc_56F8']
mov ['ecx,', '[ebp+var_6C]']
add ['ecx,', '28h']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
cmp ['edx,', '[ebp+var_68]']
jnb ['short', 'loc_5716']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+10h]']
and ['ecx,', '10h']
jz ['short', 'loc_5714']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
jmp ['short', 'loc_56EF']
cmp ['[ebp+var_60],', '0']
jnz ['short', 'loc_5721']
jmp ['loc_5A71']
cmp ['[ebp+var_60],', '10h']
ja ['short', 'loc_572F']
lea ['eax,', '[ebp+var_58]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_5757']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_60]']
push ['edx']
push ['0']
push ['4']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_74],', '0']
jz ['short', 'loc_5757']
jmp ['loc_5A71']
mov ['[ebp+var_60],', '0']
mov ['ecx,', '[ebp+var_64]']
mov ['[ebp+var_6C],', 'ecx']
jmp ['short', 'loc_576F']
mov ['edx,', '[ebp+var_6C]']
add ['edx,', '28h']
mov ['[ebp+var_6C],', 'edx']
mov ['eax,', '[ebp+var_6C]']
cmp ['eax,', '[ebp+var_68]']
jnb ['loc_57FF']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ecx+10h]']
and ['edx,', '10h']
jnz ['short', 'loc_5788']
jmp ['short', 'loc_5766']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_7C],', 'edx']
jmp ['short', 'loc_579F']
mov ['eax,', '[ebp+var_7C]']
sub ['eax,', '4']
mov ['[ebp+var_7C],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
cmp ['ecx,', '[ebp+var_14]']
jbe ['short', 'loc_57E0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '-1']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ecx+eax]']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[edx+1Ch]']
cmp ['ecx,', '[eax+1Ch]']
jg ['short', 'loc_57C2']
jmp ['short', 'loc_57E0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '-1']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_7C]']
mov ['esi,', '[ebp+var_7C]']
mov ['eax,', '[esi+eax]']
mov ['[ecx+edx],', 'eax']
jmp ['short', 'loc_5796']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[ebp+var_6C]']
mov ['[eax+edx],', 'ecx']
mov ['edx,', '[ebp+var_60]']
add ['edx,', '1']
mov ['[ebp+var_60],', 'edx']
jmp ['loc_5766']
mov ['eax,', '[ebp+var_64]']
mov ['[ebp+var_6C],', 'eax']
jmp ['short', 'loc_5810']
mov ['ecx,', '[ebp+var_6C]']
add ['ecx,', '28h']
mov ['[ebp+var_6C],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
cmp ['edx,', '[ebp+var_68]']
jnb ['loc_5A4E']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+10h]']
and ['ecx,', '10h']
jz ['short', 'loc_5829']
jmp ['short', 'loc_5807']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx+0Ch]']
and ['eax,', '2']
jz ['short', 'loc_587B']
mov ['ecx,', '[ebp+var_6C]']
movsx ['edx,', 'byte', 'ptr', '[ecx+14h]']
cmp ['edx,', '4']
jz ['short', 'loc_5852']
mov ['eax,', '[ebp+var_6C]']
movsx ['ecx,', 'byte', 'ptr', '[eax+14h]']
mov ['edx,', '[ebp+var_6C]']
movsx ['eax,', 'byte', 'ptr', '[edx+15h]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_5854']
jmp ['short', 'loc_5807']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ecx+10h]']
and ['edx,', '40h']
jnz ['short', 'loc_586C']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '4']
jnz ['short', 'loc_586C']
jmp ['short', 'loc_5807']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx+0Ch]']
and ['eax,', '0FFFFFFFDh']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ecx+0Ch],', 'eax']
mov ['[ebp+var_88],', '0']
jmp ['short', 'loc_5896']
mov ['edx,', '[ebp+var_88]']
add ['edx,', '1']
mov ['[ebp+var_88],', 'edx']
mov ['eax,', '[ebp+var_88]']
cmp ['eax,', '[ebp+var_60]']
jnb ['short', 'loc_58BC']
mov ['ecx,', '[ebp+var_88]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx*4]']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[eax+1Ch]']
cmp ['edx,', '[ecx+1Ch]']
jle ['short', 'loc_58BA']
jmp ['short', 'loc_58BC']
jmp ['short', 'loc_5887']
cmp ['[ebp+var_88],', '0']
jnz ['short', 'loc_5909']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_84],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[edx+1Ch]']
sub ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+var_84]']
add ['eax,', '[edx+24h]']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ecx+24h],', 'eax']
jmp ['loc_5A3A']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+edx*4-4]']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_88],', 'edx']
jmp ['short', 'loc_5933']
mov ['eax,', '[ebp+var_88]']
sub ['eax,', '1']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0']
jbe ['short', 'loc_5958']
mov ['ecx,', '[ebp+var_88]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx*4-4]']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[eax+1Ch]']
cmp ['edx,', '[ecx+1Ch]']
jge ['short', 'loc_5956']
jmp ['short', 'loc_5958']
jmp ['short', 'loc_5924']
mov ['eax,', '[ebp+var_88]']
cmp ['eax,', '[ebp+var_60]']
jnz ['short', 'loc_599D']
mov ['ecx,', '[ebp+var_88]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+ecx*4-4]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[edx+1Ch]']
sub ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+var_80]']
add ['eax,', '[edx+24h]']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ecx+24h],', 'eax']
jmp ['loc_5A3A']
mov ['edx,', '[ebp+var_88]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_84],', 'ecx']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_80]']
mov ['edx,', '[ebp+var_8C]']
cmp ['edx,', '[ecx+1Ch]']
jnz ['short', 'loc_59D7']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+var_80]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+24h],', 'edx']
jmp ['short', 'loc_5A3A']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[ebp+var_8C]']
cmp ['ecx,', '[eax+1Ch]']
jnz ['short', 'loc_59F9']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[eax+24h]']
mov ['[edx+24h],', 'ecx']
jmp ['short', 'loc_5A3A']
mov ['edx,', '[ebp+var_84]']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[edx+1Ch]']
sub ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_84]']
mov ['eax,', '[ebp+var_80]']
mov ['ecx,', '[edx+24h]']
sub ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+var_80]']
mov ['eax,', '[ebp+var_8C]']
sub ['eax,', '[edx+1Ch]']
push ['eax']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_80]']
add ['eax,', '[ecx+24h]']
mov ['edx,', '[ebp+var_6C]']
mov ['[edx+24h],', 'eax']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+10h]']
or ['ecx,', '20h']
mov ['edx,', '[ebp+var_6C]']
mov ['[edx+10h],', 'ecx']
jmp ['loc_5807']
lea ['eax,', '[ebp+var_58]']
cmp ['[ebp+var_14],', 'eax']
jz ['short', 'loc_5A71']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_14],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_5A56']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN50']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '8Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN49']
dd ['offset', '$LN47']
dd ['0FFFFFF8Ch,', '4']
dd ['offset', '$LN48']
db ['4', 'dup(0CCh)']
endp
_psh_glyph_interpolate_other_points proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
imul ['edx,', '[ebp+arg_4],', '0CCh']
lea ['eax,', '[ecx+edx+4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0C4h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0C8h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_5B3D']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_14],', '0']
jbe ['loc_5D8C']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_10]']
imul ['edx,', '[ecx+4],', '28h']
add ['edx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'edx']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_5B7B']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '28h']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_20]']
jnb ['short', 'loc_5BA5']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+10h]']
and ['ecx,', '20h']
jz ['short', 'loc_5BA3']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_5B9A']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_5B72']
cmp ['[ebp+var_28],', '2']
jnb ['short', 'loc_5C13']
cmp ['[ebp+var_28],', '1']
jnz ['short', 'loc_5BCF']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+24h]']
sub ['edx,', 'eax']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_5BE0']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '28h']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_20]']
jnb ['short', 'loc_5C0E']
mov ['eax,', '[ebp+var_24]']
cmp ['eax,', '[ebp+var_1C]']
jz ['short', 'loc_5C0C']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+24h],', 'eax']
jmp ['short', 'loc_5BD7']
jmp ['$Next_Contour$37']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
cmp ['edx,', '[ebp+var_18]']
jnz ['short', 'loc_5C2F']
jmp ['$Next_Contour$37']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+10h]']
and ['ecx,', '20h']
jnz ['short', 'loc_5C3C']
jmp ['short', 'loc_5C44']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_5C19']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+10h]']
and ['eax,', '20h']
jz ['short', 'loc_5C5A']
jmp ['short', 'loc_5C5C']
jmp ['short', 'loc_5C44']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ecx+1Ch]']
cmp ['eax,', '[edx+1Ch]']
jg ['short', 'loc_5C96']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+1Ch]']
sub ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+24h]']
sub ['edx,', '[ebp+var_34]']
mov ['[ebp+var_38],', 'edx']
jmp ['short', 'loc_5CC0']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+24h]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+1Ch]']
sub ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+24h]']
sub ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_48],', '10000h']
cmp ['[ebp+var_30],', '0']
jle ['short', 'loc_5CE0']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
sub ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_40],', 'edx']
cmp ['[ebp+var_40],', '0']
jg ['short', 'loc_5D19']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['eax,', '[ebp+var_34]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_5D57']
mov ['edx,', '[ebp+var_40]']
cmp ['edx,', '[ebp+var_30]']
jl ['short', 'loc_5D41']
mov ['esi,', '[ebp+var_34]']
add ['esi,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
sub ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['esi,', 'eax']
mov ['[ebp+var_44],', 'esi']
jmp ['short', 'loc_5D57']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
call ['_FT_MulFix_i386']
add ['esp,', '8']
add ['eax,', '[ebp+var_34]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_44]']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_20]']
jnz ['loc_5CE9']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_18]']
jnz ['loc_5C19']
jmp ['loc_5B2B']
pop ['edi']
pop ['esi']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_ps_hinter_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+70h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+8Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0Ch']
push ['edx']
call ['_ps_hints_done']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_ps_hinter_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '0Ch']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0Ch']
push ['ecx']
call ['_ps_hints_init']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '64h']
push ['edx']
call ['_psh_globals_funcs_init']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '70h']
push ['eax']
call ['_t1_hints_funcs_init']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+70h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8Ch']
push ['eax']
call ['_t2_hints_funcs_init']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+8Ch],', 'edx']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_pshinter_get_globals_funcs proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '64h']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_pshinter_get_t1_funcs proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '70h']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_pshinter_get_t2_funcs proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8Ch']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '_pshinter_get_t1_funcs']
dd ['offset', '_pshinter_get_t2_funcs']
public ['_pshinter_module_class']
dd ['offset', '$SG8244+28h']
dd ['offset', '$SG9506']
dd ['10000h,', '20000h']
dd ['offset', '_pshinter_interface']
dd ['offset', '_ps_hinter_init']
dd ['offset', '_ps_hinter_done']
dd ['0']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_memset:near']
extrn ['__imp__memmove:near']
extrn ['_FT_MulDiv:near']
extrn ['_FT_DivFix:near']
extrn ['_FT_RoundFix:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_realloc:near']
extrn ['_ft_mem_free:near']
extrn ['_FT_Message:near']
extrn ['_FT_Throw:near']
extrn ['_ft_corner_orientation:near']
extrn ['_ft_corner_is_flat:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['_ft_trace_levels:near']
extrn ['___security_cookie:near']
end

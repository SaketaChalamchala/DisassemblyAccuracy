endp
_bdf_load_font	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_1C],', '0']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
push ['2203Ch']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1AEC']
jmp ['$Exit$65']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_1B01']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_1B08']
mov ['[ebp+var_24],', 'offset', '__bdf_opts']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_24]']
mov ['[ecx+24h],', 'edx']
mov ['eax,', '7FFFh']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+0Ch],', 'ax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+22038h],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '22028h']
push ['edx']
call ['__bdf_list_init']
add ['esp,', '8']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['offset', '__bdf_parse_start']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['__bdf_readstream']
add ['esp,', '10h']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1B66']
jmp ['$Fail$66']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['loc_1EAC']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
cmp ['dword', 'ptr', '[edx+1Ch],', '8']
jz ['short', 'loc_1B93']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['cx,', '[ecx+4]']
mov ['[eax+20h],', 'cx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '[eax+34h]']
add ['eax,', '[edx+40h]']
mov ['ecx,', '[ebp+var_10]']
cmp ['[ecx+4],', 'eax']
jz ['short', 'loc_1BFB']
mov ['edx,', '4']
imul ['eax,', 'edx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_1BE5']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[edx+34h]']
add ['edx,', '[ecx+40h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
push ['ecx']
push ['offset', '$SG8628']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_1BAD']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '1']
mov ['[ecx+44084h],', 'dx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+24h]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['loc_1EAC']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
cmp ['dword', 'ptr', '[eax+34h],', '0']
ja ['short', 'loc_1C26']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
cmp ['dword', 'ptr', '[edx+40h],', '0']
jbe ['loc_1EAC']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'word', 'ptr', '[eax+10h]']
mov ['edx,', '[ebp+var_10]']
movsx ['eax,', 'word', 'ptr', '[edx+0Ch]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+4]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_1CAE']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_1C7E']
mov ['edx,', '[ebp+var_10]']
movsx ['eax,', 'word', 'ptr', '[edx+10h]']
mov ['ecx,', '[ebp+var_10]']
movsx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
sub ['eax,', 'edx']
push ['eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[ecx+4]']
push ['edx']
push ['offset', '$SG8636']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_1C44']
mov ['ecx,', '[ebp+var_10]']
movsx ['edx,', 'word', 'ptr', '[ecx+10h]']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'word', 'ptr', '[eax+0Ch]']
sub ['edx,', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['[ecx+4],', 'dx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '1']
mov ['[eax+44084h],', 'cx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
movsx ['ecx,', 'word', 'ptr', '[eax+8]']
mov ['edx,', '[ebp+var_10]']
movsx ['eax,', 'word', 'ptr', '[edx+0Ch]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_1D1B']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_1CF4']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'word', 'ptr', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
movsx ['ecx,', 'word', 'ptr', '[eax+8]']
push ['ecx']
push ['offset', '$SG8643']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_1CC3']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_10]']
mov ['ax,', '[edx+0Ch]']
mov ['[ecx+8],', 'ax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '1']
mov ['[edx+44084h],', 'ax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
movsx ['eax,', 'word', 'ptr', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_10]']
movsx ['edx,', 'word', 'ptr', '[ecx+12h]']
cmp ['eax,', 'edx']
jz ['short', 'loc_1D88']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_1D61']
mov ['edx,', '[ebp+var_10]']
movsx ['eax,', 'word', 'ptr', '[edx+12h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
movsx ['eax,', 'word', 'ptr', '[edx+0Ch]']
push ['eax']
push ['offset', '$SG8649']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1D30']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[ebp+var_10]']
mov ['dx,', '[ecx+12h]']
mov ['[eax+0Ch],', 'dx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '1']
mov ['[ecx+44084h],', 'dx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
movsx ['edx,', 'word', 'ptr', '[ecx+0Eh]']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'word', 'ptr', '[eax+14h]']
cmp ['edx,', 'ecx']
jz ['short', 'loc_1E08']
mov ['edx,', '4']
imul ['eax,', 'edx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_1DCE']
mov ['ecx,', '[ebp+var_10]']
movsx ['edx,', 'word', 'ptr', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
movsx ['edx,', 'word', 'ptr', '[ecx+0Eh]']
push ['edx']
push ['offset', '$SG8655']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_1D9D']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '[ebp+var_10]']
mov ['cx,', '[eax+14h]']
mov ['[edx+0Eh],', 'cx']
mov ['edx,', '[ebp+var_10]']
movsx ['eax,', 'word', 'ptr', '[edx+14h]']
neg ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+0Ah],', 'ax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '1']
mov ['[ecx+44084h],', 'dx']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'word', 'ptr', '[eax+12h]']
mov ['edx,', '[ebp+var_10]']
movsx ['eax,', 'word', 'ptr', '[edx+14h]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
movzx ['edx,', 'word', 'ptr', '[eax+6]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_1E7E']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_1E60']
mov ['edx,', '[ebp+var_10]']
movsx ['eax,', 'word', 'ptr', '[edx+12h]']
mov ['ecx,', '[ebp+var_10]']
movsx ['edx,', 'word', 'ptr', '[ecx+14h]']
add ['eax,', 'edx']
push ['eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[ecx+6]']
push ['edx']
push ['offset', '$SG8662']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_1E26']
mov ['ecx,', '[ebp+var_10]']
movsx ['edx,', 'word', 'ptr', '[ecx+12h]']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'word', 'ptr', '[eax+14h]']
add ['edx,', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['[ecx+6],', 'dx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
and ['eax,', '1000h']
jz ['short', 'loc_1EAC']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_1EA8']
push ['offset', '$SG8669']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_1E8A']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
and ['edx,', '1']
jz ['short', 'loc_1F2C']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
and ['ecx,', '20h']
jnz ['short', 'loc_1EF7']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['offset', '$SG8672']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8673']
push ['9BBh']
push ['0B9h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B9h']
mov ['[ebp+var_1C],', 'eax']
jmp ['$Exit$65']
jmp ['short', 'loc_1F2C']
mov ['eax,', '[ebp+var_8]']
push ['eax']
push ['offset', '$SG8675']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8676']
push ['9C2h']
push ['0BAh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0BAh']
mov ['[ebp+var_1C],', 'eax']
jmp ['$Exit$65']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx+20h],', '0']
jz ['short', 'loc_1FAF']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[eax+44088h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
cmp ['dword', 'ptr', '[eax+58h],', '0']
jbe ['short', 'loc_1FAD']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[eax+54h]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[eax+58h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[eax+58h]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+54h],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1F97']
jmp ['$Fail$66']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['edx,', '[eax+58h]']
mov ['eax,', '[ecx+54h]']
mov ['byte', 'ptr', '[eax+edx],', '0']
jmp ['short', 'loc_1FCF']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_1FCF']
push ['offset', '$SG8684']
push ['9D7h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+20h]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2013']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '22028h']
push ['ecx']
call ['__bdf_list_done']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_10],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_1FF8']
mov ['eax,', '[ebp+var_1C]']
jmp ['short', 'loc_2050']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['_bdf_free_font']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+20h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_202D']
jmp ['short', '$Exit$65']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN64']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN63']
dd ['offset', '$LN61']
dd ['0FFFFFFE4h,', '4']
dd ['offset', '$LN62']
db ['0Bh', 'dup(0CCh)']
endp
_bdf_free_font	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_20CA']
jmp ['loc_2459']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44088h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_20D6']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+80h],', '0']
jz ['short', 'loc_213E']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+80h]']
push ['ecx']
call ['_hash_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+80h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+80h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_2117']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+54h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_213E']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2171']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+48h]']
jnb ['short', 'loc_21C6']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
cmp ['dword', 'ptr', '[edx+eax+4],', '1']
jnz ['short', 'loc_21C4']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
mov ['eax,', '[edx+eax+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['dword', 'ptr', '[ecx+edx+0Ch],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_218F']
jmp ['short', 'loc_2168']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+50h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_21C6']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_220B']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '24h']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+34h]']
jnb ['short', 'loc_2258']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_2216']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_2235']
jmp ['short', 'loc_21F9']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_227C']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '24h']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+40h]']
jnb ['short', 'loc_22C9']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2287']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+18h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_22A6']
jmp ['short', 'loc_226A']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+38h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_22C9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+44h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_22EA']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+68h]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_232F']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '24h']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+70h]']
jnb ['short', 'loc_237C']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_233A']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_2359']
jmp ['short', 'loc_231D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+68h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_237C']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '44094h']
push ['eax']
call ['_hash_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4408Ch]']
mov ['[ebp+var_4],', 'edx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_23D9']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+44090h]']
jnb ['short', 'loc_2432']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_23E7']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+4],', '1']
jnz ['short', 'loc_2430']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_240F']
jmp ['short', 'loc_23C7']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4408Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4408Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2432']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_bdf_get_property proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_248C']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2490']
xor ['eax,', 'eax']
jmp ['short', 'loc_24E9']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '44094h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_hash_lookup']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_24B3']
xor ['eax,', 'eax']
jmp ['short', 'loc_24E9']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', 'ds:__num_bdf_properties']
jb ['short', 'loc_24DE']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', 'ds:__num_bdf_properties']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
add ['eax,', '[ecx+4408Ch]']
jmp ['short', 'loc_24E9']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
add ['eax,', 'offset', '__bdf_properties']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_bdf_get_font_property proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_252B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+48h],', '0']
jz ['short', 'loc_252B']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_252B']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_252F']
xor ['eax,', 'eax']
jmp ['short', 'loc_256C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+80h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_hash_lookup']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2562']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+50h]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2569']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_hash_bucket	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_25DE']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '5']
sub ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['edx,', 'ecx']
mov ['[ebp+var_8],', 'edx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_25B5']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_8]']
xor ['edx,', 'edx']
div ['dword', 'ptr', '[ecx+4]']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_265F']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+edx]']
cmp ['eax,', 'edx']
jnz ['short', 'loc_263C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_263C']
jmp ['short', 'loc_265F']
mov ['edx,', '[ebp+var_10]']
sub ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_265D']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+edx*4-4]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_25F2']
mov ['eax,', '[ebp+var_10]']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_hash_rehash	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '3']
idiv ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
push ['0']
push ['4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_2700']
jmp ['short', '$Exit$14']
mov ['[ebp+var_10],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_2721']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_14]']
jge ['short', 'loc_2754']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2752']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_hash_bucket']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_270F']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_4],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2754']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12']
dd ['offset', '$LN11']
db ['0Ah', 'dup(0CCh)']
endp
_hash_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0F1h']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cdq
mov ['ecx,', '3']
idiv ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_4]']
push ['edx']
push ['0']
push ['4']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5']
dd ['offset', '$LN4']
db ['0Ah', 'dup(0CCh)']
endp
_hash_free	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2900']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_28B6']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '4']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_28DF']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_28BE']
jmp ['short', 'loc_28A4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_28DF']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_hash_insert	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_hash_bucket']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_29C9']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2977']
jmp ['short', '$Exit$11']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx]']
jl ['short', 'loc_29B8']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_hash_rehash']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_29B8']
jmp ['short', '$Exit$11']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+8],', 'eax']
jmp ['short', '$Exit$11']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN9']
dd ['offset', '$LN8']
db ['0Ah', 'dup(0CCh)']
endp
_hash_lookup	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_hash_bucket']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
__bdf_list_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+0Ch],', 'edx']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
__bdf_list_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2AD1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_2AA2']
push ['10h']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
__bdf_list_ensure proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+4]']
jbe ['$Exit$12']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', '[edx+ecx+5]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_18],', '1FFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_18]']
jnz ['short', 'loc_2B6C']
push ['offset', '$SG7682']
push ['1E5h']
push ['40h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '40h']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$12']
jmp ['short', 'loc_2B82']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_10]']
jb ['short', 'loc_2B7C']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_18]']
jbe ['short', 'loc_2B82']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
push ['4']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2BAF']
jmp ['short', '$Exit$12']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN10_0']
dd ['offset', '$LN9_0']
align ['4']
endp
__bdf_list_shift proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2C22']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_2C22']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_2C24']
jmp ['short', 'loc_2C8E']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+8]']
jb ['short', 'loc_2C3B']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
jmp ['short', 'loc_2C8E']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_2C5C']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+8]']
jnb ['short', 'loc_2C7F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', '[ebp+var_8]']
mov ['ecx,', '[ecx+esi*4]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_2C4A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
sub ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'eax']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['8']
endp
__bdf_list_join	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2CC7']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jnz ['short', 'loc_2CCE']
xor ['eax,', 'eax']
jmp ['loc_2D7E']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[eax+edx]']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_2CF9']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_2D61']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2D3D']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', '[eax]']
mov ['[edx],', 'cl']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2D12']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
cmp ['ecx,', '[edx+8]']
jnb ['short', 'loc_2D5F']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+arg_4]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_2CF0']
cmp ['[ebp+var_C],', 'offset', '_empty']
jz ['short', 'loc_2D73']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_8]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['8']
endp
__bdf_list_split proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4Ch']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_44],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_2E25']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['dword', 'ptr', '[eax+edx],', 'offset', '_empty']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['dword', 'ptr', '[eax+edx],', 'offset', '_empty']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['dword', 'ptr', '[eax+edx],', 'offset', '_empty']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[ecx+eax],', 'offset', '_empty']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[ecx+eax],', 'offset', '_empty']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_2E3E']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2E43']
jmp ['$Exit$36']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2E53']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_2E72']
push ['offset', '$SG7756']
push ['257h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_44],', 'eax']
jmp ['$Exit$36']
push ['20h']
push ['0']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_2E9A']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2EFB']
mov ['ecx,', '[ebp+var_10]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_2EFB']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Bh']
jnz ['short', 'loc_2EC9']
mov ['edx,', '[ebp+var_10]']
movsx ['eax,', 'byte', 'ptr', '[edx+1]']
test ['eax,', 'eax']
jnz ['short', 'loc_2EC9']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_2EF9']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
sar ['edx,', '3']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '7']
mov ['eax,', '1']
shl ['eax,', 'cl']
movzx ['ecx,', 'al']
movsx ['edx,', '[ebp+edx+var_3C]']
or ['edx,', 'ecx']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sar ['ecx,', '3']
mov ['[ebp+ecx+var_3C],', 'dl']
jmp ['short', 'loc_2E91']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '[ebp+arg_C]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_18]']
jnb ['loc_306C']
mov ['eax,', '[ebp+var_10]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_306C']
jmp ['short', 'loc_2F3C']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2F6A']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
sar ['eax,', '3']
movsx ['edx,', '[ebp+eax+var_3C]']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '7']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['edx,', 'eax']
jnz ['short', 'loc_2F6A']
jmp ['short', 'loc_2F33']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+4]']
jnz ['short', 'loc_2F9C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['__bdf_list_ensure']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_2F9C']
jmp ['$Exit$36']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_10]']
jbe ['short', 'loc_2FAC']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_48],', 'edx']
jmp ['short', 'loc_2FB3']
mov ['[ebp+var_48],', 'offset', '_empty']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['edx,', '[ebp+var_48]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3020']
jmp ['short', 'loc_2FEA']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_301E']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
sar ['edx,', '3']
movsx ['eax,', '[ebp+edx+var_3C]']
mov ['ecx,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[ecx]']
and ['ecx,', '7']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['eax,', 'edx']
jz ['short', 'loc_301E']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_2FE1']
jmp ['short', 'loc_3039']
mov ['ecx,', '[ebp+var_14]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_3039']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_10]']
jbe ['short', 'loc_3054']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_3054']
mov ['[ebp+var_4C],', '1']
jmp ['short', 'loc_305B']
mov ['[ebp+var_4C],', '0']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
jmp ['loc_2F17']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_0]']
cmp ['edx,', '[eax+4]']
jb ['short', 'loc_30A2']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[edx+eax+1]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['__bdf_list_ensure']
add ['esp,', '8']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_30A2']
jmp ['short', '$Exit$36']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_30C9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax+ecx*4],', 'offset', '_empty']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['dword', 'ptr', '[ecx+edx*4],', '0']
mov ['eax,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN35']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN34']
dd ['offset', '$LN33']
align ['8']
endp
__bdf_readstream proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '4Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_4C]']
mov ['ecx,', '13h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_38],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_3C],', 'ecx']
mov ['[ebp+var_44],', '0']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_317B']
push ['offset', '$SG7810']
push ['2B4h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_44],', 'eax']
jmp ['$Exit$33']
mov ['[ebp+var_14],', '400h']
lea ['edx,', '[ebp+var_44]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_31AA']
jmp ['$Exit$33']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_10],', '1']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_38]']
mov ['byte', 'ptr', '[edx+ecx],', '0']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_18],', '1']
mov ['[ebp+var_20],', '100h']
mov ['[ebp+var_24],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_322A']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_TryRead']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '[ebp+var_24]']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_28]']
cmp ['edx,', '[ebp+var_34]']
jge ['short', 'loc_3258']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_28]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_3258']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['[ebp+var_20],', '100h']
jmp ['short', 'loc_31F0']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_34]']
jge ['short', 'loc_3287']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_3287']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_3287']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_3258']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_34]']
jl ['loc_336B']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_329E']
jmp ['loc_3451']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_331F']
cmp ['[ebp+var_14],', '10000h']
jb ['short', 'loc_32DD']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['offset', '$SG7831']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG7832']
push ['2F3h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_44],', 'eax']
jmp ['$Exit$33']
mov ['edx,', '[ebp+var_14]']
shl ['edx,', '1']
mov ['[ebp+var_4C],', 'edx']
lea ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_3311']
jmp ['$Exit$33']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_4C]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_335F']
mov ['ecx,', '[ebp+var_34]']
sub ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_24],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_34]']
sub ['eax,', '[ebp+var_24]']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_18],', '1']
jmp ['loc_31F0']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_2C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '23h']
jz ['short', 'loc_340A']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_28]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '1Ah']
jz ['short', 'loc_340A']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_28]']
jle ['short', 'loc_340A']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['[ebp+var_8]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0FFFFFFFFh']
jnz ['short', 'loc_3402']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '[ebp+var_28]']
push ['eax']
call ['[ebp+var_8]']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_340A']
jmp ['short', 'loc_3451']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '[ebp+var_2C]']
mov ['al,', 'byte', 'ptr', '[ebp+var_1C]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+var_1C],', '0Ah']
jnz ['short', 'loc_3436']
mov ['[ebp+var_20],', '0Dh']
jmp ['short', 'loc_344C']
cmp ['[ebp+var_1C],', '0Dh']
jnz ['short', 'loc_3445']
mov ['[ebp+var_20],', '0Ah']
jmp ['short', 'loc_344C']
mov ['[ebp+var_20],', '100h']
jmp ['loc_31F0']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_38],', '0']
xor ['eax,', 'eax']
jnz ['short', '$Exit$33']
mov ['eax,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '4Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN31']
dd ['offset', '$LN29']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN30']
align ['8']
endp
__bdf_atoul	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_34F3']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_34FA']
xor ['eax,', 'eax']
jmp ['loc_35CA']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '8']
jz ['short', 'loc_350E']
cmp ['[ebp+var_C],', '10h']
jz ['short', 'loc_3517']
jmp ['short', 'loc_3520']
mov ['[ebp+var_8],', 'offset', '_odigits']
jmp ['short', 'loc_352E']
mov ['[ebp+var_8],', 'offset', '_hdigits']
jmp ['short', 'loc_352E']
mov ['[ebp+arg_8],', '0Ah']
mov ['[ebp+var_8],', 'offset', '_ddigits']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jnz ['short', 'loc_3568']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '78h']
jz ['short', 'loc_3551']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+1]']
cmp ['edx,', '58h']
jnz ['short', 'loc_3568']
mov ['[ebp+arg_8],', '10h']
mov ['[ebp+var_8],', 'offset', '_hdigits']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_357A']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
sar ['eax,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '7']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['edx,', 'eax']
jz ['short', 'loc_35B9']
mov ['ecx,', '[ebp+var_4]']
imul ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
movzx ['edx,', 'ds:_a2i[eax]']
add ['ecx,', 'edx']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_3571']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_35C7']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
__bdf_atol	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3605']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_360C']
xor ['eax,', 'eax']
jmp ['loc_372A']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '8']
jz ['short', 'loc_3620']
cmp ['[ebp+var_10],', '10h']
jz ['short', 'loc_3629']
jmp ['short', 'loc_3632']
mov ['[ebp+var_C],', 'offset', '_odigits']
jmp ['short', 'loc_3640']
mov ['[ebp+var_C],', 'offset', '_hdigits']
jmp ['short', 'loc_3640']
mov ['[ebp+arg_8],', '0Ah']
mov ['[ebp+var_C],', 'offset', '_ddigits']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_3662']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['[ebp+var_8],', '1']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '30h']
jnz ['short', 'loc_369C']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '78h']
jz ['short', 'loc_3685']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+1]']
cmp ['edx,', '58h']
jnz ['short', 'loc_369C']
mov ['[ebp+arg_8],', '10h']
mov ['[ebp+var_C],', 'offset', '_hdigits']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_36AE']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
sar ['eax,', '3']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '7']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['edx,', 'eax']
jz ['short', 'loc_36ED']
mov ['ecx,', '[ebp+var_4]']
imul ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
movzx ['edx,', 'ds:_a2i[eax]']
add ['ecx,', 'edx']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_36A5']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_36FB']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_370A']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_3711']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_371F']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_18],', 'edx']
jmp ['short', 'loc_3727']
mov ['eax,', '[ebp+var_4]']
neg ['eax']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
__bdf_atos	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3765']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_376C']
xor ['eax,', 'eax']
jmp ['loc_3891']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '8']
jz ['short', 'loc_3780']
cmp ['[ebp+var_10],', '10h']
jz ['short', 'loc_3789']
jmp ['short', 'loc_3792']
mov ['[ebp+var_C],', 'offset', '_odigits']
jmp ['short', 'loc_37A0']
mov ['[ebp+var_C],', 'offset', '_hdigits']
jmp ['short', 'loc_37A0']
mov ['[ebp+arg_8],', '0Ah']
mov ['[ebp+var_C],', 'offset', '_ddigits']
xor ['eax,', 'eax']
mov ['word', 'ptr', '[ebp+var_8],', 'ax']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '2Dh']
jnz ['short', 'loc_37C3']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '1']
mov ['word', 'ptr', '[ebp+var_8],', 'cx']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '30h']
jnz ['short', 'loc_37FD']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+1]']
cmp ['edx,', '78h']
jz ['short', 'loc_37E6']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '58h']
jnz ['short', 'loc_37FD']
mov ['[ebp+arg_8],', '10h']
mov ['[ebp+var_C],', 'offset', '_hdigits']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
xor ['eax,', 'eax']
mov ['word', 'ptr', '[ebp+var_4],', 'ax']
jmp ['short', 'loc_380E']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
sar ['eax,', '3']
mov ['ecx,', '[ebp+var_C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', '7']
mov ['eax,', '1']
shl ['eax,', 'cl']
and ['edx,', 'eax']
jz ['short', 'loc_384F']
movsx ['ecx,', 'word', 'ptr', '[ebp+var_4]']
imul ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
movzx ['edx,', 'ds:_a2i[eax]']
add ['ecx,', 'edx']
mov ['word', 'ptr', '[ebp+var_4],', 'cx']
jmp ['short', 'loc_3805']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_385D']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
movsx ['edx,', 'word', 'ptr', '[ebp+var_8]']
test ['edx,', 'edx']
jnz ['short', 'loc_386E']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_3875']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3884']
movsx ['eax,', 'word', 'ptr', '[ebp+var_4]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_388D']
movsx ['ecx,', 'word', 'ptr', '[ebp+var_4]']
neg ['ecx']
mov ['[ebp+var_18],', 'ecx']
mov ['ax,', 'word', 'ptr', '[ebp+var_18]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_by_encoding	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_38CB']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_38E2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_38E0']
mov ['eax,', '1']
jmp ['short', 'loc_38E2']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_bdf_create_property proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+44088h]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+arg_8]']
add ['edx,', '44094h']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_hash_lookup']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_3937']
jmp ['$Exit$11_0']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4408Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+44090h]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+44090h]']
push ['ecx']
push ['10h']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+4408Ch],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_397E']
jmp ['$Exit$11_0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+44090h]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_8]']
add ['eax,', '[ecx+4408Ch]']
mov ['[ebp+var_8],', 'eax']
push ['10h']
push ['0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0FFFFFFFFh']
jbe ['short', 'loc_39DA']
push ['offset', '$SG7974']
push ['428h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_3A7E']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_4]']
push ['edx']
push ['0']
push ['1']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3A01']
jmp ['short', '$Exit$11_0']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', 'ds:__num_bdf_properties']
add ['ecx,', '[eax+44090h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '44094h']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
call ['_hash_insert']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_3A66']
jmp ['short', '$Exit$11_0']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+44090h]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+44090h],', 'edx']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN9_1']
dd ['offset', '$LN8_0']
db ['0Eh', 'dup(0CCh)']
endp
__bdf_add_comment proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44088h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_10],', '0']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+58h]']
mov ['ecx,', '[ebp+arg_8]']
lea ['edx,', '[eax+ecx+1]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+54h],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_3B31']
jmp ['short', '$Exit$7_0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+54h]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+58h]']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+arg_8]']
mov ['byte', 'ptr', '[edx],', '0Ah']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
mov ['edx,', '[ebp+arg_8]']
lea ['eax,', '[edx+ecx+1]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+58h],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_0']
dd ['offset', '$LN4_0']
db ['0Ah', 'dup(0CCh)']
endp
__bdf_set_default_spacing proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '134h']
push ['edi']
lea ['edi,', '[ebp+var_134]']
mov ['ecx,', '4Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_130],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_3C11']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_3C11']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
movsx ['eax,', 'byte', 'ptr', '[edx+eax]']
test ['eax,', 'eax']
jnz ['short', 'loc_3C33']
push ['offset', '$SG8022']
push ['4A5h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_130],', 'eax']
jmp ['$Exit$19']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+44088h]']
mov ['[ebp+var_12C],', 'edx']
mov ['eax,', '[ebp+var_12C]']
push ['eax']
lea ['ecx,', '[ebp+var_124]']
push ['ecx']
call ['__bdf_list_init']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[edx+1Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '100h']
jb ['short', 'loc_3CB4']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8025']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8026']
push ['4B4h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_130],', 'eax']
jmp ['$Exit$19']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['edx,', '[ebp+var_10C]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_10C]']
push ['ecx']
push ['offset', '$SG8029']
lea ['edx,', '[ebp+var_124]']
push ['edx']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_130],', 'eax']
cmp ['[ebp+var_130],', '0']
jz ['short', 'loc_3CFD']
jmp ['short', '$Fail$20']
cmp ['[ebp+var_11C],', '0Fh']
jnz ['short', '$Fail$20']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Bh']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_124]']
mov ['ecx,', '[edx+ecx]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['[ebp+var_134],', 'edx']
mov ['eax,', '[ebp+var_134]']
sub ['eax,', '43h']
mov ['[ebp+var_134],', 'eax']
cmp ['[ebp+var_134],', '2Dh']
ja ['short', '$Fail$20']
mov ['ecx,', '[ebp+var_134]']
movzx ['edx,', 'ds:$LN13_0[ecx]']
jmp ['ds:$LN18[edx*4]']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '20h']
jmp ['short', '$Fail$20']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+1Ch],', '10h']
jmp ['short', '$Fail$20']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '8']
lea ['eax,', '[ebp+var_124]']
push ['eax']
call ['__bdf_list_done']
add ['esp,', '4']
mov ['eax,', '[ebp+var_130]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '134h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN16']
dd ['offset', '$LN14']
dd ['0FFFFFEDCh,', '10h']
dd ['offset', '$LN15']
dw ['0FF8Bh']
dd ['offset', '$LN2']
dd ['offset', '$LN1']
dd ['offset', '$Fail$20']
db ['3,', '3,', '3,', '3']
db ['3,', '3,', '1,', '3']
db ['3,', '2,', '3,', '3']
db ['3,', '3,', '3,', '3']
db ['3,', '3,', '3,', '3']
db ['3,', '3,', '3,', '3']
db ['3,', '3,', '3,', '3']
db ['0,', '3,', '3,', '3']
db ['3,', '3,', '3,', '3']
db ['3,', '3,', '1,', '3']
db ['3,', '2']
align ['4']
endp
__bdf_is_atom	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_3E7E']
mov ['eax,', '[ebp+var_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '20h']
jz ['short', 'loc_3E7E']
mov ['edx,', '[ebp+var_C]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '9']
jz ['short', 'loc_3E7E']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_3E53']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_C]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_3E9E']
mov ['ecx,', '[ebp+var_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_bdf_get_property']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_4],', '0FFFFFFFFh']
jz ['short', 'loc_3EBF']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_4]']
mov ['[eax],', 'cl']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_3ED5']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx+4],', '1']
jz ['short', 'loc_3ED5']
xor ['eax,', 'eax']
jmp ['loc_3F9D']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_3EFD']
mov ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3F28']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '20h']
jz ['short', 'loc_3F1D']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '9']
jnz ['short', 'loc_3F28']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_3EFD']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '22h']
jnz ['short', 'loc_3F3C']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_8]']
jbe ['short', 'loc_3F75']
mov ['ecx,', '[ebp+var_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx-1]']
cmp ['edx,', '20h']
jz ['short', 'loc_3F64']
mov ['eax,', '[ebp+var_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax-1]']
cmp ['ecx,', '9']
jnz ['short', 'loc_3F75']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_3F44']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_8]']
jbe ['short', 'loc_3F98']
mov ['edx,', '[ebp+var_C]']
movsx ['eax,', 'byte', 'ptr', '[edx-1]']
cmp ['eax,', '22h']
jnz ['short', 'loc_3F98']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '1']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
__bdf_add_property proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44088h]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_1C],', '0']
mov ['edx,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+80h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_hash_lookup']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['loc_40D1']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+50h]']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '1']
jz ['short', 'loc_403D']
cmp ['[ebp+var_24],', '2']
jz ['short', 'loc_409E']
cmp ['[ebp+var_24],', '3']
jz ['short', 'loc_40B6']
jmp ['loc_40CC']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_403D']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_409C']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jz ['short', 'loc_409C']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_409C']
jmp ['$Exit$67']
jmp ['short', 'loc_40CC']
push ['0Ah']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['__bdf_atol']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+0Ch],', 'eax']
jmp ['short', 'loc_40CC']
push ['0Ah']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['__bdf_atoul']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+0Ch],', 'eax']
jmp ['$Exit$67']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '44094h']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_hash_lookup']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_4128']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_bdf_create_property']
add ['esp,', '0Ch']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_4110']
jmp ['$Exit$67']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '44094h']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_hash_lookup']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+4Ch]']
cmp ['ecx,', '[eax+48h]']
jnz ['loc_41DA']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+48h],', '0']
jnz ['short', 'loc_416E']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
push ['0']
push ['1']
push ['0']
push ['10h']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+50h],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_416C']
jmp ['$Exit$67']
jmp ['short', 'loc_41A9']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+50h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+48h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+48h]']
push ['eax']
push ['10h']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+50h],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_41A9']
jmp ['$Exit$67']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+48h]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+50h]']
mov ['[ebp+var_10],', 'ecx']
push ['10h']
push ['0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+48h]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+48h],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', 'ds:__num_bdf_properties']
jb ['short', 'loc_4208']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', 'ds:__num_bdf_properties']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4408Ch]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_4216']
mov ['eax,', '[ebp+var_4]']
shl ['eax,', '4']
add ['eax,', 'offset', '__bdf_properties']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+50h]']
mov ['[ebp+var_10],', 'edx']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+4]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_28],', 'edx']
cmp ['[ebp+var_28],', '1']
jz ['short', 'loc_4267']
cmp ['[ebp+var_28],', '2']
jz ['short', 'loc_42B1']
cmp ['[ebp+var_28],', '3']
jz ['short', 'loc_42C9']
jmp ['short', 'loc_42DF']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_42AF']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jz ['short', 'loc_42AF']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+0Ch],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_42AF']
jmp ['$Exit$67']
jmp ['short', 'loc_42DF']
push ['0Ah']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['__bdf_atol']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+0Ch],', 'eax']
jmp ['short', 'loc_42DF']
push ['0Ah']
push ['0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['__bdf_atoul']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+0Ch],', 'eax']
mov ['esi,', 'esp']
push ['7']
push ['offset', '$SG8136']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_436C']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '20h']
jz ['short', 'loc_4363']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4363']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_4363']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Dh']
jz ['short', 'loc_4363']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '9']
jnz ['short', 'loc_436C']
mov ['[ebp+var_2C],', '0']
jmp ['short', 'loc_4373']
mov ['[ebp+var_2C],', '1']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_43AA']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+80h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_hash_insert']
add ['esp,', '10h']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_43AA']
jmp ['$Exit$67']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4Ch],', 'ecx']
mov ['esi,', 'esp']
push ['0Ch']
push ['offset', '$SG8140']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_4446']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_443D']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_443D']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_443D']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_443D']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_4446']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_444D']
mov ['[ebp+var_30],', '1']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_4464']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+24h],', 'edx']
jmp ['$Exit$67']
mov ['esi,', 'esp']
push ['0Bh']
push ['offset', '$SG8143']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_44F1']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Bh']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_44E8']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Bh']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_44E8']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Bh']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_44E8']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Bh']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_44E8']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Bh']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_44F1']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_44F8']
mov ['[ebp+var_34],', '1']
cmp ['[ebp+var_34],', '0']
jnz ['short', 'loc_450F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+28h],', 'edx']
jmp ['$Exit$67']
mov ['esi,', 'esp']
push ['0Ch']
push ['offset', '$SG8146']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_459C']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_4593']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_4593']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_4593']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_4593']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_459C']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_45A3']
mov ['[ebp+var_38],', '1']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_45BA']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+2Ch],', 'edx']
jmp ['$Exit$67']
mov ['esi,', 'esp']
push ['7']
push ['offset', '$SG8149']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_4647']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_463E']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_463E']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_463E']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_463E']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_4647']
mov ['[ebp+var_3C],', '0']
jmp ['short', 'loc_464E']
mov ['[ebp+var_3C],', '1']
cmp ['[ebp+var_3C],', '0']
jnz ['$Exit$67']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jnz ['short', 'loc_4696']
push ['offset', '$SG8151']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
push ['offset', '$SG8152']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8153']
push ['5ACh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_1C],', 'eax']
jmp ['$Exit$67']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
movsx ['eax,', 'byte', 'ptr', '[edx+eax]']
cmp ['eax,', '70h']
jz ['short', 'loc_46C4']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx+edx]']
cmp ['edx,', '50h']
jnz ['short', 'loc_46D0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+1Ch],', '8']
jmp ['short', '$Exit$67']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx+edx]']
cmp ['edx,', '6Dh']
jz ['short', 'loc_46FE']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+0Ch]']
movsx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
cmp ['ecx,', '4Dh']
jnz ['short', 'loc_470A']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+1Ch],', '10h']
jmp ['short', '$Exit$67']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+0Ch]']
movsx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
cmp ['ecx,', '63h']
jz ['short', 'loc_4738']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
movsx ['eax,', 'byte', 'ptr', '[edx+eax]']
cmp ['eax,', '43h']
jnz ['short', '$Exit$67']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+1Ch],', '20h']
mov ['eax,', '[ebp+var_1C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN66']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN65']
dd ['offset', '$LN64_0']
align ['8']
endp
__bdf_parse_glyphs proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '88h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_88]']
mov ['ecx,', '22h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_3C],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+44088h]']
mov ['[ebp+var_34],', 'eax']
mov ['esi,', 'esp']
push ['7']
push ['offset', '$SG8189']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_4860']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '20h']
jz ['short', 'loc_4857']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['short', 'loc_4857']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_4857']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Dh']
jz ['short', 'loc_4857']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '9']
jnz ['short', 'loc_4860']
mov ['[ebp+var_4C],', '0']
jmp ['short', 'loc_4867']
mov ['[ebp+var_4C],', '1']
cmp ['[ebp+var_4C],', '0']
jnz ['short', 'loc_48BA']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '7']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '7']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_489B']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['__bdf_add_comment']
add ['esp,', '0Ch']
mov ['[ebp+var_3C],', 'eax']
jmp ['$Exit$157']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
and ['eax,', '20h']
jnz ['loc_4A93']
mov ['esi,', 'esp']
push ['5']
push ['offset', '$SG8194']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_4955']
mov ['edx,', '1']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '20h']
jz ['short', 'loc_494C']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['short', 'loc_494C']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_494C']
mov ['edx,', '1']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Dh']
jz ['short', 'loc_494C']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '9']
jnz ['short', 'loc_4955']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_495C']
mov ['[ebp+var_50],', '1']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_499C']
push ['offset', '$SG8195']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8196']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8197']
push ['5F5h']
push ['0B4h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B4h']
mov ['[ebp+var_3C],', 'eax']
jmp ['$Exit$157']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG8199']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '22028h']
push ['ecx']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_49C9']
jmp ['$Exit$157']
push ['0Ah']
push ['0']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+22028h]']
mov ['edx,', '[ecx+edx]']
push ['edx']
call ['__bdf_atoul']
add ['esp,', '0Ch']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_54]']
mov ['[eax+30h],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_54]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_4A12']
mov ['edx,', '[ebp+var_30]']
mov ['dword', 'ptr', '[edx+30h],', '40h']
mov ['eax,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[eax+4],', '110000h']
jb ['short', 'loc_4A53']
push ['offset', '$SG8203']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8204']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8205']
push ['607h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_3C],', 'eax']
jmp ['$Exit$157']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
push ['0']
push ['24h']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+38h],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_4A81']
jmp ['$Exit$157']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
or ['eax,', '20h']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx],', 'eax']
jmp ['$Exit$157']
mov ['esi,', 'esp']
push ['7']
push ['offset', '$SG8210']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_4B20']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '20h']
jz ['short', 'loc_4B17']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jz ['short', 'loc_4B17']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_4B17']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Dh']
jz ['short', 'loc_4B17']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '9']
jnz ['short', 'loc_4B20']
mov ['[ebp+var_58],', '0']
jmp ['short', 'loc_4B27']
mov ['[ebp+var_58],', '1']
cmp ['[ebp+var_58],', '0']
jnz ['short', 'loc_4BAC']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
and ['eax,', '0FC0h']
jz ['short', 'loc_4B73']
push ['offset', '$SG8212']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8213']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8214']
push ['61Ah']
push ['0BAh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0BAh']
mov ['[ebp+var_3C],', 'eax']
jmp ['$Exit$157']
mov ['esi,', 'esp']
push ['offset', '_by_encoding']
push ['24h']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+34h]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+38h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__qsort']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FFFFFFFEh']
mov ['edx,', '[ebp+var_28]']
mov ['[edx],', 'ecx']
jmp ['$Exit$157']
mov ['esi,', 'esp']
push ['7']
push ['offset', '$SG8218']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_4C39']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_4C30']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_4C30']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_4C30']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_4C30']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_4C39']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_4C40']
mov ['[ebp+var_5C],', '1']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_4C65']
mov ['eax,', '[ebp+var_28]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx]']
and ['edx,', '0FFFFF03Fh']
mov ['eax,', '[ebp+var_28]']
mov ['[eax],', 'edx']
jmp ['$Exit$157']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx]']
and ['edx,', '40h']
jz ['short', 'loc_4C89']
mov ['eax,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0FFFFFFFFh']
jnz ['short', 'loc_4C89']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+24h]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_4C89']
jmp ['$Exit$157']
mov ['esi,', 'esp']
push ['9']
push ['offset', '$SG8221']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_4D16']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_4D0D']
mov ['edx,', '1']
imul ['eax,', 'edx,', '9']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_4D0D']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '9']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_4D0D']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_4D0D']
mov ['edx,', '1']
imul ['eax,', 'edx,', '9']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_4D16']
mov ['[ebp+var_60],', '0']
jmp ['short', 'loc_4D1D']
mov ['[ebp+var_60],', '1']
cmp ['[ebp+var_60],', '0']
jnz ['loc_4E63']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_28]']
mov ['dword', 'ptr', '[eax+18h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_4D27']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG8227']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '22028h']
push ['ecx']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_4D75']
jmp ['$Exit$157']
push ['1']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '22028h']
push ['edx']
call ['__bdf_list_shift']
add ['esp,', '8']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '22028h']
push ['ecx']
call ['__bdf_list_join']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_4DDF']
push ['offset', '$SG8230']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '$SG8231']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8232']
push ['64Bh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_3C],', 'eax']
jmp ['$Exit$157']
lea ['eax,', '[ebp+var_3C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
push ['ecx']
push ['0']
push ['1']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+18h],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_4E0D']
jmp ['$Exit$157']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+18h]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
or ['ecx,', '40h']
mov ['edx,', '[ebp+var_28]']
mov ['[edx],', 'ecx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_4E5A']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '$SG8240']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_4E34']
jmp ['$Exit$157']
mov ['esi,', 'esp']
push ['8']
push ['offset', '$SG8242']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_4EF0']
mov ['eax,', '1']
shl ['eax,', '3']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '20h']
jz ['short', 'loc_4EE7']
mov ['eax,', '1']
shl ['eax,', '3']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_4EE7']
mov ['eax,', '1']
shl ['eax,', '3']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_4EE7']
mov ['eax,', '1']
shl ['eax,', '3']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Dh']
jz ['short', 'loc_4EE7']
mov ['eax,', '1']
shl ['eax,', '3']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_4EF0']
mov ['[ebp+var_64],', '0']
jmp ['short', 'loc_4EF7']
mov ['[ebp+var_64],', '1']
cmp ['[ebp+var_64],', '0']
jnz ['loc_52AF']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
and ['ecx,', '40h']
jnz ['short', 'loc_4F45']
push ['offset', '$SG8244']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '$SG8245']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8246']
push ['662h']
push ['0B5h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B5h']
mov ['[ebp+var_3C],', 'eax']
jmp ['$Exit$157']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '$SG8248']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '22028h']
push ['edx']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_4F72']
jmp ['$Exit$157']
push ['0Ah']
push ['0']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+22028h]']
mov ['eax,', '[edx+eax]']
push ['eax']
call ['__bdf_atol']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0FFFFFFFFh']
jge ['short', 'loc_4FAC']
mov ['eax,', '[ebp+var_28]']
mov ['dword', 'ptr', '[eax+1Ch],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0FFFFFFFFh']
jnz ['short', 'loc_4FE7']
mov ['edx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[edx+22030h],', '2']
jbe ['short', 'loc_4FE7']
push ['0Ah']
push ['0']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+22028h]']
mov ['eax,', '[edx+eax]']
push ['eax']
call ['__bdf_atol']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0FFFFFFFFh']
jge ['short', 'loc_4FFA']
mov ['eax,', '[ebp+var_28]']
mov ['dword', 'ptr', '[eax+1Ch],', '0FFFFFFFFh']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_501F']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
push ['offset', '$SG8257']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_4FFA']
mov ['eax,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jle ['short', 'loc_506D']
mov ['ecx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '110000h']
jb ['short', 'loc_506D']
push ['offset', '$SG8261']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '$SG8262']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8263']
push ['681h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_3C],', 'eax']
jmp ['$Exit$157']
mov ['eax,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jl ['loc_5117']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+1Ch]']
sar ['edx,', '5']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '1Fh']
mov ['eax,', '1']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_28]']
and ['eax,', '[ecx+edx*4+28h]']
jz ['short', 'loc_50E7']
mov ['edx,', '4']
imul ['eax,', 'edx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_50C8']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
push ['offset', '$SG8270']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_509C']
mov ['eax,', '[ebp+var_28]']
mov ['dword', 'ptr', '[eax+1Ch],', '0FFFFFFFFh']
mov ['ecx,', '1']
mov ['edx,', '[ebp+var_30]']
mov ['[edx+44084h],', 'cx']
jmp ['short', 'loc_5117']
mov ['eax,', '[ebp+var_28]']
mov ['edx,', '[eax+1Ch]']
sar ['edx,', '5']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+1Ch]']
and ['ecx,', '1Fh']
mov ['eax,', '1']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_28]']
or ['eax,', '[ecx+edx*4+28h]']
mov ['edx,', '[ebp+var_28]']
mov ['ecx,', '[edx+1Ch]']
sar ['ecx,', '5']
mov ['edx,', '[ebp+var_28]']
mov ['[edx+ecx*4+28h],', 'eax']
mov ['eax,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jl ['loc_51C1']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ecx+34h]']
cmp ['eax,', '[edx+30h]']
jnz ['short', 'loc_517C']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+38h]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+30h]']
add ['edx,', '40h']
push ['edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
push ['24h']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+38h],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_516D']
jmp ['$Exit$157']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+30h]']
add ['eax,', '40h']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+30h],', 'eax']
mov ['edx,', '[ebp+var_30]']
imul ['eax,', '[edx+34h],', '24h']
mov ['ecx,', '[ebp+var_30]']
add ['eax,', '[ecx+38h]']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+34h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+34h],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+18h]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+1Ch]']
mov ['[edx+4],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['dword', 'ptr', '[edx+18h],', '0']
jmp ['loc_528C']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+24h]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['loc_5261']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[edx+40h]']
cmp ['ecx,', '[eax+3Ch]']
jnz ['short', 'loc_5229']
lea ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+44h]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+3Ch]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+3Ch]']
push ['edx']
push ['24h']
mov ['eax,', '[ebp+var_34]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+44h],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_521A']
jmp ['$Exit$157']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+3Ch]']
add ['eax,', '4']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+3Ch],', 'eax']
mov ['edx,', '[ebp+var_30]']
imul ['eax,', '[edx+40h],', '24h']
mov ['ecx,', '[ebp+var_30]']
add ['eax,', '[ecx+44h]']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+18h]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+40h]']
mov ['[edx+4],', 'ecx']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+40h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+40h],', 'eax']
jmp ['short', 'loc_5282']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_28]']
mov ['dword', 'ptr', '[edx+18h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_5261']
mov ['ecx,', '[ebp+var_28]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
and ['eax,', '3FFFFFFFh']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
or ['eax,', '80h']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx],', 'eax']
jmp ['$Exit$157']
mov ['edx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0FFFFFFFFh']
jnz ['short', 'loc_52CF']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+40h]']
sub ['ecx,', '1']
imul ['edx,', 'ecx,', '24h']
mov ['eax,', '[ebp+var_30]']
add ['edx,', '[eax+44h]']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_52E4']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+34h]']
sub ['edx,', '1']
imul ['eax,', 'edx,', '24h']
mov ['ecx,', '[ebp+var_30]']
add ['eax,', '[ecx+38h]']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
and ['eax,', '800h']
jz ['loc_5538']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Eh]']
mov ['eax,', '[ebp+var_28]']
cmp ['[eax+8],', 'edx']
jb ['short', 'loc_535C']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx]']
and ['edx,', '80000000h']
jnz ['short', 'loc_5357']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_5335']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+4]']
push ['eax']
push ['offset', '$SG8298']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_5310']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
or ['eax,', '80000000h']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx],', 'eax']
mov ['edx,', '1']
mov ['eax,', '[ebp+var_30]']
mov ['[eax+44084h],', 'dx']
jmp ['$Exit$157']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+1Ch]']
shl ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[eax+8]']
imul ['edx,', '[ecx+1Ch]']
mov ['eax,', '[ebp+var_2C]']
add ['edx,', '[eax+18h]']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_538F']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_24]']
jnb ['short', 'loc_5402']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_4],', 'ecx']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4]']
sar ['edx,', '3']
movzx ['eax,', 'ds:_hdigits[edx]']
mov ['ecx,', '[ebp+var_4]']
and ['ecx,', '7']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['eax,', 'edx']
jnz ['short', 'loc_53C4']
jmp ['short', 'loc_5402']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'ds:_a2i[edx]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_24]']
jnb ['short', 'loc_5400']
mov ['ecx,', '[ebp+var_14]']
and ['ecx,', '1']
jz ['short', 'loc_5400']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_5386']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_24]']
jnb ['short', 'loc_545E']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
and ['eax,', '40000000h']
jnz ['short', 'loc_545E']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_543B']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
push ['offset', '$SG8311']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_5416']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
or ['ecx,', '40000000h']
mov ['edx,', '[ebp+var_28]']
mov ['[edx],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+44084h],', 'ax']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'word', 'ptr', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+20h]']
movzx ['ecx,', 'word', 'ptr', '[edx+44086h]']
imul ['eax,', 'ecx']
and ['eax,', '7']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'word', 'ptr', '[edx+0Ch]']
test ['eax,', 'eax']
jz ['short', 'loc_549D']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'ds:_nibble_mask[ecx]']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
and ['ecx,', 'edx']
mov ['edx,', '[ebp+var_10]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_24]']
jnz ['short', 'loc_5524']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_24]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
sar ['edx,', '3']
movzx ['eax,', 'ds:_hdigits[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[ebp+var_24]']
movsx ['ecx,', 'byte', 'ptr', '[ecx]']
and ['ecx,', '7']
mov ['edx,', '1']
shl ['edx,', 'cl']
and ['eax,', 'edx']
jz ['short', 'loc_5524']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
and ['ecx,', '40000000h']
jnz ['short', 'loc_5524']
mov ['edx,', '4']
imul ['eax,', 'edx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_5501']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+4]']
push ['edx']
push ['offset', '$SG8319']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_54DC']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx]']
or ['edx,', '40000000h']
mov ['eax,', '[ebp+var_28]']
mov ['[eax],', 'edx']
mov ['ecx,', '1']
mov ['edx,', '[ebp+var_30]']
mov ['[edx+44084h],', 'cx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_28]']
mov ['[edx+8],', 'ecx']
jmp ['$Exit$157']
mov ['esi,', 'esp']
push ['6']
push ['offset', '$SG8321']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_55C5']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '6']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_55BC']
mov ['edx,', '1']
imul ['eax,', 'edx,', '6']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_55BC']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '6']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_55BC']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '6']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_55BC']
mov ['edx,', '1']
imul ['eax,', 'edx,', '6']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_55C5']
mov ['[ebp+var_68],', '0']
jmp ['short', 'loc_55CC']
mov ['[ebp+var_68],', '1']
cmp ['[ebp+var_68],', '0']
jnz ['short', 'loc_564D']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
and ['ecx,', '80h']
jnz ['short', 'loc_55E4']
jmp ['$Missing_Encoding$158']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG8325']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '22028h']
push ['ecx']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_5611']
jmp ['$Exit$157']
push ['0Ah']
push ['0']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+22028h]']
mov ['edx,', '[ecx+edx]']
push ['edx']
call ['__bdf_atoul']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+8],', 'ax']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
or ['eax,', '100h']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx],', 'eax']
jmp ['$Exit$157']
mov ['esi,', 'esp']
push ['6']
push ['offset', '$SG8329']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_56DA']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '6']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '20h']
jz ['short', 'loc_56D1']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '6']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jz ['short', 'loc_56D1']
mov ['edx,', '1']
imul ['eax,', 'edx,', '6']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_56D1']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '6']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Dh']
jz ['short', 'loc_56D1']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '6']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '9']
jnz ['short', 'loc_56DA']
mov ['[ebp+var_6C],', '0']
jmp ['short', 'loc_56E1']
mov ['[ebp+var_6C],', '1']
cmp ['[ebp+var_6C],', '0']
jnz ['loc_57C2']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
and ['eax,', '80h']
jnz ['short', 'loc_56FC']
jmp ['$Missing_Encoding$158']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['offset', '$SG8332']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '22028h']
push ['eax']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_5728']
jmp ['$Exit$157']
push ['0Ah']
push ['0']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+22028h]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
call ['__bdf_atoul']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+0Ah],', 'ax']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
and ['ecx,', '100h']
jnz ['short', 'loc_57AD']
mov ['edx,', '4']
imul ['eax,', 'edx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_577F']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8340']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_575D']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[eax+10h]']
imul ['edx,', '[ecx+14h]']
push ['edx']
push ['11940h']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ah]']
push ['ecx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+8],', 'ax']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
or ['ecx,', '200h']
mov ['edx,', '[ebp+var_28]']
mov ['[edx],', 'ecx']
jmp ['$Exit$157']
mov ['esi,', 'esp']
push ['3']
push ['offset', '$SG8344']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_584F']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_5846']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_5846']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_5846']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_5846']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_584F']
mov ['[ebp+var_70],', '0']
jmp ['short', 'loc_5856']
mov ['[ebp+var_70],', '1']
cmp ['[ebp+var_70],', '0']
jnz ['loc_5BCC']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
and ['ecx,', '80h']
jnz ['short', 'loc_5872']
jmp ['$Missing_Encoding$158']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG8347']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '22028h']
push ['ecx']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_589F']
jmp ['$Exit$157']
push ['0Ah']
push ['0']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+22028h]']
mov ['edx,', '[ecx+edx]']
push ['edx']
call ['__bdf_atos']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+0Ch],', 'ax']
push ['0Ah']
push ['0']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+22028h]']
mov ['edx,', '[ecx+edx]']
push ['edx']
call ['__bdf_atos']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+0Eh],', 'ax']
push ['0Ah']
push ['0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+22028h]']
mov ['eax,', '[edx+eax]']
push ['eax']
call ['__bdf_atos']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+10h],', 'ax']
push ['0Ah']
push ['0']
mov ['edx,', '4']
shl ['edx,', '2']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+22028h]']
mov ['edx,', '[ecx+edx]']
push ['edx']
call ['__bdf_atos']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+12h],', 'ax']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'word', 'ptr', '[edx+0Eh]']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'word', 'ptr', '[ecx+12h]']
add ['eax,', 'edx']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+14h],', 'ax']
mov ['edx,', '[ebp+var_2C]']
movsx ['eax,', 'word', 'ptr', '[edx+12h]']
neg ['eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+16h],', 'ax']
mov ['edx,', '[ebp+var_2C]']
movsx ['eax,', 'word', 'ptr', '[edx+14h]']
mov ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'word', 'ptr', '[ecx+12h]']
cmp ['eax,', 'edx']
jle ['short', 'loc_5983']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'word', 'ptr', '[eax+14h]']
mov ['[ebp+var_74],', 'ecx']
jmp ['short', 'loc_598D']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'word', 'ptr', '[edx+12h]']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['dx,', 'word', 'ptr', '[ebp+var_74]']
mov ['[ecx+12h],', 'dx']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'word', 'ptr', '[eax+16h]']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'word', 'ptr', '[edx+14h]']
cmp ['ecx,', 'eax']
jle ['short', 'loc_59B6']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'word', 'ptr', '[ecx+16h]']
mov ['[ebp+var_78],', 'edx']
jmp ['short', 'loc_59C0']
mov ['eax,', '[ebp+var_28]']
movsx ['ecx,', 'word', 'ptr', '[eax+14h]']
mov ['[ebp+var_78],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['ax,', 'word', 'ptr', '[ebp+var_78]']
mov ['[edx+14h],', 'ax']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'word', 'ptr', '[eax+10h]']
add ['edx,', 'ecx']
mov ['eax,', '[ebp+var_28]']
mov ['[eax+16h],', 'dx']
mov ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'word', 'ptr', '[ecx+16h]']
mov ['eax,', '[ebp+var_28]']
movsx ['ecx,', 'word', 'ptr', '[eax+10h]']
cmp ['edx,', 'ecx']
jle ['short', 'loc_5A00']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'word', 'ptr', '[edx+16h]']
mov ['[ebp+var_7C],', 'eax']
jmp ['short', 'loc_5A0A']
mov ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'word', 'ptr', '[ecx+10h]']
mov ['[ebp+var_7C],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['cx,', 'word', 'ptr', '[ebp+var_7C]']
mov ['[eax+10h],', 'cx']
mov ['edx,', '[ebp+var_2C]']
movsx ['eax,', 'word', 'ptr', '[edx+10h]']
mov ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
cmp ['eax,', 'edx']
jge ['short', 'loc_5A33']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'word', 'ptr', '[eax+10h]']
mov ['[ebp+var_80],', 'ecx']
jmp ['short', 'loc_5A3D']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'word', 'ptr', '[edx+0Ch]']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['dx,', 'word', 'ptr', '[ebp+var_80]']
mov ['[ecx+0Ch],', 'dx']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'word', 'ptr', '[eax+10h]']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'word', 'ptr', '[edx+0Eh]']
cmp ['ecx,', 'eax']
jle ['short', 'loc_5A69']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'word', 'ptr', '[ecx+10h]']
mov ['[ebp+var_84],', 'edx']
jmp ['short', 'loc_5A76']
mov ['eax,', '[ebp+var_28]']
movsx ['ecx,', 'word', 'ptr', '[eax+0Eh]']
mov ['[ebp+var_84],', 'ecx']
mov ['edx,', '[ebp+var_28]']
mov ['ax,', 'word', 'ptr', '[ebp+var_84]']
mov ['[edx+0Eh],', 'ax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx]']
and ['edx,', '200h']
jnz ['short', 'loc_5AC5']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_5AB3']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '$SG8362']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_5A91']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_2C]']
mov ['ax,', '[edx+0Ch]']
mov ['[ecx+0Ah],', 'ax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+24h]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['loc_5BB8']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[eax+10h]']
imul ['edx,', '[ecx+14h]']
push ['edx']
push ['11940h']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Ah]']
push ['ecx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['[ebp+var_44],', 'ax']
movzx ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['edx,', 'ecx']
jz ['loc_5BB8']
mov ['edx,', '[ebp+var_2C]']
mov ['ax,', '[ebp+var_44]']
mov ['[edx+8],', 'ax']
mov ['ecx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0FFFFFFFFh']
jnz ['short', 'loc_5B63']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+40h]']
sub ['eax,', '1']
shr ['eax,', '5']
mov ['ecx,', '[ebp+var_30]']
mov ['ecx,', '[ecx+40h]']
sub ['ecx,', '1']
and ['ecx,', '1Fh']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['ecx,', '[ebp+var_30]']
or ['edx,', '[ecx+eax*4+22084h]']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+40h]']
sub ['ecx,', '1']
shr ['ecx,', '5']
mov ['eax,', '[ebp+var_30]']
mov ['[eax+ecx*4+22084h],', 'edx']
jmp ['short', 'loc_5B99']
mov ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ecx+4]']
sar ['edx,', '5']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '1Fh']
mov ['eax,', '1']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_30]']
or ['eax,', '[ecx+edx*4+84h]']
mov ['edx,', '[ebp+var_2C]']
mov ['ecx,', '[edx+4]']
sar ['ecx,', '5']
mov ['edx,', '[ebp+var_30]']
mov ['[edx+ecx*4+84h],', 'eax']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
or ['ecx,', '1000h']
mov ['edx,', '[ebp+var_28]']
mov ['[edx],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+44084h],', 'ax']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
or ['eax,', '400h']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx],', 'eax']
jmp ['$Exit$157']
mov ['esi,', 'esp']
push ['6']
push ['offset', '$SG8371']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_5C5C']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '6']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '20h']
jz ['short', 'loc_5C50']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '6']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5C50']
mov ['edx,', '1']
imul ['eax,', 'edx,', '6']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_5C50']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '6']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Dh']
jz ['short', 'loc_5C50']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '6']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '9']
jnz ['short', 'loc_5C5C']
mov ['[ebp+var_88],', '0']
jmp ['short', 'loc_5C66']
mov ['[ebp+var_88],', '1']
cmp ['[ebp+var_88],', '0']
jnz ['loc_5D8C']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
and ['eax,', '400h']
jnz ['short', 'loc_5CB9']
push ['offset', '$SG8374']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8375']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8376']
push ['78Fh']
push ['0B7h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B7h']
mov ['[ebp+var_3C],', 'eax']
jmp ['$Exit$157']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'word', 'ptr', '[edx+0Ch]']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+20h]']
movzx ['ecx,', 'word', 'ptr', '[edx+44086h]']
imul ['eax,', 'ecx']
add ['eax,', '7']
sar ['eax,', '3']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+1Ch],', 'eax']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Eh]']
mov ['edx,', '[ebp+var_2C]']
imul ['ecx,', '[edx+1Ch]']
mov ['[ebp+var_48],', 'ecx']
mov ['eax,', '[ebp+var_2C]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0FFFFh']
ja ['short', 'loc_5D02']
cmp ['[ebp+var_48],', '0FFFFh']
jbe ['short', 'loc_5D39']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8379']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8380']
push ['79Ah']
push ['0B8h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B8h']
mov ['[ebp+var_3C],', 'eax']
jmp ['$Exit$157']
jmp ['short', 'loc_5D44']
mov ['edx,', '[ebp+var_2C]']
mov ['ax,', 'word', 'ptr', '[ebp+var_48]']
mov ['[edx+20h],', 'ax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'word', 'ptr', '[edx+20h]']
push ['eax']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+18h],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_5D70']
jmp ['short', '$Exit$157']
mov ['eax,', '[ebp+var_28]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx]']
or ['edx,', '800h']
mov ['eax,', '[ebp+var_28]']
mov ['[eax],', 'edx']
jmp ['short', '$Exit$157']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8386']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8387']
push ['7AAh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', '$Exit$157']
push ['offset', '$SG8388']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '$SG8389']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8390']
push ['7B0h']
push ['0B6h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B6h']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_5E1F']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
and ['ecx,', '40h']
jz ['short', 'loc_5E1F']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_28]']
mov ['dword', 'ptr', '[edx+18h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_5DFE']
mov ['eax,', '[ebp+var_3C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN156']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '88h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN155']
dd ['offset', '$LN153']
dd ['0FFFFFFC4h,', '4']
dd ['offset', '$LN154']
align ['8']
endp
__bdf_parse_properties proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C8h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C8]']
mov ['ecx,', '32h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_BC],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+var_18],', 'edx']
mov ['esi,', 'esp']
push ['0Dh']
push ['offset', '$SG8418']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_5F4B']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Dh']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_5F3F']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Dh']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_5F3F']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Dh']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_5F3F']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Dh']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_5F3F']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Dh']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_5F4B']
mov ['[ebp+var_C0],', '0']
jmp ['short', 'loc_5F55']
mov ['[ebp+var_C0],', '1']
cmp ['[ebp+var_C0],', '0']
jnz ['loc_6111']
push ['offset', '$SG8420']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['_bdf_get_font_property']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_602C']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
movsx ['eax,', 'word', 'ptr', '[eax+0Ch]']
mov ['[edx+28h],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
movsx ['eax,', 'word', 'ptr', '[edx+0Ch]']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '$SG8421']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__sprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['eax,', '[ebp+var_B4]']
push ['eax']
push ['offset', '$SG8423']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
push ['edx']
call ['__bdf_add_property']
add ['esp,', '10h']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jz ['short', 'loc_5FED']
jmp ['$Exit$41']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_6016']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
movsx ['ecx,', 'word', 'ptr', '[eax+0Ch]']
push ['ecx']
push ['offset', '$SG8430']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_5FED']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '1']
mov ['[ecx+44084h],', 'dx']
push ['offset', '$SG8432']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['_bdf_get_font_property']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_60F6']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
movsx ['eax,', 'word', 'ptr', '[eax+0Eh]']
mov ['[edx+2Ch],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
movsx ['eax,', 'word', 'ptr', '[edx+0Eh]']
mov ['esi,', 'esp']
push ['eax']
push ['offset', '$SG8433']
lea ['ecx,', '[ebp+var_B4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__sprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['eax,', '[ebp+var_B4]']
push ['eax']
push ['offset', '$SG8435']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
push ['edx']
call ['__bdf_add_property']
add ['esp,', '10h']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jz ['short', 'loc_60B7']
jmp ['$Exit$41']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_60E0']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
movsx ['ecx,', 'word', 'ptr', '[eax+0Eh]']
push ['ecx']
push ['offset', '$SG8441']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_60B7']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '1']
mov ['[ecx+44084h],', 'dx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
and ['ecx,', '0FFFFFFEFh']
mov ['edx,', '[ebp+var_18]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '__bdf_parse_glyphs']
jmp ['$Exit$41']
mov ['esi,', 'esp']
push ['15h']
push ['offset', '$SG8443']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_61A1']
mov ['edx,', '1']
imul ['eax,', 'edx,', '15h']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '20h']
jz ['short', 'loc_6195']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '15h']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['short', 'loc_6195']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '15h']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_6195']
mov ['edx,', '1']
imul ['eax,', 'edx,', '15h']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Dh']
jz ['short', 'loc_6195']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '15h']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '9']
jnz ['short', 'loc_61A1']
mov ['[ebp+var_C4],', '0']
jmp ['short', 'loc_61AB']
mov ['[ebp+var_C4],', '1']
cmp ['[ebp+var_C4],', '0']
jnz ['short', 'loc_61B9']
jmp ['$Exit$41']
mov ['esi,', 'esp']
push ['7']
push ['offset', '$SG8445']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6249']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '20h']
jz ['short', 'loc_623D']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['short', 'loc_623D']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_623D']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Dh']
jz ['short', 'loc_623D']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '9']
jnz ['short', 'loc_6249']
mov ['[ebp+var_C8],', '0']
jmp ['short', 'loc_6253']
mov ['[ebp+var_C8],', '1']
cmp ['[ebp+var_C8],', '0']
jnz ['short', 'loc_62BE']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '7']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_628A']
mov ['eax,', '[ebp+var_2C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_2C]']
add ['ecx,', '1']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
push ['eax']
call ['__bdf_add_property']
add ['esp,', '10h']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jz ['short', 'loc_62B9']
jmp ['$Exit$41']
jmp ['$Exit$41']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['__bdf_is_atom']
add ['esp,', '14h']
test ['eax,', 'eax']
jz ['short', 'loc_6315']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
push ['edx']
call ['__bdf_add_property']
add ['esp,', '10h']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jz ['short', 'loc_6310']
jmp ['$Exit$41']
jmp ['$Exit$41']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '$SG8453']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '22028h']
push ['edx']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_BC],', 'eax']
cmp ['[ebp+var_BC],', '0']
jz ['short', 'loc_6345']
jmp ['short', '$Exit$41']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+22028h]']
mov ['ecx,', '[ecx+eax]']
mov ['[ebp+var_20],', 'ecx']
push ['1']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '22028h']
push ['edx']
call ['__bdf_list_shift']
add ['esp,', '8']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '22028h']
push ['ecx']
call ['__bdf_list_join']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
push ['eax']
call ['__bdf_add_property']
add ['esp,', '10h']
mov ['[ebp+var_BC],', 'eax']
mov ['eax,', '[ebp+var_BC]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN40']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0C8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN39']
dd ['offset', '$LN35_0']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN36']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN37']
dd ['0FFFFFF4Ch,', '80h']
dd ['offset', '$LN38']
db ['0Bh', 'dup(0CCh)']
endp
__bdf_parse_start proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F0h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F0]']
mov ['ecx,', '3Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['short', 'loc_6497']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '[edx+44088h]']
mov ['[ebp+var_24],', 'eax']
mov ['esi,', 'esp']
push ['7']
push ['offset', '$SG8480']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6527']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '20h']
jz ['short', 'loc_651B']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['short', 'loc_651B']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_651B']
mov ['edx,', '1']
imul ['eax,', 'edx,', '7']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Dh']
jz ['short', 'loc_651B']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '9']
jnz ['short', 'loc_6527']
mov ['[ebp+var_D0],', '0']
jmp ['short', 'loc_6531']
mov ['[ebp+var_D0],', '1']
cmp ['[ebp+var_D0],', '0']
jnz ['short', 'loc_65A7']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+24h]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jz ['short', 'loc_65A2']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+20h],', '0']
jz ['short', 'loc_65A2']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '7']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '7']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_657D']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['__bdf_add_comment']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_65A2']
jmp ['$Exit$88']
jmp ['$Exit$88']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
and ['eax,', '1']
jnz ['loc_67E2']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+22038h]']
mov ['[ebp+var_24],', 'edx']
mov ['esi,', 'esp']
push ['9']
push ['offset', '$SG8487']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6651']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_6645']
mov ['edx,', '1']
imul ['eax,', 'edx,', '9']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_6645']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '9']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_6645']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_6645']
mov ['edx,', '1']
imul ['eax,', 'edx,', '9']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_6651']
mov ['[ebp+var_D4],', '0']
jmp ['short', 'loc_665B']
mov ['[ebp+var_D4],', '1']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_6688']
push ['offset', '$SG8488']
push ['85Dh']
push ['0B0h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B0h']
mov ['[ebp+var_2C],', 'eax']
jmp ['$Exit$88']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[ecx+20h],', '0']
mov ['[ebp+var_1C],', '0']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
push ['440A4h']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_66C5']
jmp ['$Exit$88']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+20h],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+22038h]']
mov ['[eax+44088h],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+22038h],', '0']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '44094h']
push ['edx']
call ['_hash_init']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_6711']
jmp ['$Exit$88']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_38],', 'offset', '__bdf_properties']
jmp ['short', 'loc_6733']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '1']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '10h']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_34]']
cmp ['edx,', 'ds:__num_bdf_properties']
jnb ['short', 'loc_676E']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '44094h']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_hash_insert']
add ['esp,', '10h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_676C']
jmp ['$Exit$88']
jmp ['short', 'loc_6721']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
push ['10h']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+80h],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_6797']
jmp ['$Exit$88']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '[edx+80h]']
push ['eax']
call ['_hash_init']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_67BE']
jmp ['$Exit$88']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+24h]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[edx+0Ch]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
mov ['dword', 'ptr', '[ecx+24h],', '0FFFFFFFFh']
jmp ['$Exit$88']
mov ['esi,', 'esp']
push ['0Fh']
push ['offset', '$SG8505']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6872']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Fh']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '20h']
jz ['short', 'loc_6866']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Fh']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6866']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Fh']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_6866']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Fh']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Dh']
jz ['short', 'loc_6866']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Fh']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '9']
jnz ['short', 'loc_6872']
mov ['[ebp+var_D8],', '0']
jmp ['short', 'loc_687C']
mov ['[ebp+var_D8],', '1']
cmp ['[ebp+var_D8],', '0']
jnz ['loc_6995']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
and ['eax,', '8']
jnz ['short', 'loc_68CD']
push ['offset', '$SG8507']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8508']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8509']
push ['88Fh']
push ['0B3h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B3h']
mov ['[ebp+var_2C],', 'eax']
jmp ['$Exit$88']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG8511']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '22028h']
push ['ecx']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_68FA']
jmp ['$Exit$88']
push ['0Ah']
push ['0']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+22028h]']
mov ['edx,', '[ecx+edx]']
push ['edx']
call ['__bdf_atoul']
add ['esp,', '0Ch']
mov ['[ebp+var_DC],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_DC]']
mov ['[ecx+48h],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_DC]']
mov ['[eax+4],', 'ecx']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
push ['0']
push ['10h']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+50h],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_697A']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
mov ['dword', 'ptr', '[ecx+48h],', '0']
jmp ['$Exit$88']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
or ['eax,', '10h']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[edx],', 'offset', '__bdf_parse_properties']
jmp ['$Exit$88']
mov ['esi,', 'esp']
push ['0Fh']
push ['offset', '$SG8517']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6A25']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Fh']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_6A19']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Fh']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_6A19']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Fh']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_6A19']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Fh']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_6A19']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Fh']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_6A25']
mov ['[ebp+var_E0],', '0']
jmp ['short', 'loc_6A2F']
mov ['[ebp+var_E0],', '1']
cmp ['[ebp+var_E0],', '0']
jnz ['loc_6BA0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
and ['ecx,', '4']
jnz ['short', 'loc_6A80']
push ['offset', '$SG8519']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '$SG8520']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8521']
push ['8ACh']
push ['0B2h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B2h']
mov ['[ebp+var_2C],', 'eax']
jmp ['$Exit$88']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '$SG8523']
mov ['edx,', '[ebp+var_18]']
add ['edx,', '22028h']
push ['edx']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_6AAD']
jmp ['$Exit$88']
push ['0Ah']
push ['0']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+22028h]']
mov ['eax,', '[edx+eax]']
push ['eax']
call ['__bdf_atos']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+4],', 'ax']
push ['0Ah']
push ['0']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+22028h]']
mov ['eax,', '[edx+eax]']
push ['eax']
call ['__bdf_atos']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+6],', 'ax']
push ['0Ah']
push ['0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+22028h]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
call ['__bdf_atos']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+20h]']
mov ['[ecx+8],', 'ax']
push ['0Ah']
push ['0']
mov ['edx,', '4']
shl ['edx,', '2']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+22028h]']
mov ['edx,', '[ecx+edx]']
push ['edx']
call ['__bdf_atos']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+0Ah],', 'ax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
movzx ['edx,', 'word', 'ptr', '[ecx+6]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
movsx ['eax,', 'word', 'ptr', '[ecx+0Ah]']
add ['edx,', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[ecx+20h]']
mov ['[eax+0Ch],', 'dx']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
movsx ['eax,', 'word', 'ptr', '[edx+0Ah]']
neg ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+0Eh],', 'ax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
or ['ecx,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['[edx],', 'ecx']
jmp ['$Exit$88']
mov ['esi,', 'esp']
push ['4']
push ['offset', '$SG8528']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6C30']
mov ['ecx,', '1']
shl ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '20h']
jz ['short', 'loc_6C24']
mov ['ecx,', '1']
shl ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['short', 'loc_6C24']
mov ['ecx,', '1']
shl ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_6C24']
mov ['ecx,', '1']
shl ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Dh']
jz ['short', 'loc_6C24']
mov ['ecx,', '1']
shl ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '9']
jnz ['short', 'loc_6C30']
mov ['[ebp+var_E4],', '0']
jmp ['short', 'loc_6C3A']
mov ['[ebp+var_E4],', '1']
cmp ['[ebp+var_E4],', '0']
jnz ['loc_6D87']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['offset', '$SG8530']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '22028h']
push ['eax']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_6C73']
jmp ['$Exit$88']
push ['1']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '22028h']
push ['ecx']
call ['__bdf_list_shift']
add ['esp,', '8']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['20h']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '22028h']
push ['eax']
call ['__bdf_list_join']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jnz ['short', 'loc_6CDC']
push ['offset', '$SG8533']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8534']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8535']
push ['8D1h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_2C],', 'eax']
jmp ['$Exit$88']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_6CDC']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
push ['ecx']
push ['0']
push ['1']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_6D31']
jmp ['$Exit$88']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
push ['eax']
call ['__bdf_set_default_spacing']
add ['esp,', '0Ch']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_6D75']
jmp ['$Exit$88']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
or ['edx,', '2']
mov ['eax,', '[ebp+var_18]']
mov ['[eax],', 'edx']
jmp ['$Exit$88']
mov ['esi,', 'esp']
push ['4']
push ['offset', '$SG8545']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6E17']
mov ['edx,', '1']
shl ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_6E0B']
mov ['edx,', '1']
shl ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6E0B']
mov ['edx,', '1']
shl ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_6E0B']
mov ['edx,', '1']
shl ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_6E0B']
mov ['edx,', '1']
shl ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '9']
jnz ['short', 'loc_6E17']
mov ['[ebp+var_E8],', '0']
jmp ['short', 'loc_6E21']
mov ['[ebp+var_E8],', '1']
cmp ['[ebp+var_E8],', '0']
jnz ['loc_706F']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
and ['eax,', '2']
jnz ['short', 'loc_6E72']
push ['offset', '$SG8547']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['offset', '$SG8548']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8549']
push ['8EEh']
push ['0B1h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B1h']
mov ['[ebp+var_2C],', 'eax']
jmp ['$Exit$88']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG8551']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '22028h']
push ['ecx']
call ['__bdf_list_split']
add ['esp,', '10h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_6E9F']
jmp ['$Exit$88']
push ['0Ah']
push ['0']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+22028h]']
mov ['edx,', '[ecx+edx]']
push ['edx']
call ['__bdf_atoul']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+10h],', 'eax']
push ['0Ah']
push ['0']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+22028h]']
mov ['eax,', '[edx+eax]']
push ['eax']
call ['__bdf_atoul']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+14h],', 'eax']
push ['0Ah']
push ['0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+22028h]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
call ['__bdf_atoul']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+20h]']
mov ['[ecx+18h],', 'eax']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+22030h],', '5']
jnz ['loc_704B']
push ['0Ah']
push ['0']
mov ['eax,', '4']
shl ['eax,', '2']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+22028h]']
mov ['eax,', '[edx+eax]']
push ['eax']
call ['__bdf_atos']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+44086h],', 'ax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
mov ['dx,', '[ecx+44086h]']
mov ['[ebp+var_44],', 'dx']
xor ['eax,', 'eax']
mov ['[ebp+var_3C],', 'ax']
xor ['ecx,', 'ecx']
mov ['[ebp+var_40],', 'cx']
jmp ['short', 'loc_6F85']
mov ['dx,', '[ebp+var_40]']
add ['dx,', '1']
mov ['[ebp+var_40],', 'dx']
movzx ['eax,', '[ebp+var_44]']
test ['eax,', 'eax']
jle ['short', 'loc_6FAB']
movzx ['ecx,', '[ebp+var_44]']
and ['ecx,', '1']
jz ['short', 'loc_6F9E']
mov ['dx,', '[ebp+var_40]']
mov ['[ebp+var_3C],', 'dx']
mov ['ax,', '[ebp+var_44]']
shr ['ax,', '1']
mov ['[ebp+var_44],', 'ax']
jmp ['short', 'loc_6F79']
movzx ['ecx,', '[ebp+var_3C]']
cmp ['ecx,', '3']
jle ['short', 'loc_6FC0']
mov ['[ebp+var_EC],', '8']
jmp ['short', 'loc_6FD1']
movzx ['ecx,', '[ebp+var_3C]']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['[ebp+var_EC],', 'edx']
mov ['ax,', 'word', 'ptr', '[ebp+var_EC]']
mov ['[ebp+var_44],', 'ax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
movzx ['eax,', 'word', 'ptr', '[edx+44086h]']
movzx ['ecx,', '[ebp+var_44]']
cmp ['eax,', 'ecx']
jg ['short', 'loc_7006']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
movzx ['ecx,', 'word', 'ptr', '[eax+44086h]']
movzx ['edx,', '[ebp+var_44]']
cmp ['ecx,', 'edx']
jz ['short', 'loc_7049']
movzx ['eax,', '[ebp+var_44]']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['[edx+44086h],', 'ax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_7045']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
movzx ['ecx,', 'word', 'ptr', '[eax+44086h]']
push ['ecx']
push ['offset', '$SG8570']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_7019']
jmp ['short', 'loc_705D']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '1']
mov ['[ecx+44086h],', 'dx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
or ['ecx,', '4']
mov ['edx,', '[ebp+var_18]']
mov ['[edx],', 'ecx']
jmp ['$Exit$88']
mov ['esi,', 'esp']
push ['5']
push ['offset', '$SG8573']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_70FF']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['short', 'loc_70F3']
mov ['edx,', '1']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['short', 'loc_70F3']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_70F3']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_70F3']
mov ['edx,', '1']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '9']
jnz ['short', 'loc_70FF']
mov ['[ebp+var_F0],', '0']
jmp ['short', 'loc_7109']
mov ['[ebp+var_F0],', '1']
cmp ['[ebp+var_F0],', '0']
jnz ['loc_72A7']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
and ['ecx,', '8']
jnz ['short', 'loc_715A']
push ['offset', '$SG8576']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '$SG8577']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8578']
push ['927h']
push ['0B3h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0B3h']
mov ['[ebp+var_2C],', 'eax']
jmp ['$Exit$88']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
movsx ['ecx,', 'word', 'ptr', '[ecx+0Ch]']
mov ['[eax+28h],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
movsx ['ecx,', 'word', 'ptr', '[eax+0Ch]']
mov ['esi,', 'esp']
push ['ecx']
push ['offset', '$SG8579']
lea ['edx,', '[ebp+var_C8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__sprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
lea ['ecx,', '[ebp+var_C8]']
push ['ecx']
push ['offset', '$SG8581']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
push ['eax']
call ['__bdf_add_property']
add ['esp,', '10h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_71C3']
jmp ['$Exit$88']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_71EC']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
movsx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
push ['edx']
push ['offset', '$SG8587']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_71C3']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
movsx ['edx,', 'word', 'ptr', '[edx+0Eh]']
mov ['[ecx+2Ch],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
movsx ['edx,', 'word', 'ptr', '[ecx+0Eh]']
mov ['esi,', 'esp']
push ['edx']
push ['offset', '$SG8588']
lea ['eax,', '[ebp+var_C8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__sprintf']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['edx,', '[ebp+var_C8]']
push ['edx']
push ['offset', '$SG8590']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
call ['__bdf_add_property']
add ['esp,', '10h']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_7256']
jmp ['short', '$Exit$88']
mov ['edx,', '4']
imul ['eax,', 'edx,', '41h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_727F']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+20h]']
movsx ['eax,', 'word', 'ptr', '[edx+0Eh]']
push ['eax']
push ['offset', '$SG8596']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_7256']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '1']
mov ['[eax+44084h],', 'cx']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[edx],', 'offset', '__bdf_parse_glyphs']
mov ['[ebp+var_2C],', '0FFFFFFFFh']
jmp ['short', '$Exit$88']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '$SG8597']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8598']
push ['947h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN87']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0F0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN86']
dd ['offset', '$LN83']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN84']
dd ['0FFFFFF38h,', '80h']
dd ['offset', '$LN85']
db ['8', 'dup(0CCh)']
endp
_bdf_cmap_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8Ch]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+34h]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+90h]']
mov ['[edx+14h],', 'ecx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_bdf_cmap_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['8']
endp
_bdf_cmap_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_8],', 'edx']
xor ['eax,', 'eax']
mov ['word', 'ptr', '[ebp+var_18],', 'ax']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_7463']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_10]']
shr ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx*8]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_1C]']
jnz ['short', 'loc_7448']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*8+4]']
add ['edx,', '1']
mov ['word', 'ptr', '[ebp+var_18],', 'dx']
jmp ['short', 'loc_7463']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_7458']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_7461']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_740D']
movzx ['eax,', 'word', 'ptr', '[ebp+var_18]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_bdf_cmap_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_8],', 'edx']
xor ['eax,', 'eax']
mov ['word', 'ptr', '[ebp+var_18],', 'ax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_10]']
jnb ['short', 'loc_7521']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_10]']
shr ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+ecx*8]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_20]']
jnz ['short', 'loc_7506']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*8+4]']
add ['ecx,', '1']
mov ['word', 'ptr', '[ebp+var_18],', 'cx']
jmp ['short', '$Exit$15']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_20]']
jnb ['short', 'loc_7516']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_751F']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_74CB']
mov ['[ebp+var_1C],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[edx+10h]']
jnb ['short', '$Exit$15']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+ecx*8]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*8+4]']
add ['eax,', '1']
mov ['word', 'ptr', '[ebp+var_18],', 'ax']
cmp ['[ebp+var_1C],', '0FFFFFFFFh']
jbe ['short', 'loc_7584']
mov ['ecx,', '4']
shl ['ecx,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_7575']
push ['offset', '$SG8940']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_7557']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_758C']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx],', 'edx']
movzx ['eax,', 'word', 'ptr', '[ebp+var_18]']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ah', 'dup(0CCh)']
endp
_bdf_interpret_style proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '68h']
push ['edi']
lea ['edi,', '[ebp+var_68]']
mov ['ecx,', '1Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8Ch]']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_28],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
push ['offset', '$SG8969']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['loc_76C9']
mov ['ecx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx+4],', '1']
jnz ['loc_76C9']
mov ['edx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['loc_76C9']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '4Fh']
jz ['short', 'loc_7680']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '6Fh']
jz ['short', 'loc_7680']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '49h']
jz ['short', 'loc_7680']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '69h']
jnz ['short', 'loc_76C9']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '4Fh']
jz ['short', 'loc_76B4']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '6Fh']
jz ['short', 'loc_76B4']
mov ['[ebp+var_68],', 'offset', '$SG8975']
jmp ['short', 'loc_76BB']
mov ['[ebp+var_68],', 'offset', '$SG8974']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_68]']
mov ['[ebp+eax+var_34],', 'ecx']
push ['offset', '$SG8977']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_7730']
mov ['eax,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[eax+4],', '1']
jnz ['short', 'loc_7730']
mov ['ecx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_7730']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+0Ch]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '42h']
jz ['short', 'loc_7711']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+0Ch]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '62h']
jnz ['short', 'loc_7730']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+0Ch]']
or ['eax,', '2']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['[ebp+edx+var_34],', 'offset', '$SG8981']
push ['offset', '$SG8983']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_7797']
mov ['ecx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx+4],', '1']
jnz ['short', 'loc_7797']
mov ['edx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_7797']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_7797']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '4Eh']
jz ['short', 'loc_7797']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '6Eh']
jz ['short', 'loc_7797']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+ecx+var_34],', 'eax']
push ['offset', '$SG8987']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_77FE']
mov ['edx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[edx+4],', '1']
jnz ['short', 'loc_77FE']
mov ['eax,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_77FE']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+0Ch]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_77FE']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+0Ch]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '4Eh']
jz ['short', 'loc_77FE']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+0Ch]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '6Eh']
jz ['short', 'loc_77FE']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+edx+var_34],', 'ecx']
mov ['[ebp+var_40],', '0']
mov ['[ebp+var_3C],', '0']
jmp ['short', 'loc_7817']
mov ['edx,', '[ebp+var_3C]']
add ['edx,', '1']
mov ['[ebp+var_3C],', 'edx']
cmp ['[ebp+var_3C],', '4']
jnb ['short', 'loc_785C']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+eax*4+var_54],', '0']
mov ['ecx,', '[ebp+var_3C]']
cmp ['[ebp+ecx*4+var_34],', '0']
jz ['short', 'loc_785A']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+edx*4+var_34]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+ecx*4+var_54],', 'eax']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+edx*4+var_54]']
mov ['ecx,', '[ebp+var_40]']
lea ['edx,', '[ecx+eax+1]']
mov ['[ebp+var_40],', 'edx']
jmp ['short', 'loc_780E']
cmp ['[ebp+var_40],', '0']
jnz ['short', 'loc_78A5']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['[ebp+ecx+var_34],', 'offset', '$SG8996']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+eax+var_34]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['edx,', '4']
imul ['ecx,', 'edx,', '0']
mov ['[ebp+ecx+var_54],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+eax+var_54]']
add ['ecx,', '1']
mov ['[ebp+var_40],', 'ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+18h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_78CD']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_7992']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_5C],', 'ecx']
mov ['[ebp+var_3C],', '0']
jmp ['short', 'loc_78E8']
mov ['edx,', '[ebp+var_3C]']
add ['edx,', '1']
mov ['[ebp+var_3C],', 'edx']
cmp ['[ebp+var_3C],', '4']
jnb ['loc_7989']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+eax*4+var_34]']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+edx*4+var_54]']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_60],', '0']
jnz ['short', 'loc_790E']
jmp ['short', 'loc_78DF']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_5C]']
cmp ['edx,', '[ecx+18h]']
jz ['short', 'loc_7928']
mov ['eax,', '[ebp+var_5C]']
mov ['byte', 'ptr', '[eax],', '20h']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '1']
mov ['[ebp+var_5C],', 'ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_7948']
cmp ['[ebp+var_3C],', '3']
jnz ['short', 'loc_797B']
mov ['[ebp+var_64],', '0']
jmp ['short', 'loc_795A']
mov ['edx,', '[ebp+var_64]']
add ['edx,', '1']
mov ['[ebp+var_64],', 'edx']
mov ['eax,', '[ebp+var_64]']
cmp ['eax,', '[ebp+var_40]']
jnb ['short', 'loc_797B']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '[ebp+var_64]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '20h']
jnz ['short', 'loc_7979']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '[ebp+var_64]']
mov ['byte', 'ptr', '[eax],', '2Dh']
jmp ['short', 'loc_7951']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_5C],', 'ecx']
jmp ['loc_78DF']
mov ['edx,', '[ebp+var_5C]']
mov ['byte', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '68h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN31_0']
dd ['offset', '$LN28']
db ['0CCh']
db ['3', 'dup(0FFh)']
dd ['10h']
dd ['offset', '$LN29_0']
dd ['0FFFFFFACh,', '10h']
dd ['offset', '$LN30_0']
db ['0Ah', 'dup(0CCh)']
endp
_BDF_Face_Done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_7A2D']
jmp ['loc_7B47']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8Ch]']
push ['ecx']
call ['_bdf_free_font']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+90h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+90h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_7A48']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+84h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+84h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_7A6F']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+88h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+88h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_7A96']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+14h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_7ABD']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_7ADE']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_7AFF']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_7B20']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_BDF_Face_Init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_8C]']
mov ['ecx,', '23h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ebp+arg_10],', 'ecx']
mov ['edx,', '4']
shl ['edx,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_7BC6']
push ['offset', '$SG9075']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_7BA8']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_7BE6']
jmp ['$Exit$76']
mov ['[ebp+var_38],', '1']
mov ['[ebp+var_34],', '1']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_2C],', '8']
lea ['edx,', '[ebp+var_20]']
push ['edx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_bdf_load_font']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '0FFh']
cmp ['eax,', '0B0h']
jnz ['short', 'loc_7C55']
mov ['ecx,', '4']
shl ['ecx,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_7C4A']
push ['offset', '$SG9084']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_7C2C']
jmp ['$Fail$77']
jmp ['short', 'loc_7C60']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_7C60']
jmp ['$Exit$76']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+8Ch],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_7CA7']
push ['offset', '$SG9089']
call ['_FT_Message']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_BDF_Face_Done']
add ['esp,', '4']
push ['offset', '$SG9090']
push ['181h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_83AB']
mov ['[ebp+var_40],', '0']
mov ['eax,', '4']
shl ['eax,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_7CDA']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+34h]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
push ['offset', '$SG9097']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_7CAE']
mov ['eax,', '4']
shl ['eax,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_7D0A']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+40h]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+3Ch]']
push ['ecx']
push ['offset', '$SG9102']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_7CDE']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
or ['eax,', '92h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'eax']
push ['offset', '$SG9103']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_7DA5']
mov ['eax,', '[ebp+var_40]']
cmp ['dword', 'ptr', '[eax+4],', '1']
jnz ['short', 'loc_7DA5']
mov ['ecx,', '[ebp+var_40]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_7DA5']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[edx+0Ch]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '4Dh']
jz ['short', 'loc_7D96']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[edx+0Ch]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '6Dh']
jz ['short', 'loc_7D96']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[edx+0Ch]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '43h']
jz ['short', 'loc_7D96']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[edx+0Ch]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '63h']
jnz ['short', 'loc_7DA5']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
or ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'eax']
push ['offset', '$SG9106']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_7DF2']
mov ['eax,', '[ebp+var_40]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_7DF2']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+14h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_7DF0']
jmp ['$Exit$76']
jmp ['short', 'loc_7DFC']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_bdf_interpret_style']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_7E16']
jmp ['$Exit$76']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+30h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+1Ch],', '1']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
push ['1']
push ['0']
push ['10h']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+20h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_7E58']
jmp ['$Exit$76']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_44],', 'ecx']
xor ['edx,', 'edx']
mov ['[ebp+var_48],', 'dx']
xor ['eax,', 'eax']
mov ['[ebp+var_4C],', 'ax']
push ['10h']
push ['0']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_20]']
add ['eax,', '[ecx+2Ch]']
mov ['edx,', '[ebp+var_44]']
mov ['[edx],', 'ax']
push ['offset', '$SG9121']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_7EC3']
mov ['ecx,', '[ebp+var_40]']
mov ['eax,', '[ecx+0Ch]']
add ['eax,', '5']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['edx,', '[ebp+var_44]']
mov ['[edx+2],', 'ax']
jmp ['short', 'loc_7EDA']
mov ['eax,', '[ebp+var_44]']
movsx ['eax,', 'word', 'ptr', '[eax]']
shl ['eax,', '1']
cdq
mov ['ecx,', '3']
idiv ['ecx']
mov ['edx,', '[ebp+var_44]']
mov ['[edx+2],', 'ax']
push ['offset', '$SG9126']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_7F18']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ecx+0Ch]']
shl ['edx,', '6']
imul ['eax,', 'edx,', '1C20h']
add ['eax,', '8D27h']
cdq
mov ['ecx,', '11A4Eh']
idiv ['ecx']
mov ['edx,', '[ebp+var_44]']
mov ['[edx+4],', 'eax']
jmp ['short', 'loc_7F28']
mov ['eax,', '[ebp+var_44]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+var_44]']
mov ['[edx+4],', 'ecx']
push ['offset', '$SG9130']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_7F52']
mov ['ecx,', '[ebp+var_40]']
movsx ['edx,', 'word', 'ptr', '[ecx+0Ch]']
shl ['edx,', '6']
mov ['eax,', '[ebp+var_44]']
mov ['[eax+0Ch],', 'edx']
push ['offset', '$SG9133']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_7F77']
mov ['edx,', '[ebp+var_40]']
mov ['ax,', '[edx+0Ch]']
mov ['[ebp+var_48],', 'ax']
push ['offset', '$SG9136']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_7F9C']
mov ['edx,', '[ebp+var_40]']
mov ['ax,', '[edx+0Ch]']
mov ['[ebp+var_4C],', 'ax']
mov ['ecx,', '[ebp+var_44]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jnz ['short', 'loc_7FD2']
mov ['edx,', '[ebp+var_44]']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[eax+4]']
mov ['[edx+0Ch],', 'ecx']
movsx ['edx,', '[ebp+var_4C]']
test ['edx,', 'edx']
jz ['short', 'loc_7FD2']
movsx ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[ebp+var_44]']
imul ['eax,', '[ecx+0Ch]']
cdq
mov ['ecx,', '48h']
idiv ['ecx']
mov ['edx,', '[ebp+var_44]']
mov ['[edx+0Ch],', 'eax']
movsx ['eax,', '[ebp+var_48]']
test ['eax,', 'eax']
jz ['short', 'loc_8000']
movsx ['ecx,', '[ebp+var_4C]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8000']
movsx ['edx,', '[ebp+var_48]']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', 'edx']
imul ['ecx,', '[eax+0Ch]']
movsx ['esi,', '[ebp+var_4C]']
mov ['eax,', 'ecx']
cdq
idiv ['esi']
mov ['edx,', '[ebp+var_44]']
mov ['[edx+8],', 'eax']
jmp ['short', 'loc_800C']
mov ['eax,', '[ebp+var_44]']
mov ['ecx,', '[ebp+var_44]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_50],', 'ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
push ['0']
push ['8']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+90h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8046']
jmp ['$Exit$76']
mov ['edx,', '[ebp+var_14]']
mov ['dword', 'ptr', '[edx+0A4h],', '0']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_8065']
mov ['eax,', '[ebp+var_54]']
add ['eax,', '1']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+var_54]']
cmp ['edx,', '[ecx+30h]']
jnb ['loc_8127']
imul ['eax,', '[ebp+var_54],', '24h']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+90h]']
mov ['ecx,', '[ebp+var_54]']
mov ['esi,', '[ebp+var_50]']
mov ['eax,', '[esi+eax+4]']
mov ['[edx+ecx*8],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_80BC']
imul ['edx,', '[ebp+var_54],', '24h']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[eax+edx+4]']
push ['ecx']
mov ['edx,', '[ebp+var_54]']
push ['edx']
push ['offset', '$SG9155']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_808E']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+90h]']
mov ['eax,', '[ebp+var_54]']
mov ['cx,', 'word', 'ptr', '[ebp+var_54]']
mov ['[edx+eax*8+4],', 'cx']
imul ['edx,', '[ebp+var_54],', '24h']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax+edx+4]']
cmp ['edx,', '[ecx+24h]']
jnz ['short', 'loc_8122']
cmp ['[ebp+var_54],', '0FFFFFFFFh']
jnb ['short', 'loc_80FC']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_54]']
mov ['[eax+0A4h],', 'ecx']
jmp ['short', 'loc_8122']
mov ['edx,', '4']
shl ['edx,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_811E']
mov ['eax,', '[ebp+var_54]']
push ['eax']
push ['offset', '$SG9165']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_80FC']
jmp ['loc_805C']
mov ['[ebp+var_58],', '0']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_5D],', '0']
push ['offset', '$SG9169']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_58],', 'eax']
push ['offset', '$SG9170']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_5C],', 'eax']
cmp ['[ebp+var_58],', '0']
jz ['loc_8326']
cmp ['[ebp+var_5C],', '0']
jz ['loc_8326']
mov ['ecx,', '[ebp+var_58]']
cmp ['dword', 'ptr', '[ecx+4],', '1']
jnz ['loc_8326']
mov ['edx,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[edx+4],', '1']
jnz ['loc_8326']
mov ['eax,', '[ebp+var_58]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['loc_8326']
mov ['ecx,', '[ebp+var_5C]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['loc_8326']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+84h],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_81F5']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_58]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+88h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_81FA']
jmp ['$Exit$76']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+88h]']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_64]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '69h']
jz ['short', 'loc_8232']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_64]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '49h']
jnz ['loc_82D2']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_64]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '73h']
jz ['short', 'loc_825A']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_64]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '53h']
jnz ['short', 'loc_82D2']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_64]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '6Fh']
jz ['short', 'loc_8280']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_64]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '4Fh']
jnz ['short', 'loc_82D2']
mov ['eax,', '[ebp+var_64]']
add ['eax,', '3']
mov ['[ebp+var_64],', 'eax']
push ['offset', '$SG9186']
mov ['ecx,', '[ebp+var_64]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_82CE']
push ['offset', '$SG9187']
mov ['edx,', '[ebp+var_64]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82D2']
push ['offset', '$SG9188']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+84h]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_82D2']
mov ['[ebp+var_5D],', '1']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_74],', 'edx']
mov ['[ebp+var_70],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_6C],', 'ax']
xor ['ecx,', 'ecx']
mov ['[ebp+var_6A],', 'cx']
movzx ['edx,', '[ebp+var_5D]']
test ['edx,', 'edx']
jz ['short', 'loc_830C']
mov ['[ebp+var_70],', '756E6963h']
mov ['eax,', '3']
mov ['[ebp+var_6C],', 'ax']
mov ['ecx,', '1']
mov ['[ebp+var_6A],', 'cx']
push ['0']
lea ['edx,', '[ebp+var_74]']
push ['edx']
push ['0']
push ['offset', '_bdf_cmap_class']
call ['_FT_CMap_New']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
jmp ['short', '$Exit$76']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_88],', 'eax']
mov ['[ebp+var_84],', '41444F42h']
mov ['ecx,', '7']
mov ['[ebp+var_80],', 'cx']
xor ['edx,', 'edx']
mov ['[ebp+var_7E],', 'dx']
push ['0']
lea ['eax,', '[ebp+var_88]']
push ['eax']
push ['0']
push ['offset', '_bdf_cmap_class']
call ['_FT_CMap_New']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+24h],', '0']
jz ['short', '$Exit$76']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+28h]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+edx]']
mov ['[ecx+5Ch],', 'edx']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_83AB']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_BDF_Face_Done']
add ['esp,', '4']
push ['offset', '$SG9199']
push ['25Dh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN75']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '8Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN74']
dd ['offset', '$LN69']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN70']
dd ['0FFFFFFC8h,', '10h']
dd ['offset', '$LN71']
dd ['0FFFFFF8Ch,', '0Ch']
dd ['offset', '$LN72']
dd ['0FFFFFF78h,', '0Ch']
dd ['offset', '$LN73']
align ['8']
endp
_BDF_Size_Select proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8Ch]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_FT_Select_Metrics']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+18h],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
neg ['ecx']
shl ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+4]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+24h],', 'ecx']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['8']
endp
_BDF_Size_Request proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_10],', '17h']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_8522']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ecx+8]']
imul ['eax,', '[edx+10h]']
add ['eax,', '24h']
cdq
mov ['ecx,', '48h']
idiv ['ecx']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_852B']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '20h']
sar ['edx,', '6']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_8553']
cmp ['[ebp+var_1C],', '1']
jz ['short', 'loc_856D']
jmp ['short', 'loc_8587']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '20h']
sar ['eax,', '6']
cmp ['[ebp+var_14],', 'eax']
jnz ['short', 'loc_856B']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_85A1']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+28h]']
mov ['eax,', '[ebp+var_C]']
add ['edx,', '[eax+2Ch]']
cmp ['[ebp+var_14],', 'edx']
jnz ['short', 'loc_8585']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_85A1']
push ['offset', '$SG9230']
push ['28Eh']
push ['7']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '7']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_85AE']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_85BC']
jmp ['short', 'loc_85BC']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_BDF_Size_Select']
add ['esp,', '8']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_BDF_Glyph_Load	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_48]']
mov ['ecx,', '12h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4Ch']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8Ch]']
movzx ['eax,', 'word', 'ptr', '[edx+44086h]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_8655']
push ['offset', '$SG9253']
push ['2ACh']
push ['23h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '23h']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$26']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+10h]']
jb ['short', 'loc_867F']
push ['offset', '$SG9257']
push ['2B2h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_10],', 'eax']
jmp ['$Exit$26']
mov ['ecx,', '4']
shl ['ecx,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_86A1']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '$SG9262']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_867F']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_86B9']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0A4h]']
mov ['[ebp+arg_8],', 'edx']
jmp ['short', 'loc_86C2']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8Ch]']
imul ['eax,', '[ebp+arg_8],', '24h']
mov ['esi,', '[edx+38h]']
add ['esi,', 'eax']
mov ['ecx,', '9']
lea ['edi,', '[ebp+var_3C]']
rep ['movsd']
movzx ['ecx,', '[ebp+var_2E]']
mov ['edx,', '[ebp+var_14]']
mov ['[edx],', 'ecx']
movzx ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+4],', 'eax']
cmp ['[ebp+var_20],', '7FFFFFFFh']
jbe ['short', 'loc_8720']
mov ['edx,', '4']
shl ['edx,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_871C']
mov ['eax,', '[ebp+var_20]']
push ['eax']
push ['offset', '$SG9270']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_86FA']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ft_glyphslot_set_bitmap']
add ['esp,', '8']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
sub ['ecx,', '1']
mov ['[ebp+var_48],', 'ecx']
cmp ['[ebp+var_48],', '7']
ja ['short', '$LN5_1']
mov ['edx,', '[ebp+var_48]']
jmp ['ds:$LN25[edx*4]']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+12h],', '1']
jmp ['short', '$LN5_1']
mov ['ecx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[ecx+12h],', '3']
jmp ['short', '$LN5_1']
mov ['edx,', '[ebp+var_14]']
mov ['byte', 'ptr', '[edx+12h],', '4']
jmp ['short', '$LN5_1']
mov ['eax,', '[ebp+var_14]']
mov ['byte', 'ptr', '[eax+12h],', '2']
mov ['ecx,', '100h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+10h],', 'cx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+48h],', '62697473h']
movsx ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+64h],', 'ecx']
movsx ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+68h],', 'eax']
movzx ['edx,', '[ebp+var_32]']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'edx']
movsx ['ecx,', '[ebp+var_2C]']
shl ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+20h],', 'ecx']
movsx ['eax,', '[ebp+var_28]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+24h],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+18h],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8Ch]']
movzx ['ecx,', 'word', 'ptr', '[eax+6]']
shl ['ecx,', '6']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '18h']
push ['edx']
call ['_ft_synthesize_vertical_metrics']
add ['esp,', '8']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN24']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '48h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN23']
dd ['offset', '$LN22']
align ['4']
dd ['offset', '$LN3_0']
dd ['offset', '$LN5_1']
dd ['offset', '$LN2_0']
dd ['offset', '$LN5_1']
dd ['offset', '$LN5_1']
dd ['offset', '$LN5_1']
dd ['offset', '$LN1_0']
align ['8']
endp
_bdf_get_bdf_property proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_889E']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+8Ch],', '0']
jnz ['short', 'loc_88B5']
push ['offset', '$SG9294']
push ['301h']
push ['offset', '$SG9295']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_888C']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8Ch]']
push ['ecx']
call ['_bdf_get_font_property']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['$Fail$26']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
jz ['short', 'loc_88FC']
cmp ['[ebp+var_8],', '2']
jz ['short', 'loc_8916']
cmp ['[ebp+var_8],', '3']
jz ['short', 'loc_8967']
jmp ['loc_89A9']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[edx+4],', 'ecx']
jmp ['loc_89AB']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '7FFFFFFFh']
jg ['short', 'loc_892E']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '80000000h']
jge ['short', 'loc_8950']
mov ['ecx,', '4']
shl ['ecx,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_894C']
push ['offset', '$SG9309']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_892E']
mov ['eax,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[eax],', '2']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx+4],', 'eax']
jmp ['short', 'loc_89AB']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0FFFFFFFFh']
jbe ['short', 'loc_8992']
mov ['edx,', '4']
shl ['edx,', '6']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_898E']
push ['offset', '$SG9317']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_8970']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '3']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_89AB']
jmp ['short', '$Fail$26']
xor ['eax,', 'eax']
jmp ['short', 'loc_89C6']
push ['offset', '$SG9321']
push ['328h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['8']
endp
_bdf_get_charset_id proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+84h]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+88h]']
mov ['[eax],', 'edx']
xor ['eax,', 'eax']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_bdf_driver_requester proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '_bdf_services']
call ['_ft_service_list_lookup']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rdata']
dd ['offset', '_bdf_get_bdf_property']
dd ['offset', '_bdf_service_bdf']
dd ['offset', '$SG9337']
dd ['offset', '$SG9338']
dd ['2', 'dup(0)']
dd ['8']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7428']
dd ['2,', '1,', '0']
dd ['offset', '$SG7429']
dd ['2,', '1,', '0']
dd ['offset', '$SG7430']
dd ['2,', '1,', '0']
dd ['offset', '$SG7431']
dd ['2,', '1,', '0']
dd ['offset', '$SG7432']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7433']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7434']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7435']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7436']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7437']
dd ['3,', '1,', '0']
dd ['offset', '$SG7438']
dd ['3,', '1,', '0']
dd ['offset', '$SG7439']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7440']
dd ['2,', '1,', '0']
dd ['offset', '$SG7441']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7442']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7443']
dd ['2,', '1,', '0']
dd ['offset', '$SG7444']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7445']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7446']
dd ['2,', '1,', '0']
dd ['offset', '$SG7447']
dd ['2,', '1,', '0']
dd ['offset', '$SG7448']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7449']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7450']
dd ['2,', '1,', '0']
dd ['offset', '$SG7451']
dd ['2,', '1,', '0']
dd ['offset', '$SG7452']
dd ['2,', '1,', '0']
dd ['offset', '$SG7453']
dd ['2,', '1,', '0']
dd ['offset', '$SG7454']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7455']
dd ['2,', '1,', '0']
dd ['offset', '$SG7456']
dd ['2,', '1,', '0']
dd ['offset', '$SG7457']
dd ['2,', '1,', '0']
dd ['offset', '$SG7458']
dd ['2,', '1,', '0']
dd ['offset', '$SG7459']
dd ['2,', '1,', '0']
dd ['offset', '$SG7460']
dd ['2,', '1,', '0']
dd ['offset', '$SG7461']
dd ['2,', '1,', '0']
dd ['offset', '$SG7462']
dd ['2,', '1,', '0']
dd ['offset', '$SG7463']
dd ['2,', '1,', '0']
dd ['offset', '$SG7464']
dd ['2,', '1,', '0']
dd ['offset', '$SG7465']
dd ['2,', '1,', '0']
dd ['offset', '$SG7466']
dd ['2,', '1,', '0']
dd ['offset', '$SG7467']
dd ['2,', '1,', '0']
dd ['offset', '$SG7468']
dd ['2,', '1,', '0']
dd ['offset', '$SG7469']
dd ['2,', '1,', '0']
dd ['offset', '$SG7470']
dd ['2,', '1,', '0']
dd ['offset', '$SG7471']
dd ['2,', '1,', '0']
dd ['offset', '$SG7472']
dd ['2,', '1,', '0']
dd ['offset', '$SG7473']
dd ['2,', '1,', '0']
dd ['offset', '$SG7474']
dd ['2,', '1,', '0']
dd ['offset', '$SG7475']
dd ['2,', '1,', '0']
dd ['offset', '$SG7476']
dd ['2,', '1,', '0']
dd ['offset', '$SG7477']
dd ['2,', '1,', '0']
dd ['offset', '$SG7478']
dd ['2,', '1,', '0']
dd ['offset', '$SG7479']
dd ['2,', '1,', '0']
dd ['offset', '$SG7480']
dd ['2,', '1,', '0']
dd ['offset', '$SG7481']
dd ['2,', '1,', '0']
dd ['offset', '$SG7482']
dd ['2,', '1,', '0']
dd ['offset', '$SG7483']
dd ['2,', '1,', '0']
dd ['offset', '$SG7484']
dd ['2,', '1,', '0']
dd ['offset', '$SG7485']
dd ['2,', '1,', '0']
dd ['offset', '$SG7486']
dd ['3,', '1,', '0']
dd ['offset', '$SG7487']
dd ['3,', '1,', '0']
dd ['offset', '$SG7488']
dd ['2,', '1,', '0']
dd ['offset', '$SG7489']
dd ['3,', '1,', '0']
dd ['offset', '$SG7490']
dd ['3,', '1,', '0']
dd ['offset', '$SG7491']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7492']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7493']
dd ['2,', '1,', '0']
dd ['offset', '$SG7494']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7495']
dd ['2,', '1,', '0']
dd ['offset', '$SG7496']
dd ['2,', '1,', '0']
dd ['offset', '$SG7497']
dd ['2,', '1,', '0']
dd ['offset', '$SG7498']
dd ['2,', '1,', '0']
dd ['offset', '$SG7499']
dd ['2,', '1,', '0']
dd ['offset', '$SG7500']
dd ['2,', '1,', '0']
dd ['offset', '$SG7501']
dd ['2,', '1,', '0']
dd ['offset', '$SG7502']
dd ['2,', '1,', '0']
dd ['offset', '$SG7503']
dd ['2,', '1,', '0']
dd ['offset', '$SG7504']
dd ['2,', '1,', '0']
dd ['offset', '$SG7505']
dd ['3,', '1,', '0']
dd ['offset', '$SG7506']
dd ['2', 'dup(1),', '0']
dd ['offset', '$SG7507']
dd ['2,', '1,', '0']
dd ['offset', '$SG7508']
dd ['2,', '1,', '0']
dd ['offset', '$SG7509']
dd ['2,', '1,', '0']
public ['_bdf_driver_class']
dd ['1Ch']
dd ['offset', '$SG9349']
dd ['10000h,', '20000h,', '3', 'dup(0)']
dd ['offset', '_bdf_driver_requester']
dd ['offset', '$SG8204+28h']
dd ['offset', '$SG8196+1Ch']
dd ['offset', '$SG8204+20h']
dd ['offset', '_BDF_Face_Init']
dd ['offset', '_BDF_Face_Done']
dd ['4', 'dup(0)']
dd ['offset', '_BDF_Glyph_Load']
dd ['3', 'dup(0)']
dd ['offset', '_BDF_Size_Request']
dd ['offset', '_BDF_Size_Select']
align ['4']
dd ['0Bh', 'dup(0)']
dd ['3020100h,', '7060504h,', '908h,', '0']
dd ['0C0B0A00h,', '0F0E0Dh,', '6', 'dup(0)']
dd ['0C0B0A00h,', '0F0E0Dh,', '6', 'dup(0)']
dd ['0FF0000h,', '6', 'dup(0)']
dd ['3FF0000h,', '6', 'dup(0)']
align ['4']
dd ['3FF0000h,', '2', 'dup(7Eh),', '4', 'dup(0)']
dd ['offset', '_bdf_cmap_init']
dd ['offset', '_bdf_cmap_done']
dd ['offset', '_bdf_cmap_char_index']
dd ['offset', '_bdf_cmap_char_next']
dd ['5', 'dup(0)']
db ['80h,', '0C0h,', '0E0h']
dd ['0FEFCF8F0h']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_memcpy:near']
extrn ['_memset:near']
extrn ['_strcmp:near']
extrn ['_strlen:near']
extrn ['__imp__memmove:near']
extrn ['__imp__strncmp:near']
extrn ['__imp__sprintf:near']
extrn ['__imp__qsort:near']
extrn ['_FT_MulDiv:near']
extrn ['_FT_Message:near']
extrn ['_FT_Panic:near']
extrn ['_FT_Throw:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_realloc:near']
extrn ['_ft_mem_free:near']
extrn ['_ft_mem_strdup:near']
extrn ['_ft_service_list_lookup:near']
extrn ['_FT_CMap_New:near']
extrn ['_FT_Select_Metrics:near']
extrn ['_ft_synthesize_vertical_metrics:near']
extrn ['_ft_glyphslot_set_bitmap:near']
extrn ['_FT_Stream_Seek:near']
extrn ['_FT_Stream_TryRead:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['_ft_trace_levels:near']
extrn ['___security_cookie:near']
end

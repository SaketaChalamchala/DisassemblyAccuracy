endp
_cid_parser_new	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '148h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_148]']
mov ['ecx,', '52h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
push ['64h']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
push ['0']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+48h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
push ['1Fh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_FB9']
jmp ['$Exit$45']
mov ['esi,', 'esp']
push ['1Fh']
push ['offset', '$SG8183']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+20h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_1016']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_FFB']
push ['offset', '$SG8188']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_FDD']
push ['offset', '$SG8189']
push ['4Dh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
cmp ['[ebp+var_8],', '0']
jz ['short', '$Again$46']
jmp ['$Exit$45']
mov ['[ebp+var_13C],', '10Ah']
lea ['ecx,', '[ebp+var_134]']
mov ['[ebp+var_140],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_105F']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '100h']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['ecx,', '[edx+4]']
sub ['ecx,', 'eax']
mov ['[ebp+var_144],', 'ecx']
jnz ['short', 'loc_10B9']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_1099']
push ['offset', '$SG8204']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_107B']
push ['offset', '$SG8205']
push ['66h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$45']
mov ['edx,', '[ebp+var_13C]']
cmp ['edx,', '[ebp+var_144]']
jge ['short', 'loc_10D5']
mov ['eax,', '[ebp+var_13C]']
mov ['[ebp+var_148],', 'eax']
jmp ['short', 'loc_10E1']
mov ['ecx,', '[ebp+var_144]']
mov ['[ebp+var_148],', 'ecx']
mov ['edx,', '[ebp+var_148]']
mov ['[ebp+var_13C],', 'edx']
mov ['eax,', '[ebp+var_13C]']
push ['eax']
mov ['ecx,', '[ebp+var_140]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1115']
jmp ['$Exit$45']
cmp ['[ebp+var_13C],', '100h']
jge ['short', 'loc_1130']
mov ['eax,', '[ebp+var_140]']
add ['eax,', '[ebp+var_13C]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_13C]']
mov ['edx,', '[ebp+var_140]']
lea ['eax,', '[edx+ecx-0Ah]']
mov ['[ebp+var_1C],', 'eax']
lea ['ecx,', '[ebp+var_134]']
mov ['[ebp+var_140],', 'ecx']
jmp ['short', 'loc_1160']
mov ['edx,', '[ebp+var_140]']
add ['edx,', '1']
mov ['[ebp+var_140],', 'edx']
mov ['eax,', '[ebp+var_140]']
cmp ['eax,', '[ebp+var_1C]']
jnb ['loc_1223']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_140]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '53h']
jnz ['short', 'loc_11C9']
mov ['esi,', 'esp']
push ['9']
push ['offset', '$SG8215']
mov ['edx,', '[ebp+var_140]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_11C9']
mov ['eax,', '[ebp+var_140]']
lea ['ecx,', '[ebp+var_134]']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', '[edx+eax+0Ah]']
mov ['[ebp+var_10],', 'eax']
jmp ['$Found$47']
jmp ['short', 'loc_121E']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_140]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '73h']
jnz ['short', 'loc_121E']
mov ['esi,', 'esp']
push ['6']
push ['offset', '$SG8221']
mov ['ecx,', '[ebp+var_140]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_121E']
mov ['edx,', '[ebp+var_140]']
lea ['eax,', '[ebp+var_134]']
sub ['edx,', 'eax']
mov ['ecx,', '[ebp+var_10]']
lea ['edx,', '[ecx+edx+7]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', '$Found$47']
jmp ['loc_1151']
mov ['esi,', 'esp']
push ['0Ah']
mov ['eax,', '[ebp+var_140]']
push ['eax']
lea ['ecx,', '[ebp+var_134]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_13C],', '100h']
lea ['edx,', '[ebp+var_12A]']
mov ['[ebp+var_140],', 'edx']
jmp ['loc_1054']
mov ['eax,', '[ebp+var_10]']
sub ['eax,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_12A2']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4Ch']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ExtractFrame']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_12A7']
jmp ['$Exit$45']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+54h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+50h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
add ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+60h],', '0FFFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_1C]']
jnb ['loc_14C1']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_138C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_8],', 'ecx']
jmp ['$Exit$45']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_18]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '53h']
jnz ['short', 'loc_1405']
mov ['esi,', 'esp']
push ['9']
push ['offset', '$SG8234']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_1405']
mov ['esi,', 'esp']
push ['5']
push ['offset', '$SG8237']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_13FE']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__atol']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+58h],', 'eax']
jmp ['$Exit$45']
jmp ['short', 'loc_1478']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '73h']
jnz ['short', 'loc_1478']
mov ['esi,', 'esp']
push ['6']
push ['offset', '$SG8242']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_1478']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_1458']
push ['offset', '$SG8247']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_143A']
push ['offset', '$SG8248']
push ['0BAh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$45']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
jmp ['loc_1369']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4Ch']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', '$Exit$45']
jmp ['$Again$46']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN44']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '148h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN43']
db ['0FEh,', '2', 'dup(0FFh)']
dd ['offset', 'unk_10A']
dd ['offset', '$LN42']
db ['0Dh', 'dup(0CCh)']
endp
_cid_parser_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+4Ch],', '0']
jz ['short', 'loc_157D']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+48h]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4Ch']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FT_Stream_ReleaseFrame']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_cid_get_offset	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_15DA']
mov ['dl,', '[ebp+arg_4]']
sub ['dl,', '1']
mov ['[ebp+arg_4],', 'dl']
movzx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jle ['short', 'loc_1602']
mov ['ecx,', '[ebp+var_4]']
shl ['ecx,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
or ['eax,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_15D1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_cid_face_open	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '84h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_84]']
mov ['ecx,', '21h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_78],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_6C]']
push ['eax']
call ['_cid_init_loader']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+88h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
push ['edx']
call ['_cid_parser_new']
add ['esp,', '10h']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_168A']
jmp ['$Exit$15']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_cid_parse_dict']
add ['esp,', '10h']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_16B6']
jmp ['$Exit$15']
cmp ['[ebp+arg_4],', '0']
jge ['short', 'loc_16C1']
jmp ['$Exit$15']
lea ['eax,', '[ebp+var_80]']
push ['eax']
push ['28h']
mov ['ecx,', '[ebp+var_78]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+148h],', 'eax']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_16E7']
jmp ['$Exit$15']
mov ['eax,', '[ebp+var_74]']
cmp ['dword', 'ptr', '[eax+58h],', '0']
jz ['loc_1776']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
mov ['edx,', '[ebp+var_74]']
mov ['eax,', '[edx+58h]']
push ['eax']
mov ['ecx,', '[ebp+var_78]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+144h],', 'eax']
cmp ['[ebp+var_80],', '0']
jnz ['short', 'loc_1742']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx+54h]']
push ['edx']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[eax+58h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+144h]']
push ['eax']
call ['_cid_hex_to_binary']
add ['esp,', '10h']
test ['eax,', 'eax']
jz ['short', 'loc_1744']
jmp ['short', '$Exit$15']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx+58h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+144h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+148h]']
push ['eax']
call ['_FT_Stream_OpenMemory']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+134h],', '0']
jmp ['short', 'loc_1798']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '0Ah']
mov ['esi,', '[edx+68h]']
mov ['edi,', '[eax+148h]']
rep ['movsd']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+134h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cid_read_subrs']
add ['esp,', '4']
mov ['[ebp+var_80],', 'eax']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
call ['_cid_done_loader']
add ['esp,', '4']
mov ['eax,', '[ebp+var_80]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN14']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '84h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN13']
dd ['offset', '$LN11']
dd ['0FFFFFF80h,', '4']
dd ['offset', '$LN12']
align ['4']
endp
_cid_load_keyword proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_28]']
mov ['ecx,', '0Ah']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8Ch']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[edx+8],', '0Bh']
jnz ['short', 'loc_1868']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_4],', 'edx']
jmp ['$Exit$24']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_24],', 'ecx']
cmp ['[ebp+var_24],', '5']
ja ['short', '$LN10']
mov ['edx,', '[ebp+var_24]']
jmp ['ds:$LN23[edx*4]']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_193C']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '18h']
mov ['[ebp+var_C],', 'ecx']
jmp ['loc_193C']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '138h']
mov ['[ebp+var_C],', 'edx']
jmp ['loc_193C']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '38h']
mov ['[ebp+var_C],', 'eax']
jmp ['loc_193C']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+60h],', '0']
jl ['short', 'loc_18D3']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[edx+60h]']
cmp ['ecx,', '[eax+0A0h]']
jl ['short', 'loc_1907']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
push ['eax']
push ['offset', '$SG8385']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8386']
push ['75h']
push ['0A0h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A0h']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$24']
mov ['ecx,', '[ebp+var_8]']
imul ['edx,', '[ecx+60h],', '0FCh']
mov ['eax,', '[ebp+var_1C]']
add ['edx,', '[eax+0A4h]']
mov ['[ebp+var_20],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_28],', 'edx']
cmp ['[ebp+var_28],', '4']
jz ['short', 'loc_192E']
jmp ['short', 'loc_1936']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_193C']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+8],', '9']
jz ['short', 'loc_1954']
mov ['ecx,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[ecx+8],', '0Ah']
jnz ['short', 'loc_197D']
mov ['esi,', 'esp']
push ['0']
push ['0']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+44h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Exit$24']
mov ['esi,', 'esp']
push ['0']
push ['0']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+40h]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '28h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN21']
dd ['offset', '$LN20']
align ['4']
dd ['offset', '$LN10']
dd ['offset', '$LN12_0']
dd ['offset', '$LN13_0']
dd ['offset', '$LN10']
dd ['offset', '$LN11_0']
db ['8', 'dup(0CCh)']
endp
_cid_parse_font_matrix proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[ecx+60h],', '0']
jl ['loc_1CA6']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+60h]']
cmp ['ecx,', '[eax+12Ch]']
jge ['loc_1CA6']
mov ['edx,', '[ebp+arg_4]']
imul ['eax,', '[edx+60h],', '0FCh']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+130h]']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '0D8h']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0E8h']
mov ['[ebp+var_38],', 'eax']
mov ['esi,', 'esp']
push ['3']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
push ['6']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+34h]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '6']
jge ['short', 'loc_1AC7']
push ['offset', '$SG8414']
push ['0ADh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_1CA8']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
cmp ['[ebp+eax+var_28],', '0']
jge ['short', 'loc_1AE9']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+edx+var_28]']
neg ['eax']
mov ['[ebp+var_40],', 'eax']
jmp ['short', 'loc_1AF8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+edx+var_28]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_30],', 'ecx']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_1B2D']
push ['offset', '$SG8416']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8417']
push ['0B4h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_1CA8']
mov ['edx,', '[ebp+var_30]']
push ['edx']
push ['3E8h']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['[ecx+44h],', 'ax']
cmp ['[ebp+var_30],', '10000h']
jz ['loc_1C37']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+ecx+var_28]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['[ebp+edx+var_28],', 'eax']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+ecx+var_28]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['[ebp+ecx+var_28],', 'eax']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+eax+var_28]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['[ebp+edx+var_28],', 'eax']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '[ebp+ecx+var_28]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['[ebp+ecx+var_28],', 'eax']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+ecx+var_28]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '5']
mov ['[ebp+edx+var_28],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
cmp ['[ebp+ecx+var_28],', '0']
jge ['short', 'loc_1C21']
mov ['[ebp+var_44],', '0FFFF0000h']
jmp ['short', 'loc_1C28']
mov ['[ebp+var_44],', '10000h']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+eax+var_28],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+eax+var_28]']
mov ['[ecx],', 'edx']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+eax+var_28]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ebp+eax+var_28]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[ebp+ecx+var_28]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '[ebp+ecx+var_28]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_38]']
mov ['[eax],', 'edx']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+edx+var_28]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx+4],', 'eax']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN13_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN12_1']
dd ['offset', '$LN11_1']
db ['0Fh', 'dup(0CCh)']
endp
_parse_fd_array	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8Ch']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0A4h],', '0']
jnz ['short', '$Exit$11']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_18]']
push ['edx']
push ['0']
push ['0FCh']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0A4h],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1D90']
jmp ['short', '$Exit$11']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+0A0h],', 'eax']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_1DAE']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[edx+0A0h]']
jge ['short', '$Exit$11']
imul ['ecx,', '[ebp+var_1C],', '0FCh']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+0A4h]']
mov ['[ebp+var_20],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['dword', 'ptr', '[eax+4],', '4']
jmp ['short', 'loc_1DA5']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN10_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN9']
dd ['offset', '$LN8']
align ['4']
endp
_parse_expansion_factor	proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+60h],', '0']
jl ['short', 'loc_1E8D']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+60h]']
cmp ['eax,', '[edx+12Ch]']
jge ['short', 'loc_1E8D']
mov ['ecx,', '[ebp+arg_4]']
imul ['edx,', '[ecx+60h],', '0FCh']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+130h]']
mov ['[ebp+var_4],', 'edx']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0D0h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0D0h]']
mov ['[edx+0B4h],', 'ecx']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cid_parse_dict	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+arg_C]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_C]']
jb ['short', 'loc_1F38']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '12h']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_1F43']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
sub ['edx,', '11h']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_1F4E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_10]']
jnb ['short', 'loc_1F9F']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '25h']
jnz ['short', 'loc_1F9D']
mov ['esi,', 'esp']
push ['11h']
push ['offset', '$SG8781']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_1F9D']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+12Ch],', '0']
jle ['short', 'loc_1F9D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+60h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+60h],', 'ecx']
jmp ['short', 'loc_1F45']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+var_C]']
jb ['short', 'loc_1FB4']
jmp ['loc_20FB']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_1FDF']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_1FE4']
jmp ['loc_20FB']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Fh']
jnz ['loc_20EE']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '2']
cmp ['edx,', '[ebp+var_C]']
jnb ['loc_20EE']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+var_8]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jle ['loc_20EE']
cmp ['[ebp+var_14],', '16h']
jge ['loc_20EE']
mov ['[ebp+var_18],', 'offset', '_cid_field_records']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jnz ['short', 'loc_2044']
jmp ['loc_20EE']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
cmp ['edx,', 'ecx']
jnz ['short', 'loc_20E0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
cmp ['[ebp+var_14],', 'eax']
jnz ['short', 'loc_20E0']
mov ['[ebp+var_20],', '1']
jmp ['short', 'loc_2089']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+var_14]']
jge ['short', 'loc_20AB']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '[ebp+var_20]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '[ebp+var_20]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jz ['short', 'loc_20A9']
jmp ['short', 'loc_20AB']
jmp ['short', 'loc_2080']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[ebp+var_14]']
jl ['short', 'loc_20E0']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cid_load_keyword']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_20DE']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
jmp ['short', 'loc_2101']
jmp ['short', 'loc_20EE']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '24h']
mov ['[ebp+var_18],', 'ecx']
jmp ['loc_2031']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
jmp ['loc_1F03']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+0Ch]']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_cid_read_subrs	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '58h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_58]']
mov ['ecx,', '16h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8Ch']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+148h]']
mov ['[ebp+var_C],', 'ecx']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_28],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+88h]']
mov ['[ebp+var_2C],', 'eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0A0h]']
push ['eax']
push ['0']
push ['8']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+13Ch],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_21A1']
jmp ['$Exit$52']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+13Ch]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_21C8']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ecx+0A0h]']
jge ['$Exit$52']
imul ['eax,', '[ebp+var_1C],', '0FCh']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+0A4h]']
mov ['[ebp+var_30],', 'eax']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+0F0h]']
mov ['[ebp+var_3C],', 'edx']
cmp ['[ebp+var_3C],', '0FFFFFFFFh']
jnz ['short', 'loc_222C']
push ['offset', '$SG8835']
push ['1AEh']
push ['0A0h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A0h']
mov ['[ebp+var_14],', 'eax']
jmp ['$Fail$53']
mov ['eax,', '[ebp+var_3C]']
add ['eax,', '1']
cmp ['eax,', '[ebp+var_24]']
jbe ['short', 'loc_22A1']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '4']
and ['ecx,', '0FFFFFFFCh']
mov ['[ebp+var_50],', 'ecx']
mov ['edx,', '[ebp+var_50]']
cmp ['edx,', '[ebp+var_24]']
ja ['short', 'loc_226F']
push ['offset', '$SG8840']
push ['1BAh']
push ['0A0h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A0h']
mov ['[ebp+var_14],', 'eax']
jmp ['$Fail$53']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_229B']
jmp ['$Fail$53']
mov ['edx,', '[ebp+var_50]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0A8h]']
mov ['edx,', '[ebp+var_30]']
add ['ecx,', '[edx+0F4h]']
push ['ecx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_22EF']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_30]']
imul ['ecx,', '[edx+0F8h]']
push ['ecx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_22F4']
jmp ['$Fail$53']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_48],', 'edx']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_230F']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[ebp+var_3C]']
ja ['short', 'loc_2339']
mov ['edx,', '[ebp+var_30]']
movzx ['eax,', 'byte', 'ptr', '[edx+0F8h]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['_cid_get_offset']
add ['esp,', '8']
mov ['edx,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+edx*4],', 'eax']
jmp ['short', 'loc_2306']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['[ebp+var_38],', '1']
jmp ['short', 'loc_2357']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[ebp+var_3C]']
ja ['short', 'loc_237B']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_38]']
mov ['esi,', '[ebp+var_28]']
mov ['edx,', '[eax+edx*4-4]']
cmp ['edx,', '[esi+ecx*4]']
jbe ['short', 'loc_2379']
jmp ['$Fail$53']
jmp ['short', 'loc_234E']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ebp+var_28]']
mov ['esi,', '[ebp+var_28]']
mov ['edx,', '[eax+edx*4]']
sub ['edx,', '[esi+ecx]']
mov ['[ebp+var_40],', 'edx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '1']
push ['ecx']
push ['0']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+4],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_23E9']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['edx,', '4']
imul ['ecx,', 'edx,', '0']
mov ['edx,', '[ebp+var_20]']
mov ['edx,', '[edx+4]']
mov ['[ecx+edx],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_23EE']
jmp ['$Fail$53']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0A8h]']
mov ['edx,', '[ebp+var_28]']
add ['eax,', '[edx+ecx]']
push ['eax']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_2446']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+eax]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_244B']
jmp ['$Fail$53']
mov ['[ebp+var_38],', '1']
jmp ['short', 'loc_245D']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '1']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[ebp+var_3C]']
ja ['short', 'loc_2499']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+var_38]']
mov ['esi,', '[ebp+var_28]']
mov ['ecx,', '[edx+ecx*4]']
sub ['ecx,', '[esi+eax*4-4]']
mov ['[ebp+var_54],', 'ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[eax+ecx*4-4]']
add ['edx,', '[ebp+var_54]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+4]']
mov ['eax,', '[ebp+var_38]']
mov ['[ecx+eax*4],', 'edx']
jmp ['short', 'loc_2454']
cmp ['[ebp+var_34],', '0']
jl ['short', 'loc_24FB']
mov ['[ebp+var_38],', '0']
jmp ['short', 'loc_24B1']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
cmp ['edx,', '[ebp+var_3C]']
jnb ['short', 'loc_24FB']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+var_38]']
mov ['esi,', '[ebp+var_28]']
mov ['eax,', '[ecx+eax*4+4]']
sub ['eax,', '[esi+edx*4]']
mov ['[ebp+var_58],', 'eax']
mov ['esi,', 'esp']
push ['10EAh']
mov ['ecx,', '[ebp+var_58]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_24A8']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_3C]']
mov ['[edx],', 'eax']
jmp ['loc_21B6']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_28],', '0']
xor ['eax,', 'eax']
jnz ['short', '$Exit$52']
mov ['eax,', '[ebp+var_14]']
jmp ['loc_2623']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+13Ch],', '0']
jz ['loc_261E']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_254D']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[eax+0A0h]']
jge ['loc_25F7']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+13Ch]']
mov ['ecx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[eax+ecx*8+4],', '0']
jz ['short', 'loc_25BD']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+13Ch]']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['eax,', '[eax+ecx*8+4]']
mov ['ecx,', '[eax+edx]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+13Ch]']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_1C]']
mov ['ecx,', '[ecx+edx*8+4]']
mov ['dword', 'ptr', '[eax+ecx],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_2572']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+13Ch]']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ecx+edx*8+4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+13Ch]']
mov ['ecx,', '[ebp+var_1C]']
mov ['dword', 'ptr', '[eax+ecx*8+4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_25BD']
jmp ['loc_2544']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+13Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+13Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_25F7']
jmp ['$Exit$52']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN51']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '58h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN50']
dd ['offset', '$LN48']
dd ['0FFFFFFB8h,', '4']
dd ['offset', '$LN49']
endp
_cid_init_loader proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
push ['68h']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_cid_done_loader proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cid_parser_done']
add ['esp,', '4']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cid_hex_to_binary proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '134h']
push ['edi']
lea ['edi,', '[ebp+var_134]']
mov ['ecx,', '4Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2719']
jmp ['$Exit$29']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_120],', 'ecx']
mov ['edx,', '[ebp+var_120]']
add ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_124],', 'edx']
lea ['eax,', '[ebp+var_110]']
mov ['[ebp+var_118],', 'eax']
mov ['ecx,', '[ebp+var_118]']
mov ['[ebp+var_11C],', 'ecx']
mov ['[ebp+var_126],', '1']
mov ['[ebp+var_127],', '0']
mov ['edx,', '[ebp+var_120]']
cmp ['edx,', '[ebp+var_124]']
jnb ['loc_29F1']
mov ['eax,', '[ebp+var_118]']
cmp ['eax,', '[ebp+var_11C]']
jb ['loc_283B']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['[ebp+var_12C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
sub ['eax,', '[ebp+var_12C]']
mov ['[ebp+var_130],', 'eax']
jnz ['short', 'loc_27C5']
push ['offset', '$SG8938']
push ['249h']
push ['0A0h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A0h']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$29']
cmp ['[ebp+var_130],', '100h']
jnb ['short', 'loc_27DF']
mov ['ecx,', '[ebp+var_130]']
mov ['[ebp+var_134],', 'ecx']
jmp ['short', 'loc_27E9']
mov ['[ebp+var_134],', '100h']
mov ['edx,', '[ebp+var_134]']
push ['edx']
lea ['eax,', '[ebp+var_110]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2811']
jmp ['$Exit$29']
lea ['edx,', '[ebp+var_110]']
mov ['[ebp+var_118],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_FT_Stream_Pos']
add ['esp,', '4']
add ['eax,', '[ebp+var_118]']
sub ['eax,', '[ebp+var_12C]']
mov ['[ebp+var_11C],', 'eax']
mov ['ecx,', '[ebp+var_118]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
sub ['edx,', '30h']
cmp ['edx,', '0Ah']
jnb ['short', 'loc_2863']
mov ['eax,', '[ebp+var_118]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '30h']
mov ['[ebp+var_125],', 'cl']
jmp ['loc_2974']
mov ['edx,', '[ebp+var_118]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '61h']
jl ['short', 'loc_2896']
mov ['ecx,', '[ebp+var_118]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '66h']
jg ['short', 'loc_2896']
mov ['eax,', '[ebp+var_118]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '61h']
mov ['[ebp+var_125],', 'cl']
jmp ['loc_2974']
mov ['edx,', '[ebp+var_118]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '41h']
jl ['short', 'loc_28C9']
mov ['ecx,', '[ebp+var_118]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '46h']
jg ['short', 'loc_28C9']
mov ['eax,', '[ebp+var_118]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '37h']
mov ['[ebp+var_125],', 'cl']
jmp ['loc_2974']
mov ['edx,', '[ebp+var_118]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '20h']
jz ['short', 'loc_291C']
mov ['ecx,', '[ebp+var_118]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '9']
jz ['short', 'loc_291C']
mov ['eax,', '[ebp+var_118]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_291C']
mov ['edx,', '[ebp+var_118]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '0Ah']
jz ['short', 'loc_291C']
mov ['ecx,', '[ebp+var_118]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '0Ch']
jz ['short', 'loc_291C']
mov ['eax,', '[ebp+var_118]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2932']
mov ['edx,', '[ebp+var_118]']
add ['edx,', '1']
mov ['[ebp+var_118],', 'edx']
jmp ['loc_2757']
jmp ['short', 'loc_2974']
mov ['eax,', '[ebp+var_118]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Eh']
jnz ['short', 'loc_2950']
mov ['[ebp+var_125],', '0']
mov ['[ebp+var_127],', '1']
jmp ['short', 'loc_2974']
push ['offset', '$SG8957']
push ['26Ah']
push ['0A0h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0A0h']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$29']
movzx ['edx,', '[ebp+var_126]']
test ['edx,', 'edx']
jz ['short', 'loc_2993']
movzx ['eax,', '[ebp+var_125]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_120]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_29BC']
mov ['edx,', '[ebp+var_120]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
movzx ['ecx,', '[ebp+var_125]']
add ['eax,', 'ecx']
mov ['edx,', '[ebp+var_120]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+var_120]']
add ['eax,', '1']
mov ['[ebp+var_120],', 'eax']
movzx ['ecx,', '[ebp+var_126]']
mov ['edx,', '1']
sub ['edx,', 'ecx']
mov ['[ebp+var_126],', 'dl']
movzx ['eax,', '[ebp+var_127]']
test ['eax,', 'eax']
jz ['short', 'loc_29DD']
jmp ['short', 'loc_29F1']
mov ['ecx,', '[ebp+var_118]']
add ['ecx,', '1']
mov ['[ebp+var_118],', 'ecx']
jmp ['loc_2757']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN28']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '134h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN27']
dd ['offset', '$LN26']
db ['9', 'dup(0CCh)']
endp
_cid_slot_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+9Ch]']
mov ['dword', 'ptr', '[ecx+24h],', '0']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_cid_slot_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+140h]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2AEC']
push ['offset', '$SG9067']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+60h]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_Get_Module']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2AEC']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+9Ch]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+24h],', 'ecx']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cid_size_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jz ['short', 'loc_2B6A']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_cid_size_get_globals_funcs']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2B60']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cid_size_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_cid_size_get_globals_funcs']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2C1F']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
imul ['edx,', '[ecx+4],', '0FCh']
mov ['eax,', '[ebp+var_1C]']
add ['edx,', '[eax+130h]']
mov ['[ebp+var_20],', 'edx']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+64h]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2C1F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+28h],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN5']
db ['0Ch', 'dup(0CCh)']
endp
_cid_size_request proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_FT_Request_Metrics']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_cid_size_get_globals_funcs']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2CCC']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cid_face_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+arg_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+88h]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_2D9A']
push ['offset', '$SG9207']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+60h]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_FT_Get_Module_Interface']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_2D8E']
push ['offset', '$SG9209']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9210']
push ['131h']
push ['0Bh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Bh']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$36']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+88h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+140h]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_2DD2']
push ['offset', '$SG9216']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+60h]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_Get_Module_Interface']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+140h],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Bh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '2']
jl ['short', 'loc_2DF0']
push ['offset', '$SG9221']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_2DD2']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2E10']
jmp ['$Exit$36']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_cid_face_open']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2E2E']
jmp ['$Exit$36']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_2E39']
jmp ['$Exit$36']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2E6B']
push ['offset', '$SG9227']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9228']
push ['154h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$36']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8Ch']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '18h']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+9Ch]']
mov ['[eax+10h],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '811h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2ECE']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
or ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
mov ['[edx+14h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+18h],', 'offset', '$SG9233']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jz ['loc_2F9D']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jz ['loc_2F9B']
mov ['edx,', '[ebp+var_1C]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['loc_2F9B']
mov ['ecx,', '[ebp+var_1C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_20]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['edx,', 'ecx']
jnz ['short', 'loc_2F3F']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '1']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_2F96']
mov ['ecx,', '[ebp+var_1C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '20h']
jz ['short', 'loc_2F55']
mov ['eax,', '[ebp+var_1C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_2F60']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_2F96']
mov ['eax,', '[ebp+var_20]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '20h']
jz ['short', 'loc_2F76']
mov ['edx,', '[ebp+var_20]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Dh']
jnz ['short', 'loc_2F81']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
jmp ['short', 'loc_2F96']
mov ['edx,', '[ebp+var_20]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_2F94']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+18h],', 'edx']
jmp ['short', 'loc_2F9B']
jmp ['loc_2F0D']
jmp ['short', 'loc_2FB0']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_2FB0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+14h],', '0']
jz ['short', 'loc_2FD2']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
or ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_301A']
push ['offset', '$SG9256']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_300B']
push ['offset', '$SG9257']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_301A']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
or ['eax,', '2']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+38h]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+34h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+3Ch]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+38h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+40h]']
add ['edx,', '0FFFFh']
sar ['edx,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+3Ch],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+44h]']
add ['edx,', '0FFFFh']
sar ['edx,', '10h']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+40h],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'word', 'ptr', '[ecx+44h]']
test ['edx,', 'edx']
jnz ['short', 'loc_308D']
mov ['eax,', '3E8h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+44h],', 'ax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax+40h]']
mov ['[edx+46h],', 'cx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['cx,', '[eax+38h]']
mov ['[edx+48h],', 'cx']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx+44h]']
imul ['eax,', '0Ch']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+4Ah],', 'ax']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+4Ah]']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'word', 'ptr', '[edx+46h]']
mov ['edx,', '[ebp+arg_4]']
movsx ['edx,', 'word', 'ptr', '[edx+48h]']
sub ['eax,', 'edx']
cmp ['ecx,', 'eax']
jge ['short', 'loc_30F4']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+46h]']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'word', 'ptr', '[edx+48h]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+4Ah],', 'cx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
mov ['dx,', '[ecx+1Ah]']
mov ['[eax+50h],', 'dx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_18]']
mov ['dx,', '[ecx+1Ch]']
mov ['[eax+52h],', 'dx']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_cid_face_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_315A']
jmp ['loc_33E1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8Ch']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '18h']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+13Ch],', '0']
jz ['loc_3247']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_319A']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+0A0h]']
jge ['short', 'loc_3220']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+13Ch]']
mov ['edx,', '[ebp+var_14]']
lea ['eax,', '[ecx+edx*8]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_321B']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+eax]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
mov ['dword', 'ptr', '[eax+edx],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_31C3']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[ecx+4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_31FA']
jmp ['loc_3191']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+13Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+13Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3220']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_3247']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_3266']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+8],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3287']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_32A8']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_32C9']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0A4h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+0A4h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_32EA']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+0A0h],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_331E']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_333D']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_335E']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+144h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+144h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_3393']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+148h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+148h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_33BA']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_cid_driver_init proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
xor ['eax,', 'eax']
pop ['ebp']
retn
align ['4']
endp
_cid_driver_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cid_slot_load_glyph proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '66Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_66C]']
mov ['ecx,', '19Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_5F4],', 'edx']
mov ['eax,', '[ebp+var_5F4]']
mov ['ecx,', '[eax+88h]']
mov ['[ebp+var_5FC],', 'ecx']
mov ['edx,', '[ebp+var_5F4]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+10h]']
jb ['short', 'loc_3494']
push ['offset', '$SG9687']
push ['11Fh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$28']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '400h']
jz ['short', 'loc_34A8']
mov ['edx,', '[ebp+arg_C]']
or ['edx,', '3']
mov ['[ebp+arg_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+0A4h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+0A8h],', 'edx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+6Eh],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+6Ch],', 'dx']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '1']
jnz ['short', 'loc_34F1']
mov ['edx,', '[ebp+arg_C]']
and ['edx,', '2']
jnz ['short', 'loc_34F1']
mov ['[ebp+var_669],', '1']
jmp ['short', 'loc_34F8']
mov ['[ebp+var_669],', '0']
mov ['al,', '[ebp+var_669]']
mov ['[ebp+var_5F5],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+48h],', '6F75746Ch']
mov ['esi,', 'esp']
push ['offset', '_cid_load_glyph']
mov ['edx,', '[ebp+arg_C]']
sar ['edx,', '10h']
and ['edx,', '0Fh']
push ['edx']
movzx ['eax,', '[ebp+var_5F5]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
lea ['edx,', '[ebp+var_5EC]']
push ['edx']
mov ['eax,', '[ebp+var_5FC]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '24h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_3566']
jmp ['$Exit$28']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '400h']
jz ['short', 'loc_3579']
mov ['[ebp+var_66A],', '1']
jmp ['short', 'loc_3580']
mov ['[ebp+var_66A],', '0']
mov ['cl,', '[ebp+var_66A]']
mov ['[ebp+var_5A7],', 'cl']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
lea ['eax,', '[ebp+var_5EC]']
push ['eax']
call ['_cid_load_glyph']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_35AD']
jmp ['$Exit$28']
mov ['ecx,', '[ebp+var_8C]']
mov ['[ebp+var_610],', 'ecx']
mov ['edx,', '[ebp+var_88]']
mov ['[ebp+var_60C],', 'edx']
mov ['eax,', '[ebp+var_84]']
mov ['[ebp+var_608],', 'eax']
mov ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_604],', 'ecx']
mov ['edx,', '[ebp+var_7C]']
mov ['[ebp+var_620],', 'edx']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_61C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_5EC]']
push ['ecx']
mov ['edx,', '[ebp+var_5FC]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+7Ch]']
and ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+7Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+7Ch]']
or ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+7Ch],', 'eax']
mov ['edx,', '[ebp+arg_C]']
and ['edx,', '400h']
jz ['loc_36CC']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+9Ch]']
mov ['[ebp+var_628],', 'ecx']
mov ['edx,', '[ebp+var_5CC]']
push ['edx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['edx,', '[ebp+var_5C4]']
push ['edx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
mov ['edx,', '[ebp+var_628]']
add ['edx,', '0Ch']
mov ['eax,', '[ebp+var_610]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_60C]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_608]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_604]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_628]']
mov ['eax,', '[ebp+var_620]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_61C]']
mov ['[edx+20h],', 'ecx']
mov ['edx,', '[ebp+var_628]']
mov ['byte', 'ptr', '[edx+8],', '1']
jmp ['$Exit$28']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
mov ['[ebp+var_644],', 'eax']
mov ['ecx,', '[ebp+var_5C4]']
push ['ecx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+var_644]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_5C4]']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+38h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+9Ch]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_5F4]']
mov ['edx,', '[ebp+var_5F4]']
mov ['eax,', '[ecx+0D0h]']
sub ['eax,', '[edx+0C8h]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_644]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_644]']
mov ['ecx,', '[eax+1Ch]']
mov ['[edx+3Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+48h],', '6F75746Ch']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Eh]']
cmp ['ecx,', '18h']
jge ['short', 'loc_3772']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+7Ch]']
or ['eax,', '100h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+7Ch],', 'eax']
lea ['edx,', '[ebp+var_610]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '6Ch']
push ['eax']
call ['_FT_Outline_Transform']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_61C]']
push ['ecx']
mov ['edx,', '[ebp+var_620]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '6Ch']
push ['eax']
call ['_FT_Outline_Translate']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_644]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_650],', 'edx']
mov ['[ebp+var_64C],', '0']
lea ['eax,', '[ebp+var_610]']
push ['eax']
lea ['ecx,', '[ebp+var_650]']
push ['ecx']
call ['_FT_Vector_Transform']
add ['esp,', '8']
mov ['edx,', '[ebp+var_650]']
add ['edx,', '[ebp+var_620]']
mov ['eax,', '[ebp+var_644]']
mov ['[eax+10h],', 'edx']
mov ['[ebp+var_650],', '0']
mov ['ecx,', '[ebp+var_644]']
mov ['edx,', '[ecx+1Ch]']
mov ['[ebp+var_64C],', 'edx']
lea ['eax,', '[ebp+var_610]']
push ['eax']
lea ['ecx,', '[ebp+var_650]']
push ['ecx']
call ['_FT_Vector_Transform']
add ['esp,', '8']
mov ['edx,', '[ebp+var_64C]']
add ['edx,', '[ebp+var_61C]']
mov ['eax,', '[ebp+var_644]']
mov ['[eax+1Ch],', 'edx']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '1']
jnz ['loc_3947']
mov ['edx,', '[ebp+var_5DC]']
mov ['[ebp+var_65C],', 'edx']
mov ['eax,', '[ebp+var_65C]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_660],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0A4h]']
mov ['[ebp+var_664],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0A8h]']
mov ['[ebp+var_668],', 'edx']
movzx ['eax,', '[ebp+var_5F5]']
test ['eax,', 'eax']
jz ['short', 'loc_3886']
cmp ['[ebp+var_5A4],', '0']
jnz ['short', 'loc_3903']
mov ['ecx,', '[ebp+var_65C]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['[ebp+var_658],', 'edx']
jmp ['short', 'loc_38B6']
mov ['eax,', '[ebp+var_658]']
sub ['eax,', '1']
mov ['[ebp+var_658],', 'eax']
mov ['ecx,', '[ebp+var_660]']
add ['ecx,', '8']
mov ['[ebp+var_660],', 'ecx']
cmp ['[ebp+var_658],', '0']
jle ['short', 'loc_3903']
mov ['edx,', '[ebp+var_664]']
push ['edx']
mov ['eax,', '[ebp+var_660]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+var_660]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_668]']
push ['eax']
mov ['ecx,', '[ebp+var_660]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_660]']
mov ['[ecx+4],', 'eax']
jmp ['short', 'loc_3898']
mov ['edx,', '[ebp+var_664]']
push ['edx']
mov ['eax,', '[ebp+var_644]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+var_644]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_668]']
push ['eax']
mov ['ecx,', '[ebp+var_644]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_644]']
mov ['[ecx+1Ch],', 'eax']
lea ['edx,', '[ebp+var_63C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '6Ch']
push ['eax']
call ['_FT_Outline_Get_CBox']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_634]']
sub ['ecx,', '[ebp+var_63C]']
mov ['edx,', '[ebp+var_644]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_630]']
sub ['eax,', '[ebp+var_638]']
mov ['ecx,', '[ebp+var_644]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_644]']
mov ['eax,', '[ebp+var_63C]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_644]']
mov ['edx,', '[ebp+var_630]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '10h']
jz ['short', '$Exit$28']
mov ['ecx,', '[ebp+var_644]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ebp+var_644]']
push ['eax']
call ['_ft_synthesize_vertical_metrics']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '66Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN26_0']
dd ['offset', '$LN21_0']
dd ['0FFFFF9F0h,', '10h']
db ['55h']
db ['3Ah']
db ['0']
db ['0']
dd ['0FFFFF9E0h,', '8']
dd ['offset', '$LN23_0']
dd ['0FFFFF9C4h,', '10h']
dd ['offset', '$LN24']
dd ['0FFFFF9B0h,', '8']
dd ['offset', '$LN25']
align ['4']
endp
_cid_size_get_globals_funcs proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+140h]']
mov ['[ebp+var_8],', 'eax']
push ['offset', '$SG9080']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+60h]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_Get_Module']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_3AE4']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3AE4']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_3AE4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_3AEB']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_10]']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cid_get_postscript_name proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8Ch]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3B46']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '2Fh']
jnz ['short', 'loc_3B46']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_cid_ps_get_font_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
push ['edi']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '0A4h']
mov ['ecx,', '8']
mov ['edi,', '[ebp+arg_4]']
rep ['movsd']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebp']
retn
align ['4']
endp
_cid_ps_get_font_extra proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+138h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'cx']
xor ['eax,', 'eax']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_cid_get_ros	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_3BC3']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
mov ['[ecx],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_3BD4']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
mov ['[ecx],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_3BE5']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
mov ['[ecx],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cid_get_is_cid	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_3C10']
mov ['ecx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[ecx],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_cid_get_cid_from_glyph_index proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_3C42']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cid_get_interface proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '_cid_services']
call ['_ft_service_list_lookup']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_FT_MulFix_i386	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
imul ['edx']
mov ['ecx,', 'edx']
sar ['ecx,', '1Fh']
add ['ecx,', '8000h']
add ['eax,', 'ecx']
adc ['edx,', '0']
shr ['eax,', '10h']
shl ['edx,', '10h']
add ['eax,', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_cid_load_glyph	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '80h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_80]']
mov ['ecx,', '20h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '8Ch']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+148h]']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_30],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+64h]']
mov ['[ebp+var_34],', 'eax']
mov ['[ebp+var_38],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+88h]']
mov ['[ebp+var_3C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+80h]']
mov ['edx,', '[ecx+30h]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '39h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_3D5C']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['offset', '$SG9615']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_3D3A']
cmp ['[ebp+var_40],', '0']
jz ['loc_3E3C']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_3D9C']
jmp ['$Exit$32']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+94h]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['_cid_get_offset']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_3E0B']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_48]']
sub ['ecx,', '[eax+94h]']
mov ['[ebp+var_38],', 'ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_3E0B']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_4C]']
add ['ecx,', '[eax+94h]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_3E37']
jmp ['$Exit$32']
jmp ['loc_3F9D']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+94h]']
mov ['edx,', '[ebp+var_C]']
add ['ecx,', '[edx+98h]']
mov ['[ebp+var_54],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0A8h]']
mov ['edx,', '[ebp+var_C]']
add ['ecx,', '[edx+90h]']
mov ['eax,', '[ebp+arg_4]']
imul ['eax,', '[ebp+var_54]']
add ['ecx,', 'eax']
push ['ecx']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jnz ['short', 'loc_3E9D']
mov ['edx,', '[ebp+var_54]']
shl ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_3EA2']
jmp ['$Exit$32']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+20h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+94h]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['_cid_get_offset']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+98h]']
push ['ecx']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['_cid_get_offset']
add ['esp,', '8']
mov ['[ebp+var_58],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[eax+94h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+98h]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_cid_get_offset']
add ['esp,', '8']
sub ['eax,', '[ebp+var_58]']
mov ['[ebp+var_38],', 'eax']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[eax+0A0h]']
jb ['short', 'loc_3F41']
push ['offset', '$SG9643']
push ['78h']
push ['9']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '9']
mov ['[ebp+var_28],', 'eax']
jmp ['$Exit$32']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_3F4C']
jmp ['$Exit$32']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_3F6E']
jmp ['$Exit$32']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0A8h]']
add ['edx,', '[ebp+var_58]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_FT_Stream_ReadAt']
add ['esp,', '10h']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_3F9D']
jmp ['$Exit$32']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+13Ch]']
mov ['eax,', '[ebp+var_1C]']
lea ['ecx,', '[edx+eax*8]']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax]']
mov ['[edx+554h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_60]']
mov ['ecx,', '[eax+4]']
mov ['[edx+558h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+55Ch],', '0']
imul ['eax,', '[ebp+var_1C],', '0FCh']
mov ['ecx,', '[ebp+var_C]']
add ['eax,', '[ecx+0A4h]']
mov ['[ebp+var_5C],', 'eax']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '0D8h']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '560h']
mov ['ecx,', '[edx]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[edx+4]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[edx+8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[edx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_5C]']
mov ['ecx,', '[eax+0E8h]']
mov ['edx,', '[eax+0ECh]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+570h],', 'ecx']
mov ['[eax+574h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[edx+4]']
mov ['[ecx+550h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+550h],', '0']
jl ['short', 'loc_405A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+550h]']
mov ['[ebp+var_80],', 'eax']
jmp ['short', 'loc_4061']
mov ['[ebp+var_80],', '0']
mov ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+550h],', '0']
jl ['short', 'loc_4094']
mov ['esi,', 'esp']
push ['10EAh']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[edx+10h]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', '[ebp+var_64]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '[ebp+var_64]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+5CCh]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_30],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_40C0']
cmp ['[ebp+var_28],', '0']
jnz ['$Exit$32']
cmp ['[ebp+var_40],', '0']
jz ['$Exit$32']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[eax]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jz ['$Exit$32']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['[ebp+var_78],', 'eax']
mov ['[ebp+var_74],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['[ebp+var_70],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['[ebp+var_6C],', 'eax']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_78]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_78]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['edx,', '[ebp+var_70]']
shl ['edx,', '10h']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'edx']
mov ['ecx,', '[ebp+var_6C]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+2Ch],', 'ecx']
mov ['eax,', '[ebp+var_28]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN31']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '80h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN30']
dd ['offset', '$LN26_1']
dd ['0FFFFFFD8h,', '4']
dd ['offset', '$LN27_1']
dd ['0FFFFFFB4h,', '8']
dd ['offset', '$LN28_0']
db ['88h,', '0FFh']
dw ['0FFFFh']
dd ['10h']
dd ['offset', '$LN29']
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_memcpy:near']
extrn ['_memset:near']
extrn ['_strcmp:near']
extrn ['_strlen:near']
extrn ['__imp__memmove:near']
extrn ['__imp__strncmp:near']
extrn ['__imp__atol:near']
extrn ['_FT_DivFix:near']
extrn ['_FT_RoundFix:near']
extrn ['_FT_Vector_Transform:near']
extrn ['_FT_Message:near']
extrn ['_FT_Throw:near']
extrn ['_FT_Get_Module:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_realloc:near']
extrn ['_ft_mem_free:near']
extrn ['_ft_service_list_lookup:near']
extrn ['_FT_Get_Module_Interface:near']
extrn ['_FT_Request_Metrics:near']
extrn ['_ft_synthesize_vertical_metrics:near']
extrn ['_FT_Stream_OpenMemory:near']
extrn ['_FT_Stream_Seek:near']
extrn ['_FT_Stream_Pos:near']
extrn ['_FT_Stream_Read:near']
extrn ['_FT_Stream_ReadAt:near']
extrn ['_FT_Stream_EnterFrame:near']
extrn ['_FT_Stream_ExitFrame:near']
extrn ['_FT_Stream_ExtractFrame:near']
extrn ['_FT_Stream_ReleaseFrame:near']
extrn ['_FT_Outline_Get_CBox:near']
extrn ['_FT_Outline_Translate:near']
extrn ['_FT_Outline_Transform:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['_ft_trace_levels:near']
extrn ['___security_cookie:near']
end

endp
_FT_Get_Gasp	proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
cmp ['[ebp+arg_0],', '0']
jz ['short', '$Exit$9']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '8']
jz ['short', '$Exit$9']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+21Eh]']
test ['ecx,', 'ecx']
jle ['short', '$Exit$9']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+220h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+21Eh]']
mov ['eax,', '[ebp+var_C]']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['[ebp+arg_4],', 'eax']
jbe ['short', 'loc_82']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '4']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_10]']
jb ['short', 'loc_80']
jmp ['short', '$Exit$9']
jmp ['short', 'loc_62']
mov ['eax,', '[ebp+var_C]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+21Ch]']
test ['eax,', 'eax']
jnz ['short', '$Exit$9']
mov ['ecx,', '[ebp+var_4]']
and ['ecx,', '3']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
end

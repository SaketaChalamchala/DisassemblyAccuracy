endp
_BitOrderInvert	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
jmp ['short', 'loc_D33']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_D97']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '1']
and ['ecx,', '55h']
mov ['edx,', '[ebp+var_4]']
shl ['edx,', '1']
and ['edx,', '0AAh']
or ['ecx,', 'edx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
shr ['eax,', '2']
and ['eax,', '33h']
mov ['ecx,', '[ebp+var_4]']
shl ['ecx,', '2']
and ['ecx,', '0CCh']
or ['eax,', 'ecx']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_4]']
shr ['edx,', '4']
and ['edx,', '0Fh']
mov ['eax,', '[ebp+var_4]']
shl ['eax,', '4']
and ['eax,', '0F0h']
or ['edx,', 'eax']
mov ['[ebp+var_4],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_4]']
mov ['[ecx],', 'dl']
jmp ['short', 'loc_D21']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_TwoByteSwap	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
jmp ['short', 'loc_DC4']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '2']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '2']
mov ['[ebp+arg_0],', 'ecx']
cmp ['[ebp+arg_4],', '2']
jb ['short', 'loc_E0A']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+eax]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'dl']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['al,', '[esi+eax]']
mov ['[ecx+edx],', 'al']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['[edx+ecx],', 'al']
jmp ['short', 'loc_DB2']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_FourByteSwap	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
jmp ['short', 'loc_E34']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '4']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
mov ['[ebp+arg_0],', 'ecx']
cmp ['[ebp+arg_4],', '4']
jb ['short', 'loc_EB9']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+eax]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'dl']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['cl,', '[esi+ecx]']
mov ['[edx+eax],', 'cl']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dl,', '[ecx+eax]']
mov ['byte', 'ptr', '[ebp+var_4+3],', 'dl']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['al,', '[esi+eax]']
mov ['[edx+ecx],', 'al']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['al,', 'byte', 'ptr', '[ebp+var_4+3]']
mov ['[edx+ecx],', 'al']
jmp ['loc_E22']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_pcf_load_font	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_pcf_read_TOC']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_F02']
jmp ['$Exit$35']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pcf_get_properties']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_F20']
jmp ['$Exit$35']
push ['100h']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0BCh]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0C0h]']
push ['eax']
call ['_pcf_has_table_type']
add ['esp,', '0Ch']
mov ['[ebp+var_11],', 'al']
movzx ['ecx,', '[ebp+var_11]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_F6C']
push ['2']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_pcf_get_accel']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_F6C']
jmp ['$Exit$35']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pcf_get_metrics']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_F8A']
jmp ['$Exit$35']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_pcf_get_bitmaps']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_FA8']
jmp ['$Exit$35']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_pcf_get_encodings']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_FC6']
jmp ['$Exit$35']
movzx ['ecx,', '[ebp+var_11]']
test ['ecx,', 'ecx']
jz ['short', 'loc_FF1']
push ['100h']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_pcf_get_accel']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_FF1']
jmp ['$Exit$35']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[edx],', '1']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
or ['edx,', '92h']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+0C7h]']
test ['edx,', 'edx']
jz ['short', 'loc_1039']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '4']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_pcf_interpret_style']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1053']
jmp ['$Exit$35']
push ['offset', '$SG8290']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_10A2']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
test ['eax,', 'eax']
jz ['short', 'loc_10A2']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+14h],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_10A0']
jmp ['$Exit$35']
jmp ['short', 'loc_10AC']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+120h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[ecx+1Ch],', '1']
lea ['edx,', '[ebp+var_8]']
push ['edx']
push ['0']
push ['1']
push ['0']
push ['10h']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+20h],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_10F1']
jmp ['$Exit$35']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_20],', 'eax']
xor ['ecx,', 'ecx']
mov ['[ebp+var_24],', 'cx']
xor ['edx,', 'edx']
mov ['[ebp+var_28],', 'dx']
push ['10h']
push ['0']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0CCh]']
mov ['eax,', '[ebp+arg_4]']
add ['edx,', '[eax+0D0h]']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx],', 'dx']
push ['offset', '$SG8305']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1162']
mov ['eax,', '[ebp+var_1C]']
mov ['eax,', '[eax+8]']
add ['eax,', '5']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+2],', 'ax']
jmp ['short', 'loc_1179']
mov ['eax,', '[ebp+var_20]']
movsx ['eax,', 'word', 'ptr', '[eax]']
shl ['eax,', '1']
cdq
mov ['ecx,', '3']
idiv ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+2],', 'ax']
push ['offset', '$SG8310']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_11B5']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
shl ['edx,', '6']
imul ['eax,', 'edx,', '1C20h']
add ['eax,', '8D27h']
cdq
mov ['ecx,', '11A4Eh']
idiv ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+4],', 'eax']
push ['offset', '$SG8313']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_11DF']
mov ['ecx,', '[ebp+var_1C]']
movsx ['edx,', 'word', 'ptr', '[ecx+8]']
shl ['edx,', '6']
mov ['eax,', '[ebp+var_20]']
mov ['[eax+0Ch],', 'edx']
push ['offset', '$SG8316']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1204']
mov ['edx,', '[ebp+var_1C]']
mov ['ax,', '[edx+8]']
mov ['[ebp+var_24],', 'ax']
push ['offset', '$SG8319']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1229']
mov ['edx,', '[ebp+var_1C]']
mov ['ax,', '[edx+8]']
mov ['[ebp+var_28],', 'ax']
mov ['ecx,', '[ebp+var_20]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jnz ['short', 'loc_125F']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+4]']
mov ['[edx+0Ch],', 'ecx']
movsx ['edx,', '[ebp+var_28]']
test ['edx,', 'edx']
jz ['short', 'loc_125F']
movsx ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_20]']
imul ['eax,', '[ecx+0Ch]']
cdq
mov ['ecx,', '48h']
idiv ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+0Ch],', 'eax']
movsx ['eax,', '[ebp+var_24]']
test ['eax,', 'eax']
jz ['short', 'loc_128D']
movsx ['ecx,', '[ebp+var_28]']
test ['ecx,', 'ecx']
jz ['short', 'loc_128D']
movsx ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', 'edx']
imul ['ecx,', '[eax+0Ch]']
movsx ['esi,', '[ebp+var_28]']
mov ['eax,', 'ecx']
cdq
idiv ['esi']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+8],', 'eax']
jmp ['short', 'loc_1299']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+8],', 'edx']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_30],', '0']
push ['offset', '$SG8328']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_2C],', 'eax']
push ['offset', '$SG8329']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', '$Exit$35']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
test ['eax,', 'eax']
jz ['short', '$Exit$35']
cmp ['[ebp+var_30],', '0']
jz ['short', '$Exit$35']
mov ['ecx,', '[ebp+var_30]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4]']
test ['edx,', 'edx']
jz ['short', '$Exit$35']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+0B0h],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', '$Exit$35']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+0B4h],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1357']
push ['offset', '$SG8338']
push ['53Bh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN34']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN33']
dd ['offset', '$LN32']
db ['0Eh', 'dup(0CCh)']
endp
_pcf_find_property proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+11Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_8+3],', '0']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_13E1']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+118h]']
jge ['short', 'loc_1418']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['edx,', 'edx']
jnz ['short', 'loc_1418']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
imul ['ecx,', '[ebp+var_C],', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1416']
mov ['byte', 'ptr', '[ebp+var_8+3],', '1']
jmp ['short', 'loc_13D8']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_8+3]']
test ['ecx,', 'ecx']
jz ['short', 'loc_142F']
imul ['edx,', '[ebp+var_C],', '0Ch']
mov ['eax,', '[ebp+var_4]']
lea ['eax,', '[eax+edx-0Ch]']
jmp ['short', 'loc_1431']
jmp ['short', 'loc_1431']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_pcf_read_TOC	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '0B8h']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_1C],', 'edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_14AE']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
push ['offset', '_pcf_toc_header']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_14C7']
push ['offset', '$SG7424']
push ['67h']
push ['1']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '1']
jmp ['loc_1933']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '70636601h']
jnz ['short', 'loc_14E7']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx+4],', '7FFFFFFh']
ja ['short', 'loc_14E7']
mov ['edx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_1500']
push ['offset', '$SG7427']
push ['6Ch']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_1933']
lea ['eax,', '[ebp+var_C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
push ['edx']
push ['0']
push ['10h']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+0C0h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1545']
push ['offset', '$SG7431']
push ['6Fh']
push ['40h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '40h']
jmp ['loc_1933']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0C0h]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_1563']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_20]']
cmp ['eax,', '[edx+4]']
jnb ['short', 'loc_159C']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
push ['offset', '_pcf_table_header']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1591']
jmp ['$Exit$55']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '10h']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_155A']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0C0h]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_15BA']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '1']
cmp ['[ebp+var_20],', 'edx']
jnb ['loc_170A']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_28],', '0']
jmp ['short', 'loc_15E5']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '1']
sub ['edx,', '[ebp+var_20]']
cmp ['[ebp+var_28],', 'edx']
jnb ['loc_16FD']
mov ['eax,', '[ebp+var_28]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_18]']
mov ['eax,', '[edx+eax+0Ch]']
cmp ['eax,', '[esi+ecx+0Ch]']
jbe ['short', 'loc_168E']
mov ['ecx,', '[ebp+var_28]']
shl ['ecx,', '4']
add ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ecx+4]']
mov ['[ebp+var_3C],', 'eax']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ecx+0Ch]']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
shl ['ecx,', '4']
add ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_28]']
shl ['edx,', '4']
add ['edx,', '[ebp+var_18]']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
shl ['edx,', '4']
add ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_40]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_38]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['[edx+0Ch],', 'ecx']
mov ['[ebp+var_2C],', '1']
mov ['edx,', '[ebp+var_28]']
shl ['edx,', '4']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_18]']
mov ['esi,', '[ebp+var_18]']
mov ['edx,', '[ecx+edx+8]']
cmp ['edx,', '[esi+eax+0Ch]']
ja ['short', 'loc_16D9']
mov ['eax,', '[ebp+var_28]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_28]']
shl ['edx,', '4']
mov ['esi,', '[ebp+var_18]']
mov ['edi,', '[ebp+var_18]']
mov ['ecx,', '[esi+ecx+0Ch]']
sub ['ecx,', '[edi+edx+8]']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+eax+0Ch],', 'ecx']
jbe ['short', 'loc_16F8']
push ['offset', '$SG7449']
push ['96h']
push ['9']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '9']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$55']
jmp ['loc_15DC']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_1705']
jmp ['short', 'loc_170A']
jmp ['loc_15B1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0C0h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_1731']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
cmp ['[ebp+var_20],', 'eax']
jnb ['short', 'loc_1785']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+8]']
cmp ['edx,', '[ebp+var_24]']
ja ['short', 'loc_175B']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '[eax+8]']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+0Ch],', 'ecx']
jbe ['short', 'loc_177A']
push ['offset', '$SG7456']
push ['0BDh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$55']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '10h']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_1728']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
cmp ['edx,', '[ebp+var_24]']
jbe ['short', 'loc_17AF']
push ['offset', '$SG7458']
push ['0C6h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$55']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+8],', 'ecx']
jbe ['short', 'loc_17CF']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_24]']
sub ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+8],', 'ecx']
mov ['[ebp+var_50],', 'offset', '$SG7463']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_17F4']
push ['offset', '$SG7468']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_17D6']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_1820']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0BCh]']
push ['eax']
push ['offset', '$SG7473']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_17F8']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0C0h]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_48],', '0']
jmp ['short', 'loc_1842']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '1']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[edx+4]']
jnb ['loc_1905']
mov ['[ebp+var_4C],', '0']
jmp ['short', 'loc_1863']
mov ['ecx,', '[ebp+var_4C]']
add ['ecx,', '1']
mov ['[ebp+var_4C],', 'ecx']
cmp ['[ebp+var_4C],', '9']
jnb ['short', 'loc_1890']
mov ['edx,', '[ebp+var_48]']
shl ['edx,', '4']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_4C]']
shl ['eax,', 'cl']
mov ['ecx,', '[ebp+var_18]']
cmp ['[ecx+edx],', 'eax']
jnz ['short', 'loc_188E']
mov ['edx,', '[ebp+var_4C]']
mov ['eax,', 'ds:_tableNames[edx*4]']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_185A']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_18FC']
mov ['eax,', '[ebp+var_48]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+eax+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+eax+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+eax+8]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+eax+8]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+eax+4]']
push ['edx']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
push ['offset', '$SG7486']
call ['_FT_Message']
add ['esp,', '20h']
xor ['edx,', 'edx']
jnz ['short', 'loc_1890']
jmp ['loc_1839']
xor ['eax,', 'eax']
jmp ['short', 'loc_1933']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0C0h]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+0C0h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', '$Exit$55']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN54']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN53']
dd ['offset', '$LN51']
dd ['0FFFFFFC0h,', '10h']
dd ['offset', '$LN52']
db ['0Ah', 'dup(0CCh)']
endp
_pcf_get_metric	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
and ['eax,', '0FFFFFF00h']
jnz ['short', 'loc_1A15']
mov ['ecx,', '[ebp+arg_4]']
and ['ecx,', '4']
jz ['short', 'loc_19D9']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_19E0']
mov ['[ebp+var_1C],', '0']
cmp ['[ebp+var_1C],', '1']
jnz ['short', 'loc_19EF']
mov ['[ebp+var_20],', 'offset', '_pcf_metric_msb_header']
jmp ['short', 'loc_19F6']
mov ['[ebp+var_20],', 'offset', '_pcf_metric_header']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Exit$13']
lea ['eax,', '[ebp+var_14]']
push ['eax']
push ['offset', '_pcf_compressed_metric_header']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1A35']
jmp ['short', '$Exit$13']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_14]']
sub ['edx,', '80h']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'dx']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_14+1]']
sub ['ecx,', '80h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+2],', 'cx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_14+2]']
sub ['eax,', '80h']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'ax']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_14+3]']
sub ['edx,', '80h']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+6],', 'dx']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_10]']
sub ['ecx,', '80h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+8],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+0Ah],', 'ax']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN11']
dd ['offset', '$LN10']
db ['6', 'dup(0CCh)']
endp
_pcf_seek_to_table_type	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '3']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1B01']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_8]']
jnb ['$Fail$9']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+edx]']
cmp ['ecx,', '[ebp+arg_C]']
jnz ['loc_1BC0']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[eax+8]']
cmp ['eax,', '[ecx+edx+0Ch]']
jbe ['short', 'loc_1B53']
push ['offset', '$SG7621']
push ['165h']
push ['53h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '53h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Fail$9']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx+0Ch]']
sub ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1B98']
push ['offset', '$SG7625']
push ['16Bh']
push ['53h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '53h']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Fail$9']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_14]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+eax+8]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+ecx+4]']
mov ['[edx],', 'ecx']
xor ['eax,', 'eax']
jmp ['short', 'loc_1BD1']
jmp ['loc_1AF8']
mov ['edx,', '[ebp+arg_14]']
mov ['dword', 'ptr', '[edx],', '0']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_pcf_has_table_type proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1C01']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_1C20']
mov ['edx,', '[ebp+var_4]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx]']
cmp ['ecx,', '[ebp+arg_8]']
jnz ['short', 'loc_1C1E']
mov ['al,', '1']
jmp ['short', 'loc_1C22']
jmp ['short', 'loc_1BF8']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_pcf_get_properties proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_40],', '0']
lea ['edx,', '[ebp+var_24]']
push ['edx']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0BCh]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0C0h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pcf_seek_to_table_type']
add ['esp,', '18h']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1CA1']
jmp ['$Bail$83']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_ReadULongLE']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1CBF']
jmp ['$Bail$83']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_1CDD']
push ['offset', '$SG7712']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1CBF']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_1D03']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
push ['offset', '$SG7717']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_1CE1']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '0FFFFFF00h']
jz ['short', 'loc_1D16']
jmp ['$Bail$83']
mov ['ecx,', '[ebp+var_18]']
and ['ecx,', '4']
jz ['short', 'loc_1D27']
mov ['[ebp+var_4C],', '1']
jmp ['short', 'loc_1D2E']
mov ['[ebp+var_4C],', '0']
cmp ['[ebp+var_4C],', '1']
jnz ['short', 'loc_1D49']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadULong']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_1D5C']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadULongLE']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1D67']
jmp ['$Bail$83']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_1D90']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
push ['offset', '$SG7732']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1D67']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '9']
div ['ecx']
cmp ['[ebp+var_C],', 'eax']
jbe ['short', 'loc_1DCA']
push ['offset', '$SG7735']
push ['1EFh']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_30],', 'eax']
jmp ['$Bail$83']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+118h],', 'eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_C]']
push ['edx']
push ['0']
push ['0Ch']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1DFE']
jmp ['$Bail$83']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1E10']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_C]']
jnb ['short', 'loc_1E8B']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '4']
jz ['short', 'loc_1E29']
mov ['[ebp+var_50],', '1']
jmp ['short', 'loc_1E30']
mov ['[ebp+var_50],', '0']
cmp ['[ebp+var_50],', '1']
jnz ['short', 'loc_1E5F']
imul ['ecx,', '[ebp+var_10],', '0Ch']
add ['ecx,', '[ebp+var_4]']
push ['ecx']
push ['offset', '_pcf_property_msb_header']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1E5D']
jmp ['$Bail$83']
jmp ['short', 'loc_1E86']
imul ['eax,', '[ebp+var_10],', '0Ch']
add ['eax,', '[ebp+var_4]']
push ['eax']
push ['offset', '_pcf_property_header']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1E86']
jmp ['$Bail$83']
jmp ['loc_1E07']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '3']
jz ['short', 'loc_1EDB']
mov ['eax,', '[ebp+var_C]']
and ['eax,', '3']
mov ['ecx,', '4']
sub ['ecx,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1EDB']
push ['offset', '$SG7750']
push ['210h']
push ['53h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '53h']
mov ['[ebp+var_30],', 'eax']
jmp ['$Bail$83']
mov ['ecx,', '[ebp+var_18]']
and ['ecx,', '4']
jz ['short', 'loc_1EEC']
mov ['[ebp+var_54],', '1']
jmp ['short', 'loc_1EF3']
mov ['[ebp+var_54],', '0']
cmp ['[ebp+var_54],', '1']
jnz ['short', 'loc_1F0E']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadULong']
add ['esp,', '8']
mov ['[ebp+var_3C],', 'eax']
jmp ['short', 'loc_1F21']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadULongLE']
add ['esp,', '8']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1F2C']
jmp ['$Bail$83']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_1F4E']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
push ['offset', '$SG7762']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_1F2C']
imul ['ecx,', '[ebp+var_C],', '9']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', 'ecx']
cmp ['[ebp+var_3C],', 'edx']
jbe ['short', 'loc_1F7F']
push ['offset', '$SG7764']
push ['221h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
mov ['[ebp+var_30],', 'eax']
jmp ['$Bail$83']
lea ['eax,', '[ebp+var_30]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_3C]']
add ['ecx,', '1']
push ['ecx']
push ['0']
push ['1']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1FAA']
jmp ['$Bail$83']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1FCC']
jmp ['$Bail$83']
lea ['eax,', '[ebp+var_30]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
push ['0']
push ['0Ch']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1FF4']
jmp ['$Bail$83']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+11Ch],', 'ecx']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_2012']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_C]']
jnb ['loc_21BC']
imul ['ecx,', '[ebp+var_10],', '0Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_44],', 'eax']
cmp ['[ebp+var_44],', '0']
jl ['short', 'loc_2039']
mov ['ecx,', '[ebp+var_44]']
cmp ['ecx,', '[ebp+var_3C]']
jbe ['short', 'loc_2058']
push ['offset', '$SG7780']
push ['23Ah']
push ['9']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '9']
mov ['[ebp+var_30],', 'eax']
jmp ['$Bail$83']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
add ['eax,', '[ebp+var_44]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
imul ['edx,', '[ebp+var_10],', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+edx],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_2084']
jmp ['$Bail$83']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '4']
jl ['short', 'loc_20AD']
imul ['ecx,', '[ebp+var_10],', '0Ch']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+ecx]']
push ['eax']
push ['offset', '$SG7788']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2084']
imul ['edx,', '[ebp+var_10],', '0Ch']
imul ['eax,', '[ebp+var_10],', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_4]']
mov ['dl,', '[esi+edx+4]']
mov ['[ecx+eax+4],', 'dl']
imul ['eax,', '[ebp+var_10],', '0Ch']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax+4]']
test ['edx,', 'edx']
jz ['loc_2173']
imul ['eax,', '[ebp+var_10],', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax+8]']
mov ['[ebp+var_48],', 'edx']
cmp ['[ebp+var_48],', '0']
jl ['short', 'loc_20F7']
mov ['eax,', '[ebp+var_48]']
cmp ['eax,', '[ebp+var_3C]']
jbe ['short', 'loc_2116']
push ['offset', '$SG7794']
push ['24Dh']
push ['9']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '9']
mov ['[ebp+var_30],', 'eax']
jmp ['$Bail$83']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
add ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
call ['_ft_mem_strdup']
add ['esp,', '0Ch']
imul ['ecx,', '[ebp+var_10],', '0Ch']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+ecx+8],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_2143']
jmp ['$Bail$83']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_216D']
imul ['edx,', '[ebp+var_10],', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx+8]']
push ['ecx']
push ['offset', '$SG7802']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_2143']
jmp ['short', 'loc_21B7']
imul ['eax,', '[ebp+var_10],', '0Ch']
imul ['ecx,', '[ebp+var_10],', '0Ch']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', '[ebp+var_4]']
mov ['eax,', '[esi+eax+8]']
mov ['[edx+ecx+8],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_21B3']
imul ['eax,', '[ebp+var_10],', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+8]']
push ['edx']
push ['offset', '$SG7808']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_2189']
jmp ['loc_2009']
mov ['[ebp+var_30],', '0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_4],', '0']
xor ['eax,', 'eax']
jnz ['short', '$Bail$83']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_40],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_21DE']
mov ['eax,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN82']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN81']
dd ['offset', '$LN78']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN79']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN80']
db ['6', 'dup(0CCh)']
endp
_pcf_get_metrics proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_2C],', '0']
lea ['edx,', '[ebp+var_24]']
push ['edx']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0BCh]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0C0h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pcf_seek_to_table_type']
add ['esp,', '18h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_22C5']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_2657']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_ReadULongLE']
add ['esp,', '8']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_22E3']
jmp ['$Bail$54']
mov ['edx,', '[ebp+var_18]']
and ['edx,', '0FFFFFF00h']
jz ['short', 'loc_2319']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '0FFFFFF00h']
cmp ['eax,', '100h']
jz ['short', 'loc_2319']
push ['offset', '$SG7836']
push ['281h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_2657']
mov ['ecx,', '[ebp+var_18]']
and ['ecx,', '0FFFFFF00h']
jnz ['short', 'loc_236C']
mov ['edx,', '[ebp+var_18]']
and ['edx,', '4']
jz ['short', 'loc_2335']
mov ['[ebp+var_38],', '1']
jmp ['short', 'loc_233C']
mov ['[ebp+var_38],', '0']
cmp ['[ebp+var_38],', '1']
jnz ['short', 'loc_2357']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_ReadULong']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_236A']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadULongLE']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_23B8']
mov ['ecx,', '[ebp+var_18]']
and ['ecx,', '4']
jz ['short', 'loc_237D']
mov ['[ebp+var_3C],', '1']
jmp ['short', 'loc_2384']
mov ['[ebp+var_3C],', '0']
cmp ['[ebp+var_3C],', '1']
jnz ['short', 'loc_23A2']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
movzx ['ecx,', 'ax']
mov ['[ebp+var_30],', 'ecx']
jmp ['short', 'loc_23B8']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadUShortLE']
add ['esp,', '8']
movzx ['ecx,', 'ax']
mov ['[ebp+var_30],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_23DA']
push ['offset', '$SG7852']
push ['292h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_2657']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_30]']
mov ['[edx+120h],', 'eax']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_2408']
push ['offset', '$SG7854']
push ['297h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['loc_2657']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_2426']
push ['offset', '$SG7859']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_2408']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_244C']
mov ['eax,', '[ebp+var_30]']
push ['eax']
push ['offset', '$SG7864']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_242A']
mov ['edx,', '[ebp+var_18]']
and ['edx,', '0FFFFFF00h']
jnz ['short', 'loc_248A']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '0Ch']
div ['ecx']
cmp ['[ebp+var_30],', 'eax']
jbe ['short', 'loc_2488']
push ['offset', '$SG7867']
push ['2A1h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['loc_2657']
jmp ['short', 'loc_24B7']
mov ['eax,', '[ebp+var_24]']
xor ['edx,', 'edx']
mov ['ecx,', '5']
div ['ecx']
cmp ['[ebp+var_30],', 'eax']
jbe ['short', 'loc_24B7']
push ['offset', '$SG7870']
push ['2A6h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['loc_2657']
lea ['edx,', '[ebp+var_8]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_30]']
push ['eax']
push ['0']
push ['10h']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+124h],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_24FC']
push ['offset', '$SG7874']
push ['2AAh']
push ['40h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '40h']
jmp ['loc_2657']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+124h]']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_2523']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '1']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '10h']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[ebp+var_30]']
jnb ['loc_2627']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_pcf_get_metric']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_2C]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '5']
jl ['short', 'loc_25A1']
mov ['edx,', '[ebp+var_2C]']
movsx ['eax,', 'word', 'ptr', '[edx+0Ah]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'word', 'ptr', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'word', 'ptr', '[eax+6]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
movsx ['eax,', 'word', 'ptr', '[edx+2]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'word', 'ptr', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
push ['offset', '$SG7882']
call ['_FT_Message']
add ['esp,', '20h']
xor ['eax,', 'eax']
jnz ['short', 'loc_2550']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_25AD']
jmp ['short', 'loc_2627']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['edx,', 'ecx']
jl ['short', 'loc_25D0']
mov ['edx,', '[ebp+var_2C]']
movsx ['eax,', 'word', 'ptr', '[edx+6]']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'word', 'ptr', '[ecx+8]']
add ['eax,', 'edx']
jns ['short', 'loc_2622']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+4],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[eax],', 'dx']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['[edx+2],', 'cx']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ecx+6],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_2C]']
mov ['[eax+8],', 'dx']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '0']
jl ['short', 'loc_261E']
mov ['eax,', '[ebp+var_34]']
push ['eax']
push ['offset', '$SG7890']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_25FC']
jmp ['loc_2511']
cmp ['[ebp+var_8],', '0']
jz ['short', '$Bail$54']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+124h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+124h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_262D']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN53_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN52_0']
dd ['offset', '$LN49']
dd ['0FFFFFFE8h,', '4']
dd ['offset', '$LN50']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN51_0']
db ['0Eh', 'dup(0CCh)']
endp
_pcf_get_bitmaps proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '60h']
push ['edi']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '18h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_54],', '0']
lea ['edx,', '[ebp+var_44]']
push ['edx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
push ['8']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0BCh]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0C0h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pcf_seek_to_table_type']
add ['esp,', '18h']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2736']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_2AEF']
push ['8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2755']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_2AEF']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_GetULongLE']
add ['esp,', '4']
mov ['[ebp+var_38],', 'eax']
mov ['edx,', '[ebp+var_38]']
and ['edx,', '4']
jz ['short', 'loc_2775']
mov ['[ebp+var_58],', '1']
jmp ['short', 'loc_277C']
mov ['[ebp+var_58],', '0']
cmp ['[ebp+var_58],', '1']
jnz ['short', 'loc_2793']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_GetULong']
add ['esp,', '4']
mov ['[ebp+var_4C],', 'eax']
jmp ['short', 'loc_27A2']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_GetULongLE']
add ['esp,', '4']
mov ['[ebp+var_4C],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '0FFFFFF00h']
jz ['short', 'loc_27D4']
push ['offset', '$SG7921']
push ['2FBh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_2AEF']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_27F2']
push ['offset', '$SG7926']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_27D4']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_2818']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
push ['offset', '$SG7931']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_27F6']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+120h],', '0']
jl ['short', 'loc_2836']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4C]']
cmp ['ecx,', '[eax+120h]']
jz ['short', 'loc_2852']
push ['offset', '$SG7935']
push ['303h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_2AEF']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
push ['0']
push ['4']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_287D']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_2AEF']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_288F']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '1']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_4C]']
jnb ['loc_292C']
mov ['ecx,', '[ebp+var_38]']
and ['ecx,', '4']
jz ['short', 'loc_28AC']
mov ['[ebp+var_5C],', '1']
jmp ['short', 'loc_28B3']
mov ['[ebp+var_5C],', '0']
cmp ['[ebp+var_5C],', '1']
jnz ['short', 'loc_28D4']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadULong']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_28ED']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_ReadULongLE']
add ['esp,', '8']
mov ['edx,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+edx*4],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '5']
jl ['short', 'loc_2923']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+ecx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
push ['offset', '$SG7952']
call ['_FT_Message']
add ['esp,', '10h']
xor ['edx,', 'edx']
jnz ['short', 'loc_28ED']
jmp ['loc_2886']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2937']
jmp ['$Bail$72']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_2949']
mov ['eax,', '[ebp+var_50]']
add ['eax,', '1']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '4']
jnb ['loc_29EC']
mov ['ecx,', '[ebp+var_38]']
and ['ecx,', '4']
jz ['short', 'loc_2964']
mov ['[ebp+var_60],', '1']
jmp ['short', 'loc_296B']
mov ['[ebp+var_60],', '0']
cmp ['[ebp+var_60],', '1']
jnz ['short', 'loc_298A']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadULong']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+ecx*4+var_2C],', 'eax']
jmp ['short', 'loc_29A1']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadULongLE']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+ecx*4+var_2C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_29AC']
jmp ['$Bail$72']
mov ['edx,', '[ebp+var_38]']
and ['edx,', '3']
mov ['eax,', '[ebp+edx*4+var_2C]']
mov ['[ebp+var_54],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_29E3']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+eax*4+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
push ['offset', '$SG7969']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_29B9']
jmp ['loc_2940']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_2A15']
mov ['eax,', '[ebp+var_38]']
and ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+var_4C]']
push ['ecx']
push ['offset', '$SG7974']
call ['_FT_Message']
add ['esp,', '0Ch']
xor ['edx,', 'edx']
jnz ['short', 'loc_29EC']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '4']
jl ['short', 'loc_2A3B']
mov ['edx,', '[ebp+var_54]']
push ['edx']
push ['offset', '$SG7979']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_2A19']
mov ['ecx,', '[ebp+var_54]']
mov ['[ebp+var_54],', 'ecx']
mov ['[ebp+var_50],', '0']
jmp ['short', 'loc_2A57']
mov ['edx,', '[ebp+var_50]']
add ['edx,', '1']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '[ebp+var_50]']
cmp ['eax,', '[ebp+var_4C]']
jnb ['short', 'loc_2AC5']
mov ['ecx,', '[ebp+var_50]']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+ecx*4],', '0']
jl ['short', 'loc_2A79']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+eax*4]']
cmp ['edx,', '[ebp+var_44]']
jbe ['short', 'loc_2AA1']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '0']
jl ['short', 'loc_2A9B']
mov ['edx,', '[ebp+var_50]']
push ['edx']
push ['offset', '$SG7990']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_2A79']
jmp ['short', 'loc_2AC3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_18]']
add ['edx,', '[ecx+eax*4]']
mov ['eax,', '[ebp+var_50]']
shl ['eax,', '4']
mov ['ecx,', '[ebp+arg_4]']
mov ['ecx,', '[ecx+124h]']
mov ['[ecx+eax+0Ch],', 'edx']
jmp ['short', 'loc_2A4E']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_38]']
mov ['[edx+134h],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_18],', '0']
xor ['eax,', 'eax']
jnz ['short', '$Bail$72']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN71']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN70']
dd ['offset', '$LN66']
dd ['0FFFFFFD4h,', '10h']
dd ['offset', '$LN67']
dd ['0FFFFFFC8h,', '4']
dd ['offset', '$LN68']
dd ['0FFFFFFBCh,', '4']
dd ['offset', '$LN69']
align ['4']
endp
_pcf_get_encodings proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '58h']
push ['edi']
lea ['edi,', '[ebp+var_58]']
mov ['ecx,', '16h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_50],', '0']
lea ['edx,', '[ebp+var_24]']
push ['edx']
lea ['eax,', '[ebp+var_18]']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0BCh]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0C0h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pcf_seek_to_table_type']
add ['esp,', '18h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2BD5']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_2F92']
push ['0Eh']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2BF4']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_2F92']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_GetULongLE']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_18]']
and ['edx,', '4']
jz ['short', 'loc_2C14']
mov ['[ebp+var_54],', '1']
jmp ['short', 'loc_2C1B']
mov ['[ebp+var_54],', '0']
cmp ['[ebp+var_54],', '1']
jnz ['short', 'loc_2C7F']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
movsx ['ecx,', 'ax']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
cwde
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
movsx ['edx,', 'ax']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
movsx ['ecx,', 'ax']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+130h],', 'ax']
jmp ['short', 'loc_2CD9']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_GetUShortLE']
add ['esp,', '4']
cwde
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_GetUShortLE']
add ['esp,', '4']
movsx ['edx,', 'ax']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_GetUShortLE']
add ['esp,', '4']
movsx ['ecx,', 'ax']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_GetUShortLE']
add ['esp,', '4']
cwde
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_GetUShortLE']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+130h],', 'ax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_18]']
and ['ecx,', '0FFFFFF00h']
jz ['short', 'loc_2D0C']
push ['offset', '$SG8034']
push ['370h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_2F92']
cmp ['[ebp+var_2C],', '0']
jl ['short', 'loc_2D3A']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_30]']
jg ['short', 'loc_2D3A']
cmp ['[ebp+var_30],', '0FFh']
jg ['short', 'loc_2D3A']
cmp ['[ebp+var_34],', '0']
jl ['short', 'loc_2D3A']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+var_38]']
jg ['short', 'loc_2D3A']
cmp ['[ebp+var_38],', '0FFh']
jle ['short', 'loc_2D56']
push ['offset', '$SG8037']
push ['379h']
push ['8']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '8']
jmp ['loc_2F92']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_2D74']
push ['offset', '$SG8042']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_2D56']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '4']
jl ['short', 'loc_2DA6']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
push ['offset', '$SG8047']
call ['_FT_Message']
add ['esp,', '14h']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2D78']
mov ['edx,', '[ebp+var_30]']
sub ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_34]']
add ['eax,', '1']
imul ['edx,', 'eax']
mov ['[ebp+var_3C],', 'edx']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
push ['0']
push ['8']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2E01']
push ['offset', '$SG8051']
push ['383h']
push ['40h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '40h']
jmp ['loc_2F92']
mov ['ecx,', '[ebp+var_3C]']
shl ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2E21']
jmp ['$Bail$46']
mov ['[ebp+var_4C],', '0']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_44],', 'eax']
jmp ['short', 'loc_2E39']
mov ['ecx,', '[ebp+var_44]']
add ['ecx,', '1']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+var_44]']
cmp ['edx,', '[ebp+var_38]']
jg ['loc_2F22']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_48],', 'eax']
jmp ['short', 'loc_2E56']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '1']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_48]']
cmp ['edx,', '[ebp+var_30]']
jg ['loc_2F1D']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '4']
jz ['short', 'loc_2E73']
mov ['[ebp+var_58],', '1']
jmp ['short', 'loc_2E7A']
mov ['[ebp+var_58],', '0']
cmp ['[ebp+var_58],', '1']
jnz ['short', 'loc_2E94']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_GetUShort']
add ['esp,', '4']
movsx ['edx,', 'ax']
mov ['[ebp+var_40],', 'edx']
jmp ['short', 'loc_2EA6']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_GetUShortLE']
add ['esp,', '4']
movsx ['ecx,', 'ax']
mov ['[ebp+var_40],', 'ecx']
cmp ['[ebp+var_40],', '0FFFFFFFFh']
jz ['short', 'loc_2F18']
mov ['edx,', '[ebp+var_44]']
shl ['edx,', '8']
add ['edx,', '[ebp+var_48]']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[ebp+var_50]']
mov ['[ecx+eax*8],', 'edx']
mov ['edx,', '[ebp+var_4C]']
mov ['eax,', '[ebp+var_50]']
mov ['cx,', 'word', 'ptr', '[ebp+var_40]']
mov ['[eax+edx*8+4],', 'cx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3Fh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '5']
jl ['short', 'loc_2F0B']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ebp+var_50]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*8+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[edx+ecx*8]']
push ['eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[edx+ecx*8]']
push ['eax']
push ['offset', '$SG8070']
call ['_FT_Message']
add ['esp,', '10h']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2ECD']
mov ['edx,', '[ebp+var_4C]']
add ['edx,', '1']
mov ['[ebp+var_4C],', 'edx']
jmp ['loc_2E4D']
jmp ['loc_2E30']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
push ['8']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2F57']
jmp ['short', '$Bail$46']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4C]']
mov ['[eax+128h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_50]']
mov ['[edx+12Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_2F92']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_50],', '0']
xor ['eax,', 'eax']
jnz ['short', '$Bail$46']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN45']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '58h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN44']
dd ['offset', '$LN41']
dd ['0FFFFFFE8h,', '4']
dd ['offset', '$LN42']
dd ['0FFFFFFDCh,', '4']
dd ['offset', '$LN43']
align ['4']
endp
_pcf_get_accel	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '0C4h']
mov ['[ebp+var_28],', 'eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0BCh]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0C0h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pcf_seek_to_table_type']
add ['esp,', '18h']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_304F']
jmp ['$Bail$23']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_ReadULongLE']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_306D']
jmp ['$Bail$23']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '0FFFFFF00h']
jz ['short', 'loc_308C']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFFF00h']
cmp ['eax,', '100h']
jz ['short', 'loc_308C']
jmp ['$Bail$23']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '4']
jz ['short', 'loc_309D']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_30A4']
mov ['[ebp+var_2C],', '0']
cmp ['[ebp+var_2C],', '1']
jnz ['short', 'loc_30CF']
mov ['edx,', '[ebp+var_28]']
push ['edx']
push ['offset', '_pcf_accel_msb_header']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_30CD']
jmp ['$Bail$23']
jmp ['short', 'loc_30F2']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
push ['offset', '_pcf_accel_header']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadFields']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_30F2']
jmp ['$Bail$23']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '14h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '0FFh']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pcf_get_metric']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_311D']
jmp ['$Bail$23']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '24h']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
and ['ecx,', '0FFh']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pcf_get_metric']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_3148']
jmp ['$Bail$23']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFFF00h']
cmp ['eax,', '100h']
jnz ['short', 'loc_31A9']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '34h']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '0FFh']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_pcf_get_metric']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_317F']
jmp ['short', '$Bail$23']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '44h']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '0FFh']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_pcf_get_metric']
add ['esp,', '0Ch']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_31A7']
jmp ['short', '$Bail$23']
jmp ['short', '$Bail$23']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '14h']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '34h']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '24h']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '44h']
mov ['ecx,', '[edx]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[edx+4]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[edx+8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[edx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN21']
dd ['offset', '$LN18']
dd ['0FFFFFFECh,', '4']
dd ['offset', '$LN19']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN20']
db ['6', 'dup(0CCh)']
endp
_pcf_interpret_style proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '64h']
push ['edi']
lea ['edi,', '[ebp+var_64]']
mov ['ecx,', '19h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_34],', '0']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
push ['offset', '$SG8224']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['loc_335E']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
test ['eax,', 'eax']
jz ['loc_335E']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '4Fh']
jz ['short', 'loc_3315']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '6Fh']
jz ['short', 'loc_3315']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '49h']
jz ['short', 'loc_3315']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '69h']
jnz ['short', 'loc_335E']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+0Ch]']
or ['edx,', '1']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '4Fh']
jz ['short', 'loc_3349']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '6Fh']
jz ['short', 'loc_3349']
mov ['[ebp+var_64],', 'offset', '$SG8230']
jmp ['short', 'loc_3350']
mov ['[ebp+var_64],', 'offset', '$SG8229']
mov ['ecx,', '4']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_64]']
mov ['[ebp+ecx+var_38],', 'edx']
push ['offset', '$SG8231']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_33BE']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+4]']
test ['edx,', 'edx']
jz ['short', 'loc_33BE']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '42h']
jz ['short', 'loc_339F']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '62h']
jnz ['short', 'loc_33BE']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
or ['ecx,', '2']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['[ebp+eax+var_38],', 'offset', '$SG8235']
push ['offset', '$SG8236']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_341E']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
test ['eax,', 'eax']
jz ['short', 'loc_341E']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_341E']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '4Eh']
jz ['short', 'loc_341E']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '6Eh']
jz ['short', 'loc_341E']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+edx+var_38],', 'ecx']
push ['offset', '$SG8239']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_347E']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_347E']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_347E']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '4Eh']
jz ['short', 'loc_347E']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx+8]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '6Eh']
jz ['short', 'loc_347E']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+eax+var_38],', 'edx']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_3497']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '4']
jnb ['short', 'loc_34DC']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+ecx*4+var_50],', '0']
mov ['edx,', '[ebp+var_20]']
cmp ['[ebp+edx*4+var_38],', '0']
jz ['short', 'loc_34DA']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+eax*4+var_38]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+edx*4+var_50],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+eax*4+var_50]']
mov ['edx,', '[ebp+var_24]']
lea ['eax,', '[edx+ecx+1]']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_348E']
cmp ['[ebp+var_24],', '0']
jnz ['short', 'loc_3525']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['[ebp+edx+var_38],', 'offset', '$SG8248']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+ecx+var_38]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['[ebp+edx+var_50],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+ecx+var_50]']
add ['edx,', '1']
mov ['[ebp+var_24],', 'edx']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+18h],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_354D']
mov ['eax,', '[ebp+var_C]']
jmp ['loc_3612']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+18h]']
mov ['[ebp+var_58],', 'eax']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_3568']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '1']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '4']
jnb ['loc_3609']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+edx*4+var_38]']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+ecx*4+var_50]']
mov ['[ebp+var_24],', 'edx']
cmp ['[ebp+var_5C],', '0']
jnz ['short', 'loc_358E']
jmp ['short', 'loc_355F']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_58]']
cmp ['ecx,', '[eax+18h]']
jz ['short', 'loc_35A8']
mov ['edx,', '[ebp+var_58]']
mov ['byte', 'ptr', '[edx],', '20h']
mov ['eax,', '[ebp+var_58]']
add ['eax,', '1']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
mov ['eax,', '[ebp+var_58]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_35C8']
cmp ['[ebp+var_20],', '3']
jnz ['short', 'loc_35FB']
mov ['[ebp+var_60],', '0']
jmp ['short', 'loc_35DA']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '1']
mov ['[ebp+var_60],', 'ecx']
mov ['edx,', '[ebp+var_60]']
cmp ['edx,', '[ebp+var_24]']
jnb ['short', 'loc_35FB']
mov ['eax,', '[ebp+var_58]']
add ['eax,', '[ebp+var_60]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '20h']
jnz ['short', 'loc_35F9']
mov ['edx,', '[ebp+var_58]']
add ['edx,', '[ebp+var_60]']
mov ['byte', 'ptr', '[edx],', '2Dh']
jmp ['short', 'loc_35D1']
mov ['eax,', '[ebp+var_58]']
add ['eax,', '[ebp+var_24]']
mov ['[ebp+var_58],', 'eax']
jmp ['loc_355F']
mov ['ecx,', '[ebp+var_58]']
mov ['byte', 'ptr', '[ecx],', '0']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN32_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '64h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN31']
dd ['offset', '$LN28']
dd ['0FFFFFFC8h,', '10h']
dd ['offset', '$LN29']
dd ['0FFFFFFB0h,', '10h']
dd ['offset', '$LN30']
db ['6', 'dup(0CCh)']
endp
_pcf_cmap_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+128h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+12Ch]']
mov ['[ecx+14h],', 'eax']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_pcf_cmap_done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_pcf_cmap_char_index proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_8],', 'edx']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_10]']
jnb ['short', 'loc_379F']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_10]']
shr ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+ecx*8]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_1C]']
jnz ['short', 'loc_3784']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'word', 'ptr', '[eax+edx*8+4]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
jmp ['short', 'loc_379F']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+var_1C]']
jnb ['short', 'loc_3794']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_379D']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_374A']
mov ['eax,', '[ebp+var_18]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Eh', 'dup(0CCh)']
endp
_pcf_cmap_char_next proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_1C],', '0']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_10]']
jnb ['short', 'loc_385D']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_10]']
shr ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*8]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_18]']
cmp ['eax,', '[ebp+var_20]']
jnz ['short', 'loc_3842']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+ecx*8+4]']
add ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', '$Exit$15']
mov ['ecx,', '[ebp+var_18]']
cmp ['ecx,', '[ebp+var_20]']
jnb ['short', 'loc_3852']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_385B']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_3808']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ecx+10h]']
jnb ['short', '$Exit$15']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax*8]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+eax*8+4]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_18],', '0FFFFFFFFh']
jbe ['short', 'loc_38BF']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_38B0']
push ['offset', '$SG8496']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_3892']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_38C7']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_1C]']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_PCF_Face_Done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_390C']
jmp ['loc_3B22']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+12Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+12Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3915']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+124h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+124h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_393C']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+11Ch],', '0']
jz ['loc_3A19']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_3985']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '1']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[eax+118h]']
jge ['short', 'loc_39F2']
imul ['edx,', '[ebp+var_C],', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+11Ch]']
mov ['[ebp+var_10],', 'edx']
jz ['short', 'loc_39F0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_39A5']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jz ['short', 'loc_39F0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_39CF']
jmp ['short', 'loc_397C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+11Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+11Ch],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_39F2']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0C0h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0C0h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3A19']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+14h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_3A40']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_3A61']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+20h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3A82']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0B0h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0B0h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_3AA3']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0B4h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0B4h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_3ACA']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '84h']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+68h],', 'eax']
jnz ['short', 'loc_3B22']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '84h']
push ['edx']
call ['_FT_Stream_Close']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0ACh]']
mov ['[eax+68h],', 'edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_PCF_Face_Init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
mov ['[ebp+arg_10],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_3B7A']
push ['offset', '$SG8587']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_3B5C']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_pcf_load_font']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['loc_3C5D']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_PCF_Face_Done']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '84h']
push ['ecx']
call ['_FT_Stream_OpenGzip']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_C]']
and ['edx,', '0FFh']
cmp ['edx,', '7']
jnz ['short', 'loc_3BD3']
jmp ['$Fail$29']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3C10']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '84h']
push ['edx']
call ['_FT_Stream_OpenLZW']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
and ['eax,', '0FFh']
cmp ['eax,', '7']
jnz ['short', 'loc_3C0A']
jmp ['$Fail$29']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3C1B']
jmp ['$Fail$29']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+0ACh],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '84h']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+68h],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+68h]']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_pcf_load_font']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3C5D']
jmp ['$Fail$29']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_3C98']
push ['offset', '$SG8598']
call ['_FT_Message']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_PCF_Face_Done']
add ['esp,', '4']
push ['offset', '$SG8599']
push ['165h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_3E3B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0B4h]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0B0h]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_19],', '0']
cmp ['[ebp+var_14],', '0']
jz ['loc_3D9A']
cmp ['[ebp+var_18],', '0']
jz ['loc_3D9A']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_20]']
movsx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '69h']
jz ['short', 'loc_3CFA']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_20]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '49h']
jnz ['loc_3D9A']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_20]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '73h']
jz ['short', 'loc_3D22']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_20]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '53h']
jnz ['short', 'loc_3D9A']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_20]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '6Fh']
jz ['short', 'loc_3D48']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_20]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '4Fh']
jnz ['short', 'loc_3D9A']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '3']
mov ['[ebp+var_20],', 'eax']
push ['offset', '$SG8611']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_3D96']
push ['offset', '$SG8612']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3D9A']
push ['offset', '$SG8613']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0B0h]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3D9A']
mov ['[ebp+var_19],', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_30],', 'edx']
mov ['[ebp+var_2C],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_28],', 'ax']
xor ['ecx,', 'ecx']
mov ['[ebp+var_26],', 'cx']
movzx ['edx,', '[ebp+var_19]']
test ['edx,', 'edx']
jz ['short', 'loc_3DD4']
mov ['[ebp+var_2C],', '756E6963h']
mov ['eax,', '3']
mov ['[ebp+var_28],', 'ax']
mov ['ecx,', '1']
mov ['[ebp+var_26],', 'cx']
push ['0']
lea ['edx,', '[ebp+var_30]']
push ['edx']
push ['0']
push ['offset', '_pcf_cmap_class']
call ['_FT_CMap_New']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_3E3B']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_3E0F']
push ['offset', '$SG8624']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', '$Fail$29']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_PCF_Face_Done']
add ['esp,', '4']
push ['offset', '$SG8625']
push ['1A3h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
jmp ['short', '$Exit$30']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN28_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN27']
dd ['offset', '$LN26']
db ['0Ch', 'dup(0CCh)']
endp
_PCF_Size_Select proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
add ['ecx,', '0C4h']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_Select_Metrics']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+18h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
neg ['eax']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'word', 'ptr', '[edx+28h]']
shl ['eax,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+24h],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_PCF_Size_Request proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_C],', '17h']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+10h],', '0']
jz ['short', 'loc_3F51']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[eax+8]']
imul ['eax,', '[ecx+10h]']
add ['eax,', '24h']
cdq
mov ['ecx,', '48h']
idiv ['ecx']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_3F5A']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '20h']
sar ['edx,', '6']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_3F82']
cmp ['[ebp+var_18],', '1']
jz ['short', 'loc_3F9C']
jmp ['short', 'loc_3FBC']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
add ['eax,', '20h']
sar ['eax,', '6']
cmp ['[ebp+var_10],', 'eax']
jnz ['short', 'loc_3F9A']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_3FD6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0CCh]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+0D0h]']
cmp ['[ebp+var_10],', 'edx']
jnz ['short', 'loc_3FBA']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_3FD6']
push ['offset', '$SG8655']
push ['1D4h']
push ['7']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '7']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_3FE3']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_3FF1']
jmp ['short', 'loc_3FF1']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_PCF_Size_Select']
add ['esp,', '8']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_PCF_Glyph_Load	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '34h']
push ['edi']
lea ['edi,', '[ebp+var_34]']
mov ['ecx,', '0Dh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '4Ch']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_405A']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '$SG8680']
call ['_FT_Message']
add ['esp,', '8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_4038']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_4083']
push ['offset', '$SG8682']
push ['1F3h']
push ['23h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '23h']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$42']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+10h]']
jb ['short', 'loc_40AD']
push ['offset', '$SG8686']
push ['1F9h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$42']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+68h]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jbe ['short', 'loc_40C5']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '1']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+124h]']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'word', 'ptr', '[eax+6]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'word', 'ptr', '[edx+8]']
add ['ecx,', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'word', 'ptr', '[edx]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+10h],', 'ax']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+12h],', '1']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '6']
jl ['short', 'loc_418A']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+134h]']
and ['eax,', '4']
jz ['short', 'loc_413C']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_4143']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+134h]']
and ['edx,', '8']
jz ['short', 'loc_415A']
mov ['[ebp+var_20],', '1']
jmp ['short', 'loc_4161']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+134h]']
and ['ecx,', '3']
mov ['edx,', '1']
shl ['edx,', 'cl']
push ['edx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
push ['offset', '$SG8692']
call ['_FT_Message']
add ['esp,', '10h']
xor ['edx,', 'edx']
jnz ['short', 'loc_4114']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+134h]']
and ['ecx,', '3']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '7']
ja ['short', '$LN11_0']
mov ['ecx,', '[ebp+var_24]']
jmp ['ds:$LN41_0[ecx*4]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
add ['eax,', '7']
shr ['eax,', '3']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_4231']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
add ['eax,', '0Fh']
shr ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_4231']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
add ['eax,', '1Fh']
shr ['eax,', '5']
shl ['eax,', '2']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_4231']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
add ['eax,', '3Fh']
shr ['eax,', '6']
shl ['eax,', '3']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_4231']
push ['offset', '$SG8702']
push ['221h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_440B']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[edx+8]']
imul ['ecx,', '[eax]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ft_glyphslot_alloc_bitmap']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_425E']
jmp ['$Exit$42']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_429A']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_429F']
jmp ['$Exit$42']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+134h]']
and ['eax,', '8']
jz ['short', 'loc_42B6']
mov ['[ebp+var_28],', '1']
jmp ['short', 'loc_42BD']
mov ['[ebp+var_28],', '0']
cmp ['[ebp+var_28],', '1']
jz ['short', 'loc_42D6']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['_BitOrderInvert']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+134h]']
and ['edx,', '4']
jz ['short', 'loc_42ED']
mov ['[ebp+var_2C],', '1']
jmp ['short', 'loc_42F4']
mov ['[ebp+var_2C],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+134h]']
and ['ecx,', '8']
jz ['short', 'loc_430B']
mov ['[ebp+var_30],', '1']
jmp ['short', 'loc_4312']
mov ['[ebp+var_30],', '0']
mov ['edx,', '[ebp+var_2C]']
cmp ['edx,', '[ebp+var_30]']
jz ['short', 'loc_436B']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+134h]']
and ['ecx,', '30h']
shr ['ecx,', '4']
mov ['edx,', '1']
shl ['edx,', 'cl']
mov ['[ebp+var_34],', 'edx']
cmp ['[ebp+var_34],', '2']
jz ['short', 'loc_4343']
cmp ['[ebp+var_34],', '4']
jz ['short', 'loc_4358']
jmp ['short', 'loc_436B']
jmp ['short', 'loc_436B']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_TwoByteSwap']
add ['esp,', '8']
jmp ['short', 'loc_436B']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_FourByteSwap']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+48h],', '62697473h']
mov ['ecx,', '[ebp+var_14]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+64h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
movsx ['edx,', 'word', 'ptr', '[ecx+6]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+68h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
movsx ['edx,', 'word', 'ptr', '[ecx+4]']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+28h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
movsx ['edx,', 'word', 'ptr', '[ecx+6]']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+24h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
mov ['eax,', '[ebp+var_14]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
sub ['edx,', 'ecx']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+18h],', 'edx']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
shl ['edx,', '6']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+1Ch],', 'edx']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0CCh]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+0D0h]']
shl ['edx,', '6']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '18h']
push ['ecx']
call ['_ft_synthesize_vertical_metrics']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
pop ['edi']
add ['esp,', '34h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN14']
dd ['offset', '$LN11_0']
dd ['offset', '$LN13']
dd ['offset', '$LN11_0']
dd ['offset', '$LN11_0']
dd ['offset', '$LN11_0']
dd ['offset', '$LN12_0']
db ['8', 'dup(0CCh)']
endp
_pcf_get_bdf_property proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_pcf_find_property']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['loc_4503']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
test ['eax,', 'eax']
jz ['short', 'loc_448E']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
mov ['[edx+4],', 'ecx']
jmp ['short', 'loc_44FF']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+8],', '7FFFFFFFh']
jg ['short', 'loc_44A6']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+8],', '80000000h']
jge ['short', 'loc_44EA']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_44C4']
push ['offset', '$SG8738']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_44A6']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3Eh']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_44E6']
push ['offset', '$SG8743']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_44C8']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx],', '2']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
mov ['[edx+4],', 'ecx']
xor ['eax,', 'eax']
jmp ['short', 'loc_451A']
push ['offset', '$SG8745']
push ['27Fh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_pcf_get_charset_id proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B0h]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0B4h]']
mov ['[eax],', 'edx']
xor ['eax,', 'eax']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_pcf_driver_requester proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '_pcf_services']
call ['_ft_service_list_lookup']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_memcpy:near']
extrn ['_memset:near']
extrn ['_strcmp:near']
extrn ['_strlen:near']
extrn ['_FT_Message:near']
extrn ['_FT_Throw:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_realloc:near']
extrn ['_ft_mem_free:near']
extrn ['_ft_mem_strdup:near']
extrn ['_ft_service_list_lookup:near']
extrn ['_FT_CMap_New:near']
extrn ['_FT_Select_Metrics:near']
extrn ['_ft_synthesize_vertical_metrics:near']
extrn ['_ft_glyphslot_alloc_bitmap:near']
extrn ['_FT_Stream_Close:near']
extrn ['_FT_Stream_Seek:near']
extrn ['_FT_Stream_Skip:near']
extrn ['_FT_Stream_Read:near']
extrn ['_FT_Stream_EnterFrame:near']
extrn ['_FT_Stream_ExitFrame:near']
extrn ['_FT_Stream_GetUShort:near']
extrn ['_FT_Stream_GetULong:near']
extrn ['_FT_Stream_GetUShortLE:near']
extrn ['_FT_Stream_GetULongLE:near']
extrn ['_FT_Stream_ReadUShort:near']
extrn ['_FT_Stream_ReadULong:near']
extrn ['_FT_Stream_ReadUShortLE:near']
extrn ['_FT_Stream_ReadULongLE:near']
extrn ['_FT_Stream_ReadFields:near']
extrn ['_FT_Stream_OpenGzip:near']
extrn ['_FT_Stream_OpenLZW:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['_ft_trace_levels:near']
extrn ['___security_cookie:near']
end

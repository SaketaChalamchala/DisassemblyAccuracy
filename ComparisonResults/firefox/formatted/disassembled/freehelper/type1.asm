endp
_T1_New_Parser	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+48h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+50h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+58h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+54h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[edx+5Ch],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+5Dh],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+5Eh],', '0']
push ['0Eh']
push ['offset', '$SG8218']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_check_type1_format']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1A9C']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFh']
cmp ['eax,', '2']
jz ['short', 'loc_1A59']
jmp ['$Exit$29']
push ['0Ah']
push ['offset', '$SG8222']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_check_type1_format']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1A9C']
mov ['edx,', '4']
imul ['eax,', 'edx,', '27h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '2']
jl ['short', 'loc_1A93']
push ['offset', '$SG8228']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1A75']
jmp ['$Exit$29']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1AB8']
jmp ['$Exit$29']
lea ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_read_pfb_tag']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1ADA']
jmp ['$Exit$29']
movzx ['eax,', 'word', 'ptr', '[ebp+var_14]']
cmp ['eax,', '8001h']
jz ['short', 'loc_1B0C']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1B01']
jmp ['$Exit$29']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1B13']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+5Ch],', '1']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+14h],', '0']
jnz ['short', 'loc_1B5A']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_4]']
add ['ecx,', '[edx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+4Ch],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_20]']
mov ['[ecx+50h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+5Dh],', '1']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1B58']
jmp ['short', '$Exit$29']
jmp ['short', 'loc_1BA5']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+4Ch],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_1B9A']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1B9C']
jmp ['short', '$Exit$29']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+50h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['[edx+4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+50h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_1BFF']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+5Dh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1BFF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_1BDE']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN28']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN27']
dd ['offset', '$LN24']
dd ['0FFFFFFECh,', '2']
dd ['offset', '$LN25']
dd ['0FFFFFFE0h,', '4']
dd ['offset', '$LN26']
db ['0Dh', 'dup(0CCh)']
endp
_T1_Get_Private_Dict proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '54h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_54]']
mov ['ecx,', '15h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+48h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5Ch]']
test ['edx,', 'edx']
jz ['loc_1E15']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_FT_Stream_Pos']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+58h],', '0']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_read_pfb_tag']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1CE6']
jmp ['$Fail$50']
movzx ['edx,', '[ebp+var_2C]']
cmp ['edx,', '8002h']
jz ['short', 'loc_1CF4']
jmp ['short', 'loc_1D23']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
add ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+58h],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FT_Stream_Skip']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1D21']
jmp ['$Fail$50']
jmp ['short', 'loc_1CC4']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+58h],', '0']
jnz ['short', 'loc_1D58']
push ['offset', '$SG8285']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8286']
push ['12Eh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
jmp ['$Fail$50']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_1D94']
lea ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+54h],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1D99']
jmp ['$Fail$50']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+58h],', '0']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_read_pfb_tag']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_1DCB']
movzx ['eax,', '[ebp+var_2C]']
cmp ['eax,', '8002h']
jz ['short', 'loc_1DD4']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1E10']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+54h]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+58h]']
push ['eax']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_FT_Stream_Read']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1DFF']
jmp ['$Fail$50']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
add ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+58h],', 'ecx']
jmp ['short', 'loc_1DA3']
jmp ['loc_22CF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '[edx+50h]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_34]']
mov ['cl,', '[eax+edx]']
mov ['[ebp+var_39],', 'cl']
movzx ['edx,', '[ebp+var_39]']
cmp ['edx,', '65h']
jnz ['short', 'loc_1EA0']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '9']
cmp ['eax,', '[ebp+var_38]']
jnb ['short', 'loc_1EA0']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '65h']
jnz ['short', 'loc_1EA0']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '78h']
jnz ['short', 'loc_1EA0']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '65h']
jnz ['short', 'loc_1EA0']
mov ['edx,', '1']
shl ['edx,', '2']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '63h']
jnz ['short', 'loc_1EA0']
jmp ['short', 'loc_1EE2']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '1']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+var_38]']
jb ['short', 'loc_1EDD']
push ['offset', '$SG8312']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8313']
push ['168h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
jmp ['$Fail$50']
jmp ['$Again$51']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '0Ah']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[ebp+var_38]']
jnb ['short', 'loc_1F85']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '65h']
jnz ['short', 'loc_1F40']
mov ['esi,', 'esp']
push ['5']
push ['offset', '$SG8320']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_1F40']
jmp ['short', '$Found$52']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_1F63']
jmp ['short', 'loc_1F85']
mov ['eax,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_34],', 'ecx']
jmp ['short', 'loc_1F0A']
mov ['edx,', '[ebp+var_38]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+50h]']
mov ['[ebp+var_38],', 'ecx']
jmp ['$Again$51']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+50h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
sub ['edx,', '[ebp+var_34]']
mov ['esi,', 'esp']
push ['edx']
push ['0Ah']
mov ['eax,', '[ebp+var_34]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__memchr']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_202C']
mov ['ecx,', '[ebp+var_38]']
sub ['ecx,', '[ebp+var_34]']
mov ['esi,', 'esp']
push ['ecx']
push ['0Dh']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__memchr']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_40],', 'eax']
ja ['short', 'loc_202C']
mov ['[ebp+var_51],', '0']
jmp ['short', 'loc_2030']
mov ['[ebp+var_51],', '1']
mov ['al,', '[ebp+var_51]']
mov ['[ebp+var_41],', 'al']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[ebp+var_38]']
jnb ['short', 'loc_207D']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '20h']
jz ['short', 'loc_2072']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '9']
jz ['short', 'loc_2072']
movzx ['eax,', '[ebp+var_41]']
test ['eax,', 'eax']
jz ['short', 'loc_2067']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '0Dh']
jz ['short', 'loc_2072']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Ah']
jnz ['short', 'loc_207D']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '1']
mov ['[ebp+var_34],', 'edx']
jmp ['short', 'loc_2036']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+var_38]']
jb ['short', 'loc_20B1']
push ['offset', '$SG8330']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8331']
push ['1ACh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
jmp ['$Fail$50']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_34]']
sub ['edx,', '[ecx+4Ch]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
sub ['ecx,', 'edx']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx+5Dh]']
test ['eax,', 'eax']
jz ['short', 'loc_2103']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+54h],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_20F8']
jmp ['$Fail$50']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+58h],', 'eax']
jmp ['short', 'loc_2133']
mov ['ecx,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[ecx+5Eh],', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
mov ['[edx+54h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+58h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+4Ch],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+50h],', '0']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '3']
cmp ['eax,', '[ebp+var_38]']
jnb ['loc_22AE']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
sub ['ecx,', '30h']
cmp ['ecx,', '0Ah']
jb ['short', 'loc_218B']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
sub ['edx,', '61h']
cmp ['edx,', '6']
jb ['short', 'loc_218B']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
sub ['eax,', '41h']
cmp ['eax,', '6']
jnb ['loc_22AE']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
sub ['eax,', '30h']
cmp ['eax,', '0Ah']
jb ['short', 'loc_21D4']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
sub ['eax,', '61h']
cmp ['eax,', '6']
jb ['short', 'loc_21D4']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
sub ['eax,', '41h']
cmp ['eax,', '6']
jnb ['loc_22AE']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
sub ['eax,', '30h']
cmp ['eax,', '0Ah']
jb ['short', 'loc_221A']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
sub ['eax,', '61h']
cmp ['eax,', '6']
jb ['short', 'loc_221A']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
sub ['eax,', '41h']
cmp ['eax,', '6']
jnb ['loc_22AE']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_34]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
sub ['ecx,', '30h']
cmp ['ecx,', '0Ah']
jb ['short', 'loc_225F']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
sub ['edx,', '61h']
cmp ['edx,', '6']
jb ['short', 'loc_225F']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_34]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
sub ['eax,', '41h']
cmp ['eax,', '6']
jnb ['short', 'loc_22AE']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_34]']
mov ['[ecx],', 'edx']
mov ['esi,', 'esp']
push ['0']
lea ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ecx+18h]']
call ['edx']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4C]']
mov ['[eax+58h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+54h]']
mov ['ecx,', '[ebp+var_4C]']
mov ['byte', 'ptr', '[eax+ecx],', '0']
jmp ['short', 'loc_22CF']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__memmove']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['esi,', 'esp']
push ['0D971h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+58h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+54h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+10h]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+58h],', '4']
jnb ['short', 'loc_2328']
push ['offset', '$SG8358']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8359']
push ['1E8h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
jmp ['short', '$Fail$50']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
mov ['byte', 'ptr', '[edx+ecx],', '20h']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
mov ['byte', 'ptr', '[edx+ecx],', '20h']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
mov ['byte', 'ptr', '[edx+ecx],', '20h']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
mov ['byte', 'ptr', '[eax+edx],', '20h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+54h]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+58h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN49']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '54h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN48']
dd ['offset', '$LN44']
dd ['0FFFFFFE4h,', '4']
dd ['offset', '$LN45']
dd ['0FFFFFFD4h,', '2']
dd ['offset', '$LN46']
dd ['0FFFFFFB4h,', '4']
dd ['offset', '$LN47']
db ['5', 'dup(0CCh)']
endp
_T1_Finalize_Parser proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+54h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+54h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_2421']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+5Dh]']
test ['edx,', 'edx']
jnz ['short', 'loc_246E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_244D']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+18h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_read_pfb_tag	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'ax']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx],', '0']
lea ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_ReadUShort']
add ['esp,', '8']
mov ['word', 'ptr', '[ebp+var_10],', 'ax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2523']
movzx ['edx,', 'word', 'ptr', '[ebp+var_10]']
cmp ['edx,', '8001h']
jz ['short', 'loc_24F8']
movzx ['eax,', 'word', 'ptr', '[ebp+var_10]']
cmp ['eax,', '8002h']
jnz ['short', 'loc_2519']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_ReadULongLE']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_2519']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['ax,', 'word', 'ptr', '[ebp+var_10]']
mov ['[edx],', 'ax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8']
dd ['offset', '$LN7']
db ['0Ah', 'dup(0CCh)']
endp
_check_type1_format proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_25A8']
jmp ['$Exit$12']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_read_pfb_tag']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_25CA']
jmp ['$Exit$12']
movzx ['ecx,', 'word', 'ptr', '[ebp+var_C]']
cmp ['ecx,', '8001h']
jz ['short', 'loc_25EF']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_FT_Stream_Seek']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_25EF']
jmp ['short', '$Exit$12']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', '$Exit$12']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_2641']
push ['offset', '$SG8205']
push ['7Dh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN11']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN10']
dd ['offset', '$LN8_0']
dd ['0FFFFFFE8h,', '4']
dd ['offset', '$LN9_0']
align ['4']
endp
_FT_MulFix_i386	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
imul ['edx']
mov ['ecx,', 'edx']
sar ['ecx,', '1Fh']
add ['ecx,', '8000h']
add ['eax,', 'ecx']
adc ['edx,', '0']
shr ['eax,', '10h']
shl ['edx,', '10h']
add ['eax,', 'edx']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_T1_Open_Face	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1C0h']
push ['edi']
lea ['edi,', '[ebp+var_1C0]']
mov ['ecx,', '70h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '84h']
mov ['[ebp+var_188],', 'eax']
mov ['ecx,', '[ebp+var_188]']
add ['ecx,', '24h']
mov ['[ebp+var_18C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+1E8h]']
mov ['[ebp+var_19C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_17C]']
push ['edx']
call ['_t1_init_loader']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+214h],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+218h],', '0FFFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+21Ch],', '0']
mov ['eax,', '[ebp+var_18C]']
mov ['dword', 'ptr', '[eax+70h],', '7']
mov ['ecx,', '[ebp+var_18C]']
mov ['dword', 'ptr', '[ecx+74h],', '1']
mov ['edx,', '[ebp+var_18C]']
mov ['dword', 'ptr', '[edx+4],', '4']
mov ['eax,', '[ebp+var_18C]']
mov ['dword', 'ptr', '[eax+0B4h],', '0F5Ch']
mov ['ecx,', '[ebp+var_18C]']
mov ['dword', 'ptr', '[ecx+6Ch],', '27A000h']
lea ['edx,', '[ebp+var_17C]']
mov ['[ebp+var_184],', 'edx']
mov ['eax,', '[ebp+var_19C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+68h]']
push ['ecx']
mov ['edx,', '[ebp+var_184]']
push ['edx']
call ['_T1_New_Parser']
add ['esp,', '10h']
mov ['[ebp+var_194],', 'eax']
cmp ['[ebp+var_194],', '0']
jz ['short', 'loc_27E6']
jmp ['$Exit$40']
mov ['eax,', '[ebp+var_184]']
mov ['ecx,', '[eax+50h]']
push ['ecx']
mov ['edx,', '[ebp+var_184]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
lea ['ecx,', '[ebp+var_17C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_parse_dict']
add ['esp,', '10h']
mov ['[ebp+var_194],', 'eax']
cmp ['[ebp+var_194],', '0']
jz ['short', 'loc_2821']
jmp ['$Exit$40']
mov ['eax,', '[ebp+var_19C]']
push ['eax']
mov ['ecx,', '[ebp+var_184]']
push ['ecx']
call ['_T1_Get_Private_Dict']
add ['esp,', '8']
mov ['[ebp+var_194],', 'eax']
cmp ['[ebp+var_194],', '0']
jz ['short', 'loc_284B']
jmp ['$Exit$40']
mov ['edx,', '[ebp+var_184]']
mov ['eax,', '[edx+58h]']
push ['eax']
mov ['ecx,', '[ebp+var_184]']
mov ['edx,', '[ecx+54h]']
push ['edx']
lea ['eax,', '[ebp+var_17C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_parse_dict']
add ['esp,', '10h']
mov ['[ebp+var_194],', 'eax']
cmp ['[ebp+var_194],', '0']
jz ['short', 'loc_2886']
jmp ['$Exit$40']
mov ['edx,', '[ebp+var_18C]']
movzx ['eax,', 'byte', 'ptr', '[edx+8]']
and ['eax,', '0FFFFFFFEh']
mov ['ecx,', '[ebp+var_18C]']
mov ['[ecx+8],', 'al']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+210h],', '0']
jz ['short', 'loc_2914']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+210h]']
cmp ['dword', 'ptr', '[ecx+1A0h],', '0']
jz ['short', 'loc_2914']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+210h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+210h]']
mov ['eax,', '[eax+1A0h]']
cmp ['eax,', '[edx+4]']
jz ['short', 'loc_2914']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+210h]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+210h]']
mov ['eax,', '[edx+1A0h]']
push ['eax']
push ['offset', '$SG9706']
call ['_FT_Message']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+210h]']
mov ['dword', 'ptr', '[edx+1A0h],', '0']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+210h],', '0']
jz ['short', 'loc_2949']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+210h]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_293D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+210h]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jnz ['short', 'loc_2949']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_T1_Done_Blend']
add ['esp,', '4']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+210h],', '0']
jz ['short', 'loc_29AD']
mov ['[ebp+var_1A0],', '0']
jmp ['short', 'loc_2970']
mov ['ecx,', '[ebp+var_1A0]']
add ['ecx,', '1']
mov ['[ebp+var_1A0],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+210h]']
mov ['ecx,', '[ebp+var_1A0]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_29AD']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+210h]']
imul ['ecx,', '[ebp+var_1A0],', '0Ch']
movzx ['edx,', 'byte', 'ptr', '[eax+ecx+58h]']
test ['edx,', 'edx']
jnz ['short', 'loc_29AB']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_T1_Done_Blend']
add ['esp,', '4']
jmp ['short', 'loc_29AD']
jmp ['short', 'loc_2961']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+210h],', '0']
jz ['short', 'loc_2A2A']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+21Ch],', '0']
jbe ['short', 'loc_2A28']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_1A4],', 'ecx']
lea ['edx,', '[ebp+var_194]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+21Ch]']
push ['ecx']
push ['0']
push ['4']
mov ['edx,', '[ebp+var_1A4]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+220h],', 'eax']
cmp ['[ebp+var_194],', '0']
jz ['short', 'loc_2A28']
push ['offset', '$SG9721']
call ['_FT_Message']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+21Ch],', '0']
jmp ['$Exit$40']
jmp ['short', 'loc_2A37']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+21Ch],', '0']
mov ['ecx,', '[ebp+var_188]']
mov ['edx,', '[ebp+var_E4]']
mov ['[ecx+11Ch],', 'edx']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_2A92']
mov ['[ebp+var_34],', '0']
mov ['eax,', '[ebp+var_188]']
mov ['ecx,', '[ebp+var_44]']
mov ['[eax+110h],', 'ecx']
mov ['edx,', '[ebp+var_188]']
mov ['eax,', '[ebp+var_40]']
mov ['[edx+104h],', 'eax']
mov ['ecx,', '[ebp+var_188]']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx+114h],', 'edx']
mov ['eax,', '[ebp+var_188]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+118h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+80h]']
cmp ['dword', 'ptr', '[eax+30h],', '0']
jz ['short', 'loc_2AAA']
mov ['[ebp+var_1BD],', '1']
jmp ['short', 'loc_2AB1']
mov ['[ebp+var_1BD],', '0']
movzx ['ecx,', '[ebp+var_1BD]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2AEF']
cmp ['[ebp+var_A0],', '0']
jnz ['short', 'loc_2AEF']
push ['offset', '$SG9727']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9728']
push ['89Bh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_194],', 'eax']
mov ['[ebp+var_A0],', '0']
mov ['edx,', '[ebp+var_188]']
mov ['eax,', '[ebp+var_AC]']
mov ['[edx+108h],', 'eax']
mov ['ecx,', '[ebp+var_188]']
mov ['edx,', '[ebp+var_94]']
mov ['[ecx+124h],', 'edx']
mov ['eax,', '[ebp+var_188]']
mov ['ecx,', '[ebp+var_90]']
mov ['[eax+128h],', 'ecx']
mov ['edx,', '[ebp+var_188]']
mov ['eax,', '[ebp+var_E0]']
mov ['[edx+10Ch],', 'eax']
mov ['ecx,', '[ebp+var_188]']
mov ['edx,', '[ebp+var_C8]']
mov ['[ecx+120h],', 'edx']
mov ['[ebp+var_E0],', '0']
mov ['[ebp+var_C8],', '0']
mov ['eax,', '[ebp+var_188]']
cmp ['dword', 'ptr', '[eax+0ECh],', '1']
jnz ['$Exit$40']
mov ['[ebp+var_1B0],', '0']
mov ['[ebp+var_1B4],', '0']
mov ['[ebp+var_1A8],', '0']
jmp ['short', 'loc_2BA9']
mov ['ecx,', '[ebp+var_1A8]']
add ['ecx,', '1']
mov ['[ebp+var_1A8],', 'ecx']
mov ['edx,', '[ebp+var_1A8]']
cmp ['edx,', '[ebp+var_108]']
jge ['loc_2D0D']
mov ['eax,', '[ebp+var_188]']
mov ['ecx,', '[eax+0FCh]']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_1A8]']
mov ['[ecx+eax*2],', 'dx']
mov ['ecx,', '[ebp+var_188]']
mov ['edx,', '[ecx+100h]']
mov ['eax,', '[ebp+var_1A8]']
mov ['dword', 'ptr', '[edx+eax*4],', 'offset', '$SG9741']
mov ['ecx,', '[ebp+var_1A8]']
mov ['edx,', '[ebp+var_100]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_1BC],', 'eax']
cmp ['[ebp+var_1BC],', '0']
jz ['loc_2D08']
mov ['[ebp+var_1AC],', '0']
jmp ['short', 'loc_2C29']
mov ['ecx,', '[ebp+var_1AC]']
add ['ecx,', '1']
mov ['[ebp+var_1AC],', 'ecx']
mov ['edx,', '[ebp+var_188]']
mov ['eax,', '[ebp+var_1AC]']
cmp ['eax,', '[edx+11Ch]']
jge ['loc_2D08']
mov ['ecx,', '[ebp+var_188]']
mov ['edx,', '[ecx+120h]']
mov ['eax,', '[ebp+var_1AC]']
mov ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_1B8],', 'ecx']
mov ['edx,', '[ebp+var_1B8]']
push ['edx']
mov ['eax,', '[ebp+var_1BC]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['loc_2D03']
mov ['ecx,', '[ebp+var_188]']
mov ['edx,', '[ecx+0FCh]']
mov ['eax,', '[ebp+var_1A8]']
mov ['cx,', 'word', 'ptr', '[ebp+var_1AC]']
mov ['[edx+eax*2],', 'cx']
mov ['edx,', '[ebp+var_188]']
mov ['eax,', '[edx+100h]']
mov ['ecx,', '[ebp+var_1A8]']
mov ['edx,', '[ebp+var_1B8]']
mov ['[eax+ecx*4],', 'edx']
mov ['eax,', '[ebp+var_1B8]']
push ['eax']
push ['offset', '$SG9755']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_2D01']
mov ['ecx,', '[ebp+var_1A8]']
cmp ['ecx,', '[ebp+var_1B0]']
jge ['short', 'loc_2CE4']
mov ['edx,', '[ebp+var_1A8]']
mov ['[ebp+var_1B0],', 'edx']
mov ['eax,', '[ebp+var_1A8]']
cmp ['eax,', '[ebp+var_1B4]']
jl ['short', 'loc_2D01']
mov ['ecx,', '[ebp+var_1A8]']
add ['ecx,', '1']
mov ['[ebp+var_1B4],', 'ecx']
jmp ['short', 'loc_2D08']
jmp ['loc_2C1A']
jmp ['loc_2B9A']
mov ['edx,', '[ebp+var_188]']
mov ['eax,', '[ebp+var_1B0]']
mov ['[edx+0F4h],', 'eax']
mov ['ecx,', '[ebp+var_188]']
mov ['edx,', '[ebp+var_1B4]']
mov ['[ecx+0F8h],', 'edx']
mov ['eax,', '[ebp+var_188]']
mov ['ecx,', '[ebp+var_11C]']
mov ['[eax+0F0h],', 'ecx']
lea ['edx,', '[ebp+var_17C]']
push ['edx']
call ['_t1_done_loader']
add ['esp,', '4']
mov ['eax,', '[ebp+var_194]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN39']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '1C0h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN38']
dd ['offset', '$LN36']
dd ['0FFFFFE6Ch,', '4']
dd ['offset', '$LN37']
align ['4']
endp
_T1_Get_Multi_Master proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+210h]']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '$SG8589']
push ['0C7h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['loc_2E8A']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[edx+4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2E1E']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+4]']
jnb ['short', 'loc_2E83']
imul ['edx,', '[ebp+var_8],', '0Ch']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[eax+edx+8]']
mov ['[ebp+var_10],', 'ecx']
imul ['edx,', '[ebp+var_8],', '0Ch']
mov ['eax,', '[ebp+var_4]']
lea ['ecx,', '[eax+edx+58h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax*4+8]']
mov ['[edx],', 'eax']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[edx+ecx]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[edx+eax*4-4]']
mov ['[ecx+8],', 'edx']
jmp ['short', 'loc_2E15']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_C]']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_T1_Get_MM_Var	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '78h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_78]']
mov ['ecx,', '1Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+210h]']
mov ['[ebp+var_78],', 'eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_T1_Get_Multi_Master']
add ['esp,', '8']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_2EF7']
jmp ['$Exit$22']
lea ['eax,', '[ebp+var_54]']
push ['eax']
imul ['ecx,', '[ebp+var_48],', '18h']
add ['ecx,', '14h']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_2F1D']
jmp ['$Exit$22']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_48]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_44]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+8],', '0FFFFFFFFh']
mov ['edx,', '14h']
shl ['edx,', '0']
add ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_2F65']
mov ['edx,', '[ebp+var_5C]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_5C]']
cmp ['eax,', '[ebp+var_48]']
jnb ['loc_30A7']
imul ['ecx,', '[ebp+var_5C],', '0Ch']
imul ['edx,', '[ebp+var_5C],', '18h']
mov ['eax,', '[ebp+var_C]']
mov ['eax,', '[eax+0Ch]']
mov ['ecx,', '[ebp+ecx+var_40]']
mov ['[eax+edx],', 'ecx']
imul ['edx,', '[ebp+var_5C],', '0Ch']
mov ['eax,', '[ebp+edx+var_3C]']
shl ['eax,', '10h']
imul ['ecx,', '[ebp+var_5C],', '18h']
mov ['edx,', '[ebp+var_C]']
mov ['edx,', '[edx+0Ch]']
mov ['[edx+ecx+4],', 'eax']
imul ['eax,', '[ebp+var_5C],', '0Ch']
mov ['ecx,', '[ebp+eax+var_38]']
shl ['ecx,', '10h']
imul ['edx,', '[ebp+var_5C],', '18h']
mov ['eax,', '[ebp+var_C]']
mov ['eax,', '[eax+0Ch]']
mov ['[eax+edx+0Ch],', 'ecx']
imul ['ecx,', '[ebp+var_5C],', '18h']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
imul ['edx,', '[ebp+var_5C],', '18h']
mov ['esi,', '[ebp+var_C]']
mov ['esi,', '[esi+0Ch]']
mov ['eax,', '[eax+ecx+4]']
add ['eax,', '[esi+edx+0Ch]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
imul ['ecx,', '[ebp+var_5C],', '18h']
mov ['edx,', '[ebp+var_C]']
mov ['edx,', '[edx+0Ch]']
mov ['[edx+ecx+8],', 'eax']
imul ['eax,', '[ebp+var_5C],', '18h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
mov ['dword', 'ptr', '[edx+eax+14h],', '0FFFFFFFFh']
imul ['eax,', '[ebp+var_5C],', '18h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
mov ['dword', 'ptr', '[edx+eax+10h],', '0FFFFFFFFh']
push ['offset', '$SG8658']
imul ['eax,', '[ebp+var_5C],', '18h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+eax]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_303E']
imul ['ecx,', '[ebp+var_5C],', '18h']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
mov ['dword', 'ptr', '[eax+ecx+10h],', '77676874h']
jmp ['short', 'loc_30A2']
push ['offset', '$SG8666']
imul ['ecx,', '[ebp+var_5C],', '18h']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_3071']
imul ['edx,', '[ebp+var_5C],', '18h']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0Ch]']
mov ['dword', 'ptr', '[ecx+edx+10h],', '77647468h']
jmp ['short', 'loc_30A2']
push ['offset', '$SG8674']
imul ['edx,', '[ebp+var_5C],', '18h']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx+edx]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_30A2']
imul ['eax,', '[ebp+var_5C],', '18h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
mov ['dword', 'ptr', '[edx+eax+10h],', '6F70737Ah']
jmp ['loc_2F5C']
mov ['eax,', '[ebp+var_78]']
mov ['edx,', '1']
mov ['ecx,', '[eax+4]']
shl ['edx,', 'cl']
mov ['eax,', '[ebp+var_78]']
cmp ['[eax],', 'edx']
jnz ['short', 'loc_311E']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['eax,', '[ebp+var_70]']
push ['eax']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[ecx+8Ch]']
push ['edx']
call ['_mm_weights_unmap']
add ['esp,', '0Ch']
mov ['[ebp+var_5C],', '0']
jmp ['short', 'loc_30EA']
mov ['eax,', '[ebp+var_5C]']
add ['eax,', '1']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
cmp ['ecx,', '[ebp+var_48]']
jnb ['short', 'loc_311E']
mov ['edx,', '[ebp+var_5C]']
mov ['eax,', '[ebp+edx*4+var_70]']
push ['eax']
imul ['ecx,', '[ebp+var_5C],', '0Ch']
mov ['edx,', '[ebp+var_78]']
lea ['eax,', '[edx+ecx+58h]']
push ['eax']
call ['_mm_axis_unmap']
add ['esp,', '8']
imul ['ecx,', '[ebp+var_5C],', '18h']
mov ['edx,', '[ebp+var_C]']
mov ['edx,', '[edx+0Ch]']
mov ['[edx+ecx+8],', 'eax']
jmp ['short', 'loc_30E1']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_54]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN21']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '78h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN20']
dd ['offset', '$LN17']
dd ['0FFFFFFACh,', '4']
dd ['offset', '$LN18']
db ['90h']
db ['3', 'dup(0FFh)']
dd ['10h']
dd ['offset', '$LN19']
align ['4']
endp
_T1_Set_MM_Blend proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+210h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '6']
cmp ['[ebp+var_4],', '0']
jz ['loc_329F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['loc_329F']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_31F7']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[edx]']
jnb ['loc_3298']
mov ['[ebp+var_14],', '10000h']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_321E']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx+4]']
jnb ['short', 'loc_3281']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jge ['short', 'loc_3242']
mov ['[ebp+var_18],', '0']
cmp ['[ebp+var_18],', '10000h']
jle ['short', 'loc_3252']
mov ['[ebp+var_18],', '10000h']
mov ['edx,', '1']
mov ['ecx,', '[ebp+var_10]']
shl ['edx,', 'cl']
and ['edx,', '[ebp+var_C]']
jnz ['short', 'loc_326C']
mov ['eax,', '10000h']
sub ['eax,', '[ebp+var_18]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_3215']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+88h]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_14]']
mov ['[ecx+edx*4],', 'eax']
jmp ['loc_31EE']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Ch', 'dup(0CCh)']
endp
_T1_Set_MM_Design proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '7Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_7C]']
mov ['ecx,', '1Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+210h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_C],', '6']
cmp ['[ebp+var_8],', '0']
jz ['loc_3453']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_4]']
jnz ['loc_3453']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_331B']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx+4]']
jnb ['loc_343C']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_60],', 'eax']
imul ['ecx,', '[ebp+var_10],', '0Ch']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx+58h]']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_68]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_6C],', 'edx']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_70],', 'ecx']
mov ['[ebp+var_74],', '0FFFFFFFFh']
mov ['[ebp+var_78],', '0FFFFFFFFh']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_3376']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_68]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['[ebp+var_14],', 'ecx']
jnb ['short', 'loc_33BE']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_7C],', 'ecx']
mov ['edx,', '[ebp+var_60]']
cmp ['edx,', '[ebp+var_7C]']
jnz ['short', 'loc_33A6']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_64],', 'edx']
jmp ['$Found$19']
mov ['eax,', '[ebp+var_60]']
cmp ['eax,', '[ebp+var_7C]']
jge ['short', 'loc_33B6']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_78],', 'ecx']
jmp ['short', 'loc_33BE']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_74],', 'edx']
jmp ['short', 'loc_336D']
cmp ['[ebp+var_74],', '0']
jge ['short', 'loc_33D7']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_70]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_64],', 'eax']
jmp ['short', '$Found$19']
cmp ['[ebp+var_78],', '0']
jge ['short', 'loc_33EF']
mov ['ecx,', '[ebp+var_68]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_70]']
mov ['ecx,', '[eax+edx*4-4]']
mov ['[ebp+var_64],', 'ecx']
jmp ['short', '$Found$19']
mov ['edx,', '[ebp+var_78]']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[ebp+var_74]']
mov ['esi,', '[ebp+var_6C]']
mov ['edx,', '[eax+edx*4]']
sub ['edx,', '[esi+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_78]']
mov ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ebp+var_74]']
mov ['esi,', '[ebp+var_70]']
mov ['eax,', '[ecx+eax*4]']
sub ['eax,', '[esi+edx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ebp+var_60]']
sub ['eax,', '[edx+ecx*4]']
push ['eax']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_64]']
mov ['[ebp+ecx*4+var_58],', 'edx']
jmp ['loc_3312']
lea ['eax,', '[ebp+var_58]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_T1_Set_MM_Blend']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN18_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '7Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN17_0']
dd ['offset', '$LN16']
db ['7', 'dup(0CCh)']
endp
_T1_Set_Var_Design proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_24],', '6']
cmp ['[ebp+arg_4],', '4']
ja ['short', 'loc_353E']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_353E']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_3501']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_3527']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+edx*4]']
push ['ecx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+edx*4+var_18],', 'eax']
jmp ['short', 'loc_34F8']
lea ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_T1_Set_MM_Design']
add ['esp,', '0Ch']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '24h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_1']
dd ['offset', '$LN7_0']
db ['4', 'dup(0CCh)']
endp
_T1_Done_Blend	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+210h]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['loc_3821']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+18h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx+18h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_35D9']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_361E']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_3636']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+ecx*4+18h],', '0']
jmp ['short', 'loc_3615']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+eax+0D4h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+ecx+0D4h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_3636']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+ecx+90h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx+90h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_366F']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+edx+11Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+eax+11Ch],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_36A8']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_36F3']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_3730']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+0D4h],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+ecx*4+90h],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+eax*4+11Ch],', '0']
jmp ['short', 'loc_36EA']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+88h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+88h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_3730']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+8Ch],', '0']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_3776']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_37A9']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+ecx*4+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+edx*4+8],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_377E']
jmp ['short', 'loc_376D']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_37BB']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_37FA']
imul ['ecx,', '[ebp+var_14],', '0Ch']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx+58h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[ecx+4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_37D1']
mov ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax],', '0']
jmp ['short', 'loc_37B2']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+210h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+210h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_37FA']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_t1_allocate_blend proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+210h]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_38BA']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['1A4h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_38A1']
jmp ['$Exit$24']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+1A0h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+210h],', 'edx']
cmp ['[ebp+arg_4],', '0']
jbe ['loc_3A94']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['loc_3A85']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
push ['0']
push ['20h']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx+90h],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['loc_3998']
lea ['eax,', '[ebp+var_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
push ['0C4h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx+0D4h],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_3998']
lea ['eax,', '[ebp+var_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
push ['10h']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx+11Ch],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_3998']
lea ['eax,', '[ebp+var_10]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
shl ['ecx,', '1']
push ['ecx']
push ['0']
push ['4']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+88h],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_399D']
jmp ['$Exit$24']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+88h]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*4]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8Ch],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '84h']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+eax+90h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0A8h']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+edx+0D4h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1CCh']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+ecx+11Ch],', 'edx']
mov ['[ebp+var_18],', '2']
jmp ['short', 'loc_3A17']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+arg_4]']
ja ['short', 'loc_3A7B']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax*4+8Ch]']
add ['edx,', '20h']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+eax*4+90h],', 'edx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+edx*4+0D0h]']
add ['ecx,', '0C4h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+edx*4+0D4h],', 'ecx']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx*4+118h]']
add ['eax,', '10h']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx*4+11Ch],', 'eax']
jmp ['short', 'loc_3A0E']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
jmp ['short', 'loc_3A94']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_3A94']
jmp ['$Fail$25']
cmp ['[ebp+arg_8],', '0']
jbe ['short', 'loc_3ABC']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+4],', '0']
jz ['short', 'loc_3AB3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_8]']
jz ['short', 'loc_3AB3']
jmp ['$Fail$25']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+arg_8],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['$Exit$24']
cmp ['[ebp+arg_8],', '0']
jz ['$Exit$24']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+edx+18h],', '0']
jnz ['short', '$Exit$24']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
imul ['edx,', '[ebp+arg_8]']
push ['edx']
push ['0']
push ['4']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+edx+18h],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_3B28']
jmp ['short', '$Exit$24']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_3B3A']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', '$Exit$24']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_8]']
imul ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+edx+18h]']
lea ['eax,', '[edx+eax*4]']
mov ['ecx,', '[ebp+var_1C]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx*4+18h],', 'eax']
jmp ['short', 'loc_3B31']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_3B88']
push ['offset', '$SG8580']
push ['0B9h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_10],', 'eax']
jmp ['short', '$Exit$24']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN22']
dd ['offset', '$LN21_0']
db ['0Ah', 'dup(0CCh)']
endp
_mm_axis_unmap	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+eax]']
jg ['short', 'loc_3C09']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['eax,', '[eax+ecx]']
shl ['eax,', '10h']
jmp ['loc_3CB4']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_3C1B']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['[ebp+var_4],', 'eax']
jge ['short', 'loc_3CA1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[edx+eax*4]']
jg ['short', 'loc_3C9C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '[eax+ecx*4-4]']
shl ['esi,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edi,', '[ebp+var_4]']
mov ['ebx,', '[eax+ecx*4]']
sub ['ebx,', '[edx+edi*4-4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edi,', '[ebp+var_4]']
mov ['eax,', '[eax+ecx*4]']
sub ['eax,', '[edx+edi*4-4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[edx+eax*4-4]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
imul ['ebx,', 'eax']
add ['esi,', 'ebx']
mov ['eax,', 'esi']
jmp ['short', 'loc_3CB4']
jmp ['loc_3C12']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+eax*4-4]']
shl ['eax,', '10h']
pop ['edi']
pop ['esi']
pop ['ebx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_mm_weights_unmap proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
cmp ['[ebp+arg_8],', '4']
jbe ['short', 'loc_3CED']
push ['offset', '$SG8623']
push ['107h']
push ['offset', '$SG8624']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_3CD0']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_3D18']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '[esi+ecx]']
mov ['[edx+eax],', 'ecx']
jmp ['loc_404B']
cmp ['[ebp+arg_8],', '2']
jnz ['short', 'loc_3D76']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+eax]']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+ecx]']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+edx],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '4']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+eax]']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+ecx]']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+ecx],', 'eax']
jmp ['loc_404B']
cmp ['[ebp+arg_8],', '3']
jnz ['loc_3E55']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '4']
imul ['eax,', 'edx,', '5']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+eax]']
mov ['eax,', '4']
imul ['edx,', 'eax,', '3']
mov ['eax,', '[ebp+arg_0]']
add ['ecx,', '[eax+edx]']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
add ['ecx,', '[eax+edx]']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+eax],', 'ecx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '7']
mov ['edx,', '4']
imul ['eax,', 'edx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+eax]']
mov ['eax,', '4']
imul ['edx,', 'eax,', '3']
mov ['eax,', '[ebp+arg_0]']
add ['ecx,', '[eax+edx]']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
add ['ecx,', '[eax+edx]']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+edx],', 'ecx']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '7']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '6']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax+edx]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+ecx]']
mov ['ecx,', '4']
imul ['eax,', 'ecx,', '5']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+eax]']
mov ['eax,', '4']
shl ['eax,', '2']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+eax]']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+eax],', 'edx']
jmp ['loc_404B']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Fh']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Dh']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+edx]']
mov ['edx,', '4']
imul ['ecx,', 'edx,', '0Bh']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+ecx]']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '9']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+edx]']
mov ['edx,', '4']
imul ['ecx,', 'edx,', '7']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+ecx]']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '5']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+edx]']
mov ['edx,', '4']
imul ['ecx,', 'edx,', '3']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+ecx]']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+ecx]']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+edx],', 'eax']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Fh']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Eh']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+edx]']
mov ['edx,', '4']
imul ['ecx,', 'edx,', '0Bh']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+ecx]']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Ah']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+edx]']
mov ['edx,', '4']
imul ['ecx,', 'edx,', '7']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+ecx]']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '6']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+edx]']
mov ['edx,', '4']
imul ['ecx,', 'edx,', '3']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+ecx]']
mov ['ecx,', '4']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
add ['eax,', '[edx+ecx]']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+ecx],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Fh']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Eh']
mov ['edx,', '[ebp+arg_0]']
mov ['ecx,', '[edx+ecx]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+eax]']
mov ['eax,', '4']
imul ['edx,', 'eax,', '0Dh']
mov ['eax,', '[ebp+arg_0]']
add ['ecx,', '[eax+edx]']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+eax]']
mov ['eax,', '4']
imul ['edx,', 'eax,', '7']
mov ['eax,', '[ebp+arg_0]']
add ['ecx,', '[eax+edx]']
mov ['edx,', '4']
imul ['eax,', 'edx,', '6']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+eax]']
mov ['eax,', '4']
imul ['edx,', 'eax,', '5']
mov ['eax,', '[ebp+arg_0]']
add ['ecx,', '[eax+edx]']
mov ['edx,', '4']
shl ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
add ['ecx,', '[eax+edx]']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+edx],', 'ecx']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Fh']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Eh']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax+edx]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+ecx]']
mov ['ecx,', '4']
imul ['eax,', 'ecx,', '0Dh']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+eax]']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+ecx]']
mov ['ecx,', '4']
imul ['eax,', 'ecx,', '0Bh']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+eax]']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Ah']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+ecx]']
mov ['ecx,', '4']
imul ['eax,', 'ecx,', '9']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+eax]']
mov ['eax,', '4']
shl ['eax,', '3']
mov ['ecx,', '[ebp+arg_0]']
add ['edx,', '[ecx+eax]']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+ecx],', 'edx']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['7', 'dup(0CCh)']
endp
_parse_blend_axis_types	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '6Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_6C]']
mov ['ecx,', '1Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_54],', '0']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_48]']
push ['eax']
push ['4']
lea ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+3Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_48],', '0']
jge ['short', 'loc_40B8']
mov ['[ebp+var_54],', '0A2h']
jmp ['$Exit$18']
cmp ['[ebp+var_48],', '0']
jz ['short', 'loc_40C4']
cmp ['[ebp+var_48],', '4']
jle ['short', 'loc_40F4']
mov ['edx,', '[ebp+var_48]']
push ['edx']
push ['offset', '$SG8833']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8834']
push ['24Bh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_54],', 'eax']
jmp ['$Exit$18']
mov ['eax,', '[ebp+var_48]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_t1_allocate_blend']
add ['esp,', '0Ch']
mov ['[ebp+var_54],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_4114']
jmp ['$Exit$18']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+210h]']
mov ['[ebp+var_5C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_60],', 'edx']
mov ['[ebp+var_40],', '0']
jmp ['short', 'loc_413B']
mov ['eax,', '[ebp+var_40]']
add ['eax,', '1']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
cmp ['ecx,', '[ebp+var_48]']
jge ['$Exit$18']
imul ['edx,', '[ebp+var_40],', '0Ch']
lea ['eax,', '[ebp+edx+var_38]']
mov ['[ebp+var_64],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx]']
cmp ['edx,', '2Fh']
jnz ['short', 'loc_4175']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_64]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[eax+4]']
sub ['edx,', '[ecx]']
mov ['[ebp+var_6C],', 'edx']
jnz ['short', 'loc_41A1']
push ['offset', '$SG8845']
push ['266h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_54],', 'eax']
jmp ['short', '$Exit$18']
lea ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_6C]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_60]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_40]']
mov ['edx,', '[ebp+var_5C]']
mov ['[edx+ecx*4+8],', 'eax']
cmp ['[ebp+var_54],', '0']
jz ['short', 'loc_41CA']
jmp ['short', '$Exit$18']
mov ['eax,', '[ebp+var_40]']
mov ['ecx,', '[ebp+var_5C]']
mov ['edx,', '[ecx+eax*4+8]']
mov ['[ebp+var_68],', 'edx']
mov ['eax,', '[ebp+var_6C]']
push ['eax']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_68]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_68]']
add ['ecx,', '[ebp+var_6C]']
mov ['byte', 'ptr', '[ecx],', '0']
jmp ['loc_4132']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_54]']
mov ['[edx+0Ch],', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '6Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN16_0']
dd ['offset', '$LN13']
dd ['0FFFFFFB8h,', '4']
dd ['offset', '$LN14']
dd ['0FFFFFFACh,', '4']
dd ['offset', '$LN15']
db ['5', 'dup(0CCh)']
endp
_parse_blend_design_positions proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '144h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_144]']
mov ['ecx,', '51h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_E0],', 'eax']
mov ['[ebp+var_E4],', '0']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_D4]']
push ['ecx']
push ['10h']
lea ['edx,', '[ebp+var_C8]']
push ['edx']
mov ['eax,', '[ebp+var_E0]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[ecx+3Ch]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_D4],', '0']
jge ['short', 'loc_42FC']
mov ['[ebp+var_E4],', '0A2h']
jmp ['$Exit$24_0']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_430E']
cmp ['[ebp+var_D4],', '10h']
jle ['short', 'loc_4344']
mov ['eax,', '[ebp+var_D4]']
push ['eax']
push ['offset', '$SG8866']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8867']
push ['291h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_E4],', 'eax']
jmp ['$Exit$24_0']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_EC],', 'edx']
mov ['eax,', '[ebp+var_E0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_F0],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+210h]']
mov ['[ebp+var_E8],', 'eax']
mov ['[ebp+var_DC],', '0']
mov ['[ebp+var_F4],', '0']
jmp ['short', 'loc_4395']
mov ['ecx,', '[ebp+var_F4]']
add ['ecx,', '1']
mov ['[ebp+var_F4],', 'ecx']
mov ['edx,', '[ebp+var_F4]']
cmp ['edx,', '[ebp+var_D4]']
jge ['loc_458A']
imul ['eax,', '[ebp+var_F4],', '0Ch']
lea ['ecx,', '[ebp+eax+var_C8]']
mov ['[ebp+var_130],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[ebp+var_130]']
mov ['ecx,', '[eax]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[ebp+var_130]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_13C]']
push ['edx']
push ['4']
lea ['eax,', '[ebp+var_128]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
push ['ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[edx+3Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_F4],', '0']
jnz ['loc_44AB']
cmp ['[ebp+var_13C],', '0']
jle ['short', 'loc_442A']
cmp ['[ebp+var_13C],', '4']
jle ['short', 'loc_4460']
mov ['ecx,', '[ebp+var_13C]']
push ['ecx']
push ['offset', '$SG8881']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8882']
push ['2B2h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_E4],', 'eax']
jmp ['$Exit$24_0']
mov ['edx,', '[ebp+var_13C]']
mov ['[ebp+var_DC],', 'edx']
mov ['eax,', '[ebp+var_DC]']
push ['eax']
mov ['ecx,', '[ebp+var_D4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_t1_allocate_blend']
add ['esp,', '0Ch']
mov ['[ebp+var_E4],', 'eax']
cmp ['[ebp+var_E4],', '0']
jz ['short', 'loc_449A']
jmp ['$Exit$24_0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+210h]']
mov ['[ebp+var_E8],', 'ecx']
jmp ['short', 'loc_44E8']
mov ['edx,', '[ebp+var_13C]']
cmp ['edx,', '[ebp+var_DC]']
jz ['short', 'loc_44E8']
push ['offset', '$SG8886']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8887']
push ['2BFh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_E4],', 'eax']
jmp ['$Exit$24_0']
mov ['[ebp+var_134],', '0']
jmp ['short', 'loc_4503']
mov ['eax,', '[ebp+var_134]']
add ['eax,', '1']
mov ['[ebp+var_134],', 'eax']
mov ['ecx,', '[ebp+var_134]']
cmp ['ecx,', '[ebp+var_13C]']
jge ['short', 'loc_4585']
imul ['edx,', '[ebp+var_134],', '0Ch']
lea ['eax,', '[ebp+edx+var_128]']
mov ['[ebp+var_144],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[ebp+var_144]']
mov ['eax,', '[edx]']
mov ['[ecx],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[ebp+var_144]']
mov ['eax,', '[edx+4]']
mov ['[ecx+8],', 'eax']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_E0]']
push ['ecx']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[edx+28h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_F4]']
mov ['edx,', '[ebp+var_E8]']
mov ['ecx,', '[edx+ecx*4+18h]']
mov ['edx,', '[ebp+var_134]']
mov ['[ecx+edx*4],', 'eax']
jmp ['loc_44F4']
jmp ['loc_4386']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_EC]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_F0]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_E4]']
mov ['[ecx+0Ch],', 'edx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN23_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '144h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN22_0']
dd ['offset', '$LN18_1']
dd ['0FFFFFF2Ch,', '4']
dd ['offset', '$LN19_0']
dd ['0FFFFFED8h,', '30h']
dd ['offset', '$LN20_0']
dd ['0FFFFFEC4h,', '4']
dd ['offset', '$LN21_1']
db ['0Bh', 'dup(0CCh)']
endp
_parse_blend_design_map	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '180h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_180]']
mov ['ecx,', '60h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_6C],', 'edx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_5C]']
push ['eax']
push ['4']
lea ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+3Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_5C],', '0']
jge ['short', 'loc_46BD']
mov ['[ebp+var_C],', '0A2h']
jmp ['$Exit$23']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_46C9']
cmp ['[ebp+var_5C],', '4']
jle ['short', 'loc_46F9']
mov ['edx,', '[ebp+var_5C]']
push ['edx']
push ['offset', '$SG8911']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8912']
push ['2F1h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$23']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_64],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_68],', 'eax']
mov ['ecx,', '[ebp+var_5C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_t1_allocate_blend']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_472A']
jmp ['$Exit$23']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+210h]']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_54],', '0']
jmp ['short', 'loc_4748']
mov ['edx,', '[ebp+var_54]']
add ['edx,', '1']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_54]']
cmp ['eax,', '[ebp+var_5C]']
jge ['loc_48F6']
imul ['ecx,', '[ebp+var_54],', '0Ch']
mov ['edx,', '[ebp+var_18]']
lea ['eax,', '[edx+ecx+58h]']
mov ['[ebp+var_70],', 'eax']
imul ['ecx,', '[ebp+var_54],', '0Ch']
lea ['edx,', '[ebp+ecx+var_4C]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_74]']
mov ['edx,', '[ecx+4]']
mov ['[eax+8],', 'edx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_178]']
push ['eax']
push ['14h']
lea ['ecx,', '[ebp+var_168]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+3Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_178],', '0']
jle ['short', 'loc_47BD']
cmp ['[ebp+var_178],', '14h']
jle ['short', 'loc_47E9']
push ['offset', '$SG8924']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8925']
push ['310h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$23']
lea ['edx,', '[ebp+var_C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_178]']
shl ['eax,', '1']
push ['eax']
push ['0']
push ['4']
mov ['ecx,', '[ebp+var_6C]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+var_70]']
mov ['[edx+4],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_4819']
jmp ['$Exit$23']
mov ['eax,', '[ebp+var_70]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_178]']
lea ['eax,', '[ecx+edx*4]']
mov ['ecx,', '[ebp+var_70]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_70]']
mov ['al,', 'byte', 'ptr', '[ebp+var_178]']
mov ['[edx],', 'al']
mov ['[ebp+var_170],', '0']
jmp ['short', 'loc_4854']
mov ['ecx,', '[ebp+var_170]']
add ['ecx,', '1']
mov ['[ebp+var_170],', 'ecx']
mov ['edx,', '[ebp+var_170]']
cmp ['edx,', '[ebp+var_178]']
jge ['loc_48F1']
imul ['eax,', '[ebp+var_170],', '0Ch']
lea ['ecx,', '[ebp+eax+var_168]']
mov ['[ebp+var_180],', 'ecx']
mov ['edx,', '[ebp+var_180]']
mov ['eax,', '[edx]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_180]']
mov ['eax,', '[edx+4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_70]']
mov ['ecx,', '[edx+4]']
mov ['edx,', '[ebp+var_170]']
mov ['[ecx+edx*4],', 'eax']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+28h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_70]']
mov ['edx,', '[ecx+8]']
mov ['ecx,', '[ebp+var_170]']
mov ['[edx+ecx*4],', 'eax']
jmp ['loc_4845']
jmp ['loc_473F']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+var_64]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_68]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+0Ch],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN22_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '180h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN21_2']
dd ['offset', '$LN16_1']
dd ['0FFFFFFB4h,', '30h']
dd ['offset', '$LN17_2']
dd ['0FFFFFFA4h,', '4']
dd ['offset', '$LN18_2']
dd ['0FFFFFE98h,', '0F0h']
dd ['offset', '$LN19_1']
dd ['0FFFFFE88h,', '4']
dd ['offset', '$LN20_1']
db ['5', 'dup(0CCh)']
endp
_parse_weight_vector proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0F8h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_F8]']
mov ['ecx,', '3Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_DC],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_E0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+210h]']
mov ['[ebp+var_E4],', 'edx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_D4]']
push ['eax']
push ['10h']
lea ['ecx,', '[ebp+var_C8]']
push ['ecx']
mov ['edx,', '[ebp+var_E0]']
push ['edx']
mov ['eax,', '[ebp+var_E0]']
mov ['ecx,', '[eax+3Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_D4],', '0']
jge ['short', 'loc_4A4B']
mov ['[ebp+var_DC],', '0A2h']
jmp ['$Exit$18_0']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_4A5D']
cmp ['[ebp+var_D4],', '10h']
jle ['short', 'loc_4A93']
mov ['edx,', '[ebp+var_D4]']
push ['edx']
push ['offset', '$SG8953']
call ['_FT_Message']
add ['esp,', '8']
push ['offset', '$SG8954']
push ['34Dh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_DC],', 'eax']
jmp ['$Exit$18_0']
cmp ['[ebp+var_E4],', '0']
jz ['short', 'loc_4AA7']
mov ['eax,', '[ebp+var_E4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_4AE1']
push ['0']
mov ['ecx,', '[ebp+var_D4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_t1_allocate_blend']
add ['esp,', '0Ch']
mov ['[ebp+var_DC],', 'eax']
cmp ['[ebp+var_DC],', '0']
jz ['short', 'loc_4AD0']
jmp ['$Exit$18_0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+210h]']
mov ['[ebp+var_E4],', 'ecx']
jmp ['short', 'loc_4B20']
mov ['edx,', '[ebp+var_E4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_D4]']
jz ['short', 'loc_4B20']
push ['offset', '$SG8961']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG8962']
push ['35Eh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_DC],', 'eax']
jmp ['$Exit$18_0']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_F0],', 'edx']
mov ['eax,', '[ebp+var_E0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_F4],', 'ecx']
mov ['[ebp+var_EC],', '0']
jmp ['short', 'loc_4B58']
mov ['edx,', '[ebp+var_EC]']
add ['edx,', '1']
mov ['[ebp+var_EC],', 'edx']
mov ['eax,', '[ebp+var_EC]']
cmp ['eax,', '[ebp+var_D4]']
jge ['loc_4C01']
imul ['ecx,', '[ebp+var_EC],', '0Ch']
lea ['edx,', '[ebp+ecx+var_C8]']
mov ['[ebp+var_E8],', 'edx']
mov ['eax,', '[ebp+var_E0]']
mov ['ecx,', '[ebp+var_E8]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_E0]']
mov ['ecx,', '[ebp+var_E8]']
mov ['edx,', '[ecx+4]']
mov ['[eax+8],', 'edx']
mov ['esi,', 'esp']
push ['0']
mov ['eax,', '[ebp+var_E0]']
push ['eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[ecx+28h]']
call ['edx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_F8],', 'eax']
mov ['eax,', '[ebp+var_E4]']
mov ['ecx,', '[eax+88h]']
mov ['edx,', '[ebp+var_EC]']
mov ['eax,', '[ebp+var_F8]']
mov ['[ecx+edx*4],', 'eax']
mov ['ecx,', '[ebp+var_E4]']
mov ['edx,', '[ecx+8Ch]']
mov ['eax,', '[ebp+var_EC]']
mov ['ecx,', '[ebp+var_F8]']
mov ['[edx+eax*4],', 'ecx']
jmp ['loc_4B49']
mov ['edx,', '[ebp+var_E0]']
mov ['eax,', '[ebp+var_F0]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
mov ['edx,', '[ebp+var_F4]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_E0]']
mov ['ecx,', '[ebp+var_DC]']
mov ['[eax+0Ch],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN17_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0F8h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN16_2']
dd ['offset', '$LN14_0']
dd ['0FFFFFF2Ch,', '4']
dd ['offset', '$LN15_0']
db ['6', 'dup(0CCh)']
endp
_parse_buildchar proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
push ['0']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+34h]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+21Ch],', 'eax']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_t1_load_keyword proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+210h]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_4D21']
mov ['edx,', '[ebp+var_1C]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_4D21']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+8],', '0Bh']
jnz ['short', 'loc_4D54']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_4],', 'eax']
jmp ['$Exit$31']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
sub ['eax,', '2']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '6']
ja ['loc_4E81']
mov ['ecx,', '[ebp+var_20]']
jmp ['ds:$LN30[ecx*4]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '84h']
mov ['[ebp+var_C],', 'edx']
lea ['eax,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_18],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_4DAD']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '90h']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
jmp ['loc_4E9A']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0A4h']
mov ['[ebp+var_C],', 'ecx']
lea ['edx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_18],', '0']
jmp ['loc_4E9A']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '0A8h']
mov ['[ebp+var_C],', 'eax']
lea ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_18],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_4E02']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '0D4h']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_18],', 'ecx']
jmp ['loc_4E9A']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1CCh']
mov ['[ebp+var_C],', 'edx']
lea ['eax,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_18],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_4E3A']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '11Ch']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
mov ['eax,', '[edx]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_4E9A']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
lea ['edx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'edx']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_4E9A']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_C],', 'eax']
lea ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_4E9A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+210h]']
mov ['[ebp+var_C],', 'eax']
lea ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_4E9A']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '84h']
mov ['[ebp+var_C],', 'edx']
lea ['eax,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_4F0A']
mov ['edx,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[edx+8],', '9']
jz ['short', 'loc_4EB4']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+8],', '0Ah']
jnz ['short', 'loc_4EDF']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+44h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_4F08']
mov ['esi,', 'esp']
push ['0']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+40h]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Exit$31']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '25h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '1']
jl ['short', 'loc_4F2E']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['offset', '$SG9018']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_4F0A']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN29']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN28_0']
dd ['offset', '$LN27_0']
align ['10h']
dd ['offset', '$LN20_2']
dd ['offset', '$LN17_4']
dd ['offset', '$LN15_1']
dd ['offset', '$LN13_0']
dd ['offset', '$LN12']
dd ['offset', '$LN11_0']
endp
_parse_private	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+174h]']
or ['edx,', '1']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax+174h],', 'edx']
pop ['ebp']
retn
endp
_read_binary_data proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jnb ['loc_50A5']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
sub ['eax,', '30h']
cmp ['eax,', '0Ah']
jnb ['loc_50A5']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax],', 'edx']
cmp ['[ebp+var_C],', '0']
jl ['short', 'loc_50A5']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '[ecx]']
cmp ['[ebp+var_C],', 'edx']
jge ['short', 'loc_50A5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_C]']
lea ['eax,', '[edx+ecx+1]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jnz ['short', 'loc_5099']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_50A0']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_50D9']
movzx ['edx,', '[ebp+arg_C]']
test ['edx,', 'edx']
jnz ['short', 'loc_50D7']
push ['offset', '$SG9042']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9043']
push ['43Bh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['4', 'dup(0CCh)']
endp
_t1_parse_font_matrix proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1B4h']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1C4h']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_14],', 'eax']
mov ['esi,', 'esp']
push ['3']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
push ['6']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+34h]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C],', 'eax']
cmp ['[ebp+var_3C],', '6']
jge ['short', 'loc_517C']
push ['offset', '$SG9059']
push ['456h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'eax']
jmp ['loc_5361']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
cmp ['[ebp+ecx+var_30],', '0']
jge ['short', 'loc_519E']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+eax+var_30]']
neg ['ecx']
mov ['[ebp+var_40],', 'ecx']
jmp ['short', 'loc_51AD']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+eax+var_30]']
mov ['[ebp+var_40],', 'ecx']
mov ['edx,', '[ebp+var_40]']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_51E8']
push ['offset', '$SG9061']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9062']
push ['45Fh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
jmp ['loc_5361']
mov ['edx,', '[ebp+var_38]']
push ['edx']
push ['3E8h']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+44h],', 'ax']
cmp ['[ebp+var_38],', '10000h']
jz ['loc_52F2']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+ecx+var_30]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['[ebp+edx+var_30],', 'eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+ecx+var_30]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['[ebp+ecx+var_30],', 'eax']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+eax+var_30]']
push ['ecx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['[ebp+edx+var_30],', 'eax']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '[ebp+ecx+var_30]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['[ebp+ecx+var_30],', 'eax']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+ecx+var_30]']
push ['edx']
call ['_FT_DivFix']
add ['esp,', '8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '5']
mov ['[ebp+edx+var_30],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
cmp ['[ebp+ecx+var_30],', '0']
jge ['short', 'loc_52DC']
mov ['[ebp+var_44],', '0FFFF0000h']
jmp ['short', 'loc_52E3']
mov ['[ebp+var_44],', '10000h']
mov ['edx,', '4']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+eax+var_30],', 'ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+eax+var_30]']
mov ['[ecx],', 'edx']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+eax+var_30]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+eax+var_30]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+ecx+var_30]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '4']
shl ['ecx,', '2']
mov ['edx,', '[ebp+ecx+var_30]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_10]']
mov ['[eax],', 'edx']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+edx+var_30]']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+4],', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN12_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN11_1']
dd ['offset', '$LN10_0']
db ['7', 'dup(0CCh)']
endp
_parse_encoding	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_40]']
mov ['ecx,', '10h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1E8h]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jb ['short', 'loc_5435']
push ['offset', '$SG9077']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG9078']
push ['48Fh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+0Ch],', 'eax']
jmp ['loc_5AB1']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '30h']
cmp ['ecx,', '0Ah']
jb ['short', 'loc_5452']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '5Bh']
jnz ['loc_59F3']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '174h']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '64h']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_31],', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '5Bh']
jnz ['short', 'loc_5499']
mov ['[ebp+var_18],', '100h']
mov ['[ebp+var_31],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax],', 'edx']
jmp ['short', 'loc_54B4']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_C]']
jb ['short', 'loc_54DB']
jmp ['loc_5AB1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_18]']
mov ['[edx+60h],', 'eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_18]']
push ['edx']
push ['0']
push ['2']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_14]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_5562']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_18]']
push ['eax']
push ['0']
push ['4']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+var_14]']
mov ['[edx+10h],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_5562']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_5570']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_2C]']
mov ['[eax+0Ch],', 'ecx']
jmp ['loc_5AB1']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_5582']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cmp ['eax,', '[ebp+var_18]']
jge ['short', 'loc_55B5']
mov ['[ebp+var_38],', 'offset', '$SG9104']
mov ['esi,', 'esp']
push ['8']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['short', 'loc_5579']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['loc_59D9']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '64h']
jnz ['loc_57CA']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '3']
cmp ['eax,', '[ebp+var_C]']
jnb ['loc_57CA']
mov ['ecx,', '1']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '65h']
jnz ['loc_57CA']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '66h']
jnz ['loc_57CA']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['loc_579A']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Dh']
jz ['loc_579A']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['loc_579A']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '9']
jz ['loc_579A']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ch']
jz ['loc_579A']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['loc_579A']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '2Fh']
jz ['loc_579A']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '28h']
jz ['loc_579A']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '29h']
jz ['loc_579A']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '3Ch']
jz ['short', 'loc_579A']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '3Eh']
jz ['short', 'loc_579A']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '5Bh']
jz ['short', 'loc_579A']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '5Dh']
jz ['short', 'loc_579A']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '7Bh']
jz ['short', 'loc_579A']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '7Dh']
jz ['short', 'loc_579A']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '25h']
jnz ['short', 'loc_57CA']
mov ['edx,', '4']
imul ['eax,', 'edx,', '25h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '6']
jl ['short', 'loc_57B8']
push ['offset', '$SG9117']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_579A']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '3']
mov ['[ebp+var_8],', 'edx']
jmp ['loc_59D9']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '5Dh']
jnz ['short', 'loc_5805']
mov ['edx,', '4']
imul ['eax,', 'edx,', '25h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '6']
jl ['short', 'loc_57F3']
push ['offset', '$SG9123']
call ['_FT_Message']
add ['esp,', '4']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_57D5']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
jmp ['loc_59D9']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
sub ['ecx,', '30h']
cmp ['ecx,', '0Ah']
jb ['short', 'loc_581F']
movzx ['edx,', '[ebp+var_31]']
test ['edx,', 'edx']
jz ['loc_5996']
movzx ['eax,', '[ebp+var_31]']
test ['eax,', 'eax']
jz ['short', 'loc_582F']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_3C],', 'ecx']
jmp ['short', 'loc_588E']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_3C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx]']
jnz ['short', 'loc_588E']
push ['offset', '$SG9132']
push ['4FFh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
jmp ['loc_5AB1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '2']
cmp ['ecx,', '[ebp+var_C]']
jnb ['loc_596A']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Fh']
jnz ['loc_596A']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_18]']
jge ['loc_596A']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_C]']
jb ['short', 'loc_58F8']
jmp ['loc_5AB1']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_5906']
jmp ['loc_5AB1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_594C']
jmp ['loc_5AB1']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ecx+edx*4]']
mov ['ecx,', '[ebp+var_40]']
mov ['byte', 'ptr', '[eax+ecx],', '0']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
jmp ['short', 'loc_5994']
movzx ['eax,', '[ebp+var_31]']
test ['eax,', 'eax']
jz ['short', 'loc_5994']
push ['offset', '$SG9140']
push ['528h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
jmp ['loc_5AB1']
jmp ['short', 'loc_59BC']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_59BC']
jmp ['loc_5AB1']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_55D4']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+170h],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx],', 'edx']
jmp ['loc_5AB1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '11h']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_5A31']
mov ['esi,', 'esp']
push ['10h']
push ['offset', '$SG9146']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_5A31']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+170h],', '2']
jmp ['loc_5AB1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '0Fh']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_5A6C']
mov ['esi,', 'esp']
push ['0Eh']
push ['offset', '$SG9150']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_5A6C']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+170h],', '4']
jmp ['short', 'loc_5AB1']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '12h']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_5AA7']
mov ['esi,', 'esp']
push ['11h']
push ['offset', '$SG9154']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_5AA7']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+170h],', '3']
jmp ['short', 'loc_5AB1']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0A2h']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN51']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '40h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN50']
dd ['offset', '$LN49_0']
db ['0Eh', 'dup(0CCh)']
endp
_parse_subrs	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_44]']
mov ['ecx,', '11h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '13Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1E8h]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+8]']
jnb ['short', 'loc_5BD8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Bh']
jnz ['short', 'loc_5BD8']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+8]']
jnb ['short', 'loc_5BB6']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '5Dh']
jz ['short', 'loc_5BD3']
push ['offset', '$SG9172']
push ['567h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
jmp ['loc_5F0B']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+24h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_5C19']
jmp ['loc_5F0B']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+138h],', '0']
jnz ['short', 'loc_5C6C']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
call ['eax']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5C6C']
jmp ['$Fail$34']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['eax,', '[ebp+var_4]']
cmp ['edx,', '[eax+8]']
jnb ['short', 'loc_5C9F']
mov ['esi,', 'esp']
push ['3']
push ['offset', '$SG9187']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jz ['short', 'loc_5CA4']
jmp ['loc_5EE8']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+80h]']
cmp ['dword', 'ptr', '[ecx+30h],', '0']
jz ['short', 'loc_5CEC']
mov ['[ebp+var_41],', '1']
jmp ['short', 'loc_5CF0']
mov ['[ebp+var_41],', '0']
movzx ['edx,', '[ebp+var_41]']
push ['edx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_read_binary_data']
add ['esp,', '10h']
test ['eax,', 'eax']
jnz ['short', 'loc_5D12']
jmp ['loc_5F0B']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_5D38']
jmp ['loc_5F0B']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['eax,', '[ebp+var_4]']
cmp ['edx,', '[eax+8]']
jnb ['short', 'loc_5DB3']
mov ['esi,', 'esp']
push ['3']
push ['offset', '$SG9193']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_5DB3']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+138h],', '0']
jz ['short', 'loc_5DC4']
jmp ['loc_5C6C']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+0ACh],', '0']
jl ['loc_5EB4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[edx+0ACh]']
jge ['short', 'loc_5E01']
push ['offset', '$SG9198']
push ['5B6h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_14],', 'eax']
jmp ['$Fail$34']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5E23']
jmp ['$Fail$34']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['10EAh']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[eax+10h]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[edx+0ACh]']
mov ['[ebp+var_2C],', 'eax']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_40]']
add ['eax,', '[edx+0ACh]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_40]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_40],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_5E97']
jmp ['short', 'loc_5EDB']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5EE3']
jmp ['short', '$Fail$34']
jmp ['loc_5C6C']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+138h],', '0']
jnz ['short', 'loc_5F00']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+138h],', 'ecx']
jmp ['short', 'loc_5F0B']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+0Ch],', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN33']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '44h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN32']
dd ['offset', '$LN29_0']
dd ['0FFFFFFD4h,', '4']
dd ['offset', '$LN30_0']
dd ['0FFFFFFC8h,', '4']
dd ['offset', '$LN31']
db ['4', 'dup(0CCh)']
endp
_parse_charstrings proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '78h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_78]']
mov ['ecx,', '1Eh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '0D0h']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '9Ch']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '104h']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1E8h]']
mov ['[ebp+var_28],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_3C],', '0']
mov ['[ebp+var_3D],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+24h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0']
jge ['short', 'loc_601F']
push ['offset', '$SG9232']
push ['5EEh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_20],', 'eax']
jmp ['$Fail$61']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_602E']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_6033']
jmp ['loc_6A09']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+98h],', '0']
jnz ['loc_60D4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '6']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6075']
jmp ['$Fail$61']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '6']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_60A7']
jmp ['$Fail$61']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_18]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_60D4']
jmp ['$Fail$61']
mov ['[ebp+var_34],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
cmp ['ecx,', '[ebp+var_30]']
jb ['short', 'loc_6108']
jmp ['loc_65A6']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '3']
cmp ['edx,', '[ebp+var_30]']
jnb ['loc_6304']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '20h']
jz ['loc_627E']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Dh']
jz ['loc_627E']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ah']
jz ['loc_627E']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '9']
jz ['loc_627E']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '0Ch']
jz ['loc_627E']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
test ['edx,', 'edx']
jz ['loc_627E']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '2Fh']
jz ['loc_627E']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '28h']
jz ['loc_627E']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '29h']
jz ['loc_627E']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '3Ch']
jz ['short', 'loc_627E']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '3Eh']
jz ['short', 'loc_627E']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '5Bh']
jz ['short', 'loc_627E']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '5Dh']
jz ['short', 'loc_627E']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '7Bh']
jz ['short', 'loc_627E']
mov ['edx,', '1']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '7Dh']
jz ['short', 'loc_627E']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_2C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '25h']
jnz ['loc_6304']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '64h']
jnz ['short', 'loc_62C4']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '65h']
jnz ['short', 'loc_62C4']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '66h']
jnz ['short', 'loc_62C4']
cmp ['[ebp+var_34],', '0']
jz ['short', 'loc_62C4']
jmp ['loc_65A6']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '65h']
jnz ['short', 'loc_6304']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '6Eh']
jnz ['short', 'loc_6304']
mov ['eax,', '1']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_2C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '64h']
jnz ['short', 'loc_6304']
jmp ['loc_65A6']
mov ['eax,', '[ebp+var_8]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+20h]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_30]']
jb ['short', 'loc_6345']
push ['offset', '$SG9253']
push ['641h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_20],', 'eax']
jmp ['$Fail$61']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_6353']
jmp ['loc_6A09']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Fh']
jnz ['loc_65A1']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '2']
cmp ['edx,', '[ebp+var_30]']
jb ['short', 'loc_638C']
push ['offset', '$SG9258']
push ['64Eh']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_20],', 'eax']
jmp ['$Fail$61']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+80h]']
cmp ['dword', 'ptr', '[ecx+30h],', '0']
jz ['short', 'loc_63B5']
mov ['[ebp+var_75],', '1']
jmp ['short', 'loc_63B9']
mov ['[ebp+var_75],', '0']
movzx ['edx,', '[ebp+var_75]']
push ['edx']
lea ['eax,', '[ebp+var_54]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_read_binary_data']
add ['esp,', '10h']
test ['eax,', 'eax']
jnz ['short', 'loc_63DB']
jmp ['loc_6A09']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+98h],', '0']
jz ['short', 'loc_63EC']
jmp ['loc_60DB']
mov ['ecx,', '[ebp+var_5C]']
add ['ecx,', '1']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6421']
jmp ['$Fail$61']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[edx+eax*4]']
mov ['edx,', '[ebp+var_5C]']
mov ['byte', 'ptr', '[ecx+edx],', '0']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Eh']
jnz ['short', 'loc_6467']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
push ['offset', '$SG9265']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_6467']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_3C],', 'eax']
mov ['[ebp+var_3D],', '1']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+0ACh],', '0']
jl ['loc_6566']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '5']
cmp ['[ebp+var_34],', 'edx']
jge ['loc_6566']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_48]']
cmp ['ecx,', '[eax+0ACh]']
jg ['short', 'loc_64B3']
push ['offset', '$SG9269']
push ['676h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
mov ['[ebp+var_20],', 'eax']
jmp ['$Fail$61']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_64D5']
jmp ['$Fail$61']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+var_60]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['esi,', 'esp']
push ['10EAh']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+10h]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_48]']
sub ['ecx,', '[eax+0ACh]']
mov ['[ebp+var_48],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_60]']
add ['ecx,', '[eax+0ACh]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_60]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+var_60],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_6549']
jmp ['short', 'loc_658D']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6598']
jmp ['$Fail$61']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '1']
mov ['[ebp+var_34],', 'eax']
jmp ['loc_60DB']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_34]']
mov ['[ecx+98h],', 'edx']
movzx ['eax,', '[ebp+var_3D]']
test ['eax,', 'eax']
jz ['loc_6838']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ecx+edx]']
push ['edx']
push ['offset', '$SG9280']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['loc_6838']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+1Ch]']
mov ['esi,', 'esp']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx+eax]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6631']
jmp ['$Fail$61']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+1Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+edx]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_667D']
jmp ['$Fail$61']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+1Ch]']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+18h]']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[ecx+edx*4]']
push ['eax']
push ['2']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_66BF']
jmp ['$Fail$61']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+1Ch]']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[eax+ecx*4]']
push ['edx']
push ['3']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6701']
jmp ['$Fail$61']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+1Ch]']
mov ['esi,', 'esp']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx+eax]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_674F']
jmp ['$Fail$61']
mov ['edx,', '4']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+edx]']
push ['edx']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx+eax]']
push ['eax']
mov ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_679D']
jmp ['$Fail$61']
mov ['edx,', '4']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+edx]']
push ['edx']
mov ['eax,', '4']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx+eax]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_67E7']
jmp ['$Fail$61']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+edx]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6833']
jmp ['$Fail$61']
jmp ['loc_69FE']
movzx ['edx,', '[ebp+var_3D]']
test ['edx,', 'edx']
jnz ['loc_69FE']
mov ['[ebp+var_6C],', '8Bh']
mov ['[ebp+var_6B],', '0F7h']
mov ['[ebp+var_6A],', '0E1h']
mov ['[ebp+var_69],', '0Dh']
mov ['[ebp+var_68],', '0Eh']
mov ['[ebp+var_74],', 'offset', '$SG9294']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+1Ch]']
mov ['esi,', 'esp']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx+eax]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_68AB']
jmp ['$Fail$61']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+1Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+edx]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
push ['1']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+2Ch]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_68F7']
jmp ['$Fail$61']
mov ['esi,', 'esp']
push ['8']
mov ['edx,', '[ebp+var_74]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6925']
jmp ['$Fail$61']
mov ['esi,', 'esp']
push ['5']
lea ['eax,', '[ebp+var_6C]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_6953']
jmp ['$Fail$61']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+1Ch]']
mov ['esi,', 'esp']
mov ['edx,', '[ecx+edx]']
push ['edx']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_699E']
jmp ['short', '$Fail$61']
mov ['eax,', '4']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+1Ch]']
mov ['esi,', 'esp']
mov ['eax,', '[edx+eax]']
push ['eax']
mov ['ecx,', '4']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+ecx]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+2Ch]']
call ['edx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_20],', 'eax']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_69E9']
jmp ['short', '$Fail$61']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+98h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx+98h],', 'ecx']
jmp ['short', 'loc_6A09']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+0Ch],', 'ecx']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN60']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '78h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN59']
dd ['offset', '$LN55']
dd ['0FFFFFFB8h,', '4']
dd ['offset', '$LN56']
dd ['0FFFFFFACh,', '4']
dd ['offset', '$LN57']
dd ['0FFFFFF94h,', '5']
dd ['offset', '$LN58']
align ['4']
endp
_parse_dict	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '5Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_5C]']
mov ['ecx,', '17h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_D],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_8]']
jnb ['$Exit$61']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
movsx ['ecx,', '$SG9582[edx]']
cmp ['eax,', 'ecx']
jnz ['loc_6CDB']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '6']
cmp ['edx,', '[ebp+var_8]']
jz ['loc_6CB0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '6']
cmp ['eax,', '[ebp+var_8]']
jnb ['loc_6CDB']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['loc_6CB0']
mov ['edx,', '1']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Dh']
jz ['loc_6CB0']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['loc_6CB0']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '9']
jz ['loc_6CB0']
mov ['edx,', '1']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ch']
jz ['loc_6CB0']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['loc_6CB0']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '2Fh']
jz ['loc_6CB0']
mov ['edx,', '1']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '28h']
jz ['loc_6CB0']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '29h']
jz ['loc_6CB0']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '3Ch']
jz ['short', 'loc_6CB0']
mov ['edx,', '1']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '3Eh']
jz ['short', 'loc_6CB0']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '5Bh']
jz ['short', 'loc_6CB0']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '5Dh']
jz ['short', 'loc_6CB0']
mov ['edx,', '1']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '7Bh']
jz ['short', 'loc_6CB0']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '5']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '7Dh']
jz ['short', 'loc_6CB0']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '25h']
jnz ['short', 'loc_6CDB']
mov ['esi,', 'esp']
push ['5']
push ['offset', '$SG9586']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6CDB']
jmp ['$Exit$61']
jmp ['loc_7406']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
movsx ['ecx,', '$SG9591[edx]']
cmp ['eax,', 'ecx']
jnz ['loc_6EAD']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '0Ah']
cmp ['edx,', '[ebp+var_8]']
jz ['loc_6E82']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0Ah']
cmp ['eax,', '[ebp+var_8]']
jnb ['loc_6EAD']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['loc_6E82']
mov ['edx,', '1']
imul ['eax,', 'edx,', '9']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Dh']
jz ['loc_6E82']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '9']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['loc_6E82']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '9']
jz ['loc_6E82']
mov ['edx,', '1']
imul ['eax,', 'edx,', '9']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ch']
jz ['loc_6E82']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '9']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['loc_6E82']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '2Fh']
jz ['loc_6E82']
mov ['edx,', '1']
imul ['eax,', 'edx,', '9']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '28h']
jz ['loc_6E82']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '9']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '29h']
jz ['loc_6E82']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '3Ch']
jz ['short', 'loc_6E82']
mov ['edx,', '1']
imul ['eax,', 'edx,', '9']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '3Eh']
jz ['short', 'loc_6E82']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '9']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '5Bh']
jz ['short', 'loc_6E82']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '5Dh']
jz ['short', 'loc_6E82']
mov ['edx,', '1']
imul ['eax,', 'edx,', '9']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '7Bh']
jz ['short', 'loc_6E82']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '9']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '7Dh']
jz ['short', 'loc_6E82']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '9']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '25h']
jnz ['short', 'loc_6EAD']
mov ['esi,', 'esp']
push ['9']
push ['offset', '$SG9595']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_6EAD']
jmp ['$Exit$61']
jmp ['loc_7406']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_14]']
movsx ['eax,', 'byte', 'ptr', '[edx+ecx]']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
movsx ['ecx,', '$SG9600[edx]']
cmp ['eax,', 'ecx']
jnz ['loc_70AA']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '0Eh']
cmp ['edx,', '[ebp+var_8]']
jz ['loc_7054']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '0Eh']
cmp ['eax,', '[ebp+var_8]']
jnb ['loc_70AA']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Dh']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '20h']
jz ['loc_7054']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Dh']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Dh']
jz ['loc_7054']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Dh']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '0Ah']
jz ['loc_7054']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Dh']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '9']
jz ['loc_7054']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Dh']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '0Ch']
jz ['loc_7054']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Dh']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
test ['eax,', 'eax']
jz ['loc_7054']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Dh']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '2Fh']
jz ['loc_7054']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Dh']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '28h']
jz ['loc_7054']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Dh']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '29h']
jz ['loc_7054']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Dh']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '3Ch']
jz ['short', 'loc_7054']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Dh']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '3Eh']
jz ['short', 'loc_7054']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Dh']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '5Bh']
jz ['short', 'loc_7054']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Dh']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '5Dh']
jz ['short', 'loc_7054']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0Dh']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '7Bh']
jz ['short', 'loc_7054']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0Dh']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
cmp ['eax,', '7Dh']
jz ['short', 'loc_7054']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0Dh']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
cmp ['ecx,', '25h']
jnz ['short', 'loc_70AA']
mov ['esi,', 'esp']
push ['0Dh']
push ['offset', '$SG9604']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_70AA']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+174h]']
and ['ecx,', '1']
jz ['short', 'loc_7098']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+174h]']
or ['eax,', '2']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx+174h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
add ['eax,', '0Dh']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
jmp ['loc_7406']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
sub ['eax,', '30h']
cmp ['eax,', '0Ah']
jnb ['short', 'loc_70ED']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_70E4']
jmp ['$Exit$61']
mov ['[ebp+var_D],', '1']
jmp ['loc_7406']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '52h']
jnz ['loc_717E']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '6']
cmp ['edx,', '[ebp+var_8]']
jnb ['short', 'loc_717E']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '44h']
jnz ['short', 'loc_717E']
movzx ['edx,', '[ebp+var_D]']
test ['edx,', 'edx']
jz ['short', 'loc_717E']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+80h]']
cmp ['dword', 'ptr', '[eax+30h],', '0']
jz ['short', 'loc_7138']
mov ['[ebp+var_55],', '1']
jmp ['short', 'loc_713C']
mov ['[ebp+var_55],', '0']
movzx ['ecx,', '[ebp+var_55]']
push ['ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_read_binary_data']
add ['esp,', '10h']
test ['eax,', 'eax']
jnz ['short', 'loc_7175']
push ['offset', '$SG9617']
push ['777h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_7429']
mov ['[ebp+var_D],', '0']
jmp ['loc_7406']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Dh']
jnz ['loc_720F']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '6']
cmp ['ecx,', '[ebp+var_8]']
jnb ['short', 'loc_720F']
mov ['edx,', '[ebp+var_14]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
cmp ['eax,', '7Ch']
jnz ['short', 'loc_720F']
movzx ['ecx,', '[ebp+var_D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_720F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+80h]']
cmp ['dword', 'ptr', '[edx+30h],', '0']
jz ['short', 'loc_71C9']
mov ['[ebp+var_56],', '1']
jmp ['short', 'loc_71CD']
mov ['[ebp+var_56],', '0']
movzx ['eax,', '[ebp+var_56]']
push ['eax']
lea ['ecx,', '[ebp+var_40]']
push ['ecx']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_read_binary_data']
add ['esp,', '10h']
test ['eax,', 'eax']
jnz ['short', 'loc_7206']
push ['offset', '$SG9624']
push ['784h']
push ['3']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '3']
jmp ['loc_7429']
mov ['[ebp+var_D],', '0']
jmp ['loc_7406']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '2Fh']
jnz ['loc_73DF']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2']
cmp ['eax,', '[ebp+var_8]']
jnb ['loc_73DF']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_7264']
jmp ['$Exit$61']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+var_14]']
mov ['[ebp+var_48],', 'eax']
cmp ['[ebp+var_48],', '0']
jle ['loc_73D9']
cmp ['[ebp+var_48],', '16h']
jge ['loc_73D9']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_8]']
jnb ['loc_73D9']
mov ['[ebp+var_4C],', 'offset', '_t1_keywords']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_50],', '0']
jnz ['short', 'loc_72AB']
jmp ['loc_73D9']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_14]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_50]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
cmp ['edx,', 'ecx']
jnz ['loc_73CB']
mov ['edx,', '[ebp+var_50]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
cmp ['[ebp+var_48],', 'eax']
jnz ['loc_73CB']
mov ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['loc_73CB']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+174h]']
and ['ecx,', '1']
jz ['short', 'loc_7319']
mov ['[ebp+var_5C],', '2']
jmp ['short', 'loc_7320']
mov ['[ebp+var_5C],', '1']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_54],', 'edx']
mov ['eax,', '[ebp+var_4C]']
mov ['ecx,', '[ebp+var_54]']
and ['ecx,', '[eax+20h]']
jnz ['short', 'loc_735B']
mov ['edx,', '4']
imul ['eax,', 'edx,', '25h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '1']
jl ['short', 'loc_7355']
mov ['ecx,', '[ebp+var_4C]']
mov ['edx,', '[ecx]']
push ['edx']
push ['offset', '$SG9647']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_7331']
jmp ['short', 'loc_73D9']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+174h]']
and ['edx,', '2']
jz ['short', 'loc_737E']
push ['offset', '$SG9651']
mov ['eax,', '[ebp+var_50]']
push ['eax']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_73C9']
mov ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_t1_load_keyword']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_73C9']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
and ['ecx,', '0FFh']
cmp ['ecx,', '0A2h']
jnz ['short', 'loc_73C1']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
jmp ['short', 'loc_73C9']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
jmp ['short', 'loc_7429']
jmp ['short', 'loc_73D9']
mov ['ecx,', '[ebp+var_4C]']
add ['ecx,', '24h']
mov ['[ebp+var_4C],', 'ecx']
jmp ['loc_7298']
mov ['[ebp+var_D],', '0']
jmp ['short', 'loc_7406']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_7402']
jmp ['short', '$Exit$61']
mov ['[ebp+var_D],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
jmp ['loc_6AF3']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN60_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '5Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN59_0']
dd ['offset', '$LN55_0']
dd ['0FFFFFFD8h,', '4']
dd ['offset', '$LN56_0']
db ['0CCh']
db ['3', 'dup(0FFh)']
dd ['4']
dd ['offset', '$LN57_0']
dd ['0FFFFFFC0h,', '4']
dd ['offset', '$LN58_0']
align ['2']
jnb ['short', '$+2']
endp
_t1_init_loader	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
push ['178h']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+98h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+60h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+70h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+0DCh],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+0A8h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+148h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+110h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['byte', 'ptr', '[eax+170h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+174h],', '0']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_t1_done_loader	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+94h],', '0']
jz ['short', 'loc_7568']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '64h']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+94h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['edx,', 'edx']
jnz ['short', 'loc_753E']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+100h],', '0']
jz ['short', 'loc_7599']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '0D0h']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+100h]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_756C']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+0CCh],', '0']
jz ['short', 'loc_75C9']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '9Ch']
mov ['esi,', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0CCh]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
jnz ['short', 'loc_759D']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+134h],', '0']
jz ['short', 'loc_75FA']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '104h']
mov ['esi,', 'esp']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+134h]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['edx,', 'edx']
jnz ['short', 'loc_75CD']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+16Ch],', '0']
jz ['short', 'loc_762B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '13Ch']
mov ['esi,', 'esp']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+16Ch]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_75FE']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_T1_Finalize_Parser']
add ['esp,', '4']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_T1_Size_Done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+28h],', '0']
jz ['short', 'loc_76AA']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['_T1_Size_Get_Globals_Funcs']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_76A0']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_T1_Size_Request proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_T1_Size_Get_Globals_Funcs']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_FT_Request_Metrics']
add ['esp,', '8']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_772B']
mov ['esi,', 'esp']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '14h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_T1_Size_Init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_T1_Size_Get_Globals_Funcs']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_77C3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '0A8h']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+64h]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_77C3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+28h],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6']
dd ['offset', '$LN5']
db ['8', 'dup(0CCh)']
endp
_T1_Face_Init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '60h']
push ['edi']
lea ['edi,', '[ebp+var_60]']
mov ['ecx,', '18h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '84h']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+arg_10]']
mov ['[ebp+arg_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+60h]']
mov ['[ebp+var_1C],', 'edx']
push ['offset', '$SG10047']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
call ['_ft_module_get_service']
add ['esp,', '8']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_C],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_7855']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+1E4h],', 'ecx']
push ['offset', '$SG10049']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+60h]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_Get_Module_Interface']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+1E8h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1E8h]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_78E6']
push ['offset', '$SG10052']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG10053']
push ['149h']
push ['0Bh']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '0Bh']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$58']
push ['offset', '$SG10056']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+60h]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_Get_Module_Interface']
add ['esp,', '8']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+224h],', 'eax']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '26h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '2']
jl ['short', 'loc_7924']
push ['offset', '$SG10061']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_7906']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_T1_Open_Face']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7942']
jmp ['$Exit$58']
cmp ['[ebp+arg_8],', '0']
jge ['short', 'loc_794D']
jmp ['$Exit$58']
cmp ['[ebp+arg_8],', '0']
jle ['short', 'loc_797F']
push ['offset', '$SG10065']
call ['_FT_Message']
add ['esp,', '4']
push ['offset', '$SG10066']
push ['15Fh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$58']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+11Ch]']
mov ['[edx+10h],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '0A11h']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_79CA']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx+8]']
or ['eax,', '4']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+210h],', '0']
jz ['short', 'loc_79E8']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+8]']
or ['ecx,', '100h']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+var_24]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['loc_7AD1']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_28],', '0']
jz ['loc_7ACF']
mov ['[ebp+var_2D],', '1']
mov ['eax,', '[ebp+var_28]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_7ABD']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['eax,', 'edx']
jnz ['short', 'loc_7A5D']
mov ['eax,', '[ebp+var_2C]']
add ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
jmp ['short', 'loc_7AB8']
mov ['edx,', '[ebp+var_28]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '20h']
jz ['short', 'loc_7A73']
mov ['ecx,', '[ebp+var_28]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '2Dh']
jnz ['short', 'loc_7A7E']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_7AB8']
mov ['ecx,', '[ebp+var_2C]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '20h']
jz ['short', 'loc_7A94']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Dh']
jnz ['short', 'loc_7A9F']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_7AB8']
mov ['[ebp+var_2D],', '0']
mov ['eax,', '[ebp+var_2C]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_7AB6']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx+18h],', 'eax']
jmp ['short', 'loc_7ABD']
jmp ['loc_7A2B']
movzx ['ecx,', '[ebp+var_2D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_7ACF']
mov ['edx,', '[ebp+var_24]']
mov ['dword', 'ptr', '[edx+18h],', 'offset', '$SG10091']
jmp ['short', 'loc_7AEC']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax+0E8h],', '0']
jz ['short', 'loc_7AEC']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+0E8h]']
mov ['[ecx+14h],', 'eax']
mov ['ecx,', '[ebp+var_24]']
cmp ['dword', 'ptr', '[ecx+18h],', '0']
jnz ['short', 'loc_7B16']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+10h],', '0']
jz ['short', 'loc_7B0C']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10h]']
mov ['[eax+18h],', 'edx']
jmp ['short', 'loc_7B16']
mov ['eax,', '[ebp+var_24]']
mov ['dword', 'ptr', '[eax+18h],', 'offset', '$SG10098']
mov ['ecx,', '[ebp+var_24]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[edx+14h],', '0']
jz ['short', 'loc_7B38']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+0Ch]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jz ['short', 'loc_7B80']
push ['offset', '$SG10103']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jz ['short', 'loc_7B71']
push ['offset', '$SG10104']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_7B80']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx+0Ch]']
or ['eax,', '2']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_24]']
mov ['dword', 'ptr', '[edx+1Ch],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['dword', 'ptr', '[eax+20h],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+148h]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+34h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+14Ch]']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+38h],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+150h]']
add ['edx,', '0FFFFh']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+3Ch],', 'edx']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+154h]']
add ['edx,', '0FFFFh']
sar ['edx,', '10h']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+40h],', 'edx']
mov ['ecx,', '[ebp+var_24]']
movzx ['edx,', 'word', 'ptr', '[ecx+44h]']
test ['edx,', 'edx']
jnz ['short', 'loc_7BFF']
mov ['eax,', '3E8h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+44h],', 'ax']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_24]']
mov ['cx,', '[eax+40h]']
mov ['[edx+46h],', 'cx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_24]']
mov ['cx,', '[eax+38h]']
mov ['[edx+48h],', 'cx']
mov ['edx,', '[ebp+var_24]']
movzx ['eax,', 'word', 'ptr', '[edx+44h]']
imul ['eax,', '0Ch']
cdq
mov ['ecx,', '0Ah']
idiv ['ecx']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+4Ah],', 'ax']
mov ['eax,', '[ebp+var_24]']
movsx ['ecx,', 'word', 'ptr', '[eax+4Ah]']
mov ['edx,', '[ebp+var_24]']
movsx ['eax,', 'word', 'ptr', '[edx+46h]']
mov ['edx,', '[ebp+var_24]']
movsx ['edx,', 'word', 'ptr', '[edx+48h]']
sub ['eax,', 'edx']
cmp ['ecx,', 'eax']
jge ['short', 'loc_7C66']
mov ['eax,', '[ebp+var_24]']
movsx ['ecx,', 'word', 'ptr', '[eax+46h]']
mov ['edx,', '[ebp+var_24]']
movsx ['eax,', 'word', 'ptr', '[edx+48h]']
sub ['ecx,', 'eax']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+4Ah],', 'cx']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_24]']
mov ['dx,', '[ecx+3Ch]']
mov ['[eax+4Ch],', 'dx']
lea ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_T1_Compute_Max_Advance']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_7CA5']
mov ['edx,', '[ebp+var_38]']
push ['edx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+4Ch],', 'ax']
jmp ['short', 'loc_7CAC']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_24]']
mov ['cx,', '[eax+4Ah]']
mov ['[edx+4Eh],', 'cx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_18]']
mov ['cx,', '[eax+1Ah]']
mov ['[edx+50h],', 'cx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_18]']
mov ['cx,', '[eax+1Ch]']
mov ['[edx+52h],', 'cx']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_40],', 'edx']
cmp ['[ebp+var_C],', '0']
jz ['$Exit$58']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+var_40]']
mov ['[ebp+var_50],', 'edx']
mov ['eax,', '3']
mov ['[ebp+var_48],', 'ax']
mov ['ecx,', '1']
mov ['[ebp+var_46],', 'cx']
mov ['[ebp+var_4C],', '756E6963h']
push ['0']
lea ['edx,', '[ebp+var_50]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_58]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['_FT_CMap_New']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_7D44']
mov ['edx,', '[ebp+var_8]']
and ['edx,', '0FFh']
cmp ['edx,', '0A3h']
jz ['short', 'loc_7D44']
jmp ['$Exit$58']
mov ['[ebp+var_8],', '0']
mov ['eax,', '7']
mov ['[ebp+var_48],', 'ax']
mov ['[ebp+var_5C],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+0ECh]']
mov ['[ebp+var_60],', 'edx']
mov ['eax,', '[ebp+var_60]']
sub ['eax,', '1']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '3']
ja ['short', 'loc_7DE6']
mov ['ecx,', '[ebp+var_60]']
jmp ['ds:$LN57_1[ecx*4]']
mov ['[ebp+var_4C],', '41444F42h']
xor ['edx,', 'edx']
mov ['[ebp+var_46],', 'dx']
mov ['eax,', '[ebp+var_58]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_5C],', 'ecx']
jmp ['short', 'loc_7DE6']
mov ['[ebp+var_4C],', '41444245h']
mov ['edx,', '1']
mov ['[ebp+var_46],', 'dx']
mov ['eax,', '[ebp+var_58]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_5C],', 'ecx']
jmp ['short', 'loc_7DE6']
mov ['[ebp+var_4C],', '41444243h']
mov ['edx,', '2']
mov ['[ebp+var_46],', 'dx']
mov ['eax,', '[ebp+var_58]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_5C],', 'ecx']
jmp ['short', 'loc_7DE6']
mov ['[ebp+var_4C],', '6C617431h']
mov ['edx,', '3']
mov ['[ebp+var_46],', 'dx']
mov ['eax,', '[ebp+var_58]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_5C],', 'ecx']
cmp ['[ebp+var_5C],', '0']
jz ['short', '$Exit$58']
push ['0']
lea ['edx,', '[ebp+var_50]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
call ['_FT_CMap_New']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN56_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
add ['esp,', '60h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN55_1']
dd ['offset', '$LN53']
dd ['0FFFFFFB0h,', '0Ch']
dd ['offset', '$LN54']
dd ['offset', '$LN6_0']
dd ['offset', '$LN3']
dd ['offset', '$LN5_0']
endp
_T1_Face_Done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_7E9A']
jmp ['loc_81FB']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+64h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '84h']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+21Ch],', '0']
jnz ['short', 'loc_7EC3']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_7ECA']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+220h],', '0']
jnz ['short', 'loc_7EDF']
mov ['[ebp+var_18],', '1']
jmp ['short', 'loc_7EE6']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_18]']
jz ['short', 'loc_7F05']
push ['offset', '$SG9945']
push ['0D8h']
push ['offset', '$SG9946']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_7EAE']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+220h],', '0']
jz ['short', 'loc_7F56']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+220h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+220h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_7F15']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+220h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+21Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_T1_Done_Blend']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+210h],', '0']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_7F75']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+4],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_7F94']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+8],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_7FB5']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_7FD6']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+10h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_7FF7']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+128h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+128h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_8018']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+124h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+124h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_803F']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+120h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+120h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_8066']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+114h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+114h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_808D']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+118h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+118h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_80B4']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+104h]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+104h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_80DB']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+108h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+108h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_8102']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+10Ch]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+10Ch],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_8129']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0FCh]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+0FCh],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_8150']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+100h]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+100h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_8177']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0E8h]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+0E8h],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_819E']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+1ECh],', '0']
jz ['short', 'loc_81E7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1ECh]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['_T1_Done_Metrics']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+18h],', '0']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_T1_GlyphSlot_Init proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+224h]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_828C']
push ['offset', '$SG9928']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[edx+60h]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_Get_Module']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_828C']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+9Ch]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+24h],', 'ecx']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_T1_GlyphSlot_Done proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+9Ch]']
mov ['dword', 'ptr', '[ecx+24h],', '0']
pop ['ebp']
retn
db ['0Bh', 'dup(0CCh)']
endp
_T1_Driver_Init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
xor ['eax,', 'eax']
pop ['ebp']
retn
align ['4']
endp
_T1_Driver_Done	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_T1_Compute_Max_Advance	proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '600h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_600]']
mov ['ecx,', '180h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '84h']
mov ['[ebp+var_5F4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1E8h]']
mov ['[ebp+var_5F8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+21Ch],', '0']
jnz ['short', 'loc_8348']
mov ['[ebp+var_5FC],', '1']
jmp ['short', 'loc_8352']
mov ['[ebp+var_5FC],', '0']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+220h],', '0']
jnz ['short', 'loc_836A']
mov ['[ebp+var_600],', '1']
jmp ['short', 'loc_8374']
mov ['[ebp+var_600],', '0']
mov ['edx,', '[ebp+var_5FC]']
cmp ['edx,', '[ebp+var_600]']
jz ['short', 'loc_8399']
push ['offset', '$SG10924']
push ['0A3h']
push ['offset', '$SG10925']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
jnz ['short', 'loc_8330']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esi,', 'esp']
push ['offset', '_T1_Parse_Glyph']
push ['0']
push ['0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+210h]']
push ['eax']
mov ['ecx,', '[ebp+var_5F4]']
mov ['edx,', '[ecx+120h]']
push ['edx']
push ['0']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_5E8]']
push ['ecx']
mov ['edx,', '[ebp+var_5F8]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax]']
call ['ecx']
add ['esp,', '24h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_83FF']
mov ['eax,', '[ebp+var_8]']
jmp ['loc_84EF']
mov ['[ebp+var_5A2],', '1']
mov ['[ebp+var_5A4],', '0']
mov ['edx,', '[ebp+var_5F4]']
mov ['eax,', '[edx+110h]']
mov ['[ebp+var_94],', 'eax']
mov ['ecx,', '[ebp+var_5F4]']
mov ['edx,', '[ecx+114h]']
mov ['[ebp+var_90],', 'edx']
mov ['eax,', '[ebp+var_5F4]']
mov ['ecx,', '[eax+118h]']
mov ['[ebp+var_8C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+220h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+21Ch]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['[ebp+var_5F0],', '0']
jmp ['short', 'loc_847F']
mov ['ecx,', '[ebp+var_5F0]']
add ['ecx,', '1']
mov ['[ebp+var_5F0],', 'ecx']
mov ['edx,', '[ebp+var_5F4]']
mov ['eax,', '[ebp+var_5F0]']
cmp ['eax,', '[edx+11Ch]']
jge ['short', 'loc_84CC']
mov ['ecx,', '[ebp+var_5F0]']
push ['ecx']
lea ['edx,', '[ebp+var_5E8]']
push ['edx']
call ['_T1_Parse_Glyph']
add ['esp,', '8']
cmp ['[ebp+var_5F0],', '0']
jz ['short', 'loc_84BF']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_5C0]']
cmp ['ecx,', '[eax]']
jle ['short', 'loc_84CA']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_5C0]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_8470']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_5E8]']
push ['ecx']
mov ['edx,', '[ebp+var_5F8]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN19_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '600h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN18_4']
dd ['offset', '$LN17_5']
endp
_T1_Get_Advances proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '5FCh']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_5FC]']
mov ['ecx,', '17Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '84h']
mov ['[ebp+var_5F0],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+1E8h]']
mov ['[ebp+var_5F4],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '10h']
jz ['short', 'loc_85CE']
mov ['[ebp+var_5F8],', '0']
jmp ['short', 'loc_85AA']
mov ['edx,', '[ebp+var_5F8]']
add ['edx,', '1']
mov ['[ebp+var_5F8],', 'edx']
mov ['eax,', '[ebp+var_5F8]']
cmp ['eax,', '[ebp+arg_8]']
jnb ['short', 'loc_85C7']
mov ['ecx,', '[ebp+var_5F8]']
mov ['edx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[edx+ecx*4],', '0']
jmp ['short', 'loc_859B']
xor ['eax,', 'eax']
jmp ['loc_870E']
mov ['esi,', 'esp']
push ['offset', '_T1_Parse_Glyph']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+210h]']
push ['ecx']
mov ['edx,', '[ebp+var_5F0]']
mov ['eax,', '[edx+120h]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
lea ['edx,', '[ebp+var_5E8]']
push ['edx']
mov ['eax,', '[ebp+var_5F4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '24h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_5FC],', 'eax']
cmp ['[ebp+var_5FC],', '0']
jz ['short', 'loc_8630']
mov ['eax,', '[ebp+var_5FC]']
jmp ['loc_870E']
mov ['[ebp+var_5A2],', '1']
mov ['[ebp+var_5A4],', '0']
mov ['eax,', '[ebp+var_5F0]']
mov ['ecx,', '[eax+110h]']
mov ['[ebp+var_94],', 'ecx']
mov ['edx,', '[ebp+var_5F0]']
mov ['eax,', '[edx+114h]']
mov ['[ebp+var_90],', 'eax']
mov ['ecx,', '[ebp+var_5F0]']
mov ['edx,', '[ecx+118h]']
mov ['[ebp+var_8C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+220h]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+21Ch]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_5F8],', '0']
jmp ['short', 'loc_86A7']
mov ['ecx,', '[ebp+var_5F8]']
add ['ecx,', '1']
mov ['[ebp+var_5F8],', 'ecx']
mov ['edx,', '[ebp+var_5F8]']
cmp ['edx,', '[ebp+arg_8]']
jnb ['short', 'loc_870C']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_5F8]']
push ['eax']
lea ['ecx,', '[ebp+var_5E8]']
push ['ecx']
call ['_T1_Parse_Glyph']
add ['esp,', '8']
mov ['[ebp+var_5FC],', 'eax']
cmp ['[ebp+var_5FC],', '0']
jnz ['short', 'loc_86FA']
mov ['edx,', '[ebp+var_5C0]']
push ['edx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_5F8]']
mov ['edx,', '[ebp+arg_10]']
mov ['[edx+ecx*4],', 'eax']
jmp ['short', 'loc_870A']
mov ['eax,', '[ebp+var_5F8]']
mov ['ecx,', '[ebp+arg_10]']
mov ['dword', 'ptr', '[ecx+eax*4],', '0']
jmp ['short', 'loc_8698']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '5FCh']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN14_1']
dd ['offset', '$LN13_1']
db ['4', 'dup(0CCh)']
endp
_T1_Load_Glyph	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '690h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_690]']
mov ['ecx,', '1A4h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_5F4],', 'edx']
mov ['eax,', '[ebp+var_5F4]']
add ['eax,', '84h']
mov ['[ebp+var_5FC],', 'eax']
mov ['ecx,', '[ebp+var_5F4]']
mov ['edx,', '[ecx+1E8h]']
mov ['[ebp+var_600],', 'edx']
mov ['eax,', '[ebp+var_600]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_604],', 'ecx']
mov ['[ebp+var_63D],', '0']
mov ['[ebp+var_63E],', '0']
mov ['edx,', '[ebp+var_5F4]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+10h]']
jb ['short', 'loc_8814']
mov ['ecx,', '[ebp+var_5F4]']
mov ['edx,', '[ecx+80h]']
cmp ['dword', 'ptr', '[edx+30h],', '0']
jnz ['short', 'loc_8814']
push ['offset', '$SG10993']
push ['12Bh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$52']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '23h']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '1']
jl ['short', 'loc_8836']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
push ['offset', '$SG10999']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_8814']
mov ['ecx,', '[ebp+var_5F4]']
cmp ['dword', 'ptr', '[ecx+21Ch],', '0']
jnz ['short', 'loc_8855']
mov ['[ebp+var_688],', '1']
jmp ['short', 'loc_885F']
mov ['[ebp+var_688],', '0']
mov ['edx,', '[ebp+var_5F4]']
cmp ['dword', 'ptr', '[edx+220h],', '0']
jnz ['short', 'loc_887A']
mov ['[ebp+var_68C],', '1']
jmp ['short', 'loc_8884']
mov ['[ebp+var_68C],', '0']
mov ['eax,', '[ebp+var_688]']
cmp ['eax,', '[ebp+var_68C]']
jz ['short', 'loc_88A9']
push ['offset', '$SG11005']
push ['131h']
push ['offset', '$SG11006']
call ['_FT_Panic']
add ['esp,', '0Ch']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_883A']
mov ['edx,', '[ebp+arg_C]']
and ['edx,', '400h']
jz ['short', 'loc_88C1']
mov ['eax,', '[ebp+arg_C]']
or ['eax,', '3']
mov ['[ebp+arg_C],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_88E7']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+10h]']
mov ['[ecx+0ACh],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+14h]']
mov ['[ecx+0B0h],', 'eax']
jmp ['short', 'loc_8901']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+0ACh],', '10000h']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+0B0h],', '10000h']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+6Eh],', 'ax']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+6Ch],', 'dx']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '1']
jnz ['short', 'loc_892C']
mov ['edx,', '[ebp+arg_C]']
and ['edx,', '2']
jnz ['short', 'loc_892C']
mov ['[ebp+var_68D],', '1']
jmp ['short', 'loc_8933']
mov ['[ebp+var_68D],', '0']
mov ['al,', '[ebp+var_68D]']
mov ['[ebp+var_5F5],', 'al']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+48h],', '6F75746Ch']
mov ['esi,', 'esp']
push ['offset', '_T1_Parse_Glyph']
mov ['edx,', '[ebp+arg_C]']
sar ['edx,', '10h']
and ['edx,', '0Fh']
push ['edx']
movzx ['eax,', '[ebp+var_5F5]']
push ['eax']
mov ['ecx,', '[ebp+var_5F4]']
mov ['edx,', '[ecx+210h]']
push ['edx']
mov ['eax,', '[ebp+var_5FC]']
mov ['ecx,', '[eax+120h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
lea ['eax,', '[ebp+var_5EC]']
push ['eax']
mov ['ecx,', '[ebp+var_604]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '24h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_89B4']
jmp ['$Exit$52']
mov ['[ebp+var_63D],', '1']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '400h']
jz ['short', 'loc_89CE']
mov ['[ebp+var_68E],', '1']
jmp ['short', 'loc_89D5']
mov ['[ebp+var_68E],', '0']
mov ['cl,', '[ebp+var_68E]']
mov ['[ebp+var_5A7],', 'cl']
mov ['edx,', '[ebp+var_5FC]']
mov ['eax,', '[edx+110h]']
mov ['[ebp+var_98],', 'eax']
mov ['ecx,', '[ebp+var_5FC]']
mov ['edx,', '[ecx+114h]']
mov ['[ebp+var_94],', 'edx']
mov ['eax,', '[ebp+var_5FC]']
mov ['ecx,', '[eax+118h]']
mov ['[ebp+var_90],', 'ecx']
mov ['edx,', '[ebp+var_5F4]']
mov ['eax,', '[edx+220h]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_5F4]']
mov ['edx,', '[ecx+21Ch]']
mov ['[ebp+var_18],', 'edx']
lea ['eax,', '[ebp+var_638]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
lea ['edx,', '[ebp+var_5EC]']
push ['edx']
call ['_T1_Parse_Glyph_And_Get_Char_String']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8A5D']
jmp ['$Exit$52']
mov ['[ebp+var_63E],', '1']
mov ['eax,', '[ebp+var_8C]']
mov ['[ebp+var_618],', 'eax']
mov ['ecx,', '[ebp+var_88]']
mov ['[ebp+var_614],', 'ecx']
mov ['edx,', '[ebp+var_84]']
mov ['[ebp+var_610],', 'edx']
mov ['eax,', '[ebp+var_80]']
mov ['[ebp+var_60C],', 'eax']
mov ['ecx,', '[ebp+var_7C]']
mov ['[ebp+var_628],', 'ecx']
mov ['edx,', '[ebp+var_78]']
mov ['[ebp+var_624],', 'edx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_5EC]']
push ['eax']
mov ['ecx,', '[ebp+var_604]']
mov ['edx,', '[ecx+4]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_63D],', '0']
cmp ['[ebp+var_C],', '0']
jnz ['$Exit$52']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+7Ch]']
and ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+7Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+7Ch]']
or ['ecx,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+7Ch],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
and ['eax,', '400h']
jz ['loc_8B90']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+9Ch]']
mov ['[ebp+var_644],', 'edx']
mov ['eax,', '[ebp+var_5CC]']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+20h],', 'eax']
mov ['edx,', '[ebp+var_5C4]']
push ['edx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+28h],', 'eax']
mov ['edx,', '[ebp+var_644]']
add ['edx,', '0Ch']
mov ['eax,', '[ebp+var_618]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_614]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_610]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_60C]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_644]']
mov ['eax,', '[ebp+var_628]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_624]']
mov ['[edx+20h],', 'ecx']
mov ['edx,', '[ebp+var_644]']
mov ['byte', 'ptr', '[edx+8],', '1']
jmp ['loc_8F0A']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '18h']
mov ['[ebp+var_660],', 'eax']
mov ['ecx,', '[ebp+var_5C4]']
push ['ecx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['edx,', '[ebp+var_660]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_5C4]']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+38h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+9Ch]']
mov ['byte', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '10h']
jz ['short', 'loc_8C19']
mov ['edx,', '[ebp+var_5F4]']
mov ['eax,', '[ebp+var_5F4]']
mov ['ecx,', '[edx+1D8h]']
sub ['ecx,', '[eax+1D0h]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+var_660]']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_660]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+3Ch],', 'edx']
jmp ['short', 'loc_8C4C']
mov ['eax,', '[ebp+var_5C0]']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+var_660]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+var_5C0]']
push ['edx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+3Ch],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+48h],', '6F75746Ch']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_8C79']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax+0Eh]']
cmp ['ecx,', '18h']
jge ['short', 'loc_8C79']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+7Ch]']
or ['eax,', '100h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+7Ch],', 'eax']
cmp ['[ebp+var_618],', '10000h']
jnz ['short', 'loc_8CA5']
mov ['edx,', '[ebp+var_60C]']
cmp ['edx,', '[ebp+var_618]']
jnz ['short', 'loc_8CA5']
cmp ['[ebp+var_614],', '0']
jnz ['short', 'loc_8CA5']
cmp ['[ebp+var_610],', '0']
jz ['short', 'loc_8CBB']
lea ['eax,', '[ebp+var_618]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
push ['ecx']
call ['_FT_Outline_Transform']
add ['esp,', '8']
cmp ['[ebp+var_628],', '0']
jnz ['short', 'loc_8CCD']
cmp ['[ebp+var_624],', '0']
jz ['short', 'loc_8CEA']
mov ['edx,', '[ebp+var_624]']
push ['edx']
mov ['eax,', '[ebp+var_628]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
push ['ecx']
call ['_FT_Outline_Translate']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_660]']
mov ['eax,', '[edx+10h]']
mov ['[ebp+var_66C],', 'eax']
mov ['[ebp+var_668],', '0']
lea ['ecx,', '[ebp+var_618]']
push ['ecx']
lea ['edx,', '[ebp+var_66C]']
push ['edx']
call ['_FT_Vector_Transform']
add ['esp,', '8']
mov ['eax,', '[ebp+var_66C]']
add ['eax,', '[ebp+var_628]']
mov ['ecx,', '[ebp+var_660]']
mov ['[ecx+10h],', 'eax']
mov ['[ebp+var_66C],', '0']
mov ['edx,', '[ebp+var_660]']
mov ['eax,', '[edx+1Ch]']
mov ['[ebp+var_668],', 'eax']
lea ['ecx,', '[ebp+var_618]']
push ['ecx']
lea ['edx,', '[ebp+var_66C]']
push ['edx']
call ['_FT_Vector_Transform']
add ['esp,', '8']
mov ['eax,', '[ebp+var_668]']
add ['eax,', '[ebp+var_624]']
mov ['ecx,', '[ebp+var_660]']
mov ['[ecx+1Ch],', 'eax']
mov ['edx,', '[ebp+arg_C]']
and ['edx,', '1']
jnz ['loc_8E8C']
mov ['eax,', '[ebp+var_5DC]']
mov ['[ebp+var_678],', 'eax']
mov ['ecx,', '[ebp+var_678]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_67C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0ACh]']
mov ['[ebp+var_680],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0B0h]']
mov ['[ebp+var_684],', 'eax']
movzx ['ecx,', '[ebp+var_5F5]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8DCB']
cmp ['[ebp+var_5A4],', '0']
jnz ['short', 'loc_8E48']
mov ['edx,', '[ebp+var_678]']
movsx ['eax,', 'word', 'ptr', '[edx+2]']
mov ['[ebp+var_674],', 'eax']
jmp ['short', 'loc_8DFB']
mov ['ecx,', '[ebp+var_674]']
sub ['ecx,', '1']
mov ['[ebp+var_674],', 'ecx']
mov ['edx,', '[ebp+var_67C]']
add ['edx,', '8']
mov ['[ebp+var_67C],', 'edx']
cmp ['[ebp+var_674],', '0']
jle ['short', 'loc_8E48']
mov ['eax,', '[ebp+var_680]']
push ['eax']
mov ['ecx,', '[ebp+var_67C]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_67C]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+var_684]']
push ['edx']
mov ['eax,', '[ebp+var_67C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+var_67C]']
mov ['[edx+4],', 'eax']
jmp ['short', 'loc_8DDD']
mov ['eax,', '[ebp+var_680]']
push ['eax']
mov ['ecx,', '[ebp+var_660]']
mov ['edx,', '[ecx+10h]']
push ['edx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_660]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+var_684]']
push ['edx']
mov ['eax,', '[ebp+var_660]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
call ['_FT_MulFix_i386']
add ['esp,', '8']
mov ['edx,', '[ebp+var_660]']
mov ['[edx+1Ch],', 'eax']
lea ['eax,', '[ebp+var_658]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '6Ch']
push ['ecx']
call ['_FT_Outline_Get_CBox']
add ['esp,', '8']
mov ['edx,', '[ebp+var_650]']
sub ['edx,', '[ebp+var_658]']
mov ['eax,', '[ebp+var_660]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_64C]']
sub ['ecx,', '[ebp+var_654]']
mov ['edx,', '[ebp+var_660]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_660]']
mov ['ecx,', '[ebp+var_658]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_660]']
mov ['eax,', '[ebp+var_64C]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
and ['ecx,', '10h']
jz ['short', 'loc_8F0A']
mov ['edx,', '[ebp+var_660]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_660]']
push ['ecx']
call ['_ft_synthesize_vertical_metrics']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_638]']
mov ['[edx+88h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_634]']
mov ['[ecx+8Ch],', 'edx']
movzx ['eax,', '[ebp+var_63E]']
test ['eax,', 'eax']
jz ['short', 'loc_8F9B']
mov ['ecx,', '[ebp+var_5F4]']
mov ['edx,', '[ecx+80h]']
cmp ['dword', 'ptr', '[edx+30h],', '0']
jz ['short', 'loc_8F9B']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_638]']
push ['eax']
mov ['ecx,', '[ebp+var_5F4]']
mov ['edx,', '[ecx+80h]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_5F4]']
mov ['eax,', '[edx+80h]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+88h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+8Ch],', '0']
movzx ['eax,', '[ebp+var_63D]']
test ['eax,', 'eax']
jz ['short', 'loc_8FC4']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_5EC]']
push ['ecx']
mov ['edx,', '[ebp+var_604]']
mov ['eax,', '[edx+4]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN51_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '690h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN50_0']
dd ['offset', '$LN44_0']
dd ['0FFFFF9E8h,', '10h']
dd ['offset', '$LN45_0']
dd ['0FFFFF9D8h,', '8']
dd ['offset', '$LN46_0']
dd ['0FFFFF9C8h,', '8']
dd ['offset', '$LN47_0']
dd ['0FFFFF9A8h,', '10h']
dd ['offset', '$LN48_0']
dd ['0FFFFF994h,', '8']
dd ['offset', '$LN49_1']
db ['0Ch', 'dup(0CCh)']
endp
_T1_Read_Metrics proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '3Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_3C]']
mov ['ecx,', '0Fh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_28],', '0']
mov ['[ebp+var_30],', '2']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '84h']
mov ['[ebp+var_38],', 'edx']
lea ['eax,', '[ebp+var_30]']
push ['eax']
push ['2Ch']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_28],', 'eax']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_90FD']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_FT_Stream_EnterFrame']
add ['esp,', '8']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_9102']
jmp ['$Exit$16']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '148h']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '4']
mov ['ecx,', '[edx]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[edx+4]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[edx+8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[edx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+154h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+14Ch]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1E8h]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+18h],', '0']
jz ['loc_91E2']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+20h]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_91E2']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_14],', 'offset', '_t1_get_index']
mov ['edx,', '[ebp+var_38]']
mov ['[ebp+var_10],', 'edx']
mov ['esi,', 'esp']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[edx+8]']
call ['eax']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_30],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['edx,', '[ebp+var_30]']
and ['edx,', '0FFh']
cmp ['edx,', '2']
jnz ['loc_928B']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[edx+4],', '6']
jbe ['loc_928B']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_3C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
cmp ['edx,', '4']
jge ['short', 'loc_928B']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_3C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx+2]']
shl ['eax,', '18h']
mov ['ecx,', '1']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_3C]']
movzx ['ecx,', 'byte', 'ptr', '[edx+ecx+2]']
shl ['ecx,', '10h']
or ['eax,', 'ecx']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['ecx,', '[ebp+var_3C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx+2]']
shl ['edx,', '8']
or ['eax,', 'edx']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_3C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+edx+2]']
or ['eax,', 'edx']
mov ['ecx,', '[ebp+arg_4]']
cmp ['eax,', '[ecx+4]']
jnz ['short', 'loc_928B']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_T1_Read_PFM']
add ['esp,', '0Ch']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jnz ['loc_9358']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '4']
mov ['eax,', '[ebp+var_38]']
add ['eax,', '148h']
mov ['ecx,', '[edx]']
mov ['[eax],', 'ecx']
mov ['ecx,', '[edx+4]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[edx+8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[edx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+4]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+34h],', 'ecx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+8]']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+38h],', 'ecx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+0Ch]']
add ['ecx,', '0FFFFh']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+3Ch],', 'ecx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+10h]']
add ['ecx,', '0FFFFh']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+40h],', 'ecx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '8000h']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+46h],', 'cx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '8000h']
sar ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+48h],', 'cx']
mov ['eax,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jz ['short', 'loc_9358']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
or ['edx,', '40h']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_28]']
mov ['[ecx+1ECh],', 'edx']
mov ['[ebp+var_28],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['_FT_Stream_ExitFrame']
add ['esp,', '4']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_937A']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['_T1_Done_Metrics']
add ['esp,', '8']
mov ['eax,', '[ebp+var_30]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN15_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '3Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
dd ['offset', '$LN14_2']
dd ['offset', '$LN12_1']
dd ['0FFFFFFD0h,', '4']
dd ['offset', '$LN13_2']
db ['0Fh', 'dup(0CCh)']
endp
_T1_Done_Metrics proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+24h],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_93DF']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+28h],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_940A']
mov ['edx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+arg_4],', '0']
xor ['edx,', 'edx']
jnz ['short', 'loc_9435']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_T1_Get_Kerning	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
shl ['eax,', '10h']
or ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
shl ['ecx,', '4']
mov ['edx,', '[ebp+var_4]']
lea ['eax,', '[edx+ecx-10h]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_C]']
ja ['short', 'loc_950D']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+var_4]']
sar ['eax,', '4']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
shl ['eax,', '4']
add ['eax,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
or ['eax,', '[ecx+4]']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_10]']
jnz ['short', 'loc_94EF']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+4],', 'edx']
jmp ['short', 'loc_9520']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_9502']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '10h']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_950B']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', '10h']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_949E']
mov ['eax,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['8', 'dup(0CCh)']
endp
_T1_Get_Track_Kerning proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1ECh]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_9575']
push ['offset', '$SG11268']
push ['171h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_961D']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_9587']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[eax+20h]']
jge ['loc_961B']
imul ['edx,', '[ebp+var_8],', '14h']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+1Ch]']
mov ['[ebp+var_C],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+arg_8]']
jz ['short', 'loc_95AF']
jmp ['short', 'loc_957E']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_95C7']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_9616']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+0Ch]']
jle ['short', 'loc_95DF']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+10h]']
mov ['[ecx],', 'eax']
jmp ['short', 'loc_9616']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ecx+0Ch]']
sub ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ecx+10h]']
sub ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ecx+4]']
push ['edx']
call ['_FT_MulDiv']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+arg_C]']
mov ['[edx],', 'eax']
jmp ['loc_957E']
xor ['eax,', 'eax']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_T1_Size_Get_Globals_Funcs proc	near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+224h]']
mov ['[ebp+var_8],', 'eax']
push ['offset', '$SG9882']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+60h]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['_FT_Get_Module']
add ['esp,', '8']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_96A4']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_96A4']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_96A4']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '4']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_96AB']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_10]']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_t1_get_glyph_name proc	near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+1A4h]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_ft_mem_strcpyn']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['4']
endp
_t1_get_name_index proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_9722']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ecx+1A0h]']
jge ['short', 'loc_975D']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+1A4h]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_strcmp']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_975B']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_975F']
jmp ['short', 'loc_9719']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['0Fh', 'dup(0CCh)']
endp
_t1_get_ps_name	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+16Ch]']
pop ['ebp']
retn
align ['4']
endp
_t1_ps_get_font_info proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
push ['edi']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '84h']
mov ['ecx,', '8']
mov ['edi,', '[ebp+arg_4]']
rep ['movsd']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebp']
retn
align ['4']
endp
_t1_ps_get_font_extra proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['cx,', '[eax+0A4h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'cx']
xor ['eax,', 'eax']
pop ['ebp']
retn
db ['9', 'dup(0CCh)']
endp
_t1_ps_has_glyph_names proc near	
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '1']
pop ['ebp']
retn
endp
_t1_ps_get_font_private	proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
push ['edi']
mov ['esi,', '[ebp+arg_0]']
add ['esi,', '0A8h']
mov ['ecx,', '31h']
mov ['edi,', '[ebp+arg_4]']
rep ['movsd']
xor ['eax,', 'eax']
pop ['edi']
pop ['esi']
pop ['ebp']
retn
align ['4']
endp
_t1_ps_get_font_value proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '84h']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '2Dh']
ja ['loc_A21F']
mov ['eax,', '[ebp+var_18]']
jmp ['ds:$LN122[eax*4]']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9875']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9875']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+12Dh]']
mov ['[edx],', 'cl']
jmp ['loc_A21F']
cmp ['[ebp+arg_8],', '4']
jnb ['short', 'loc_98F0']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_98F0']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ebp+var_4]']
jl ['short', 'loc_98F0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '3']
ja ['short', 'loc_98E8']
mov ['ecx,', '[ebp+var_1C]']
jmp ['ds:$LN123[ecx*4]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+130h]']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_98E8']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+134h]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_98E8']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+138h]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_98E8']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+13Ch]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
jmp ['loc_A21F']
cmp ['[ebp+arg_8],', '4']
jnb ['short', 'loc_996B']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_996B']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_996B']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '3']
ja ['short', 'loc_9963']
mov ['edx,', '[ebp+var_20]']
jmp ['ds:$LN124[edx*4]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+148h]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_9963']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+14Ch]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_9963']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+150h]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_9963']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+154h]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx],', 'eax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9993']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9993']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+12Ch]']
mov ['[edx],', 'cl']
jmp ['loc_A21F']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0E8h]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_99D8']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_99D8']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0E8h]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_99FD']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_99FD']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+24h]']
mov ['[ecx],', 'eax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9A25']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9A25']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+11Ch]']
mov ['[edx],', 'ecx']
jmp ['loc_A21F']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+11Ch]']
jnb ['short', 'loc_9A8E']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+120h]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9A8E']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ebp+var_4]']
jl ['short', 'loc_9A8E']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+120h]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax-1],', '0']
jmp ['loc_A21F']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+11Ch]']
jnb ['short', 'loc_9AF1']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+128h]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ecx+edx*4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9AF1']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9AF1']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+124h]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ecx+edx*4]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_C]']
add ['edx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[edx-1],', '0']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9B19']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_9B19']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0ECh]']
mov ['[ecx],', 'eax']
jmp ['loc_A21F']
mov ['ecx,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[ecx+0ECh],', '1']
jnz ['short', 'loc_9B91']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+0F0h]']
jnb ['short', 'loc_9B91']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+100h]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9B91']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ebp+var_4]']
jl ['short', 'loc_9B91']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+100h]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax-1],', '0']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9BB9']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9BB9']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+110h]']
mov ['[edx],', 'ecx']
jmp ['loc_A21F']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+110h]']
jnb ['short', 'loc_9C1C']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+118h]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx+eax*4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9C1C']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ebp+var_4]']
jl ['short', 'loc_9C1C']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+114h]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax-1],', '0']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9C4F']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9C4F']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[edx+eax+9Ch]']
mov ['[ecx],', 'ax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9C82']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9C82']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[edx+eax+9Eh]']
mov ['[ecx],', 'ax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9CA7']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9CA7']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+2Ch]']
mov ['[edx],', 'cl']
jmp ['loc_A21F']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+2Ch]']
cmp ['[ebp+arg_8],', 'eax']
jnb ['short', 'loc_9CDE']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9CDE']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9CDE']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['ax,', '[ecx+eax*2+30h]']
mov ['[edx],', 'ax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9D06']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9D06']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+90h]']
mov ['[edx],', 'ecx']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9D2E']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ebp+var_4]']
jl ['short', 'loc_9D2E']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+98h]']
mov ['[eax],', 'edx']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9D56']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_9D56']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+94h]']
mov ['[ecx],', 'eax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9D7B']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9D7B']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+2Dh]']
mov ['[edx],', 'cl']
jmp ['loc_A21F']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+2Dh]']
cmp ['[ebp+arg_8],', 'eax']
jnb ['short', 'loc_9DB2']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9DB2']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9DB2']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['ax,', '[ecx+eax*2+4Ch]']
mov ['[edx],', 'ax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9DD7']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9DD7']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+2Eh]']
mov ['[edx],', 'cl']
jmp ['loc_A21F']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+2Eh]']
cmp ['[ebp+arg_8],', 'eax']
jnb ['short', 'loc_9E0E']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9E0E']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9E0E']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['ax,', '[ecx+eax*2+60h]']
mov ['[edx],', 'ax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9E33']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9E33']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+2Fh]']
mov ['[edx],', 'cl']
jmp ['loc_A21F']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+2Fh]']
cmp ['[ebp+arg_8],', 'eax']
jnb ['short', 'loc_9E6A']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9E6A']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9E6A']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['ax,', '[ecx+eax*2+7Ch]']
mov ['[edx],', 'ax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9E92']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9E92']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+0A0h]']
mov ['[edx],', 'cl']
jmp ['loc_A21F']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+0A0h]']
cmp ['[ebp+arg_8],', 'eax']
jnb ['short', 'loc_9ECF']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9ECF']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9ECF']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['ax,', '[ecx+eax*2+0A4h]']
mov ['[edx],', 'ax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9EF7']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9EF7']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+0A1h]']
mov ['[edx],', 'cl']
jmp ['loc_A21F']
mov ['edx,', '[ebp+var_C]']
movzx ['eax,', 'byte', 'ptr', '[edx+0A1h]']
cmp ['[ebp+arg_8],', 'eax']
jnb ['short', 'loc_9F34']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9F34']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9F34']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_C]']
mov ['ax,', '[ecx+eax*2+0BEh]']
mov ['[edx],', 'ax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9F5C']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_9F5C']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['cl,', '[eax+0A3h]']
mov ['[edx],', 'cl']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9F84']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ebp+var_4]']
jl ['short', 'loc_9F84']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_C]']
mov ['dl,', '[ecx+0A2h]']
mov ['[eax],', 'dl']
jmp ['loc_A21F']
cmp ['[ebp+arg_8],', '2']
jnb ['short', 'loc_9FB8']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9FB8']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_9FB8']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+var_C]']
mov ['dx,', '[eax+edx*2+0E4h]']
mov ['[ecx],', 'dx']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9FDD']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_9FDD']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+28h]']
mov ['[ecx],', 'eax']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A005']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_A005']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0E0h]']
mov ['[edx],', 'ecx']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A02D']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ebp+var_4]']
jl ['short', 'loc_A02D']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0DCh]']
mov ['[eax],', 'edx']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A052']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_A052']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_C]']
mov ['al,', '[edx+18h]']
mov ['[ecx],', 'al']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A079']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_A079']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_C]']
mov ['cx,', '[eax+1Ah]']
mov ['[edx],', 'cx']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A0A0']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ebp+var_4]']
jl ['short', 'loc_A0A0']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[ebp+var_C]']
mov ['dx,', '[ecx+1Ch]']
mov ['[eax],', 'dx']
jmp ['loc_A21F']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A0C7']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_A0C7']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_C]']
mov ['ax,', '[edx+20h]']
mov ['[ecx],', 'ax']
jmp ['loc_A21F']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A104']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_A104']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['loc_A21F']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A143']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_A143']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['loc_A21F']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A182']
mov ['edx,', '[ebp+arg_10]']
cmp ['edx,', '[ebp+var_4]']
jl ['short', 'loc_A182']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['loc_A21F']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A1C1']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_A1C1']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_A21F']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+10h]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A1FD']
mov ['ecx,', '[ebp+arg_10]']
cmp ['ecx,', '[ebp+var_4]']
jl ['short', 'loc_A1FD']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
jmp ['short', 'loc_A21F']
mov ['[ebp+var_4],', '4']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A21F']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+var_4]']
jl ['short', 'loc_A21F']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+14h]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '20h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN115']
dd ['offset', '$LN106']
dd ['offset', '$LN97']
dd ['offset', '$LN95']
dd ['offset', '$LN93']
dd ['offset', '$LN91']
dd ['offset', '$LN89']
dd ['offset', '$LN86']
dd ['offset', '$LN83']
dd ['offset', '$LN81']
dd ['offset', '$LN78']
dd ['offset', '$LN76']
dd ['offset', '$LN73']
dd ['offset', '$LN71']
dd ['offset', '$LN69']
dd ['offset', '$LN67']
dd ['offset', '$LN62']
dd ['offset', '$LN58_1']
dd ['offset', '$LN56_2']
dd ['offset', '$LN53_0']
dd ['offset', '$LN51_1']
dd ['offset', '$LN48_1']
dd ['offset', '$LN46_1']
dd ['offset', '$LN64']
dd ['offset', '$LN60_1']
dd ['offset', '$LN43']
dd ['offset', '$LN41']
dd ['offset', '$LN38_0']
dd ['offset', '$LN36_0']
dd ['offset', '$LN31_0']
dd ['offset', '$LN33_0']
dd ['offset', '$LN29_1']
dd ['offset', '$LN26_0']
dd ['offset', '$LN24_0']
dd ['offset', '$LN22_2']
dd ['offset', '$LN12_2']
dd ['offset', '$LN10_1']
dd ['offset', '$LN8_2']
dd ['offset', '$LN6_1']
dd ['offset', '$LN4_0']
dd ['offset', '$LN20_3']
dd ['offset', '$LN18_5']
dd ['offset', '$LN16_3']
dd ['offset', '$LN14_3']
dd ['offset', '$LN2']
dd ['offset', '$LN109']
dd ['offset', '$LN108']
dd ['offset', '$LN107']
dd ['offset', '$LN100']
dd ['offset', '$LN99']
dd ['offset', '$LN98']
db ['4', 'dup(0CCh)']
endp
_Get_Interface	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '_t1_services']
call ['_ft_service_list_lookup']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
db ['0Dh', 'dup(0CCh)']
endp
_Get_Kerning	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['edx,', '[ebp+arg_C]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+1ECh],', '0']
jz ['short', 'loc_A38A']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1ECh]']
push ['edx']
call ['_T1_Get_Kerning']
add ['esp,', '10h']
xor ['eax,', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
endp
_T1_Parse_Glyph_And_Get_Char_String proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_2C]']
mov ['ecx,', '0Bh']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '84h']
mov ['[ebp+var_C],', 'edx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+80h]']
mov ['edx,', '[ecx+30h]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '130h']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '560h']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+140h]']
mov ['eax,', '[ecx+144h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+570h],', 'edx']
mov ['[ecx+574h],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_A45C']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_A485']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+124h]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ecx+eax*4]']
mov ['[edx],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+128h]']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[eax+edx*4]']
mov ['[ecx+4],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_A4B6']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5CCh]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['loc_A56D']
cmp ['[ebp+var_14],', '0']
jz ['loc_A56D']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['loc_A56D']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+20h]']
push ['edx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
call ['_FT_RoundFix']
add ['esp,', '4']
sar ['eax,', '10h']
mov ['[ebp+var_1C],', 'eax']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+8]']
call ['ecx']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_28]']
shl ['edx,', '10h']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ebp+var_20]']
shl ['ecx,', '10h']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+28h],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+2Ch],', 'eax']
mov ['eax,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN9_2']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '2Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN8_3']
dd ['offset', '$LN7_2']
db ['4', 'dup(0CCh)']
endp
_T1_Parse_Glyph	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_T1_Parse_Glyph_And_Get_Char_String']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_A642']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+80h]']
cmp ['dword', 'ptr', '[eax+30h],', '0']
jz ['short', 'loc_A642']
mov ['esi,', 'esp']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+80h]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+80h]']
mov ['edx,', '[ecx+30h]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+4]']
call ['ecx']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['eax,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN7_3']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['esi']
add ['esp,', '18h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN6_2']
dd ['offset', '$LN5_1']
db ['5', 'dup(0CCh)']
endp
_t1_get_index	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_4],', '0FFFFh']
jbe ['short', 'loc_A6BE']
xor ['eax,', 'eax']
jmp ['loc_A757']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_A6D0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[edx+11Ch]']
jge ['short', 'loc_A755']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+120h]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_A750']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_C]']
movsx ['edx,', 'byte', 'ptr', '[ecx+eax]']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
cmp ['edx,', 'ecx']
jnz ['short', 'loc_A750']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_A750']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__strncmp']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
test ['eax,', 'eax']
jnz ['short', 'loc_A750']
mov ['eax,', '[ebp+var_8]']
jmp ['short', 'loc_A757']
jmp ['loc_A6C7']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['6', 'dup(0CCh)']
endp
_compare_kern_pairs proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+var_4]']
or ['eax,', '[ecx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
shl ['eax,', '10h']
mov ['ecx,', '[ebp+var_8]']
or ['eax,', '[ecx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_C]']
cmp ['edx,', '[ebp+var_10]']
jbe ['short', 'loc_A7C2']
mov ['eax,', '1']
jmp ['short', 'loc_A7D3']
jmp ['short', 'loc_A7D3']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[ebp+var_10]']
jnb ['short', 'loc_A7D1']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_A7D3']
jmp ['short', 'loc_A7D3']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
db ['5', 'dup(0CCh)']
endp
_T1_Read_PFM	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+20h]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '63h']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '2']
cmp ['ecx,', '[ebp+var_18]']
jbe ['short', 'loc_A848']
push ['offset', '$SG11129']
push ['83h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$28']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '8']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
or ['ecx,', 'eax']
movzx ['ecx,', 'cx']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_1C]']
lea ['ecx,', '[eax+edx+12h]']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '12h']
cmp ['edx,', '[ebp+var_18]']
ja ['short', 'loc_A8B4']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
or ['edx,', 'ecx']
movzx ['edx,', 'dx']
cmp ['edx,', '12h']
jge ['short', 'loc_A8B9']
jmp ['$Exit$28']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '0Eh']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx]']
shl ['ecx,', '18h']
mov ['edx,', '1']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_1C]']
movzx ['edx,', 'byte', 'ptr', '[eax+edx]']
shl ['edx,', '10h']
or ['ecx,', 'edx']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
shl ['eax,', '8']
or ['ecx,', 'eax']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax]']
or ['ecx,', 'eax']
add ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'ecx']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+var_14]']
jnz ['short', 'loc_A91F']
jmp ['$Exit$28']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '2']
cmp ['edx,', '[ebp+var_18]']
jbe ['short', 'loc_A949']
push ['offset', '$SG11154']
push ['97h']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$28']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
shl ['edx,', '8']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+ecx]']
or ['edx,', 'ecx']
movzx ['edx,', 'dx']
mov ['eax,', '[ebp+arg_8]']
mov ['[eax+28h],', 'edx']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '2']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_1C]']
lea ['edx,', '[ecx+eax*4]']
cmp ['edx,', '[ebp+var_18]']
jbe ['short', 'loc_A9AE']
push ['offset', '$SG11161']
push ['9Fh']
push ['2']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
jmp ['$Exit$28']
mov ['eax,', '[ebp+arg_8]']
cmp ['dword', 'ptr', '[eax+28h],', '0']
jnz ['short', 'loc_A9BC']
jmp ['$Exit$28']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+28h]']
push ['eax']
push ['0']
push ['10h']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_realloc']
add ['esp,', '18h']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+24h],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_A9EA']
jmp ['$Exit$28']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_1C]']
lea ['edx,', '[ecx+eax*4]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+5Ch]']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_AA24']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_30]']
cmp ['ecx,', '[eax+24h]']
jge ['short', 'loc_AA6C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+28h]']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_2C]']
movzx ['ecx,', 'word', 'ptr', '[eax+8]']
cmp ['ecx,', '7']
jnz ['short', 'loc_AA6A']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Set_Charmap']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AA68']
jmp ['$Exit$28']
jmp ['short', 'loc_AA6C']
jmp ['short', 'loc_AA1B']
jmp ['short', 'loc_AA77']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '4']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_18]']
jnb ['loc_AB0C']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+ecx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_FT_Get_Char_Index']
add ['esp,', '8']
mov ['edx,', '[ebp+var_20]']
mov ['[edx],', 'eax']
mov ['eax,', '1']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_1C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+eax]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Get_Char_Index']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_20]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '1']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_1C]']
movzx ['ecx,', 'byte', 'ptr', '[eax+edx+2]']
shl ['ecx,', '8']
mov ['edx,', '1']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_1C]']
movzx ['eax,', 'byte', 'ptr', '[edx+eax+2]']
or ['ecx,', 'eax']
movsx ['ecx,', 'cx']
mov ['edx,', '[ebp+var_20]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_20]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_20]']
add ['ecx,', '10h']
mov ['[ebp+var_20],', 'ecx']
jmp ['loc_AA6E']
cmp ['[ebp+var_28],', '0']
jz ['short', 'loc_AB25']
mov ['edx,', '[ebp+var_28]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_FT_Set_Charmap']
add ['esp,', '8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AB2D']
jmp ['short', '$Exit$28']
mov ['esi,', 'esp']
push ['offset', '_compare_kern_pairs']
push ['10h']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx+28h]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__qsort']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_AB85']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+24h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[edx+24h],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_AB5A']
mov ['ecx,', '[ebp+arg_8]']
mov ['dword', 'ptr', '[ecx+28h],', '0']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN27_1']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN26_1']
dd ['offset', '$LN25_0']
align ['4']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['__imp__memchr:near']
extrn ['_memcmp:near']
extrn ['_memcpy:near']
extrn ['_memset:near']
extrn ['_strcmp:near']
extrn ['_strlen:near']
extrn ['__imp__memmove:near']
extrn ['__imp__strncmp:near']
extrn ['__imp__qsort:near']
extrn ['_FT_Set_Charmap:near']
extrn ['_FT_Get_Char_Index:near']
extrn ['_FT_MulDiv:near']
extrn ['_FT_DivFix:near']
extrn ['_FT_RoundFix:near']
extrn ['_FT_Vector_Transform:near']
extrn ['_FT_Message:near']
extrn ['_FT_Panic:near']
extrn ['_FT_Throw:near']
extrn ['_FT_Get_Module:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_realloc:near']
extrn ['_ft_mem_free:near']
extrn ['_ft_mem_strcpyn:near']
extrn ['_ft_service_list_lookup:near']
extrn ['_FT_CMap_New:near']
extrn ['_FT_Get_Module_Interface:near']
extrn ['_ft_module_get_service:near']
extrn ['_FT_Request_Metrics:near']
extrn ['_ft_synthesize_vertical_metrics:near']
extrn ['_FT_Stream_Seek:near']
extrn ['_FT_Stream_Skip:near']
extrn ['_FT_Stream_Pos:near']
extrn ['_FT_Stream_Read:near']
extrn ['_FT_Stream_EnterFrame:near']
extrn ['_FT_Stream_ExitFrame:near']
extrn ['_FT_Stream_ReadUShort:near']
extrn ['_FT_Stream_ReadULongLE:near']
extrn ['_FT_Outline_Get_CBox:near']
extrn ['_FT_Outline_Translate:near']
extrn ['_FT_Outline_Transform:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['_ft_trace_levels:near']
extrn ['___security_cookie:near']
end

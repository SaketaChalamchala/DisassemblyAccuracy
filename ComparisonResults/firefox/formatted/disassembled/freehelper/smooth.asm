endp
_gray_init_cells proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+528h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+52Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+530h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+6Ch],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+70h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+74h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+60h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+64h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+68h],', '1']
pop ['ebp']
retn
align ['10h']
endp
_gray_compute_cbox proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '414h']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '[ebp+var_8]']
lea ['eax,', '[edx+ecx*8]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'word', 'ptr', '[ecx+2]']
test ['edx,', 'edx']
jg ['short', 'loc_E6']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+4Ch],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+48h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+54h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+50h],', '0']
jmp ['loc_1D6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['[ecx+4Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
mov ['[ecx+48h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ecx+54h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+54h]']
mov ['[ecx+50h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '8']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_129']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '8']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_C]']
jnb ['short', 'loc_194']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[edx+48h]']
jge ['short', 'loc_156']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+48h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[eax+4Ch]']
jle ['short', 'loc_16A']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+4Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ecx+50h]']
jge ['short', 'loc_17E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+50h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[edx+54h]']
jle ['short', 'loc_192']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_14]']
mov ['[ecx+54h],', 'edx']
jmp ['short', 'loc_120']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+48h]']
sar ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+48h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
sar ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+50h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4Ch]']
add ['ecx,', '3Fh']
sar ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+54h]']
add ['ecx,', '3Fh']
sar ['ecx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+54h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_find_cell	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
push ['esi']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+40h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', '[edx+58h]']
jle ['short', 'loc_219']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+58h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+44h]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+530h]']
lea ['ecx,', '[eax+ecx*4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_246']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_C]']
jle ['short', 'loc_248']
jmp ['short', 'loc_25F']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_C]']
jnz ['short', 'loc_254']
jmp ['short', '$Exit$10']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '0Ch']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_22E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+74h]']
cmp ['edx,', '[ecx+70h]']
jl ['short', 'loc_282']
mov ['esi,', 'esp']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__longjmp']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+74h]']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+6Ch]']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+74h]']
add ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+74h],', 'edx']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_8]']
pop ['esi']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_record_cell proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+60h]']
or ['edx,', '[ecx+64h]']
jz ['short', 'loc_33C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_gray_find_cell']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+60h]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+64h]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_set_cell	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '[eax+50h]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+4Ch]']
jle ['short', 'loc_37B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4Ch]']
mov ['[ebp+arg_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '[eax+48h]']
mov ['[ebp+arg_4],', 'ecx']
jns ['short', 'loc_390']
mov ['[ebp+arg_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+40h]']
jnz ['short', 'loc_3A6']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ecx+44h]']
jz ['short', 'loc_3E1']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+68h],', '0']
jnz ['short', 'loc_3BB']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_gray_record_cell']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+60h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+64h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx+40h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+44h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[edx+5Ch]']
jnb ['short', 'loc_400']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+58h]']
jge ['short', 'loc_400']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_407']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+68h],', 'ecx']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_start_cell proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+4Ch]']
jle ['short', 'loc_437']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4Ch]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+48h]']
jge ['short', 'loc_44E']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+48h]']
sub ['ecx,', '1']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+60h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+64h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_4]']
sub ['edx,', '[ecx+48h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+40h],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ecx+50h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+44h],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+88h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+68h],', '0']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_gray_set_cell']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['10h']
endp
_gray_render_scanline proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sar ['ecx,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_10]']
sar ['edx,', '8']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_8]']
shl ['edx,', '8']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', 'edx']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
cmp ['ecx,', '[ebp+arg_14]']
jnz ['short', 'loc_52E']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_gray_set_cell']
add ['esp,', '0Ch']
jmp ['loc_72A']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_8]']
jnz ['short', 'loc_569']
mov ['eax,', '[ebp+arg_14]']
sub ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_10]']
imul ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+60h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+60h],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+64h]']
add ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+64h],', 'edx']
jmp ['loc_72A']
mov ['ecx,', '100h']
sub ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ebp+arg_14]']
sub ['edx,', '[ebp+arg_C]']
imul ['ecx,', 'edx']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_20],', '100h']
mov ['[ebp+var_28],', '1']
cmp ['[ebp+var_24],', '0']
jge ['short', 'loc_5B4']
mov ['eax,', '[ebp+arg_14]']
sub ['eax,', '[ebp+arg_C]']
imul ['eax,', '[ebp+var_C]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_20],', '0']
mov ['[ebp+var_28],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_24]']
neg ['ecx']
mov ['[ebp+var_24],', 'ecx']
mov ['eax,', '[ebp+var_1C]']
cdq
idiv ['[ebp+var_24]']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_1C]']
cdq
idiv ['[ebp+var_24]']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '0']
jge ['short', 'loc_5E0']
mov ['edx,', '[ebp+var_14]']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_24]']
mov ['[ebp+var_18],', 'eax']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_5B4']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ebp+var_20]']
imul ['edx,', '[ebp+var_14]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+60h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+60h],', 'edx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+64h]']
add ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+64h],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_28]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_gray_set_cell']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jz ['loc_6F7']
mov ['edx,', '[ebp+arg_14]']
sub ['edx,', '[ebp+arg_C]']
add ['edx,', '[ebp+var_14]']
shl ['edx,', '8']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
cdq
idiv ['[ebp+var_24]']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
cdq
idiv ['[ebp+var_24]']
mov ['[ebp+var_30],', 'edx']
cmp ['[ebp+var_30],', '0']
jge ['short', 'loc_676']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '1']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_30],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_64A']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '[ebp+var_24]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jz ['short', 'loc_6F7']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '[ebp+var_30]']
mov ['[ebp+var_18],', 'eax']
js ['short', 'loc_6AE']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+60h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+60h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
add ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+64h],', 'ecx']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '[ebp+var_14]']
mov ['[ebp+arg_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_gray_set_cell']
add ['esp,', '0Ch']
jmp ['short', 'loc_683']
mov ['edx,', '[ebp+arg_14]']
sub ['edx,', '[ebp+arg_C]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_10]']
add ['eax,', '100h']
sub ['eax,', '[ebp+var_20]']
imul ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+60h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+60h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
add ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+64h],', 'ecx']
pop ['edi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_render_line proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+88h]']
sar ['ecx,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sar ['edx,', '8']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+84h]']
sub ['edx,', '[ecx+88h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
shl ['eax,', '8']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[edx+80h]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '[ecx+84h]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+var_8]']
jle ['short', 'loc_7CF']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_44],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_40]']
cmp ['eax,', '[edx+54h]']
jge ['short', 'loc_7E5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_44]']
cmp ['edx,', '[ecx+50h]']
jge ['short', 'loc_7EA']
jmp ['$End$24']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_8]']
jnz ['short', 'loc_81D']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+80h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_gray_render_scanline']
add ['esp,', '18h']
jmp ['$End$24']
mov ['[ebp+var_3C],', '1']
cmp ['[ebp+var_18],', '0']
jnz ['loc_94C']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+80h]']
sar ['eax,', '8']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+80h]']
sub ['eax,', 'ecx']
shl ['eax,', '1']
mov ['[ebp+var_4C],', 'eax']
mov ['[ebp+var_2C],', '100h']
cmp ['[ebp+var_1C],', '0']
jge ['short', 'loc_86E']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_3C],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_4C]']
imul ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+arg_0]']
add ['edx,', '[eax+60h]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+60h],', 'edx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+64h]']
add ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+64h],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_gray_set_cell']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_2C]']
lea ['edx,', '[ecx+eax-100h]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_4C]']
imul ['eax,', '[ebp+var_30]']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jz ['short', 'loc_915']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+60h]']
add ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+60h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+64h]']
add ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+64h],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_gray_set_cell']
add ['esp,', '0Ch']
jmp ['short', 'loc_8D0']
mov ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_10]']
lea ['edx,', '[ecx+eax-100h]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_4C]']
imul ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+60h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+60h],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+64h]']
add ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+64h],', 'ecx']
jmp ['$End$24']
mov ['eax,', '100h']
sub ['eax,', '[ebp+var_C]']
imul ['eax,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_2C],', '100h']
mov ['[ebp+var_3C],', '1']
cmp ['[ebp+var_1C],', '0']
jge ['short', 'loc_98F']
mov ['ecx,', '[ebp+var_C]']
imul ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_2C],', '0']
mov ['[ebp+var_3C],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_1C]']
neg ['edx']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_28]']
cdq
idiv ['[ebp+var_1C]']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_28]']
cdq
idiv ['[ebp+var_1C]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0']
jge ['short', 'loc_9BB']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_98F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+80h]']
add ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+80h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_gray_render_scanline']
add ['esp,', '18h']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+var_20]']
sar ['edx,', '8']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_gray_set_cell']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jz ['loc_AE6']
mov ['edx,', '[ebp+var_18]']
shl ['edx,', '8']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
cdq
idiv ['[ebp+var_1C]']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_28]']
cdq
idiv ['[ebp+var_1C]']
mov ['[ebp+var_34],', 'edx']
cmp ['[ebp+var_34],', '0']
jge ['short', 'loc_A55']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_34]']
add ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_34],', 'ecx']
xor ['edx,', 'edx']
jnz ['short', 'loc_A29']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_8]']
jz ['short', 'loc_AE6']
mov ['edx,', '[ebp+var_38]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_34]']
mov ['[ebp+var_14],', 'eax']
js ['short', 'loc_A8D']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_20]']
add ['eax,', '[ebp+var_30]']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '100h']
sub ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_gray_render_scanline']
add ['esp,', '18h']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_3C]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
sar ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_gray_set_cell']
add ['esp,', '0Ch']
jmp ['loc_A62']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '100h']
sub ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_gray_render_scanline']
add ['esp,', '18h']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+80h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+84h],', 'eax']
mov ['ecx,', '[ebp+var_8]']
shl ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+88h],', 'ecx']
pop ['edi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_split_conic proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '8']
shl ['eax,', '1']
mov ['ecx,', '8']
shl ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['eax,', '[esi+eax]']
mov ['[edx+ecx],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx]']
add ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+ecx],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '8']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax]']
add ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '8']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_10]']
mov ['[eax+edx],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx],', 'eax']
mov ['eax,', '8']
shl ['eax,', '1']
mov ['ecx,', '8']
shl ['ecx,', '2']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['eax,', '[esi+eax+4]']
mov ['[edx+ecx+4],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+4]']
add ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_14]']
mov ['[edx+ecx+4],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '8']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax+4]']
add ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '8']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_18]']
mov ['[eax+edx+4],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx+4],', 'eax']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_render_conic proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
push ['edi']
lea ['edi,', '[ebp+var_30]']
mov ['ecx,', '0Ch']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '394h']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '8Ch']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx]']
shl ['eax,', '2']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+edx],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['[ecx+edx+4],', 'eax']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
shl ['eax,', '2']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_24]']
mov ['[edx+ecx],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '2']
mov ['edx,', '8']
shl ['edx,', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[eax+edx+4],', 'ecx']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+80h]']
mov ['[edx+ecx],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+84h]']
mov ['[edx+ecx+4],', 'eax']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '8']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_24]']
mov ['ecx,', '[edx+ecx]']
mov ['edx,', '[ebp+var_24]']
add ['ecx,', '[edx+eax]']
mov ['eax,', '8']
shl ['eax,', '0']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx+eax]']
shl ['eax,', '1']
sub ['ecx,', 'eax']
jns ['short', 'loc_DF0']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '8']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_24]']
mov ['ecx,', '[edx+ecx]']
mov ['edx,', '[ebp+var_24]']
add ['ecx,', '[edx+eax]']
mov ['eax,', '8']
shl ['eax,', '0']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx+eax]']
shl ['eax,', '1']
sub ['ecx,', 'eax']
neg ['ecx']
mov ['[ebp+var_28],', 'ecx']
jmp ['short', 'loc_E20']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '8']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_24]']
mov ['ecx,', '[edx+ecx]']
mov ['edx,', '[ebp+var_24]']
add ['ecx,', '[edx+eax]']
mov ['eax,', '8']
shl ['eax,', '0']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx+eax]']
shl ['eax,', '1']
sub ['ecx,', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '8']
shl ['edx,', '1']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_24]']
mov ['edx,', '[eax+edx+4]']
mov ['eax,', '[ebp+var_24]']
add ['edx,', '[eax+ecx+4]']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+ecx+4]']
shl ['ecx,', '1']
sub ['edx,', 'ecx']
jns ['short', 'loc_E8F']
mov ['edx,', '8']
shl ['edx,', '1']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_24]']
mov ['edx,', '[eax+edx+4]']
mov ['eax,', '[ebp+var_24]']
add ['edx,', '[eax+ecx+4]']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+ecx+4]']
shl ['ecx,', '1']
sub ['edx,', 'ecx']
neg ['edx']
mov ['[ebp+var_2C],', 'edx']
jmp ['short', 'loc_EC2']
mov ['edx,', '8']
shl ['edx,', '1']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_24]']
mov ['edx,', '[eax+edx+4]']
mov ['eax,', '[ebp+var_24]']
add ['edx,', '[eax+ecx+4]']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+ecx+4]']
shl ['ecx,', '1']
sub ['edx,', 'ecx']
mov ['[ebp+var_2C],', 'edx']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_ED6']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '40h']
jge ['short', 'loc_EE1']
jmp ['$Draw$22']
mov ['edx,', '8']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_C]']
jge ['short', 'loc_F19']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_10]']
jle ['short', 'loc_F27']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '8']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[eax+edx+4]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
cmp ['edx,', '[ebp+var_C]']
jge ['short', 'loc_F46']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_14]']
cmp ['ecx,', '[ebp+var_10]']
jle ['short', 'loc_F54']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', '[ecx+54h]']
jge ['short', 'loc_F70']
mov ['edx,', '[ebp+var_10]']
sar ['edx,', '8']
mov ['eax,', '[ebp+arg_0]']
cmp ['edx,', '[eax+50h]']
jge ['short', 'loc_F75']
jmp ['$Draw$22']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_4]']
sar ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
cmp ['[ebp+var_4],', '40h']
jg ['short', 'loc_F7C']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[ebp+var_1C]']
mov ['[edx+ecx],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx+ecx*4]']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jle ['short', '$Draw$22']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['_gray_split_conic']
add ['esp,', '4']
mov ['edx,', '[ebp+var_24]']
add ['edx,', '10h']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '1']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax+edx*4-4],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_20]']
mov ['ecx,', '[ebp+var_30]']
mov ['[eax+edx*4],', 'ecx']
jmp ['short', 'loc_1036']
mov ['edx,', '8']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ecx+eax+4]']
push ['edx']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_24]']
mov ['eax,', '[edx+ecx]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_gray_render_line']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '10h']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_18],', '0']
jge ['loc_FA5']
pop ['edi']
add ['esp,', '30h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_split_cubic proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '8']
imul ['eax,', 'edx,', '6']
mov ['edx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['ecx,', '[esi+ecx]']
mov ['[edx+eax],', 'ecx']
mov ['edx,', '8']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '8']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+edx]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '8']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax]']
add ['eax,', '[ebp+var_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '8']
shl ['edx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+edx],', 'ecx']
mov ['edx,', '8']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+eax]']
add ['eax,', '[ebp+var_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '8']
imul ['eax,', 'edx,', '5']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '8']
shl ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '8']
shl ['eax,', '2']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '3']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+edx],', 'eax']
mov ['edx,', '8']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '6']
mov ['ecx,', '[ebp+arg_0]']
mov ['esi,', '[ebp+arg_0]']
mov ['eax,', '[esi+eax+4]']
mov ['[ecx+edx+4],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+edx+4]']
add ['eax,', '[ebp+var_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+ecx+4],', 'eax']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '3']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+edx+4]']
add ['eax,', '[ebp+var_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '5']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+edx+4],', 'ecx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[ebp+var_10]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '8']
shl ['edx,', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+edx+4],', 'ecx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '8']
shl ['edx,', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+edx+4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['edx,', '8']
imul ['ecx,', 'edx,', '3']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+ecx+4],', 'eax']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_render_cubic proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '50h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_50]']
mov ['ecx,', '14h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8Ch']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
shl ['edx,', '2']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+ecx],', 'edx']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx+4]']
shl ['edx,', '2']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+ecx+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ecx]']
shl ['edx,', '2']
mov ['eax,', '8']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+eax],', 'edx']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[edx+4]']
shl ['eax,', '2']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx+4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
shl ['ecx,', '2']
mov ['edx,', '8']
shl ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+edx],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
shl ['edx,', '2']
mov ['eax,', '8']
shl ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+eax+4],', 'edx']
mov ['edx,', '8']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['edx,', '[edx+80h]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '3']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['eax,', '[eax+84h]']
mov ['[edx+ecx+4],', 'eax']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+edx+4]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '8']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_1381']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_C]']
jle ['short', 'loc_138F']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+var_8]']
jge ['short', 'loc_13AE']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_C]']
jle ['short', 'loc_13BC']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '8']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+eax+4]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_8]']
jge ['short', 'loc_13DC']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_C]']
jle ['short', 'loc_13EA']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
sar ['ecx,', '8']
mov ['edx,', '[ebp+arg_0]']
cmp ['ecx,', '[edx+54h]']
jge ['short', 'loc_1406']
mov ['eax,', '[ebp+var_C]']
sar ['eax,', '8']
mov ['ecx,', '[ebp+arg_0]']
cmp ['eax,', '[ecx+50h]']
jge ['short', 'loc_140B']
jmp ['$Draw$29']
mov ['edx,', '8']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax]']
sub ['eax,', '[esi+edx]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '8']
imul ['eax,', 'edx,', '3']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax+4]']
sub ['eax,', '[esi+edx+4]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_1C],', '0']
jge ['short', 'loc_1467']
mov ['edx,', '[ebp+var_1C]']
neg ['edx']
mov ['[ebp+var_40],', 'edx']
jmp ['short', 'loc_146D']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_1C],', 'ecx']
cmp ['[ebp+var_20],', '0']
jge ['short', 'loc_1483']
mov ['edx,', '[ebp+var_20]']
neg ['edx']
mov ['[ebp+var_44],', 'edx']
jmp ['short', 'loc_1489']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
mov ['[ebp+var_20],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_20]']
jle ['short', 'loc_14A6']
imul ['eax,', '[ebp+var_20],', '3']
sar ['eax,', '3']
add ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_48],', 'eax']
jmp ['short', 'loc_14B3']
imul ['ecx,', '[ebp+var_1C],', '3']
sar ['ecx,', '3']
add ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_48]']
mov ['[ebp+var_34],', 'edx']
cmp ['[ebp+var_34],', '7FFFh']
jle ['short', 'loc_14C7']
jmp ['$Split$30']
imul ['eax,', '[ebp+var_34],', '2Ah']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '8']
shl ['ecx,', '0']
mov ['edx,', '8']
imul ['eax,', 'edx,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['esi,', '[ebp+var_4]']
mov ['ecx,', '[edx+ecx]']
sub ['ecx,', '[esi+eax]']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '8']
shl ['edx,', '0']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', '[ebp+var_4]']
mov ['edx,', '[eax+edx+4]']
sub ['edx,', '[esi+ecx+4]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_18]']
imul ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_14]']
imul ['ecx,', '[ebp+var_28]']
sub ['eax,', 'ecx']
jns ['short', 'loc_1537']
mov ['edx,', '[ebp+var_18]']
imul ['edx,', '[ebp+var_24]']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '[ebp+var_28]']
sub ['edx,', 'eax']
neg ['edx']
mov ['[ebp+var_4C],', 'edx']
jmp ['short', 'loc_154A']
mov ['ecx,', '[ebp+var_18]']
imul ['ecx,', '[ebp+var_24]']
mov ['edx,', '[ebp+var_14]']
imul ['edx,', '[ebp+var_28]']
sub ['ecx,', 'edx']
mov ['[ebp+var_4C],', 'ecx']
mov ['eax,', '[ebp+var_4C]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_38]']
cmp ['ecx,', '[ebp+var_3C]']
jle ['short', 'loc_155D']
jmp ['$Split$30']
mov ['edx,', '8']
shl ['edx,', '1']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esi,', '[ebp+var_4]']
mov ['edx,', '[eax+edx]']
sub ['edx,', '[esi+ecx]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '8']
shl ['eax,', '1']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['esi,', '[ebp+var_4]']
mov ['eax,', '[ecx+eax+4]']
sub ['eax,', '[esi+edx+4]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_18]']
imul ['ecx,', '[ebp+var_2C]']
mov ['edx,', '[ebp+var_14]']
imul ['edx,', '[ebp+var_30]']
sub ['ecx,', 'edx']
jns ['short', 'loc_15C4']
mov ['eax,', '[ebp+var_18]']
imul ['eax,', '[ebp+var_2C]']
mov ['ecx,', '[ebp+var_14]']
imul ['ecx,', '[ebp+var_30]']
sub ['eax,', 'ecx']
neg ['eax']
mov ['[ebp+var_50],', 'eax']
jmp ['short', 'loc_15D7']
mov ['edx,', '[ebp+var_18]']
imul ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_14]']
imul ['eax,', '[ebp+var_30]']
sub ['edx,', 'eax']
mov ['[ebp+var_50],', 'edx']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+var_38],', 'ecx']
mov ['edx,', '[ebp+var_38]']
cmp ['edx,', '[ebp+var_3C]']
jle ['short', 'loc_15E7']
jmp ['short', '$Split$30']
mov ['eax,', '[ebp+var_24]']
sub ['eax,', '[ebp+var_14]']
imul ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_28]']
sub ['ecx,', '[ebp+var_18]']
imul ['ecx,', '[ebp+var_28]']
add ['eax,', 'ecx']
test ['eax,', 'eax']
jg ['short', 'loc_161B']
mov ['edx,', '[ebp+var_2C]']
sub ['edx,', '[ebp+var_14]']
imul ['edx,', '[ebp+var_2C]']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '[ebp+var_18]']
imul ['eax,', '[ebp+var_30]']
add ['edx,', 'eax']
test ['edx,', 'edx']
jle ['short', 'loc_161D']
jmp ['short', '$Split$30']
jmp ['short', '$Draw$29']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['_gray_split_cubic']
add ['esp,', '4']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '18h']
mov ['[ebp+var_4],', 'edx']
jmp ['loc_140B']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+ecx+4]']
push ['eax']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+edx]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_gray_render_line']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8Ch']
cmp ['[ebp+var_4],', 'eax']
jnz ['short', 'loc_1673']
jmp ['short', 'loc_1681']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '18h']
mov ['[ebp+var_4],', 'ecx']
jmp ['loc_140B']
pop ['edi']
pop ['esi']
add ['esp,', '50h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_move_to	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
cmp ['dword', 'ptr', '[eax+68h],', '0']
jnz ['short', 'loc_16C9']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_gray_record_cell']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
shl ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
shl ['edx,', '2']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
sar ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
sar ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['_gray_start_cell']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+80h],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+84h],', 'eax']
xor ['eax,', 'eax']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_line_to	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
shl ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['_gray_render_line']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['10h']
endp
_gray_conic_to	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['_gray_render_conic']
add ['esp,', '0Ch']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['10h']
endp
_gray_cubic_to	proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
call ['_gray_render_cubic']
add ['esp,', '10h']
xor ['eax,', 'eax']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['10h']
endp
_gray_render_span proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
add ['eax,', '428h']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
imul ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
sub ['ecx,', 'edx']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jl ['short', 'loc_1818']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_8]']
imul ['ecx,', '[edx+8]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_182C']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '6']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jle ['loc_191D']
mov ['edx,', '[ebp+arg_8]']
mov ['al,', '[edx+4]']
mov ['byte', 'ptr', '[ebp+var_C+3],', 'al']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_C+3]']
test ['ecx,', 'ecx']
jz ['loc_1918']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
cmp ['eax,', '8']
jl ['short', 'loc_187B']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
push ['edx']
movzx ['eax,', 'byte', 'ptr', '[ebp+var_C+3]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
add ['edx,', '[ebp+var_4]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
jmp ['loc_1918']
mov ['eax,', '[ebp+arg_8]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
add ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '6']
ja ['short', 'loc_1918']
mov ['edx,', '[ebp+var_14]']
jmp ['ds:$LN20[edx*4]']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_C+3]']
mov ['[eax],', 'cl']
jmp ['loc_181A']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN3']
dd ['offset', '$LN4']
dd ['offset', '$LN5']
dd ['offset', '$LN6']
dd ['offset', '$LN7']
dd ['offset', '$LN8']
align ['10h']
endp
_gray_hline	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_C]']
sar ['eax,', '9']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jge ['short', 'loc_197F']
mov ['ecx,', '[ebp+var_4]']
neg ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+424h]']
and ['eax,', '2']
jz ['short', 'loc_19C1']
mov ['ecx,', '[ebp+var_4]']
and ['ecx,', '1FFh']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '100h']
jle ['short', 'loc_19AF']
mov ['edx,', '200h']
sub ['edx,', '[ebp+var_4]']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_19BF']
cmp ['[ebp+var_4],', '100h']
jnz ['short', 'loc_19BF']
mov ['[ebp+var_4],', '0FFh']
jmp ['short', 'loc_19D1']
cmp ['[ebp+var_4],', '100h']
jl ['short', 'loc_19D1']
mov ['[ebp+var_4],', '0FFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '[eax+50h]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[edx+48h]']
mov ['[ebp+arg_4],', 'eax']
cmp ['[ebp+arg_4],', '7FFFh']
jl ['short', 'loc_19F9']
mov ['[ebp+arg_4],', '7FFFh']
cmp ['[ebp+arg_8],', '7FFFFFFFh']
jl ['short', 'loc_1A09']
mov ['[ebp+arg_8],', '7FFFFFFFh']
cmp ['[ebp+var_4],', '0']
jz ['loc_1C0B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+510h]']
mov ['[ebp+var_C],', 'edx']
imul ['eax,', '[ebp+var_C],', '6']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[ecx+eax+44Ah]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_C],', '0']
jle ['short', 'loc_1A7A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+51Ch]']
cmp ['ecx,', '[ebp+arg_8]']
jnz ['short', 'loc_1A7A']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
add ['eax,', 'edx']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_1A7A']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
cmp ['ecx,', '[ebp+var_4]']
jnz ['short', 'loc_1A7A']
mov ['edx,', '[ebp+var_8]']
movzx ['eax,', 'word', 'ptr', '[edx+2]']
add ['eax,', '[ebp+arg_10]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+2],', 'ax']
jmp ['loc_1C0B']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+51Ch]']
cmp ['eax,', '[ebp+arg_8]']
jnz ['short', 'loc_1A92']
cmp ['[ebp+var_C],', '20h']
jl ['loc_1BCF']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+514h],', '0']
jz ['short', 'loc_1ADD']
cmp ['[ebp+var_C],', '0']
jle ['short', 'loc_1ADD']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+518h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '450h']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+51Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+514h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
cmp ['[ebp+var_C],', '0']
jle ['loc_1BA8']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '7']
jl ['short', 'loc_1B0F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+51Ch]']
push ['ecx']
push ['offset', '$SG7653']
call ['_FT_Message']
add ['esp,', '8']
xor ['edx,', 'edx']
jnz ['short', 'loc_1AE7']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '450h']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1B39']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+var_C]']
jge ['short', 'loc_1B86']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '7']
jl ['short', 'loc_1B80']
mov ['eax,', '[ebp+var_8]']
movzx ['ecx,', 'byte', 'ptr', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
movsx ['eax,', 'word', 'ptr', '[edx]']
mov ['ecx,', '[ebp+var_8]']
movzx ['edx,', 'word', 'ptr', '[ecx+2]']
lea ['eax,', '[eax+edx-1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
push ['edx']
push ['offset', '$SG7661']
call ['_FT_Message']
add ['esp,', '10h']
xor ['eax,', 'eax']
jnz ['short', 'loc_1B41']
jmp ['short', 'loc_1B27']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '7']
jl ['short', 'loc_1BA4']
push ['offset', '$SG7666']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_1B86']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+510h],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx+51Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '450h']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_1BD8']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '6']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['cx,', 'word', 'ptr', '[ebp+arg_4]']
mov ['[eax],', 'cx']
mov ['edx,', '[ebp+var_8]']
mov ['ax,', 'word', 'ptr', '[ebp+arg_10]']
mov ['[edx+2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_4]']
mov ['[ecx+4],', 'dl']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+510h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+510h],', 'ecx']
pop ['esi']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_sweep	proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+74h],', '0']
jnz ['short', 'loc_1C55']
jmp ['loc_1EE2']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+510h],', '0']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '7']
jl ['short', 'loc_1C80']
push ['offset', '$SG7700']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_1C62']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1C96']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ecx+534h]']
jge ['loc_1D92']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+530h]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+edx*4]']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_C],', '0']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_1CD3']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '0']
jz ['loc_1D62']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+var_10]']
jle ['short', 'loc_1D11']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1D11']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
sub ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '9']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_gray_hline']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '9']
mov ['edx,', '[ebp+var_8]']
sub ['ecx,', '[edx+8]']
mov ['[ebp+var_14],', 'ecx']
jz ['short', 'loc_1D52']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jl ['short', 'loc_1D52']
push ['1']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_gray_hline']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
jmp ['loc_1CCA']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1D8D']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+58h]']
sub ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '9']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_gray_hline']
add ['esp,', '14h']
jmp ['loc_1C8D']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+514h],', '0']
jz ['short', 'loc_1DE8']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+510h],', '0']
jle ['short', 'loc_1DE8']
mov ['esi,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+518h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '450h']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+510h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+51Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+514h]']
call ['eax']
add ['esp,', '10h']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+510h],', '0']
jle ['loc_1EC0']
mov ['edx,', '4']
imul ['eax,', 'edx,', '0Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[eax],', '7']
jl ['short', 'loc_1E20']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+51Ch]']
push ['edx']
push ['offset', '$SG7723']
call ['_FT_Message']
add ['esp,', '8']
xor ['eax,', 'eax']
jnz ['short', 'loc_1DF8']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '450h']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_1E4B']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '1']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '6']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ecx+510h]']
jge ['short', 'loc_1E9E']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '7']
jl ['short', 'loc_1E98']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
movsx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+var_18]']
movzx ['ecx,', 'word', 'ptr', '[eax+2]']
lea ['edx,', '[edx+ecx-1]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
movsx ['ecx,', 'word', 'ptr', '[eax]']
push ['ecx']
push ['offset', '$SG7731']
call ['_FT_Message']
add ['esp,', '10h']
xor ['edx,', 'edx']
jnz ['short', 'loc_1E59']
jmp ['short', 'loc_1E39']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '7']
jl ['short', 'loc_1EBC']
push ['offset', '$SG7736']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_1E9E']
mov ['eax,', '4']
imul ['ecx,', 'eax,', '0Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[ecx],', '7']
jl ['short', 'loc_1EDE']
push ['offset', '$SG7741']
call ['_FT_Message']
add ['esp,', '4']
xor ['edx,', 'edx']
jnz ['short', 'loc_1EC0']
pop ['esi']
add ['esp,', '1Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_convert_glyph_inner proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['0']
push ['eax']
call ['__setjmp3']
add ['esp,', '8']
test ['eax,', 'eax']
jnz ['short', 'loc_1F59']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['offset', '_func_interface']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '414h']
push ['edx']
call ['_FT_Outline_Decompose']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+68h],', '0']
jnz ['short', 'loc_1F57']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['_gray_record_cell']
add ['esp,', '4']
jmp ['short', 'loc_1F73']
push ['offset', '$SG7760']
push ['6EEh']
push ['40h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '40h']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_convert_glyph proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18Ch']
push ['edi']
lea ['edi,', '[ebp+var_18C]']
mov ['ecx,', '63h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_gray_compute_cbox']
add ['esp,', '4']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '440h']
mov ['[ebp+var_168],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[edx+4Ch]']
cmp ['ecx,', '[eax]']
jle ['short', 'loc_2004']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[edx+48h]']
cmp ['ecx,', '[eax+8]']
jge ['short', 'loc_2004']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[edx+54h]']
cmp ['ecx,', '[eax+4]']
jle ['short', 'loc_2004']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[edx+50h]']
cmp ['ecx,', '[eax+0Ch]']
jl ['short', 'loc_200B']
xor ['eax,', 'eax']
jmp ['loc_24FF']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[edx+48h]']
cmp ['ecx,', '[eax]']
jge ['short', 'loc_2029']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[eax]']
mov ['[edx+48h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[edx+50h]']
cmp ['ecx,', '[eax+4]']
jge ['short', 'loc_2049']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[eax+4]']
mov ['[edx+50h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[edx+4Ch]']
cmp ['ecx,', '[eax+8]']
jle ['short', 'loc_2069']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[eax+8]']
mov ['[edx+4Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[edx+54h]']
cmp ['ecx,', '[eax+0Ch]']
jle ['short', 'loc_2089']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_168]']
mov ['ecx,', '[eax+0Ch]']
mov ['[edx+54h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+4Ch]']
sub ['ecx,', '[eax+48h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+58h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+54h]']
sub ['edx,', '[ecx+50h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+5Ch],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+54h]']
sub ['eax,', '[edx+50h]']
mov ['ecx,', '[ebp+arg_0]']
cdq
idiv ['dword', 'ptr', '[ecx+520h]']
mov ['[ebp+var_158],', 'eax']
cmp ['[ebp+var_158],', '0']
jnz ['short', 'loc_20DC']
mov ['[ebp+var_158],', '1']
cmp ['[ebp+var_158],', '27h']
jl ['short', 'loc_20EF']
mov ['[ebp+var_158],', '27h']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+524h],', '0']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+50h]']
mov ['[ebp+var_15C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+54h]']
mov ['[ebp+var_164],', 'eax']
mov ['[ebp+var_154],', '0']
jmp ['short', 'loc_213B']
mov ['ecx,', '[ebp+var_154]']
add ['ecx,', '1']
mov ['[ebp+var_154],', 'ecx']
mov ['edx,', '[ebp+var_160]']
mov ['[ebp+var_15C],', 'edx']
mov ['eax,', '[ebp+var_158]']
cmp ['[ebp+var_154],', 'eax']
jge ['loc_24CE']
mov ['ecx,', '[ebp+var_15C]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+520h]']
mov ['[ebp+var_160],', 'ecx']
mov ['eax,', '[ebp+var_158]']
sub ['eax,', '1']
cmp ['[ebp+var_154],', 'eax']
jz ['short', 'loc_2181']
mov ['ecx,', '[ebp+var_164]']
cmp ['[ebp+var_160],', 'ecx']
jle ['short', 'loc_218D']
mov ['edx,', '[ebp+var_164]']
mov ['[ebp+var_160],', 'edx']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_15C]']
mov ['[ebp+ecx+var_148],', 'edx']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_160]']
mov ['[ebp+ecx+var_144],', 'edx']
lea ['eax,', '[ebp+var_148]']
mov ['[ebp+var_150],', 'eax']
lea ['ecx,', '[ebp+var_148]']
cmp ['[ebp+var_150],', 'ecx']
jb ['loc_24C9']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+528h]']
mov ['[edx+530h],', 'ecx']
mov ['edx,', '[ebp+var_150]']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[edx+4]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+534h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+534h]']
shl ['ecx,', '2']
mov ['[ebp+var_184],', 'ecx']
mov ['eax,', '[ebp+var_184]']
xor ['edx,', 'edx']
mov ['ecx,', '10h']
div ['ecx']
mov ['[ebp+var_18C],', 'edx']
cmp ['[ebp+var_18C],', '0']
jle ['short', 'loc_2248']
mov ['edx,', '10h']
sub ['edx,', '[ebp+var_18C]']
add ['edx,', '[ebp+var_184]']
mov ['[ebp+var_184],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+52Ch]']
mov ['[ebp+var_188],', 'ecx']
mov ['eax,', '[ebp+var_188]']
xor ['edx,', 'edx']
mov ['ecx,', '10h']
div ['ecx']
mov ['eax,', '[ebp+var_188]']
sub ['eax,', 'edx']
mov ['[ebp+var_188],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+528h]']
add ['edx,', '[ebp+var_188]']
mov ['[ebp+var_17C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+528h]']
add ['ecx,', '[ebp+var_184]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+6Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+6Ch]']
cmp ['ecx,', '[ebp+var_17C]']
jb ['short', 'loc_22B1']
jmp ['$ReduceBands$38']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_17C]']
sub ['eax,', '[edx+6Ch]']
sar ['eax,', '4']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+70h],', 'eax']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+70h],', '2']
jge ['short', 'loc_22D4']
jmp ['$ReduceBands$38']
mov ['[ebp+var_180],', '0']
jmp ['short', 'loc_22EF']
mov ['eax,', '[ebp+var_180]']
add ['eax,', '1']
mov ['[ebp+var_180],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_180]']
cmp ['edx,', '[ecx+534h]']
jge ['short', 'loc_2318']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+530h]']
mov ['edx,', '[ebp+var_180]']
mov ['dword', 'ptr', '[ecx+edx*4],', '0']
jmp ['short', 'loc_22E0']
mov ['eax,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[eax+74h],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[ecx+68h],', '1']
mov ['edx,', '[ebp+var_150]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx]']
mov ['[eax+50h],', 'ecx']
mov ['edx,', '[ebp+var_150]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+4]']
mov ['[eax+54h],', 'ecx']
mov ['edx,', '[ebp+var_150]']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[edx+4]']
sub ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+5Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_gray_convert_glyph_inner']
add ['esp,', '4']
mov ['[ebp+var_178],', 'eax']
cmp ['[ebp+var_178],', '0']
jnz ['short', 'loc_23A7']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '428h']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_gray_sweep']
add ['esp,', '8']
mov ['eax,', '[ebp+var_150]']
sub ['eax,', '8']
mov ['[ebp+var_150],', 'eax']
jmp ['loc_21C3']
jmp ['short', '$ReduceBands$38']
cmp ['[ebp+var_178],', '40h']
jz ['short', '$ReduceBands$38']
mov ['eax,', '1']
jmp ['loc_24FF']
mov ['ecx,', '[ebp+var_150]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_16C],', 'edx']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_170],', 'ecx']
mov ['edx,', '[ebp+var_170]']
sub ['edx,', '[ebp+var_16C]']
sar ['edx,', '1']
add ['edx,', '[ebp+var_16C]']
mov ['[ebp+var_174],', 'edx']
mov ['eax,', '[ebp+var_174]']
cmp ['eax,', '[ebp+var_16C]']
jnz ['short', 'loc_242B']
mov ['ecx,', '4']
imul ['edx,', 'ecx,', '0Ch']
cmp ['dword', 'ptr', 'ds:_ft_trace_levels[edx],', '7']
jl ['short', 'loc_241D']
push ['offset', '$SG7824']
call ['_FT_Message']
add ['esp,', '4']
xor ['eax,', 'eax']
jnz ['short', 'loc_23FF']
mov ['eax,', '1']
jmp ['loc_24FF']
mov ['ecx,', '[ebp+var_16C]']
sub ['ecx,', '[ebp+var_170]']
mov ['edx,', '[ebp+arg_0]']
cmp ['ecx,', '[edx+520h]']
jl ['short', 'loc_2457']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+524h]']
add ['ecx,', '1']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+524h],', 'ecx']
mov ['eax,', '8']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_150]']
mov ['edx,', '[ebp+var_16C]']
mov ['[ecx+eax],', 'edx']
mov ['eax,', '8']
shl ['eax,', '0']
mov ['ecx,', '[ebp+var_150]']
mov ['edx,', '[ebp+var_174]']
mov ['[ecx+eax+4],', 'edx']
mov ['eax,', '8']
imul ['ecx,', 'eax,', '0']
mov ['edx,', '[ebp+var_150]']
mov ['eax,', '[ebp+var_174]']
mov ['[edx+ecx],', 'eax']
mov ['ecx,', '8']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_150]']
mov ['ecx,', '[ebp+var_170]']
mov ['[eax+edx+4],', 'ecx']
mov ['edx,', '[ebp+var_150]']
add ['edx,', '8']
mov ['[ebp+var_150],', 'edx']
jmp ['loc_21C3']
jmp ['loc_2120']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+524h],', '8']
jle ['short', 'loc_24FD']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+520h],', '10h']
jle ['short', 'loc_24FD']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+520h]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+520h],', 'eax']
xor ['eax,', 'eax']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN37']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '18Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
dd ['offset', '$LN36']
dd ['offset', '$LN35']
align ['10h']
endp
_gray_raster_render proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', '0CCCCCCCCh']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2593']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_2593']
mov ['edx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_25AF']
push ['offset', '$SG7839']
push ['787h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_2888']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_25D1']
push ['offset', '$SG7841']
push ['78Ah']
push ['14h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '14h']
jmp ['loc_2888']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_25E6']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'word', 'ptr', '[edx]']
test ['eax,', 'eax']
jg ['short', 'loc_25ED']
xor ['eax,', 'eax']
jmp ['loc_2888']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jz ['short', 'loc_25FF']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jnz ['short', 'loc_261B']
push ['offset', '$SG7846']
push ['791h']
push ['14h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '14h']
jmp ['loc_2888']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'word', 'ptr', '[eax+2]']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'word', 'ptr', '[edx]']
mov ['edx,', '[ebp+var_4]']
mov ['edx,', '[edx+0Ch]']
movsx ['eax,', 'word', 'ptr', '[edx+eax*2-2]']
add ['eax,', '1']
cmp ['ecx,', 'eax']
jz ['short', 'loc_2656']
push ['offset', '$SG7848']
push ['795h']
push ['14h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '14h']
jmp ['loc_2888']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+10h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+8]']
and ['ecx,', '2']
jnz ['short', 'loc_26C9']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_268C']
push ['offset', '$SG7851']
push ['79Dh']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_2888']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_269D']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_26A4']
xor ['eax,', 'eax']
jmp ['loc_2888']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '0']
jnz ['short', 'loc_26C9']
push ['offset', '$SG7855']
push ['7A4h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
jmp ['loc_2888']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
and ['eax,', '1']
jnz ['short', 'loc_26F0']
push ['offset', '$SG7857']
push ['7A9h']
push ['13h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '13h']
jmp ['loc_2888']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
and ['edx,', '2']
jnz ['short', 'loc_2734']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+440h],', '0']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+444h],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['[edx+448h],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[edx+44Ch],', 'ecx']
jmp ['short', 'loc_279A']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
and ['eax,', '4']
jz ['short', 'loc_2766']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '20h']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '440h']
mov ['eax,', '[ecx]']
mov ['[edx],', 'eax']
mov ['eax,', '[ecx+4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ecx+8]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ecx+0Ch]']
mov ['[edx+0Ch],', 'ecx']
jmp ['short', 'loc_279A']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+440h],', '0FFFF8000h']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+444h],', '0FFFF8000h']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+448h],', '7FFFh']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+44Ch],', '7FFFh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['_gray_init_cells']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '414h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[edx],', 'ecx']
mov ['ecx,', '[eax+4]']
mov ['[edx+4],', 'ecx']
mov ['ecx,', '[eax+8]']
mov ['[edx+8],', 'ecx']
mov ['ecx,', '[eax+0Ch]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[eax+10h]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+74h],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+68h],', '1']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+8]']
mov ['[eax+520h],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['dword', 'ptr', '[eax+510h],', '0']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
and ['edx,', '2']
jz ['short', 'loc_2836']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+514h],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+1Ch]']
mov ['[eax+518h],', 'edx']
jmp ['short', 'loc_287C']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '428h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['edx,', '[ecx+8]']
mov ['[eax+8],', 'edx']
mov ['edx,', '[ecx+0Ch]']
mov ['[eax+0Ch],', 'edx']
mov ['edx,', '[ecx+10h]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ecx+14h]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+514h],', 'offset', '_gray_render_span']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+518h],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
call ['_gray_convert_glyph']
add ['esp,', '4']
add ['esp,', '0Ch']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_raster_new proc near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['eax,', '0CCCCCCCCh']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'eax']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
push ['14h']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_28F3']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['eax,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN6_0']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
add ['esp,', '10h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN5_0']
dd ['offset', '$LN4_0']
align ['10h']
endp
_gray_raster_done proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['[ebp+arg_0],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_2954']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_raster_reset proc	near		
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2A0E']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_29F1']
cmp ['[ebp+arg_8],', '0D38h']
jl ['short', 'loc_29F1']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '540h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+var_4]']
sub ['eax,', '[ecx]']
and ['eax,', '0FFFFFFF0h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
shr ['ecx,', '7']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'ecx']
jmp ['short', 'loc_2A0E']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_gray_raster_set_mode proc near		
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_8],', 'edx']
xor ['eax,', 'eax']
pop ['ebp']
retn
align ['10h']
endp
_ft_smooth_init	proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', 'esp']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0A8h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0A4h]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[eax+38h]']
mov ['edx,', '[ecx+8]']
call ['edx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
xor ['eax,', 'eax']
pop ['esi']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_smooth_set_mode proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['esi']
mov ['esi,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+34h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[edx+38h]']
mov ['ecx,', '[eax+0Ch]']
call ['ecx']
add ['esp,', '0Ch']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
pop ['esi']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['10h']
endp
_ft_smooth_transform proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+48h]']
cmp ['edx,', '[ecx+10h]']
jz ['short', 'loc_2B19']
push ['offset', '$SG7962']
push ['45h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_4],', 'eax']
jmp ['short', '$Exit$6']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_2B32']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '6Ch']
push ['ecx']
call ['_FT_Outline_Transform']
add ['esp,', '8']
cmp ['[ebp+arg_C],', '0']
jz ['short', '$Exit$6']
mov ['edx,', '[ebp+arg_C]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '6Ch']
push ['eax']
call ['_FT_Outline_Translate']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_smooth_get_cbox proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['10h']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+48h]']
cmp ['eax,', '[edx+10h]']
jnz ['short', 'loc_2BA4']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '6Ch']
push ['edx']
call ['_FT_Outline_Get_CBox']
add ['esp,', '8']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['10h']
endp
_ft_smooth_render_generic proc near	
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0C4h']
push ['esi']
push ['edi']
lea ['edi,', '[ebp+var_C4]']
mov ['ecx,', '31h']
mov ['eax,', '0CCCCCCCCh']
rep ['stosd']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '6Ch']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '4Ch']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_38],', '0']
mov ['[ebp+var_3C],', '0']
cmp ['[ebp+arg_8],', '3']
jnz ['short', 'loc_2C12']
mov ['[ebp+var_C0],', '1']
jmp ['short', 'loc_2C1C']
mov ['[ebp+var_C0],', '0']
mov ['ecx,', '[ebp+var_C0]']
mov ['[ebp+var_5C],', 'ecx']
cmp ['[ebp+arg_8],', '4']
jnz ['short', 'loc_2C37']
mov ['[ebp+var_C4],', '1']
jmp ['short', 'loc_2C41']
mov ['[ebp+var_C4],', '0']
mov ['edx,', '[ebp+var_C4]']
mov ['[ebp+var_60],', 'edx']
mov ['[ebp+var_99],', '0']
mov ['[ebp+var_9A],', '0']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+48h]']
cmp ['edx,', '[ecx+10h]']
jz ['short', 'loc_2C85']
push ['offset', '$SG8007']
push ['81h']
push ['6']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '6']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$46']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+arg_10]']
jz ['short', 'loc_2CAC']
push ['offset', '$SG8010']
push ['88h']
push ['13h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '13h']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$46']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_2CC3']
mov ['ecx,', '[ebp+arg_C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+arg_C]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_3C],', 'ecx']
lea ['edx,', '[ebp+var_30]']
push ['edx']
mov ['eax,', '[ebp+var_14]']
push ['eax']
call ['_FT_Outline_Get_CBox']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '[ebp+var_38]']
and ['ecx,', '0FFFFFFC0h']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '[ebp+var_3C]']
and ['edx,', '0FFFFFFC0h']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_28]']
lea ['edx,', '[ecx+eax+3Fh]']
and ['edx,', '0FFFFFFC0h']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_24]']
lea ['edx,', '[ecx+eax+3Fh]']
and ['edx,', '0FFFFFFC0h']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_38]']
sub ['eax,', '[ebp+var_30]']
mov ['[ebp+var_38],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
sub ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+var_30]']
sar ['edx,', '6']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_24]']
sar ['eax,', '6']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_28]']
sub ['ecx,', '[ebp+var_30]']
shr ['ecx,', '6']
mov ['[ebp+var_48],', 'ecx']
mov ['edx,', '[ebp+var_24]']
sub ['edx,', '[ebp+var_2C]']
shr ['edx,', '6']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['[ebp+var_54],', 'ecx']
mov ['edx,', '[ebp+var_48]']
mov ['[ebp+var_50],', 'edx']
cmp ['[ebp+var_5C],', '0']
jz ['short', 'loc_2D72']
imul ['eax,', '[ebp+var_48],', '3']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_48]']
add ['ecx,', '3']
and ['ecx,', '0FFFFFFFCh']
mov ['[ebp+var_50],', 'ecx']
cmp ['[ebp+var_60],', '0']
jz ['short', 'loc_2D7F']
imul ['edx,', '[ebp+var_4C],', '3']
mov ['[ebp+var_4C],', 'edx']
cmp ['[ebp+var_40],', '7FFFFFFFh']
jg ['short', 'loc_2DA3']
cmp ['[ebp+var_44],', '7FFFFFFFh']
jg ['short', 'loc_2DA3']
cmp ['[ebp+var_40],', '80000000h']
jl ['short', 'loc_2DA3']
cmp ['[ebp+var_44],', '80000000h']
jge ['short', 'loc_2DC2']
push ['offset', '$SG8018']
push ['0D3h']
push ['17h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '17h']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$46']
cmp ['[ebp+var_48],', '7FFFh']
jg ['short', 'loc_2DD4']
cmp ['[ebp+var_4C],', '7FFFh']
jle ['short', 'loc_2E08']
mov ['eax,', '[ebp+var_4C]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
push ['offset', '$SG8021']
call ['_FT_Message']
add ['esp,', '0Ch']
push ['offset', '$SG8022']
push ['0DDh']
push ['62h']
call ['_FT_Throw']
add ['esp,', '0Ch']
or ['eax,', '62h']
mov ['[ebp+var_C],', 'eax']
jmp ['$Exit$46']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+9Ch]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '1']
jz ['short', 'loc_2E55']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['edx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
xor ['eax,', 'eax']
jnz ['short', 'loc_2E19']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+9Ch]']
mov ['eax,', '[edx+4]']
and ['eax,', '0FFFFFFFEh']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+9Ch]']
mov ['[edx+4],', 'eax']
lea ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_50]']
imul ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_ft_mem_alloc']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_18]']
mov ['[ecx+0Ch],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2E80']
jmp ['$Exit$46']
jmp ['short', 'loc_2E87']
mov ['[ebp+var_9A],', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+9Ch]']
mov ['ecx,', '[eax+4]']
or ['ecx,', '1']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+9Ch]']
mov ['[eax+4],', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[ecx+48h],', '62697473h']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+var_40]']
mov ['[edx+64h],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+var_44]']
mov ['[ecx+68h],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['byte', 'ptr', '[eax+12h],', '2']
mov ['ecx,', '100h']
mov ['edx,', '[ebp+var_18]']
mov ['[edx+10h],', 'cx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_48]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_4C]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_50]']
mov ['[ecx+8],', 'edx']
cmp ['[ebp+var_38],', '0']
jnz ['short', 'loc_2EF7']
cmp ['[ebp+var_3C],', '0']
jz ['short', 'loc_2F12']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
call ['_FT_Outline_Translate']
add ['esp,', '0Ch']
mov ['[ebp+var_99],', '1']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_94],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_90],', 'ecx']
mov ['[ebp+var_8C],', '1']
mov ['esi,', 'esp']
lea ['edx,', '[ebp+var_94]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
call ['eax']
add ['esp,', '8']
cmp ['esi,', 'esp']
call ['__RTC_CheckEsp']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2F5E']
jmp ['$Exit$46']
cmp ['[ebp+var_5C],', '0']
jz ['loc_3050']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_A4],', 'eax']
jmp ['short', 'loc_2F9D']
mov ['ecx,', '[ebp+var_A4]']
sub ['ecx,', '1']
mov ['[ebp+var_A4],', 'ecx']
mov ['edx,', '[ebp+var_A0]']
add ['edx,', '[ebp+var_50]']
mov ['[ebp+var_A0],', 'edx']
cmp ['[ebp+var_A4],', '0']
jbe ['loc_3050']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '[ebp+var_48]']
mov ['[ebp+var_AC],', 'eax']
mov ['ecx,', '[ebp+var_58]']
mov ['[ebp+var_A8],', 'ecx']
jmp ['short', 'loc_2FD3']
mov ['edx,', '[ebp+var_A8]']
sub ['edx,', '1']
mov ['[ebp+var_A8],', 'edx']
cmp ['[ebp+var_A8],', '0']
jbe ['short', 'loc_304B']
mov ['eax,', '[ebp+var_A0]']
add ['eax,', '[ebp+var_A8]']
movzx ['ecx,', 'byte', 'ptr', '[eax-1]']
mov ['[ebp+var_B0],', 'ecx']
mov ['edx,', '1']
imul ['eax,', 'edx,', '-3']
mov ['ecx,', '[ebp+var_AC]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[ecx+eax],', 'dl']
mov ['eax,', '1']
imul ['ecx,', 'eax,', '-2']
mov ['edx,', '[ebp+var_AC]']
mov ['al,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[edx+ecx],', 'al']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '-1']
mov ['eax,', '[ebp+var_AC]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[eax+edx],', 'cl']
mov ['edx,', '[ebp+var_AC]']
sub ['edx,', '3']
mov ['[ebp+var_AC],', 'edx']
jmp ['loc_2FC4']
jmp ['loc_2F7F']
cmp ['[ebp+var_60],', '0']
jz ['loc_3132']
mov ['eax,', '[ebp+var_4C]']
sub ['eax,', '[ebp+var_54]']
imul ['eax,', '[ebp+var_50]']
mov ['ecx,', '[ebp+var_18]']
add ['eax,', '[ecx+0Ch]']
mov ['[ebp+var_B4],', 'eax']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0Ch]']
mov ['[ebp+var_B8],', 'eax']
mov ['ecx,', '[ebp+var_54]']
mov ['[ebp+var_BC],', 'ecx']
jmp ['short', 'loc_3096']
mov ['edx,', '[ebp+var_BC]']
sub ['edx,', '1']
mov ['[ebp+var_BC],', 'edx']
cmp ['[ebp+var_BC],', '0']
jbe ['loc_3132']
mov ['eax,', '[ebp+var_50]']
push ['eax']
mov ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['edx,', '[ebp+var_B8]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_B8]']
add ['eax,', '[ebp+var_50]']
mov ['[ebp+var_B8],', 'eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
mov ['eax,', '[ebp+var_B8]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_B8]']
add ['ecx,', '[ebp+var_50]']
mov ['[ebp+var_B8],', 'ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
mov ['eax,', '[ebp+var_B4]']
push ['eax']
mov ['ecx,', '[ebp+var_B8]']
push ['ecx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_B8]']
add ['edx,', '[ebp+var_50]']
mov ['[ebp+var_B8],', 'edx']
mov ['eax,', '[ebp+var_B4]']
add ['eax,', '[ebp+var_50]']
mov ['[ebp+var_B4],', 'eax']
jmp ['loc_3087']
mov ['[ebp+var_9A],', '0']
mov ['[ebp+var_C],', '0']
movzx ['ecx,', '[ebp+var_99]']
test ['ecx,', 'ecx']
jz ['short', 'loc_3163']
mov ['edx,', '[ebp+var_3C]']
neg ['edx']
push ['edx']
mov ['eax,', '[ebp+var_38]']
neg ['eax']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['_FT_Outline_Translate']
add ['esp,', '0Ch']
movzx ['edx,', '[ebp+var_9A]']
test ['edx,', 'edx']
jz ['short', 'loc_31AA']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
call ['_ft_mem_free']
add ['esp,', '8']
mov ['eax,', '[ebp+var_18]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_316E']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+9Ch]']
mov ['ecx,', '[eax+4]']
and ['ecx,', '0FFFFFFFEh']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+9Ch]']
mov ['[eax+4],', 'ecx']
mov ['eax,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', 'ebp']
push ['eax']
lea ['edx,', '$LN45']
call ['@_RTC_CheckStackVars@8']
pop ['eax']
pop ['edx']
pop ['edi']
pop ['esi']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
add ['esp,', '0C4h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
dd ['offset', '$LN44']
dd ['offset', '$LN41']
dd ['0FFFFFFD0h,', '10h']
dd ['offset', '$LN42']
dd ['0FFFFFF6Ch,', '30h']
dd ['offset', '$LN43']
align ['10h']
endp
_ft_smooth_render proc near		
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_3230']
mov ['[ebp+arg_8],', '0']
push ['0']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ft_smooth_render_generic']
add ['esp,', '14h']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
pop ['ebp']
retn
align ['10h']
endp
_ft_smooth_render_lcd proc near		
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['3']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ft_smooth_render_generic']
add ['esp,', '14h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_3295']
mov ['ecx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[ecx+5Eh],', '5']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['10h']
endp
_ft_smooth_render_lcd_v	proc near	
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0CCCCCCCCh']
push ['4']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_ft_smooth_render_generic']
add ['esp,', '14h']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_32E5']
mov ['ecx,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[ecx+5Eh],', '6']
mov ['eax,', '[ebp+var_4]']
add ['esp,', '4']
cmp ['ebp,', 'esp']
call ['__RTC_CheckEsp']
mov ['esp,', 'ebp']
pop ['ebp']
retn
align ['4']
assume ['cs:_data']
align ['4']
align ['4']
align ['4']
align ['10h']
align ['4']
align ['4']
align ['10h']
align ['4']
align ['4']
align ['10h']
align ['4']
align ['4']
align ['4']
align ['10h']
align ['4']
align ['4']
align ['4']
align ['10h']
align ['4']
align ['4']
align ['4']
align ['10h']
align ['4']
align ['4']
align ['10h']
align ['4']
align ['4']
assume ['cs:_rdata']
dd ['offset', '_gray_line_to']
dd ['offset', '_gray_conic_to']
dd ['offset', '_gray_cubic_to']
dd ['2', 'dup(0)']
public ['_ft_smooth_renderer_class']
dd ['offset', '$SG8109']
dd ['10000h,', '20000h,', '0']
dd ['offset', '_ft_smooth_init']
dd ['2', 'dup(0)']
dd ['6F75746Ch']
dd ['offset', '_ft_smooth_render']
dd ['offset', '_ft_smooth_transform']
dd ['offset', '_ft_smooth_get_cbox']
dd ['offset', '_ft_smooth_set_mode']
dd ['offset', '_ft_grays_raster']
public ['_ft_smooth_lcd_renderer_class']
dd ['offset', '$SG8119']
dd ['10000h,', '20000h,', '0']
dd ['offset', '_ft_smooth_init']
dd ['2', 'dup(0)']
dd ['6F75746Ch']
dd ['offset', '_ft_smooth_render_lcd']
dd ['offset', '_ft_smooth_transform']
dd ['offset', '_ft_smooth_get_cbox']
dd ['offset', '_ft_smooth_set_mode']
dd ['offset', '_ft_grays_raster']
public ['_ft_grays_raster']
dd ['offset', '_gray_raster_new']
dd ['offset', '_gray_raster_reset']
dd ['offset', '_gray_raster_set_mode']
dd ['offset', '_gray_raster_render']
dd ['offset', '_gray_raster_done']
public ['_ft_smooth_lcdv_renderer_class']
dd ['offset', '$SG8130']
dd ['10000h,', '20000h,', '0']
dd ['offset', '_ft_smooth_init']
dd ['2', 'dup(0)']
dd ['6F75746Ch']
dd ['offset', '_ft_smooth_render_lcd_v']
dd ['offset', '_ft_smooth_transform']
dd ['offset', '_ft_smooth_get_cbox']
dd ['offset', '_ft_smooth_set_mode']
dd ['offset', '_ft_grays_raster']
assume ['cs:_rtc$IMZ']
assume ['cs:_rtc$TMZ']
extrn ['_memcpy:near']
extrn ['_memset:near']
extrn ['__imp__longjmp:near']
extrn ['_ft_mem_alloc:near']
extrn ['_ft_mem_free:near']
extrn ['_FT_Message:near']
extrn ['_FT_Throw:near']
extrn ['_FT_Outline_Decompose:near']
extrn ['_FT_Outline_Get_CBox:near']
extrn ['_FT_Outline_Translate:near']
extrn ['_FT_Outline_Transform:near']
extrn ['@_RTC_CheckStackVars@8:near']
extrn ['@__security_check_cookie@4:near']
extrn ['__RTC_CheckEsp:near']
extrn ['__RTC_InitBase:near']
extrn ['__RTC_Shutdown:near']
extrn ['__setjmp3:near']
extrn ['_ft_trace_levels:near']
extrn ['___security_cookie:near']
end
